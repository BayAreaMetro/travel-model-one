<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='TripDistance Extract' inline='true' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>4</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Automobiles &lt; workers&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zero automobiles&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>4</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>4.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;$30k to $60k&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;More than $100k&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeCode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeCode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AM&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;PM&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeperiod_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeperiod_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeperiod_label</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AM Peak&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;PM Peak&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_mode</remote-name>
            <remote-type>4</remote-type>
            <local-name>[trip_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trip_mode</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>17</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>18.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_purpose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tour_purpose]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_purpose</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;atwork_business&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;work_very high&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4599</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>574151.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>23724</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.12</statistic>
              <statistic aggregation='Max' datatype='real'>63.950000000000003</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' value='Average Travel Distance (in miles)' />
        </aliases>
      </column>
      <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;atwork&quot;' value='At work' />
          <alias key='&quot;eatout&quot;' value='Eat out' />
          <alias key='&quot;escort&quot;' value='Escort' />
          <alias key='&quot;other&quot;' value='Other' />
          <alias key='&quot;school&quot;' value='School' />
          <alias key='&quot;shopping&quot;' value='Shopping' />
          <alias key='&quot;social&quot;' value='Social' />
          <alias key='&quot;university&quot;' value='College' />
          <alias key='&quot;work&quot;' value='Work' />
        </aliases>
      </column>
      <column caption='Tour Urgency' datatype='string' name='[Calculation_9010911152628957]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_5230911152243163]=&apos;work&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;university&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;school&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;atwork&apos; THEN&#13;&#10;  &apos;At work&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Single occupant, No HOT' />
          <alias key='2.0' value='Single occupant, Pay to use HOT' />
          <alias key='3.0' value='Two occupants, No HOT' />
          <alias key='4.0' value='Two occupants, Pay to use HOT' />
          <alias key='5.0' value='Three or more occupants' />
          <alias key='7.0' value='Walk' />
          <alias key='8.0' value='Bicycle' />
          <alias key='9.0' value='Local Bus' />
          <alias key='10.0' value='Light rail/ferry' />
          <alias key='11.0' value='Express bus' />
          <alias key='12.0' value='Heavy rail' />
          <alias key='13.0' value='Commuter rail' />
          <alias key='14.0' value=' Local bus' />
          <alias key='15.0' value=' Light rail/ferry' />
          <alias key='16.0' value=' Express bus' />
          <alias key='17.0' value=' Heavy rail' />
          <alias key='18.0' value=' Commuter rail' />
        </aliases>
      </column>
      <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1010911151419745:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Walk&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Walk to transit&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Drive to transit&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bicycle&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>%all%</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='AcrossScen  AutoModeShare' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Automobile Mode Shares for all Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_mode]' derivation='None' name='[none:trip_mode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:trip_mode:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:trip_mode:ok]' member='7.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='8.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='9.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='10.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='11.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='12.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='13.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='14.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='15.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='16.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='17.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='18.0' />
              </groupfilter>
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:3]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen  NonAutoModeShare' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Non-Automobile Mode Shares for all Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1010911151419745:nk]' />
              <groupfilter function='member' level='[none:Calculation_1010911151419745:nk]' member='&quot;Automobile&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Walk to transit&quot;</bucket>
              <bucket>&quot;Drive to transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:4]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen Purpose' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column caption='Tour Urgency' datatype='string' name='[Calculation_9010911152628957]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_5230911152243163]=&apos;work&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;university&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;school&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;atwork&apos; THEN&#13;&#10;  &apos;At work&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9010911152628957]' derivation='None' name='[none:Calculation_9010911152628957:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcva:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcva:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcva:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;work&quot;</bucket>
              <bucket>&quot;university&quot;</bucket>
              <bucket>&quot;atwork&quot;</bucket>
              <bucket>&quot;eatout&quot;</bucket>
              <bucket>&quot;escort&quot;</bucket>
              <bucket>&quot;school&quot;</bucket>
              <bucket>&quot;shopping&quot;</bucket>
              <bucket>&quot;social&quot;</bucket>
              <bucket>&quot;other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mandatory&quot;</bucket>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Non-mandatory&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen Purpose Chart' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Averate Trip Distance for all Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen Summary' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='79' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen Work' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Averate Trip Distance for all Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]'>
            <groupfilter function='member' level='[none:Calculation_5230911152243163:nk]' member='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen WorkByMode' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]'>
            <groupfilter function='member' level='[none:Calculation_5230911152243163:nk]' member='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='75' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Dist by Mode,Income'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[distance]' role='measure' type='quantitative'>
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[distance]' derivation='Sum' name='[sum:distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[sum:distance:qk]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Dist by Purp,Mode'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column caption='Tour Urgency' datatype='string' name='[Calculation_9010911152628957]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_5230911152243163]=&apos;work&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;university&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;school&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;atwork&apos; THEN&#13;&#10;  &apos;At work&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9010911152628957]' derivation='None' name='[none:Calculation_9010911152628957:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;atwork&quot;</bucket>
              <bucket>&quot;eatout&quot;</bucket>
              <bucket>&quot;escort&quot;</bucket>
              <bucket>&quot;work&quot;</bucket>
              <bucket>&quot;university&quot;</bucket>
              <bucket>&quot;school&quot;</bucket>
              <bucket>&quot;shopping&quot;</bucket>
              <bucket>&quot;social&quot;</bucket>
              <bucket>&quot;other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mandatory&quot;</bucket>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Non-mandatory&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names] / ([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]))</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Trips by DetMode,Income'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_mode]' derivation='None' name='[none:trip_mode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Walk to transit&quot;</bucket>
              <bucket>&quot;Drive to transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Dist by Mode,Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Dist by Purp,Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Trips by DetMode,Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen Summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen WorkByMode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen Purpose'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen Purpose Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen Work'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen  AutoModeShare'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='AcrossScen  NonAutoModeShare'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dist by Mode,Income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dist by Purp,Mode' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trips by DetMode,Income' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='104' name='AcrossScen Summary' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='104' name='AcrossScen WorkByMode' width='192'>
      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
      A3GfT4O8t/rlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='AcrossScen Purpose' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='AcrossScen Purpose Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AcrossScen Work' width='192'>
      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
      AXsYB/QAXzAYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='AcrossScen  AutoModeShare' width='192'>
      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
      3o+2x+MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='AcrossScen  NonAutoModeShare' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAODElEQVR4nO3dSXCb533H8e+L98UukOAqcRElWY5la7Uox5bjbZzpYqet2x7a9JR7Jj42
      nWkOPfSWW33qTA89dJnp5OQm9UzGcSZe4jjyotWWrYU7QXEXCRD7u/RgDW3YjgBJJCDi+X1O
      1MsH4h+Y94fnefD+AVhBEASIGCrU6gJEWkkBEKMpAC22ND/L1Ow82Wyu5nilsE6+4gOQX1/h
      /PnzrKznv3Z7r1oimyuSycxSKeZYWFm79ZuAtbW1r42XWk6rCzDdXGaWspVg+vIEa16SeCJG
      1C8RVPIsVSIkdqV58fkn8dxJliY/Yy6aYG58jPTuEW4uTBCEI+wbOUHmyrskBvaSnc8TSYYJ
      Rxzccp7MdIbn/vxvGOlLtfqu3pc0A7RUQDyRxPdcIKBvYIjudIrsRg4nmqSzs4uD+4YASCaT
      hKwwHckQ6d3DVAsb7O7fzf69w8RjYYYfOoJbKNLblQTAsiySySRD+x6kIxlt4X28v1l6Feh+
      47OyskZPT3erCzHCXc8A5XJ5K+toqvu79lDbnvz34+N+1wFwXXcr68BzXVy3iuu6uJ4HQLVa
      wXW9Lf07sLW1V8oliqUyruvytak08Lel/jsX4FZdKpXK5n33XJdKtUoABEGA7/ubo70v/fxV
      ruve9ve3c3ePe0ClXKJcqf7B/+PLtQeBj+9/86LG9z1c18P/0qLnvtkEz109xztnr4Adonfo
      Qfq6UmQ+PUM26OR7f/FnpBORVpf4jV579WfM5yxOnzqKQ4VqECGRiOP6PiE/z/jUOr393YyO
      niRiWy2r89e/eo3Prkzz4JFDDHbEyeaqTC0vcXx0lAfSFu9ezJCKOxwbfZzfvvEa3b19pNNp
      PAuy84t0DQywuLxOPGaTmZnlpb/6S2yrOffnjdd/ie3ESHenKVZ9hnb34ZU3WM25jD52gtdf
      e439+/YRT/eR8pY5c3WFvUN7KOY36EglKHsWES8HoTBj49Mc/84fcXCgE7iPNsG7946wlHcp
      LC8Rqq7x4dkLBEBmZpJieWtnm60US3Yy1Bkns7zM1Ow8qUSE37x7lqUbMzi2zeLUdc5fvorr
      3d2z5tawsEo5Hjo0wnrR59z7v2cis0KllGVmdpFoPE52fprl1ZtkltaJxmIsLN9kcXacsxfP
      UdoocvXqdT44c4YbSzeJRaM0M8oBAVgWc4sr+JUSmasfMZtZ5KMLn1L2QkQjFtOZOSYnp4hF
      o6wt3KBSKXLmvXf5ZGKR3OoS41c+4cq1Map+CCv0xWl/15vgfD5PMpncsjtJEFB1PSAgZIHr
      g20BFlghGzu0dVndytqrlQp+AI4dwg98yvl1ppcKHDowhA9YfD5FhyORpp40X+W5LlgWQQC+
      5946CSwsC2zbxnVdfN8nEongeS5BYGER4AOhW8/0nudj2yGCIMBxHKw7nAHu7nEPqFYqBJZN
      6Nafs26dE9VKlUgkfGtZFGCFHOwQVCpVHMfBdV1Cto3F50sjy7p1DlkhHPvzn+86ANlsFtu2
      7+amLVcqlYjFYq0uwzj34+N+13sA27a3dgZosp1c+052vz3u980eQKQVFAAxmgIgRlMAxGgK
      gBhNARCjKQBitNb3Av3qn2D5auPjv//fEPr8AlzJLfHjt37c8E0PdR/i5ZMv32mF0sZaH4Cp
      92D2/cbHf+nCteu7vDn7ZsM3LXrFOyhMTKAlkBhNARCjKQBitNvuAVbn57A7urm5uEDYqmKF
      U3T19hKP7MwuUJGvuu0MsDI7ycL6BteujVMu5Tl79hxLK6sUCoUtf0ukSCvcdgboGxymlEww
      sneQffsHyJVC5LIbjAz0kc9//UOaRHaa2wYgPTgCwJ6OQwCcOHFs+ysSaSJtgsVoCoAYTQEQ
      oykAYjQFQIymAIjRFAAxmgIgRlMAxGgKgBhNARCj1WmHzuBH40yOT9PXk8QJp+ju61M7tLSN
      2wZgJTPFCg6ltQ08O8TS7BjHRk/Rl06qHVrawm2XQH2DwwwODmPZMU48vJ+RkWHyGxskEgkc
      p/Xvpxe5V7dvhx4YIQ2MDAwCcPz40WbUJNI02gSL0RQAMdo9L+T/7e0x/vXN8YbHv/J3j/Ls
      Q333+mdFtsQ9B6BY8bhZqDQ8vtrSb0sUqaUlkBhNARCjKQBiNAVAjKYAiNEUADGaAiBGq3sd
      oFLI8vGVSbrTcZxIih61Q0sbqTsD5NdXuDF9jZnlDc6fO8/isj4dWtpH3QAkOrroGzjAt48e
      vNUOnVc7tLSNumdxNJnm8cdHAbVDS/vRJliMpgCI0RQAMZoCIEZTAMRoCoAYTQEQoykAYjQF
      QIymAIjRFAAxWt1eoGppg0ufjtOTjmGHU/T096sdWtpG3RmgsLbE2PUJ1gslzp8/z+Lyitqh
      pW3UnQHCsSSDQ7t5YP8+LN8mny+wb7CffD7fjPpEtlXdACTS/Tz1nX4Ajh3r3PaCRJpJm2Ax
      mgIgRlMAxGgKgBhNARCjKQBiNAVAjKYAiNEUADGaAiBGqwmA75a5cPZDJmbnW1WPSFPVBsB3
      mZrNUCmWN4+VCznGxsdZWlyiUChScfUtj9I+agPgVbAtm6npGbwgACAcjbO2ssLM1GV+8+Z7
      bBRKVCoVfF9BkJ2vJgDZbI5qqUQyldo8ZgUuyXQvJ46fZFfc4rOrY4RC2jpIe6hph+7o6KR3
      9wAjewexLQsAy4nx8LcOAPDc889vjlUIpB3UnMWXLnxMZ1cHtk5uMUTNDNDVu4fhkb2EbL3n
      V8xQ81RvBWXGJ6ZYzxVaVY9IU9UEoL+/l2uffsLCynqr6hFpqpoAROMJunt6sAKvVfWINFXN
      HiBkx3js8dNEo+FW1SPSVF+5EFbid799m4mZhVbVI9JUNQEIPJfZzA0W5xUAMUNNAOxwjI64
      za7u7lbVI9JUNQFYyEwT7+yluJFrVT0iTVUTgL49A5Q2ckRj8VbVI9JUNa8C+V6F3EYR61Yf
      EEDge8zNL5KMOoTjScKRGBFHrRLSHmpfBg3HGBrsx/O++OTn1bnrfHhhhj19EZaXXU4//QSp
      WBjP07UC2flqnsorZY+Hjx6jK5XYPBZP9bCnJ8Ujh0fZP9LLjRuLhEKhmllCZKeqmQEKuTUu
      XbzMgUce3TyW6OzlidO9ABw5enzzuNqhpR3UnMVrq6t09vQRDasbVMxQ2w7dt5tgfYNoRK0Q
      YoaaGcCx4dwH7zOVWWxVPSJNVTMDJJK72P/Ag0QdbXDl9n7yzk8ICBoaO7xrmB+d/NE2V3R3
      agKwsniDyakpDo8OtqoeaZZKHvw7+KLDaAqsLxYMvxj/RcM3PdJzZGcEoKevn2g4zPraTWBv
      i0qSpvjZD+D6G42P/4cJSLRfj1hNABaWN3jhey8SjkZbVY9IU9VsgjOTY3xy+TKZ+eVW1SPS
      VDUzwLcOH2FXqhPHqfvtqSJtoWYGyK8t8L+vvsq1KX04rpihJgB7BoeIhsMsLy+1qh6RpqpZ
      64Tjaf70xRdqNsHV8gYffzJJV1eYkL2L3j17SETUKiHtoSYA62trzM9OUnE6Ofbw558HWi3m
      Wc/eJBxLMzl+kaO2Q39XCte9g9eQRe5TNUug9aVZJmYXSCS/aIcOORGSiTgH9o9w4MB+SsUS
      iURCG2VpCzVnsROJc/TRUwz2f3HBI7ari28//hgAR450Nrc6kW1WE4DBfQdbVYdIS+hdLWI0
      BUCMpgCI0RQAMZoCIEZTAMRoCoAYTQEQoykAYjQFQIzWUEfb9bExolYV307RN6B2aGkfdWeA
      /M0b/Prt9yiWq1y6dJGFxWUKhYLaoaUt1J0BYqkenjl9iv37B3GDMOVSiURiN/l8vhn1iWyr
      ugGwnQiHH3kEgMOH1Q4t7UWbYDGaAiBGUwDEaHpj7w51ZT7HuembDY9/8mAP+3qS21jRzqQA
      7FDvXl/mn//vcsPj/+X7jyoA30BLIDGaAiBGUwDEaAqAGE0BEKMpAGK0ui+DlvPrXLoyTW86
      jGXvom9gQO3Q0jbqzgCRRIogv0yu7HLp0iW1Q0tbaWgGCMXTHNw3gh04VMpltUNL26j/foBd
      XZx6rAuAw4c7tr0gkWbSJliMpgCI0RQAMZoCIEZTAMRoCoAYTQEQoykAYjQFQIymAIjRFAAx
      Wt1eIM8tMzWzQGcyQjSRIhyLE3WUG2kPdQPgVirkV28wv+SyulTkiadO0xEP43leM+oT2VZ1
      n8orxRyZ1QInjx6jMxVhfGIax3EIhTQLyM5XdwZI9Qzywh8PAvDMs89uHrcsa/uqEmkSPY2L
      0RQAMZoCIEbTh+OKceY25qj6VUABkJ3orZ/C2f9ofPzf/icMjW7+84dv/JDx9XFAAZCdqLgG
      67ONj/fKf/BX2gOI0RQAMZqWQPdi4h1Yvtr4+CN/DYnuzX/+fOznFN1iQzeNO3FeOvjSnVYo
      dSgA9+Li/8C5/2p8/MjpmgC8cvYVFguLDd20P97fNgGouD5rxUrD45MRh2R0e05VBUCa7vfj
      K/zg399vePzL332Qv/+TQ9tSS0MByGazVEt5IokUkVhC7dDSNhp4P0CJt97+HQeHOxifLfDE
      00+QirVHO/TY4gavX15oePyTB3t4dG96GyuSZqsbANuJMTy4m0OPHGQ1d4GJiRlOHT/UFh+P
      /tl8lp/+8rOGx//jiw8rAG2moSXQydGTADz9zDObx9QOLe1Ai3kxmgIgRlMAxGgKgBhNARCj
      KQBiNAVAjKYAiNEUADFa3SvBge+RzeWJRhxsJ0zIdrBDugos7aFuAG7eGOftM5eJd0TwvV08
      /dxpUrFwM2oT2XZ1l0BOJIrrBpx+8ilsP8sHH11qRl0iTfH/kpqc9egMpG4AAAAASUVORK5C
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
