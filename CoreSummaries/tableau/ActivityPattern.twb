<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='ActivityPattern' inline='true' name='textscan.41862.719548923611' version='8.3'>
      <connection class='textscan' directory='C:/Users/lzorn/Documents/2020_03_116/summary' filename='ActivityPattern.csv'>
        <relation name='ActivityPattern#csv' table='[ActivityPattern#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='type' ordinal='0' />
            <column datatype='string' name='activity_pattern' ordinal='1' />
            <column datatype='integer' name='imf_choice' ordinal='2' />
            <column datatype='integer' name='inmf_choice' ordinal='3' />
            <column datatype='integer' name='incQ' ordinal='4' />
            <column datatype='integer' name='freq' ordinal='5' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity_pattern</remote-name>
            <remote-type>129</remote-type>
            <local-name>[activity_pattern]</local-name>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias>activity_pattern</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imf_choice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[imf_choice]</local-name>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias>imf_choice</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inmf_choice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inmf_choice]</local-name>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias>inmf_choice</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.41862.719548923611].[pcto:sum:freq:qk:1]&quot;' value='% of Total for Person Type' />
          <alias key='&quot;[textscan.41862.719548923611].[sum:freq:qk]&quot;' value='Quantity' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;H&quot;' value='Home' />
          <alias key='&quot;M&quot;' value='Mandatory' />
          <alias key='&quot;N&quot;' value='Non-mandatory' />
        </aliases>
      </column>
      <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Imf Choice' datatype='integer' name='[imf_choice]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' caption='Inc Q' datatype='integer' name='[incQ]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Less than $30,000' />
          <alias key='2' value='$30,000 to $60,000' />
          <alias key='3' value='$60,000 to $100,000' />
          <alias key='4' value='More than $100,000' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Inmf Choice' datatype='integer' name='[inmf_choice]' role='dimension' type='ordinal'>
      </column>
      <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[textscan.41862.719548923611].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:\Users\lzorn\Documents\CoreSummaries\ActivityPattern.tde' schema='Extract' tablename='Extract' update-time='08/16/2014 12:49:40 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4298' timestamp-start='2014-08-16 00:49:40.967' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>activity_pattern</remote-name>
              <remote-type>129</remote-type>
              <local-name>[activity_pattern]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>activity_pattern</remote-alias>
              <ordinal>1</ordinal>
              <family>ActivityPattern#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;H&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;N&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>3</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>2</ordinal>
              <family>ActivityPattern#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1142</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>607577</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>imf_choice</remote-name>
              <remote-type>16</remote-type>
              <local-name>[imf_choice]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>imf_choice</remote-alias>
              <ordinal>3</ordinal>
              <family>ActivityPattern#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>incQ</remote-name>
              <remote-type>16</remote-type>
              <local-name>[incQ]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>incQ</remote-alias>
              <ordinal>4</ordinal>
              <family>ActivityPattern#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>4</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>inmf_choice</remote-name>
              <remote-type>16</remote-type>
              <local-name>[inmf_choice]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>inmf_choice</remote-alias>
              <ordinal>5</ordinal>
              <family>ActivityPattern#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>90</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>93</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>6</ordinal>
              <family>ActivityPattern#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Child too young for school&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;University student&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='ActivityByPersonType'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern' name='textscan.41862.719548923611' />
          </datasources>
          <datasource-dependencies datasource='textscan.41862.719548923611'>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.41862.719548923611].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41862.719548923611].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719548923611].[pcto:sum:freq:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719548923611].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41862.719548923611].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41862.719548923611].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719548923611].[pcto:sum:freq:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[textscan.41862.719548923611].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[textscan.41862.719548923611].[none:type:nk]' direction='DESC' using='[textscan.41862.719548923611].[sum:freq:qk]'>
            <groupfilter function='member' level='[none:activity_pattern:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[textscan.41862.719548923611].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.41862.719548923611].[pcto:sum:freq:qk:1]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.41862.719548923611].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.41862.719548923611].[none:type:nk]</rows>
        <cols total='true'>([textscan.41862.719548923611].[:Measure Names] / [textscan.41862.719548923611].[none:activity_pattern:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='ActivityFullTimeWorkers'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern' name='textscan.41862.719548923611' />
          </datasources>
          <datasource-dependencies datasource='textscan.41862.719548923611'>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Inc Q' datatype='integer' name='[incQ]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Less than $30,000' />
                <alias key='2' value='$30,000 to $60,000' />
                <alias key='3' value='$60,000 to $100,000' />
                <alias key='4' value='More than $100,000' />
              </aliases>
            </column>
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ]' derivation='None' name='[none:incQ:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.41862.719548923611].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41862.719548923611].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719548923611].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719548923611].[pcto:sum:freq:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41862.719548923611].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41862.719548923611].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719548923611].[pcto:sum:freq:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[textscan.41862.719548923611].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.41862.719548923611].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[textscan.41862.719548923611].[none:type:nk]' direction='DESC' using='[textscan.41862.719548923611].[sum:freq:qk]'>
            <groupfilter function='member' level='[none:activity_pattern:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[textscan.41862.719548923611].[none:type:nk]</column>
            <column>[textscan.41862.719548923611].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.41862.719548923611].[pcto:sum:freq:qk:1]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.41862.719548923611].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.41862.719548923611].[none:type:nk] / [textscan.41862.719548923611].[none:incQ:ok])</rows>
        <cols>([textscan.41862.719548923611].[:Measure Names] / [textscan.41862.719548923611].[none:activity_pattern:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='ActivityByPersonType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41862.719548923611].[none:activity_pattern:nk]</field>
          <field>[textscan.41862.719548923611].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActivityFullTimeWorkers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41862.719548923611].[none:activity_pattern:nk]</field>
          <field>[textscan.41862.719548923611].[none:incQ:ok]</field>
          <field>[textscan.41862.719548923611].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ActivityByPersonType' width='192'>
      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
      rXtJ9wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='ActivityFullTimeWorkers' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACkCAYAAADBuSFLAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAc2klEQVR4nO3de1xU1f7/8VduxCBJEbk7P5QUCJHwwskUtbJvdvD7pYPZJJ4wPWrS0Ui0
      CQuvx3sIGEpaygHRHBvNOYe+UpJ81SI18YIoBEqKIaR4QQQhkK2/PwaV26gIRJ29no+Hjx4t
      Zq/ZC+Y9e+81e83nkVu3bt1CEBSqXVvvgCC0JREAQdFEAARFEwEQFE0EQFA0EQBB0UQABEUT
      ARAUTQRAUDQRAEHRRAAERRMBEBRNBEBQNBEAQdFEAARFEwEQFE0EQFA0EQBB0UQABEUTARAU
      TQRAUDQRAEHRRAAERRMBEBRNBEBQNBEAQdFEAARFEwEQFE0EQFA0EQBB0UQABEUTARAUTQRA
      UDQRAEHRRAAERRMBEBRNBEBQNBEAQdFEAARFEwEQFE0EQFA0EQBB0UQABEUTARAUTQRAUDQR
      AEHRRAAERRMBEBRNBEBQNBEAQdFEAARFEwEQFE0EQFA0EQBB0UQABEUTARAUTQRAUDQRAEHR
      RAAERRMBEBRNBEBQNBEAQdFEAARFEwEQFE0EQFA0EQBB0UQABEUzud8DsrOzf4v9EIQ28cit
      W7dutfVOCEJbEadAgqKJAAiKJgIgKFozApBGtFqNus4/DfqCe21TgF6jRh2dZughWo1ao6ex
      TUpz9CzZdKTmqaIfoG9BaLr7zgLdj1NAFOH+ji2xL7UUsGu9lnSVxvC/3sHodC38FG2tQI8m
      ZB+DosJp8V9f3Sfiu+hIsp6JYIp3GtHqcNDoCPZuwacozSB+USTJZ8qp7mCDz+S5TB1qgyTn
      kxyxnI2HipDNe/DijNmM97QACtgxP4zPssqpNjHHfthUFk3xxqJOpxUcidUQtbOISjrwuMer
      zAvzQyVBwY75hH2WRXm1Ceb2w5i6aAreFsbb76VVToHSotWo1dGkgeEPrVajacLbd1p0CNqz
      QGq44QhR6whQoNegVi/m0/iZBKrVBE77BL3+Q6YFqlEHTuOTtFJDJ6U56JcEMVatZuz4UD45
      UITcGoP93SvkaGo+la34DJm6KDL7zWdJQAAzVo+ifN0G9lfA5Z2fojUNYLVWy5rJ9uyN0pEJ
      kPk124qeY55Wx6bZw7iR8gW7z9frtPg7vtxpz4RYHdp1gfQ4sYUvjwFk8vW2Ip6bp0W3aTbD
      bqTwxe7z92i/t2YH4Kw25O4pUM2pTXN5B0cR4AT4aNCF+9PwDTKXcrf5xC8ciUVRCltzBrA4
      fg3juxeRottFATIZ2mVob41ijVbLmnGW7I1cxc7LLbJ7rayKvKSaQI8dT2h8BqUAcj7JH04j
      UK1m7Ph3+DA5HxkozYgndPxY1OpAJoXFk1Fat7e06HBSgdTwmjckoHT/J0wLVDN2/HwS8w1v
      C6UZ8YRNCjT8He+8kRhOWRd/Gs/M+m8wtVRWVtLZ2or2gNTpeWZt1OBjBla+C4mbPphOUs0D
      O3bEHDj/0ymuu7njKoGpuwduXKO0rF6nZ3LJcXLH1QKkTr1xd6rmWlkFnP+JU9fdcDdsjIcb
      XCstM95+H80OgFNAFDqdzvCvRY+r99KXwQMtkDo+zmOAo6srnSQrrK1v/zybtP3X4dh6JgcE
      MHntEarJIff0b7R7zSBnbmTxV5ZMWq1FFz+ffpnLWJtaAce+JD7Xi/c26Yh/z4u8+C3srzjP
      7s1JmI9ZjVa7GrV5EuuSztTpzztYgw/gownm9l8nj34s3RhLkNtJtnx5DKik7BFPJkbEo9Nt
      Yv7zN0nZf/cD0MxfbAmN17LkpUdI+WI39d9XnxodhMX2t5m1fS979Ps4XVL7WFtM8oIAJn+U
      icerz/H/AFmufyy+xOXi+r+IaqrrNV2+fAVkucGR/NLlYuPt99Hsa4DGSCZN7dZwbpoKgA8a
      3SstsyM+mt8wlC3j/MlsSi6cZcnkb+60mWT8CIHeDLwVzod/P4P3yJG8u2YczmaQ/7QzWxJm
      MOOHZ3nplWgiPOzu+xx9njGcbz/h6kh1vgx0wN7VgRMpW1mTk0N2+lXod/fxjp6e2EgSNi69
      IL3hC02yGUrw6sHkff4p31Tt4cPQdN6M+jv9zAAseXGejuEl37NqehgbrdfxXw32yAQTqUFj
      A5LU+INMjGxsrL22VrkGsLV3BC5y8bJMSU5Oo7M8dXkTfPsoorv7TsVNGbmRZN+fM67uJnD0
      ew6UyuRv06AeG05qRZM7ahv9prHhzu9Dx+a/9wMLb4LXJrA0aACmRxOY/dYSUoolVP7LiF8d
      xsuuF9i1PJip8T8+xBMWk7J8Bh8degS3oWOZ8OL9Q9SQRHtTO7xeC2W82x5ST9T7aafuOHUt
      IfvUebpYWRn+tnd+6oi9bb3uLK3oKsvcrNXkYG8HXayw4ia1DyKO9rbG2++jVQLgONSPgV1+
      Iv7tiURlP0rTf5129PFW0WFfJAFhO7jY5O3N8Amaha/DCWImBhD6v+3wnRWEj1mTO/rN2T3R
      i8cyktiRVwVVeXyuGcvClGLktGgCw/dh0defyTNH0bv6OtcrC9Br3kZ70Ynnx4Qw8fmuXC9/
      mJSXc+1aNd0H+/KcR3tyjp6r9wK9l2KSF0xg5bdXuAHIJWkczLTFtiuc+fxtNNsM1ypUFXH+
      ki19+9hh1tsT12NHyaiCqpwsTpmo6Fb/RdKjD17Fx0i/ICOX5JBT4ITKATDrjafrMY4aNibr
      lAmqbnbG2+9D3AvUVgr0aEK0nK3d5hRAVPgLlOnXsGr7IYpkc3q8+A4fBPalk1RK2ifvE51S
      RGWHx/H4bw0hr7linp/IwjlbyCoHc/uB/C1sKkNtah/6i9m9JJg16f2ZoR3MwYC706AFeg0h
      +Wp0wf3IT1zInC1ZVD3uxet+XdHv6sLcyGc4pAlh36Caqe60aNQ6FVH1Jibk/GQiVmwm/RfD
      NOiAwFBmvqiqMw1aWXt6lAoyN81mWWI+lSbmuI9ZyBw/FRJpRKv380zNWUBByhIWxqZzpboD
      NsODWVozVVqRuYnZyxLJrzTB3H0MC+cYpkeNtd+LCIDQYgr0egr9/Xn4qy6ZnA1buPbGX5vR
      R9O0ykWwoEyO/o1NWTfFGXIefbKRi+TWI44AgqKJm+EERfudBKDmJjkjN8YJQmv5nQRAENrG
      Q14EF5O8YArrO0xjw6yh/Jq8gCnr8xgxL46JvXP57O8fsKv/POLUJujXrGL7IcPUXa/hU3kv
      sC+dzhumAK87u3Dz55M4TlyEx+2u5Xz0YaFoLw9EExmMNznoV0WxNf0KmPdgWNBMJg204Ui0
      mvBUJ1xcznPywnAWrBvPky31W2lBv/76a1vvgnAPD3kEsKS/tytkpHNCruD4kUzgOofTc6Hg
      OOmXHsNnoDOpaxegPeXC1HVaNi18CTl5KYsS757kXLJ4nvDNmwgd8lhNyzUOxvwDbYEzr8+d
      irfF/W5qu06vwHi0MWNxacYvQVCuhz4FsnqqH07VR8nI/pETGSY4OztxKfc0pzMzOGvSF0+3
      ExxJq6bbCH8GdpIw7T4SX084u+/gnfN8J3dXLDDF1LSm4ewOtKklPDZEzUiVxP1vajPc/SeZ
      mvIAt5IIQgMP/zmAoxcDbLXs/fxfUO3JmLEqtixKJV7OxmSghn4S7G9yp53o42XFj7s2kjiy
      1kKRRm5qS2t654LQQDMugnvQf2BXLmVnc6l3P/p4PomHSTbZ2Sb07eeBhAf9vE04t1PPgRKZ
      qrwdJGWY4DzkT8Y/LHHy5W+hkxhpe5atG7+l9I9+U5vwu9esWaCeTw+mK9C1pzOWPImHJ4An
      T/c3w3BD2jwCev3E2rcCeH3O10gvziLM7z6fFUo9GTXOhw5HNqLLNP3D3tQm/DGIT4JbmfFZ
      oDJOfLac1bvOUi6bYv3MeGa96YO1VKtdsqbvmBCCX+iGBBTuXMI/tmRTLkuY2/kwee5E+nes
      22tF+gZmr07hYhWYWrgz6n0Nvt0kKNzJkn9sIbtcRjK3w2fyXCb272i8vXafWduJSHqUv73r
      i8MDjdrY2KDs5DaiI3eQXS5h3XcMIcEvYNi9hx9bk8dci/gcoK1kfcHqLC/enz+a0dMi8KuI
      57MfKpBPbDW0f5pA7JxBXEpIYPdVgCy+0V9k6PtxJMSGMvjGXhK/LarX6VW+T0rBNvBjEuJW
      MdYpi61Jxw1P942ei0PfJy4hltDBN9ib+C1F92ivrTj3MCeL66/PavrYkE+wNfIoru9/SkJc
      BH63trDth4pmjq3pY65NBKCtVFVS2akrVoaFtAybsZ7pg8yQPCawdvErOLWveZxkjnkHoCiP
      0+WuuLpI0N4Nd9fG1rzmcfqUCrdeHUHqhJubCrmsjAqKyDtdjqurCxLtcTNsTJnR9loKE4nZ
      lg/524hJLATKOJm4gncmjGPcpJlEJZ/lxgOOjZzD/ODyZ3yd2tdtb9bYmjrmukQA2koffyZa
      JPLu3ERSv0vkwJmSOgtQsjYEMXHOTkxeeglPM6C6kTWyxQ0W0nKz/iqWy1copprqhhvfo70W
      Bz+mjlaBajRT/RyQT2wlUt+OUSvjiFs6gl+14ehyHmxsFVcuQ4dzbP9gEuPGTWJm1C7Oyc0d
      W1PHXJcIQFuRrPF5K4KYOX/GpVMVqSvnEpt+d3rL/Y21JMSG4ZmxnJg9Vxvvot0DfPphYtL4
      XLfUrvHPToy117hwOpfyAT74dJKQrIcwpM81snIK6/XR+NhKr5VQfugMVsFrSIidw6BLCSTs
      boWxNWHMIgBtTGrfHhvP0YT81YXUA1l1f9jeie4qmeyTeWDZBSvkOmteHexs6vVmiaWVzM3a
      C2ntbbHBki5W9b6NwcHuHu2tMzYbW3tw6I2nXfuasUF27k/NHlvTxlyXCEAbubprCUExqVwx
      LKTl8JEfselqRcW+lUyKOWg4r5aLuHBR4ikPVzB7Eo9exzl24gbcOElOroTKsf6ibyd6e17l
      eEYRslzCqdxCVA72gBlPevTi+LET3OAGJ3NykVSO2BptN87WuSfmh1JJLZGRL37Hd8cfx921
      7tyQsbHh7km/C4c5dE6GG2fJy5fo7fZEM8fW1DHXJaZBW5nRaVD5HLuio9mWcd4wVXhnSrDW
      FCLmuI2cQfBoFzoCFVlaFkZ+xbkqCXO3V5kd6ks3CQ6vHUeadwJB/YHCPaxYvoGMYhlT62G8
      taBmOrEiC+3CSL46V4Vk7sars0MNU4XG2mvL0fLOsq8we3kJy/7SmZOJa4nRZ1AsWdPXbwqT
      /Qz7d/+xQdmJz1i+ehdny6U606ONj62QxLAYmLoYP4d7jK2pY65FBKCV3fdu0MJEEn/xw6//
      wz+HfHIz20rH8loz+mgVLTC2sr2b+b9eYw0BaAXiFKitOTTvBQJwNtcUV/eW2Z0W1eyxVZBx
      sTMDWunFD+II0OrEeoDfN3EEEBRNBEBQNBEAQdHENYCgaOIIICiaCICgaCIAgqKJAAiKJgIg
      KJr4evQ2U0pG/CIik89QXt0BG5/JzJ06FBsJSnM+J2Lpv8kql7AZEEjozBfvWR+3toojsWii
      dlJUCR0e9+DVeWH4GTZmfthnZJVXY2Juz7Cpi5hiKK7beHvtPjN1LP33o0z5wO8Bv/7c+NgA
      qMphw8w5lIy7W6+4ObV/mzzmiiPEaqLYWVQpjgBtJlNHVGY/5i8JIGDGakaVr2PD/gqQM9Au
      O8ST8+PRaVcz6uZGtuyv4MHq4Bbz3Zc7sZ8Qi067jsAeJ2qqQELm19soem4eWt0mZg+7cafa
      o7H22q6cTCO7uAmV2oyNDag6/z0fv7eAHRfqbNCM2r9NH3Pxd1+y034CsTqtCECbqayksrP1
      nXWzz8/aiMbHDLLT2O/6P/h1N63b/kB1cM+Qm+OEu6G4Lr3dnai+VkYF5/np1HXc3F2RMMXd
      sDFlRttrKdCzUnsWzmpZqS8ASsnRLyForKFu8IdJeVQ96Ngo4BvdCZ6aNRWf2o9vVu3fpo4Z
      zuTm1HwroSQC0GaeGk2QxXbenrWdvXv07Dtds2728kV49Gc+nxmIWh3ItA+TyZd5wDq4ciPr
      YC9zpd5qq5qNKTbaXoujP9MDnMApgOn+jsgZWpZtbYd6jRZtxEgqNi1mc/3ClEbGBo6MDJ7C
      YDvTuo9vVu3fpo4Z5FobiAC0FcmGocGriV82imHP+vN0URwB0WmYmZlzveAx/itiIzrdRt54
      dD0zY9IaLQPqpKp/n7AlVl1l5NrLA1XdcKQLhsqkdTbGwWi7ced/OsX1Pz3LsE4Sks2zPOdZ
      QmZ2vaoORsZmlLGxtcqYwdKqK3LNBiIAbaQ4eQETVn57Z9lg2sFMbG27gkc/vM//wMF8Gary
      OJ1vQp/ePR+wDGgP+ngVcyz9ArJcQk5OQc0Lxozenq4cO5pBFVXkZJ3CRNUNO6Ptxtk90YvH
      Du5hb4mMXLSH3Rmd6O1W99LY6NiMaVbp06aOGXr08aL4WDoXZFncC9Rm5HySI1awOf0Xw0xJ
      rdme0ox4FkUmc6ZcqjODYqwMaFq0mv3P1MyoFKSwZGEs6Veq6WAznOClNbMmFZlsmr2MxPxK
      TMzdGbNwjmGmxFh7bT9uImhhIuajIogc3Zkc/SqitqZzRbJhwKi3ecvfFYsHHJtBGtHqu+Va
      oemlT5s1ZgpIWbKQ2PQrcEtoW+e239p+sHldVGfH39rUzD5aRQuMzZiWGrP4HKCtOfrf/Rr4
      h3Qm51Ge/C1riz6oFhibMS01ZnEKJCiauAgWFE0EQFA0EQBB0cRFcCsTX4vy+yaOAIKiiQAI
      iiYCICiaCICgaCIAgqKJWaC2cngt4z7ah/nwWax94+5XO5/+PIT5Oy4z6J2a7/tvKRVZbI9I
      4tG/vYvvL2sZ9xG8kxBESz6FfG4X0VFbOHrR8H38I2cEM9rlduUAmZK9HzE9uSeLF/sZbrmu
      SGfD7NWkGOqb4j7qfTS+3ZAoZOeSf7AluxxZMsfOZzJzJ/anXvFW0jfMZnXKRaowxcJ9FO9r
      fOkmGWtvvBSrOAK0JSsrzPancbcwUh5H0iowN2+F5yrO5fDJ4gbF6FrOVXYnbMP01QimjR7N
      /BndOfDp1+QByCVkJ64gLDa9zgKXq98nkWIbyMcJcawa60TW1iSOA2R9g/7iUN6PSyA2dDA3
      9ibSsGrq9ySl2BL4cQJxq8bilLUVQ9VUI+1GSrGKI0BbMh/IQNUBjp9+A3dnoDCDox288Oqw
      785Dyk4msjZGT0axhHVfNcHTXsTpYiJhs7JRDfqZfXkvsGTxc1zesoI1jRTXNigkMWYb+UB+
      TCIDRgFcIy12Jmv2XsHkTkUWmXO7oonelsH5crlWVZV01o7bijy8Kyf3ZHCtQ2PVVqqoqjTD
      sktHpCJo7zKWFStqfnQ8if/lZaaNusaSWuti8k6fQuU2no5I4OaGSs6lrAKK8k5T7uqHiwS4
      uePKEUrLoE6Br7zTnFK5Mb4jSLjhppLJLasw3l5TitXP0CnurnCktEwcAdqWGX08rTmQdhqA
      yyeOwdPed1dkySfYGqmn3aiVxMUtZcSvWsLv1CT9kXKPZcQt/h/Mdsew6ufBzP80gbiIVzHd
      thJ9Xu3nccBv6mhUqBg9teb0g5/BawHrP56Iy6nb75KlVHUewYxVcSTErSLQOZvvj9xevV7I
      mZsvsTjuYya6nLpTjPouG4b+dTB5kVNZk3KIb5KzOH+7gLBXAO/6ufF4vVeb3LC+KVeKobrh
      GkcaVk292WC55OUrxcbbjZRiFQFoY537DqBL2hHyuMrRQ1fw9LC/+8MLp8ktH4CPTyckyZoh
      Q/pwLSsHQ1FSB3o6d0SSJPJys6n6cTPvTRzHhLc/5ofyIo5n1T9nqM8D7/4doaMzPR1u19rt
      jFMvM/K+2sT6j1byxcm6W/T09KAjHXHu6dDIixc6uozmg7WrmDTAlkfzNzF/URKFDR51LyaY
      NF7flAermtr4CY2xdqmdJE6B2pyVB091iCEjqzMnLg5kjDOceJhuRs4n6jXnZu5MDlvClnHM
      M4BXXhqKi8lsdja5j/a076RiiN/LdJi1hkOFvkbre1laWiHXrW+KrQ1YdrGCfMOCeMPr3oGG
      VVMtsZJvUrc6qs092rtgRb5hfXFNmBzsbMQRoO054OFZzg+f7eZnrz7UeQnbOtPT/BCpqSXI
      8kW+++44j7u7Nli03t25F5e/S+ZgiYxccoCYoGl8Vr96+wMpo/RaZ7yeHc4Ax0KOZ1HvBXov
      WWwICuOL0xXIwI2zhzh6yZqulsa3cOrtydXjGRTJMiWncilUOWAPmD3pQa/jxzBUTc0hV1LR
      sGpqbzyvHiejSEYuOUVuoQpD1VQj7UZKsYojwO+As/dAynfs5pm/ukPtkwbJg1dn+LM2ZjoT
      YiWs+/oT/LIrXKv76rYaHsS0/Gj+OX0CqyVr+qo1qF3rPYmDKx6WerZF/4t+rxrbE1e8h7Vj
      zaIJ/F+3Ebz+khuHCgqR71k7/jZ3XpnmTkTE2/y7tAopyYkXpocyyMz4FpLHCMZ8vZzQCVuQ
      Ta0Z9tabhnBbDeGVYXuInDiOKskct1dn4yUBHGbtuDS8E4LoL3kwYszXLA+dwBbZFOthb/Gm
      A4CxdiuGvDKMPZETGXe7FKuXJFaEtTYl3g16ODERez+/e369ysORObl5G6VjX2uxzy/EEUBo
      cf39/Fqp57PkmrryXAv2KI4ArUyJR4A/EnERLCiaCICgaCIAgqLd9yI4Ozv7t9gPQWgT4iJY
      UDRxCiQomgiAoGgiAIKiiQAIita8WyHkIg6s/4j1qae4Vgkm5va4PhvAW4ED75bEbFEF6DUh
      aFUadLcrKwAFeg0h2rMNH+5T93ENlZKjX0Wa0we83s/4o9Ki1YTnBxAV7v+AZUKFP4pmBOAy
      yYumE188nJCP5uHdReLXXD3z50ay0Gw5q17r0XJ7eR+O/uHo/IECPZoQLapalUfuqWAX67Xp
      qDStvYfC79XDByDzX2gzO/Ds7PF4dzG83T/aczTLNo+ueUDNu/V1Z1xu/sxJx4nEfuDC/ojl
      bDxURKWJOfbDprJoijcWadGow/MYNMKO3D2HKEKFr2Y+4z0toDSD+EWRJJ+pwtTdB68mlKs1
      kCk6sJ6ItXs5Uw7m9l6oQ6bj2/0Y0SFazgJnw9XkB0SxbEAmEcs3cqio0mjRaOE/y0NfAxSc
      zOY6rrj1us+5ziULng/fzKbQIVSn/JP1pSNYodURO6kXv6To2HWnwOA5CjqqiYxfyEiLfJI2
      7+Y8MhnaKJKKvJi6biOfjrei4FwTd/TMNhZG7uWR/17CJu0agp44RfyCtaRVeBMcFYAT4KPR
      Ee5vTso/11M6YgVaXSyTev1Cim4XBfd9AuGP7KEDIEkSUMntmx0L9BrUarXhn0Z/94Xj5I6r
      BZiammI5fDrL/lxN0oowQuKO1euxG08P6o6p1BNXF2pqxBqKHdN3MIM7SZh2H8TT3Zq2nwXp
      h7jAn/iLf3dMpU4M9H2WrtdT2d9g3aElw6cv48/VSawIC6HB7gn/kR46AHZP9OIx8sjLrymB
      7B+OThdFgJOxLWQy499l1roMTIe/ycogn3o/l5Da1f5vLTcbFkxucXIm8e/OYl2GKcPfXEmD
      3RP+Iz38NGjvvxDQu5Jdq2L4/koVUMWV4/vJuGRsg2sUnCsBs+4M6GtPQe6pB3gSO57o9Rgc
      O8CBEpmqvH380MRTIEevAdhykH/p86iSSziQtIdLnZ7Fx+PuY27KMvLVfAy7N4C+9gU80O4J
      f3jNmAWy4sXZK3l84xq0M8bzUXk1dHgcVU9fggKfx46yeo+35Bl/X3aG72BO4G56DOyNE2nk
      /FQBRteNSngGhOD7UyQxkwMNF8HdoJEJT+N6jGbOjKt8tH4Or+tkzO29mDR3Cv3MALs+eKu2
      sy0ygPOvL2Wsr4rwHXMI3N2Dgb2dIC2He+6e8IcnboYTFE18EiwomgiAoGj/H8Np8q+rBhy7
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
