<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='JourneyToWork Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\JourneyToWork.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>homeCOUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[homeCOUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>homeCOUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[home_county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>home_county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HomeTAZ</remote-name>
            <remote-type>4</remote-type>
            <local-name>[HomeTAZ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>HomeTAZ</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1442</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1454.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WorkLocation</remote-name>
            <remote-type>4</remote-type>
            <local-name>[WorkLocation]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>WorkLocation</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1454</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1454.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>workCOUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[workCOUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>workCOUNTY</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>work_county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[work_county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>work_county_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>543</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>3013.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Income]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>305280</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>-20000.0</statistic>
              <statistic aggregation='Max' datatype='real'>1968504.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='real' name='[HomeTAZ]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[WorkLocation]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[homeCOUNTY]' role='dimension' type='ordinal'>
      </column>
      <column caption='County of Residence' datatype='string' name='[home_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[workCOUNTY]' role='dimension' type='ordinal'>
      </column>
      <column caption='County of Workplace' datatype='string' name='[work_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column-instance column='[home_county_name]' derivation='None' name='[none:home_county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[work_county_name]' derivation='None' name='[none:work_county_name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:home_county_name:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;San Francisco&quot;</bucket>
            <bucket>&quot;San Mateo&quot;</bucket>
            <bucket>&quot;Santa Clara&quot;</bucket>
            <bucket>&quot;Alameda&quot;</bucket>
            <bucket>&quot;Contra Costa&quot;</bucket>
            <bucket>&quot;Solano&quot;</bucket>
            <bucket>&quot;Napa&quot;</bucket>
            <bucket>&quot;Sonoma&quot;</bucket>
            <bucket>&quot;Marin&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:work_county_name:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;San Francisco&quot;</bucket>
            <bucket>&quot;San Mateo&quot;</bucket>
            <bucket>&quot;Santa Clara&quot;</bucket>
            <bucket>&quot;Alameda&quot;</bucket>
            <bucket>&quot;Contra Costa&quot;</bucket>
            <bucket>&quot;Solano&quot;</bucket>
            <bucket>&quot;Napa&quot;</bucket>
            <bucket>&quot;Sonoma&quot;</bucket>
            <bucket>&quot;Marin&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='JourneyToWork'>
      <table>
        <view>
          <datasources>
            <datasource caption='JourneyToWork Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde'>
            <column datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='County of Residence' datatype='string' name='[home_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[home_county_name]' derivation='None' name='[none:home_county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[work_county_name]' derivation='None' name='[none:work_county_name:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='County of Workplace' datatype='string' name='[work_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:work_county_name:nk]' value='65' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:home_county_name:nk]' value='96' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[sum:freq:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:home_county_name:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:work_county_name:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='JourneyToWork'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:homeCOUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:home_county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:workCOUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:work_county_name:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='JourneyToWork' width='192'>
      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
      n/w3BETKAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
