<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='TimeOfDay Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\TimeOfDay.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>4</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>34.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simple_purpose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[simple_purpose]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>simple_purpose</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;at work&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;work&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_mode</remote-name>
            <remote-type>4</remote-type>
            <local-name>[tour_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>17</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>18.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_hour</remote-name>
            <remote-type>4</remote-type>
            <local-name>[start_hour]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>start_hour</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>5.0</statistic>
              <statistic aggregation='Max' datatype='real'>23.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_hour</remote-name>
            <remote-type>4</remote-type>
            <local-name>[end_hour]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>end_hour</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>5.0</statistic>
              <statistic aggregation='Max' datatype='real'>23.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1929</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>6305.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_participants</remote-name>
            <remote-type>4</remote-type>
            <local-name>[num_participants]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>num_participants</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1992</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>6305.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TimeOfDay.tde].[pcto:sum:num_participants:qk:2]&quot;' value='Share of Work Tours' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TimeOfDay.tde].[sum:num_participants:qk]&quot;' value='Frequency of Work Tours' />
        </aliases>
      </column>
      <column caption='Start Hour' datatype='string' name='[Calculation_4390912182922448]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [start_hour]&lt;12 THEN&#13;&#10;  STR([start_hour])+&quot;:00 AM&quot;&#13;&#10;ELSE&#13;&#10;  STR([start_hour])+&quot;:00 PM&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='End Hour' datatype='string' name='[Calculation_4450912183128862]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [end_hour]&lt;12 THEN&#13;&#10;  STR([end_hour])+&quot;:00 AM&quot;&#13;&#10;ELSE&#13;&#10;  STR([end_hour])+&quot;:00 PM&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column datatype='integer' datatype-customized='true' name='[end_hour]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' name='[num_participants]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[start_hour]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[tour_mode]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[num_participants]' derivation='Sum' name='[pcto:sum:num_participants:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[num_participants]' derivation='Sum' name='[sum:num_participants:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='TimeOfDay_personsTouring Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\TimeOfDay_personsTouring.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>simple_purpose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[simple_purpose]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>simple_purpose</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;at work&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;work&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>persons_touring</remote-name>
            <remote-type>4</remote-type>
            <local-name>[persons_touring]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>persons_touring</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>284</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>24.0</statistic>
              <statistic aggregation='Max' datatype='real'>2250482.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>4</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>5.0</statistic>
              <statistic aggregation='Max' datatype='real'>23.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[hour]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[simple_purpose]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[simple_purpose]' derivation='None' name='[none:simple_purpose:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:simple_purpose:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;at work&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;non-work&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;work&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;school&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;college&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='PersonTouring'>
      <table>
        <view>
          <datasources>
            <datasource caption='TimeOfDay_personsTouring Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde'>
            <column aggregation='Sum' datatype='real' name='[hour]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simple_purpose]' derivation='None' name='[none:simple_purpose:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[persons_touring]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[simple_purpose]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[persons_touring]' derivation='Sum' name='[sum:persons_touring:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:simple_purpose:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;non-work&quot;</bucket>
              <bucket>&quot;college&quot;</bucket>
              <bucket>&quot;at work&quot;</bucket>
              <bucket>&quot;school&quot;</bucket>
              <bucket>&quot;work&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:simple_purpose:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[sum:persons_touring:qk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:hour:qk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Work ArrivingHome'>
      <table>
        <view>
          <datasources>
            <datasource caption='TimeOfDay Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde'>
            <column caption='End Hour' datatype='string' name='[Calculation_4450912183128862]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [end_hour]&lt;12 THEN&#13;&#10;  STR([end_hour])+&quot;:00 AM&quot;&#13;&#10;ELSE&#13;&#10;  STR([end_hour])+&quot;:00 PM&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_4450912183128862]' derivation='None' name='[none:Calculation_4450912183128862:nk]' pivot='key' type='nominal' />
            <column-instance column='[simple_purpose]' derivation='None' name='[none:simple_purpose:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[num_participants]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[simple_purpose]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[num_participants]' derivation='Sum' name='[sum:num_participants:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]'>
            <groupfilter function='member' level='[none:simple_purpose:nk]' member='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[sum:num_participants:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[sum:num_participants:qk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4450912183128862:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Work LeavingHome'>
      <table>
        <view>
          <datasources>
            <datasource caption='TimeOfDay Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde'>
            <column caption='Start Hour' datatype='string' name='[Calculation_4390912182922448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [start_hour]&lt;12 THEN&#13;&#10;  STR([start_hour])+&quot;:00 AM&quot;&#13;&#10;ELSE&#13;&#10;  STR([start_hour])+&quot;:00 PM&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_4390912182922448]' derivation='None' name='[none:Calculation_4390912182922448:nk]' pivot='key' type='nominal' />
            <column-instance column='[simple_purpose]' derivation='None' name='[none:simple_purpose:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[num_participants]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[simple_purpose]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[num_participants]' derivation='Sum' name='[sum:num_participants:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]'>
            <groupfilter function='member' level='[none:simple_purpose:nk]' member='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[sum:num_participants:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[sum:num_participants:qk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4390912182922448:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='WorkPatterns'>
      <table>
        <view>
          <datasources>
            <datasource caption='TimeOfDay Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde'>
            <column caption='Start Hour' datatype='string' name='[Calculation_4390912182922448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [start_hour]&lt;12 THEN&#13;&#10;  STR([start_hour])+&quot;:00 AM&quot;&#13;&#10;ELSE&#13;&#10;  STR([start_hour])+&quot;:00 PM&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='End Hour' datatype='string' name='[Calculation_4450912183128862]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [end_hour]&lt;12 THEN&#13;&#10;  STR([end_hour])+&quot;:00 AM&quot;&#13;&#10;ELSE&#13;&#10;  STR([end_hour])+&quot;:00 PM&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_4390912182922448]' derivation='None' name='[none:Calculation_4390912182922448:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4450912183128862]' derivation='None' name='[none:Calculation_4450912183128862:nk]' pivot='key' type='nominal' />
            <column-instance column='[simple_purpose]' derivation='None' name='[none:simple_purpose:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[num_participants]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[num_participants]' derivation='Sum' name='[pcto:sum:num_participants:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[simple_purpose]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[num_participants]' derivation='Sum' name='[sum:num_participants:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TimeOfDay.tde].[sum:num_participants:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TimeOfDay.tde].[pcto:sum:num_participants:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TimeOfDay.tde].[sum:num_participants:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TimeOfDay.tde].[pcto:sum:num_participants:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]'>
            <groupfilter function='member' level='[none:simple_purpose:nk]' member='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[pcto:sum:num_participants:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4450912183128862:nk]' value='36' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[pcto:sum:num_participants:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4390912182922448:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4450912183128862:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='WorkPatterns'>
      <cards>
        <edge name='left'>
          <strip size='189'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4390912182922448:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4450912183128862:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:end_hour:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:start_hour (Hours):qk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:start_hour:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Work LeavingHome'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4390912182922448:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4450912183128862:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:end_hour:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:start_hour (Hours):qk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:start_hour:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Work ArrivingHome'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4390912182922448:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4450912183128862:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:end_hour:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:start_hour (Hours):qk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:start_hour:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='PersonTouring'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:simple_purpose:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:hour:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:simple_purpose:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='WorkPatterns' width='192'>
      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
      tAh/YQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Work LeavingHome' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Work ArrivingHome' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2dd3Bd133nP/e+3vHeAx56I9hFEixqFF0Uy5IsWoplS7acOHY8dnYy413b
      m83s2LOJM95sNvFONlEsx/Zm15t47I0V78pj9ciWVSiKnSBIgA2FINHbK3i937t/QKAIEg+N
      AN4FcD4zGBQevPt74P3ec86vHUlVVRWBYJ0iF9sAgaCYCAEI1jVCABomFQtwuuUsE9Ekiqqi
      5tMMjwZIpyOMDA9P/uymD8HC0BfbAEFh0vEQgVACpe0Ew9EcTjmFrWwz+VSa8x3jWDvOMT4a
      pbSmjlg0zMMPfhS9Tiq22asKSWyCtUsqFuRCRx8OhxWz1UEqOo7FVYXPa2QilCAa9iPrrQTC
      MXxlXuprq4tt8qpj0QIQuhGsBRa9BEokEkiSmG4Fq5tFC0CSJKxW61LaIhCsOMILJFjXCAEI
      1jVCAIJ1TcE9QMLfR0tfArsygctp59K1EJXlVswmJ9u2blpJGwVaRVV48bl/4e77P8bhdw9j
      V5J4mpohPMxYKocpFUVyVJDJ5fj4Qx8utrUzUnAGyKoG4v4hzFYrHRfOg6RnaHiIVDpHNpMh
      nU6vpJ0CDaKqKk6XnReee5aLPQOgNzMRGkWSwT8+gdXloa7GS2VVVbFNLUjBOICSSzM8PoHV
      AHqLg0g4gtNpRwJsdjvJREJ4gdY7qsq1nk58NRvJpGLEQn70OkjLdgx6GLrWi9VuA4OV7Zsb
      i23tjCw6EJYQAhDMwNFuP4F4hseatfvUvxGxCRYsGaFEhv/88kVeODtUbFPmjRCAYEkYCaf4
      yv85w1N31lJVYi62OfNGCEBw21zzx/nqs2f45iNbeXxPNWPR1eMgEenQgkWjqiqXR6L82Qvn
      +ctP7WSTz0EqmyeZyRfbtHkjBCBYFKqq0tIb4q9/1cHTT+2mxj3pENHLErm8UmTr5o8QgICO
      9tMoFh/BkWuUl7oZjebZWV/G262dNFU6kGQdnUMJHn/oADB58x/qHOd/He7h+5/bS6nddP21
      dLKEJElk8woGnfZX2Nq3ULDsZLMKPde6GO4boKqqGkkCR2k5Toue9nNn6e7oZGJ4kHh+8uZ/
      qW2Ynxzr5Yef2zft5ofJLOESq4FQPFOkd7MwxAwgwOFyUG/zYmuoo6urE4vVS9vJQySyFvbe
      eTfpLNjDScyyyj+f6ON4T4Dv/+5eLEbdjK/nsRkJJTL4nNr3BgkBCKhv2nbDd5uuf26+4aeD
      oST//bUOQokMTz+1e9blTandxHgsw5blMHaJEQIQzIt/PHKVo1cCvPzVD6CTZ68E9DlMjEVS
      K2TZ7SEEIJgXdR4ru6pdc978AD6nmc7R6ApYdfuITbBgXvQFEzSW2eY1dnIGWB3BsIIzQHzs
      KieuxvHIEWLxOMGUkYoyMzarh+3bRD3AekJVVfpDCWrd80t+9DlNjEVXxxKo4AyQly1kwmNk
      ZR3xcABJ0uMP+EmlM6IeYB0ykchSYjXMa6zdpCeWzi2zRUtDwRnA7vawd08zFqOEvL2ZeDSG
      3T75BDAYjZhyq+MNCm4fRQVZYt5tcAw6mWx+dfSNKigAWWfEV+a9/r3Non2frmB58MfStwS8
      ZkMvS6iqSl5R0Mna3mZq2zqBJugNJKjzzL/4SZIkXBYDE4nsMlq1NAgBCOakL5ig3ruw6j+3
      zUhICECwFugLxKnzzM8FOkWpzYg/pn1HiRCAYE76ggtbAsFkMGw1FMYIAQhmRVVVRiIpKlwL
      c4KslnQIIQDBnCgq80qBuBGf08y4mAEEq51YOofdtPCUMZ/DxKgQgGC1s5j1P4DLYiCSFF4g
      wSqnb4ExgCkMOpnMKqgNFgIQzErvImIAAHqdRF5RUTR+lJYQgGBWFrsEkiUJh0mv+WWQEICg
      IKqqMhBMXG95slBWQzS44PZeVVUuXLiAQVax2ax0D4SornChkw00NjasmIGC4pLKKgWL3+fC
      azMSjGdoLF1YFHklKTgDTIxc41TrRXKKwqW2VjIZhYuX2wnHs6IeYJ2QU9TbOnh7NQTDCs4A
      7spGfvugk3Q8TOk9H8IfjFDmaUBC1AOsFwZDSapLLIv+/dWQDjFrhMPr9YJ3siag3OdbEYME
      2qEvmKBuER6gKcocJi4MhZfQoqVHbIIFBekNJKhfYBbojZQ7zJovjhcCEBSkLxi/rRnAbTMQ
      Smi7RaIQgKAgvYuMAUxh1MlkctqOBgsBCAoyEc/inmcniJkw6GSyisoij6FbEYQABDOiqios
      oBPETMiyhNWo03SLFCEAwYz4Y5kFdYIohNtq1HRxvBCAYEZ6A3Hqb2P9P4XnvWiwVhECEMzI
      7cYApihzmDQdDBMCEMzIYrNAb8bn0HafUCEAwYz0BhZXB3AzPo0Hw4QABDMyHE5R6Vp8HtAU
      k52ihQAEqwxFUVlgI4gZ8dqMBDTcIGvWeoC2c22Y9ArpbI5AVKWqwoleZ6KpqXElbRSsMLF0
      DptpcTUAN2My6EhrOBo8az1A6/lO4hmFwSuXyOags/sS0aSoB1jr9AcT1HqstxUEm8Kok8nm
      Fc1Gg2etB/jEwRIyqSh1dR8nEApT6t4g6gHWAUvlAYLJcwVMeplkNo/VqL0j6Wa1yO1xA24A
      ykq9sw0VrCF6AwkaS5dGAJMHZ09Gg7UoALEJFtxCX3Dh3aBno8Sq3bRoIQDBLfQHk9R6bt8F
      OoXPYdJsn1AhAMEtJLN5LIal8QKBtoNhQgCCaWTzCvqlCADcgJaPTRUCEExjaCJJVYllSVyg
      U/gc2u0OIQQgmEbfezGApaTUbhR7AMHqoC+YWJI6gBuxGHUks/klfc2lQghAMI2+wNLUAdyI
      USeTzSloMRgsBCCYRu8yzAA6WUInS6Rz2psFhAAE0wjFM7itxiV9zalocFiDrdKFAATXmUpY
      W0IH0HVKrNo8OV4IQHAdfyyD124Ell4BpXZtRoMLZielYxN0DwZwGBSMFiuDo2Eqy91IQEVl
      5QqaKFgp+oMJat3WZZkByjUaDCs4AxgsdoIjg4TjMbraWwiG4pxsOcJoMCHqAdYoS9UJYibK
      NBoMKyiAVCyC3VuG3WKlumkbdoeJ3Tvvwm3XT9YDmG6/aZJAW0x6gJbnNJdyjR6WUXAJZHV5
      2OPyXP9+w4qYIygmfYE4n9xTvSyvXabRjFCxCRZcZ7IThHlZXttq0hPPiDiAQMPkFRXdEmeC
      TmHSa7NVuhCAAJjsBGE16pbBATrJVIp1VmOnxwsBCAAYCE2eB7yUadA3IkkSLouBsMaCYUIA
      AuD9VijLictiYEJj6RBCAAJg6XqBzkapw4RfY13ihAAEwNL2AiqET4Ot0oUABMDKLIG0eHL8
      NAEEejv42c9/RvfARLHsERSJpe4EMRNaPDn+BgGojAcmqKyqwW7RXgcvwfKRzSvIkrQk3aBn
      Q+NLIIlyXxk6gwWTSQhgPTF1FsByuUCncJj1xFIa9gLpjDq6L5wnqtE2doLlYXL9v3Sd4Aph
      1Muaa5U+7VGfz6hs3NqAqkAqEqRzMIDTkEeRdPgnUlRVeJCAqurlSZgSFIeV8ADBZHF8XlGX
      NeVioUybAWSdSi4HsixjspcQGR8mGI1xseUIkWiK063HGA+nRD3AGmM5OkHMhCRJOM0GIhoK
      ht0wA6iEQiG6O7qwuqrwmspwlJZTYgbP3R9mLBhnc9M94nyANUhvML5sdQA347IaCCezuG1L
      W3i/WKYtgUrcpTz4sQfRm7xYXU6ab6gHaGhYadMEK0UonsVtNazItbw2I4F4mobSlRHcXExb
      AsUTUV558VVk/fL6gwXaQVVVFHXl1uQ+p0lTnaKnzQDBsRB3HrgXgzb2J4IVwB9L47EZOX3s
      LUaH/ASx89CeCq5Fy7hrm4t//c1JzFIUxeCirKaOPds23tb1tNYod1ocoLrGR/flKyhCAOuG
      n58aYDSSJjg6QDid41rvNU6eOk73xYscPnySa72dHH/zLcKxBIcPn7zt65U7zYxoKB1i2gwg
      ySYaGyvIpLVXuiZYHuKZHP/hwc3c13TvtEBYPjFB0lDChx94YEmvV1ViZmgiuaSveTtM2wNI
      kkI6nV/2iKBAO5zrn+DOBjeyLCNJ0vUPvc2NwyhN+9lS3Bd2k554WjsexGkCMDlKKHV76e3p
      KJY9ghUkGE9jM+ox6VcuKdik19bB2dPeucXhZteuXXid2nBRCZaXE1eD3N3oWdEZ36CTUFSV
      nEZqg6cJIDo+xNvvvENpdV2x7BGsIEe6/RzYWLqi17weDU5pYxk0TQC5ZJScZEKvE3GAtY6q
      qnSOxthcbl/xazstBs20Sp8mAFVvoK/zApGEdvy0guWhP5SkymVGJ698UWCp3URAI7XBt+wB
      du/aiiyJSsm1zvGeAPdu8C5LJ+i50FJhzLQ7PRUOEsnqREXYOqAY6/8pfA4ToxoJhk270y0l
      XryhJDpZJh7yc7lvlBKrjMVqo3coRFWFGxmZmtqaYtkrWALyispIOEVVyfIXwcyEz2mmfTBc
      lGvfzLQZwGwvYefOHThtJqwuD0ZZJZvN0HGuhXg8S+u5kwQiaVEPsMrpGI2yyWcvWlHK5Ayg
      jfun4FonEhgmiwGH2cjGXfsYC8TYtmk/IOoBVjvHrvjZ31Sc5Q9MeoGiGqkNLigAV1k1e8ve
      /16setYOx3uCfOdTO4t2fZNeJqWRaLBw96wzUtk8iUyuqBVZJr1MLq+QV4p/crYQwDqjbSDM
      zmoXchETHiVJwm7Sa2IZJASwzjh6xc99RVz/T+G0aCMdQghgnXGmN8TeenexzcBrMxKMF7//
      lBDAOiKczKLXydiMxc/1KrWbGAwVvzBGCGAdcfpakL11bk0UPF0ajvC/3+0p+kZYCGAdcaQ7
      wAc2epf9OrHQGG2XurhwroWx0WFOtJ5HVXK0nDzB8GAfVwdG+eKeEu7e4OXPX7pQ1NoAIYB1
      gqqqXBqJsK3SuezXUnQmxgZ7cNgMHH7zDYaDURLhQbrbz3NxOMqp48c4cegN/ujhLVS7Lfzp
      8+eLdoKkEMA6YSSSwmM1YlyB8sfx3sskVQvHT55l8x3NyLkEoWgGvdWES5+nrKKa5l07kCWJ
      f/PBDWyvcvKNX7SRyq58MwZJVdVFLcISiQRW6/L3kxQsDS+cHSScyPKF+xqKcv1MOo3RZJrx
      31RV5bmWAd7uGOevP70Lq3HlspHFDLBOONLt574ipT8DBW9+mAyMPbmvho/tqODr/3J2RQNk
      QgDrAEVV6QsmaFiBDtCLRZIkHmuu4jN31vC1Z1uZWKEzKgrONfGQn4u9w5SYJfIq+MNZqipK
      0Ek66upF0fxqomc8Rp3Hil6n/efdg9srMOl1fPXZVp5+ajel9sIzx1JQ8C9icZZg0cvEk2mu
      nG8hmczRduEMoVhG1AOsMo71BNm/Yfndn0vFhzaX8e9+ayNfe7aVkfDyVo4VFEAsNEYOA15P
      CbsPfBRfmYN79t5Hhcc2WQ8wy5pOoC2OXwlwb9PqEQDAPRu8/MeHt/AHPznNz070oSzOVzMn
      BZdAztIqdt+wZ6quWpbrC5aZTE4hlMjgc5iLbcqC2VPn5uCOCl5uG+L1i6M8uquSh+4ox27S
      zxDNVnjx//6MsvIaBsMpjPFx9jz0BOGrLQyMjtPVO8HBgwfovhrg4d+67/pvier3Nc7F4Qhb
      KxyaOZPrRq60v0vXYJL+wQFcLht37L6XrXVl/OL517DLYbLWWmxBPz/58lOE4mleOjfEH/60
      hY0+O0/uq+GOKtcN70vGabUyFo6RTiepLXfTPzJGdUkZo62nkfU+WlrPkUhM/zuIOMAa5wdv
      dbO53MFHt5cX25RbiIxc5PCJQbp72tncfCexWIzd9aX84rUT7NzsJm+poKyskv377rj+O3lF
      5Wz/BM+19DMQSvLg9nI+vqsSj9VIPBoBVKJphWw8jMGoR5J0mOwuJvzj1DfUkYglsDvebwYm
      BLDG+dKPT/G3n2mmxKqNM7luJJ9NkUjlCE2EcVh05BQJRWfCZtQRj05gdXrQG4xYTDMf3xRO
      ZHntwjCvtI+gKCof2erjSx9oXJANYgm0homlcuQVFZdlZc7/Wig6gxmHARyOW9sz2h2OOX/f
      ZTXw1F11fObOWr77Rhfd47EF26B9x7Bg0ZztD9Fc69JE+vNyIkkSv39fA6PhFAtd0AgBrGGO
      XAlwQAPljyuB22pEUVlwmaUQwBpFVVXOD4apN8cIhCZoaW2n7cxxLnb3ASr9ff1cbj9DKJqg
      b2Co2OYuCc21Ls71Tyzod8QeYI1yqHOccDJL/7l3uThhR5Xz3L9nE3mbnZ7zZ3jtyFkMyRB3
      fNBCT89lfu/Tnyy2ybfN/iYvb18e50Oby+Ye/B5CAGuUc/1h6jxW6jfvxBAz0N13jWRWT6Mt
      S3/Kx8aGRgz5EjzeUvRqbbHNXRJ2VLn4wVtXUFR13m1fhADWIKqqcm5ggu88sROfw4wP2N28
      DQAll6XRrmdT4w03fcP8n5haxmaaPO8sGM/MO4lO7AHWIAOhJGaDTNkMN4GsN6DXYFR4qdhX
      76alNzTv8UIAa5BX2oc5uLNyzbs/Z2J/k5fjVwLzHl9wCaSqKmPj4+TTCXQmC/5glPLSEgC8
      pevDtbYaUVSVdzrH+Z+fv7PYphSFLeUOusZi5BV1XvlPBQWgZFO0X7yMz2UmEQ4Qznvo6j5L
      Q+MenE4n6XRapEJokItDEeo8Vmym4je/KgYmg44Sq4HRyPwOACm4BNIZLTTUVOJ0OHGVVWO2
      GNi+tRm7SRX1ABrmxXND/PbuqnW5/Jni7kYPJ68G5zV2Vi/Qxo2brn+97fZsEqwAmZxC20CY
      P35oc7FNKSr3NHr58dGrPL6nes6xYhO8hjh5NcCe2hJM+vW5/JmiqcxGbyBBdh4d54QA1hBT
      y5/1jl4nU+kyMzCP5rtCAGuEaCrLcDjF5vK504jXA/du8HK8Z253qBDAGuGtjnE+uKlUk6WP
      xWC+G2EhgDWAqsKrbZPBL8EktR4rY5EU6dzs/UaFANYAo5EUeVWlukgHX2sRWZJoKLXRMx6f
      fdwK2SNYRl67MMLDd1Ssa9//TOxv8nJsjrQIIYBVjqqqvHlplAe2+Yptiua4s97D6d7grGWS
      QgCrnK6xGKV2EyUaLXwvJuVOE5FkjlS2cDxACGCV83LbEI82r+/Uh0JIksSWCgeXRyIFxwgB
      rGKyeYVT10KrqvHtSnOgycvRWfYBQgCrmLP9E2ytcGDRwLGnWmV3nZvWvomC+4BZ6gEUhoZH
      IZsAvYlAKE65z40ElPnEhksLvHh2iE/tnTvhaz3jthrJ5hVi6RwO8637pIIzgJJNc7mri/FA
      iDPvvs7IWJhjJ99haDwqzgfQAIlMjp7xGDuqXcU2RdNIEuyqcdE+EJ7x32etB2isrcFhs7Bl
      971YbQZ2bt+L0yKJegAN8G6Xn3s2eDGsglNfis3+WfYBs9YDbNiw4frX6zvDXHu83DbMv//o
      prkHCthVU8I/HOqZsV2KeHysQgKxNNFUloZSW7FNWRXYTXr0Oolw4tbTJ4UAViHvdvt5YFv5
      vJs/CWBfnZszfbe2SxECWGWoqkp/MMFDd2jvwAstUygvSAhglXG6N8QvzgxSYtHegRdaZnul
      k8sjUfLK9HiAaI24ijh2JcB33+jkD+8tJ53JkkllsNsdpBMJskqOSDyDnE/jLa8U3qGbMBl0
      OMx6/LE05c73DwwUAlgF5BWVnx7r5XhPgL//3b30dZ/i0KFRRgd6+PIffJGXfvoTko4SQtE0
      u6oNWDbdzz1bRG3wzUxViT3W/P7fRjwmNE48neNPftnOWDTFM7+zh1K7CbfFhN1lpamhFv/Y
      EJiMlJZVUFlZjtXhQc7e6u0QzFwnLGYADdMXTPCnz7fz5L5aHtv1fq/Pxi13MXUUXDwe58kv
      fql4Rq4iNvnsXPXHySkKenny2S9mAA2iqvBu1zjfeK6Nb3xsK4/tKpzubLOJWMB80etkrEYd
      hzv91zfD4phUjZFXVP7pyFXO9E3wF4/fgccmUk6Wkq8920pfMIHVqMNs0AkBaAVVVRmcSPLd
      33RR4TLz1Y9swqgXE/RCifiHON7Wze6mMq7FbZQb41zuG0EXD5K3eolnVT7x0P3AZEKh2ANo
      gGxe4Zetg3zr+fN869HtfO6eOlHhtUgGrnZxoaOTwNVWshV3sW1/E954npzZAJk4A8NRkCR0
      EjjMhrlngHDQD3ojiWQal2NyvWmxWkmu8hkgEokgSWC3Oxkb6sPscDPuD1Ji0ZE3OSj3LH+a
      cSqb59X2YZ5rGWBvnZvNJSpbyuw4jSqeiiqSE35Ug5XIxAQuu4kMJnxekf48G/lMgrMXutmz
      YxO9vYP4IxOgt7GhsgyTXuHqSIQd2zYy9XiZQwAqxw6/hVEHg2EDqOPU1e9ix5YG4vE4Ltfq
      /M/o6zrP2+d6SI328+Wv/Ftef+lFOlsOk2m4k3p7hi27PsSuLfXLdv14OscvWwd5uW2ID28u
      47N31eG2GTlz6DVGMjq6z1/g4Gc+z8V3XyJnLiMZGsboLgNF5tOffGzZ7FqPzLkEqqysYmxs
      DL1BpqKsEZ2SQpJldLrVW4aXzuaRgG1btxL0j2MyqGzecyddER3bNm7G7x+HZRDARCLDz0/1
      81bHGI/sqORHX7gLu/n9/wJffRO97Reo9LkZGerH5CxDL+kxuLxIZiN60+p84GiZdb8JTiQS
      WCxWblxyp7J5zIalEXg6l+fty+NcGApzujfEp/bW8OiuyjlfP5VIYLRYEa0+l5d1L4CbCcUz
      PPC3h7irwY3LYsSolzDqZAw6GaP+/c96WeLYlQC7alykcgrRZJZIKkcikyevKOQUlfx7H+cG
      JvjWo9v59L5a4dnRGCviBUpGQ4xHM+TjIUprNpCN+skbHFhkhXQmSU62UK6BzV1OUfgvr1zk
      yX01fPauWnSyRCankM0rZPLq+1/nFNK5PC6rgc3lDnxOM06zHqfFgMWoQ8om6Oi+SigY4oMf
      vp+uS+coKYF3jp3CZ1HwNmynurT471ewQgKIp7Kcbz3K+OAYDz5RxYm3DhHJQ3pklI88+Wm6
      LrXwyMMfWQlTCqIoKn/2wgV2Vrv44n0NM7ohx/u7eO3oUQZ7Bvj8179BSaCd8d5Bjg6NUV8C
      sncrjz6wn9/86hWuJB3sq7WRyqmE+8/T0+llQqewdVc9Fy/3UP2BPUV4l4KbWZH52N/fQc7g
      obGphmtXuqltrKe6shKL1Ubb6eM4Sovb1ltVVf7i1UtUl1gK3vwAV3v7mJgIYTQYiMVjjIwM
      U1XTgM1sQjEYmPKtHfjII+ysddIXSDE+1E/Ttr3s2reFMqeLgD9MQ61oY64VVnwPkE4k8Gcl
      Sq1GTEu00bwdVFXlb37dCRL88YObZw9AqSrZfJ5sOkMylcBkNKI3mlAUFZ2kIuuNGG46n0tR
      FGRZrPu1yopGgoPxNL867+c7r13m8d1VfOvR7eiLWLihqvCDt6+QzOb5k49vmzv6KkkY9HoM
      ej1W2/zEL25+bbPsM0AineNQ5zgvtw0Tz+T46LZyNvnsHOsJ0DYQ5j8d3MZGn30xJtw2/3jk
      KlfGYvz5J3aIo4XWKcsigGxe4eTVIC+eG6I/mOADG0t5dFclNR7r9U4GqqrSMRrlr169zP4m
      L1860LggF2F7y1Fy5nIqHSr94xHiwTGsHh95JcfVs+088NTn6Tj1G0p9VfSOx6h06IjLdg7s
      2wnAsyf7OH0tyH97YldRZyFBcVmyJZCiqvzw7SsMh5N0jsbYW1fCF/bXs7XCOePTVZIktlY4
      +dHv38lPj/fypR+f4puPbJ13qz+72YyhooIrZw9xJZhhS00pJKO0trSQyqoEIglMRjOvvvAC
      iqeGpgf2Y7O4AXi+dZB3u/08/Znd4uZf5yzZDJBXVP7o52e5q9HDZ++qXVBRtqqq9AYS/NdX
      L7G1wsFX7t84Z8fja1ev4bZZ6B0eIpKRqPaWYJaz9IWSmMnjcLohn8Dm9jE0PIqUDmP3NdId
      lfjFmQG+9zt7lizaK1i9LFoAsWiUN998iwcO7OVEV4AGh0pL7yh1dolEBkbDOZ544iCGBSyt
      84rKT948yz+/28NffuGDuJUYdrOMwVZCKBBkY9OGaSkLU6Yf7vKzudyB2SCTzavkFIVcXiWn
      qOTyk1HZbF7h1fZhLg5F+OHv7cNmEpnggnkugUKDHfz6xDW8JVDqa6B5xxYkWYZslmPHjtIT
      N1O/vZqBgUF2H9hNx5l2JoJpUgos5CGrkyWaDeNY7qvin351lBNvvMXBxx9n5FoXiUiQin2P
      kM7liaVz5BUVRZ38aBsIs73KiddmwqCT0MsSep087bNBJ3G8J8iffnybuPkF15nXnSBJErJe
      DzJkU4nrP7v3Awfw+coYHh0hGY/zyAMPIGWjPHLwIGP+CPZFrDDK6hoY7LrG1++u4psdNQxe
      aqG5eQ/JoI1H9tdR7bZiN+nRyRKyBLIsEUvnsBv1yHN4chRFRdSZCG5kXksgVVXJ5fPo3vNp
      5/N5YrEYZrN5jt9cLArJZBaLRdTDCpaXRe0BVFV9L414+sHMM0U9k8nkqhqXiEUIR+M4XG7s
      VnPBcfFomEgsgbPEg+0GoWrlfazEOFVVSafTtzwIbx6nKArZbHbamRJTt92NwcdcLoeqqhgM
      hlnHZbNZJElCr9fPOi6dTmMwGG6x5cbvdd/+9re/zQKRJAmdTodOp0OSJCRJYqCrjZdfP4wi
      m6gqL73+85vHXbvUyr++eQQMFip93oLjuttP8fo7J5CMVirKPAXHXW49xptHTqM3O/B5SwqO
      O3/qMIeOt2K0OinzuAqOu3KxlZdefQ29o5z6qrKC4zrbT/PKa7/G7Kmmprzw+zjy6+f5fy/9
      Gk9lAz6Ps+C4t195jl+++gZlNU2UltgLjnv9hWd59e3T7GxuxmTQzTwun+R/fO8ZWi72srN5
      B0ZdoXFxvvf0dznXOUjz7h3oZXnGcWSj/N3f/B0Xro6ye88OdO+NuXlcLhniu7vxBwoAAABn
      SURBVE8/Q2d/gObm7dPGye8VUUmSRDo6zjPPfJ+e4TA7d2y95fXk9+xIhIZ55ns/pM8fZ8f2
      zcg3vNbUhyRJRMf7+N73/4GhiTR3bN14fdzUa02NCw338Pc//BFj0RzbN29AliT+P2LEDUUN
      V+GrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='PersonTouring' width='192'>
      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
      Ouf/A13kWUNVWVfCAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
