<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='VehicleMilesTraveled Extract' inline='true' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>4</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1442</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1454.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone</remote-name>
            <remote-type>4</remote-type>
            <local-name>[walk_subzone]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>walk_subzone</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[walk_subzone_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>walk_subzone_label</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Short-walk to transit (less than one-third of a mile)&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ptype]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>8.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ptype_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype_label</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>8</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Child too young for school&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Retired&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>4</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Automobiles &lt; workers&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zero automobiles&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1949</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>8450.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_indiv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_indiv]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt_indiv</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>115686</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>173.72384615384615</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_joint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_joint]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt_joint</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>64984</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>37.865000000000002</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>116692</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>173.72384615384615</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]&quot;' value='Change in Average Vehicle Miles Traveled from Base' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' value='Share of Persons' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[COUNTY]' role='dimension' type='ordinal'>
      </column>
      <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[autoSuff]' role='dimension' type='ordinal'>
      </column>
      <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
      </column>
      <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
      </column>
      <column caption='Person Type' datatype='string' name='[ptype_label]' role='dimension' type='nominal'>
      </column>
      <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[taz]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[walk_subzone]' role='dimension' type='ordinal'>
      </column>
      <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:county_name:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across County' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:7]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:2]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across County Chart' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Per Capita Vehicle Miles Traveled by County of Residence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across CountyReduction Chart' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Change in Per Capita Vehicle Miles Traveled by County of Residence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:8]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:8]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk])</rows>
        <cols>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:8]</cols>
      </table>
    </worksheet>
    <worksheet name='CountyByTransitAvail'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[walk_subzone_label]' derivation='None' name='[none:walk_subzone_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk:2]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Short-walk to transit (less than one-third of a mile)&quot;</bucket>
              <bucket>&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;</bucket>
              <bucket>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='46' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[sum:freq:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='CountyByTransitAvail Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[walk_subzone_label]' derivation='None' name='[none:walk_subzone_label:nk]' pivot='key' type='nominal' />
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Short-walk to transit (less than one-third of a mile)&quot;</bucket>
              <bucket>&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;</bucket>
              <bucket>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[sum:freq:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='CoutyByAutoSuff'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='CoutyByAutoSuff  Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='PersTypeByAutoSuff'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[ptype_label]' derivation='None' name='[none:ptype_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column caption='Person Type' datatype='string' name='[ptype_label]' role='dimension' type='nominal'>
            </column>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Full-time worker&quot;</bucket>
              <bucket>&quot;Part-time worker&quot;</bucket>
              <bucket>&quot;College student&quot;</bucket>
              <bucket>&quot;Non-working adult&quot;</bucket>
              <bucket>&quot;Retired&quot;</bucket>
              <bucket>&quot;Driving-age student&quot;</bucket>
              <bucket>&quot;Non-driving-age student&quot;</bucket>
              <bucket>&quot;Child too young for school&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]' value='74' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='CountyByTransitAvail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CountyByTransitAvail Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CoutyByAutoSuff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CoutyByAutoSuff  Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='PersTypeByAutoSuff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across County Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across CountyReduction Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CountyByTransitAvail' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CountyByTransitAvail Chart' width='192'>
      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
      AIhAkwCIQOsZgNLOGiuZ3X60RYi+6z4UQvnMX71EKH6S8aGo3BhLHDo9xgKFeO31v0G56hKL
      xeQheeLQ6XlblJBuMTgg9/oRh5McBItAkwCIQJMAiECTAIhAkwCIQJMAiECTAIhAkwCIQOv5
      kLy7y4ts5Qr9aY0Qfdb7GWFDg5RKFXlInjiUej4lcnl5hYGBlDwkTxxKPW+M9YVfeqVPTRGi
      /+QrXQSaBEAEmgRABJoEQASaBEAEmgRABJoEQARaz6EQ8x99wK2V9f60Rog+6xkAT4Uol/L9
      aY0QfdbjrhAak5PjRAZG+9MaIfpMUx/jyXdKKRqNBs1mk1DYxPEeDorzff/BGCFNg5gZxrZt
      LB3wnQf1PM9H1+/vcEJgxrBtG8Lg+Q8fw+r5HnpI36ulhYiEI9i2jbE3kUem56Hr+r3JhQhF
      9urpWpgHS6QUnu8/qKdpoBshWq0WIUCpe8uhwFcPlyMU0tF0Hd/30VUI1MP1AApNu7e8uoaH
      /2A9PLpONE1D07R70wuhlLo3fRt1b4LK9/empd1bDM3AcRSmadJoefdn27aOAQw9hPIcLNME
      p9ZhHQO6he36e9NzG/uuYwBTN/EcD9MwUM3m/usY0EwTLRzG93w8V3WsFzb31nFY1/Hch9uA
      7/mEHmmfYUVotVqYuoHyHk7P9z1C99unQcjU9z7be59Jp/maprm3rRgavtp/vhohdD1Ks9kk
      EgbUU6jVam2vC9mMeu/991W54bS9b9t2+9+V8+ry/IJyPL9rvdJuVs1dmle263WtV9jZVHOX
      r/ac3m42oy5duaYenZrv+6rVaj1R79qt5bb3PM9TjtO+XFvrq2r+2i316Fxd11Wu67bV27i7
      rBZuLrXVcxxHeV77cmXuLqubt1fb6tXr9SfqXZ+fU1euLbbVe3xZlfLV3eVb6k4m2/buE/V8
      Xy3dvKaW7270qOepxetX1er6lurGaVbV5bk5lS/Xu07PsWvq0twlVW+5Xes1q0U1NzenyvVW
      13r1cl7NzV1StWb3ba9a2lWXr1xVDbu93v1t+VOdBXLsBsVSGfexUdKmaba9zmez5HdzVJtu
      13qlUoXN9VWcxyb4RL1ylbXVZfzHdl6P1ytWatxZXmp7T9M0DMNoey+7tcXW5haPzjUUChEO
      t/cQS8UCd+6u8ehcdV1v+xYCKOVz3FnLtL0XDoefGE27ducOLcehl1q1RqVaaXvv8WVFKTY3
      t9jKZrvXw2M3u8X6Vq7H9Fx2trJsbLfXe1y1VCKfz5IvN9ref3x6ldwO5UqBnWL3esVcnlJx
      i2K9+7ZS3C2Sz21Q6bFNZdfXqTVtOg3k/3QBcFyiEQPH7fUkeZd604EevS3PsZk4cgwj3KVZ
      fovbi0uY0Th+l8kp5bG5nmFieqZH2/a6NgMDqZ71Wi2HRCJ+v8fSUb3RwDJMui1to1rB9RVu
      z3XHx34+czFfwYoYPeupcISZiZGudfI7WxSbHiG/e/tyO9tEk8PEe8xXAVo4SjLa/bBTD/ko
      zSQc6r6WQ5pL1QZT71JPeVTrDTzX6bjpfaoAGFYEz3HRe0wllhwklYxjGnrXer7vcuPaAvbj
      u5RHhUxePv8i0eRg14XXNJ1Y1ODmzdtdN0SARCJBs2l/rHq6cskVKl3rFfJ5VI+URBNJcBqs
      rm/2mCtEDIWret3FUmNqeoyw3vs2loVshjsb2a51hsdmmEonGBkb61pvJD3I8uJNijW7a71I
      PAGeg9vtswUiiSRG2KKQ696+aqmI4/X4xDSdkaEktxeXaHWY7ycPgPLJbW+S2cr1+GJXLF5f
      YPH2Mq7XZeGVR9NRDA8P90z/5tptbt5a7bkCBlMppo5M9/zG3tneYn5+oWe97c01bixnSA8l
      u9Y7+cJpRtPDPac3PDRENBrtWqdWqXBnPUvLrnWt16wVmb96lczWTo/plRken8AyeuwplMvV
      hVtsbm50rWZFE4yNjpGKR7rWK+/mWFm6xm61e5evuL3D0u0FrFT3PdTk0eNMjKSJWj32PHqE
      mYmhjttoz5vjdqYxlB7nr72a7llv5uhJyi2fbts/yqVadxkeSHTt2gAkh8ZJDziEegTFjESJ
      Rbo/3d5r1WnYHjOzs13ruXYNPZJkYrx3F6NUKlFudf9uqexucOnGCpPHTnetF0skOPnSF3p2
      gyLxAV56/hj5UPc9QGl3h9TYNOVStWs9tBATY0PE4t27hpoWIp5IEu7RDSjVayRTY6STjx+T
      PEIpbGAwNcJgvPumWc4X8D2bcsMhYnRYZt9l/solar6FZezfvk++B9A0LAPe/sl73Rfed7hy
      eY5y3ccKd9lgNR1NtXB8DV3rvmFXqw1mZqa6fsMqt0KuAtGw6tq10c0YlqHTshtdaoHyXTKb
      O8we6X1M4fs+qVT3DUcPG6RSSexm9/lqmsbO2i2WN7pfjMxtrLCwkiH6xEFvO8uKUCrkifTY
      86B8tHCEwWSsa7Vby3d58fgUpUr3W+enk3E0zaNY774H2N5cZ3jiSPe+PXunsHUrTszssu1p
      GslUCny3Y+/j/wMn6Th65uqvUgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CoutyByAutoSuff' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CoutyByAutoSuff  Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='PersTypeByAutoSuff' width='192'>
      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
    </thumbnail>
    <thumbnail height='184' name='Across County' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across County Chart' width='192'>
      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
      GYiFJb5xaQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across CountyReduction Chart' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
