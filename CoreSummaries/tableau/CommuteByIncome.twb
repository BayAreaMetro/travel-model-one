<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='CommuteByIncomeHousehold' inline='true' name='textscan.41876.773494374997' version='8.3'>
      <connection class='textscan' directory='C:/Users/lzorn/Documents/2010_04_ZZZ/summary' filename='CommuteByIncomeHousehold.csv'>
        <relation name='CommuteByIncomeHousehold#csv' table='[CommuteByIncomeHousehold#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='res_COUNTY' ordinal='0' />
            <column datatype='integer' name='res_SD' ordinal='1' />
            <column datatype='integer' name='orig_taz' ordinal='2' />
            <column datatype='integer' name='tour_mode' ordinal='3' />
            <column datatype='integer' name='incQ' ordinal='4' />
            <column datatype='integer' name='freq' ordinal='5' />
            <column datatype='real' name='totCost' ordinal='6' />
            <column datatype='real' name='cost' ordinal='7' />
            <column datatype='real' name='parking_cost' ordinal='8' />
            <column datatype='real' name='distance' ordinal='9' />
            <column datatype='real' name='duration' ordinal='10' />
            <column datatype='integer' name='cost_fail' ordinal='11' />
            <column datatype='integer' name='time_fail' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>res_COUNTY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[res_COUNTY]</local-name>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias>res_COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>res_SD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[res_SD]</local-name>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias>res_SD</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orig_taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[orig_taz]</local-name>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias>orig_taz</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_mode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tour_mode]</local-name>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias>tour_mode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totCost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[totCost]</local-name>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias>totCost</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parking_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[parking_cost]</local-name>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias>parking_cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_fail</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cost_fail]</local-name>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias>cost_fail</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_fail</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time_fail]</local-name>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias>time_fail</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[CommuteByIncomeHousehold#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Simplified Tour Mode' datatype='string' name='[Calculation_3230825183510611]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel distance' datatype='real' name='[Calculation_4410825184855996]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Calculation_7190825185410615])/Sum([freq])' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel time' datatype='real' name='[Calculation_4740825184150011]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([freq]*[duration] )/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='Total Distance' datatype='real' name='[Calculation_7190825185410615]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[freq]*[distance]' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel cost ($2000)' datatype='real' name='[Calculation_7290825185129599]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.01*Sum([freq]*[totCost])/Sum([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative'>
      </column>
      <column caption='Cost Fail' datatype='integer' name='[cost_fail]' role='measure' type='quantitative'>
      </column>
      <column caption='Distance' datatype='real' name='[distance]' role='measure' type='quantitative'>
      </column>
      <column caption='Duration' datatype='real' name='[duration]' role='measure' type='quantitative'>
      </column>
      <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Income Quartile' datatype='integer' name='[incQ]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Less than $30k' />
          <alias key='2' value='$30k to $60k' />
          <alias key='3' value='$60k to $100k' />
          <alias key='4' value='More than $100k' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Orig Taz' datatype='integer' name='[orig_taz]' role='dimension' type='ordinal'>
      </column>
      <column caption='Parking Cost' datatype='real' name='[parking_cost]' role='measure' type='quantitative'>
      </column>
      <column caption='County of Residence' datatype='integer' name='[res_COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
        <aliases>
          <alias key='1' value='San Francisco' />
          <alias key='2' value='San Mateo' />
          <alias key='3' value='Santa Clara' />
          <alias key='4' value='Alameda' />
          <alias key='5' value='Contra Costa' />
          <alias key='6' value='Solano' />
          <alias key='7' value='Napa' />
          <alias key='8' value='Sonoma' />
          <alias key='9' value='Marin' />
        </aliases>
      </column>
      <column caption='res SD' datatype='integer' name='[res_SD]' role='measure' type='quantitative'>
      </column>
      <column caption='Time Fail' datatype='integer' name='[time_fail]' role='measure' type='quantitative'>
      </column>
      <column caption='Tot Cost' datatype='real' name='[totCost]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Tour Mode' datatype='integer' name='[tour_mode]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='CommuteByIncomeJob' inline='true' name='textscan.41879.672427766207' version='8.3'>
      <connection class='textscan' directory='C:/Users/lzorn/Documents/2010_04_ZZZ/summary' filename='CommuteByIncomeJob.csv'>
        <relation name='CommuteByIncomeJob#csv' table='[CommuteByIncomeJob#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='COUNTY' ordinal='0' />
            <column datatype='integer' name='SD' ordinal='1' />
            <column datatype='integer' name='dest_taz' ordinal='2' />
            <column datatype='integer' name='tour_mode' ordinal='3' />
            <column datatype='integer' name='incQ' ordinal='4' />
            <column datatype='integer' name='freq' ordinal='5' />
            <column datatype='real' name='totCost' ordinal='6' />
            <column datatype='real' name='cost' ordinal='7' />
            <column datatype='real' name='parking_cost' ordinal='8' />
            <column datatype='real' name='distance' ordinal='9' />
            <column datatype='real' name='duration' ordinal='10' />
            <column datatype='integer' name='cost_fail' ordinal='11' />
            <column datatype='integer' name='time_fail' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dest_taz]</local-name>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias>dest_taz</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_mode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tour_mode]</local-name>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias>tour_mode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totCost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[totCost]</local-name>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias>totCost</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parking_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[parking_cost]</local-name>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias>parking_cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_fail</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cost_fail]</local-name>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias>cost_fail</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_fail</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time_fail]</local-name>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias>time_fail</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[CommuteByIncomeJob#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='County of Employment' datatype='integer' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
      </column>
      <column caption='Average one-way travel cost ($2000)' datatype='real' name='[Calculation_4890828161101749]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.01*Sum([freq]*[totCost])/Sum([freq])' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel distance' datatype='real' name='[Calculation_5140828161121261]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([freq]*[distance])/Sum([freq])' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel time' datatype='real' name='[Calculation_5490828161144947]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([freq]*[duration])/Sum([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative'>
      </column>
      <column caption='Cost Fail' datatype='integer' name='[cost_fail]' role='measure' type='quantitative'>
      </column>
      <column caption='Dest Taz' datatype='integer' name='[dest_taz]' role='measure' type='quantitative'>
      </column>
      <column caption='Distance' datatype='real' name='[distance]' role='measure' type='quantitative'>
      </column>
      <column caption='Duration' datatype='real' name='[duration]' role='measure' type='quantitative'>
      </column>
      <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Income Quartiles' datatype='integer' name='[incQ]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Less than $30k' />
          <alias key='2' value='$30k to $60k' />
          <alias key='3' value='$60k to $100k' />
          <alias key='4' value='More than $100k' />
        </aliases>
      </column>
      <column caption='Parking Cost' datatype='real' name='[parking_cost]' role='measure' type='quantitative'>
      </column>
      <column caption='Time Fail' datatype='integer' name='[time_fail]' role='measure' type='quantitative'>
      </column>
      <column caption='Tot Cost' datatype='real' name='[totCost]' role='measure' type='quantitative'>
      </column>
      <column caption='Tour Mode' datatype='integer' name='[tour_mode]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Summary by employment county'>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByIncomeJob' name='textscan.41879.672427766207' />
          </datasources>
          <datasource-dependencies datasource='textscan.41879.672427766207'>
            <column caption='County of Employment' datatype='integer' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
            </column>
            <column caption='Average one-way travel cost ($2000)' datatype='real' name='[Calculation_4890828161101749]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*Sum([freq]*[totCost])/Sum([freq])' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel distance' datatype='real' name='[Calculation_5140828161121261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([freq]*[distance])/Sum([freq])' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel time' datatype='real' name='[Calculation_5490828161144947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([freq]*[duration])/Sum([freq])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Income Quartiles' datatype='integer' name='[incQ]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Less than $30k' />
                <alias key='2' value='$30k to $60k' />
                <alias key='3' value='$60k to $100k' />
                <alias key='4' value='More than $100k' />
              </aliases>
            </column>
            <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[incQ]' derivation='None' name='[none:incQ:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4890828161101749]' derivation='User' name='[usr:Calculation_4890828161101749:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5140828161121261]' derivation='User' name='[usr:Calculation_5140828161121261:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5490828161144947]' derivation='User' name='[usr:Calculation_5490828161144947:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41879.672427766207].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41879.672427766207].[usr:Calculation_5140828161121261:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41879.672427766207].[usr:Calculation_5490828161144947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41879.672427766207].[usr:Calculation_4890828161101749:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41879.672427766207].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41879.672427766207].[usr:Calculation_5490828161144947:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41879.672427766207].[usr:Calculation_5140828161121261:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41879.672427766207].[usr:Calculation_4890828161101749:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.41879.672427766207].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.41879.672427766207].[usr:Calculation_5490828161144947:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.41879.672427766207].[usr:Calculation_5140828161121261:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.41879.672427766207].[usr:Calculation_4890828161101749:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.41879.672427766207].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.41879.672427766207].[none:COUNTY:ok]</rows>
        <cols>([textscan.41879.672427766207].[:Measure Names] / [textscan.41879.672427766207].[none:incQ:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Summary by residence county'>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByIncomeHousehold' name='textscan.41876.773494374997' />
          </datasources>
          <datasource-dependencies datasource='textscan.41876.773494374997'>
            <column caption='Average one-way travel distance' datatype='real' name='[Calculation_4410825184855996]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_7190825185410615])/Sum([freq])' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel time' datatype='real' name='[Calculation_4740825184150011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([freq]*[duration] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel cost ($2000)' datatype='real' name='[Calculation_7290825185129599]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*Sum([freq]*[totCost])/Sum([freq])' scope-isolation='false' />
            </column>
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Income Quartile' datatype='integer' name='[incQ]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Less than $30k' />
                <alias key='2' value='$30k to $60k' />
                <alias key='3' value='$60k to $100k' />
                <alias key='4' value='More than $100k' />
              </aliases>
            </column>
            <column-instance column='[incQ]' derivation='None' name='[none:incQ:ok]' pivot='key' type='ordinal' />
            <column-instance column='[res_COUNTY]' derivation='None' name='[none:res_COUNTY:ok]' pivot='key' type='ordinal' />
            <column caption='County of Residence' datatype='integer' name='[res_COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
              <aliases>
                <alias key='1' value='San Francisco' />
                <alias key='2' value='San Mateo' />
                <alias key='3' value='Santa Clara' />
                <alias key='4' value='Alameda' />
                <alias key='5' value='Contra Costa' />
                <alias key='6' value='Solano' />
                <alias key='7' value='Napa' />
                <alias key='8' value='Sonoma' />
                <alias key='9' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4410825184855996]' derivation='User' name='[usr:Calculation_4410825184855996:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4740825184150011]' derivation='User' name='[usr:Calculation_4740825184150011:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7290825185129599]' derivation='User' name='[usr:Calculation_7290825185129599:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41876.773494374997].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41876.773494374997].[usr:Calculation_4740825184150011:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41876.773494374997].[usr:Calculation_4410825184855996:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41876.773494374997].[usr:Calculation_7290825185129599:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41876.773494374997].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41876.773494374997].[usr:Calculation_4740825184150011:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41876.773494374997].[usr:Calculation_4410825184855996:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41876.773494374997].[usr:Calculation_7290825185129599:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41876.773494374997].[sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.41876.773494374997].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.41876.773494374997].[usr:Calculation_7290825185129599:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.41876.773494374997].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41876.773494374997].[none:res_COUNTY:ok]</rows>
        <cols>([textscan.41876.773494374997].[:Measure Names] / [textscan.41876.773494374997].[none:incQ:ok])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Summary by residence county'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41876.773494374997].[none:Calculation_3230825183510611:nk]</field>
          <field>[textscan.41876.773494374997].[none:incQ:ok]</field>
          <field>[textscan.41876.773494374997].[none:res_COUNTY:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Summary by employment county'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41879.672427766207].[none:COUNTY:ok]</field>
          <field>[textscan.41879.672427766207].[none:incQ:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Summary by residence county' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Summary by employment county' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
