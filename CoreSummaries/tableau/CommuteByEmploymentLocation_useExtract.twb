<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='CommuteByEmploymentLocation Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\CommuteByEmploymentLocation.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>dest_COUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[dest_COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[dest_county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_SD</remote-name>
            <remote-type>4</remote-type>
            <local-name>[dest_SD]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_SD</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>34.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_mode</remote-name>
            <remote-type>4</remote-type>
            <local-name>[tour_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_mode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>17</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>18.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1010</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>132028.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totCost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[totCost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>totCost</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1237</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2690.77</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1237</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2690.77</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parking_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[parking_cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>parking_cost</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>94</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1264.5194157420924</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1455</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.82292013311148082</statistic>
              <statistic aggregation='Max' datatype='real'>107.56999999999999</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_fail</remote-name>
            <remote-type>4</remote-type>
            <local-name>[cost_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost_fail</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>56</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>80.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010 Base (v0.4)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040 Holy Moly!&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Commute Out-of-Pocket Cost' datatype='real' name='[Calculation_0520829125555187]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.01*Sum([Calculation_3260829125748748]*[freq])/Sum([freq])' scope-isolation='false' />
      </column>
      <column caption='Out-of-pocket cost' datatype='real' name='[Calculation_3260829125748748]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='2*[cost]+[parking_cost]' scope-isolation='false' />
      </column>
      <column caption='Drive Alone Mode Share' datatype='real' name='[Calculation_3380922165907243]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([freq]*IIF([Calculation_6150829121551210]=&apos;Drive alone&apos;,1,0))/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='Tour Travel Mode' datatype='string' name='[Calculation_6150829121551210]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average One-way Commute Distance' datatype='real' name='[Calculation_6430829125408368]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([distance]*[freq] )/(Sum([freq]))' scope-isolation='false' />
      </column>
      <column caption='Transit Mode Share' datatype='real' name='[Calculation_6710922170841129]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([freq]*IIF([Calculation_6150829121551210]=&apos;Transit&apos;,1,0))/SUM([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[dest_COUNTY]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Downtown San Francisco' />
          <alias key='11.0' value='Downtown San Jose' />
          <alias key='18.0' value='Downtown Oakland' />
        </aliases>
      </column>
      <column caption='County' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[tour_mode]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across ModeShare' tab-color='#eaeed3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Commute Drive Alone Mode Share to Regional Job Centers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByEmploymentLocation Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde'>
            <column caption='Drive Alone Mode Share' datatype='real' name='[Calculation_3380922165907243]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([freq]*IIF([Calculation_6150829121551210]=&apos;Drive alone&apos;,1,0))/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Transit Mode Share' datatype='real' name='[Calculation_6710922170841129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([freq]*IIF([Calculation_6150829121551210]=&apos;Transit&apos;,1,0))/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Downtown San Francisco' />
                <alias key='11.0' value='Downtown San Jose' />
                <alias key='18.0' value='Downtown Oakland' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_SD]' derivation='None' name='[none:dest_SD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3380922165907243]' derivation='User' name='[usr:Calculation_3380922165907243:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6710922170841129]' derivation='User' name='[usr:Calculation_6710922170841129:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByEmploymentLocation.tde].[usr:Calculation_6710922170841129:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:dest_SD:ok]' member='1.0' />
              <groupfilter function='member' level='[none:dest_SD:ok]' member='11.0' />
              <groupfilter function='member' level='[none:dest_SD:ok]' member='18.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='113' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[usr:Calculation_6710922170841129:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]' />
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk])</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Across ModeShare Chart' tab-color='#eaeed3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Commute Drive Alone Mode Share to Regional Job Centers - </run>
            <run fontcolor='#b40f1e'>Drive Alone and Transit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByEmploymentLocation Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde'>
            <column caption='Drive Alone Mode Share' datatype='real' name='[Calculation_3380922165907243]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([freq]*IIF([Calculation_6150829121551210]=&apos;Drive alone&apos;,1,0))/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Transit Mode Share' datatype='real' name='[Calculation_6710922170841129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([freq]*IIF([Calculation_6150829121551210]=&apos;Transit&apos;,1,0))/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Downtown San Francisco' />
                <alias key='11.0' value='Downtown San Jose' />
                <alias key='18.0' value='Downtown Oakland' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_SD]' derivation='None' name='[none:dest_SD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3380922165907243]' derivation='User' name='[usr:Calculation_3380922165907243:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6710922170841129]' derivation='User' name='[usr:Calculation_6710922170841129:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:dest_SD:ok]' member='1.0' />
              <groupfilter function='member' level='[none:dest_SD:ok]' member='11.0' />
              <groupfilter function='member' level='[none:dest_SD:ok]' member='18.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[usr:Calculation_6710922170841129:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[usr:Calculation_6710922170841129:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk] + [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[usr:Calculation_6710922170841129:qk])</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AvgCost'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Commuter Characteristics by Employment Location</run>
            <run bold='false' fontsize='11' italic='true'>&#10;Average Round-trip Out-of-Pocket Cost plus Parking Cost (in year 2000 dollars) by Employment Location and Travel Mode for &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByEmploymentLocation Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde'>
            <column caption='Average Commute Out-of-Pocket Cost' datatype='real' name='[Calculation_0520829125555187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*Sum([Calculation_3260829125748748]*[freq])/Sum([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Travel Mode' datatype='string' name='[Calculation_6150829121551210]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Downtown San Francisco' />
                <alias key='11.0' value='Downtown San Jose' />
                <alias key='18.0' value='Downtown Oakland' />
              </aliases>
            </column>
            <column caption='County' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Calculation_6150829121551210]' derivation='None' name='[none:Calculation_6150829121551210:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_SD]' derivation='None' name='[none:dest_SD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dest_county_name]' derivation='None' name='[none:dest_county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0520829125555187]' derivation='User' name='[usr:Calculation_0520829125555187:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6150829121551210:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Carpool toll (2 occupants)&quot;' />
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Drive alone toll&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Drive alone&quot;</bucket>
              <bucket>&quot;Carpool (2 occupants)&quot;</bucket>
              <bucket>&quot;Carpool (3+ occupants)&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bike&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='natural' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' direction='ASC' />
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='69' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[usr:Calculation_0520829125555187:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='40' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[usr:Calculation_0520829125555187:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_county_name:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='AvgDistance'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Commuter Characteristics by Employment Location</run>
            <run bold='false' fontsize='11' italic='true'>&#10;Average One-way Commute Distance by Employment Location and Travel Mode for &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByEmploymentLocation Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde'>
            <column caption='Tour Travel Mode' datatype='string' name='[Calculation_6150829121551210]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average One-way Commute Distance' datatype='real' name='[Calculation_6430829125408368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[freq] )/(Sum([freq]))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Downtown San Francisco' />
                <alias key='11.0' value='Downtown San Jose' />
                <alias key='18.0' value='Downtown Oakland' />
              </aliases>
            </column>
            <column caption='County' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Calculation_6150829121551210]' derivation='None' name='[none:Calculation_6150829121551210:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_SD]' derivation='None' name='[none:dest_SD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dest_county_name]' derivation='None' name='[none:dest_county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6430829125408368]' derivation='User' name='[usr:Calculation_6430829125408368:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6150829121551210:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Carpool toll (2 occupants)&quot;' />
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Drive alone toll&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Drive alone&quot;</bucket>
              <bucket>&quot;Carpool (2 occupants)&quot;</bucket>
              <bucket>&quot;Carpool (3+ occupants)&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bike&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='69' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[usr:Calculation_6430829125408368:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='40' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[usr:Calculation_6430829125408368:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_county_name:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='TourModeShare'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Commute Characteristics by Employment Location</run>
            <run bold='false' fontsize='11' italic='true'>&#10;Commute Tour Mode Share by Employment Location for &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByEmploymentLocation Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde'>
            <column caption='Tour Travel Mode' datatype='string' name='[Calculation_6150829121551210]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Downtown San Francisco' />
                <alias key='11.0' value='Downtown San Jose' />
                <alias key='18.0' value='Downtown Oakland' />
              </aliases>
            </column>
            <column caption='County' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_6150829121551210]' derivation='None' name='[none:Calculation_6150829121551210:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_SD]' derivation='None' name='[none:dest_SD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dest_county_name]' derivation='None' name='[none:dest_county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6150829121551210:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Carpool toll (2 occupants)&quot;' />
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Drive alone toll&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Drive alone&quot;</bucket>
              <bucket>&quot;Carpool (2 occupants)&quot;</bucket>
              <bucket>&quot;Carpool (3+ occupants)&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bike&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='69' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='40' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[pcto:sum:freq:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_county_name:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Tours Mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Commuter Characteristics by Employment Location</run>
            <run bold='false' fontsize='11' italic='true'>&#10;Frequency of Commute Tours (round trips) by Employment Location and Travel Mode for &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByEmploymentLocation Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde'>
            <column caption='Tour Travel Mode' datatype='string' name='[Calculation_6150829121551210]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Downtown San Francisco' />
                <alias key='11.0' value='Downtown San Jose' />
                <alias key='18.0' value='Downtown Oakland' />
              </aliases>
            </column>
            <column caption='County' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_6150829121551210]' derivation='None' name='[none:Calculation_6150829121551210:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_SD]' derivation='None' name='[none:dest_SD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dest_county_name]' derivation='None' name='[none:dest_county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6150829121551210:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Carpool toll (2 occupants)&quot;' />
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Drive alone toll&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Drive alone&quot;</bucket>
              <bucket>&quot;Carpool (2 occupants)&quot;</bucket>
              <bucket>&quot;Carpool (3+ occupants)&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bike&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='69' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='40' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[sum:freq:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_county_name:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Tours Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='73'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:SD:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:tour_mode:ok]</field>
          <field>[textscan.41876.562641504628].[:Measure Names]</field>
          <field>[textscan.41876.562641504628].[none:COUNTY:ok]</field>
          <field>[textscan.41876.562641504628].[none:Calculation_4720825133305459:nk]</field>
          <field>[textscan.41876.562641504628].[none:SD:ok]</field>
          <field>[textscan.41876.562641504628].[none:tour_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='TourModeShare'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='68'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:SD:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:tour_mode:ok]</field>
          <field>[textscan.41876.562641504628].[:Measure Names]</field>
          <field>[textscan.41876.562641504628].[none:COUNTY:ok]</field>
          <field>[textscan.41876.562641504628].[none:Calculation_4720825133305459:nk]</field>
          <field>[textscan.41876.562641504628].[none:SD:ok]</field>
          <field>[textscan.41876.562641504628].[none:tour_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AvgDistance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='81'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:SD:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:tour_mode:ok]</field>
          <field>[textscan.41876.562641504628].[:Measure Names]</field>
          <field>[textscan.41876.562641504628].[none:COUNTY:ok]</field>
          <field>[textscan.41876.562641504628].[none:Calculation_4720825133305459:nk]</field>
          <field>[textscan.41876.562641504628].[none:SD:ok]</field>
          <field>[textscan.41876.562641504628].[none:tour_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AvgCost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:SD:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:tour_mode:ok]</field>
          <field>[textscan.41876.562641504628].[:Measure Names]</field>
          <field>[textscan.41876.562641504628].[none:COUNTY:ok]</field>
          <field>[textscan.41876.562641504628].[none:Calculation_4720825133305459:nk]</field>
          <field>[textscan.41876.562641504628].[none:SD:ok]</field>
          <field>[textscan.41876.562641504628].[none:tour_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across ModeShare'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across ModeShare Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByEmploymentLocation.tde].[none:dest_SD:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Tours Mode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TourModeShare' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AvgDistance' width='192'>
      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
      txS+w/z/I2kp7fBsGu0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='AvgCost' width='192'>
      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
    </thumbnail>
    <thumbnail height='184' name='Across ModeShare' width='192'>
      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
      wvw7RYB/R/4fgp+HHyM4lsAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Across ModeShare Chart' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
