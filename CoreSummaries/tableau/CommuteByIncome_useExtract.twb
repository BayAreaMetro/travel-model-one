<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='CommuteByIncomeHousehold Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\CommuteByIncomeHousehold.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>res_COUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[res_COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>res_COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>res_county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[res_county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>res_county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>res_SD</remote-name>
            <remote-type>4</remote-type>
            <local-name>[res_SD]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>res_SD</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>34.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orig_taz</remote-name>
            <remote-type>4</remote-type>
            <local-name>[orig_taz]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>orig_taz</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1442</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1454.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_mode</remote-name>
            <remote-type>4</remote-type>
            <local-name>[tour_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>17</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>18.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>4</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>4.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;$30k to $60k&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;More than $100k&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>944</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>7044.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totCost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[totCost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>totCost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>93534</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>3910.320905</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>93354</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2965.4449999999997</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parking_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[parking_cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>parking_cost</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>38083</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2763.8398200000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>106863</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.20000000000000001</statistic>
              <statistic aggregation='Max' datatype='real'>119.15000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>118551</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>176.19</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_fail</remote-name>
            <remote-type>4</remote-type>
            <local-name>[cost_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost_fail</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_fail</remote-name>
            <remote-type>4</remote-type>
            <local-name>[time_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>time_fail</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010 Base (v0.4)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040 Holy Moly!&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Commuters' datatype='real' name='[Calculation_3060829135932889]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[freq]*2' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel distance' datatype='real' name='[Calculation_4410825184855996]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([distance]*[freq])/Sum([freq])' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel time' datatype='real' name='[Calculation_4740825184150011]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([freq]*[duration] )/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='Simplified Tour Mode' datatype='string' name='[Calculation_6900829131039739]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel cost ($2000)' datatype='real' name='[Calculation_7290825185129599]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.01*Sum([freq]*[totCost])/Sum([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Freq (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[freq]' peg='0' size='1000' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='duration (bin)' datatype='integer' name='[duration (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[duration]' peg='0' size='1' />
      </column>
      <column datatype='real' name='[duration]' role='measure' type='quantitative'>
      </column>
      <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Income Quartile' datatype='real' name='[incQ]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Less than $30k' />
          <alias key='2.0' value='$30k to $60k' />
          <alias key='3.0' value='$60k to $100k' />
          <alias key='4.0' value='More than $100k' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Orig Taz' datatype='real' name='[orig_taz]' role='dimension' type='ordinal'>
      </column>
      <column caption='County of Residence' datatype='real' name='[res_COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
        <aliases>
          <alias key='1.0' value='San Francisco' />
          <alias key='2.0' value='San Mateo' />
          <alias key='3.0' value='Santa Clara' />
          <alias key='4.0' value='Alameda' />
          <alias key='5.0' value='Contra Costa' />
          <alias key='6.0' value='Solano' />
          <alias key='7.0' value='Napa' />
          <alias key='8.0' value='Sonoma' />
          <alias key='9.0' value='Marin' />
        </aliases>
      </column>
      <column datatype='string' name='[res_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[tour_mode]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='CommuteByIncomeJob Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\CommuteByIncomeJob.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>dest_COUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[dest_COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[dest_county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_SD</remote-name>
            <remote-type>4</remote-type>
            <local-name>[dest_SD]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_SD</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>34.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_taz</remote-name>
            <remote-type>4</remote-type>
            <local-name>[dest_taz]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_taz</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1454</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1454.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_mode</remote-name>
            <remote-type>4</remote-type>
            <local-name>[tour_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>17</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>18.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>4</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>4.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;$30k to $60k&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;More than $100k&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1289</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>6505.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totCost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[totCost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>totCost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>85335</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>4527.70183</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>85296</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2690.77</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parking_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[parking_cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>parking_cost</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3874</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>3667.0868299999997</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>90977</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.17999999999999999</statistic>
              <statistic aggregation='Max' datatype='real'>125.09</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>102495</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>174.08000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_fail</remote-name>
            <remote-type>4</remote-type>
            <local-name>[cost_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost_fail</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>13</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>12.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_fail</remote-name>
            <remote-type>4</remote-type>
            <local-name>[time_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>time_fail</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>3.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010 Base (v0.4)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040 Holy Moly!&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average one-way travel cost ($2000)' datatype='real' name='[Calculation_5280829140146715]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.01*Sum([freq]*[totCost])/Sum([freq])' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel time' datatype='real' name='[Calculation_5770829140308673]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([freq]*[duration] )/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='Commuters' datatype='real' name='[Calculation_6260829141119939]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='2*[freq]' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel distance' datatype='real' name='[Calculation_9140829140434765]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([distance]*[freq])/Sum([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='County of Employment' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Income Quartile' datatype='real' name='[incQ]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Less than $30k' />
          <alias key='2.0' value='$30k to $60k' />
          <alias key='3.0' value='$60k to $100k' />
          <alias key='4.0' value='More than $100k' />
        </aliases>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Summary by Employment county'>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByIncomeJob Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde'>
            <column caption='Average one-way travel cost ($2000)' datatype='real' name='[Calculation_5280829140146715]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*Sum([freq]*[totCost])/Sum([freq])' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel time' datatype='real' name='[Calculation_5770829140308673]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([freq]*[duration] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='Commuters' datatype='real' name='[Calculation_6260829141119939]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='2*[freq]' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel distance' datatype='real' name='[Calculation_9140829140434765]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[freq])/Sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Employment' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Income Quartile' datatype='real' name='[incQ]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Less than $30k' />
                <alias key='2.0' value='$30k to $60k' />
                <alias key='3.0' value='$60k to $100k' />
                <alias key='4.0' value='More than $100k' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_county_name]' derivation='None' name='[none:dest_county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ]' derivation='None' name='[none:incQ:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_6260829141119939]' derivation='Sum' name='[sum:Calculation_6260829141119939:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5280829140146715]' derivation='User' name='[usr:Calculation_5280829140146715:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5770829140308673]' derivation='User' name='[usr:Calculation_5770829140308673:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9140829140434765]' derivation='User' name='[usr:Calculation_9140829140434765:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeJob.tde].[usr:Calculation_5770829140308673:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeJob.tde].[usr:Calculation_9140829140434765:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeJob.tde].[usr:Calculation_5280829140146715:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeJob.tde].[sum:Calculation_6260829141119939:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeJob.tde].[usr:Calculation_5770829140308673:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeJob.tde].[usr:Calculation_9140829140434765:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeJob.tde].[usr:Calculation_5280829140146715:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde].[usr:Calculation_5770829140308673:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde].[usr:Calculation_5280829140146715:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde].[none:dest_county_name:nk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde].[none:incQ:ok])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Summary by residence county'>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByIncomeHousehold Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde'>
            <column caption='Commuters' datatype='real' name='[Calculation_3060829135932889]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[freq]*2' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel distance' datatype='real' name='[Calculation_4410825184855996]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[freq])/Sum([freq])' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel time' datatype='real' name='[Calculation_4740825184150011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([freq]*[duration] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel cost ($2000)' datatype='real' name='[Calculation_7290825185129599]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*Sum([freq]*[totCost])/Sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Income Quartile' datatype='real' name='[incQ]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Less than $30k' />
                <alias key='2.0' value='$30k to $60k' />
                <alias key='3.0' value='$60k to $100k' />
                <alias key='4.0' value='More than $100k' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ]' derivation='None' name='[none:incQ:ok]' pivot='key' type='ordinal' />
            <column-instance column='[res_COUNTY]' derivation='None' name='[none:res_COUNTY:ok]' pivot='key' type='ordinal' />
            <column caption='County of Residence' datatype='real' name='[res_COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3060829135932889]' derivation='Sum' name='[sum:Calculation_3060829135932889:qk]' pivot='key' type='quantitative' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4410825184855996]' derivation='User' name='[usr:Calculation_4410825184855996:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4740825184150011]' derivation='User' name='[usr:Calculation_4740825184150011:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7290825185129599]' derivation='User' name='[usr:Calculation_7290825185129599:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeHousehold.tde].[usr:Calculation_4740825184150011:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeHousehold.tde].[usr:Calculation_4410825184855996:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeHousehold.tde].[usr:Calculation_7290825185129599:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeHousehold.tde].[sum:Calculation_3060829135932889:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeHousehold.tde].[usr:Calculation_4740825184150011:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeHousehold.tde].[usr:Calculation_4410825184855996:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeHousehold.tde].[usr:Calculation_7290825185129599:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\CommuteByIncomeHousehold.tde].[sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[usr:Calculation_7290825185129599:qk]' value='C1033%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[usr:Calculation_4740825184150011:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[usr:Calculation_4410825184855996:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[none:res_COUNTY:ok]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[none:incQ:ok])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='duration pdf'>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByIncomeHousehold Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='duration (bin)' datatype='integer' name='[duration (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[duration]' peg='0' size='1' />
            </column>
            <column datatype='real' name='[duration]' role='measure' type='quantitative'>
            </column>
            <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Income Quartile' datatype='real' name='[incQ]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Less than $30k' />
                <alias key='2.0' value='$30k to $60k' />
                <alias key='3.0' value='$60k to $100k' />
                <alias key='4.0' value='More than $100k' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ]' derivation='None' name='[none:incQ:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='6' />
            <format attr='cell-h' value='6' />
            <format attr='cell' value='6' />
            <format attr='cell-q' value='30' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='cols' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[none:incQ:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#820000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[pcto:sum:freq:qk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[duration (bin)]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Summary by residence county'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[none:Scenario:nk]</field>
          <field>[textscan.41876.773494374997].[none:Calculation_3230825183510611:nk]</field>
          <field>[textscan.41876.773494374997].[none:incQ:ok]</field>
          <field>[textscan.41876.773494374997].[none:res_COUNTY:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Summary by Employment county'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeJob.tde].[none:incQ:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='duration pdf'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[none:incQ:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;2040 Holy Moly!&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\CommuteByIncomeHousehold.tde].[none:incQ:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Summary by residence county' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Summary by Employment county' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='duration pdf' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
