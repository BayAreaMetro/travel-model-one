<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='ActiveTransport Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\ActiveTransport.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>4</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1442</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1454.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ptype]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>8.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zeroAuto</remote-name>
            <remote-type>11</remote-type>
            <local-name>[zeroAuto]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>zeroAuto</remote-alias>
            <ordinal>3</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='boolean'>false</statistic>
              <statistic aggregation='Max' datatype='boolean'>true</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2351</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>13494.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>active</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>49741</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>194.39999999999998</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>more15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[more15]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>more15</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19545</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>more30</remote-name>
            <remote-type>5</remote-type>
            <local-name>[more30]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>more30</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>17485</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wlk_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wlk_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>wlk_trip</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>22691</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>7.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bik_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bik_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>bik_trip</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11383</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>7.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wtr_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wtr_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>wtr_trip</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>17905</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>7.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dtr_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dtr_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dtr_trip</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8527</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>atHomeA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[atHomeA]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>atHomeA</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14544</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' value='Share of Total Population' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;' value='Share of the population' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' value='Population' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' value='Share of population that does not leave home on a typical weekday' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' value='Bicycle trips per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' value='Average minutes of active travel per person per typical weekday' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' value='Share of the population that engages in at least 15 minutes of active travel per typical weekday' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' value='Walk trips which are part of drive to transit travel per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' value='Walk trips (which are not part of a transit trip) per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' value='Walk trips which are part of walk to transit travel per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' value='Walk trips which are part of transit travel per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' value='Share of the population that engages in at least 30 minutes of active travel per typical weekday' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' value='Average minutes of active travel per person for all those who leave home on a typical weekday' />
        </aliases>
      </column>
      <column caption='AtHomeFreq' datatype='real' name='[Calculation_0480828180930394]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[atHomeA]*[freq]' scope-isolation='false' />
      </column>
      <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
      </column>
      <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Active' datatype='real' name='[active]' role='measure' type='quantitative'>
      </column>
      <column caption='At Home A' datatype='real' name='[atHomeA]' role='measure' type='quantitative'>
      </column>
      <column caption='Bik Trip' datatype='real' name='[bik_trip]' role='measure' type='quantitative'>
      </column>
      <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column caption='Dtr Trip' datatype='real' name='[dtr_trip]' role='measure' type='quantitative'>
      </column>
      <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column caption='More15' datatype='real' name='[more15]' role='measure' type='quantitative'>
      </column>
      <column caption='More30' datatype='real' name='[more30]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Full-time worker' />
          <alias key='2.0' value='Part-time worker' />
          <alias key='3.0' value='College student' />
          <alias key='4.0' value='Non-working adult' />
          <alias key='5.0' value='Retired' />
          <alias key='6.0' value='Driving-age student' />
          <alias key='7.0' value='Non-driving-age student' />
          <alias key='8.0' value='Child too young for school' />
        </aliases>
      </column>
      <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
          <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
          <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Taz' datatype='real' name='[taz]' role='dimension' type='ordinal'>
      </column>
      <column caption='Wlk Trip' datatype='real' name='[wlk_trip]' role='measure' type='quantitative'>
      </column>
      <column caption='Wtr Trip' datatype='real' name='[wtr_trip]' role='measure' type='quantitative'>
      </column>
      <column datatype='boolean' name='[zeroAuto]' role='dimension' type='nominal'>
        <aliases>
          <alias key='false' value='Non-zero Automobiles' />
          <alias key='true' value='Zero Automobiles' />
        </aliases>
      </column>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
      <folder name='Active' role='measures'>
        <folder-item name='[Calculation_2310828180634107]' type='field' />
        <folder-item name='[Calculation_3570828180454696]' type='field' />
        <folder-item name='[Calculation_4530828180712947]' type='field' />
        <folder-item name='[Calculation_5180828180654215]' type='field' />
        <folder-item name='[Calculation_5750828180815438]' type='field' />
        <folder-item name='[Calculation_6150828180840224]' type='field' />
        <folder-item name='[Calculation_8120828180802260]' type='field' />
        <folder-item name='[Calculation_8230828180724803]' type='field' />
        <folder-item name='[Calculation_8380828180514207]' type='field' />
        <folder-item name='[active]' type='field' />
        <folder-item name='[bik_trip]' type='field' />
        <folder-item name='[dtr_trip]' type='field' />
        <folder-item name='[more15]' type='field' />
        <folder-item name='[more30]' type='field' />
        <folder-item name='[wlk_trip]' type='field' />
        <folder-item name='[wtr_trip]' type='field' />
      </folder>
      <folder name='Regional' role='measures'>
        <folder-item name='[Calculation_0480828180930394]' type='field' />
        <folder-item name='[Calculation_2100828180906930]' type='field' />
        <folder-item name='[atHomeA]' type='field' />
        <folder-item name='[freq]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Across_chartPersonType' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Scenario' />
        <param name='target' value='Across_chartPersonType' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Across_PopByPersonType'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Population by Person Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ptype]' derivation='None' name='[none:ptype:ok]' pivot='key' type='ordinal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:4]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]' value='196' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:4]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Across_chartPersonType'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Person Type Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ptype]' derivation='None' name='[none:ptype:ok]' pivot='key' type='ordinal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:5]' value='p0.0%' />
            <format attr='cell-w' value='42' />
            <format attr='cell-h' value='14' />
            <format attr='cell' value='14' />
            <format attr='cell-q' value='70' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]' value='0' />
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:5]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='ActiveTravelByAutoOwnership'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[zeroAuto]' derivation='None' name='[none:zeroAuto:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
            <column datatype='boolean' name='[zeroAuto]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Non-zero Automobiles' />
                <alias key='true' value='Zero Automobiles' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:zeroAuto:nk]' value='85' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='212' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='normal' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#3f6a6e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:zeroAuto:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='ActiveTravelByCounty'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='392' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='auto' />
            <format attr='text-align' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='auto' />
            <format attr='font-weight' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='normal' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='Arial' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#3f6a6e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='ActiveTravelByPersonType'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ptype]' derivation='None' name='[none:ptype:ok]' pivot='key' type='ordinal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]' value='84' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='wrap' data-class='subtotal' scope='cols' value='auto' />
            <format attr='wrap' data-class='total' scope='cols' value='auto' />
            <format attr='wrap' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='on' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='296' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' value='auto' />
            <format attr='text-orientation' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='0' />
            <format attr='wrap' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='auto' />
            <format attr='font-weight' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='67' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='512' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</rows>
        <cols></cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Summary'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='95'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:dir:nk]</field>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</field>
              </fields>
              <multibucket>
                <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
              <fields>
                <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;2010_04_ZZZ&quot;</bucket>
              </multibucket>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActiveTravelByPersonType'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='95'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:dir:nk]</field>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActiveTravelByCounty'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='85'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:dir:nk]</field>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActiveTravelByAutoOwnership'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='95'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:dir:nk]</field>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
          <field>[textscan.41862.719202812499].[none:zeroAuto:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across_PopByPersonType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:dir:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across_chartPersonType'>
      <cards>
        <edge name='left'>
          <strip size='217'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Summary' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ActiveTravelByPersonType' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ActiveTravelByCounty' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ActiveTravelByAutoOwnership' width='192'>
      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
      6mgmKx6HhfFYBL+yDJSuVhH1cvjITXY81YBrvP9jLYiAklRIKDqySQTZgtUiYxZT5/Q/RaSM
      InaUXufEO4dIqAUcyNPpuz5KSeM6qmxvcuL4InJeJQ0bcplt6eDwVILCym34b16ibTqEFFlm
      85atJH09jFiqaNhcxYWzh9BjAk0bsglOd6Ln5uORIOr3cbKlFQRQCxooTrvTj/sLgCiTlpOH
      y3xnIjrSK2ku7+f1t89QtGsv2epVro1e5+UZaNr/LOvTi7j866O05zrIKbbhUvKQ0gooy77C
      rVvLFFVkYrXmkab3s2IqJsNlpX7XTo6deAsjo5onanKJ+XIwCTJpuTnYpH+jfym+nIhONj/2
      NMWLQWRHGpke6FgZRjOV88jz32A5lMDuycBjk3jq6XyCCYP0jAyskorbv4SChZycDGJTYywt
      J9m86THSSpbQZAcZGW4EZRvPlKzqzfbMUh494GYlksSZnoHnI/PpU7AEG/Se/RlXg1v5y6fX
      /2FVpVjDxJifVcjK8/xOd/PK0ixhRx4Zlt+v1U9FADQ1iWZImE2ppTrFl4uUL1CKNc09zwCq
      qv6x+5EixedCSgBSrGlSd4wp1jQpAUjxBUQnMDdBb08vE3MBtNun1OjyDDNLET56aDV0Df+U
      j0AiiZGM4B3sY2DER0KH2MoMff3DBOIaRjLE7FwQ/bdauqcv0N0qkIGyPMa7bx3iQtstdGch
      bmmGS5fHyS/OR/4UREgPT/D6Lw4RdBVQnOlgYrADf0Kk98olTFmluKyf1e1SkI7TbQgFJTg/
      ogzGF8a5NbZCcKaLBS2DbPfveceW4vfCCPt4953TRE0Gfde7yKpch4cljvzyZfqS+TSUZ324
      civBMX7297/A1NiIOHiW4z0BAkOtLLvLCd44zeDUBOPJTNIXr9ERyKGywHnXqn9/Q5gW4eJ7
      R3Hv+DZPl8Q5daYbv2ymr2MQs0Ulu6yS6iwTwwMDzIdUimoa8MSnmFjWcGblY49NMb6QoLC6
      jqIMJ4IAhhpjbLCPmbBMfV0pY+cPMyzX8nhxJkQXaTl2CPPGJ0l0XScsu5ktKGBdVRFx/zh9
      3nnSiqqpK179qjkZmKZvJoQeWMJT0URJhpmZkR58ASivqUcMTrIYDLMSk6mrryA8NYG5qArr
      yigBm4PJ/hGcW5oJDfYwH1TIr64l0nqK92YL+P6BSmwOE8F5LwOjc7gLqylK0/B5ZwlE42SU
      1lCVn3afAUzxu5JYmmXeXMCTe/dy9Kf/xOxigKCvFcmTftfqrydWaL/Qjr2wGBkRk9WMiI5k
      tmIzSwiChCjqJJbGOR+x8fSzOfz2UvoAO4CIrIdob2tnLijStHUzLmGBy5fHKMiXaemYZGt1
      NjMLKwR9XVxbkHH7LnJuxkV1RoDTZ3qQzQrtvT7W1VVikmC+/xInby6QZUxzbVwn37LIhFHC
      jroCTIJGf1cbloJ6wgNdmAvLGL7Rij07ndaWFgSzxM0r3eRuaMItQ8R7hZdPDFBaYqf1Yg8Z
      rgSnLgzjtoS5NriEMH6RK/MWPJEhevywdP08seKNaD2H6NaLYWKSjNpSwv5l9JVBLvWoFHlC
      jEY9OENd+E05DLYcQXVn0dd+A8GywrHDveRmaZzrmWdnU9VnMQfWNJLNQczbzqn2cVQ9RppL
      ZnBSoyJbZzLuoakqB1kQmLh1idFkJp7oAmJeAZrPS9RVSI4cJmQpYXNTKWZ7No74NJoW4+LZ
      VmKOfEqynB+2dX8FRpQpbn6Uv/iz56hNT/LGq68xFVBIzyulqWEdJjFJMhFkanychZUg4WgC
      gNyKOnKTCwz6V1gJJ0h3uVExAB3/zDy5lRt5aPs6wuML2DM9uDKysZlFsLjJ9DhI8zgwuzNY
      t66JonQbyyvT+Cbn8S9FSM+zo8bvdDGjspGtW/aRLk7iHx9HLG5ky8YmQktT6LKbdRs2sr2x
      gvmlZaR7+BYZiQi+yTGml8IkoiruDA9ulwdZFgE/gUAGTVu2UmpKMhOO4s4tYeO6OkRSt2Wf
      BYKmkla7l7/89iPk2j24bVZkYYWbPSNMjo4STNwed1EgsThG/8Q4w12DeH0BCuvXUZ9vZcQ7
      i5yWT02BiellAUsoyqY9GxgYGburrfuqQHoiyIXD76OUbKLcnUV+1vzHPoYJzY0xGTHRmJfB
      bDiJdrtWObuQ0owgVRWljC3EMSMAAuk5GbT19dIRDmMtrsDJ3aHsTKJAIBy76zeLLZPM7Eyq
      6yuZ7p/B8pE4MCujA3T3JwhohWwoLkS73E+31YLdnYuodDM0OIhVmiQnt5FMYZyRgW78Y8uQ
      t/p8YmmckSWZPdWZTA4mMSQZJRpGM+tABk7nEv3dXUwmBGrsVqbvN2gp/jDMdrSZc7x8JUDN
      tkepbyihqbGZpf4LXA2VYA5Pc2PUYNOG/ZQ2JrhxsgVL83aK43l8cPxVeqQMnniqHjMqkwOT
      lG3dRVm0h1dP36B29xN3NXVPS3A8/pHlFYPYoo+O7iGiqkhp/WaKPFFGvDGqyjPon/TTUOTh
      1q1eRGcaoimNHMsKYUcVVdlmJvtvMDKvUFrfRHmO+/YZIMpw900mghKNmzfijk0wksihocgN
      gH/sJqNRJ04lRH5VPcHpMRwFJQjLY3QNzZFeVk9TRS4CEOw7wT+eWWRHYx5FNVupyDYz0dfB
      +JJB1fomfCd+QY+1kMqsApo2r8cWneJazzQup0R6aR3MzJJWnstoZxfJtCzSMZNX5KC7f4GC
      DBFTViXOhI+uAR+e4nrKs1TGp3SqS5z0TwXZUFv2Gc6EFJ81DyAAX2yik52cHpE5uG8997qr
      Gbx4guXCTWwvz/6j9y3FF58vvQCkSPGHkDKEpVjT3HMH0PXftpelSPGnScodOsWaJqUCpVjT
      pAQgxZcDPcrNs0cYWYaIf4RDv/gXfvLL9/Au3gkZosfmePflH/Ovrx5nOWkwceMYP3rpHabD
      SdSFXs53zX3MGe7+AmAkmWj7gP/69z/khz/8r/zrGxeYGLvI//fDtwkpn867xcfP8p/+099z
      YWDuD67Lf+NdfnK89y4brZaI8Otf/pSh4T7OX+4kqX3i4x9hicM/+zG982P843/5IWMr9y61
      4m3lR2+d/9jvy4Mt/PT1q3za92m6EuXwr16md341jEhsupv/++fvfQoVJ7n06j9xqH3yD6/r
      U8bQ41w7/jpvHzmHPwoL0zNU7nuB/ZUKR1o6VgvpcdqOHCfr4W/xZJON4Skvt9rj7GzQuHRz
      mNNnuiipyOG3Axo+gDNcnKGeSdYdeJZdpXb8/ihmcZzE/BC/+td/IWv9Hp7e6KHl+En6p4LU
      73+G8pU2Lo5DScN6HLM36JiIU//Qo+xeX4QkgBqe58zRowwtm9j36EN4z5wnllFDdX4GEOXy
      oTeYiFmICm4ee2I/4lQ7Ry90Yy3eyBPNuRy/2olteYZIzlYO1hmcHjLxzMFcWt4YpLoUDAOm
      us5w8mIfuqeER9Z7uHzlGlJuNW7BRGx5nGMnTjGlpnNg/07GOi/hX1lhLprOd37wdTJNsDzS
      xeXr/SQb61ECsxx9/ae4Cup4et86+i4eo21onsx1e6gKXKH3por3kb2UpxkkA15e++VxVBto
      9k2EZvp47+hZos5yHj34MKa5mxy70ImRVc/XD2yg59wxbnhXqNjxOAebyxBRGDjzDq3zErFA
      kN1Pv0iRMcbxY6t17N6YydXLrayU7GJdjvv2DIHo/BDHjp9nXk3nieeeICcxwmuHzhM2bOx/
      bA/em9PsfGoPI2ffx1axkfmOMwwuiTTve4LmylXvSgMdb9sx/ttVE4+88C3qs+2f5jz+/RFE
      KrfspL5nNTVSWdNuMAxGph0U52eslklGmAhpqOdep1vL5KlvbUEquMzJKxHWb5gmkl6CWwmi
      mJ1YPvLt+v13ANnJQ187gNJ/nkNvv0fXxCKqYaCYc3j8wDb6uzpBslG1vpm6HGjv8RKan0TJ
      2UCza5J3LkxgtyY5/O4RVhIaYDB64zwzzg38+VfyOHlmmMaNNVQ0biPPbQJUZiamyN7wKE2O
      BS5f76flwnW2f+0ZMqev0Dq6yMTQFM3Pf4f02fO09U8zPr2MZsSYmpgjqQPo2DJK2bajmcBk
      D4umMupryqnLhulZPwPXzhPO38lXa0WOnu9kbmCIrJ0HaRT76Zxafe30yipqCguoKi5Ck908
      dOAxopPXWQqpFFY10VSRQWf3ECVV9RRUN1GeBqBw6+jbmLd9k301WSSBWxdP4tj0DJs8c7Rc
      vsWx9w8Rk+0sth/mxPURbgzMUlFVhhIIsOpFpROYGyeZ08wjtWaudo3R+WEds1wdNqipq6Kx
      6iOGPSNJ28n3GQwKWFZu8tbpXlRTBlt3bCddm6F7TsSpDjM+O4t3ZAVl/DLHu4PYhQBvv38a
      5cNsjiqeyh08Up2krXf+95+wnzKCYCYzO+OOC46hsjB0nZ6gmz3Ntau/6QZJ/xKlB15gX+Ei
      R6/OsOHJP+d//Z+/g+yfQZgZ5JXXXuXEzYm76r7vDmBoKhHVxsNf+zpS1M+rb77LXHoNLo8H
      h82B2SyzNH6TE5dmqM20ISVXn3O4XYhJBVdxHdt3r6MhouM0rcpbMqnhsDuwORTEhP9jLmWy
      2YLH5cLmtGEoKrooYrdYcNoE/AkDwZFBht2Gwy4RkyTQNdR4nDsamcKNM2dYyWrGafv4K6qq
      js1hw2azo6oxwEFaugPDaWb5HndiVrsdl8ON3W4lujLJ5TNXKa/IxvyxcI0a8biK3eHAZnZi
      AlRNx2GzYXNYUReSYHbTtHkH6RsbsOWVomTJTPS20zMXZ8/+DdgAAXClpeE2nBh+SOoaDvtq
      Hdqi+vFVywBFN1HVuIlN2c3Ebbn42o5wMVRBjt1CEgulVSV0nn2XSMlXSJPbyK1qZNe2AtYr
      ZkwfziwzGRlpOOM2BP2Lezk40XGKwzcW2b5jC5FQGJuiochW1tflMzo6SmxZJbvGhWhozN26
      TKR4A5mjfdiL0wnG7lZK778D6Aqj7Sd5+eev8Pq7x7AVrCfDdbfTgSwKRAKzzAUSEInfXsnA
      UtRAcXKYU8fP0DXhRzAABIpr61jpPsGP37hC6ZZ1uH+ryUR0mUuHf82Z7iDVdaXUFaVx+PVf
      c20lm4YiM9qClzdf+1duBgrZsKke20wbr797iTvHIRHRiOMb96IZZhKqhksP0D8dAqC4uprZ
      1g94tWWQ9XWVn/DiDqxijFHf3a5voiCgxhbxzS0jxpIYdgfawhDjKwZgpf6hHfR/8BMOX+lH
      BSpq6ug68UuOdwRoWF9JY2UhbRdPcupyF4lkjIGb1xn3R7Cnp2O+Zz+goqb+dh1B6uuKcZli
      9Hv9H+mURN36aqY7LnP81CUWEjpmyWBuyktIkVBjUbILSpkcmWXD1kryqjZim7vB8VMtjMyG
      uPdUTzJ+/QqTUfB1nf/EM9AfDyeb9h+gzAOYnJQXZTLv8zLpDxILLhNKiDQ++jj5qh+hZDeP
      NuYgoKPaKtmzqY4tj2xENDLZub70rlofwA5goGsaipJEB0wmC5Koo6oGsiyRVDXMsoiiKCCI
      IIhIgo4hmJAlAS2ZIKmt5oaSJXHVGc7QURUFVQezxYJoqCQNCbMsAkHe+sf/Ts6j/wNby1yY
      zSbQ1dV8T5IJY3GAH/6qle//9YukiSbMJpFkIoEmiEiISBJoiKt1qgaSJCJKMoaqoAsSggAm
      SSKZTKAZImazCT2pIpplUJMYkuX2V24GyUQCQ5JAM5BNJjQ1iSTLqMkEOiICIiaTSFJJIpst
      SKKAYego8QSGKCKKErIkkFQUDEG6+11u567S1NXcV7LJjEmWEDDQkgq6aEZCRTVETCIov6nD
      ZEJXV/NhWUwShq6hqPqH/wc6IhaLGXSVhKIiSRKIEiZJIKmoyGYTAsaH428ym5FEcfU3NYkh
      ykiGhoqIZGggm0FVQDIj/QneGX4BDWFJpka92HIryHB8XH3R4kFGJpcpqy79xBUzRYoH5Qso
      AClS/PG45yE45QuUYq1wTwFQlE/JwpUixRecP8FjTYoUD05KAFKsaR5YAILzo/SNfn7WwfD8
      BGPzn3RnfRs1xtToJL9PRiVDizPRf5POvnHi9/UVUpiZGCMYCzAyMEniAXyLlMgSY9OLv0fP
      QEuE6R8ZR0/dV9yFsjTOoVdf4kf//P/wv//n/4v2ydCdP+pxrr39E1460klST7IweoN/+H//
      kfHFxF11PGCKJJ3+K4c5u1BLedlBZDWGYpiwygbRhIrdLBKOxDAkMy6bhVg8hq4bmM0mErEY
      miDhcDgR9QSRaAJBlLHYbch6knA0jmCy4nJYVx2VNIVQLAl6EkGygK6AZL098XVi4SCqZmBI
      Jhw2C/F4HLvNSiKaQIiO88G7bRz86z+jQI0RTWhYnS6skk44GEYTTTgcjlXLp2GgJuNEogkk
      ix0xMMa7Jy6y52tfRxQAQyMaDpNQdcx2F3YTREJhVEHGZl7g+FvH2P7iC5gxSETDCHYHopZA
      0SUkPU4soWGxO7GaZQQB5oaucqTPwg+e24ma1BBkM5KWIJ7UMFnsmEUVXbRiFjViio7VBOHI
      6tiYY35OXmqnqqwYUYJkPIaiaiRVHbvLjYkkoVAEQ7LgdFpRImEUTcDmcmEWdBKxOKquoqgC
      LrcTUVcIhaMIshWnw0IiHELRRcxmiUR8dTycNjOC8Dvkwv0cMGeU8uwLf8HCwCUuT6fRWOgC
      Vu1MiyO3GFhMYC6E2MoiQ1PTGEnjYwvogwlA2MuYUs8jhctc88WoDV+iZSyL/esM3rvmZ2d+
      hBvjYZQE7Ni7g2vHDiGWbmB7pYfe3nEW56Yo2fstPJPHuDlrIjm3wLrnnsM+3sbwkkI0IvPk
      d75NgR2Y7+KHr1yhqsyGd0yjtMSMP5rO7lKVQUsFicuHiOfWEw6EOfjEfk6fOsGff+spTr98
      irKDhUzPTuIb6KX9VieqaCC56tlZGePtUwO4LVC+9zn21mUj6EmuHP01w0siCmlsrRGY9K8g
      2zyYRdBji7Sev8z8/Dgrrl08s0Xl7cO3sMoi2RUZeKcWKPEP4DvvIzszgGvri2ROHWdYL0Dz
      9hI2WcBdzHOP7cJhlpifGGV6zELHhXku9Sts37MV0+wg40t+lpR8tpcnmJQ2sjXDx9kRmVqL
      l745A0W1snvvRzPvqPScfoMLUyJpxgrOpseo1wa5PBZCVlWaHt1P/+s/JpC1hSe/8SSF5jgX
      3/w5w5IbaXmRyoPfJG/6Gld9MURNZ/OBh+l85Uck8reSZvETCOlESeeFP3uKnN8hFe7nhZ6M
      0dE/x4Y9W7Dc1me0mJ+2vmU2rK+gZxlsGXls37md3utjH3v+AdyhNXxd14na07BnWRm8eANT
      Xj1mZYrJiSlKK2roajvH9MIy4eVpRqYDELey9dF9FGWn43HbEJIKK6FJhkdi7Hvqm2ysyEKN
      BunobGdxKUB4aYzRuTtxgMymHPY8+wxF9iSbdj9NhjhPQrl9NWvxsPXhx2nIlliJxRE+dHAV
      yM4pIjunFKc2TteIj5WVEDMzXiKaCVlTcWSXkOtZjU6kaStMzOscfPZ5qiU/AYL46LkAACAA
      SURBVEsJBVXrWF+wGnDIQMbpcWKVRUILy4wP3qJo1/P82Xe+yd5dGyjNyaIwMwOwUNlYz/LY
      AL65MJWOEOd6fSwHlpkeXw3aCpBXWklBRRU5Vkgr38DuxjJc7jRsZpFQ0E9GSSP68hi+qTlK
      KrO5cek6c0sBAgtexhd+26laonzTw7z4/C4W2ts4f+0WCysrrCwtMumbR7e42bpv3+qCAoCV
      ht2P873H6ulq7+Dyta7V8osL+Gb8GJY0tu/bS0W6BVWTKCkpwvy7ZEL/HElEZohqGWR57uSZ
      Vv1eegb7OH2ulVtX25mOffKt5v2d4ZQgHWMxMj2L+JbNGPERAmo9mUKMW8MBHnrmILGbheza
      802KYyOErR4WkZFlgcmO00zoO6gsnGTesCBLCpFYjHAwiCiKWD2lPPqNF9EGO7Fk3Il0JYom
      ZJOM2SwjSybE264JAIIoIksikiQhShJWIBAOsxwOf/i8xWwlu3I733m+iZ7WUayyzLaDTxDu
      OcWNnmJq8j0ImEGPE41GCMY0cq13rwXxqS7OD0R5emMpw9cMzBYr4WCIpaklpgztrq3Uk12O
      euM1xsRt7CySKSzdwDdf3M1I3xBu08eHWJIlxOg45y6P89ATNYxNj2DzZGNVW+kfE9n/UD6T
      2QVsf+bbWKb7IcPCwF01JAkEIsRDQVSXi8yom4anvktZqJsFezoDgogoih/xfY8QDCQIKAHM
      rjw8jnQanv0u+Uu3CHrSWBRFREHEnFXO/kIrp967xPS29aSZH1BD/hxRFn0kPEVYZQFYovPS
      PDW7tvO3f7ud2a5TtExmUWAz80lB/O4bGzQeWWZFc7J37y6qqyrINimEpXTqcsAvl7GlLo/8
      LBe3Lp7Dq2Swub6YaDBKYV0lWWaB7o4u7AUV5Hjy2VCXxrWzF/CtKBRv3MKOEjtnT5/Hbytl
      W33BqrtrMsZCWKSyJp/4YpDc0nKSsQBZGZlI7ixcgkpeaTWSEiatqJxCOcDVW+M4PQVUb6lF
      WJxEy91EmTrCyfNd5Ddtp6rQSVfLcWbIZtdDW8lwmBBEM1kOlYvnrmKt3cn2yiyCMYPa8iIA
      ZIsJ/3Avk0ImVWk2qrfuYKXzOLdmdNZv3Iq0PEHMnYZLsFNWX4YcDJC1fhulhSU4o32cv9xN
      RuVGyvM8iIKALArMjY1iySnA6syhoiSXkK+H4UUHFeUeCouryJWDRLIa2ViaTU6axLVzF1iy
      FNJYkUs4rlJdVowo6MwOXWdgfIlhX5iHn/wam2vSaDtxlPFYGps3VqKsBMkuqybdLoOexNvV
      wdjsNEMLNp56cj+1JTaunTjGtJrFpqYy4stB8iqqcSXnuHDlJs6aZrYXO7l4a5Ryt0pLzyzl
      +ZmfwfT9w7F4iqgty0QWBQQsZOalY5FWhd+eVUJ9ZS6yKCIINho3byLdeffZ5o8YF0ilq+U9
      Wofm0az5fO2ZxynypMKO/+4kuXX8Fbzugzyzs/D+xdUo517/Jca2b7CvKv2z796XjFRgrBRr
      mpQhLMWa5p6nHFn+4h9+UqT4NEi5Q6dY06RUoBRrmpSuk+JLjEFozkvX4BSe4nrqy7LuWtHD
      c2PMKC7Kss2M9PWwEDNR1bCOfM9HbE4P2tR4xxFePX7z33ZG+wxZGLzGlYGPR/a6i9giF49e
      wP9vlfkE9PgSLW/9nNeOtBJK3q90iNbTJ5lcmub8iXYiD5ApKTTbz6mrfb9HzyAZmOHNo2fR
      vsCRGj4XFD9n3zvBsqBw6YPDTHzoC2egxRc4+fqrnOkYY7z7Ahf7FhCWhzh2pe+uOfyAO0CM
      4Z4RFkIx5pQN2Ob7mFBzqMk06BxdoKnYybX2myjucnY1FjM4MEAwEqe0tICR7h4ikotN2x7C
      FR+j9cYQZmcu5Y11ZCRmuHRjEEtBPfs2Va5aLkPTXOqZwYjMIaWXIYSnMDJqqXK7cQsGfVfP
      MB/W0Jz5bF1XQv/gIE0NtXhvjmL2LHD01GXkxvWEF7u5OR6kfts+yt0xrp6/TMSSy5btW8iy
      S2AYrEz1c+3WKJ7yDRREb/L+tVF+8L+8gMsEqBFuXr3M2EKUko17WF8o0XnhIktCNjVFUd5/
      /wIHispJS7cwdrONjNotWAPDTMfduGIj3PIGKd+4nfqidEQBBq+d4HSXneJMjcW5FaT0QtIi
      YwzMBMmp3EyRdZGoo4oia4D+6QRVmRptNwYw5dexqUBkYnqO1eOazuxQH77lALMLMTbvfZhs
      Y57zF65jpJWzc0cNE22XmAqaaNizh3xLEm9XH4uKn5lFC3v2P4QtOsmFS52ImVXs2FqBt/Ui
      s1ELecVpTA6N4SxZz/aGso+ES/mCItvISrfQMzaNKT0X523XJUPX6LvWip6bjx0ILS3hKNxC
      fc4MF86OE2czv9kDHmAHMFCmOplK28NzW2Uudcyg6mG623uYnuhlaCLAxSNvMBHUmWk/xvlb
      o1w7cYx4VgUOUcOTV4Tm6+Jy3yhnPjiMkVnKdFsLfROTHP7gCDEMBk+8Sfvs7WU05OPEqYuY
      8jI49+4HRC1OOs+fZLSng5veKa6cOUvEloPv+mn6Jqa4ePkKsWiAWxfaUV3puFyZWANdvHNh
      CJstzrE336O38yKtEwrG4iidI/PogKZGOHH0BPbsPAbOHGVaTCOtsJRSz+ooask4oiuLfHuQ
      lhMdDHecoCPgIU2bYWhFJ8PlxGWJcv3yAMsLg3QOzTPcdZXZmW7e/KADXUxw7IMP8EdW/VA8
      WTmkZWejTHZwsT9Iab4Tw5xGXpbIlZazLC0v0nlzGN/wLbyzK5x69y0WFOg/8wE3poMf+f/Q
      meq9zNWhOBXuZd49fI6T77zLpGpjoecMpzuGuXb+AnFnLh4zoCsMtZ+ie8lJgdbPO+c7aHn7
      faY1G9OdJznXNcrllguojkwGWs8SUkVGOjtZSNx3G/zc0YILDK6Y2LZzG57k9GpYHkBZ7OdK
      f4g0q8jK4hK5DVuQRls41e5FF8137QAPFBu073oHw72XOXqtj/7Wq+iucmT8jI5OUlJZyeys
      D12HnKoG8l1m0DyUVOairkzQ2TVEMJEkqS6yHJCoqK6nvCQflDgLy0sYmkTphg2kS3ec6u22
      fMobainNtVNc0oDLlvhw+zfZnZSUlJOf4UTR9NWwH7exWGyYLTaSkXkimoGuOWjYVENexSbW
      p8XxzoWx3N7zDD1EXLVTVVtHiUtnJW7B5nDjtq3Wp0eW6L7VzfRKFC2h4F+YoaC6ke0HnuHg
      tiocFgs2swkQKaxdT3SyjXGfSIVLYUoRESQLDXV1mOTVVdRic2J1OLCKkJZfSJ7TYODmTbyz
      QTRdIa2gFiM6ydj4FCWVmczNBjAMiZKGejI+FoHLSlXDOtY11sDEGEMzISRZI72kgfJMC5LV
      RkFxEfYPhyaddU21NK8rwz8+hnc2gihpZJWtpyTDgsnuoLCklB3bt2MsTxOMG3wsiOYXEF2J
      spKUKSwqxqwvsRxeXWxE0U5xSTqLC35W/EsshePU7nqWvesLKCwr5KMBH+8rAEpwge5IDn/9
      V9/lO9//a7YWhJhc0VjnStLpg+ryLCpKq8EkE/PPEtPujFxoboyI7MFukSDppiBf4Pqlc/QM
      +xCsdsqyczCsMsuTU6jy7+4WYbJYyBEVLrXdYHR+GUwmTEQxbAVkyCDbDWYn/KzMDLFoyqM4
      Q8S/FMUARCmddEec1gvnGQhZKMm5u/1keB5fANLTHGAkyC6qZeL6ad5/9eccaZ9F0GMshyMA
      uDKKkec6WC5spqSymiqHhiRKzC7MIRqr42EyW1CDCwR+s7AmA/imI7jTXGi6juxIo1icpX+5
      kOriQkpLs5FMIoFZP0nht08+IXra2zl3ph3bho00V2WQVCyogRmWFeEec3eejsttHL7YR+WG
      JtZXetBUC4mVaQLKamlD1xgdHcVTUIwpFiQWizDqm4NEkNHf80Oezxo5u4Znd+Tw1ks/Q6v+
      KlvLErSeuoWSWcHjjz/OgUf2sefhLZTnZjPdcZRjQwKPbq+7q4772gGS8RBzixHy83ORBAgu
      zBAzp5FOgPGgTEVxFmrYz/DIBKotm7rSLKbHp8mqrsAcmqN7aAZ3ZgY2mweXsELf4Dg3Wzto
      /Pqfs9GjMOCdwZRexLqKvFVpjC0x6ItSWp3D/Ogk6QUlLM1N4rCYiMpO9JUF0grKiS9OYcrI
      RV/yMbkUwyw4KGsoxD88iphVjCnoY9Ifo7BqHbkunZGeHsKCi4rqKjw2GcEwiCxNMTw+hzW7
      lIosC965IDVlq/41RjLEYN8Iit2NW5DJLspmZqiXoOGisqaclZEBjOxMjIBBQXkOAZ8XNa2U
      PLeJhYl+Jhfi5JRVU5jpRBQgGVlmxDuNK8OFInooz7Ux1tvDsuEmzSWSm1+CEfAxq6ZRkecm
      tjzD8Ng0clohlfkuJuZWqCwtRBRUrr/7L9xQmthcmUZ5/Tpc+gr9/aMYjhxqqvNZGBvDlV9B
      ml0GNcKJn/+EpdKtVGVlUL++Fjm2wMDgOIIrj5rKXGa9Y6QXViDF5hjyrrZZV+RhfCFMZbaN
      Eb9CZWHWZzWPP1f+iIYwjZ7zH9A2skhOzQ72bavHbvoS7LNfODQmbl1iwdZIc/UDOLfpCn2t
      l6FiK/W5js++e18yUpbgFGualCU4xZrmnnaARCJBamNIsRa45w6Qmvwp1gopFSjFmuYBXCEM
      DC1JKBRFM8Bqd2KWdeJxDZvdthpD5w/E0JMEAxFMdid2i0wyEcMQTaiJOCab4zM0yWvEwglM
      dvvtnACr6KpCQgURFSTLXTmlPgldVYirAmZBIYEFh+UeQ2sYKIk4mCyYP6dg+8l4DE0yYb3H
      x/pfVAzDQI0v0nq6hZyd36RE9HH25Cl8ipuHDxykOtcJhsp0z1WOt/YiOIt44qlHCXUe51Rf
      jIPPP01+uJfWlUL2Nubeteo/kCXY23qUX711mOPH3uLX75zHN9nOL14+SfRTspbHxi7y3378
      Nv2zqyb/9tOvc23Yyxv/+hNG/Yn7PP2HsMjJn7+BN3L3r8HBK7x5+haT4334lh/s89DFgbO8
      draPiYuv8OvLvnsX0hRaD71Dx9znl27FPz7E5GL4/gW/SBgxOs6f4HJbN8EEzHtvMmtp4KHC
      GNe7b4+1mmAh4eL5736PZtcUZ272MjggsHuDmc7eUc5eG6emKvdjE/7+y4CeZMa3TFHTDraU
      ZiAgIyUHiM4N8uuXfoStchsvbM+h5WQLQ1OLlDz0FDWBq5z1WahtqkcYv8HAQpLSjbt5pLkK
      WYTE8gQnjp7GF5LYuuchFtpaidirKMpwwcoYV693Y9VLMEf9nHv3V7Q4cnj+yT3M3TxHa98s
      ztJNPHtwK1YRwiOX+MUlH2nJRRy1j/CVpnQuH/2AsZBI/Y5Hcc9eoWsuRjgMOw/sI9B2Hve+
      b5A28i7ezK2r46v4OfHmUcZmF8neuB/P8HU6FgsokSWscimJgZNc6p3DU7qR7bUC5491ETcS
      uNc9zAv7GkCJ0H3zJiPzc9SWG/jGWnhpIE7Vw9+kwTnNqVOtzMdMPPToRjrar2PKaGR7QQaG
      Fme4/Rxnb47hyF/H1za6+MXRTtymKKa8HTyxPY+zH7zLoupETSvgO3sqOddyFu90mPoDz7NJ
      9vJ6ywAuawJn49Nsd01w8twtdHcR+w48zMylN+iYVMmpa+ZrezdhlQUCc9PMRJN0vn+VMGaS
      6dV899m92OQvsDYsmGnYtQvfwAwA7qxCuHaJ8/Mutuy/baAzOdjQvAFNCZPARXVJJU7Fy5mO
      GPW104TTcknM+Qjm5eK23nEtuf9bS3a2HHwUd2CE8ycOc/b6EDHVAGchTzy2m5nxYQSzk6r6
      BkrSoN87RTy0jKW0mc2uaY62jqOrQU6faCGgqIDBRE870dxtfO+xSq5dnWBdYxVlDVvIcZkg
      rYz1VfnUVhQhSE6a9z9BbnKWkfEBTra0ogkqvWfep3d5tXu6EiEqZPDVF18k0HOKke7rjEsN
      PHdgEx1t1wgvL2It38lzO7K52jlEeGWZWNJACS8Tvh3U0xCsVDSspzrPirdvkfL1VVSUVSJo
      EaKJOa7f8PPI89/CMtXFwOw0fiWDpx7fiW98ZLUTZgfVFaXkVa0nzymQWd7MYzvLGe7zIrqy
      aWhqxB6aZyZko6qmmsZ1q9bm5PIkR09fJSlJjF4/xfXBOYIRG49880liIx2M3LrGvHsLT+yt
      JR4IIVnd1NQ3kueIMjQ8yqWWW2x8+nk2F5gJRBe5euQk0wmJhcF2zt8aYnLMhz2nhHSH+OHF
      RiIcJByLMhsw2HfwUUT/OCvqAyVO/twQBBmH0/6huu3t6yKr+Ume2VFIe2fPR0om6bl8lmDB
      DpoLXdQ9/Bz//n98En3ejzY9xoXWc5zrujsP8v0DY6kK8/4I9TseZYcY5Y3XXmehsHo1E6LF
      iskksTB8jWNtQbYUZDESWe2lzW5H1CGvbjvPPdmE3x/CfVuX1nUDWZZXHdl0/RO/MZAsVpw2
      G1arBV3XcOTV8czXv0poZp7sj2TWk01WzLKMLAkYuoYgrwbNAh0ECavVjCxJCLKEzSyRTMSJ
      RO7ob/HJG5y6Osf+plzkj6WJ1AEZSRSRRQHdAJvDjs1sRZbvfTawudzY7SuYDBi8cpSeRBU5
      Oe57ZHc0ENLLeObrz5Gcm8RurHCjL4nF7sBmNjB0HVGSkSQDSYTp/ouc7hVYn5tFAANNF5Bl
      EVmSAAPJksHug89TLvpJOjIxcp9jYcHLidabbGhYh810J6mUyWrFbrFgNpk+t288fl8yMrPp
      8vbQYw2Sk91I2D9LTDIxfPpNOrVSNjuX8C3mUJxhZrLtMmrNNgpHOsG8mu/uozzAvqcT9PXw
      xis/46evvIG1uJmcNDsmk4wgiJhNMja7GyM0hXcxgTmRJCmvJsizFq6nROvnzdcO0TsdYtXF
      UKC4rhFluIWfHOqgdnsDLlG+66Cb4bQy4p1CMpkQBQFJNuFKL6YuV+Pt117jQu/M7Whxqyx7
      O3n1lZ8hFD1E+boNZCxd47X3LlJR14Skxum/dpRXW7w0rauloiaX1sNv0+kLIosistmE2elG
      Ds3QMx3DLccQnGkEp7wkkiCJOdTXSBx+9RVmHSVUZHhW310UMX9EANzpmcSnB5iLyZhkEUGU
      MJlEHG4XS6O9LBsmjKROeqbIUN8UBmBKK2BnmZm3fvVLznSMY0gSJrOMgIDJZCKzchMW3zkO
      nWgnrAnYHB7UJS+TKzpJ0cq2nWVcfP01LvROIwgeGrZU0HH4Vxw+10lEg+nBdq53T5FXVILF
      vNpXUZaRJQmTyYQgrLbz4cgHfbR0jkJsisutw3yx0qS42fbVp6lMh6LG3exZX0RWRTOPbK1h
      NWqgTN76HWytzEIS+FCobYVN7KovpWnfdkoK6nhofcldtX7p4wIF+07w0nUzf/Xn+7hXXvOr
      r/6Y2bqDPLux9B5//WKjBGZo7+xjbnaCePpGXjiwAfE3Uc0MlfmxfnqGJ5kcHaP2ie+xvSTl
      6/O78qUXAC0WYCEikJ3l5l4KSXhxnqTNQ7r9yxeFTouHmJ5dQBXMZOXm4bSshloHwNCJrPiZ
      Xw4jWtwUFmQhp3wLf2e+9AKQIsUfwj0PwaL4Bb4SS5HiUyTlDp1iTZNa6lOsaR7YFygYiqDp
      YHW4sMgasZiO3fFp+QIpBFYimB0u7BYZJRED0UQyHsNsd37GvkBxTHbHJ/gCJTEkK9YH8gVK
      EFdFzCRIYMVh/QRfoHgczJ+fL5ASi6LL5i+hL5Cfy8dPkbP7RYqNEY6+f4yZhJM9X32STaWZ
      EA9w7uT7dI0vo8QV6r/ydcqinZzuifLEC8+RH+rhynIxX9nwe/gCjVx5n5dfe48jh1/nF2+2
      MDF+jZdeOkrk0/IF8p7nH/75DXpn/v/23vO5ruvM13z2yTnjBORMgAAJ5iRmWqKClSzLdl+P
      q6On78y9df+GnpqqqTtf7lTd6uju63ZWlkWJEs2cEwgCIHLOwDkHJ+e893wASJEUuymr2zbZ
      wvOJPGftddZa2Gvvtfb72783BkDnqV9yfWyKt3/0d0wEfrdaoBP/9DaTD2mBYiNXePtkD7PT
      QyyEMo8+9OGahs/yizODzFz8CT+7Mv/oQqUc1z54ly5f5N/Y7q9OcGaM2WDi8QWfJKQMXedP
      cPlmH/Ec+Mb6kOqPcLRdTveduZUyGjMHXv7f+Ms/foP6ymo2tGiZHBbYv1lF98Ak567P0NL8
      VbRApTxLcxGqOvaws86OICiQ54dJe0f4+T/8Ndqm3Xx/t4uzJ88wOh+gZt/rtESvcm5OTcum
      doSZLoaXC9Ru3c/R7c0oZJCNzHLik1PMx2XsPLSPwPVrpHTrqLKZIDLF1Zt9aEq1aJJBzn3w
      M84YnHzn1UN4e85yfdCLsXYb335x54oWaOISP740h6UQwtBylGc3W7n0yTGm4zLa9hzF7LvM
      HX+GRFxg7wtHiN44j/nI97COfcCkc+fK+OYCnPj0OFPeIM4tz2IZ66QrWEmtUo5GUUt25CSX
      BryY67byTIvAuU97yZHD1HaY7x/ZAPkkd7p7GPf7aG2QmJs+zT8MZ2k+/EdsMC5w8uR1fGkV
      +45uoevmLVS2TeypsCOVsox1nuNs9xSG8g28stXAP3/Sg1mZQlH+DC/v8XD2ow8IFg0UrZX8
      ycEmzp0+y+RinLbnv8tW5SS/Oj2MSZPH0PE6e0wznDjXi2Su5vDzh1m69Ba35wq41u/g1UNb
      V7RAvgWW0nm6P7pGQlJRsK3jz7596InXAm3Yt5+5oSUA8pksCpMGrcJEZulBYd/scB+q2g4q
      9DbijQXOdKVZv36RpNVN1jdP3O3GpP1ttEAKPTtfOIo5NsH5Ex9zpnOUdEECYyUvv3QA7/QY
      MpWR5vUbqLHC0OSqFqhuJ9tNi3xyfQqxGOP0Z2eI5Fa0QLN9naTdu/mzF5u4cXWG9k3N1LVv
      x2VSgrWejqYK1jdUIyiM7Hjum7gLS4xPD3HyzHVKQpGBM79mMLzSvFIuSVpw8OoPfkCs/zeM
      9XUyo2jnzee3crvzOolwEHX9Xt7cU8bV26MkImHSBZF8Kkwiu2o3Imhp3LCRZo+GqcEADR1N
      NNY3IpRSpHI+Om8FeO47/wntfC/D3kUCeTuvvbSX+enxleNVBtY11lLe1IHHIFBWv4OX9jYw
      PjiFzORiw6YOdHEf3oSW5pZmOtpX0jAVwnMcP3WVglzO5K3f0DXqJ57S8NwfvUZ2vIuJ3hv4
      TTt5+VAruWgcucZES9tGPIY0Y+MTXDrdy9ZvfZdtFSqi6RBXPznJYlbB8shNLvSMMjczh85V
      g+0+LVA2GSeRTuONSBx58SiywDSRp0ALZDDq7y23ZUrVvZiPVqu5r2SRuXkv9fU1CChZf/jb
      /Lf/81VEf4DSwhQXr53jfN/sA3V/KS2QL5Ck7ZmjPCNL86tf/JJA5Tp0BsOqFkjB8vh1jt+I
      s7PSycTqhNTqdcgkKG99hjdf20QgkMCi+lwLJFfIkSsUUPpXtEAa9aoWSIskieg963njuy8T
      X/LjMt/XCaUW5aoWiFIJmVyOXC5HkkQQFGg1KhQKBYJcgU69ogVKJj8P9GfmbnHymo/nOtwo
      wg+3QgTkyOUy5DIBUZLQGvT/uhbIZEavj6CUJEavHKc/24THZUEm8UBfJUlEsNbzxve+TcE3
      j04K0TmQQ63Xo1VLiCURmUKBXCYik8HC0CVODkCHq4yYcJ8WSLmie5KpbBx48Ts0yJbJGxxI
      njdZXp7ixPUeNm9of0ALpNJq0Ks1qFWqp04LZK+sJnHjNl1imPLWjSQDXjIaG2WaJXxBF5vs
      q/2UiszdvEyxdReVY92ggtJX0gLN9/PWP/8TP/rnX6Gt2YHTqlvRrAgylEoFWr0ZKTHPZCB7
      TwuklAuoKzdSUxri7V++z8BijLtaoOr1GymMneXv3++idc9GTHLFA5tCu1nD+NQ8coVqJcGc
      QoHRVk2bu8i7v/wlFweWHth8hydv84uf/BNC9T7qN2zBFrrBL359kaa2zcgLWYauH+cXZ6bY
      tKGVxhY314+9R/d84p4WSG00o4gvcmdxRQuEwUZsYYpMHuQyF22tCj7++U/wGmppcFhQKuUr
      WqD7NpImWxnZpWH8mZW+I5OjVMrRm42EJgcISQrEoojNIWd0aAEJUFkr2Fuv4p2f/oRTt6aR
      5CuZMe9qgcqatqCZO8v7JzpJFAV0ejPF0BRzEZG8oGX33nou/uoXXOxfRBAsdOxqoPvjn3Ds
      XDepEiyO3KSzbx5PVQ2ah7VAKtUXtUCxOc7cnoD0Aleujz9xWqA9r7xOkw1sVW3s2VJP9cZ9
      7G4rZyX9tQTYeOb5HZjue2iirdjMvvW1dBzZTU1lK/s21D5Q61MfB4gNfsY/dGr4r396+JFa
      oGu/+Bu861/ijS21v++m/ZvJxRa51TWI1z9L1rKV77+w+QEtkH96iP6xOeYmpml5+U/ZU2P4
      wzb4KeSpnwDFdJRASoaz7NFaoETQT0FrwaZ/+rRAxWycxaUARZmKMpcbo0b5gBYoGQ3gDyWQ
      a8xUVpStaYG+Ak/9BFhjjX8Lj9wEP7xRWGON/6g8cgIUCk++N/waa/x78ARHP9ZY43fP0yMI
      WWONLyBRyKZIZgrIVVoMOg0yYUU7lE3FyRVBqzegkkmkUkkKooBWb3hA2yX/q7/6q796uNpi
      8fOsb/lUhKGJOWw2O6XQBBf7F3E6y0gtDjKf1mE33g2uiIRnB5mNFJmdmMTsdqK672F9LrrA
      uK9AmWXlYWU6OMvYYha73fBlBEmE56fJai1oHxLG5YLT9EwlcDrNyIGMf4LhgESZVXfv+XZ8
      fpDhoECZTf87vOXlmBsbQ9SVoX04ocu/glhKMTk+i8Zk51Gau1LSx9VLN4nLTTgtukcmbpHE
      EotTE+RVenSq3/6a5p0cJFhUE/HOotCYv5QR2BNBKcHl997mytgInTcmcoFgbgAAIABJREFU
      qG7fgEkFxeQCx945Rv/YILMxDQ7ZEh/8+hRDvTeZE520VdvvVfHYCSDlYpy7fJua5nqWbnzG
      6YkEtTUVzF6/Rs5Zgy4XxrscoiAoCQ9fZCCgZKSnm7oNzWQTObQ6NUKpwMSNjzk1WaLJoSIc
      TZAXSyBXQS5GLBonmi6g1ahJhnx4AxEkuRqNSoEgSOSDY1yZyFBulCMqNRTjATKCjmIyQGim
      j09v+XDblUhyHWryZNCilZIsLvkpyDQkRs9zZryA0yhDptShVsoRkChmk3iXlghG0qi0apLB
      MOFEDORy4oElAtEMKq0OhVyGIIlEwwEikRDBaAa9QYeYi7Ow4CVTUqAUF/jwZyfQNW3GY1JQ
      zCYIBMKEIhFKMjUaeYmgz4s/EEFUaCATJhCOEw0NcOyD21R3bMSikSOVCkQDXnzhJEqVkvnb
      n3F+VsbOzesxaBSIuSRLC4uE42kUGj1KhQwxG+WTt98ma6/DICWIRdPI5RLexSXCiZW+JfwB
      wrEIiYyIVqsiHljEH4yDUoNQyCAWcxw/9j7m6g5cFs3Dp8STSXyBM/1J3vjBiyT6r6Oo3oLH
      KEeQq6ioqUcvi7EQkmMpLpN1beVIi4bbc1m2t37+fvhjLxcKnYkaRYnFSIDJiIO99XJ8Pj9+
      NGzX5JkcHcG3NMeMspGjtrtHSYzcPEvR0MYRuwnEIrFojGQiwO3POhmUtbGzJsd0zASTlyhU
      bYfQEuv2P8P8tXMIBhtRpYs/fe0gCkFkZnAGc2U73s5PWaj7BvqJU5SqX0I1cYyUyUMiMMdI
      9zLzmWZeXBfjSthJeaCXkMZKOqlkk7NIYGGSW5lBxIp9vHm4DQUQW55ndGyWueEhag+9RuD0
      +6Rb97PZNkjPRByTKo+6fBvP725CKOa49vHPWdBWIy3Ns+WNH1C8/RmTkoVCPMmWnfVE4ilS
      mSygITF/ix+/P0pLsxVv0cEfP9fK+NgogYUJ/I5t7C52cdJfzp6mFJFoknShACiJLvZz7NQA
      Jr1ErqyN+kQISWZBrVIjAKngDEOjXoLzY9i2f4ujHR6kYopIJIpqaYH3PztN9fajbPBoGZ72
      E5gZxL3/WRbe+wRlxwbCc4t845UD3D5+DlWZkbyuiUYmiBirCEdixDJfIufrk0KpREFYsYUR
      BJF8fmUMZQotJk2cWLKEKMtRzBUQDHJkcsUXXvf9EsZYWtY3aentGidvd7Gx2sr07AJqnQmj
      VkEpnyWejBOM3qfKS87SO5lnXWvtSnBKqaXcbcfqrsKskVG3cQdNTiMAapOdHfufY2eLmYA/
      j9OiIpQsUl1VvtI4sUQglcOiM1C/roq53j4SthYUC5eYSFTSWKHGUrGeQ68cQBfwkysCSS/z
      URdHXvsWP/jeC9j1Ciqat7JvXztiKMrddLuCKJJNJUklg8RSpRXV4Y5dFBf7mJhbxB+IEIhG
      P3fLLuho2bOX3U06wt4AfQEtL7z+MpvcWRbyKtxWC06r5e7A4W7YxPPP7kcdDxAVRUrZDPFk
      gvDqWJW3bGHb9k14HDbsupWlYWhuAWPzDl4+uJnQnBdrVSXumkZsq3k9JUkil44Rj6VIpDIr
      +c40ZZR7nFS6TOR1TvZs24RZu2KCFUumiCezKPU6Nu95gXqnRLagwWGRiKZlVFU5kQEycyUV
      HgcVts+TSD/xaPXYBZFMPg+CFpNxpe2lTIilpIbt27dTWJ6hoNcj5XIUCjnsNtsDVXyJJbGA
      tbaOxd47mGxlGN1uUjNDYKolH56mazpNR0stGkH8PIm1voYdrVoGB6e5e+4IgoBUKiGu/vsu
      2XSaYChAIJBEqRVRO1p5ZoOH7u6+lcyQgoBWJiNTKKGrqkcam0Yw2ZGn50i6qrHKQJAJCILs
      8/WxxoCWMIHlZa6cO0cgWUKQyR4sQ4nJO12kDJXUuy1IoggICIKAyeqkrmM/L35jJzV2833t
      XfleEARQqbGIMRZ9QfyhHCajAQGJknh3FIqEQ34CwRAZmYLs4jCDQRkbmipRsiIAXKlXAEmk
      JK0cpzaoiS0H8AeWEbR6Hl6MLA5eJaxtoKFcvzIxpbvtkiiVRJAJCEKRma6LJB3raXAaVkSB
      rI6RIFAqpjC6t7G92Upvbz/F1SuCTJLuZeOURJFCsQhSifyTqhbVltFeneedH/2CJU0TFeYw
      XecHSZXy9Jx9j5+9e4Kylq00NzSQm7rEuxcmqV3NAXeXx+4BAASNEZWUp6G1DbPZiJ4CruYN
      uEw6CpFpgpKdaqcbl8eM1ujEYtDQsW0TCW8IW5UHlQAajZqgfxmT3YOjohanTkJSaYjNDBAI
      JxHcLezf2gbRKXrGQ2zevZeqMiOCIEMvizDol9NUU4MgRPDUtGJWq3DVNOAyyCkoLNRWmClm
      FLgrbSiMNWxp1tB1qRNL0w4aXBrkBhcVdg2C3IjHbUUmCGi1MuYnZjBXNWF1lFGmV+OoqaOq
      qprMVBdDPolNWzdi0ioQgHw+j6WiCrNcQuNqZVuLgRvnrqBt3MveDfXIMmEyOgsVNgPZ8Aw9
      fTOEU3k279lPo8dBwjdJWuOhwuHC5TKitVZSYbOSDXuReypx6NUYbS7k4VG6FkQOHdqDVQ3o
      yqiwr3j+aLVqpoZHMNeup9xmw+0wIRMEVCTwZwxUlJmpqa7FatYxOjCCs6EFu8WKVa/HXVuL
      SspS5mlCiA/TP5th6569uAwK9PZyPMokEYWHKoeeYjJAz4SPCn2R62NBql1fIh/Z7xtBTll9
      Gzt37GLbxjrUMh3ldU7UKiPrNm5h69YttNS4UOtttG3ezq5dO6hxPKiX+gPboiQ5+fYHVB34
      Dus9/8qtt5hhoKsX56bdOJ+W/dnsDY53S7z+ym60T8lDla8ja75Aa3ytWYsEr/G15pF3gDUx
      3BpfF9bk0Gt8rVlbAq3xtWZNDLfGU4yIf6yLG4NeLNVt7N7SiEoAqVRkpOscY/4iNW1bafWo
      GOi6ia9oZdfOzdj1n5sDPP4OUEhw/ld/y//7P/4nf/03f837p3sJBie5cnmQvPjYowFYHrrM
      JxeGeWSQPRvh7Fsf83lauQy9F08yH/9yda/xNSbr59KZIcrbKxm7eILJ8MpqPp+e5ubtAB6X
      mnNnLjE/MUwIB7pIH5f7Fh+o4vF3AKlEIpJl97f/kt12Pz/5XxdItB1CqVQQXxrm0oUbaOt2
      0WqNEjW0U6f2MrqkpM4a4+KVPszNe2iUJYklDST8Y1w+dwPR1c6RvZswqmREfMNcuHiWWE0l
      fellBFGFValAHhnj46vzlBJ+PBuPsN6e5PzpyxRtzRw8sBO7Vk4hHaWr+waRxQi58o28+kwj
      E50XuDYSpuPwC6wTpvm0dxGTo5Gju1tIR+e5c2eEpfkAlvY9HNnoZujaOTonYmx99pvUF0f5
      tNeLyVaBMTbKVNrA7gOHqdGnuHr+PEuSi+f2bWRi8A7RoI+wUMVrL+9Ft7aQ/MOQiuNTmHmu
      qZkl/XniySzYtYjxAAVtJfUNdVy9fQJn0+tUBPv425sJtrY+aJ3wJf90Kc6+9Y/8/f/6NbKq
      dchzPkZGprhy+iS2zUfRJcaJ5fKM9Q4zPdxLUJS4dPoslVsPIoTHiaTyQJ7zH75DUGEn2HOS
      C4MrLl9mSzllrlrqXUXu3JqmZc9Glif6CS0vcG3AS/uuHfSe/5iuqxeYLzrQZ7xMraYZLeZS
      dF2+RcWOHdD7Gb+5co1j16cpd8Lpt3/N5PwkQ/OweVMDAPlUgMtXR9myfwuzp3/D9Z5LHL+9
      SIVT5LO3jjE1N86IT0WzO0vXWBqXVWR8bIGBKyfwatfRoV/k2IVehq9eRdG6DcPiZW4v/ktj
      tsbvHEFAvipTEValHgDI5PdO7LtW/5ryDXz32Xb6egceWIl8yQmg58gf/ZD/8p9/iCLQiz+W
      BbJkcgJOp5s9h5+npakNk2KRmbkM9XVmCgUVTnclBw4focygAjLEkyXMZivrd+2nxW1ebaAc
      mUyOQiEgN9iwG1T3rD9s7jo8Thd6HbhbdtFmzTE+F6BwnzZF46yg2uWiwg6+5ShyjQmTrZYD
      R7ZilIHW4njACs9WUY3b48SlEfEHoih1Zoy2eg4d3oRRBjqLA1fVevZtdbMwPku0UCCVKuLw
      OPG4y4jHYyCZcFWWUWZWUvySy8A1fgcYrVQIabyBIKmCCatZSSFfRGYqR88yodAyWl0Z/oke
      eicCKBSKVROxz/mSm+AcA1fPkjIVSCvcmPUqwEhVlYUbpz7gciLOgdfewKOOc1XWwAs2KwGP
      iisn3iOZLLC50QC4aGwqZ9i/QDqfQlXRutoCJUZ1htlHLPp9o52cPL1ERu4hF5xkISXHqpdT
      uO+siy9NcOHUCeb9Dp5/vZnLn13E650mlvPgbPhiT3wzg5z7OMWE0sO32+tZnryGz1sgVqjG
      sZo/LRddYGgqitFmopAvUFlXwckb5/CLcVrX78br/RfMb9f4/aIsY++hBj795ALOHYepM0e5
      c9FH675mNrcauHFzgi3PHKHaBTfOn6E/a+XlZw88cNI/Pg4gFokEfITiGRDkmB0eLLoS0VgJ
      kx78/gAyvYMyk0Dn8eOUNjzLwXVOcqkIPn8YpdGBVSuRKioxqYr4/UEkjQWP07bioCYVifh9
      ZGVakMDpshBfDqCODfHfPwrynTe347K6sWhF/IteikoDLpcTrVJGJrLI3/70bV547mWMDieV
      DgPxkJ9gLI/VXY5JSBHIqHA5Vt46iy528+P3u/nmC4cwOlx4LBoiQR/hRAGbuwKDlCCY0+C0
      qon4FojlZNhdbkxKkWWfj4ykwe2ykgxF0LsciJEAotGD6emzHFpjlX+3QFg2Ms21/ig7d25E
      r/53UH9FZ7gyUWLbtoYvSILvUswkuD0wysaOzWhVj//NbMLHnbEQWzat/x3mHFjjaWItErzG
      15q1B3hrfK155CZ4TQ69xteFtTvAGl9r1ibAGl9rHhsHKBWyROIZbFYLUjbKUqyE22mnlAqR
      kZux6u8GmSSy8RBpSUMhk8HmcqC87+X3Yi5BPKfAZlp59bGQiRPPyrFav4JZlSSRjAQpqM1Y
      9SqgRHw5hNzmRH+3R2KRSCCI0ubCoPx9PPEpEY9EURntPDJBZDHLsj+ApLHi/FJmYCUSoSAy
      jYFEMo/dZeV+v610Mooo12N4hAuXVCoQjaYw2i2/vdpRKhELRlBarej+hQw4TwxiljunP+Ly
      ZAiNtZk3vv0sViWUCgnOvPtzxqPgan2GI+s0nD19kWBWQfuB59nXWn6visf+HYrJAJ+eOk+6
      UMLXc5x/eP80vniakYsn6Vm8P9ugyNzt33D+5hDvv/MRkYdCpKHhC3x0ffrzejNxgtH0V0vP
      I5UYPP8Rl4f9qx+UiC8vk77/PZ5inIvvvcNQ5Pf1ck+Is+9/xHzs0d+mvKN88MkpfKEkXy54
      nKX7N+8yNDLML9+9SPShb/sufcityUdnmyzElvjwg9+QfOS3j0EqEQ2EyJSeghB3ykfvrII3
      /+I7WKPDzIdX/taFxDS+fBPfev0wgalBJvq6kTUd4o+ONNM/MMb9Z8RjLxAqo4VKocRSKsjM
      rI5dzWr8fh/erJZ2Y5qLH/+G/qklVM0HOHjfe+1zfRe4EbfzwqFNKHMJ+vsHmY6G+Mx/lpGM
      i9ZaJYlSGQMn/5mIupxcQc7hF/YxdeEjpqJy7K07+e7hzVBI88mxD+nYeYAbl69x6NltnDw5
      QIW+yPiNz/j/zqbY/ua3Kd26hd5k4tL5EyxFCzTt3odEns5Pf86VUJYX//yHtFgVgMjY9U+5
      1LdITDDz6jfaOX/sNxhrOmh2ws2BaRQaG8++/iq1ZhUwx4//7/cQKyyUVG5eeWEH0zfP0jvh
      pVSxnVeqQxzrDFBpz9M1vITO66PJ7qaQDnD6ww+ZiYOzbQ/V4YvMLed4zuFGkYvw8XunaH9+
      D8OfXKLhW88y8evzNB7o4M6lq/j8flpf+VPuxtekYpbR65/Rp2pn/5ZqlPFZbvWMIBQ2UBa9
      xpW+ReTGal549TkqTWqC80OMDfdw+2oVd7p7qKzfSJstxc2BOSIFDd/85h6uvv8BRa2JpLaG
      HzxXz8nj54hkBVr2HkIY6MNTUYVd/Vt4PP4hyOdJK1RoVRpUSpFMJgfokDJpSkodarWeQjGF
      3lROdGaI0XSBeEBOBrjrDfHYO4Cg0NFYITAxvEjI7GRbuZHFpWVErQab0UR1/Toq7VoWl5Y/
      Pyg1w6WuIJu2rl+5bauNrGuowtPYjl1VpGrzAbZWmSkUixQkJZuOvM4z1RJjk17i8RRmVzWV
      DgOCsJLTyiJTMB1exlLMMDi7jMJuwwiUbzzEq7tdzC1GKOXzLE8PkXZs5S/+5Ns0lekBgfZD
      b3CgscT0Uvpe86yeetY1VJIIL5NKZ0nJynhuXwt9N26QKJYIzw/QPexfvVJLlJQWDr/yJnVi
      gLlEnsq6ZqqdBpa8fsRSEblzPa9+9xVayt3UedwApJfH8dHM9944gn+4j7L122jq2EGjDVDp
      qDKkGBmNoimHhe5xlvUeKhw21q1rwqEtMndfLuGot58bU0r2bKpCKQDmGtobPTTXOxgfWWDf
      a3/Mel2QkbmVDH82TyOemhZaK9UI2Dny/F48VfW0NNaSjQeIJzOkMXH0my9hyYWIpFPEM0U8
      tQ3Y9UqK+cI987AnGqUSrUyGKEnI5Qo0mpVLhqDRopZKiJKETqujfP1u9nVUo9MZ0TvsDwRW
      v8TyW071ujr6rnZitrsoq3SzONaHylhLLjDMsYuD1NdXo1MJny9ndNW01cLkjP+L1QkCKrX6
      ntnUqg0TJVFCrtKy7dDLtDnznLnUTakkIciV1FYYmBsZxdPRykjPLFXuCkCBXqdFfd9VSpDJ
      KIlFpFKBZCqDiBKdTodGI7/3S5Dm/PHjZIzVuE1yJEChVqKQyZGrnbzygz/nT77/JlsaHfcG
      R5KkFS9RIBua5pMzt/FU12BUr/RZpVbzhcCyTIYkFhFFERHhwYEW1DStK6dnaAx7dRvhnk4c
      jeV4O0/Q6ZXTVOXg/vikxdlEpSrAROjhpOECCCIlsUSpJCLIvrjXEVRqlPIMVz/7mIi2inKz
      YqXPKhUapRKFQoFM5+QbL76IMz/Fua6JR50ETyZGF23mGL/5+CSLpSo81jSTg/OIxloswgjn
      z11CY60j4R2lu3+SifkgHe1NDyx7vtT+U3DU0WhXUVXhRm4uZ71Dg726BoOxDJc6zvBiBodK
      TUlnwqjXYLHZ2LhpC/GZaZKrS0mrqwaCU8RlVgwaOXKVDpNBg5iP03XyfXqjJjY0uglO3+H2
      SJANG1uRyQRAhru6Cimnxt68jgpdEZfHicZowaBRoNCYMOnU6CwWKhs3UVEY5afvnCBcVGKy
      WtEqQKW3olfd7aqainILEwODmGzliHIFVosJmd7BkQNNnP/lTzjROYvqvp1sITHP6WMfETLX
      01JZjcuQY3QugkOrp6A1YjFoAAtlVgXzfi8Aeuc6Go1ePvjkMvWbt2FS67AYPteiG2qacYsZ
      jJZ6TG4rNS479opaCr4R/JIFs1hEZbKiUWuwuys5eKCNqVtDpFYXsB6Xk6WFEBs2tdL12VtM
      y2por16x/VPpjFSZM4wulbBajMhQU17hYKq/F729EgQZFqsFhUKB2WJCoxSZ7LnOUEDJ5rY6
      9BYTstQyV3tGILHE+e7xr3B2/h4QdGx89nl2tm/lm68fxqFWYS0zoVIa2ff8N9m+fR8vHdpC
      RdNmDu/fzpZ9z7Kj2fVgFX9YX6A47//dj2n45v/O5qpH5Xh8EpjlR//9BM//H/+ZavPjS6/x
      dPEHngAimWQauUaHSvGkhiSKpBIryauf2Cau8ZVZc4Zb42vNIx+DyuVy1kSia3wdWJNDr/G1
      Zm1Vu8bXmjVjrDWeYiTSET/eUAq10Y7HaUEugCSJRPzzRFIiRruLMrMOkEgEl5EMVsza38IY
      K5dY5npnN/mSRHaxl/dOXiOWE1kevUHP7P3CFxH/6A1uD01z/uxl4g9pSTLBCW4N++79P+Ed
      4ead2UebZT223yWmui9zZyZ8t3aGL11iLn1fmWKKnnNnmUn8vrRAGUZ7brH8LwhwSqkA5z95
      jzOdk+Tv+7zgG+TCnYV747A8fofeiUcEEL+ASGy+j76ZR4uPJElkqP82wdh/4AcaxRiXP/yI
      6wM3efcXH7CwOvbFnJ/P3vk1N66f41fHLpItikj5AL/8H3/D9dngA1U8PkmeABMj4zRtaMHb
      2clEyExHuIml7kkMexpYGB9gKZrDXlVHYX6Y8aKEb2CApq0thBIi1VUu5MUcw9dOcCrSjFsV
      J56VUOuUOKxqfJPDJLMiBaWRxloPsaUJFkN5nDX1VNqNSGKBxYUF7E4X/uUQFW4bS/MB5ib6
      mdWUKIbLaFhfj9npRC3LszQ5wVK0RG2dg8k73Sh1diJ6A+vWN6JbFTdGvZNMLYZRmt3Ul5tY
      XpgnI+mpLDcyPTaD3OxhXWPFiuyAFNOD86TFHAqTh/pyM4H5CRZDGczl9VRo0iwGEhTzixx/
      7zr7ftiC02BEEosEFyaZD+Xx1DWQGjjPxbEIP9xfgxKQ8nGGBycphYfoi7fQaEwQTYFGb8Ci
      LTI9sUh5rYvwwgKaMgeppRn8KRm1TQ3Y9WrEfIruc8cZND9Pg7OR2dExijonzY1VaOQCUtLP
      xx+8y47X/pI6TYq0pKfCpWdmeg5RbqCxrZbY5BzxYhZJZaOhrpzo3BBLMRFPbSMeqx7hSX9t
      Or7MRMnF9189wsUf/SPL0Tw1RhXF8CwZ0yZeO1rHWx+cJp9JMHjtIkJ5FQ+rmx47AeQ6Aw2a
      EnPLfibSHg7WC3iX/CzLVTRpivi9ESKLE1wcj/Cyc/UgqUjPlTPoyndRXbX6kSgiSTlGLn7I
      gHoX+6pjDAYMSBMXkLccRrZ0ieDuPSxcu4jBVc6tqWX+4o1vICvluXnpLM3bD9J77hy7X9rN
      6SsTtOpy+JdD6L23mRNfRH/jHOr9GUY7+6mxCYwu16AkjX85QHTyFEnjf2VfrQ4oEVn2k0hm
      uH2ti2e/sY0T751hzwvPMt99iZi9ErGvi4Ty++yqNSIQ4MMfv0v9c3sIXL6N+OrzFAJhor45
      Tg/4+N66FO/fKvDSwTLE+wQ0mdgUx49fxlVt49rwIkcqRJQaLWqlAkEqMHHtUy4tWamXlkFX
      S+eJzwi6DtKi87KsraE42ceul17jxqWLNLVUcGcohMtYoN+b4o9f2L4yppKIJBUYu3yM23EX
      llQ3geKrHGpbiXaKYolscpEPjl1i+4uvYZAliWfSzHSfJWZ8k5l33kW9Yy/RsQsUXz5K77Hz
      mOvd9E9H+d6r+9EonvAZIImUWM0/J4mrqb1UIIpIq/ncCsUC/sk+ZqQKWhxJcvkiIp8vfR6/
      CZbpaGs10HVzGKnMyYZaG+MzM+j0NnRKkbB3CV8wTCSR+fyY9AIjcyXq6spXskQq1JTZLBht
      bgxqGdVtm6i2rea8MjvYuvsAm1vsREICjdUWFn1hnC43AiBTqKgxGhj3TVHjMHDzziLuykrU
      aGjcuI1dGzwkUiu3+bBvGkPNFo5+6wd8/3AbMvRs3HmQLU0aoonCauNEEuFlFhe9hBMZCkUR
      la2cDTV2xmZmWF6YISXokTKpe+ohi7uBXXv30WyS44/HCPu9eJdDhGIrfbZWr6OjYz1lJiNW
      40r2y1xgEdHWxsF92xFCXoSyChzuShw6oJRhfCTAhv0H2Ldl3cowq9Q0bdyEW6dEkJuor7Yz
      OXEHmaEOWWCKsYVFfNEcykKR3Gp5u8WMpUyPdyzO1m88xzMbypkZn6cICHonLocZp1mLyuKm
      fX0DynyUhbklIskY6UwRpVZL25ZDNHhUZAtGGmq1LHnjlJU7eYSs6MlDb8IlFElmMpQkPRbz
      ippAZnaiJ0E2m8JotCMVMsSWhrjWP0zfjQHud6D6Uk+BTLVNhPruYHa40bsrkOaGwdZAMTbP
      gDdHa30laqn4uc5aX8O+LTZ6uocprp5FcoWCYjZF/qEleToRY3pijOn5GHqjSFooY1tbJaMj
      I4iSBDIFVTUmFoemsW7fTHh8Grfb88h2Gi0uEv5Jhm+d4f1z/RQeWSrHyMAI1upmrErpXnZG
      NHpq7FYatxygtVyHUqu7Nzix0AJT45PMpwto8xEGZ2M01leho3jfHkaOQIlMfkWwpjTbKEWm
      GRmdJK81Ybp/PSFXUV6uY2polKHxuS82URBoqHYxersba3M7do+HyqoWdm9qQmvSrqoZBRRK
      OfmMiM2jYKxvgJFpP3Z3GXdfY1FQIpW9Owo5pm73IJQ3UW42fCERoliMkqGazevLmRgZIp1K
      kUznyKWSpHOPHsk/OGonW1uVvP+jXxJzdlBtDnLzTB8FbQXVFh8ffHAWd2MHDdue5c//7M94
      6cAz7PvGNiz3VfHILJEPI6iNmPUaGpqbMRqNWHUqyhtbKDMbUeTDZDTlNFVX4qlwYbZ5cJVZ
      advYjpTMYPWUoRRAqzeST6dweGpxV1bhMCjRGHUEJwfIoMVa187ujha0xTDTvixbdu6h3KZH
      EAR0ej0lmYXm9U3YVALVDY0YtCosznIcJh1aixO31UzF+g4qZSFGfCW2bN9MmUlPWWUVJrUC
      o70cu14BKNGrS/jCOdo7NuB0ObGZrVRW19LQ6GJmYADRto5tbZWsrACi3DrbjWQ0UrtxB5sa
      a9BIMZIyBy11NbgrXZgtTjyOMtSyIhgtuMw6lFo7Dk2KSV+Onfv24jLr0OgteBwWEBS4amqI
      zYwiWauoqamlymmlzF2JRa9Eby2jutKJXG5j/cZ6ysrKMeR9TIVkbNm6EbNWCcjRGfVkUyXa
      du0gNdVH3t7K/u3r0MhX0q8alCJZtYsaTxkV5ZXYywz45oPUtq3H4XDitlpwVVVi1MhxuBsx
      yZaZCRTZsnMPJmIEk0AySAINZt0T6P4lyLBVt7Br1242r69GJdM3zoaZAAAI9ElEQVRRWe9C
      JVNS07qFXbt2sK7asWK1KQi4G1uotOofrOIPGwhLcf7Xx6l45lWan9j0jz6O/fw6O19/Hbfh
      8aXXeLpYiwSv8bVmLRK8xteaRz4Gzefzj/p4jTX+w/HICSCKT4EjwBpr/DuwtgRa42vNmhhu
      jacYkcWBy5zvnsNev5XDz6xHfTfcIhUZ77mKrGoX1doENy9fYLHo4ODBPbiMv4UYLhue41fv
      f0w6XyLU/SH/19+8gzeeY+TMO5wZul9YVGLi8jscO3ebH/3dTwkUHox4hUbP8fb50Xv/TywN
      c71n5quJ4cQiXR//hM967uaWzDB0/jyzqfvK5CMc/9HfcTv4lX7hKxDm1DtvMRl+9LcZ/wj/
      +Nf/k5M3JsgDoZGzvH1+7Cv9UtY/ypnuMeY6P+L47bsCwzy3T75F59RXssPC2/Uhb11feHzB
      J4n0EpevLrH7m3sJ95xjIriydBdLRYaufsz7x8+zFCsQ9s2jKN9Co2KOa/0P9vGxdwC1zogu
      nydSSDA/nqbSbSAcCbIUllHZmufmyffomYlSu+0w9cUCxWKJQj5P3DfGwEKJvbvbUeYS9HR2
      Mhgt52p+hPm4nDKPAaXaQeeJ91hOCWTUTp49sIX5rpPcns6wbvdBnmmtQCpkuX79Ki1tm7jT
      P8yOLU103hhDKuSZ6T7LP3VrOPj6s5QKBUqFOJ0nT3FnocDuI7sp5rP0nnmP/pKJF7/9Ik61
      AEjM9p7lfNcUSncrR7ZX03/tGglFOds3OLhw5hoqTzsvHt2FUSEAAc6+dZmQLIPa1c6R7fWM
      3jjN7YkQro372WUPc2PQh5T30XlzEanNR4PNjVjMMHD1FLen07TvPQIDpxkPZjjY3IgqF6e7
      s5OhuJeruWHmE3LqNrQjTt+gfz5NzbZDtKm99I4tsRxIsfmFV6hMDnHs6hDm6q08164hG4/R
      NXCLcb2evRvcaGNTXLnRi0loJNc/xnzSwNb9m5i8cYG5MGw78AzLS36ePbidqRtnyVfvJDt4
      nt75FDuOvoajWKDwNLjB3U82TVSpp8zmwKwrkU7nAC2CIOBs7qBtZBYAV+NmjHNd/P3ZGNtf
      fDAQ9nhjLI2R9WUiY2MLTGkq+Uatibl5L0mNBpdBT3ljBx3Vem73f351Jxfg1OnbVDY3PGSM
      tR55ZIqSZxPtNpF5b5Dp8WlsGw9RX5ziSu8AfUNzVNRUEl1eQpJAJhNI+/yMLnlJTo4yMD/P
      XKaAkQLays3sq83SObhAYHqa8cFb9KdcvHm0g5A/hEiO8o4jrFNO0j1598ooorfXsn37Znzj
      vfgDy/RNJdm3u54rv/4UyVlBcvwsZ3q8q8ZYaUbGlmjfexRhspORYAJ3XTubGu103xkkHV5i
      Jm3lpe+8/IAxVtLXz81JJS8c6eDambO4W7eybvMummyA2kRLQxXuxlZkkSmk8k1srrNT0biZ
      9mo9PXeGSAQnmMtWcHSbjWu37tB/sw99XSP61DK+YJDZWImm2iqqW9qwqEBdVkVLtYeGugrm
      Zxap27GPKpOOdR3bqdVH6J+NoV2aYSLoo3c0R2nxCmeHI1Q4RE68dxz/w5ZDTwMyOQpBhgQI
      ggz5qpepIJPjcLpQ3ido0lVt5U9e2khv94MSmS+xCVZQ2+TmTlc/BpsdT7md2ekJtDoPYnKB
      sxeukxVlqx4+d2vVYjbISCQzX6hNEAQMRsO9TJAqrRabyYjerEMuM7H34F7EyAzj8+EVQyq5
      kqoyPfNzk5TXVzLUt0SF0wOosNutGAxa7ppeFfJZdAYThrIaNtS7ENBit9swmZRIdzU/FOi+
      eIoxbwqVamXw1HodakkiLehpbG5i1+GX2Fxj4m6PdAYLZqMOg1ZDMrrE+fOXieckFKtuWDqj
      kYf9d8V8HqXOhE6nR02J3L8QbhQEAb3RQC4xz7mzN0gUZChkK4VNVismvR5BqaXt4GEqxQgz
      c9MkHiPxVyhVaLUaQtPdXOocB5kcQWlgU4eFq2d6EKorMRYzWD11NK3fwQvP7cD0NO4GDTZq
      lUnGxieJFWzYzQKJaIqH3wBZHOnkWs8IgVgOs8X0wEn/pZ4CqSoaUS3PYXd5UJVVUpZcROGu
      R0WJTCpGNJlFlslz73RXGtixtZnhzl7Sq394ncFEfGmSUPrBujPJMNdPfcS18QyVHg3jA4NE
      MgI6nRoEAQQ5ldV2fBPLmDdvguV5nO4HzY3uYq9ch7TUya9+/jNO9859YSDuUswlCYZCUFKQ
      La3uEXRWtrda6Ll6i1u3+0mIsnsTIBGY4Mzx44zldVSatGTTcSLxNLJM4fM+o0MlpZhfDgCg
      LavFkBzgw4/Poqqox/KQvFJnMBJfnCR8twJJIp9cUdVm8+KDpsFiEe/4MDPhDHK1FrUCQIbB
      qCc4O0G8AKBEp5aYX1i8J0CUSiVSsSDJvEAmk8fSso389AjVtTV46ttQRcfp7LzO2GIKHprA
      M0OdBFMiYwNdxJ/Uu4PCyvZDGwiOLFC/9wCVhjRL08urV3gVzVv3UGtX4apuQpueZzJh5Pl9
      Hdzvef0lbVFE0skUCo0elQKy6TSCSo9KKJFKJREFBYJMjlohUZIUlIoFtDo12UwBrU6LTACp
      mCORzqOQCQhqHSoK5IpJPv3JT6k4+J9oqzJh0GkoZlOkcyVUWj06tWJF613Kk0wX0Bq05FNp
      lFodUj5DSa5GRZ6cpERezCNotIjZJJm8hM6gR8xlkWv1CIUUJbkOjVIGSORSCdIFUClX8sYW
      8iV0ei2U8sQTaQSlBqNeuyoJnuVH/88n7P3BD6iya9CrFWTSCUrSap9VUCjJ0WuVZBIJJJUW
      nXrljpPPpEjnRTQ6PWqZSKYgodeuiMqkYo54Jo9SWBkPjVwklUggypQgk6NVSBQkJRq5SLoo
      oFOIxJIZZEoNBo2MTEFAKy+RyknoDTrkAuQzCXKSArlYQqnVIxPzpFIZZAoFyFUrbUwmUWr1
      KGWQSSXJFkS0BhNKKUtOUqFbmV3kMinkKh3FfBqlWo/8P+gD8z+wL1CemdEJjJXNq0rNJ5Ek
      Y/2LlK9bh0H1+NJrPF38/7QGRGl4yAEcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='184' name='Across_PopByPersonType' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across_chartPersonType' width='192'>
      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
      zp7RF+JlV/kfAQKWVBucvkkAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
