<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='ActiveTransport Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>4</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1442</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1454.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ptype]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>8.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zeroAuto</remote-name>
            <remote-type>11</remote-type>
            <local-name>[zeroAuto]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>zeroAuto</remote-alias>
            <ordinal>3</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='boolean'>false</statistic>
              <statistic aggregation='Max' datatype='boolean'>true</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2076</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>13494.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>active</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19289</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>180.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>more15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[more15]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>more15</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9956</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>more30</remote-name>
            <remote-type>5</remote-type>
            <local-name>[more30]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>more30</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9162</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wlk_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wlk_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>wlk_trip</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10892</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>6.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bik_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bik_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>bik_trip</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6624</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>6.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wtr_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wtr_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>wtr_trip</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8786</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>6.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dtr_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dtr_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dtr_trip</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4427</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>atHomeA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[atHomeA]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>atHomeA</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8568</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;' value='Share of the population' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' value='Population' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' value='Share of population that does not leave home on a typical weekday' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' value='Bicycle trips per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' value='Average minutes of active travel per person per typical weekday' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' value='Share of the population that engages in at least 15 minutes of active travel per typical weekday' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' value='Walk trips which are part of drive to transit travel per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' value='Walk trips (which are not part of a transit trip) per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' value='Walk trips which are part of walk to transit travel per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' value='Walk trips which are part of transit travel per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' value='Share of the population that engages in at least 30 minutes of active travel per typical weekday' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' value='Average minutes of active travel per person for all those who leave home on a typical weekday' />
        </aliases>
      </column>
      <column datatype='real' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
      </column>
      <column caption='AtHomeFreq' datatype='real' name='[Calculation_0480828180930394]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[atHomeA]*[freq]' scope-isolation='false' />
      </column>
      <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
      </column>
      <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Active' datatype='real' name='[active]' role='measure' type='quantitative'>
      </column>
      <column caption='At Home A' datatype='real' name='[atHomeA]' role='measure' type='quantitative'>
      </column>
      <column caption='Bik Trip' datatype='real' name='[bik_trip]' role='measure' type='quantitative'>
      </column>
      <column caption='Dtr Trip' datatype='real' name='[dtr_trip]' role='measure' type='quantitative'>
      </column>
      <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column caption='More15' datatype='real' name='[more15]' role='measure' type='quantitative'>
      </column>
      <column caption='More30' datatype='real' name='[more30]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Full-time worker' />
          <alias key='2.0' value='Part-time worker' />
          <alias key='3.0' value='College student' />
          <alias key='4.0' value='Non-working adult' />
          <alias key='5.0' value='Retired' />
          <alias key='6.0' value='Driving-age student' />
          <alias key='7.0' value='Non-driving-age student' />
          <alias key='8.0' value='Child too young for school' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Taz' datatype='real' name='[taz]' role='dimension' type='ordinal'>
      </column>
      <column caption='Wlk Trip' datatype='real' name='[wlk_trip]' role='measure' type='quantitative'>
      </column>
      <column caption='Wtr Trip' datatype='real' name='[wtr_trip]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
      <folder name='Active' role='measures'>
        <folder-item name='[Calculation_2310828180634107]' type='field' />
        <folder-item name='[Calculation_3570828180454696]' type='field' />
        <folder-item name='[Calculation_4530828180712947]' type='field' />
        <folder-item name='[Calculation_5180828180654215]' type='field' />
        <folder-item name='[Calculation_5750828180815438]' type='field' />
        <folder-item name='[Calculation_6150828180840224]' type='field' />
        <folder-item name='[Calculation_8120828180802260]' type='field' />
        <folder-item name='[Calculation_8230828180724803]' type='field' />
        <folder-item name='[Calculation_8380828180514207]' type='field' />
        <folder-item name='[active]' type='field' />
        <folder-item name='[bik_trip]' type='field' />
        <folder-item name='[dtr_trip]' type='field' />
        <folder-item name='[more15]' type='field' />
        <folder-item name='[more30]' type='field' />
        <folder-item name='[wlk_trip]' type='field' />
        <folder-item name='[wtr_trip]' type='field' />
      </folder>
      <folder name='Regional' role='measures'>
        <folder-item name='[Calculation_0480828180930394]' type='field' />
        <folder-item name='[Calculation_2100828180906930]' type='field' />
        <folder-item name='[atHomeA]' type='field' />
        <folder-item name='[freq]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='ActiveTravel'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='67' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='512' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='ActiveTravelByAutoOwnership'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[zeroAuto]' derivation='None' name='[none:zeroAuto:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
            <column datatype='boolean' name='[zeroAuto]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='212' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='normal' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#3f6a6e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:zeroAuto:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='ActiveTravelByCounty'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column datatype='real' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
            </column>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='392' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='auto' />
            <format attr='text-align' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='auto' />
            <format attr='font-weight' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='normal' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='Arial' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#3f6a6e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:COUNTY:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='ActiveTravelByPersonType'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ptype]' derivation='None' name='[none:ptype:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]' value='84' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='wrap' data-class='subtotal' scope='cols' value='auto' />
            <format attr='wrap' data-class='total' scope='cols' value='auto' />
            <format attr='wrap' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='on' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='296' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' value='auto' />
            <format attr='text-orientation' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='0' />
            <format attr='wrap' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='auto' />
            <format attr='font-weight' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActiveTravel'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActiveTravelByPersonType'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActiveTravelByCounty'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='ActiveTravelByAutoOwnership'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
          <field>[textscan.41862.719202812499].[none:zeroAuto:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ActiveTravel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ActiveTravelByPersonType' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9V3QcV56n+UVERvpMeCS89wBBT9FJJVEi5YpSyVSrTE9Vz/TM9Nk9M2cf
      93H77OOe7dk93T3d1WVVpVLJe3pPECQIkvAACW8SHplAeh9mH0A5ihJZVVJV1yK/FxIZ5t64
      9/7i3oj7i/8VdF3XSZNmgyL+uTOQJs2fk7QA0mxo0gJIs6FJCyDNhiYtgDQbmrQA0mxo0gJI
      s6FJCyDNhiYtgDQbmrQA0mxo0gJIs6FJCyDNhiYtgDQbmrQA0mxo0gJIs6FJCyDNhiYtgDQb
      mrQA0mxo0gJIs6FJCyDNhiYtgDQbmrQA0mxo0gJIs6FJCyDNhiYtgDQbmrQA0mxo0gJIs6FJ
      CyDNhiYtgDQbmrQA0mxo0gJIs6FJCyDNhiYtgDQbmrQA0mxo0gJIs6FJCyDNhiYtgDQbmrQA
      0mxo0gJIs6FJCyDNhiYtgDQbGsPdftQ0jfQC8mk2AncVgMfjSQsgzYZA0NMtPc0GJv0MkGZD
      c9ch0OfQFLwLbpZ8EXQEnHkllLgykYT7TyS44kaxFZFt+zQ5TY3jXQ1jNUJYMeHKdfB7nDJN
      mq+Fe/cAapTOI29xeWSeVe8iR957h5nV6O+VyMjl9+ia/fwxicgEH75zDl84TjSeIj0OS/Pn
      4N49AABG6rbv5VtlJgLTP2PJu8jw8eOMeBSs5dvYV7DMqY5lZKJkbzlIY6yDwYxv8/2Cm/xz
      v4tdEqDF6DxyhBvT88SkKvbXhujtn6OoQsCv16LMt3P8yji6MZsDhx7i6rFXQbIx47Px3//3
      v6PA+I2WQ5oNyn0+A0Q5/8Yv+J//8jO89jqKrH7mI8X8+McvIE8Ns6BoZFbt4u/+5inCN0cI
      AHzhni6SV1ZDdVk+Uf8CGbWt1FVVUOywoQMjw6PsfuZveKRaZ3BsBRQLe//qr9jjjDMf+Vqv
      OU2aT7jPHsDKIy/9LY9UOgEIrw6hqglSqRQpBGQ0EkkFNZVEMZhw2kwk4lG8az7AtX6KmJvj
      J2+w/TvbcQ5f+0IKoiCQSKUQEwoGiwiSCbNRxihJpN9TpfmmuHcPIEhk5BXgNEqf/GR1VrKz
      VuSdd0+Rv2sPBQaV0Ewfr7x3jcYHd9HcvJPU8DkuT8ZxZVmxZ7lwZhZQWQQ9XcuU1OQjG3LJ
      NUVY1QzkZFjZvnc/U21v0xcp4oFNpeS58jEZZDJcLmz3KdM0aX5fvpZ5gNErr3JhoZH/+uK2
      ryNPadL8yfhaBKAqKVRdxChL9945TZp/R6RngtNsaO46ulYU5U+djzRp/iykBZBmQ5P2AqXZ
      0KQFkGZDcx8C0En6p3n/1Zf56c9fpnPYQzg0xbkzN4imvp5MaJF53n/lt1wYnANgaaqPW+4l
      rp87ycxq4utJ5K5EGTp/Afed1qbIMteuDTM7epXO8bVvMP00f27uPcWkRrny0XEs21/kb6tV
      Tp/ux2uxc6unH4NFJ7+silqXianREZYCKYpqGslWlnGvJjFnF5KRWmRqOUZhdQOluQ5EAXQ1
      ztz4CLN+qK2vZPnaCQbiBfyvVQUQ93P51IcEKh/FMtzDoubEW5hPY20FamCO4YlFLK5Kmiry
      EQWBVMjDyIIPPeDFVNxETZGTlclBpr1JSmqbcSSXWVgLEojoVNXXwtocqYxSMlNLrAgmFkZG
      yd+8B2aHmfWEyS6tJmPhEu+2q/zti9vIt5uIB5a4OTyJMaeSmnIrMwPThNUElrwK6svykMS0
      j/UvlXv3AKKJmpZ63FePcfTiOM27HyDTIhIKRknFPBw53UY8GiYSV0ks3+L41SHm+i5wrn8Z
      Q2Kao8dv4PMvc/LUOYLx9Yfr1aluTl+fQAiOc/T8AKLJhNnhwCQJIBowGQ0YZSNqIklMhcG2
      4wzNzHH+1ElW/D46jx5jMrx+roRnjCPHzhMWFK6cOMbs/BhHTvaSiK9x6tQFxrvO8+HVKRLe
      EY5d7GG08zx9bj9r4x10jq3f3bVUjEA0hRSb58zJLhImIwbJiG+yk86JRa6fPspsROBm+0l6
      J29y9J0zrIZDnDp9lnBC/eZqJ803zn1YIQyUbD3Af/zBczTn67z92u9w+xJkukpobWrGbFBJ
      xcPMz8zg8QcJRdeHLPkVdZRqqwx7AviCUTKdWWi3DXK+lWWyS1vYs7OJ1PwKcnYmjqw87CYJ
      jHayM6w4M5yY7U5qmzZT7XIQCC3hnlpgdS2II9+Olvj0rmsvbeKBnQ9RZPOyOjlKJL+F7Tt2
      QHyRmCpT27yZna0NBENriKL4he8O9FScpblp5r0BEuEkjmwnNpsTs9kABPAsGWjZuYfGAjNz
      Hh/WrFyaG1txWnRUVfu66iLNn4F7CkBPhLj0/quc63eDLYeiPOcXPoYJe93MhATKC3MwqAof
      3xOF3GIqs7Oorq5CElPIwvqBGTm5rM2P0Ns/iljownlHmrIkEQmHUT8zRWcwZpJfkEdFXQ1W
      jJjMn26LusfoH77BSiSH7IoqLCvDDA32o8m5mIQkU+MjDI1MkJGZS2a2jZWpUYYnllBut91U
      cInhhQRlZS4MooIqGtESERIJFXCSnZdkZKCXsZUoBdkZv18Jp/l3jfT3f//3f3/nj5+dBxAM
      RvLzs/EtzLK8FqZh+0NUFmRid2RTUJiLw+GgrKwCoxpFyiqnpqSYgqICcnJd5OYVUpihsrwa
      pW7TNlyZVgQBrJn5ZIphFmI29uzdSrbNij0jh/wMCwB2ux0FE+WlJRQWFpDhsJJbUEpDRT7L
      Cx6yazdRV5iBKAgkfbNcH/eR47RQvXU/NWWlFDiTrPhVtu7ei8E7xnRUIDO7mAd2bqa40EUy
      7MdWWElleTmFednklVeSLyeImF1sqioip7QSu6iQX1BCgauUxvpSAguzZNfuoLW6GIcji4Li
      fBx2O/l5ORik9Mu0v1TuaoWIx+N/jrz8QcSXhjk9EOaxgzuw3GX7Qm8bw1IlD28qTb/zTfMF
      /uIFkCbNH0P6pphmQ3PXHkDT0m820mwM0nboNBua9BAozYYmLYA0G5p7C0BXmO06yv/4H//E
      P/3zP/CzNy4yO3eVf/x/3sD/Nb0sSsx18H/+H//A6f7ZP/pc6vhJ/uHNbu600B1986f0jk7Q
      fqGd0H3560K0v/YvdMwu8tv/6/+md/nue0U9E/zTy+9+cYO/l3/9p+P4fs/83w/9Z97kRM8M
      OqDGg7zy618wuxr7o8+71HeUf37lAvE/t7tDS9D14aucG/F+5W7LA6e5Nv3VMXO6T/ySoz1L
      X7r9PkIjJhgfmqX+wDM8VGXH44lgEhdIeCZ441c/JbtxL89uz+PS6VMMzfmp3f9t6hP9tE8k
      KWxoJWu1lxtTYWofeJSHNpcjiwJK1EP7yRMMrsC+R/az2nkBn8VFfakLiHHj6NuMhy1EkhIH
      nn4S+1o/J853IeQ3c2hPDe2dVzH4VvDaGnlmVzZne4McPlzLlbf6aGkCHZ21yU6On+oiYcrh
      8b31XLzcRYOjiRI9SjzsofPIUcYDRvY8cghl8gIjiyG8YTOHX/oOlVkWwovTdHQPkZ/bQioW
      4PJHr9DjyOfppx/B032ESwMLmEq3sMsxw8CNGww+9Twt+TpqdInj7xzHJ6VIaCUo4SU+eu8D
      FpVMHnry2xSobk6faSNgKuHxxx4kPNpGW48bZ91uXnx0K7KoM99/jku31gisLNN46AfsLdM4
      +c67zCWcPPjIdi5f6sRT4+LQljJg/XpTEQ8XLrVxywPbDxxia26SU8dPM7EcZtMjTyKMDVPz
      zNNIt84ypNWSF+ihY2iBih1P8MiOSkyiAOgE3b386qdjVO8+xEMVAmdPnMEdc/DY4YcJd15m
      ChXvbJCq+kKmpzzsffp5nKvdnG0fwFy6jccP7CTTLKGrCaa6znP8+jSlm7/Ft8oTvNs+gjG4
      gq35CZ7aV4tRgGTEw8WjHzG8kqR+35Mc2lpOMurlRmcHgRU7/pkMnnp4C93Hr2CtymFkfI7U
      8jJ5u56mQYkQM6WYvHacE9fHKWk9yKGdOZx+633c/hQN33qOe83b37sHkKzsfuog6vhl3nv3
      Q/rdXlIapIx5HDy0l8mbPSgYqWreSlOBRNfQBBHPHJHMJh4sWOGtsxNYbQJnjnzESjgJwOxQ
      B+N6DT8+VEnb2SFqWxup2rSbsiwjoOKZm8Ne9yC7S1NcvjbK5fMXqHvkO5RFB7hyc57ZkUka
      nnqJmug1Lg4uMTPvRSXBknvp9t1LR7YXsHP3TgT/JJOpIlrrimkqc7I0v8T8zctMCI08s7uE
      0+cvszY1iVCzm735q/ROhAGwFxZRW1RMdUMtkmRh08OHyYgMMbUYIKekiW0tVYwPD2EraKC4
      bjMt+QAaE1dPs5yzk2d31aAIMHf9KJ7CAzyxM4uLZzq4dOxNJsNmUu5OPmrrZ+jmKJlF5Zji
      YWK6DuhEfUssJPN56dEaOq/dYvr6EeZyH+bw/gLa2iaprq+kpb4CQfjUk7I4cJ4zA6vY8fLu
      ++eJS1bqN2+nLkfhxtga5c4Vusc8jPRN49Bnee/cMI7cDDqOvcn48sdduYaWUcmTD9Uz1NfP
      yNWLRAr38MJWE0fP9bA8P0g0azd7SmMMhwrZWaLROzbIsTePETVnM91xgqsTKwDEvTN8dG2R
      7//oGWLdJxmY97GwpPLYSweY77iG93aSgmikatNOavMU+m/OAGA0Z1FTW0/rrlayVxcZcbsZ
      Cgtkql7mVg18+4dPMn/pBCMzc6wsjHOm08vTP/o+hXqQUMJA3fYHaHIJDPaOf2EkcCf37AF0
      VSGSMvPQk89jSPp44/W3WMzdhD3Did1sw2iS8c8NcuLSDA0FVqSUgA7YnHak5ALW4np27dtC
      S2uSLPN6ckpKwWq1YrJqSKkVlDt0KBpk7BlOLKoVIayiAFazGYPVwFJSA2sWOTYLYZsRryAi
      6hpKPEHikxdaKW61H2fS0ITNKn8hsJaaVDHZrJgtEqq6AoKZzCw71oAZ4S7OZtko43RkErdb
      UJUg508dw1HdjMUk3hH/TieZTGK22DDbbRiFBMlkEmuGHYvNhqD4SekG6lq305KzGdVWiDWV
      yczoLdq659n15L5PfFG2zAwy7SKCAPFkApvDgdlmQ1SD3O0ttZpSya1uZu+uEpoSRgKTNzjT
      FaTOaUEUDJTt3MHFVz5kLr+al+wKJlcVux7YRUt9iKIM+eOSJzPDjsXixCj7SSXBmmfGarOh
      JWOoQE5uPk7diVPPwilY0bUEyLls2v4AWZsbyCxev+eqqopoNmM1mbAZVRIJkG0Z2DLt2D9T
      xqGlIU6cn6CqyIas3lFRko1tW3N4rWOSkuo6zExhzcrGZrZhlVU0FVBSJGULVrODyrpyhMVu
      Pmrzsr3EhhTniwEK7+DePYCWYrr7LL/5zSu88e5RTEWbyHWaPp9PUSAWXGZpLYYQjX+iOqmw
      hRpxijMnztA3tfJJXgorG0hOtfHzN9rI39JE5h1JKokInSfe5ETHHJUNZTRUl3Hx/d9xadZM
      U4UTfPN8+PbLXJjNYOe2WrLDo7zx7nnWkh97mEQMgsKCe4q4IpNIJHAaUgzPeADIrqhHGzvH
      a0c6qKlv/JILN+Gwi0yNTZD6XCGK6MkAc3OLCElQZBlraIpbHg2QKG/ZTqj/CG+cvEZC1Slu
      2sVqxxu8eaSH0pYWNm3axEz3eU5fvM5aOMHsSA8jbg+mzCwsXxIfu6h5N4HON3jtvU6KN7WS
      l2lgbNz9uUVMcqqbsXkGOHXqAqMrIYyiQGhtgZVgCiJRlIxGMtVZcioryC6up1Ze5uSJE3SN
      LKHdLV1BoKK5moWrx3j5+CBNrTWYv7gXkEdTi5Pu88dpuzFC7HYVWLJcNNpD/PznrzNtbqAu
      7+6lLAgS8bUFllaTxJXb3YIo4XAYmBqexlS7HXF5jMKiIgDmRzp589evEXFtpcAJZBSzNTfI
      7372b7x14joxQSK8sshsIIGkRlA+8zyjqSH6OnsJhAL09vUSV+5rHkBHU1WSyRSaDgajCYOo
      o6Q0DLJESlExGkSSySQIIggikqCjCQZkSUBNJUmpGgbZhEFav6PpuoaSTKJoIBuNSKiktI/j
      CoU5/rN/Qdz9n/hWrROjSQZtPX0kA0J4gZ/88ijf+a//AZfJjMloQEkmUBAQEZANIilNwCCo
      JFMakiQiiAYELYmKhICOwWBYD+OogywbQVXWz60rt/MtAjpKMomKiKBrSLIJXU2CaEBX1o8V
      RRGDQUJNJhGNZgyiALpGMplEQ0BExGCUUBIJVESMRiMit7cLEiajjK6mSKZUBEnGJEsIAmiK
      gqKLGCWdhApGg0gqkViPvWQygpYipQqYjOs9aiqV+vSaPi5TQSORTCEIIggSRllCTSVBkjFI
      AkoqSUrRkGQjsnQ7XTWFogoYDAKKqiEbJFLJJKouYDTK6EoKJCOirqAgYUBFRUISVJJJBUGS
      McrS+tBM19HUFImUimgwYhR1kqqO0SiRSqgYjPL6x1GaSjKRRBclBFHAJMuAjqqkUBSF1dke
      zl2N8PT3DpIYOsavBwz8by8+hCSbEFHQBBlJV0iklPV0DJCIJ0GSEBEQBR1dXK9TXddQUiqS
      QUJVVQwG+d/jRJjC0vQkYk4l+Q75C1u1ZJTJmSVKqiowp12Y//9GS7IwNUEqo5yyXCsJ/xLu
      kEhdaf7XlsS/QwGkSfOn40tXiUyTZiNwVwEkk8k/dT7SpPmzkB5Ep9nQpAWQZkNz3wIIeaYY
      mvgSQ8yfgMTaHOMLAb7y6URNsjgxQ/gPOL+uKSxNDtHdN0rknqFRFbxzU6zFokwPT93H/qAm
      o7hn51HunOy5n7zpGu6pMYKxrykS2Z+TZIiZ6UW+apCtJENMTsyQ/ApPUiy4zOSs54/Ozn0K
      QGO08xgfnukhpoGajBGNp9BUhXA0hqokCQX8BEJRVFUlGgkTDIVIJBIE/T58/gAJRUNNxQn4
      fQRDYeIp5fbffgLh2KeTOmqKcDhCOOgnFI4SCQUIReK3G75GPBIkGAwSCEVQVI1IJIyiqsQj
      UeKBBY6/c5z5hEIyFsbn8xNNKOi6Sjjgx+8PkvxMA1RT6/kLReIkQ15OnTpLQBHWo17oGvFI
      CJ/PRyiaQNc1oqEAPn+QeMJD+0cfMOZJous6yViYhKKjqUki0QTJRBS/z0cklvxkFjrkGeOj
      YxfwR2JEQkFC4SiJWASfz0cwHCOVjBGJK+iaSjQSQfmkTCMoikrX1QssBRKf5DsaDuP3+4km
      FXRNIRIM4POHUDSNZDREMBgidntiUEnEiIRD+PwB4ikVXVMIB/1f2D8aixH0+9bT1PTb5eMn
      GImjKiki4dB6eUUTn0xqaqk4wXCYoN9PLKmu5z8cwB8IklQ0ErEIwWBgvR7QSMz38+7xG3hD
      IZLq7baUSBANhQgGAwQjcTQd1uefkoQCvvV2pWkkouv1EYzECS6NcLl7HFi/eUWjMVRFIRKN
      oaspwtE4mpIkGPDjD0XRvuRl5/0tPhSZZjJWx+PlPjpno7TEOzk54uTQViMfXZnjgRKFrskA
      Sgq279vD0Ln3ibua2duQx82hSfwrc+Tt/i7FaxfonNYRfB7KDj2La7WXW0sxYjGRx174LpVZ
      MqyO8JNXzlFW7mR6IkZFrZOlZZHHWu1cjbjIGD3FirOelG+F/YdfpOfUbznwzA8ZOXYa+65S
      FpZmmR4eZWykm6CmoRlKObjTyevvXyfLopK94zme3FaEhM5A2zvcmEmh60a2bXIxtrhKqdmJ
      WQItEaT/2mWm3W4WlWr++tli3nmjHZNBxVhaycLCMsLyGJMdtygoSxGo+i4Pma5zdEjEpS6w
      rIjoop2DTz1BoUMmuDiFe3qWm0OXudZ+k82795Er+BlbmGdpWefgQ6W0T2Tz0mNOPny3j+Z6
      E30jfkQ06vY89rnqWB5v442PxnDlyUQzG3i8QeTCjSmEZAzXAwex9b9DR7Sag088TGtJJtPX
      j/JBj588i4pUuYtHCyKc7p5BSEYp2HMIc89bdMZqaSqKMzETwiwKtD7+HKbx01ybjaErRnbt
      babt+BFc+Xm4Iy7+7n95FicQGjnL/3t6kSaXTtTcyMGtTs5d6EY3CGRU7iJn4TSdwRwOPPYU
      mytsLLrdzHv8dH34KuZdP6Ji4QOG7TWsHDmHWF9FIphg76ObGbg8zKZaB1f6FxCR2PXUU4hT
      Vxma8TKbzODFXVnA+jxRIrzMux9eYv/eTZy6OMzzj1Ty3vVV9han6J5cIxlLsfPpl2gtsn6h
      ad+HHVplfrCbsCUDe76V0bYuxIJGbOo8szOzFJXXM9zVxvyKj5BvgYl5P8RNbD3wLcpd2WQ6
      LYhqEl/Azdioj/2Hv8+Ounz0ZIy+rg6WV/2E12aZWPp04GIgkz3PPEN1pkrzvu9SZFomcjuq
      HLKV1r2Ps6vCzmowsj7TeZuMrEJy88rIs6zROzxOwB/CuzzFalzCqKsYMksoyf54Qj/M9LSP
      fU9/j20uhYV4NtW1tWwq+9iYIWF1ODAbJaKeNdxjfVhbH+cHP/4PPL6/mYrcPEpLihAxULlr
      F7HhHkZG56kus9I5MMGa38/K0iIrvnW7bmZpNaXl5ZTYZYSsKh7du4kspxObWSYR9aAX7KAo
      Ocr0rWFM1Q3M9XYx6/XjX1tmav5OW7BAVvlmvvvCQUwzU3QO9DC96CUYCTI36iYmilRtf5BN
      xR97IQ0U1O/iB4f34Z+eoKe/h5klL8FwgLlRN3FBombHfrZV5SOkFDKLKsi2SozPLfHQk8+x
      szDKiDtM3Ozi8LOPU5iMEPxMbrIrt3D4he9jCvQz3HWFQbeHoN/H8NQcespA5Y79bC7PRMBI
      RWUpebmV7Di4m/DoDcbmRBprC7A4XTz0xHfYmgdzHj8As9MTtBx4gR9+7xmqc6xYbE6sJok1
      XwD1M6/qTWYnGRK411YoFHS6Z70U5udys6eTBY+PSHCFMffdrdX3DoyVCtM7HSFHWGNm1YiY
      HGctbiJXTtE3PE9ZdQnWjEJ2P/kCzz/+ILVFmYABgySw2HeGsWQRdWVZoJswyCqRaIRQIIAm
      iFgyS3ns+Zc4/PBuyvNsn1avYMRgNGCURQwGI+JnVl4SRBFJkpAkAwgCFlEiFI2yFgh+0i0b
      ZZmM4la+9+MfsH9TPTZRYPOjT9GQEeDqtfHb408ZSVQIR6OEQnGM5s93hsnVKc5cd1PfXIPF
      KGIyW4gGAkTW3AyOLPHZ0biUWU9uspPL87m0VDnJzavi2R/+DY/uqiPX8cVgLZIkISY9tJ/t
      JqehmSyjjC44KXRpXL44TVNrFc6MDHYcepEXn36E+qKsO86gEQiESMWjRGUZp9FG0/5v86Pn
      D1JdXYQZAUmSPuMWTRIMRolGI2iyEbvJRvODz/Cj5w9SVVWISRCQJAO6aGP/occxrY7QP7mC
      QYdQLEoopGA2i2BYtxRIgvA5j1kiECCWDBBPmrA6M6naeoDvf/cwexpKEJBuW2A+7zcyZdWS
      Fexi2lRFmVMkkYgQiycJxWIYDet1YTTIhKIRliZuMTE/w6XLfRRW1ZFl1D+XviCbKc80MT2+
      RPW2PAZvrlFUmI/Jls++p7/LC4f2UVN8Zxnerot7BcZKRPz4U1YefGg/tTXVuEwKQZzUu0Q8
      Yhk7m4ooyHVy88pFxqNOtjaVkwhHcdVW4bLJDHX3IRdU4rK72NLqouv8BWb9CVz1m9lbm03H
      hTYWxUJ2NpUiSwIocbwhjar6EpJrAXLKatEjHnJyXWDNJlvWyCmtwaqFMOWWUOlMcr17BFNm
      MdWbanEml/BZG9niWOPE2RvYq7bQXFfAWNsxRnxG9j3yIIUOIwISuVkmutrOknBtZd/mCmKx
      GKWlZZhkCVGWiC9NMRoyUJnjoHzHQ4gTbVwaWKFx1z6yNR8rikSm0UJRTSVOKYGlqJH6ykry
      jF7On2pDKGihsSofWRQQBQOB2WGUnBLMRjv1NeVo0QX6x6JUVGeT7SqnJFNmzehib0MZua5s
      RjrOMBYwsWlTPVo8SF5RBQ6LTMg7ys1BNxOzHuofPMC+TZXM9V6iYyzCtgdaMcaCyPk1FGeu
      ry6+5h7i1rib8fkIDzz8CFsaS3F3tdExHmPH7lbkWABjfjXFWdB14QwBazn7dm2hpsjGjYuX
      iOS18mBLMZG4Sn1lCUF/ksK6cqxAYmWMS/1uVmanqN37bbZuqiY20UnHsIeals3YtQhGVxnF
      mbeHHyYDi1NTZBVWkPLM4azZQq1Lp/fcZdweD2JhC7ubS0nENFq2tTLTeZqpuJPW5iYMoSnG
      l1KUFBaTX5yFIDmpKM4FQcRqjLEQzGDLnhoScwHqt7ZSXWSnr/0Co2Enu1qLmGzvR6x0MHb+
      JubKQsz8SeMCqQy3H6P91jyKIZfHn32ayuy7hbJKcy8WR05zrNvKf/zePu4nMPVkx/u0+yv5
      0ZObv/a8BG+e5JVBJ//pr/bcNTDZlxEYv8LrVz0cfuZJipxeXvvHj9jx139HbfbXnsWvJB0Y
      K82GJj0RlmZDc9fXoAZDemn2NBuDtB06zYYmPQRKs6FJCyDNhua+BTDbf4JXj/Xc6yP7b4zw
      TDfn++f5yphNiSBXj5xj8Q84v67EuH7iNX7z5im89wycFWWw7Thjq2tcOX6Z+1nIMhFe5tzF
      DmLJ3/9jI11VuHj6o68l+NXXjhrg2K//hVdO9/1eh63ePMvx3mEuvXOc2durdOqBaU6d7WWs
      +wRHr818dV1/Tdx1IuyLxOg+c5bp5STlm5theZhhD2QZ43TfmiTTmKKz/RIjywlc2VZGhvoZ
      GZtAFzV6Ll9iYMyNObsEKTxD2/nLzC4FUc12TNEF2touMxWAUlf2+mqLkRU6ekeYG+tleiWB
      d6aPCa9ArlMmLsiEJnsYHJ5kdM5Hdm42w/3XMTuymB8aZjU2y3u/O4a1cRvWlSHOXekhbsrB
      ZVfoPHuavrEF7AUlOIzrug97prjc1s5cxIAlMsWv329j82PP0lJoBzXOeN9VLv5C+7QAACAA
      SURBVF3tYVWxUZxvYqj9HNcG3RjkCEdf/xC1qBGXBeJrM4QtxViT8wyOrEHUTVtbJ36c5Oc4
      kARYGDjDb9+7TlFVAfMjg0wshNGCbtqvdDLv03EIHm55JfLtKoMDN5Flne72i4wsRsjOy2Xg
      +kWyy1rIdZgIeae4NTBCd+8gSUsOueY4XZfbuDG8RG6JC9/wNbpuuokbM8hzmFlzj3BrdIQb
      PaPImflkSBGut7fRNbxMfqmL1Vvr+wcSEYavXWFsOUZOfj6qf4bLbVdwBwVyLDqDA10M9/Uz
      GzNT5spEIMVs1yneaVvl0cMPE528xpXuEUSnC9Vzixs9A3i1LAqzLQhqhIHOS1y9MUBEzsG0
      1kdvxIE6Ok7Wlm3kmhJMtX3IrzuWKTF56J5YI7S6jJyRj0OM0NPRRu+Uj5y8bPzT/Vy83MOa
      bqc4y8Bo12Wu9Ixhyi0i0yKDEmLo+himYjvu7kHIzmVuqBuchVjlz0+c3IcAdJIL3VxZq+Bw
      U5T2WQcVmX6udMyQZfHTMx4jMHyW6UQGsakultQMJi8dR2p6kGq7QgwzsaluhhMZrNw4Qap4
      B+Ge03gcBUxePkrYlM1Kdzuxoi2UZxnBN8Erb52hbFsTXUdO4mjYzGj7aSxilBsrsNZ9jnjR
      dhKjFwjYSui/dJTi6kaGz13CUFPK4q1FaluzOX3qBvkFVnou9WA3hznV46fCHmYykkFNaSYi
      Kc6/9ypK0VaC/RcIOIsJh4I8sHMX2XYjWiqKNxDFpHhovzxPUdYip28JbC1MMOjV0FeWKNm5
      idFTN8jKj3N93kF+sJOe5QSD7TcwFhUwfO0S9tIm8h1GUok1bk6HaCoW+fD8JI8e2IoSSyKb
      FXovdZBbVUp3+yTFRVHaO73E5i4zEs5EW+xjKpGJEJjBVdVKrsOEZ+oqb52cZd+WbM6eH0AL
      jdE7r5EZH+PqvIQw1caI2MTupkIsssRc3yk+7Euxp1LnxI1ZzJ5+upYhMzrC1UUZfeIC44Zm
      XJEeupdN2GILhG0FjF94D6WwkdDAJRZ1E5dPX6B1ewMdp3up3LcZOwKy7ufWuMa2TTpHTs7Q
      WJ9F25VBTGu3uOzP4cDWGqwmA1oizGoohTk5z8XrAcoLo8yqOZiXlsnfto1ck4AcnuXagoUW
      V5jxcA4NDi9dM2D23qDXn0WJMk7HVAz30A0smVmMjy1hk2Y5c32JAmuQ9p41GjdXYxaSDJ39
      AJ81m+HBQWSrTG/bBJXbm7AbPi+A+zDDpRjp7mHiZgdHO28xfPUKKWsFFsMaE+NTFFbV4lme
      Q9Mgt7KRoiwzaE5Kq1wQmqenfxR/XCGVWmNtVaeqrpnKiiIkJcWKdwVdFShubiXX9GnGjLKL
      qpY6KlwWSiq2kG2Lo9xejVEymSkuq6QsP5NESl33BN1Gls0YTRaEZIBgIomumqnf2khOaQs7
      SwRG53xYjB/7WKKEQjpVtU1UFNrwBwXsdjtOy7rDUEuEGBnsx+0NocSTrK7Mk13VRMu+p3nx
      QCNOkwmLxYKAQG7LHswzl7g+GKGl3MpcRAVNpbpxCxnm9esyWmxYrFbMBhFLjovibDPzw4OM
      uFdJqXHIbKbENsvg1V6yNzUQWvKgC5BZUktFvuOOSjFQWltPXUMNmaEgE4teVEFDyqmhtcSJ
      Lgq4SsvJshpv72+huqGO5roqCPmZXlxFEzSk3Fpai+3oooirrJzGLXuoNAVwryaRRfAlEtTW
      1lNdILLsSaBmuGiuKSNXEG77qUSsdhtWsw1T2EvKVUd9fSNCapVkQiSvqIgcpxkB0KI+BvsH
      mPNH0BLJu3zXIWGzWzEZrcgmE/kllZRXFyPHE/jWIhRW19BYU4I3FGfvA1tYm3eTUHTWPEsk
      kjqq2cWWhgJEDRAdVNdm0tcxhrOyhGDfFWJlDeSYvjhtfk8BpEKrDIZy+Lv/8iN+8OP/xp6y
      CDPeBA2Z0DOt0FCbT2VFHRgkEr5lop+JIhVZniYoZmCzGBCSdopKTXRfPsfAiBvNaKKisATd
      ZCC4uEBS/P3nHkRJpMAqcaOri9F5D7pkwGJIECMLl9mIYBVZca8Q9kwyp2RRU2RhZTl0u/Ad
      5Oeb6LlyjgF3jJKSz0eRVGN+plZiZGc7MYhJMosb8Q21c+b9V3jtzARIGmtrvvVzyUUUW2YZ
      FitprCqlIceAYLCyuuxG0dadfKJoQoj78H3salWizM94sGdnIYkiKQUqSh10DmjsaimmoqYM
      EVBCqwRjd35xk2DqZj9XLl0jUFjM1upiRNWAKeFlPqohcSdhxgZ6OXe5B0tRCU3VRQiKjDHu
      YT6mf7K/1z1CxFZMgTWFL5SgONPJ9Y42etxQWfJFK/Hn6qKwCvtiN22X2pHsZVjMnw9po0Q8
      zPo1sjLsQALlbh8Rmcwo4VWid3z4U1CSy0xPJ21d45QVZDM8tUBxRSmaP0BGSRVmWccqRnGv
      xPm4GeVU17Ew4aYip4j5uVlqWsoRw8tMe6LE/YvM+9afp+45D6Akwix5wxQUujAIEPIuEjVk
      kCWGmPaLVJfno4S9TEzMkDLlUleRj8c9T0ZlJba4l/6ROew52ViMGWSYwtwanmHoxnXKD32P
      vUUiY5PzCM4CGquK1gNLxQOMuQOU1BXim5rBUVRDcHEUi8VKQLciR71YXFUIwXlStjxMkSWm
      l0IYZRvFtcVEZqeIO0rITK0wsRggr6yO8nwTU4MDrKVkKuqbyLEZEIB4cIXxCTdiRjFVxVks
      LS1TWFSCSZbQlRgz4+P4MZMhGcirKMU3OcRyWKCqqRFlaYKg0YkcVcirLCW1NoNfy6a8wEFw
      eZpxtxdnUTUVRdkYhPUPP6bHRjHm5BOPQ215HsvTY8wFRXIyRBx5ldg1HzOrCrUVhShRH+Nj
      kySN2VRXlRJYduPMK8NhMTA3dIS3zkV5aE8d+ZW1FDt0JsfG8SVNNDRXk1yaJpFR+UnIw7G2
      1zkxaWXPpkpKa2vJM6eYGB3Hr1hobK4mvjhFMqOSPFOUieFR4nIW1TWVGBOrjE3MIjgLqSqw
      M7O4Rl1FPnNTXnJry7ACpAJMuWMUV+Xjmxlmbi1FUWUd1vgKPkMW5XlOBNZdxePD48TMDpyC
      TEaGQAA7ciCAs7wChwy6EmTw5jw5GTIJcz4FtgQev0hRnomZiXECqo3a2nL0wAJjbi/W/HIa
      SpzMT46xGNQor6sn37EetVBVwoyPLVFaUYR3boGMikocCS8zMTuFcpBVLZPibMufciJMZbTj
      JFduLZJTvZNH9mzCbrwPJ1eaL+BfHKR32si3dtfdNZbpnayMdzEayWP/5rJvPnN/YaRngtNs
      aNITYWk2NHd98kwkEqQ7hjQbgbv2AOnGn2ajkB4CpdnQ3IcAdHR1Pb7Kx3F2NDVJJBy7Hb/l
      j0fXUgT9fiLx9fe/SjJOIqUQi4RJKt9koF6NeCRC6s4kNIVYLEEqESX6VdGZPnuImiIaS6Am
      Y4RjXx72SUkmiKfuI5LWN4SmJIjGkvfn6dJU4tH4p54cJUH4fo/9+JBknHjy89erKgkisdsx
      jpJRfD4fvsDnYzbdDTUVJxq/V9xajXgshnqfzea+Vomcvn6S194+wqmT7/LaOxeYW+jllZeP
      3edqi/cmMXedn/z8bQZm1wAYan+bC4OTHP3Nzxlc/CY/zwxx6ZVXuRm84+eVfl556zILi2OM
      L91fnLnQ/ACvHGlnZfA0vzze9aX7TV0+wcm+6T88y38kycACw+PL3JcEQ7O8+8oRPokHOH+V
      n3/Ud891tz7L5NVjnO52f/K3norQeeQ3/PPblwCY6XyXn/z2fc5fvo439NWR72KrboZnv3rl
      SPDw0W/fYj50f/m7j1UiUyzN+Shs3sGuqlwEDMj6BLGVcd58+aeYKrbx0t5i2s+dY9jtpXDX
      k2xK9nJhEqo3tWCc7+HmUoKS1j08trMBoySQDM5z7sRppnzQumcviaEO1kQXJXlZEJyj88Yg
      0cpcciJ+Ok+8Sads59vPPEFktI0r/XMYXU1856m92GWR6GwPr14cITO1BiV7eOrBGq4ffZuR
      VZXKbQeoTN2kfdxPMpaiad8BrO6rRKoOUBftpFuoQQb0VICO46cYmFzAUrGLTdxkYFKhqWiN
      YF4+Wf5uTnUMY8qr55GHSzj/67MkHQbE/CZeenIPFoPAzNANRgd9TGY34p/p5rf/eg3n1uc4
      2ATH3z/FUkih8aEHWeq4wYDLwrM7atA1lcWRa5zpGCBhLOCZRzdx6tQlJDFGWKzgxef3M3Ds
      dW4F7BjNCo89+jju6ycZmPGTUb+fZ5plPjpxGQVIFO7kBzusHD3Shl81sevxZ3EuXeJ45xx2
      VwVPPvUYeVaJVHSN2YUUKwNHWFScxBUDTzz7LJU5ZnQ1wVj3Rdq7xggaynl6h8Dg2CAlk49S
      VPVxWBGVleErnL00iOgo5sBTBxFmOzjXMUJQyOTppx5i8vIxRj0aJVu3EbvaybDTwmO7q7AA
      vtkJwrLt45BWzM+tUrf5ILvqCshzrv8aD7k5+s4pEghELDm4ksvMyfV8Z6uB2fk1FnvP4k8k
      8ASsfO+HD9P54SVaX3gJT/urRGUL1wcmyX9whqUrV+mbDZPXsIun9rVglP4AKwSShW2PPUpW
      ZJpLp45y/sYI0ZSObivi8SceYnVuHE2yUl3fQnmOxMjkHImwH7FoM/vyV/mofQJNi9F2+hye
      yHr3tTDag9fWwo+fbqL/6jjVLfVUNG+nJNMIzhJaagqpqq7CaLTS8q3D1MhexmfHOXeqjaim
      Mt5+lN7l1G19xgjFTTz60l9jmG1n4uYN+oLlPP/cQab72vGseFFyW3jhkXp6eoeIBf2E4wqp
      WJBg9PZ9UDBSXNdIY2kGi8OLlDRXUVRYjdOSIhjz0nNllB3P/phKfYbucTerEZFvHXqcuGd8
      PfygIFBc1UhhTQtVWWDLruY7z+7G3TtMRHbQuLmVAmOCKXeK+pYaWhor1/OeDNN+9jSemEZw
      rI3T3fMElsJs/87zuCKjTA310uMr4oXvPoLu96FioKxmE9UFVsYnZxi9cR1D7YMc3FpEJOLj
      1sVT3PSm0EMznD7byfTUFCl7EUW5FrTbQ0ktGSUQjOALRKjY+ThNjiDTK/7b5SCRXVxNc20J
      kbEJ5JIqCgtrqan6TEyd1BoXj5/Hq0h4x67T3juNNbeUTZvqSS3PMu/14J73kFNchl22Utvc
      QENzzScRI7KrWtlUmc+6KVOnsH4X2eoS7aeO0T8XAEBXU8ytxNj98MPoC7PUH3gM2+Isi4kI
      gVCE4LyXioefYrtjgeHFFIE1PwkVosE1bNUN1BQV4BI9nLxwE0WL03H8DAuJu/cu914lUkmx
      4g1Tv+tRdstJ3n7ttyz7m7DarFiMFmSjgdXpbo52rLCrIo/RtXWVWaxWRE0jr3YXz76wA5/H
      R45lPTlN05EkA6KkIejalwa8lWQjNosFwWIhqWuYc6t4+DvPw+oKGbmfZl2UzZhkA5IkgKau
      r2MlSgiCDoiYzCYkKYEoCZjMMmoyQTQSR7ttb0msjPD+xT72by/APHXnkEtD10UkScQgSeia
      hslsxmy0rK9fdpdhq+zIwG61YCKA79YFjg+Y2VGQQ/DOt2u6jmrJ48Cjz1GgekkicGTIitVh
      wWoW0VQVJAOSaMAgQcQ/xqXjA7RsKcAeTK2Xo0G6HQQLVMXA5oef5uFSlaWoCYdWSl7Yx8Xz
      V8ko34zL+anfSTIYsJrXy/bjQZ4a9XHiyHFKWlrJtC/dfYVFXUMw5PDwsy9SklgiaS/ixsmf
      EHI9SF6OGdHs5FtPHGZhoocz18I8U/oV43oNrFllPLC5kOGjv2Fmxc/225H5jDY7TosZoyOX
      DLsR02ejo2HB7rCQshgIy0Ysok4qGSES1fgkvJqmkV2+hWdffBD/io98492b+n08BGuE5m/y
      9qsv88tfv4ZcvIOCbBuy0YAgChhlA2aLAzG6xMRyFGNSIWlYX4hNKmih1jDOu6+/w4A7gH57
      3r6wugl56Sq/eOcqZdubyRQNyIZPs5Kd4cA9NYUiykgCSAYZszWfpgoLJ959k7O9M3x2YcPo
      wghvvfpL/M6tlDduo0ob5PXXPyS7YisOo8Zs/3leO95DXX0DJRUljF85xpVRz3qjNsoYrXZs
      SoCB6TVsxgQJcy74Zljzp5DFbJq2uGh74xf0BR00VRQiyzKiKCAbDJ9YESx2J6bAFJN+af1a
      BBFZNmByZpFaHGcmpGHSE1iybMyOTqEBosnGjqZSOo69w7vnelEFEaPRgAhIsoyluJUaYZjf
      vX6C1aSAQXZg1jyMu9dQBInK1hbWek5zpP0WCdVEwwM7WOp4n9ffO4U3KRL1jtN+uR9DRjG5
      meshIQVRQpYlDLKMJK6XrXQ7uJBokMmyCoyOTiObVaK6nQzZx8TE2roWBAmjNY/tO0u4+var
      HLnQRxwRp8OKe2SQFFbUZIzJ/k4GpoKUV5TgyMlgeXSS6GdalCAakGUJ0FmdvM4rv/g5PaEs
      ttUUfrwDsiwjCAKybFj/1ygjihIGg2H9/4KAZDAiGbOoLBU58db7zEU0JCETKwGWtCyqncu8
      /+Y7dE95ia3OcH1ogoRngo6hT59J/uLjAoUnr/Dzc2v85//8bex32T566ndckbfwo0ea/vLe
      +SYCdHf14vEtMR/M4rnnHiPL/OlVBFcmGRiaYN49hbnpIM/srPwzZvYvk794AajxEJ6gQl5+
      1l1swBAPeAkJNnKdX7YK779jlDgLC0vEFZ3M/GKybMbPmd8SER/LKz5UyYKrMB+rfLcSSPNV
      /MULIE2aP4a7PhmI4l/cYCFNmj+ItB06zYYmfatPs6G5fy+Q38famu8TL1A4HP16vUA+P+Hb
      XqBUMkY8mSIaDn3zXqBwmC+E6tEUotHbXqDE/XuBIre9QKHol5sF7uaN+VOiKQki0d/HCxT7
      nBcodL/HfnzI565XR0vF8fvW1teFA5RkFN/aGoFQBPUeDUpNxoncjxcoGuV+m819RYWY6jzK
      r1//gOPH3uQ3b5zFPd/FL3/2EcGvyQsUn73KP/7kNfrdqwAMXniDcwMTfPirf6V/4Zt8IA9y
      4Ve/YShwx8/LvfzqtTbmF0YYWbw/U0loto9fvXeR5b7j/NtH1790v4m2oxztmfwj8vzHkQjM
      c2ts8f68QEE3b/7yA5Y+/nuunZ+83/N7eYHGL3/E8RvT639oCYYuHOPtD9/l5V/8jpmwws2z
      r/LrNz/gp//2C26tfHXgr6h3mlsz91oZcoV3X36N+Tv9XV/CfXiBFBbca5S0PsDu6rzbXqBx
      Ystj/O7n/xNz5U5+sL+EttOnuTnjoXj3t9mc7ObMONRsbsU018XQYpzSLQ9yaHcjJkkgEZjj
      9JETTPp0tu5/kPhAO6tiASV52RCc5cq1fiLVeeSF/XQc+R1XjHaefe5pIsMXaO91Ixe28OLh
      B3HIIlF3Fy+fu0lWcg29dD/PPFLH1Q9eZ9irUL3jENVKPxdG/SSjCpseegzrdAfhmsdoiFzh
      uliPEdBTftqPnKBvfA5r1R5a9QH6JhRaSlYJ5rnI9t/gePtNTPmNHHy0jNM/P0kyw4CU38IP
      D+/HYhCYGuhkuH+N8Zxm/NM3+NU/dZCx7bs80SJw5O1jLIYUmh95mMX2TvoKLLzwQB26prBw
      6yon2/uIGwt5/vHNHD9+AUmIERIr+f5ffYuej17lpt+O0aLwxKGnmLl6jN5pH5mND/HcJhPv
      H2lDAeLFD/DjXTY++OAcfsXEnqdfxLFwniMds9gLqjj8zOPkWyWUsJeZuRTLfe8zn8okrhr4
      9gsvUHXbCzRy/RwXr48QkCt4dpdI30g/peOPU1zzqRdo+WY7Jy/0ITpLOXT4CQR3O6fbbxEQ
      s3jm8CNMtH3I8IpO6fYdxK5c5qbTwuN7a7AKMhU7D+CKzHHy7fOEUwGmJ+HQD/+/9t67uY4r
      zdN8MvN67x1w4b0jaEUvkTKUSr58VXdUG/VE7PbsxnyF/QQ9G7s73T3d1TPV5aWSpySSovcg
      CUMQILz3uN57s38ApChXYmtUraoWnghE4N578uTJk/mePCffX77vT1g9+fes+mN0uDRkYvO8
      8+oHG1ogjR1nbpVFeSvf3SljfinISv8pwpksvqiGP/+LJ7j25gW6f/Bn+C/+jKRCw43BKVyP
      zbFy5SoD8wkcbXt54XDXl9cC7X76GObELBdOvMvpm6Mk8yXKWg/PfusIgcUJypKGxtYuaq0i
      o1NLZONhpModHHYFeOvSJIVyinMnP8SX2Bg7lsf68Ou6eOWFTgauTtDY1UpdxyNUmRVg8LKt
      0UNDQz0KhYbOoy/RKPczOT/J6RPnSJaKTF58h4G1B7VAKo79+V8iX7jI1PANBqLVfP97TzMz
      cIH19QAF+zZ+8EQLvf1DpKLhTS1QlFhqUx8iKPA2t9NWZWJlZJmqrgYq3A0Y1XmiKT+9l8d5
      5DuvUF+epXdijkBS5Ogzz5L2TZLObmiBKhva8TRuo8ECWmsj3/32ARb6R0nJ9bTv2I5bkWVm
      LkfLtia6Ouo32p5NcPHDk/jSJaITFzjZu0RkJc7u734fd2qcqeF++sIV/PDHT0A4RAE51c3b
      aHBrmJieY+zmdeQtj/L0zgoS8TDD5z5g2JenFJvjxKmrzM5Mk9dVUmFXUyxsTGSK+RTRWIJw
      JEnd3mfp0EeZXgtv9oOE1dtAZ5OX5PgkCm89FZ5Gmhoe1AIFOffeafwFGf7xHi72z6K1V9O1
      rZXc6gJL/nXml3zYKqvRKzQ0d7TT1tm4EUFCkNCbTOSjUUS9klg4TD6/kfNNBqRzm+e0lGPR
      l+bAE49TWp6n9clj6FYWWMkmiMaTRJf81D7xArsNK4ys5IkEw+RKkIyF0DW201jhwSX6+ODM
      EIVSiivvnWL5c6ZOD6EFyrHuT9C67ykOyLP89uc/Y726A41Oi1qpRi6XEZjt5Z0r6+ytc6II
      bkhI1Fo1UqmEo2kf3/3BHkK+MHbNhtqvXC4hk8mQZMXfrwVSKNBpNAiaTS2QvYHHv/N9CK1j
      sj+oBVKjkMuQyTa1QDIFoiTb1AIJqO5pgUQRlVpOKJslmcxQ2hSOZNfHeONcP4d3u1DNfJ4W
      SEImSZQ2tUBqpRqlUv6Z82G53oheq0FJlODIWd4bVLPHY+Oz7spFtYMnn/oe7qKfHPD2kAat
      QY1GJVAqlUCUId7XAo1z4fhttu1wo48VKJdAlCQkmYS4qQXa8fiLHK0usJpUYSjXYI8HOX/6
      Gqaa7bgNivv7FWUyNGoVokbDvUleMRXi/bffo6qrG7Nu9fO1QJKNx7/zA6qyq+R0Fdx4//8l
      5n4Up02FpDJx5NmXWZ7s49T1ON+ufqCSYo7lZT+Wpr0c9E3w4XSCWmuZdDpHXpCw6D/y5Svv
      aYEMdkx65ae0QPpNLVBMrkAjQS6bIJEq3lcDlEslrLU7+fYPHyO6HsKp/Hicovv98JnffvyI
      iS8N8duf/TP//V9+gdy7B7dFi1whRxDFDS2QxoCYWmFqLbmpBVIgk0Qkdxctsgle+8VrDM6H
      KW/6Yt0NnchXrvEPr16jZncXZukTWiCTgYWZGYqC4r4WSK1z0lmr4f3Xfs2HvbMfa2FyeZTf
      /us/ETLspKZ9Fw2lO/zyl29irduFQVFm7vYZfvFeH81tbXjrvExefpcrY34kUUTa1AJpClFu
      zwbRKbJkVXaIzBGM5JFLVjp3uDj/q39kIGags86zcez3dCr3TonOiCo6zXREQiGXABG5QkJl
      tJBbmWA2VkRZyqKx6Jgfm9nUAml4pLOay8df5bXT/RRFCYVCjoiAJFegrthGkzjCz3/5HoEc
      yGR6VCUfE3NBCoJEXXcXwb6TvHNxmExRSduBR1i9+jq/+t1J/DmRlG+ci5cGkZkqcZg39JiC
      ICGXy5DJFUiigCSTfUwLZNEIjI7PIFcVSZb1GBURJqce0AJpHezeV8W13/4rb58dII2A0aBh
      bnSIHBqKuRTTt68xOBOltrYKg9XI2tjUphaoTHJlmJ//8z/y3qSCIztbaWlzcu4X/427YTPV
      bv1mG8XNPt7QU4mCgFyxORB8QgskU1qoqxJ4/zdvsJQoIQomtERYK5lpMK7x+q9f5daMn5R/
      jhtDU2T9U1wZnr9/7fzJ+wES01f4+9NB/vf/7UU+GUAQYOzEv3JFvpO/fqLjT++ZbzZC781+
      fOFVFqMWvv/dY5jVD2iB1qcZHJpkcW4GdefTvPxI3dfY2D9N/uQNoJiJ44sWcDg/WwuUjviJ
      C1rsRs2fpBZoeXmFdAHMjgosOuXHtUCJEGu+EEVJg8vj3NICfQn+5A1giy3+V/jMRXCx+O+R
      mmCLLb5+PtMA8vnf/3LyFlv8R+FPbl24xRZfJVsGsMU3mi9OkJGOMHR3jFyhTCE4xbnrg8Rz
      JSKLI4yvPOjaKRNeGmV0ZoXbvQPE8h9fR2RjK4zM+u5/zkWXGBpZ5uEmW2WiSzMEsp9er+ci
      S9wanOKen68UnqN3/ONxbzLrE9waXXk4/cuXJs/6zDAPKR16gCyLkyMEU5/9aykTY/DaOXru
      LPD7ZGDRtTlm16JfKolhPjDDwJQf38oUi76NV+TL5TKz02NEEpt7LaaZ6B0i/ImIU+WMj5nl
      +NeWPPF/lS/0BAvFPMNDw7hra4j0X+PmvBJvbRXh/iEK7TbC6zHCyTxas43E3B2GEzWEJ29j
      aqglWwCrzYRYKrI4eJGTSw6c2g4y+RKSVEKtVhD3r5DNQwE5DoeVXHSdYCyHzmrHqtcgCJAP
      z9MzFWK32kispEeei5CVW1EVQviXZrh0bR2jWcKod2KXKdGq5BRSYZbXIygMNpSrI5y/rcOs
      yWOxujHrFAhsRCXz+3ykChJWhwNSMZL5HGq9hXLCTzQrYHO60ak2HF7JiJ9YKksmL+JwO1CR
      YW01QFFhwGVKc/n4cSxP1+Bs1iEWUqyvx8iXs8i1NmwGJfHQOqF4DrXRYe4yFAAAIABJREFU
      hkVVIBxLUyys8+Hb5+n6QS2WKjWUSyTCPoKxHEabk+z8AB/eGue7P9qLDCgXM6yvrpPKlTA7
      KzFp5QjFDHcun2DGfAiDGCOdFdBbrGQifpLZEmanCykZI1HMkc9LODwuSnEf/kgKjcmBSaZC
      K+XpPf8uqZqXqLDrIBPh5PE32Pmtv6HOlCebLVJWaSCbZD2ZopBMIzc7sOv0BMYvIdcdxWuU
      UyykCQcjZDI5JJ0Fl0VDIuQnEMtidLjQluIE4jlkKgNOi45CLkE4GCedy6M22bDpFUQD64RT
      JaxON8pCBH88h1ypRZaNEMtLWB1OtLICgXUfWVGD024iFQ2TyWbIlJRUVjiQiw/30PsLDUCm
      0VGtKLMS9jEXMHOwUcb62jrhooxObYHpiXFWVxeZKlfxQsW9rcpM9p4np27hmM2EWC4Qi0ZJ
      xODO6VfpyzVyuKXIyLwSTegmMdt2VNEVqg48RqjnA7I6N7Gyjh+//BRahcTK9BxKSxWBobOM
      abtxR3oI6I7g8Z9gQd1AJrzI2ECG+ZCdH+2Xc3pYzQ5pgpm8nnw8z+5GBdG1GYZuzBGSd/Hj
      F/agliAVWWNibJLluXE0rU+gnTzNtLaVw41qrt9ZwWESyCkaeOaJHahlMHbhdc4FTDgLPuy7
      X6Aq0sstvwRRHy2HDxGOJVDEk5TQISam+J//dIbG3fX4Azmef/YI/okxltbWGEla+EFbjlev
      hjiw00IwmiCRSgNqCuk1Trx+HNFiJiJY2WsLkc6XUKg1iEAu5mNsfIrU6girjmP85Kkm5MUM
      4VCEiJTk/O9+Q8xxgMO72lidnSKwMEq0ej9VExcYN7eg9o1Tfey75K9+QMjsJBkqc6RTzblZ
      NepwjIItSakMYiZGKBwlEPAxePx1HO178A8H6HqugUsf9NLe6GIpqOWlHz2HxShjfm4d77ZK
      0tF5fvM/3qGypZ7l1RIvfqebG+f70OpkBHuddDvneXdI5IknH8dp0REPDPPzn96kvt3JYlzL
      dx+v4NKVSQzqAhFlGzu1t3l9SMmjuysZuzGG3qlAMG5nh2WV82MRtKU4no7DhPqPEzJVk52b
      Z99P/gvbnQ+XcuuL1wCiipYGDUP9U2TMNrq8VhaWlpCUeowaBaVchng8TiD8wL0/ucjt8SQt
      7XUbFiYpcTntmF1VmNTg7dhFq3tDYKXQGNh58Cn2b3fjW4zjsOoIRVNUVnk3UiYBoVgMnUaP
      t9bL6sQkUV0t6rUbDPodtNWq0NgbeOz5x7DFwyTzQDrA1KKao995mZ/8+bep0AnYarbx2LG9
      yAOBj/T/pRKZTIp4PEQ4kQVkNGzbhSY6wcTCCksrQSKpCLl707migqqu3RzcVkEqFGJ0McOB
      Y0/zdKeOofUsLrMZp9t5f1QxO1t47Klj1KjSrMaTFHMZEvEY/s2+MlQ2s//AbirNJpxWCwKQ
      C86T0LRx7KlHkYWWERzVuKsbqNDfG1qgkIkTT6SIReIbWn2FiUqPHY/LDioDHTv24jFAIZ0k
      nkwQiiaBHE27nuFgl5NAqITDrSewFsJdX4taBqiteF1mXE47MhEEQwWVbiuVVh15jY1Hdm6/
      n2TOUN3BsWefoUqYZzUCOq2GaCx8//QbPA0cfeZJWmURbo9MMj4xy8JSgEx6nWgSTHXd7G50
      3r8E7TXtPHXsCM5IkKH5USYn5llYi5CNrJPIg7m+mz2dLVg1WaIZJV6vlcWlJZr3HOWx7V6m
      5xYgp6H90GH21csJxh9+QvYQi2ABc3UNK3cG0Vns6BxO0gt3KeprKUbn6Z2O0tFai0Z8QNSm
      8bKny8Tw4OT9l2YEQaRcKlIqb/x/j2w2i9/vI+CLIteBqK/j0O5GRm4P3H8ZRaVQkM3lULu9
      qBeXSMnN6IUV/EY3DnGjPlEUPvL0KtToFHHWV/zcuniGxUgBQRAQRAHhgb5ZmxxkKWempcqO
      sNlQQRDQGy24Gx/hxReOUm02IJfd87AKiIKAIAggyTDKsqyuB1hcjWIzGzeCUxWL3HMtJuJr
      BP1hQuk8UtpP75iP5uYGdJt9JQjiRl0CFEsb24kaHcX4Gv5AgBQytJ94Pzs8O8B4Qk9Howuh
      VLovWBPu1QGIAgRmbjOV0tFe50Iqf2J/pMgL1Tzx+B6Whq6yHit8VEexuBEeXwCRMoVSCQTh
      YxdKfG2FQNhPKK1Fq4FcNodCobr/eyQYIOwPsJ6VcFr1mL1tfOd7z1DnqECn3tiRcN+lXSTo
      9xEOBgnJZDg1JhzNO/jeC0dwO5yo5YAoUs5EMTYeYGeditsDIyjlCnz+AH5fAI3WsHFuRPGB
      eh+Oz8wTXPhECj9BpUdZzlHb2onJqEdXzuFo7MJl0pAPz+MrmKh2eXB6TKh0dsx6Fe3d3WT9
      QcxeDwoBVEoFEd86WosHq6calw4KkpLUyhhroRQlQzWH9najSC/Sd3eZ1t0HqfeYEQUBjZhi
      ZCVLU10tcjGCyd2Cw6jB4qzGY1aSF7XUeG0U0wLOSjuoPOzbaWfgwlVEdyftNUbKKhvVLh2l
      ghKP14FcBIVaTmBmHNHRgt1pwWXUYHBX4a1tQr42QO94kLY9e3Ea5AhsvN2ktrlxaGVIhgp2
      batitOcaIX0n39rXglrMEsyIVLrNSNl1rl8dJZqOUtV5mG0NFRBfYjWtoc5TidNrRaGyUOVy
      QSZKQq6n0qpHprJilvm4NbRE96GjVJnVFCU1VW47ACq1hsDcJGlLDXV6E64qG3IBVPISi4E8
      1U4jjoo6XFYDgcUpSkYvbrMNu1WLpbIBsyyLzFBNpS7I9RujVG0/Qke1kbLSTJNbw1qkTG2l
      A0kUUOTCBMt2XGY1Xm8VlECnLzM0vUBxPYxzz+N0VeqYG7+Dua4bu15OLh3gzuBdIsEEth0H
      ONjZgqm4zsWeKap27KZKLyLoXFTbN3SbmfgiwwMz+OMZmvcfZldrE7LoNFeH1mnbsxunsoSg
      c1PjcRGbu8XImsCegwdob6kmPN7LUtnLkf3tyMolrF4vOkqo7NXYtA/3gPNrDouS5MLrr2N8
      5Hts9/6eNJzFDGO9fei7DlCh/vxif1TEx/nFm9M8/cNvYVd+3Y356ojOD/J6f4BXXn5844vU
      EleGUuze1YRSglRkhrdPDPPcy89iUH2xNinmG+CDcxFe+M4RNJ+tWP6DshUXaItvNFuOsC2+
      0XzmHWBLDLfFN4UtOfQW32i2pkBbfKPZMoAtvtF8sb+4kODi67+gZzmHViXiaDjA0T1mRu8k
      2H2wk4d40kV4pocLkxqePdaF4pM/5uJcOX4B97PHqFcpgAzDly+g6XiaBzPzbLHFH4IvNoBy
      iUQkw55vv8JhT4T/8Q+niHU9hVwuI7E+zsnz15F7d9HpiONXtdOs93N3tky9I8PFS73o6vfR
      rk8SjQskgrNcP3OZrLmZo4d3YVJJxINTnD93hlqLi2lClDICBqWEPjbD+7fmKUaXMDU/zs6a
      MhfeP01CW8VjRw/j1MkoFbL09XxIcD1DwlTPc4fb8Y/2cK5viYZ9R9lpinJqYAZJ6eKZx7ZT
      zofpu3KdtWASmbeTp3bXszp8jfO3l2na/wTbDSFODswgUzlw52cZ9pXZcfhpWp0CA5fPMB5R
      c/DRg6TneplbDeDLGPnW80ewq7+GB9hbfCU85BQoxflX/4V/+KfXELytyAvrjI1Mc+30SXRd
      T2LMzBLJFpjsG2ZudIC1Alw7exrHjidRRCcJxNJAnqvv/Jblso342AU+7J8DQKt34fZUU+8W
      GLhyl4aDO4nPDeHzrXHz9gwth55g6tLvuHn5HGMJE1bCjC8GKAOlYoE7V3vQtW5Hv3CZk1d6
      eO1UP263kqu/e52R5UWGxiJ0P9KxGTcnTs/VIaq37yBx6zxXB2/wuzO3cbuUXH7tdUaXFhge
      j7O9U8vVm2u4qgzMDE0wc+ci/SE7e6vhnVNXWBi4QdDUSG3hLj0T/2b98xZ/RDykAWg48oNX
      +M9/+7eogv2shjNAhlS6jMPhZu+RY7Q0dWFVrTA1k6C+wUw+J+FwuDl49Ck8JhWQIRbLYzCZ
      aNp5kM4qy0YDBAlJkiGTiQhaCza9knvyF729Bo/TidkoYajeyS5Pmcn5dXKFwn39udLioMrl
      wm1TEApGKMl0GMyVHHpyH2YRFAbrZmaVTSGXw4nH7cJlkBMKRijfL7/3fnmTpZYjR5oJTM4Q
      LuTIxtLonE7sTheZdAzQ4HDbsJq1lL+qCMFbfC08nGaULHevnSc7WiQuuTHpFICOqhort06/
      zo1EjL3PfxePPsc5XzXP2CwkK7Rc//B1zsdTdLdZATv1zVXcXlukuJqkxta4UbUkoVVlWViM
      fGqvoZkBPjwZx5dzUp9aYCZSxqKXk38gnHPCv8DVsyeJrMrZ90wzd3zzrKwuEAqrce5SfbrO
      1RkunTjBakLDt1qbSUzNsbI6Tziqw9m92R0ZP3dG1tA4LESzWYxtNSTPXOHEfBFv9U6YW/9U
      vVv8afLFfoBykYhvdWMaI4gYbG7M2jKRcAGDXsC35kNQW3CY5fSefJ9U3SGe6Kwgl4qwth5A
      0tqwagXiWQmjpoxvzUdJYcTptKKUBCgXifrXSJRVCKUSDreFpN+PFJ/hv/5uhhd+sB+X0YVV
      L+JbWiYrqnG4XGgUIsVskp/+w9+x/dHv4nI7qbQbSUf9rIdS6O0uLIo8/gQ47EYkIJuc55//
      4Q32H3sep8uB26ojFblX3o1FkcWfEHDYDcTXFwkmipgcbswaiZBvlVhWxO5yUowFEQwW5JkI
      WbkFs/Yhx5Et/uj4yhxh+dgCl/v97Nq7DYPqK7ggYktcG0vSvaeZz5PJlQp5bg/0Utu2E7P2
      U8+XPkUhF2Xw9hRNXd3oH+bx1Rb/4dnyBG/xjWbLEbbFN5rPnKtsyaG3+KawdQfY4hvNlgFs
      8Y3mCw2gWMgSCIYolsqU0hEWVv3kimWy8SDhxIOhmspk4kFC0QS+dR+5TwRQKmYTBKOpBz7H
      CQQTn5sd5otIRwMEY/eSqpVIBAPEH8zoWC4RC/iIpv+9MjIWSUUDJD8nelW5VCC8vsTyavgh
      A3SVSEV8RBNpfKv+TyWmK2RihD4nS2G5XCYRCZP+ktkoM/Ew4XiGaCRENrfRp+VigXAwTP7L
      PDMpFYkEA6Tzf3zvmXyxASSDnPjwHIlsEf/gB/zTa6dYiaaZuHKavoUHnVdllgfPcPb6Xd5+
      7S3WMx/v/NDUNd66MvZRvdkE/tCXN4CZmyc4eWtu81OJRMhP4kEDKGboPfE6txY+mQLyD0Wc
      G+++xt3PSWKYjwd4753XmVwMPqQBFJm5+jbX78zw5r++/VGmxk18Qyd5t3f5czbNc/mDtxn3
      fzmZRiYWJhxPcvq9V1nYDFlXSKzzzpsfECl+iTNWzHLl1Emmw58T/u5r5Asf2Mu1BiplsJrw
      szijYn+bgvW1VUJpOY3GHJff+w13plcRavZxzPrRdssjV+gNG3juqV3I8ylGh4aYWdFxKnqT
      4biZ9nolwaiRicu/ZF3wUMgWOPjsMdav/I6xgISpfhvfe2ovKpnIydf+mao9LzBx7Qydh/dz
      60I/LnOO5fHz/D8DJ2h66gUsk/3k2pQMvH+WGX8O17Z9mMkzfOFNBt+Mc+Sv/pYdLhVQZnno
      Aqd6JolkRZ759jFu/up/UnR3091i5vbAKNmCgse+90NabSpgnTf+7lXCNiP5vIonnn+G1PCH
      3BhbI66t5juPWPjgVB9Wq4bpkWlqvdNsr6hHXk5z5a3fcGc1i6G6i22GVYZm1mh80o2qXOLW
      idfJ1+1BGLlGefujFK6fQ7P/UUJ9l5iYX8G4/Rm2b/ZlmTLLdy8ztKrl8cd3oM6EGRgcY66k
      ZNKxzvmLfZQVRh55+kW2eQ0U4rP099/BbWxm6IMboKtmZ3slt27cJhxLsPvlHxE98wvmRReZ
      TJ6nX36BxYuvMh6UMDdsZ4c2wHS0yM2BEaTGMI1uPeGVMcbvDmA672JpYghP/W7abFmuDUwR
      yYo8/cR2+vrCfOu5bZw7cZ7Orjr6e/qIFpR073/0Y9fU2tgF3rk4haKQQl57gOf3Gvnw3QuE
      0lnqHnmJ6sQF3uhPsPux53iiu4LVkXO8e3kWeT6JsuEQz+3WcerdC4Qzeer3vohx6U0uLWhp
      a61jZXSQlKBl9+PP4YwN8mHvNAWFjRef2snJ4yeRawWCCTM/+usf4VY/xB1AkGmo94hMjy8T
      0FvZWWFibc1PQS7HYjBSVduE165hefWjuJ+kFrh8Y4WuPZ3IAeQaGuprcNd34FDlcHYcYl+D
      jXy+QKEk0X74eY606xgfXyQeiaOxVeJ1Gu83zqrVsxRYQJEpMLvmo6TVYZQkzI17+faRJtZW
      /BTzeUJr06yKtfzNX/+Q7iozIFC7+xme36ljeuneaFhGa/PS2lhDMRUiHEuRFgw8euQRlvuv
      shLLkA5OcLVvfnOkLlMQFOw+9n32OAtMLvpxeBup89oJ+tbJZXMk5BV8989eoqPCTV1j/cYx
      p+YZXTby8k/+DKX/LllbO21d22h3qwABm1XNymIQQZVhdXqV+bKeOpue2oZG3GY5S6uB+91Z
      Kixz+doSHTvbUQuA2kx7vRt3fROhsT5qH/8Lnt5pYWhggmIJJH0NLU21tNfZyCdFdh07Rl11
      JW0t9eikNCv+GNmSRNuh59jlFlgOholF42jtG/1eLhYoWpppb6yk1buhSTc66vHUtNDqVZOS
      uXn22D5cFVW0NtZQSIWIiS6sKj+rq4uICieBkavcXY6TDc9z/tZHd37YmA6WtdX86K9fQjY9
      xK0bPQwuhCjm49y6epVQooC1YS+Hujz3y6Ov4cevvIg4eYdbPdcYXIxQzMe4de06gUSJyu6j
      bK+Uk0iDt64Wg6zEwNgiB1/4PoddUW5OBsnHyuz93g9pU/tZ2Zy8PMQiWMTbVMvdnl70Fgc2
      j5PVqUFETR3F8CTvnL9DVU01OsUDSQXVlXQ0KJiaWvnMGhVKJeJmGKvy5l+pWEKSyeg89Dy7
      auRcvnyL5OaUxlNpZ31kAHNXB4sjs9hs1cgkCY1GjUKhQBDvBbUSKZWKlIsFEok0RWRotWqU
      Shkf+fsy3Dz5DmuyCirMSqCMJJchk2SICgtHXv4xr/zFn3Owq+Kj22O5DGUolstQjHLivdMo
      7NVYtSJlQK5UIgnCx1MwCSKUCxRLJYqlMh8LVSkIuCsqWV0doWjpQjE/jOCwk57r42TvIvU1
      lSgfuDeLkovWejVT85/UIAmIokChUNxIgyqKfCoPlFyBUioyeeEN7iRt1LqNQBlRklAplCiV
      ChAkth16nh1ekYuXbpHJ/f65uqBUoRQ2+1FeQaVZCaKSWoeJwZ5rGJo7UWsMdB99iVf+6ie8
      dKDlU3UUy2WEUomSICGTBJr2Pc8rf/NXPPfYHgwqEblCcT9530Z5EEpFSuJG+eb9L/DKK3/F
      c4/uRr9ZXmOu5OkXnka2eofrI0sI5Y3AXoVCCUkUASUqjRKl4qN6H+opkGCtodEqp7LSg2Rw
      025VYqmpQaez4lQnGV2MY1NpKKj16LVqTBYL7V07yCzOEN+cMhrtlcgjc4TKJgwqCVGuxmhQ
      U86nuH32LXoWRbraqokt3+XG4CKNbe2olRtyBbu7AnJqnC2NeJR57N4KVFojBq0CSanFqFGj
      NhhxeVtoMwT52a/fYSlRQmcwo1VIyDVG9PflGQo8lS4W7w4gN3kQymAym5GrtOw50MnEmTd5
      9fQQigc0/sWsn2sfvMlIykxHQx0VdiWT43NYDDYKchUWkxbQ4qqwsjwzRa4MqGvY2QIf/OY1
      5DW7qLYZMRoM95WuKrsbLzmUzhYqPSrsDi8GixtDyc9UsIRFJqOsM6FVKzDbbGzb1U1+dprg
      5gLCWlFHbnUGW+dBAj2/4dxYjl27mpCEjYGgwqVldjGC0WRGLslxVtcTnRkgLrehLhXRGM2o
      5AJqnRGtUkFkaZibQys0d7SjNxrRq5VUWdRMbQ6VcrWOKkuOyZUCFqMOUOCudLI4fHuzH8vU
      1HspCh46Gsw0bNtDceIcv/mghwxydAYDSumjyy0ZGOd3vzyJetsu9uw5hG7tKj/7xbvEZBpU
      GgPGT0hbEr5RfvfLU+i6d7Nn76NoVy7xs18eJyap0erN6FUypHKBuzcvs1S00tVSzSM7Wxk4
      9RZ9cQ+PtNgxW03IETeOffNy+JrjAiV476c/xXL0b9hfp/vi4l8La7z6X1+l7c/+C52Or7st
      /zFYHTnD6/3wf/75Ew9VfmX4Q968I+P/+PHRr7wtX7MBlEgnU4hKDUrZH6tLokgqkUau1rGV
      hPGroZjPkM6DTvNpufrnlxfQab76EHtbkeG2+EbzmY9BJUliSyS6xTeBLTn0Ft9o/lgn3lts
      8e/ClgFs8Y3mCw0glwhw/WYf2UKZ/OodfnfiCpFMicDkTfpnww+ULOGfukXv3VkunbtEKPtx
      xUsmNMvNkaWPPgemuHZz+vdmPvx9rIz0cGN09V4rmb51jangA4v3Uo6x6xcYXUt8yT38W8mx
      ONzDXPizfy3lkvSff4t3TvWTfPCHyBznbozfF7tlQ9NcvTH1UP2SDs3Te3f+c39fnxtifPHL
      aaFK/hHO9s+zONHH1PpH/Tpxt4+1UPr3bPn5+Kf66ZsO/FFllPxCLZAkwuz4JHVtLQRu3mTa
      r6MjECJ4ewrZjiqWp+6yHE5jrqiFlQkm4nnC40NUdLUQXStSVe1GKuaZvHGak0sO3Ko0sUwJ
      pUaG3abGPztKIgNZQUVDXRXJtUkW/GlslXV4HUZEAZbnJzHYq4gE1rDa7QRWA6zOjjAQiyBL
      B6hqqkdvtVOWlwksTDDnT1NRXcHi6CCBhILUqpmmzhb0sg0PYDK4yMTsGoLGQkOdh+DsJPGS
      msoqO6szM6QlE+1ttShFAciwNL5AvJSlJDNTX+shsTrJ/FoclbWCGpuc9TUfqVSAq8dPUvFC
      I16zFQmIrM0yuxzG4m1AFb7L+1fv8vJfPokaKBdSzE1Okw7O0DupoblSIhototBI2K1yVqbn
      sVVXUwwsklSYkCdWWPCncdY04rFoEQWY7jvDiVE9jfUOwnOTBDIKmtsa0SskyEa5cvJNonUv
      oU5JRDMirpoKIoszRDIC3qZGpNA6wWyKVEqkob0VwnNMLgYxOGupMRpxqCJc+uBdpF1Wauw1
      yNJ+3nvzNVqf+U+0+tIkSxo8bj2LswvkUNHQUEkwlKaqxk14aRrR6CGzOsF6UqSqsYXYyhST
      opHt9TbKxTjz48skCllUlkrq3AbCy7PM+VO4axuxClHmfBEEpZXGagflYpyFiRXi+Swam5da
      p5b1hWmWIyWqG+tRp30sB9PI9Cak2BqhrERVQzNmRZbZiUnSMjP1dV4ia9MkYhmSop7W5prP
      TpH0IKIkkJwaI240MTmdZFutmkhWIhgJ0FRfTXBtmeDyJOfGorSZ0qzkzGSCS2SSPiKCnfoK
      C2K5xPpUP6MxJYbVG1xc1uLVrHH9tp+V26eYyVmJj99iXaZh5PwJYkWJoYl5WpsbUMhErn7w
      Kgm1h6HTJxCdRi5d6seiijO8XEITH2MkrqY40sNiWc6tK9dRkqB3NoYus8BCVkdm7BI+UxeN
      dhVQIrg4xUokze2ei8gdLs786leI9ioik/2Mh/Mkp2+yrGqk3q5GwM8b/+1X+LV2VgevkTFV
      Ug4uEAgHOH9zhEp9il+/1UNdg5PFsSmMLftpdGkQSwHe/flbpFRqBnpvYzVpmFxYY9vu/Vg1
      Emujl3jv2gJaIcxcTIkx2MPZWSXVOj9Xe0OkV2+RtXey2PMGobLIjXN9lGR5+u/O0djUgEom
      sj7dx4hfQY3az9mBVZSxCW4H9bTU2pAKWUb6r5GxVLNw/h18iko8Vjm+dT/LI9cZzxnI3HyP
      G2EtualLLKrcrF34gGVBztTAXayqGO8MRFCnFpFV7KDNa0IsJLl69QrmqmquvXMcdWUDOiGN
      LxJl5saHBI1eZi70YOmopu+t45SkDGdvzqPAz9BEDIsihl/y0F5loZCd5qd/9xYKu57+nkEM
      Vrhwvh+lEOP6bR9mcYbfnZ2ipqkRl1lHPj3Fv/zf76Kya+ntGUKrSXLl+jiy3Do3ZhLoQ70c
      H0jQaI3x7ukxlIKPuysyFIFbXJpMkl4eYqlgZvrsL5nN61jsu4FY3fEwWSLVtLYYuN07TtFi
      o6PKxsziHAqlCb1KILS6wpo/RCj2gNQ1tcLoXJba+gokAEmO1WJGb3ViUEJl6zbq7RtpD5U6
      Izv2PcaubR7CK1ka65ysraxicVXezxLpdThZWh7GbLIyOrGMyepCI1NT09rN3q46spmNfcdD
      ywjWVp58/vu88sI+JNS07NjHvnYL4di923iJVCzI8tIywViabK6A3GCjvaWW1bkJVpbmCZfU
      SKkE9xQxGr2L3QcfpbvGgs8fJOpfY2V1nWAsTalURmWvZueODlxGPRbbxuhPbIlAsZaDRw/j
      lmJEFRYcLjdOvQwoszq7iKNtN4/u7kSt2pBdVLR0UW83gKihZVsTyyNXWYnaqJMH6FtYY3nN
      jyTIyZU2WmayOTHbrSSWVqnuPsCxI934hqZIAKiMOK16LGYzSo2Olu5ujMRZW1ohGA4TS2aB
      PHVdh9nX6SEUEahr8RKcm0NX4UUjKyNpDNhMesxWCzIR0DpwWQ04zBrkJgft7Y0o81GWF1YI
      x6OkSi52tJW4c6WHgKkbTXSE+XUfK2sJRBWUCg9KqQVs3mYOHDpArVRgcnmcuckl5lZjaOV5
      UllQVzazo96FKAiAgL2qmf2H9lMj5BibvsvM4jJLwTS6Qp4UYK9vo7W9myZzjgVfgSqPibXl
      BZp3HeGR7gpWZldAbqBl5046PXqSqcLDLYIN1Q2Ehm+jt7nROt0IiyMUzI2U48sMLyVpqqtE
      XS7ev2DQeDm028XtW8MUNid8oiSjmEmR/YTOKpNKMjM1xuxsAK3pzO10AAANmUlEQVRVIp4z
      squ7ifnxu2Q2X6BwVdhZvzuGafd2EjPTmJ3VfJbjWKOzkovMM3b7Cr/9oOdz5tE5pofuoPQ0
      49BIG1kQAWRyXA47Ne172VFrQtLq7s8P00kf0xNTzK5HMOjg7ugcnpp6DGKRj2LUichEgXQq
      tZEZU2tDU1piYnSS9YwMq/pBr6eAxWkmMD/F6NQc2c94ccXsqiMxfJ583XbsHjf1rgr27NmN
      SS+h2hQUiZJEMZtBazWwMj3O8PAUGq+be2nUZJJIOp3efOeijH9+jPW8gboKGxQ+oesvJwkE
      lew6+Aix2QF8sQIgIJMEMqn0/WyfMrFMMp3f3CjP/J1B8tYavFYjhUIRR0Mbkxd6qOysw+Oq
      wuGuZ+/edvSiDEl60JVeJri+wPTkNCslAa/Zg7nSy6P7t6FR6fm0k7hEYG2BmckZVsoiVa4K
      7J5GDu9uQWHU3j/mUmSVjKuTnc06Rm9PoTVaWZgeZWrah9H+6WjLXzgFAhCUeoxaJXVNTRj0
      eswaBe7GFuxGPfJChKTcSXNNFa5KB0azE5fdTEtHJ1IqjdHj2MgSqdVRzCQxuWtxVVRiNyhQ
      aDTEFkaIlzQYPI3s39GBXooxsxijY/d+qpxGREFApVFTEow0tjdhk4OnsQmjWo7e6sJp0aMy
      WHHbzDjqWmk2Fxiai9G+Yztukw6LqwKzToXG4sahVwAydBo5q2thWrq24bDbsBmNuKtqqKur
      JDw7QVCq4ODOOhSiACQYunyTtMqAvbaD3e1NGBUZgikF7a3NOD1OzEYrlW4XGo2CTFmBy25A
      kgy4bQIzU0u07D1Kg8eEUqXG5XQgk0SM9gpkyVVCJQM1tXVUV9gx2yuxG5QoNCa8XgcqhYnm
      ribMRjcuTZzp+SCN23bjsWgRBFCqdJBJUrHjAPr4HLNpM08e3YVRsWEgWrWSZF5GVYUHd6UX
      u8VAJuJD427G43FS6bRgdldh0cnQmKqod5UZHZ3Hu+0QHXUOlDonTVUmskUZbqcFSQCdvExK
      ZqPG46Ci0ovVpiewGqCypQ2bzYHX4UBlMtHRVIPJXYc+tcCML0/Xnj049Eq0Jjt2o5pSwUf/
      5RHQ62ncuZfu5kbcmgxDMxGadu2g0qhFY7RRaTcCUMj5GLg2Bjo9Tbv2sqO1FbMQYnQ1T/eu
      bmx6DXqLG3dlJfhGWYipeOTR/TQ31pJbnSCpq+fQ7ja0KgUOdyVGjRqjw/V1O8JSXD1+HMPO
      F+j0/LGmfwxy5tWz1D71feq3wrV/ZeSzcxx/Y5THXn4Gy0Oc+lx6lvfemeDoS8cwPZyE6KHY
      8gRv8Y1myxG2xTeaz/QD5HJf1j21xRZ/WnymAZRKXzZWwxZb/GmxNQXa4hvNlgFs8Y3mCw0g
      E1niN6+/TTxTJDL4Dv/X//drlqJZJi68wYdDD0YpKDF7/U3eOtPLz/77/2Qp9fF1RHjqCr8+
      PfRRvYEJLvc8nOjrsxg9/1teuzi++SnHVM9lJgIPiOEKKS799qdcmAx9yT38W4lz4+2f0//Z
      gTDIJwK8/i9/x6vHe0kA8eU7/Pz4lS+1p3zcz4dXeglM9/Dqqb7Nb4ss3Hyb9/o+GULr4UjO
      3eCfjvd8qW3/lPlCMZxSrUNXKBDOxVibSFDt0RIKBgkES7jrCtw6/Tr9M2Eqtj9GazFPoVAk
      l8uR8E1zbinLoYPdyPMphnpvMLxi4BoLLMbK2Fw6xLKZgdNvsJYQSZT1PP7EQQK3T3BjIkbd
      rsMc6qpBJgrcuPA+lR0Hmbs7QGNHO2P9o5DPsDZ/lZ9O9fHI00+iKBQo5ZMMXzrN9Yko2w4d
      opDPMnn9fSYvq3nmhy9TqZGAMv7JHk5cGqZs9PLkE7sZP/s+/rKT3Y80MHDxMjG5hxe//QRm
      uQiEufbWZdZJkVd6eeKxPfgGT3J1eA1dzXaOtGro77tLPB5l8u4otaZpOj31yMslZvrPcPn2
      ElU7H6cy3UfP+BrfOdqKrlxi8PZ17vRFuGIs4AtE0Ve1404NcWM8gLl+FwdaVfRfvosvnsC9
      4zH2OpKcOtdDSlPL0webyeXzjPddpn/MwMHDO3GWI/TevMWkVo4jWmAmKFHb0UF5roc7i0mq
      dhzBmprA0XYQpW+QaaqoyE5xrm8Oz7bDHLAUyd1z25PizqlLLJTShKIyHn/2GVShu5w9fxPJ
      s41HH6lh8OyHhAU3h555HKcY4crJW8QUfkIpN9969jDZ2RucuXoXc9N+Dnbb6Dt9mrBgp9aj
      ZHBoGlPDI7xwqJ7xq2e4Nh6i++hzVCb7uDiVJheLse3xl+ny6j4V5eWr5osDYyl1tDhgamqJ
      Kbmbx+tMLC2vEJfJcBl0uOu72FZrpH9w5KONsgHOfngTV1PjJwJjtaGOT5O0dLCzQsb8ko/5
      6RnUjQdo1/m53HeHoTuT2KtqSQaXyW2664vRMBNLiwQnpplYXWQuGkcnFBGsLTzRoaL3zjSh
      pXlmJoa4Mi/w/Rf2kwz6KZLDVL+PfQ4f10fu6ZTLyHVu9uzbQ3Z1hLm1ACOTPrY9so3xM8fx
      SUaUgR7evDS3Ke3IMjc1i2v701Skx7kxvojJ3cyurgYmR+4QCa7TN1vgxR+/+PHAWNlZzl32
      8ehLL7B88wRpczsd3dvpcKtAEKmoa8Hd2IG9sMCaUMGRnV7MnnZ2dzcyc/cW/sAydxeKPP5Y
      F4P9fSyMDhGV23ArUqz6w0wvrOBtbKe6pZ0KNcg0ehprvFQ1t1Bcn6Hk6WZ7nRVPw3Y6qvUM
      DI6gJ8/U4jJjYyuI2WXe/vAGNoeOweOvMxJ78Kzn8c2OUK48yKGaPGcvX+fUG8dJaD34B89x
      cWiCu1Mhdh3eh0MFlDIsTQ9haHuWbt0CZ69f5903LiLaKpi8fJzeqQWGpyLs2dvJ0vAIlpo6
      ZOF1Fqb6ubio4Pvf38fwyfeZmJtlXaji6DYrN2+MfCoe6h+Ch1gDyKiudzHcfxetyYLLZWNp
      YRKFyoOQWeXc+aukCgKiJH6k85ZUGA0S8dhn68Z1ej3Spm3LlUqsJhM6ow6xqGTfY0dRphaZ
      XAhS3BSguFxW/HPDmGtqmZtYwmLyIJMUWKxmNBodorRhKIVCFpVGj9bkZltzFQJKrDYzer2K
      cvnek608YzfOcns2ikyxoU1RqFWoZDIyRQVVdXVsP/wcB1us90cfhVKHxahHr9NRzMW5fvY0
      i6Es8k1BkkavRyGKHx+tchnKciNajRqdUka6+PkRQbV6PTIhztVTZ1mIlO4HxdIZjehUGhRK
      Od7OvXRXqpifniSQ+P3RRQVBQKfXkYsvcf7sdeJ5EZlUpqrOy/LMNCHkOLUyZDonDc2dHHvx
      GO5PelcFJQ67GZ3BgJBPkC/pqa5v5MCTT9PltaBUq1HJ5PePWRCMOBw6jAY9+VScgtxKbWMj
      R595hga7DqVGjVJtYteRI5hzPubmFogksyj0BrRaAxoxTS4PaqMZnUGP8t/JP/tQi2CFpx6l
      fx6z04PC7sGRWEZwN6CkRDoVIxxPI6Zz3J+By3Ts3NnGZG8fyc3jUGv1pNZn8Cc/fmDZdIyb
      Z9/m4mAAb42Zqbt38MfLqDXK+6lNnW4HvqlVzDs6kfkWMFd4Px5pbRODvQZ9apzf/OqXvHN1
      jM+Lb1bKpQgG/ZRKMrL3fB5yNR2tHubvDNLT00uoINzvnEximcsn3uXGYoZqj41cJkYoHEXI
      l0ndNywFGrXA4vwC+TKgr6LKsMx7r71JQOmm0qj9WBuUajXl0DxL999XEcinogSCIQplOYXi
      g5Guy4SXpxmb91NWalBvan2UKi3Z9Rk23leR0Om1BOanieU/2i6bCBOOpcjkSqjdddjjUxQs
      bbg9VVQZsvT23qRvZOVTV0K5FOXmmQ/44Mo01a07aG+3MDnQQ9/tMeL5T1+c5dI6l46/y6nB
      EG3bdtFeLTBy8xb9w1Nk7h1KKcfcxF1WolnkSg0ObwPG0F1+9avj5DzduAyfc8L+gDxkWJQS
      qUQSmUqLQgbZVAoUWhRikVQiQVGQIQgSSnmZYllGqZBHqVaSzeRQaTRIApQLWeKpLDJJBLkG
      lZgnnUty7lc/Q7v3R+ysMaDVaihlkyQzBeQqDVqVHEEQKBfzJFNZVDoN+VQKSalBKGTII0cp
      FckWBWSlAmWFCiGfJpkpoNJqEQtZynINslKanKBCo9hYA+TTSRKZIgqFHEkuo5jLodRoEct5
      EvEkJVGBXq9BEgRgjVf/7jfUvPTXtDoUaDUqcqnYxj4lGQqFSC5fRqdVkU0lyKNEq1YgCJDP
      JEmmc8jVOtRykXQ2i1qtRtw8pkQyhSSTURYVaFUyUvEouZKETC6hkInk8qBRSaSyBTQKiUQy
      SUmQo9MoyeQ2vkumMqh0BuQiFHNpktkScrEMCg0qqUQyHqckyEGS0GtV5NNJipIalVykkE2R
      SOeQq7Ro5GVSedCplUCUM//49xQP/2ceqRTR6bQIxSyJZBpBpkKrlpNJZzfOrShAZo1X/+FV
      qr/3l7Qa5eh0Gsq5FIlUFkmpQaOSyKQ2ypfzaeKpLJJCjV6jJJdOkMoWUWn1yEsZsoIStVQk
      kxdQqxV/8DXA1xwXKM/i5CRKVyMOvfyLi38tpJkdmcNU24r5j1Wv95WTY2V8HLGiE9fDBOwr
      ppkdn8PY0Irli5N1/lHx/wPM0xeSOIq0jQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='ActiveTravelByCounty' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ActiveTravelByAutoOwnership' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
