<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='ActiveTransport Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' version='8.3'>
      <connection class='dataengine' dbname='M:\Application\Model One\Value Parking Pricing Pilot\Across Scenarios\Across Tableau\ActiveTransport.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>4</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1442</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1454.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ptype]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>8.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zeroAuto</remote-name>
            <remote-type>11</remote-type>
            <local-name>[zeroAuto]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>zeroAuto</remote-alias>
            <ordinal>3</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='boolean'>false</statistic>
              <statistic aggregation='Max' datatype='boolean'>true</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2574</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>12578.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>active</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>46323</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>160.80000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>more15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[more15]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>more15</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>20743</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>more30</remote-name>
            <remote-type>5</remote-type>
            <local-name>[more30]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>more30</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>18579</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wlk_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wlk_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>wlk_trip</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>24165</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>6.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bik_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bik_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>bik_trip</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11770</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>6.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wtr_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wtr_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>wtr_trip</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>18651</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>8.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dtr_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dtr_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dtr_trip</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8130</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>0.625</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>atHomeA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[atHomeA]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>atHomeA</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12648</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2015_04_134&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2015_04_136&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' value='Share of Total Population' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' value='Population' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' value='Share of population that does not leave home on a typical weekday' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' value='Bicycle trips per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' value='Average minutes of active travel per person per typical weekday' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' value='Share of the population that engages in at least 15 minutes of active travel per typical weekday' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' value='Walk trips which are part of drive to transit travel per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' value='Walk trips (which are not part of a transit trip) per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' value='Walk trips which are part of walk to transit travel per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' value='Walk trips which are part of transit travel per person' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' value='Share of the population that engages in at least 30 minutes of active travel per typical weekday' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' value='Average minutes of active travel per person for all those who leave home on a typical weekday' />
        </aliases>
      </column>
      <column caption='AtHomeFreq' datatype='real' name='[Calculation_0480828180930394]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[atHomeA]*[freq]' scope-isolation='false' />
      </column>
      <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
      </column>
      <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
      </column>
      <column caption='Active' datatype='real' name='[active]' role='measure' type='quantitative'>
      </column>
      <column caption='At Home A' datatype='real' name='[atHomeA]' role='measure' type='quantitative'>
      </column>
      <column caption='Bik Trip' datatype='real' name='[bik_trip]' role='measure' type='quantitative'>
      </column>
      <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column caption='Dtr Trip' datatype='real' name='[dtr_trip]' role='measure' type='quantitative'>
      </column>
      <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column caption='More15' datatype='real' name='[more15]' role='measure' type='quantitative'>
      </column>
      <column caption='More30' datatype='real' name='[more30]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Full-time worker' />
          <alias key='2.0' value='Part-time worker' />
          <alias key='3.0' value='College student' />
          <alias key='4.0' value='Non-working adult' />
          <alias key='5.0' value='Retired' />
          <alias key='6.0' value='Driving-age student' />
          <alias key='7.0' value='Non-driving-age student' />
          <alias key='8.0' value='Child too young for school' />
        </aliases>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
          <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
          <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Taz' datatype='real' name='[taz]' role='dimension' type='ordinal'>
      </column>
      <column caption='Wlk Trip' datatype='real' name='[wlk_trip]' role='measure' type='quantitative'>
      </column>
      <column caption='Wtr Trip' datatype='real' name='[wtr_trip]' role='measure' type='quantitative'>
      </column>
      <column datatype='boolean' name='[zeroAuto]' role='dimension' type='nominal'>
        <aliases>
          <alias key='false' value='Non-zero Automobiles' />
          <alias key='true' value='Zero Automobiles' />
        </aliases>
      </column>
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
      <folder name='Active' role='measures'>
        <folder-item name='[Calculation_2310828180634107]' type='field' />
        <folder-item name='[Calculation_3570828180454696]' type='field' />
        <folder-item name='[Calculation_4530828180712947]' type='field' />
        <folder-item name='[Calculation_5180828180654215]' type='field' />
        <folder-item name='[Calculation_5750828180815438]' type='field' />
        <folder-item name='[Calculation_6150828180840224]' type='field' />
        <folder-item name='[Calculation_8120828180802260]' type='field' />
        <folder-item name='[Calculation_8230828180724803]' type='field' />
        <folder-item name='[Calculation_8380828180514207]' type='field' />
        <folder-item name='[active]' type='field' />
        <folder-item name='[bik_trip]' type='field' />
        <folder-item name='[dtr_trip]' type='field' />
        <folder-item name='[more15]' type='field' />
        <folder-item name='[more30]' type='field' />
        <folder-item name='[wlk_trip]' type='field' />
        <folder-item name='[wtr_trip]' type='field' />
      </folder>
      <folder name='Regional' role='measures'>
        <folder-item name='[Calculation_0480828180930394]' type='field' />
        <folder-item name='[Calculation_2100828180906930]' type='field' />
        <folder-item name='[atHomeA]' type='field' />
        <folder-item name='[freq]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Scenario:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across_PopByPersonType' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Population by Person Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[ptype]' derivation='None' name='[none:ptype:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:Scenario:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:Scenario:nk]' value='88' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]' value='90' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:4]' value='p0.0%' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:Scenario:nk]' value='176' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]' value='64' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:4]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:4]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Across_chartPersonType' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Person Type Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[ptype]' derivation='None' name='[none:ptype:ok]' pivot='key' type='ordinal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:5]' scope='rows' value='Population Share' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:5]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:5]' scope='rows' value='true' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:5]' value='87' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:5]' value='p0.0%' />
            <format attr='cell-w' value='42' />
            <format attr='cell-h' value='14' />
            <format attr='cell' value='14' />
            <format attr='cell-q' value='70' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]' value='41' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]' value='false' />
            <format attr='text-orientation' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:Scenario:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]' />
              <tooltip column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1440'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1440'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1440'>&#10;Count:&#9;</run>
                <run bold='true' fontsize='14' indent='1440'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[sum:freq:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1440'>&#10;Share:&#9;</run>
                <run bold='true' fontsize='14' indent='1440'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:5]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[pcto:sum:freq:qk:5]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='ActiveTravelByAutoOwnership'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[zeroAuto]' derivation='None' name='[none:zeroAuto:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
            <column datatype='boolean' name='[zeroAuto]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Non-zero Automobiles' />
                <alias key='true' value='Zero Automobiles' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:zeroAuto:nk]' value='85' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='212' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='normal' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#3f6a6e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:zeroAuto:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='ActiveTravelByCounty'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='392' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='auto' />
            <format attr='text-align' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='auto' />
            <format attr='font-weight' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='normal' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='Arial' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#3f6a6e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='ActiveTravelByPersonType'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ptype]' derivation='None' name='[none:ptype:ok]' pivot='key' type='ordinal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]' value='84' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='wrap' data-class='subtotal' scope='cols' value='auto' />
            <format attr='wrap' data-class='total' scope='cols' value='auto' />
            <format attr='wrap' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='on' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='296' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' value='auto' />
            <format attr='text-orientation' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='0' />
            <format attr='wrap' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='auto' />
            <format attr='font-weight' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde'>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='67' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='512' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</rows>
        <cols></cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Summary'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='95'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:dir:nk]</field>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActiveTravelByPersonType'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='95'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:dir:nk]</field>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActiveTravelByCounty'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='85'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:dir:nk]</field>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActiveTravelByAutoOwnership'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='95'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:dir:nk]</field>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
          <field>[textscan.41862.719202812499].[none:zeroAuto:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across_PopByPersonType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:dir:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across_chartPersonType'>
      <cards>
        <edge name='left'>
          <strip size='217'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='88'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActiveTransport.tde].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Summary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ActiveTravelByPersonType' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy913tc152m++5QuYACUKhCzpk5RzGIlEVFS06SU9sznjPz9DPPzMX5D/py
      rs65OeOe6bZbcjtIsoItixTFTIIgQBAgIpFzTpVz2OFcABIVaJG2ZMse1HuDB1Wr9orf3mvv
      9e3fEnRd18mQYZMiftUFyJDhqyQjgAybmowAMmxqMgLIsKnJCCDDpiYjgAybmowAMmxqMgLI
      sKnJCCDDpiYjgAybmowAMmxqMgLIsKnJCCDDpiYjgAybmowAMmxqMgLIsKnJCCDDpiYjgAyb
      mowAMmxqMgLIsKnJCCDDpiYjgAybmowAMmxqMgLIsKnJCCDDpiYjgAybmowAMmxqMgLIsKnJ
      CCDDpiYjgAybmowAMmxqMgLIsKnJCCDDpiYjgAybmowAMmxqMgLIsKnJCCDDpiYjgAybmowA
      MmxqMgLIsKnJCCDDpkZ+0IeappHZQD7DZuCBAlhbW8sIIMOmQNAzIz3DJiZzD5BhU/PAKdAn
      0BQ8i7Ms+6PoCGS7SiktyEESHj2T0Oosiq2YPNv97DQlSSiUwignCaVMFORn8SccMkOGL4WH
      XwHUGO1XrzG2uILXu8r1i+eZ8cb+pEyGb73D3blP/iYRneHW9QFiqQSxZJrMPCzDV8HDrwAA
      xjz2HnmMMpvMtXffYG15moGz15kKqdjK93Aw30Nz9zyamsK9+wnqgs0sVP+IM+4hXrtpoFoE
      4iu89fNfshjXyCpsYkfeAtdv+ZHtJXjVOiLjl7jZt4pmzOPU6cPcvfhbwpoFXzSL//x//4RC
      41+2ITJsTh7tHiA2wxs/+9/8z5/+C3MU4ZQ8RHMP8p//y/fIX5pmSdUp2naSf/zHb6APjRN8
      wFxG1wVyi0opdmazPD2MtWYvB/fspyrPBkSZmorz9D/8I89utzI8s0pcyuOFH/yIJ4pVFqJf
      ap0zZPiIR7sCWCt4+TtPU55lBiA4dwc1mUBJp4nrOtlopFMKajJBWjKSZTXjScSI+n0kKAAg
      sTjApN/Ct05vJ/KHc6DrH3vUKiGQJpVW0OIpRFEEoxmrQcZgkP4S9c6QAXiUK4Ag4cjLwSje
      T2pzN1Jtm+FXvzqLffc+CmWV+d7r/Pw3rVQd28vWHYcI3fkdZ8di1ORasecU4qpqpDQ1zYXr
      g+SXl2Ew5KCHRllMyDgdeezaV8/td17lji+X/U3luPKdyKKILS8fa0YDGf5CfCnrAKOtv6Mv
      3si3Tzd9GWXKkOGvxpciAFVJoyFikDOn6gx/X2RWgjNsah54E6woyl+7HBkyfCVkBJBhU5Px
      AmXY1GQEkGFT8wgLYTqpwAzvn7vOagJ2PvYsW4ti9PVF2Ht4K6Yv4cGPFl3gd2/dpOLEafbl
      Jfnd+1dYDSYAEIRCvvFfXsB1PzWByWFCrgbKsz6eeZyuG22U7D1FgR2iy/28824rMQRkewkv
      fPtp8k2PrvfI8ihdS3B8d/3HPk0x3zuBtTGfoZszbHtiH44vWPcMXy0PF4Aao/WDVipOfYuv
      uyQ62zvwmG2MdI+gSlFcpTXUFZiYHBlmNQqVjU3YImvM+wIYnWU4UktMrcQpqmmkLD8LUQAt
      HWVmdISliER9YxXLtz9gztrAaXcuWCRefPlHLLS/yT37E5zZmouWCDIyMopfsdFQV0DnjYuE
      Gg04Gm2MDk0h2F00NhUwNz5C1vZTFADJWJCs2hN871Q98fEr/PbiIN894WJkcAIhu5imxmI8
      o2N443E0i4u6MgerK2HKylwszq5hVFYZn4cDVVkMjEyhGJ00Vpu5ceES5eZnKSh1YVQTTA4P
      sBzSqdu5G3N4msmVCPGERmVDEwUOc8bh+jfOw0+JopHqugK6L/2BD5r7KGnYS45FIBSOIikR
      rrTcYXm8j97xNXTfOBfujDDfe5XbUzEMiWku3RgkFgvQcus24cT6zfXiUCddkz6MiTkuNg8g
      mIyYLVZkSQBBQBDWh40gCAjARPcthpcT6J4BLt2dxmAwYrHASEsrSymBpeE2uqYCnyy3rpOM
      RQj4/fhDCYzGBF2XbuARLayN3ubO8DQ3L5xnIQoLve30jAzS2tZFMhGho7WbKICapK+jndVo
      iuXey/SuaBhlMxYpROvlTiZHbtE+GcEqeLl84TYTvTe53rdMwj9FW9c4mQfMf/s8ghXCQPne
      0/zo5RfZXmbk0tl3mfWncBZXs3N7ExYjSEYzBi3GqseLJxABFErrdlCieRn2BPF4/BgkE+qG
      6dnjC1LeuIN9x/ZgX/RhdOaQ5y7G/kfmUyuhKHXbdnL48A5SywFMWTm4Ct3YHXYSvhU8/iCR
      WPKTP9LTzA13cvnyVTqXHTx3qIDFeDYHD+xm944qQnMr2PPK2LV3D9sqc/AF44ifaQ0Bq81M
      LODF61shrpvJseXjLnQgobIy66dy5x52HjiNIz1IKG2gtH4bOxprkJRYxuL9d8BDp0B6MkzL
      jeuYCuvJt9opLMhBEj55YfcszaNY86l2wtyygrrxuegsoSYvSkNTNXMrIQzC+gjLddjpnhjB
      6osRLswnm9XPLUO+zczEyDBJcRFDUTVZsRWWlueYm/BSvG8X4bQHTVE/OeBEI7V7TvLc6cb1
      Sqohio1BevqGYXYaW/lOlkfaGbw3hDIfxFW/lfjiHcbHx1kJhIE8NCXF7MIK7ort2CPTpNMa
      NjmJ1xNGQyK/OIuhwQFy/UkCQi0F5kXWHrnpM/wtIP3TP/3TP336w4+vAwiyEXeulaXZGVa8
      Yaq2HaKqMBubPYd8dw5Wq42qynJSwTWEvErqiwpxFReQ63STm+vGZY2xsBqlZssOCnIsCAJk
      O12IMQ+LUSuHjuwix2rBmp2H037f9C/KRuwOJw6rTK7LTdq/hE8o4OiBLbjybATD0FjvZm0p
      QGnDVkry8nC5nOS7CzDLIIgyVnsOuQ7L+jxcNFFQksvq1BSyu4l92woY7+xAtTpxV29hV30F
      +VaB5bBGfV0DJcUucvJc1Jc6WfVEKK3fQr6zgIoSmVDURGlFCdVbt2GNLLHgFzh48ijuLCuO
      PDfObAtWWzY5DjtC5ibgb5oHWiESicRXUZa/MlFuX7pJ5eGnKLR/1WXJ8FWxiQWQIUNmISzD
      JueBVwBN076KsmTI8FcnY4fOsKnJTIEybGoyAsiwqXm4APQ0c3cv8dOf/pT/76c/5bWzLczN
      d/Lqzy4Q+ZJeG0jOt/I//se/0D75+Qtij4IydoH/580uPrUuTOvF15la9dBy/Rbh1KMcKUTr
      6x+wwBJv/L+vMhl5cKrYyghnm7se8M00r//PCwQe8M0XZbDtLP0bgcbUeIBXf/FvLPq/+JO7
      ha4P+PW5br7yt0HUBLcvXWYm8PkB2JZ6L9E5+/lp7pz7ORf6Vv7o948QGjHJ2JiHPWe+wdaC
      LMLBALKwRHj+Hr/62Qz5W47y7PZsrl64zLRfY/cTz1DoucftqVVcjfvJ8/bSORmm/tATPLa9
      DIMokAwu0HzpCqM+kcdOHWO19QZBSyUluTlAnK5z7zMajRNXHJx6+mtIC+1caR1CLtrGmYPV
      3O3pIDi7RCJ/K8/sdXBjUuBbJ6ppv3Cb8hIdHY3lgRtcuHEPk6uWJ/cX8f6lWzTJ1bgSMWL+
      OW5eu8Rs3MbRU6dJztxkfNLHWsrO8y+9QGWOmfDiFK3dN1iqsBKNrHHxrZ9jsVXw9FNHmG19
      l46JIAVbj9Kk9XH90ihVTXvY6tJRoitceu8DFkQVQS0m4Z3k7bOX8JPH8aefxZ2e4fKVm4TM
      FZx54jCh4Zvc7J2nYNfjfP1QHYKgM99zi7bRaTyrIXac+T77XCHOvXsBr+bg2ON7uHH5JvEt
      braXHfiom9LRVa7faGbEI7Hv9BNsyQry/vvXWYlJHH7yCQITs+w7fRRltoOBUAFZ/i5uDy5R
      c/AZju8qxygKgMry8C3+dfYu9Uef5GBBgksXm1lR8njyheP4W7qYE5dZXbNRVyoxMR/nxHMv
      Yl7p4GrrANbKfTx5Yg8Ok4SWijBw+yot/UuU732cY8URzt4eJ+Fdxb3rac4cqsEgQNw/y6Vz
      55mPWdl3+gwHatwko6t0tVxEWktSUVnI1w5tZbj5FulcC9Ozq3jnl6k++jyViSiJZJx7V89z
      bVzh+ZdeoFRe4+3X38On2zj4xAvoDzGkPHAl+BOIBtxOI3132hkeGyeQNOHK1RgY03jpO8do
      7xqk2imzHDNSIK3RuiBQmR5mreRpniqe5V9+P0JZaRY9PaM0bN9GlklmpP0qfudevnE4h4sX
      pjmwJ5dkwWMcrcsBkvQ1N5N35CV22FbomQ2yeG+AA9/4IVkLtxiKmpkdnuRrP/gB2bNX6fMZ
      mPYpHN7qorelm7xCC0MeCacSwlRUSmC6F6X4KCXSMlv37Ga4exAhvkCk+CTPbjXwXusEVt8k
      ht3PcdA0xmC6koZCK6YsGf9Iir3f2sls2xh7v/1jTEttRIwOgotB8t02OgamOLBzC6qjnFM7
      KwCVseZLeEqP8I3dufQMB9C9/Zj3fY9jZUludE7hGbjIjFKAOTDGaNhIaG4YR0ktuijTUFmE
      IOgsDzUzqu/gx6ddXGpdRly8g777u5yq0bhxd4naUgt1ex6n2GFAVxL0DQxhjM7SPBKlJDvB
      rQEf9S4Rv55NvjLDnYCLg/I4/UIpobutGHLh3LVhysrdDPd04qrZictuILw0wli8jJdOVdB6
      bw5lZZzsHU/xeHmIs3dWERd7MOz/PluSt5mwHedQgY8hT4y+cxfRiyvxDvegFdZRlW8nMHuP
      5gmFH778BFPXzxI0WhhYlPnxj04ycKGVgu3bscsQWh5nLmomW1lm0GvkwJYyZEnG50+x7/GD
      hPsHkPKN3B2OUuvw0+/L5wcvn+DehfeJJDz4VTOjiwJfP15GWM/BHBhmNuXCKa0xOiuQY1pD
      cTRQW/Dg1c6He4FUhbiUy9ee+wZCOsLlD86zlFeOw5GD1WLGYDQQWFskEDWwxV2IYXV97T8r
      KwshlcJRu5ODh6pojKTIMa9np2hgs5ox2AWs6XnSny6UwUqOw4oxboZgHAQLZrOR7CwTM2kN
      Y04e2QYjMZsZPSUgaDqKkiSpbKhdiTA7t4ZjeynuvKz7Abg2/qiqitVmxWK1AWtgsON02LBE
      TZ+xLug6GE12su0WkjYLSnyNuaUwW/ZV4bDG1w/50YM0nXRaJDvLgmxXyRI1UmmJXLsZk5qN
      LPjRJTNbdx2kyrod1erGGLcyNT5JR+scK8d3UbSRf26+E7PVh4kAyZRIVpYJo5CNQVhC0z9W
      mQ0UTaC0aTcHm3KpS8r4F7uJpp3UFbgRYzLl+7Zx67d/IJlfzTdtCs6qrRzYX09TQ5gih2Hj
      KAZycx1YzCYMskgaAYfZiNWUjZjyoWLB7cwiezWbnJwcrJoVOZzEYK1gx8EDmLc2kVOU/VEb
      myxWZIMVh00lmQJjjpMssxWL6X6ThVdm8MYdNBS6WY1+vE46umxj/zYLr18aoryhETMhHPn5
      mCQrZnMKVQUUFcVowllYiUmT8I7MEqaG0kIX3rmHP+B8+D2Alma6r5nXfv1LXnvzXdLZVeRn
      mz6RxGAwElyZZHQ5gBSJ8+FsVCraSln0HhcvXqV/1vNRl5VWljPb/j4/f/UC5l0N5Hwqy2R0
      gYtv/oZzbVNUVG2lrEjj7K9f4eKoTmOpg9DCIG/96lUuTxrZt6cBp7eHX7x+g8BHs1cDRjnJ
      xOAAvoSOkkwiJvx0j8wBUFBRz2zLm7zy+5tUVlb9kYqbsZjXuNsxSfrj7SiY0ZMrDI/PoCUU
      VIOR8GQnQ2saIFO1o4qJq+/yq7cv4k0aqN5exd3fvcIbZ1twV2+nvqGBsfZLXGnpIhBLMj/a
      z9iCB0tePg9+e8BI9a5aen7/Kq+9ew1n1S4cxjTt3UOfSOUqr0ef7eTS5ZtMeKJYTDKeuTEm
      vFHkSAwtpwF7fIrcygryShspjE1w4eJF+iZX0R6UryBRX1FIx4U3+be37lK9qxrzA9vJTU2d
      xu2LF7jVM05SXW+sbHcJttAQr/z8FYbURurzH9zKotFAaH6cmaUg0eTGqVCUyJbCdHSMY6rf
      i7Y0SlFhEQCj7ef59397hYjzAAV2wFFMTWqE//2zX9O/FMZssbA2PcTEYgRNiK2LZAM1HaS3
      o49gyE93Xx8p9ZHWAXQ0VSWVSqPpIBtNyKKOougYDCJpRUUWBVKpNIIkISAgCjq6aEAWQU2n
      SKsassGELIkIAui6RjqVQtXAYDIh6QqKLmGQRSDCpVf+Bfvj/5XdRSJGowE0hVRKAUlGCC/y
      z79r4Scvv4jJZMJokFBSSRRdQJYEJFEkrQlIKKQVHUmWEAUJtBQqEgI6siyjpFOouoDRaEBX
      FQTJgKApqIKEQRIBHSWVQhVEBE1HNhrR1TS6IKGlk6iISKKILIsoqRSi0YwsCqBrpFIpVB0k
      UUY2iKSTSTREjEYjIuvfa4KEyWhAV9Ok0iqCZMBkkBCED+MsyRgknZSiY5BFUh87BlqatCpg
      NhnQdZ10Oo0sy6jpFIoGho/y+bBPRAwGCTWdAsmALAko6RRpRUMymDBs9IumKqiagCxBWtUx
      SMJ6WRExmQxoaQXBYEBQFVRBRkJF1UUkVFLp9TY0GqT19zl0HVVZr5tkNGIQdFKagMkgkk4p
      SAbD+stRmkIqmUYQJQRRxGiQAR01nUZRFTyzd7l6J8nzL58m3vce768U8/3HtyIbTYi6gibI
      iFqalKJjNJkQUUkk04iSjCiAgA6ijCyJ6LqGoqhIkoSqqsiy4W9xIUxhdWYaQ0EtuQ845Wip
      GJOLXqrKS5HEjNXy/2i0FAsT46h5VZQ5LST9S6ykrFQUfHkvov4NCiBDhr8ef3SXyAwZNgMP
      FEAq9UgrRRky/N2TsUJk2NRkBJBhU/PIAoj5V5hb9v8ly/K5JH3zjC8G+dy7EzXJwrLnzzq+
      riksTdyj597MZ3xEnyWNb2GFODGmh6eIPoJ5Rk3FWPX4UP+MRw66pjIzNUY4/pW7dL44qRAL
      a3/EWLWBkgwyOTlLWv3jaeLBJSbn/7y+/jiPKACNuf6rvH9zmLQOaipBIqWiayqxeAJVSREO
      BgiGY6iqSiwWJRwKkUwmCQX8BIJh0qqOml7/PxyJkVIU1HSCYCBAKJK4v1qrpolEo4SDfiKx
      BJFQgHAsuTHwNRLRMKFQkGA4iqJqxGJRVE0jFYuTCC7ywY07RJMKqXgEvz9ALKmg6yqRYIBA
      MIyi3R+BSipOMOAnHEuQCq/R3NZOEmm9UfT1vPz+ANFE+qNjhKJJ1LSXtvOtrCRS68/h4zHS
      2voz7Xg8SSoZI+D3E42n7694rk7Q0tpDJJEkGg4RisRJxiP4/X7CsSRKKkY8raHrGol4HOWj
      No2iKAqdt5tZDSU3mihJLLJetnhKQdcUIqEA/kAYRdNIxaKEQiHiKXWjngmikRD+QIhkWr2f
      PriePrmRPhaPEwr4CUXiqJq+0T4BwtEEqpImFg0T2Cjvh62opeOEIxGCgQDxD8dEOEggGCal
      aCQTUULB4Pp3aCTne3i/c5JIOIqig6okSSSTxMIRQqH1vD7sIlVJEgz413+r6yRj63WOxFME
      Fodo65laL4OmkEgkUZUUoXAUXVOIxjf+DwYIhGNof+Rh56PtERZfYtzvYr9jma6VFLWRO9ya
      K+LxbSLn2mfZlR+nZzqEphvYsW83vTfOI+RXUWWNcW9JwSrEKdv3DDmrN+ieVdFjScofO4bT
      N8DQUhxVNXD02eepdBjAO8L/frONapfE/JpEcZEZb1jmWJ2B29EiHGPX8WSXo8fjHDz9FCO3
      3uXY17/LzPvXYJuDpdEB+ocrCE0P4k/qGO2FHNli5XcXB8gypCk//hLHarKBFF2X3mYkIKKo
      JnY25jA2s0zRPjMGIOGb5L3zrWiyRlpq4JmjJt5+rwNFKuK5ZyqYnB/HMl3K8qUhisqNSHtf
      ZCcDXOsLY1c8eBI6si2Px04cpzDLQHBpgqGBRQrc0NMxTP2WJoIr8yQlA5pq4sh2O3e9dTy3
      38SVC12UFYsMTYYRRJmG/Yc+0R1Loy2cvTpFTq5EOm8bj1eqtN2bQVMVinceQ+x+jx6tlOOn
      TrK9xMFk5zku94XJMesYaw9wNDfEzYFZdEWhdM9xtM536aeM6vwU84sJZKORI197Bn/X7xn1
      iqQVI/v319Jy5Sp5+bl44kX86D89TRYQHr7M/2oJUpWrIzjqONpopaXtHpooklu7D8v0RQaj
      Lo4+/iTbys0sTs8xPbHEbX8vjtPfpXD5OmNaHjNnWzE0FZJKGDl0qJqu25NsLRfpGp3HVnSc
      Z0+6ufbWe4QlE1FrGWfq7s8FUqFVrrQNsqXSyL/9qp///t9PcLHDzy5XnMEZH6oCO7/2Dba4
      P+lggEeyQ6vM93UQsuZidxoYaO5GcjUghEaZnJzC6a5kuKuZuRU/vpVpxub9IGRz5ImTVJeX
      kZ8lEw/7WFyZZGZK5vRLL3F4axEk4vTdbWN5zYdveYKJpftbQZoshZz85otU2ST2PPEtqrIj
      RGLrZzPZbOHg6W9xqC6PcDj6URQ5gJycYlxNu6g3++gdHsfv97IwN4kvopNKJTBkF5Br0jeu
      Jh4WFnJ56uWXOFJpwqM52bJ9OzsqcgEQJDP5zhxELcny1DwzU4OUHfsuP/zWCQqKiqgpamRL
      YxESBqr2b2W5o4vRwTEKC8zcvjeBz+9jbnqG1eB6vXJKG9i+cwflDhFbyU5OH91JSYETs6jh
      WZokXbAf2+pdJof70QuqmevuYtbjw7Myw9ic91OdIlPYeICXvvsMObNTtN3rYXphFb9vjanR
      GZKSwrbHnmVbcfZGL5up3n2cl795nNT0FF393cwsruH3rzE1OktSUtn+2LPsKMomnkySk1eI
      QQiy7LNw5psvc6JaZXQxCrmVfPPl56lKJwh9rDTFW47yjW98E2timuG7txiYXcPvXeXe6Cxg
      YevRE2wry0bARFVNGeWNezh8ahtr93oZn4xSUVOAPa+Kr339W+wtNLDsDQKwtrrKwed+wtNH
      qjCKEjn5LowkmJpdQFHvC8BkzcKgplhY81JqT3N7aJX8vCyGeu6wsOrDtzbH6Myn2/ARBaAl
      Q/QvxnAoXmZ8RozKFN6EkTw5Sc/ADCVVJdidFTz+4vf4zjOP01DiAFFCEuMMtQ6Qv+soB5rK
      QDNiMMaIRNJEAgEURGzuOp7/3j/w4umjVLhsH+UpSEZkWcZoMCDLEuKGNQFAEAVkWUaSJERB
      QBZlEvE4vlAIVQB0HdlgIL/uMD/6yY85uasBm8nIriMnqclP0dU2wvpDXhOCECQWSxMMRpEN
      n7wYemdHWVByOH50L3lmGYPRRCwWZmV8GE8CdPSPpjdSTj258VZuzeWwpTqbwpLtvPTjn3Dm
      aBP5dstHx/xwmifJEinPNH0rcPj4EUpzTOiCg4L8JK3Xp6jdVkWO083xr3+fl57/Gk3Fn3ZL
      KYSCEdLRCBGDTLYlhwNnvs1/fOkZamuKMQGyLN8/OagpguEoiUiIpMGA3ZLLoae+w3/8ztNU
      VxVhQkCSZDA5OHzsBMbgJAOTPnQtSjwRx+9PYTJJiAYDsigiCcInrHjRUJBkIkI8CTaHk21H
      n+OHL7/I0a2lIKxbRj5+okLXMefWYl69yYheQXm2QCoZIhZPE47GkOX1vpAkmWQqwtTwGP61
      ScbXTOw7fIjCLPkT+QtGK1V2lf7xNbbvLaKzd5HiQheWnHKe/PYPeOmZ41R/pg03+u5hgbHi
      UT9pqYDDR/ZRW11DoUUnhI06l8iqUMb+LcW4c6x0N19hNGxjV2MFyXiS4soaCrJTtNzoQHCX
      U2jNp2lLLu0XLjDhS1NQ28S+CjvNl68yTwH7mkoxSAIocbwxkeoqNwl/FGd5OVrUT3Z2Lljz
      cBp18srqMCohjI5CymwJbrb1Y82voHJLJbaVUeYsTTTKC5y73I6lcidb6goYb7nAqFfi4MnH
      KMwyImDBYY9y4+IVku7tHN5WSTKRpKioGKMsYjYbWRrpYdhvpLLAQtmug6y1vc+kXsi+xkrS
      /lGmQxIO2UJxXRXZQgJzURP1VVXk6XNcvHADXFtoqHRhEAVEQWR+sJNUXgk2cw41taUk5wbp
      GA1TUeXGkV9KqUPGa3RzuLGMvHw7fdcvMOo3sHVrPWoijLu4ErtZJrQ2Tl/XIANTXracOMnB
      pmJG267QMhJmz8HtGOIhzEX1uKwbYp4eoHdwhLGFJAdPHmdHbQFDrZe5NRph36HtyLEglqJ6
      XNYk3c3XCFpKOXxgL2U5aZqv3CDi2sGxLYXE0gI15QWEvQnya0uxAsnVUS7fHWNlaob6o0+x
      vbES38ANWofWqN2yHYsWw1ZQRr59Y/phlpns6iWruIL4yjy5DbupcancvdjG2OI0cvFO9jUW
      kEjoNDRU0H31CsaavdSWFRCcvMPIqkKJqwhXkQOkbCqLnYBAtkVlwW9h76EG4gGVnbu3U5Ev
      037lMsPhbA7uKGT8Zj9SlZ2xa0NYqgox81eNC6Qy1PI+t4YWEWzFPPHUE1TkWR7+swyfYWHo
      Orenc/nW0zsfKf34rXOMGBp59kDNl16W4MB53lqu4T+drn944o/hH23htx0BXnzhDAX2Vd76
      5zaO/IdvU/xXHhKZwFgZNjWZhbAMm5oHPgb98CYkQ4b/08nYoTNsajJToAybmowAMmxqHlkA
      K2MdXOsY/8q2/QlPd3G9b4HP8UdBMkBL58CfdXxdiXHnwuu88W47n2/VAogx1NKNDx+t52/h
      fbh7jmRojd57o6T/jHeNdDXN9UtnWfDF//Qf/6VRA5x95Z/5w53JP+lnq/cuc7FvmOa3P2Bh
      o1qqf4LWgRVmuy/SPPTFjW6PwsPjAgGQZqj1EvdmUlRtr0NbHWU6bCLXmKBvfJ4sMUZ7y01G
      VpIU5FkZGe1n5N44yBpdLc0MznhwFBZDaIaWay3M+dKIFhNyZJHm5ltMBaGsMKK9ppsAACAA
      SURBVG9966XoKm0DY8z2dbAUE1gYusNMwEC+QyIhmohM3KNveJCxhRB5eblMDvdicThZHR7H
      E5nm97+7hqO8CVbuca21m6Q5H7c9TfuVS/RNeXAWl2KR11clAwvD3LzZynLcgDk6yesXO9l1
      4gy1+VZQE4x1t3Kzo5+4KY/CLJU7Vy8zFjTgEpd46zcXEUrLcQiQ9HnQnAUYUj7Gx1dQwjM0
      N98hKDhwOe1IAiz0XebN873kl+SzONzN6FIMLTDNzdZOvCkL2eoC0zEHeSaV8fFRBEGhq+UG
      I0sxnK48eu/cJL9yO067kdDqLKOD97jTNYhmz8dpjNPR0szd4RVcZQV4h3rpGhwmYXGSbzfh
      XRhjZOAeHX2TmPLcZIsR7jTfoGt0hYLyQtYGuukaHCaYTjLcfotpv4bL7SS2PMLNm7dZiEk4
      zQrDgz10d3SznLJSVuBAIMVsxwXe61E4eWonawNttPdPIjsKSK0NcbezD5/gpDDXjKBG6W29
      we3uYYScYoSlTvriWaSHJ3Du2o3TlGD8xnu80RukUJumZyqAd2kJY24BFsVLR8tN+mdDuNy5
      +CZ6uNHWR8KUizsLhjtaaOudwOIqwWGRQQ0zPLhIVp5AX1s3Qm4JnukeNGsBFsMn3yN/BAHo
      pFb6uLNWwtdq/LSv5FNm99F+Z4Fca4SeiSDB0WYWVCf68iBLaQvjrTfJ23MAcaqTebEQU3CU
      yYiVtZ5m5Jr9JIdusWJwMNVxlYQln8hoB2HXVspzjOAf5zd/uEPTwXo6zt3AtXM/s13XEFNB
      7q5BoOcaesUhhIVuAnIeI51XKarbytSNNqgoZNGjcKhM4HzrCO4CB+NdXci6nxuTGpUmH4ti
      EVX5FiDM5bcvkLdtH4F7rQStbpRkkl27d5NjNRBdGaG5f4kSl053ywK5thm6fDkYV1bI3VrK
      2j0vDSfLuPu7TnJcUfq9Tpyhu/QshOnvHCKruIDZwS5MBXW4soykE0FWQjIVOREud3k5sauA
      9q5JXCX5THS14igt4m7HAiUFUe50LBOeaWNGcSN4xplLWUj7Zimq2YHTbmR1so33b4c4tsfJ
      zZsjJH2jjAUl8vQFumZ0lMnrLOcdZHd1PmaDxGzPJVpmzRysguu9SwgL/YxEDeRq83TNCqTG
      r7HmPEiOt53haC7G2BJCtove6xdxNu4m2HeLJUXiVnMHBx7bRt+lexQf3IodAVn3M7ZsYatz
      meuTRnZVmbl5ZwhpdYhhrYwjW8qxmCRCM120TSYoyYvReTtAQX6IBT0f49IqhXt24zQJSOFZ
      RtVKGg0LTKmlNOWGGZhTSMzdwW+toTA5SttUhJnxIfJysxldiZEfHad5JEBBdoLubh812yox
      CQqjzdeIm3TeO38di9vJVOckpTsascmfFMAjmOFSDLW3M3SvlXO3B+lruUnaUo6oLjI6Ooqz
      pBrf6jyaqmFxleLOMoE5l4oSF2ajlURojXA8RTK+RiiYR8PWGqprKzEpafy+VdS0SnZZDXn3
      twfD5Cihpr6OSncuZVV15DvEj8xPRquFyppGSgpy0BQV6WOPbA0GM8YsB4ZUkFg6TTqpUlhT
      i7N0Cw1ZIYZnvKjR8EYgLj+xaBF1W6qpL3cSTQhkO7JxWNaDRGm6gKjE8ARjJCMxfN4VCmr3
      8sx3nqTYZsZmziIry4yASP62fShD17nbs0ZdqYX5lA6pJK7SWrLN6w1utNhxOLKxGiDHXYo7
      NxujkMbnDZFMhVEd23Bpw9xrv4ulro7IcggEBXOem8KcrE91ioXapgaqmupwB/yM+oKgplGM
      buqKbSBCcUUtORt1wZBFfWMDdQ01mAJ+prwfpi+grtgKkkBxRS31W/eSm15idilMJOEhreVR
      U9fAtmozq/4UlsJy6msrcInChp9KxJZlx2bLRg2v4azdQUNNPUYpRRoD7pIS8rJMCICmiejJ
      EL5InFQ09oCprITNbsWW5cBoMVNcWUtlWTGyniQUT1BV28CurTX4Yjp7t1QyOzVNfM3H9KoX
      RVFJqnZqavMRNEC0UVVj5PatcUob6wj1NBMsaCLP9NkoIg8VQDK4xoxYzX/9v37E93/83zjV
      oDPrS9Lg0OkYS9BQ66akrA7ZZIB4kORHNUuzNuvFnO8iy2JASdspKAnTdrWFrr4REpKJQncp
      RpuFdMCDIv7paw+iJOEwCnR3dDC27EWTZSwJD14hl2yDAYvDSmTNQ9Q3y0rKQU1NHuHV8IYb
      1EWec5G2q7foHPNS4P6kWSoe9BLVTTizshDlFNmF1cx3Xea3v3iDmZgBSQgxvxBAAwRjCUXG
      Se7pFTRWl9FoFRCtDmKhVRRN3CirTNS7gDe+4dGP+fHEBVzOLGRkFAUqSqy09aTZt7WEstoC
      JIwIqTjx5KdfhIkydLeDliuteIpL2VPqQpCs2IUoq3H4zGaziSC9d2/T3NyJXlzK1rJ8EK3Y
      hcgn0nsWJkiaiyjOlYlFzWSZvdy5eZ2W4RSVhZ/vUcgprcXTe43rrW2okgOT8eP9qRHxrpEy
      ZpNns6OJSZQHvdtjMhNemvnMiz/uXAf9d27ywa0Bylx2xmdWKK2twBCJk1tejCwbcFhV1jwp
      pI1ssysbWO6boLq6nKmRCRp3VkB4hRlPjJh/iaXAutvhoesA6UQYf0gh35WLKOjEfGtEJBs5
      hJkOiNRUuFEiHiYmZkib8qmvdLO6tIarrAQxtMS9iVUcBflYJTtZ5igjw1OMj45Teugp9hUJ
      jE4uImYX0VRdtB5YKhFkfDlORaUT78wy2SWlRFZnkSWJIFZMcR+2oloILaGYcpDjy0wuhrBb
      cymochGZnSKRVYojvcLkUghXRT0VLhNT9/rwpY1UNmzBaZMRgKhvgfGpRUzOcqqKc1jzeHEX
      FGGUBLRkhInxcWJyNrkGkbzSQpaHB4lZi9hW68YzOUbYnI0cVXBVlZH2zhAkj/KCLIIr00zM
      enAU11JZnIskgJqKMz02ijHfjaYaqSi0Mzc2xmrSiDtXxpZXjk31M+NTqKssIh31MTE+Sdro
      pKa6DP/KHDnuMuxmmbn+C3xwJ8buXdWUVNdRYFOZGB0noFho3FpDanka3VlH/oYZbvjam7Su
      2dhRV0FlXS25hhQTo+MEVQtNW2tILE1Dfh0OIcD48BhJUy41NVWI0WXGp5cw5JZS7baw6I1S
      VeZkZdKDo6YEC0A6yMyySklJFssTw6yEdUprGjAlVoib8inKWS+EGg8wPDqJZnOSKwtYrRAW
      s5ADQRyVldhl0NJBBoaWyMsxgL2YfFMCb0THlSUyNTFJRHTQUFeO4ptnbM6LvbCShmI78xNj
      LId1KhsacW3sNKoqCaYmZnCXFLE6t0xhfS3m2CoLyWxcUpAguRTlmv+aC2EqI60XaBtewlm7
      n8cPbcduzAS2+nPwLw4xtmbjwM7yR0q/MtrDklTErpqCv3DJ/v7IrARn2NRkFsIybGoeeOeZ
      TCbJXBgybAYeeAXIDP4Mm4XMFCjDpuYRBKCjq+vxVfz+APGkgqamiMXux2/5ouhamlAgSDy1
      /vxXSSVIqxrxaBTlLxqnVyMRjX7Wn6OlSaQUlGTso9g6Dz2SmiaZVlBTcWLJT+95c58P4/J/
      VWhKklg89WieLm091v5HKEkij/pbAF1fr6/6yfqq6RSJ1Ppx1WQMv9+PfyN21OehphPEEn+8
      bTcKTTKR+vwAah/jEVaCFaY7rvH7cxe4dOkC7128yfxiP+/8toX4o42Nh5Kcv8Orr11kYm09
      2MZ4+7sMrUW4/Ma/M/kXDUYX4uYvf8Ng6FMfr/bybvs8oaVRxlYebo0DCM/1cL13htX+C7zT
      NvFH04313mRwLvgFyvzFSAYWGZlc/XxT4YeEZnj3Rv/9/+db+dnZe48QOe8+o3dvMbJwvxP1
      dIS2P7zO+53rbTTd/g6vvvk+11o78Txk29HY2jQj8w8Ob3KfVa4/kqFxnUfYJTLN0kqEqh17
      qC90IosCQnqS0Fw/v/m3KaxV+3hhZxaXL99kJaxSe/RJyr293JoLU7ZlF+alPoaXEpTtPMrJ
      PbUYJYHY2iTXrt5kPiSw8/ARYv238erl5NrsEJrn1p0+tFAR9qCHq+/+kuvGbJ555jTR8Rba
      +hYwF2/h+ScPYpNFYnPdvHN7HCHkw1Z9iCcOlNBy9ixzYY2avacoUwZpH/ETS2hsP3YC40Qf
      8p7HqA73citejASo0SUuXLrMtD9GyZYjlAe66Ri1U5E0EHC5sCy0cbN/Fou7gROPFdH86xtE
      bTrGoh1858kDmCWB6cEubg9q2HcVsTLWwqsjl3DvfpEjpX7eO9tGXLax78Qhhq+2MFtqYGfV
      8fVwjKOdXGu7R8pawnMnGvng2m0MiRBxWzUvPn+Yexd/z6hXwFHkZv+2BgZaLjEXEijfe4Jj
      pQoXL7eSNBqR8nfz3HYj58/fIICdw6efwbx4k0t358mr2M6ZJw6TbYBUxMPcosZq7wUWFYm0
      4ODMs89QkWdCS0XouvEB3VNeDPlbOV7pp//2OHX11eyp/HClXGF16DbX2/qRcqo49cRjBPs+
      oGVwBTmvmjMndjJ08zxjHmg6eojFliusFELNDx/HAvhmx4ma7KybNJIsL0fZvv9rNBXnkp+1
      PhzjgVkun72KN6lgdpcgr80Qyt3JmcYUc8tB5u5dJx4I4Unn8O3vHOHOuUEO/eBJVm+9hzeZ
      4EbHHDkHyhFGO+ibj1C05RBnDjasL7R+iodfASQLex7bj74yxZ1bV2m+M0wsrSPnVfHNF58k
      6p0nEU9ic5ZQZInSOTBFMrJEduMTPJbv4f3bM+gkab1+g7XouoNkangAS90J/sO39zPRMUnN
      tnq27jtGSY4RskvZ01TOvr27MFmyOfjkt9iel2RmbpzrV26RRGem7QN6V9fPFloqRgwXL/zo
      R2T7ehi408ya+wQ//M5TLI92sbbqx1h1iB8+tZ2BoXFioRDxtIqWDBPaWHJXkglkRwHlbiNj
      nZOUbKuhbtch3OYUocAs3cMKz/7DT2iwehgYnyWo2Hn2619HiCyRSKkgCJRUN7Hr8EmqcyG7
      ZAff+9GT+HtG8CfiOEursGlBBkejNBzcwckD29bLngxz89o1/GmB+NQtLnUvEPKpHPvuj6kR
      J5ga6GZc3M73vv8sYmCFRCqB0VFCoV2hu3+UkYF+3LvP8Py+cvxRPwPXLjEW1CC2wLVr7UyM
      jyPlVeLOFj7aK0tNxQiGo4QiYbadfIndBSpLnvUrkqYqKLKdypIclu72I5dVU7br8McGP5Dy
      cv2DZgKaAe9kF6390yQ0I2VlxXinRpheXmJ20UNRWRlmyULd7gMcO7KdD40UzppdbK9wse5J
      0ymo2YUhNENX523GF9cvxZoWZzkq89RTp/Evezn18gs4lxdZTkYIhmOElkNsf/77HCv0MLqc
      JugPowDxaAh77VZ21+2izLjMlZZR0BO0f3CNlT8SaPThu0QqaTwRnV1HH8cqKly78B4rgWKs
      NjtmoxHZILM8O4ovlce+LU3MzK07S6xWK4IOpbse51un61jz+HFumLN0HSRZRJBlZO3BO7nq
      uo7BaMRmsaCbzMR1yC3bxtGnz6B6VrA7P2aCs1gwICBKApqqIpllRFFCFEEXJSwmI6IooiNg
      MsmkUwqx2IfxSHV88xOsRASO7WxibcGzHvDqo50lNXRRRtoIyKXrOlaLHbPJiMFoeEDJwZKd
      jclixqwrzN7rJ5Z7lG1NacaCn6qrDoa8Cp46/jSO1ApxReXcko8sixmzWUDTdESDjChIGAwS
      kcVRpsMWjmxpZGE0AYjIsoQkyYiijqZmcfS5M+zMTrIaljGni8gP+bjT3oW9ZAt7K7Pvd7zR
      iN1iJW0yEd+oayK8xujMGvuO7MQ73LvRBOtl/ujcqWvIjgqefvEZsqNrpC0ira8tUn7qOLW+
      IEZLDkdPPsHS7D0utsR4uupzdurVdGz5FRzaU8hC7zUW1oJQur79kcVmw2o2YczNJ9tsxCx+
      zOFktOOwmohZJIIGIxZBRUmliMVS2DcaVtcFyrY9xtNntuFZCeKUH3yuf4SbYI3QwgBv/epV
      fv7qr4ln1VOYZ8NgkEAQMcgy2Tl5hOcH6JrxYE6kSMnrG+TJhVspi3bzxutv0z8XRN9oxfKa
      GtZ6LvLzX17Hua8JhygjS/cvTzaLie6uHlTBgCCAKEtYbPlUujTOvfkGV3tmPlHCxeHbvPbK
      L/BYGmnadwTj2Hlefe1dbEWNZEtJ+pv/wKtnO6mvq6W81kXvxd/TOuJFlCQkg5HsnDxUzwRt
      vYvIlgQpSz6hwXYWgwqyrZim4hjvvPIz7q4YqK0sRDbKwLogPiy1xZ6NZ+Q2k8EPN9kTkQ0G
      nG4X832tDC3GEMQUViN0dvajAaLZxraKPK7+4Q3eudaLJkoYPoqKZsBSuoNCXxv//uvfMRtI
      YXLko60O0ju8RFLVqa6rYeLWe7xzqZNw2kDj4QZGLrzFG7+/jDclEvNM0HZ7AIOjmPyc9cBU
      wkYesry+SZ0oyR/ttWYw2cgiTHvHEGlTkhhZWFaHuTvlXx/EgoTR5mZXk50rb/yG95v7Seh2
      crJSdLe3E07LpNJxpu51MjgToaKyhCwr9LXf4+P7uQuShCytD73V8Xb+/Wf/yu1pjZrqD60a
      6+NKEEQMsgSCgGyQEUUZWZaQDQYEQJQMSEYnlaVx3vnFGywlTEhiDunQIDPxXNzaKG++8Q7d
      015ia1N0Dk2TWB2jbWj+fln+3uMCRSZu8WqfwH/7xpEHfj9y/U2GbAd4YX/FAzch/ZsmGeBu
      Zy/eSAh/0sqZJx8nx7xxztJ1QquT9A9O4VtdRm44wdO7yr7a8v4d8ncvADURxhODgrxPe+bX
      iYd8JEQbOXbT358AlASLi8skFMhxF5NrM97fyFvXSUT9rK4FUCULhUVuLIbPGKEzPIS/ewFk
      yPBFeOBNsChmFogzbA4ydugMm5rMqT7DpubRvUABPz6fn9iHXqDol+sFCm7sdwXre3ete4Ei
      n7tR2hdHIxGJknqAFyieXPcCxZJ/ghco9XfgBUonif4JXqD4J7xACcKxL+IF0tHSCQJ+H8FI
      HB1QkjH8Pt/6XmgPGVBqKk70UbxA8eSX6QVKM9l+mbf+cI4PPnifd89fZ3ahl9++doPYlzQ4
      E3Nt/OsvzzO2ur4SONb6NgOrYT749c8Z/4t6gYJce+UXn/UCrXTxdtscwcVhRpcf0Qs0c5cr
      3dOs9Jzjty3jfzTdSPd1+mcCX6DMX4xEYJ7hseVH9AJN8fbV3vv/z97kf73b9yd5gYY7mhma
      863/oya4d/Usb519j9d/8xZzkSQ953/LG394n1+/9jqjK58f+Cu2NsXQ3MMCZq1w5e22L9cL
      tLgUpmrnAZqKneu7uKQmCM728u//MoGt+gDf3O3g4gfXWA6r1B9/hgpvNzemg1Rs34tloYeB
      xQQVe45xel89RkkgujrBlUvXmQ3C7seOEeu5hVevJM9mh+AsN9p6UUMlZAc8XHn7Fa6Zsnnu
      +SeJjTbT0jOHuWQ7Lz5zGLssEpvt5Le3xhGCHmw1R3nqcCnX332X2bBG7b4nqFD6aR3yE0vo
      7Dp5CsNYN4b9J6gNdXMjXoIEKJFFzp3/gClfjLLtxyj33aV9OIvqpAGf241lvoXrvdNYCps4
      dbyYa69eJWrXMRXv5rvPHMIiCUze66RlQMW+p4TlkRv869B5Cvd+m8fKffz+3RZisp2Dp44y
      cOkGM6UG9tQ8jq4pLA7f4fKtXlLWUl44tYWzV25hjIWI2Wv59ouP0ffBWwyvCeQUF3BwZxP9
      N84zGxSo2H+Kk+X/P3vv2R7HdaZ//qq6q3NuNLobOREgCZAgQYKZEkVSNCnJkseaseXxeMZj
      z+6+2H2z32A/wl77n2sn799jy0kOylRiFANAEiCInHPnnHPYFwCDkkVrPPZohPsVGnWqzqlz
      6ql6znnucz8l3nnv+iYXaD/f2CPx5luXiKHj2JnnUbqu8O4dF9aW3Txz9hhGCYqpEGueMv57
      7+AuiRQFE8+88HVaLCoqhSR3Lr3N8GIIRe0uTrRGGb0xS1dXO/1t5s0HooRv8gYXr48hM7dy
      5uwJYiNvc3XCh9zazjMn9zB15S1mgwLdTxzBffV9fE6Bbd8/hVpU0HrgNHX5INfevkwyG2Qt
      6eRb33sa7+B5Av4wO50aMrFV3nvtgw0ukL0eeWCFuHkvz+4ssOaNsT52gXQkSaho4qXvHGfg
      jQmO/s05/NdeI5TLcunWKqbDLYgzg4ysJ6nvOcozR3Z8US6Qhv1PHgL/AgPXPuDSwBTpYhWZ
      pZ1vvfgMqdAmF8jWiFOT5tb4IrmkG+POszxpC/HGzWWq5Lh24RKB9Ma7Y2lqHHXXU/wvLx1k
      YXCRbb072HXwBA1mBRib2N/dzMH+PpRqA4fOfZvd1gIrq/NcfP9DslRZufEWI/77XKAsaWy8
      +MMfYowOMz54haDjKb7/nWfxzg4RCERRth/lb5/bzdjEHJl4nGyxTPljXCDJ6KDFrmB2cIHG
      3dvo6juKXVUgEV1heLrE8z/4X9mpCTIxv0q8pOf5b34TUm5y+Q0uUENHN/uOnabDDIaGXv76
      B+eI3J0mks1ibWxHV44yMZNix+E9nD68e6Pt+SRXLnxApCCQWbzGu8NuEuEyJ773d2wT51mc
      GGZO3M1f//ULiHEf+UIWpakBh77E8NgsM+Nj2Pc9w58daCGajjB+4V1mY1WqaRcfXBhgYW4e
      mbUVu0mk8oALlCaWSBNPJdh98i/ZZ6/gDjzKBdLT2mDGc3sUqamd5r5jjzz8QCHEpbcvE63K
      CS8Oc+3eErmKguamekJL0yx7vay6g9Q1NaOSaejad5gTx3dvcIEEGXqziVIiQlWrIekPkkaO
      JBPRajTk0htfgGo5gzcl49lnnybiCfP0d1+kxuvGm9vgAsU8CfZ883uccAaZ8RaJhxMbXKBU
      HH3nLvZ19dGs9PDehzNQzXHj7Qt4i5/ONH0MLlCBUKrCvuNPo5GVuHD+VfzRBnS6DT6MXC7H
      uzJDuGDlQM9Ollc2uUBaDUK1QmPfab79tS4CgSg1j3KBZDIEuYS8Wvmkv1bdKCMpFWg1aqoq
      FbkqmJt7eeLr5ygHfJ/BBRIpl0vIVBIyUYa4EetHrVIgCBshdZVK2uACpbMP6D6RtXm8aZET
      e3rwuwIbPu79g5UNLpD8PheoUkWj0aNWKlAoJHjUI978U2M0odSoUVaLrI2PkrEcZ1d3gbn4
      BvfowRnVKpK1hWef+jqmgo9ssczrbiN6tQq1UqBSrSCTS4iiiCTJSLpnWU6oOdbTjXsmS5UN
      qoBMLkcQK5TKBp74xjPsNeTxJ2Soi3XYEhEGbt5B39BNf6vx4cBLCrRaLSW1kvLmvWYTQWZX
      Ahw4tpfQ9N0Hc7xPcIFMrTz/4vMY0n4KahnXf+Ki+cxJOiMxFBozT5w6i3tljHeupvh6+8Nk
      gpTzuNYDWNv7OSWkeHc5i66cIV2skEwmUZt0D9qn0enQqFQoLDUYVQpUjy7NK/WYNErSahlR
      SYla3OACpdN59JvtrVZFmnY/ydef2U3IF8Mm//Qg4WNNghOuCX7+o3/hH//lR2QN23FatEiS
      HAEBSZJjMFtIrI0xtBxCnb/PBRKQO3fTnB7mpz95hdG1KNXNbmze1kHg7nn+8X9epOZADyZR
      vuFabUKnVXJ3aJiyoEAUNrIFqnU2WmvLvP6zn/L+8AqPhnXd0zf58b/8KwH1DroPHEMx9yb/
      /OPfoKvbgUGWZ/Tyq/zr67fp6uqkeVstd8//muvTIWQyGTKFhMFipRyc5/qIa5MLZCM+eRNX
      rIRc10B3fZpX/vkfue2V6GxzIik2MjBucIGEzQEzEJq+wWLsPhdIQFJIWO21rN+7xpQ7gyDm
      0SgEbt8e2+ACKXX0tli58OpP+dUHI1Rkss1+BZlcgbphL87odf7tR79mNbrBBSr7J7g75SJX
      rtLR1c78tVd55Z1bJAsKeo7tYPrtX/CzX79HqCCSDs5z/cY4kqmBGpMKAEGUI8llSNInuUAK
      lRY9CW7emqSkyJPBgDowyZ3FyIbRijIknZ2+bj3v/fTfeePyKDl0mA0Fhm/cIFGQUSxkWBi7
      xcRyitbWRgxaGBkYe8AFSrvH+dE//wO/HozT37+HNluIl//h77k6k6a+3spmI5EkCUEQNrlR
      AnKFHFH2sO0CAqJMgUxppbUxwyv/+jKenBJRNFOKT7CSMWOvzPLzn77C0EqYTGCJW5NL5Pxz
      3Jhcf/DsfOnjAKmFa/zLCPyff3H8U49PX/w5k7rDvHiw5ctHhchHuXPrLqFkkkhew7PPnP4I
      FyjuX2R0YpFwwIu0/STP9T2eTtAWHuJLbwDlXJJgGhzWz+ACxcNkZTrMX0ouUBa320u2BOba
      eiw65ce4QBH8/ihluQZHnR3NFhfo98aX3gC2sIX/CD51Elwu/6dGn7awhf8y+FQDKBY/L9q2
      hS3898AWF2gLX2lsGcAWvtL4XAMoZuIsLK1QqkAptMClgVGShSoZ/wLz3uQjJatE16eYWfIw
      MjFF4WOEr3zMhSuS/8jv8Wk3v1sJ5uG1464lQvlPztcLURfDsw/3eFaiKwzN+j/Cdcn5ZxlZ
      +U8lFQFFAotrj81BeYg83sV1PosFU8nFGbl5iZGF4O/k7yRCawQThd+7doB8cIl7i0EivkXC
      mwv21UoZr2uZzP1LljLM3Bkn9rE1k2ouwJI7+SdLnvgfxafmCCs9kr6jmk8yODJNfVMD7lvn
      +WA+RlNTE9HJu8T0tWgKUbzBKBW5gujsNUZ9IouLs+zY1kY6nUepViJUSqzcOc9tvxKHRiAa
      i5CrVEBQIBbTRONRYqkiKrWKbNSHNxClKlehkuQIQpVidIVr0xEaLFqqcpF8LEiirEAqJfCv
      zvDemJcGnYwsSjTyEsmSAp2Qxu2NINdoKSxf582ZIk5VibJcg0ohQ2BDgyRo+wAAIABJREFU
      IsTvcROOZ5FUSrKJKJFwhJJMIhv24oskkKu0KOTiRkKNeJBwKEIomkahUSMUUnjcHuK5KmpZ
      nIu/uoq8o40atQKhlMHvjxCNhshXJFQKkXjIiy8QpSxTIitmCIdDxGIrXH1zDOPONsxKCSpl
      EiEvvmAcJBWxpdtcGvezu3cPJo0cSjn8HjeBcAJJq0chE6CcY+ji66xU6qiRxQhGkghyOdGA
      h0AkiaRWk41EiSaCRGJZVDod+XgAjy9IWa5BKRRIFyrM3HyTsLqLJquKajbC+bdeR+XYjiwX
      JBxLUSzJ0Bok0vEYIX+IgqhEo1YyP3wdrC0YlCLlYo5YOEgwGCFbkaNTyUiE/Xj8EVBoEPMR
      /OE42ZKITq2glE8TDYUJhCMURSUaSSAW8OILxZGptJAJ4w/HyRSr5KI+ArEMkkqDWM7g83qI
      ZkqoVRLxeIRYMEgoUUBv0CAKj7fo/blUCLlGh6UK8UyQqZCFY9vkBAJ+ckU59TkXH9yYxaiX
      4ZGaefKh6gau2Tt4K/U80a9HrJRJxONECi7GPviQaXkb+5sKTK+p0MXGyNh3okxHadp3kMjw
      RXLqGio6B8+dPIxKDu6FFZTWFmJTA3hrt5O9+SuWap/jKc0IM0UHGe8yE1MJvBETz+0XuDCl
      oqe0hiuXw7zrDMcECK/OMcYCKdk2XnimH7UMVsevM7iURl1KYthxkMrkFXy6DvY3S9ybj2HW
      y5lbC/PkkT2oZDB99bcMRizYiGLtPYk2MIavIJENBeg4fJBIPEwkmqZi0SGm5vnJjwbo7G0k
      lq5yvL+NoWsj6IxK1nFyxhHlrbEEfTu0BGMRYokc6NXkY0u8+/Zt1CY1UdHKPkOAVDaPXKFE
      oEJg+gYXZtLY5DFGPU/y9aPNyMs5IqEoMV2cy7d/QdZxjG0WkQVfCjMxRpr3Y7x7iTVnO7qI
      C8fxsxRuXiFVayB/18WxjjRXF9RoIjHU0RiVqhFyCfzBCH6fh4HBV6nr2sP6sJ+932hn8PIM
      Hc1WIjEdZ//8acx6kbU1Pw099WSiy/zqZx9Q39GEPyDnmWc7GRqcRqWSkZ320KaZ4b0VK08d
      O4TdrCXuH+MXr0zQ0mXBm7Xw9YNWBkeW0ahhcrGDbbJB3lqp5chOE0vja6hMMkxNh3HkRxjz
      i8hyMRp6DuMeOk/J0kLevca+7/wf7LI+1vP/GHMAUcX2ehmj48tkzTXsbrSytLgCkgqL2YxF
      ryQS9LLsDj48J77K4FiQlm1NGxYmV+Kw19LS2Y1Jladz30l2ODfEllQ6O4dPnuFYbyOhQByN
      skwolkFnNCJSgSpEkkn0Gh2NHXZWxuaJ2JuwuIYYXDHQ3aJC39TDmXNP4yBCpghkI7iKNp7/
      7l9zZpcTAOeOg5w+dRx1LvRAC1SjN6GRFQl6VvGEslDQ0HP0AJrYLDMrblZX1vCEohTub0oQ
      tXT1H+VEXwvJSBh3TuLk6XO8eLSBcX+BemsLbe32B28VW+seTp85TaumTCxXxWJUEw35WFoP
      AEXs7fs4fKSfltoWmuvNCEDet0y18zjPnTuBMR1Fbm+hpaubus04n6SvxSDLEwz58XkjG26R
      wkRzi5POtiYkrZk9B47SVm9FKysSDHpw+WMgKNhz/Cwn+hoIRcvojeBzxTA5jAjlCqhraGuw
      0dHajFwE0dhAZ1s9rQ4jcmM9B/fvwbLBpsDZtZ8zZ1+gTbuMJwY6jYZY4r7co0htSw+nzn6N
      Xl2EockFZmfnWVpxEYp4SKShYccB9rbbNstLNHT18fSzp2iOhri3PM3c3BJLKx4iYS+pIjR0
      H2JfdwuKYpxEXobBoMQfCND/1HOcPdjOitsHciv9Tz3NEzsUBD9Ob/8PGQAC5uZaZq4OojbX
      oqutJbc8SlJRRyawQIhaDvX3YlTwkNSmb+TwXjvzM8sPN82IAqVigUoVhEeITflcDH8gSiAY
      QVIKSMZtHO5rY2F6ksymMK1aUpAvFJFszajc06TlTehYIKCzUyMCoogoCA8jvQoVmmKa4PoM
      18ZdG2QuUUB4tAywPDuJpqGXvp4m5Bvp7hAEAb3RQkvvCV588Rm67Abk94lUgrBRjwAyuRx5
      IUMgFmVxxUuN2QBCmWKh/ID8lQx5CUUjhNN5CpE1fAULhw7sxaLc6Kv7baJaoljaOE/U6ij6
      PIRCIaLlKpqP7M8usjw6iaJlN8f2dGwQ9R5xvoul0sY9VMsszcyiatjBoV0dyKlQRUAUxc36
      slQVTRx/4gDBudv4kw9d3mKx+EAev1qpbGxmEQQe7bmwz0085iWY0KFVQyFfQKlQbh4tEw36
      iYRDeJIynDUG7Nv7eeml59lR14BWzcY4PHBRioT8fmLBEAG5HLvWSMveJ/jLPz9Dc60DjQSi
      IFDJZTF39bOnUcfk1BSCICcQDOLx+lGr1I+Mze8X7//cOQCAoNKjoET7jh5MRgN6WQl7x27q
      a/SEl+/hr5hotTmocRpRaW2YjRq6e3ooBaNonbUoBFApFSzPz6G11GOrb8GiLFEWlWRc46wG
      kpT0zRzr70GRczE86aZr72Ha6syIIqhlGaa8BTpbmlFLOXT2ThqtBmyt26g3KinKdbQ4TBTy
      Fax2K6jr2dtR5eatVXbu6cWsrFBW2WiyqiiWZdQ6bMhF0KpF5kbHkGwdWG0W7AYNpvo67A3b
      KC/d5PZMgM6+g9TqN4SYioU8GqsDi1pEMDjZ12rk1ofXCep28dzhTqSyj9WwjAaHCVnez7Ur
      E4TTIRp3HWd3ZxPJtVHcOS1tDie2ejNKjQ2n1UohsUyobKTBqkPS16KITzEw7mXPsRPUmxRU
      5RocNSZAhsmsZHrkHmlrMx0aPbbGGiQB5NUs02sJmh1GbPWt1FmVzI+PUzA30mgwY7HosTY0
      oROKoKmnQRtm8M40dbufpLvRQFVlocUqY8GXobXehkwUKMZc+IpmHBYN9U4n5RLo9RVmZxfx
      rwZoOnyanQ4NyzNjWNt7qdFJFNIBxkfG8PgT1PYd5XB3B8rEMlcG5qjfe4BGnYDMUI9zU6gr
      G19nfHiG9UiKHUePs7erjbx7gutjPrYf2IdNUUY01lNvMxNfHWbaX2X/ocN0d9SxOHQNl9DE
      yQM7EKpVauvqUFFEbm6kRvN4hvAnlkVJc/2116k9/pd0/i6frZxjZmgYw+6j1P3ubJ3/dZCY
      4ZV3Ipz79hE+naX05URs5S4Xl6q8eHLfxj8y61yfyNG/bxtKGaTD81wccPP0106g/nTlyI9e
      z3uP6yNlzpzdh+JPsCi/pQu0ha80tgJhW/hK41O/AFtkuC18VbBFh97CVxpbLtAWvtLYMoAt
      fKXx+bpApRRXX/slI+4MclHEseMwJ/rMTI+n6D+2C9Vj7MKLLg5wdVHLM2d2o/j4wUKCy3dm
      OXKgD6UkA3JMXLuCdtdZWk2fcrEtbOEPiM83gGqFVMnCN3/wXRqUBc6/+R6Z0gEkSU5s9R5X
      bkyw+8yf40iN4tftpUUVY96VoEaK8OHtJfadexFzPkMsISMVWmbg4jXy5u2cfGIfJpWMZHiR
      62+9QaokYBLDhOMido0cQ3yJ8yPrFD2rWHtPs7exwuXzF8ibOjl58jBmpUC5mGfyzgVWXGlK
      tk6ePbYD/9Qgl++62HbkFH3GKJfHlsjJ6nnhqV7KxRhjN26xHIyiae7jTH8L7rGbXBn10Hnk
      NHv0YS6PLZOXHDQVF5kMyzl8+hzNujS3L19iJWfgiSePknKNsLbowVe28tzXTzyQe9nClw+P
      5wJlVvnlv/4T/+8//X/MBMtkUz5mpha5O3iHbX27cM2uIWiVzI5M41kdxZeC8aF7bN/byers
      Ohv7ywoMnv8NYWUdpfW7XB1bAUCrc+Do2UN/vYzBu16OnOojsTJGIOBlZCbEvrPPEhh7l6Hr
      V1gV6rGKEVYDG6TjarnIvaFRmvqP4QiOcGHwFm9en6GxyczE+TeYcq0z4ZLx5JGdCAJUignu
      3Fui9+hxhOnb3Bq7w1sDCzQ2mhg//wYzrjUmPBJP7lEwOJahqVXP2sw683cvEzDu4USXincu
      3WJ1ZJh88z72aFa4s5T+TxmYLfxx8PlfAABNM9/+i3M0akXe/s3PiCWyQI58ToW5uYfd26oI
      1Qy6ygWmJzK0fq2PlWkt1pZeuhVVYvPLQI50SoapSYetdjfmOguwkYtAJklIchHBaKFWrXxA
      ZTXUt1NnMWMyqNA17qJrbY6ZhSCddQkqjRvxVYPdgdPmIOeQMRdKIan1aHUWdh+xY5aFUVhq
      sKjvO14CNkc9tlobabPISjiFQq1Hq7Oy+4gTsyyA0lKDxdTK4f0upqcWKNu1aGQ5arc5cZqg
      ODYPSiP19hqseQ3urUW0LzUezwDyQW5euoBJAdGKhU6DCtBRa09x462fI1fu4Bvf6MWpy3LJ
      X8/TVgtJS4YP3/w5CkMvR1oA9DRtq2Ha6yVfzSPaOjauLZOjywcZX9V/YlOFf/wab8hWSaQN
      2HIuViNVbDY9j8o5R9bnuPju6xRiMvY/1cbYtRsEQ14ScRW1PR+foFTwLo7w/lsVklE1p/a3
      csN1nWDQSzKpoXbnZrFcmIlZL3qnk0I1j62+iesD5/HJczidu8Hr/707egv/NfH5cYBqmVjA
      SyiRBUHEUOPErK0Si5bQacr4/DGMjkZMihyDb79NtuM4p3rqySVCeENJzM5GtKSJZWUYNRUC
      viAVhRGH3bqxmaNaJh70kaqqEEURp81APBhEnlzkf3wQ5oWnu6mpqcesgYDLTV5UY3c4UCtE
      yrkUv/jxP9B16AUcdht1NgPZWBB/JIPe5sSiKBDKyXGYtQDkUyv89N/foe/kWWpra3CYNaSj
      AQLRLAabE7MiTygn4TBriPrWiGQqmGx1mNRVwj4fqbKE3VFLMRlD0puRF2JkZaaNjSpb+FLi
      DxYIKyTWuH43yP5DvRhUf4AHIuHi1mqFvl1NfNYUs1IqMDU5RnPXXvSPsRxVKsSYnlqnvXsX
      mq156xbYigRv4SuOrUDYFr7S+FRfZYsOvYWvCra+AFv4SmPLALbwlcbnGkC5mCcWT1CpQiUb
      Y80bpFCuUszEiKYfFWKqkkuGicRTBEJhyh/L+FfOJ0nmyh/5HQqnHjub38eRiUeIpe8LbVVI
      hUMkH83oWC2TCIVJ/+emmXwEZTKxBJ8lTVWtlIj41vGGko95zxUysQDxVJZAMPIJAbFSNkbq
      M7LVVasV0qnkI9kZfz9kE1GiqSzpVPxBls5quUg8meYLrZlUykTDIbJ/tLF4fHy+AWQiXB+4
      TbZYIXDvbf75lffwxPO4R24w6oo/UrKCe/QCFwcnee2dD8gWPnqzkbnr3F56WL6cTxGMfHED
      WLp1iYE574O6U+EgqUfznZZz3Dn/LrPRPxZVIcnw+Zt8Vg7DQjLIpYvvsep/XAMosXj9twyO
      L/Pb1y5/QnEuMHqeu95PPZFqqcCdgSuEU4+nu/dx5BJRook0d66/T3RTsq6U9HLh5sgXuh7F
      DB+++y6r8d+dBfJPgc9dsJe0erRVSOVCjC+rOLxTSSDgI5uU4XSEePXHrxFIlzDsOMaBR64W
      WRtnwC/nxPFdSMUM05NT3ElEKI2Umc/L6GjSEkkYWbz+W3wyHZWykmOnn8I/8CrTIYGGXUc4
      e7QHSahy4/1f4+w+xpWf/jt7v/MS3jvT6FQZ5gbeYelqic7Tz2CcuUuhKOPOvau48kbOPXcK
      SHHr/C+4Hspx/Hv/G3vtSqjmGbvwBtcXI0i6Wk6dOcDgT18mb99B7w4bEyOTFNFy7IVv0mVV
      An5++3+/QbxWRrli5amnD7N06XUWY2UU9T2c7pS4cPk2ar2alWk30TudnOtvQyrF+eA3v2Ep
      WsLYsptu9Tr3ZtdoPm5GXi0zfO0C2sadzF/4KRz4KxpWb5Jt387qrUESuRL1h75G84PerBJd
      G+PemoyDR7tR5yIMj8+zsHwRa1Dk5t1ZUJg4dOZZeur1lBLL3Lp6E1+1FtF7m6yijk6bkrvz
      biS5koPPPYv7zZ+xJtdRKqt4+pmnWb/+KnNhkcY9x2gvLrKYKHJn8A5ZxxOc22Mn7Jph9NoA
      WlmeteU5LE3d1BW93HPFUOjtnDjUzPhsla892cqVy4N0tNdy784I8bKGvYePfOSZ8k5d4/1b
      cxTzeYztx/lan4oL79wgnK2w/fBZasOXeGsiz97jz3JytwPPxFU+GFqgmMtj2vYkZ3ol3n/n
      BtE87Dj8NRQLv2bAb2Z7ZzP+2QlSMgsnzz5NeeUmN6fclBW1vHC6lzffvYRGKJGglhe/+yJ2
      1WN8AQS5hnaTwNKal5C+hv31JtxuHyVJjlGjwVTbQI26yNT86sOTkutcvrFIx67OjSCWpKGj
      rYU9h09Qq4rSeujPONJeQ7FYpiwq6f/atziz28bS8hrhcBhDbSM2kwph83OrV+vw+Rap5Ios
      L/tIqxQYRImG3Sf5y3O7CAailItFIn4vZfsevn3uCEalCEj0PPlNXnrCzqLr/ju0iqQ201Bn
      IxZYwR9JUlJZOPP0cVwjN/Elc2TDs9y4u7bpdlSoyvU8+fxfcaRZYnXdj9bsxGFRsbi4SD6f
      pmzp4aXvvsDepj3s62/buOfgNMvKvfzN3/4lpvQaFVs3+w4epsepBkRqdUpWvX4gj2tpiZmM
      lhajRI2zAbOUZnLB/aA7y6l1Lt1YpL2nA7UAqC30tDvoPbQP33iAJ//qhzx7sIGF6XkqVZAb
      Wth9YA+Hd9SRKBk49/WzNNWYaWh0QsbLkjtCSRQ4cOa7HGpVEwxHCUeimOyN2IxKqqUiFet2
      DvftYG+HHQCzo4NtB46xv1FFxbSNPzvTj8lopbHORsS3TLRsQ11YZs29Tkk04Ju8zrQ3RT6y
      wpWhuY88U9VyCaVjF9//wbfQeSe4MzjAuCtGqRDnzs0BwpkqjXtPcWLXRt2VcgmVs5fv/+Av
      0LjHuTNwgwlPglIuyp2B20RyIjuOPkOPrUQiI6eppQ55OcuCP8XXX/pbzrXlubMYpVxQc+qv
      fsheSxDvZqrmx5gEizR2WLj1wYYwVo3TjmdyiIzMQTY4y3pCQf+Bfixa+UMuj9rJri4dq6u+
      j974ZgGVSvUw1Q9VqEKpVESUy9l1+Bl21gtcvXabdL6EIECD3czC+D0c+/ezMjWBydyETJTQ
      aJVIcumBGJIgbPi/1VKRfLEEKNFqFSgUioe5GfN+7o56aeo9RE+TmWq1iiRJyOQyRH09L3z7
      +/zwr7/LkZ66B5/H+4ZYKpcoJ1eYWC6wc98hmqxqqoBSqdxsQ/Vh0khRhHKJSqVKqVLhI3pN
      goCzsZbV2QnE+n6U8+MUamoIz08QF60c2r8HzSMaITKVne42PcvujzpYVQQEsUypVKVcKoEg
      PnpwAwoFykqS4dsz1O7oo39HM5VqFblcjlqpQiFJiDI5e46cpcte5tKHd8ht+urVj1zo4fgp
      lEpkeT93xzb7sdGMIFfRaNYwcnsAQ+tOdIYajj/7HX7w/e/x/OFtn3ysqlAuFykhIhNV7Dv7
      Lf7u7/6G547vR68SkRSKR/Q9Nyoul0uUEJDJ1PSf+zY//Lu/4dljfehVAgpJga6mlRNfO4Lo
      HuPGpAuqFSrVMsVSeUMUTKFBo1SgVDwcjMdaBRKsLTQaRJob65AZneyq02JtbMFia0RKzDE4
      68MqV1BS69Fr1ZgsFjp29iL43CQ3HV5jbQP+qQEimDfUviQNBr2KUsbH1Tde4cZKhZ3bmkn6
      ZhgaW6e9azsqhQwQMDmdqKtKmvfsolGS4WiqR6XTo1NKiAo1Bo0StcGIs6EFQ3KWV6+OUajK
      0BgMqOQiolL3kCoh1dBSD7cuXSWvtCBHwGAyIldoOdjbyq23f8HP3h1D+QhXIpdc591XXmYs
      pmNndx82pZeBOxPoVHrKkgqjTg3osNZmuHdnkWIVqOmmRzHPT3/ySyr2bhpsRvRaLfdzNcst
      9bSqK2ia9tDcKNHobMTe0ExmfZRhV4oaQaSqM6FVKzDV1LC9txeZZ4XwpltvrW9jcWiIhn3t
      DP3qR1yciLFrdxeiAIIowyzPMTznx2g0IMr1bOuyMnrlMu6SBkOljNpoQiEHpUaHRqEg5plm
      eNJL5/YudAYjeo0SHVnGFjZeYpJahymzzLCnjFGnAamG5roqg5c+pKC2IKtCW3s9hYqd7e0m
      2nb2Eh5+k5+9PUAOCZ3BgEJ2/3Er4Ju7zcsvn0fRtY8Dhw9QnHyXH/3kdaKiBrXGgP4jdJoC
      3plbvPzyedQ7+jlw+CC50bf595ffJCaq0erMaBQismqRmaEBXGULu7a3sKvVwXu/epkPQzaO
      dFoxGfWIgFJnQrl5+T+xLlCS9/79x9Sd+9/ZVftHqvL3hpff/P1F+v72r2jV/qnb8t8DnvH3
      uOqu5Ttn9z5Wedfoea77G3jpzO4/eFv+xAZQIZfOIFPp+K+b4LBMNpVH0miQb0VN/iAoF3Pk
      yyIa1Sc2yP6O8jI0qj88g3FLGW4LX2l86jKoTCb7YgGPLWzhS4YtOvQWvtLY8mq38JXGlgFs
      4SuNzzWAfCrM+MQMxQoUvWP86p3rxHJVkutj3FuNPVKyQnD+DkOTy3w48DCYch+50AIL/uxH
      ft+8s/SZ5LHPg3tymIm1+4GhAou3b7IYfoQdVs4zPTDIWvKPxT8p4BqfI/4ZRyuFFEMXf8s7
      N+f5SBrynI9bdxYe9MNGvyw+Rr9UyYTcLPk+O/tlaG0c7++RLuhRlPxTXL63hmdhisAjayJr
      i+PEv+AaiX9umLvLof9SGSU/NUPMoxCKGQbvTdHQ1MDyh+8w6MtRX99AaGKcUo2dSmiF2WUP
      FYWW1NJNxoMKVlfm6elsJRhOotVrEctFpq79lhsusMnLuL0u0lUJjVpNKebH5XPjDWfRG/TE
      3HPMLLipqvToVQqgStC7BpIG9+I8glZDzBNkfW6YaX+SQjKNZDAhVcoodFoS7gWWgxmMeiXj
      l67goUwikMJgq0GxGYVKh9eYnJwjkq2i1yvwzs+w5o+hUossTU+zHsphtZmQCQKQwzW7hjuw
      QjBRQW/QEnXNMTO/SqaqQiVkca8ssuZa4OrbA8hbO3AY1IhUCa/PMTO/RlHSkfOM8/bANAee
      OIlNJ4dSlrX5GVZdC4xMpamzibhcm/2ikpNL5FAZdeSiAeK5Cpng8ka/KPXoN2VeZq6/xo35
      DG0tNbjmp1nyxDBYLRtiA7k4F157GY+iGU3Sw6ongEytZH1uihVPFI1JT9LlwRVYZs0VRWup
      IRdcZnJmkbxMj1ElkMkmGH7/fdLWdpqsWsRMgF/+7GWwdVINreIKJJHkJeampvCEsxh1Iu5w
      FqNeTTzoIl2RCK9MseAKodCZic5cZzpno7vRTKWUYH12lVXPGqmKEqNGTnh9gelFN6gNyLMB
      llbdBFNVaowayqUk63MrrLrXSVdUmNQCnuVZZlcCKPQGylEfK+trxIpV4mvzLHuiqE0WxHyM
      uekpvPEier2OkGeetRUXrnAWi9X4+QYgygWiC2vIbRpGp5P0tqqJFyUSyTg1miK37syjLEe5
      sZyiXR3HU7SQS4bRlGP4CgaanSbEagX//F3WqxbE+avcSZhwytwMjAbxjV3GI9aQXp0kgoK5
      G1dIVWHZE32QsO3u9XfIyTWc/5d/Q2huZWx4EoM8ymxQRJ9ZYjqtpDB+g7WKnOmJaaI+FzKr
      k+TSXTxVI9WVW7h1O+moUUI1wc3X3yUg0+KaGUUwGbnyq98g2RsJLU3iTpYo+yZZEZpps6kR
      CPDaP/6apKWWwMwYOaXE2OVblCUYnl6lVhHl1QvjtDaZcc35se/ZTZ1BjZhd5be/vYXcoODe
      yAQmvYJlT5juPf2YVSK+qetcnQyiKUdYjEto/APcjphwyt3cHImRC4yCswfP3XcJ5guMDM4i
      SEUml3y0tjahkAn4F0Zx5TWo4ytM+nPIo7OMhnR0tliQlXJMj94C5zbm3vstSV0j5fAcM+4k
      Zf8Mi2U9setvMlowIbiGWJFb8F29SlQtsjzuplbt47W7MVSZIPqOXlpqtIjFNHfu3MbU2MjA
      +ffQOevwTIzgK8tIzt8irLGxcH0CR08jY++dJ1dMcHMqjLKSYHE9irYaJ6xooLvRTCE9z0/+
      6QO0Di1jIwuY9CUGh6aQyzJMTIZRF6d5azhMW2sTtSYt+eQsL//bZXR2NSMji+gUCYbG15GX
      I0ysZpB7B7i8XKVNE+L8gBt12cNaxkx24QIzMTWp1VG8JR1zl17BKxgJjI8gNu14nCyRanY2
      y7lzd56SuYaeJitzcwsgqTGbzRiUFTxeN+uPfooT64zMRKhvciADkElYLGbqmtrQKwu07z5C
      S82GsJXG4OTAsSfo72kkFslitylxu3yIKh1UKwiAw1LD2soEFmc9czNLKA1m1DI9nbv3cmTv
      Ngr5DdcnFY+icXTxF995iZ46A2Ci99BBjvXWEU1sukdVEb3VSDroZt0fJJUtoLHU0rO9Hc/a
      LOurS6zGigiZ5IPE1HpTO0dOHGNPu41oMIHBqCTsc7PqDVMulzDVd7Gnr5s6Ux31DZaNe/Yv
      EWs8wKljR2jVQVZhob6xCYdeAip4PAk6+w5w9MlDNKiVwEa/tNboQVDTsb2exdGbrHgkGmVB
      hlY9rK25yaWL5De5RaaaOhqa6ohG8+w5dIinnj9OZXxhgzqtMlFfa6KhzolGr6e7r586qwFZ
      LoHH58YfzQBKdh88zrE9zURi4Gw24JpZRW7RQqmCTGPAYbVRX1eLTAC0tTTV1dBQY0BbU8eu
      np0460zkg368fi/Rkp2epih3b9xgTdyBKjLBmsfL6rqXTLlK5SP7E0Tq23o5cuIonUKRGfcc
      S3NrLC77KZfTZApga+thV6t9k2clo6F9s3wlz+TyNEvLqyy7wpBJk6FE445+Ond04xBCLAeK
      GNQpfB7Y98STHN23jVDQR0lfy8EDB9nTpCddqDzeJNjQ3MDyhzcSGO4bAAAN9UlEQVTR2Jxo
      7XWIa2MkNc3kQytEsLCrext6WeVhJnNDE08damF2fIbSpsMnk8vJJKIUPkZRz6b8zM0ssLji
      Q6OXkS2b2bu7A9/q0sY8QoA6h5nl8WkcB/YTnp/BZG/ZGJCPQa3Rko15uXXpAhOuyKffTD7M
      zFKSjr19NBgVVCqbgyJX4LA46Nr/BMd2OhG1+gdBknRyldnpJZbdIVSyBCsRBTt7d1GjhNKD
      VWQRUcyTiGc3MmNa7Kg800wvLeFK5DFqlI80QsRqVbG2uMTi9CyB/Cc9foujldjoBxRa9mJz
      1tFZ38bRo4ex2zSoNzNHymQC2VQKgxoW5peYvT1GocmJ5n4tAiQSyY32VKusLi2icnSws82J
      UPnY5pRqhnhSxZ7D/RR8UwSTJUBEEIokkumH2T7LRRLpzUlAIcXYnIe2nt101JkplyrY27uY
      +uAmDbvbqHM242zp5vixfdjUEqLs0cetgt+9wMLMIusVgUaLE1tbJ6dP7MeiM/GR7tqoGN/6
      Aoszi6wj0lRbR0P7Lk4d2Y3WYuR+6rhKPETFsZM9XVZWZnyo9AUWZuaZm19Dq/uk2vLnukAA
      glKPQa+mo7MTg16PRa+ivmM7zhoT+dAqKYWDrsZ6autrMZrsOGxmtm3fjjydQ2O3bmSJ1OqI
      +H2YHK046hsxa0QkjYbE6jjRsgqto52DvTvRy1IsrcfZvrefJrsRURBQaDTIRS0dvbtxKpW0
      7ujCoJajt9ZiMaiRNCYcFhP2tk5qqhG8FRM925pRqZRYHA70SgmF3katXgJJj0FKsLgSo2PX
      bmqtFixGI/b6Rlqaa/DMTuGv2jne14YkCkCSsQ/HSEkVzE299Pf2oMqt488o2bltG7VOGyaj
      FUdNDUpFmnBagdNmQFTZsCkiTM956TxwgnanEYVSTU2NFZkoYKyppRhcZi2jpKO1jcY6G6ba
      esxqEYXGRGOjHaXcSFdvF2ajHYssxOxyiLaePpxmDYIgoFApiQdDtO7rp+CeYSVt4unT+9Bv
      cjaUkgx/vEhznRN7fT0Oixr/2jq6+k7stbU02MxYnHXoFSIKfT3tjgqzM6s4dx6lu9WGUueg
      rU4ikhSoqzUjE0BWzhKrGml22rA3NFKnrzK3FKC+cycWs5WG2loUJhO7OpsxOFtRhGdZ9OfZ
      2bcfm16BzlxLjUFFuRDg3o1ZCkqJbX2H2LWtDRNRxhYidPT10WDUoDbasJs2zLmY8zM6ME9B
      KdG57xC9XR0oMh6m3Hl279uFVatGZ3FSY7dTDUzjTkr0HTnK9o56AvPjZA3tHO3bjlopUWt3
      olEq0Flsf+pAWIZb77xDzaEXaTf/6VrxuxHmyq+H6Hz2a1+eDJVfAhSyK1x638OxZ4+gewwd
      tVxqiSuXAhx/5hDaP6AQ31YkeAtfaWwFwrbwlcanfkwKhS8antrCFr5c+FQDeLAysoUt/DfH
      lgu0ha80tgxgC19pfK4B5GIe3r1wlWyxSnT0df6vv/8ZrngRz/B7XJx6NFNKhaWB3/DqhSH+
      5y9+Qyr30YhXdO4K12cfUsWywTmu31r4wmS4qYuv88Ho2uavAguD15gPP8LSKmW4+vNfMhpM
      fsEafl8kGXr9Mr7POFpMBXjtx/+D16/NUQSSa3e5Mrr+hWoqJv28d32I8PwIA9Ouzf+WWL35
      PmOh4u8897OQWhrgn9+6/YXO/TLjc1dUlWoN1WKBXDHJ/GyK5jotkWiYbLCMc2eBm+/8kklP
      nu2HT1JXLlEqlykWixSSPgYnU+zbtx2pmGH87jA3E17ENQeeZBiTvQZZ1czoB2/jSiXJiXZO
      PnWY4L13ub2QYufR0/R3OhCpMjF0ldqOPsYuv0/HiRNEJpbI5NMs3/2Afx3ScOjcaaRikUou
      zu3332I+Z+PsU32UihlGLv2a22k9z7z0Z9RrZFCt4J2+wXs3ptE27uLkse1MvvcOHswcPNjJ
      yJVrJBUNvPBnJzFJIhBl4NXbePFT0XRy8vhe3EPvcHsugrPnKAcaBe4N3yWUTLMy5WJnXfOG
      MFa1xNSN89yajdDWfwpn6jZ35oN840QjUrXCxNgtPpwDeXwP4bALddNebNERhpeTNO95gj0N
      ZUZujuGKpmnqf4p+a4r3Lt+iZN3JMwcaKRRLTA9f4arPTnPL96itRLkzdJOgV07OVGQlkqSp
      p4/iwgAzQeg5+hTa+DyOHUdQhSeYLtixp2e4OLxKU98JDhrKFB+8s9KMvjuEGzfhpJlT555G
      EZrg4pU7KBr7OL6vgYlLlwiItZw4e4paMcq1D8dIxJdJyNs4e+4o2YVBLg5OY91+jCPdJu5d
      ukxAsNDuVDA6vkL93id5epeVoasXGV1Nse/p53HEBrm5VCCZSNJ/6gW6G3R8SsD/D4rPF8ZS
      6uhQC6z53CwonJxqM+FyeUjKJbSlJIlqDT0NSq7dHn94Ui7M5YuDmBubPiaM9QTqxBiyttP0
      18lZcwdZW1vFufccfbYcQ2PjTE2v0NDWRjbqpbQ5F8+nk6yuzzI/NMrE3CpzsThaoYymoZ9v
      HKphdGaViGuNxfk5Vqt1HG7Tk8xkgTx1u85yrivHwMx96nYG10qc1t29pNZHmHf5WfAkOHL8
      IDNX3ieltmLJjvHqtbVNakeOtRUXXcf/nHa5j9HpKfxhOdu31TN+b5hoyMVs3My3vvM8vY8K
      Y4VHub5u5cWXvkF48kOKlm72H9oUxhJEGtq2s+fwk9QU5shY9nO6W403rmNHVxOzowMEgi7m
      Qxr+/NmDzE5PsTw1ScVQj62aJZKKs7jmoamzj/7jR6hTg1xrpLO5i/3H9lEKTGPoPst2U46U
      6KTTLmdwaBJ5IcPC2jrj4+sImTXe/nCCunorCxffYOYjtOki/pUpDN3Pc3KnklsDt7nw2gVK
      5kbiswMMTM6x4M9z4tQT2FRAOYd7bo6WEy+x3x7h5u1bvP3GbdSORtaGLjK6tMq8v8TJY70s
      zizT0tVOMRphdWIQl3I7f/OdUyxefpu55RWShm6eOd7K9NDsF/YOfh88xhxATnOrluGBKVRG
      Cw6HldW5KcqiCbEcJxJLIamNSJL4kOddldDp5aRSH+Xi3w+5GQyGB/o4SqUes0mHRqsBFPQd
      PEA5tsLYnJtCsYQAOC0m1hemqe3eydr8IkZ9LTJRjbXGgEqleSCgVC6XUChU1LVuo1avBPTU
      1GjRabUP9ziX0vhDcUpI6LVqqlRRq1UoZDJyci0dbe107T/JkS7zg7ePSmXFZFSi1WgopcP4
      w0mQNKiVG2Jger0eURQ2yt/vhFyWqtGMRqHEqFFRKH+2MKzeoEfMRPEkMggKDWqljCoyzBYz
      aqUKuaSguaePZmOF9eUxVgKfKcG7MaiCgF6vo5gIEUxmUWh1SHKR5mYHS7NzBKsyatQSOms9
      7R3bOXb6KRwf496Ighl7rRqVXo8sn6As1NDe1U7/0SfYXm9GrVFviJLdL6+xYTNKaHR6qqk4
      VWM92zraOfrkkzTXaNFo1MjVZg4d3k814Wd9epL1RAW9UYdcZcGoyVIoCZisVlQ6Lco/Unz2
      sSbBiroW8kszWBz1KGz1OHNuyjVtKAWRfDqEOxxDls7xwANXG9jX1413coL05n2odTrWp4cJ
      fkyrNptY49Ibr3JpzEd9nZnl6SnCqSp6/QbfBUGg1llDYMlN3f69VN3rmBuaHxjQozBYayl5
      RvnZK2+x/PGK7qMqo1rN4XO5yBYrFAubPrNCTU+jhZnxUYaHRomWxQedk4rO8u5vfsvAUpJ6
      p51SPo7HH6SaK5J7sGSsRCGFmJhY3yAA1nbhCN7il796FXfFiN2o+UgzlGo1wYURXInNDhLl
      FDIRPJ4g+VKV8keYk1VinmXm1sPI1Ho0m8pmKrWEe3p0c8OKDJ1BZGZknOSmKyOIItlEAH8o
      SSZfQFPXhjk2S8nUibOuAauUYHh4iPE5P3xMlqZS9nLhN6/yzpVZnDv76OqSmL59h5GpJTLF
      Tz6cpfAyb7/+ay7dC9LSu58ua5p7d4YZm1vjgU5ypcDq/DS+ZBG1zkBjezPRyQ955Re/IG7Y
      h13/6UP2n4nHlEWpkEmlkau0KOSQz2RAoUUSSqRTKaoyCVGQoZBXKVflVCol1ColhVwRSa1C
      JkC1lCeZySOXiYhKLQoKZAsprr3yM8zHv8d2uwKdRk05nyadK6FQadCoNmUPKyXS6SySRkMx
      k0HS6BCKOcqihEIskysLyMpFUCip5DLkqzL0WjXFXA5RqUJezpNHgVohA6rkMykyhQoKhQK5
      XEa5WESp1iBUi6SSaSqiAr1es7khxsuv/5/36PqLb9BsUKFVK8ilEhSRIcnkSJJAqSygUSvI
      Z1IUBSValQJB2KwnX0ap0aGSQ75YQqXckIWslouk0hlkcjmiXIVKEkgn4hSRkCQZknzjumql
      jEy+jFoSSKXTVAQJnUZJrlBCo5CRzuRQ6QxIIpQLGdL5KpJYRVTqkIQi6WSKqkyBIJOh0ygp
      ZNNUZGpUkkgxnyGdLaJQa/7/8s4YJ4EgjMLfsssy/zCLgcJCKyUxUnEQ6K25Fd5AzqAHkRCi
      Fq6WJODMziwLFnsBGgLGG7zqvbzk5XtIsseWEUZSYMXzdEY2emBw0cQYDZVn8+OImkJbJfgi
      oLSujch98fT4wnAy5jpWmLbUWqwnadWJ5n2JEsUuONbWE6dCplMKu6EIO8R0SCpHGQutRoUP
      e5SkR+8AJ+YClXwul+ire7pnOzRzfLzm9Pp9sn/zLBnI5++omzt6h7Crtpa3xTeXg1v+Gjzv
      F9aFEGDDhhwlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ActiveTravelByCounty' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ActiveTravelByAutoOwnership' width='192'>
      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
      6mgmKx6HhfFYBL+yDJSuVhH1cvjITXY81YBrvP9jLYiAklRIKDqySQTZgtUiYxZT5/Q/RaSM
      InaUXufEO4dIqAUcyNPpuz5KSeM6qmxvcuL4InJeJQ0bcplt6eDwVILCym34b16ibTqEFFlm
      85atJH09jFiqaNhcxYWzh9BjAk0bsglOd6Ln5uORIOr3cbKlFQRQCxooTrvTj/sLgCiTlpOH
      y3xnIjrSK2ku7+f1t89QtGsv2epVro1e5+UZaNr/LOvTi7j866O05zrIKbbhUvKQ0gooy77C
      rVvLFFVkYrXmkab3s2IqJsNlpX7XTo6deAsjo5onanKJ+XIwCTJpuTnYpH+jfym+nIhONj/2
      NMWLQWRHGpke6FgZRjOV88jz32A5lMDuycBjk3jq6XyCCYP0jAyskorbv4SChZycDGJTYywt
      J9m86THSSpbQZAcZGW4EZRvPlKzqzfbMUh494GYlksSZnoHnI/PpU7AEG/Se/RlXg1v5y6fX
      /2FVpVjDxJifVcjK8/xOd/PK0ixhRx4Zlt+v1U9FADQ1iWZImE2ppTrFl4uUL1CKNc09zwCq
      qv6x+5EixedCSgBSrGlSd4wp1jQpAUjxBUQnMDdBb08vE3MBtNun1OjyDDNLET56aDV0Df+U
      j0AiiZGM4B3sY2DER0KH2MoMff3DBOIaRjLE7FwQ/bdauqcv0N0qkIGyPMa7bx3iQtstdGch
      bmmGS5fHyS/OR/4UREgPT/D6Lw4RdBVQnOlgYrADf0Kk98olTFmluKyf1e1SkI7TbQgFJTg/
      ogzGF8a5NbZCcKaLBS2DbPfveceW4vfCCPt4953TRE0Gfde7yKpch4cljvzyZfqS+TSUZ324
      civBMX7297/A1NiIOHiW4z0BAkOtLLvLCd44zeDUBOPJTNIXr9ERyKGywHnXqn9/Q5gW4eJ7
      R3Hv+DZPl8Q5daYbv2ymr2MQs0Ulu6yS6iwTwwMDzIdUimoa8MSnmFjWcGblY49NMb6QoLC6
      jqIMJ4IAhhpjbLCPmbBMfV0pY+cPMyzX8nhxJkQXaTl2CPPGJ0l0XScsu5ktKGBdVRFx/zh9
      3nnSiqqpK179qjkZmKZvJoQeWMJT0URJhpmZkR58ASivqUcMTrIYDLMSk6mrryA8NYG5qArr
      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
    </thumbnail>
    <thumbnail height='192' name='Across_PopByPersonType' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across_chartPersonType' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
