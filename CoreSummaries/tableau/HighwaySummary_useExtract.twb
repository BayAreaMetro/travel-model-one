<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Effective Hours' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='8.0'>
        <calculation class='tableau' formula='8.0' />
      </column>
      <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
        <calculation class='tableau' formula='1454' />
      </column>
      <column caption='Occupancy' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
        <calculation class='tableau' formula='1.5' />
      </column>
    </datasource>
    <datasource caption='avgload5period Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' version='8.3'>
      <connection class='dataengine' dbname='M:\Application\Model One\Value Parking Pricing Pilot\Across Scenarios\Across Tableau\avgload5period.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>a</remote-name>
            <remote-type>4</remote-type>
            <local-name>[a]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>a</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12010</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>20443.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>b</remote-name>
            <remote-type>4</remote-type>
            <local-name>[b]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>b</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12015</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>20443.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>384</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>12.800000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>4</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>lanes</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>7.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gl</remote-name>
            <remote-type>4</remote-type>
            <local-name>[gl]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>gl</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>10.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>use</remote-name>
            <remote-type>130</remote-type>
            <local-name>[use]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>use</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;   ?&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;   ?&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ft]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ft</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>7.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>at</remote-name>
            <remote-type>4</remote-type>
            <local-name>[at]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>at</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>7.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cap</remote-name>
            <remote-type>4</remote-type>
            <local-name>[cap]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cap</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>22</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2000.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ffs</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ffs]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ffs</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>10.0</statistic>
              <statistic aggregation='Max' datatype='real'>100.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fft]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>fft</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>544</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>19.370000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cspd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cspd]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cspd</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5473</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>65.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vol_tot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vol_tot]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vol_tot</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>232183</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>48734.489999999998</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctim</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctim]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ctim</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1195</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>24.739999999999998</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vc]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vc</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10442</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.3995</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeperiod</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeperiod]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeperiod</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AM&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;PM&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2015_04_134&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2015_04_136&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]&quot;' value='Growth in Roadway Lane Miles from Baseline' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' value='Share of Vehicle-miles Traveled' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]&quot;' value='Share of VMT' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;' value='Share of VMT for Link Type' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;' value='Share of Roadway Lane Miles' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_6350905173822671:qk:3]&quot;' value='Share of Total Roadway Seat Miles along County' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;' value='Share of VMT by Congestion Category' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' value='Vehicle Miles Traveled per Hour' />
        </aliases>
      </column>
      <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Delay' datatype='real' name='[Calculation_2320829171401165]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([ctim]-[fft])*[vol_tot]/60' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Scenario Position' datatype='real' name='[Calculation_3680912112348791]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [src]&#13;&#10;WHEN &apos;2010_04_ZZZ&apos; THEN 1.5     &#13;&#10;WHEN &apos;2040_03_116&apos; THEN 2.0&#13;&#10;WHEN &apos;2040_03_127&apos; THEN 2.5&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
      </column>
      <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
      </column>
      <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
      </column>
      <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
      </column>
      <column caption='Congestion (volume over capacity)' datatype='string' name='[Calculation_5010829191108792]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [vc] &lt;= 0.00001 THEN&#13;&#10;  &apos;0 (dummy)&apos;&#13;&#10;ELSEIF [vc] &lt;= 0.75 THEN&#13;&#10;  &apos;Light&#13;&#10;(v/c &lt; 0.75)&apos;&#13;&#10;ELSEIF [vc] &lt;= 1.0 THEN&#13;&#10;  &apos;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Heavy&#13;&#10;(v/c &gt; 1.00)&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='VHT' datatype='real' name='[Calculation_5810829165448827]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ctim]*[vol_tot]/60' scope-isolation='false' />
      </column>
      <column caption='Roadway Seat Miles' datatype='real' name='[Calculation_6350905173822671]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[distance]*[lanes]*[cap]*[Parameters].[Parameter 1]*[Parameters].[Parameter 3]' scope-isolation='false' />
      </column>
      <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='vcRatioTimes100' datatype='integer' name='[Calculation_6530829180003764]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT([vc]*100)' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Time Period Duration' datatype='integer' name='[Calculation_7220911171450081]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [timeperiod]=&apos;EA&apos; THEN&#13;&#10;  3&#13;&#10;ELSEIF [timeperiod]=&apos;AM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;MD&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [timeperiod]=&apos;PM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;EV&apos; THEN&#13;&#10;  8&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
        </aliases>
      </column>
      <column caption='VMT (Congestion non-dummy)' datatype='real' name='[Calculation_7680829191605709]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [Calculation_5010829191108792]==&apos;0 (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='VMT Per Hour (Daily)' datatype='real' name='[Calculation_7880911172232239]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_4420828151331817])/24' scope-isolation='false' />
      </column>
      <column caption='Vehicle Seconds of Delay per Mile' datatype='real' name='[Calculation_8200829171900729]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Calculation_2320829171401165]*60*60)/Sum([Calculation_4420828151331817])' scope-isolation='false' />
      </column>
      <column caption='Lanes' datatype='string' name='[Calculation_9060829180125573]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [lanes]==2 THEN&#13;&#10; &apos;2&apos;&#13;&#10;ELSEIF [lanes]==3 THEN&#13;&#10; &apos;3&apos;&#13;&#10;ELSE&#13;&#10; &apos;4 or more&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Facility Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_7550828155717668]'>
          <bin value='&quot;Collectors&quot;'>
            <value>&quot;Collectors&quot;</value>
            <value>&quot;Expressways&quot;</value>
            <value>&quot;Major Arterials&quot;</value>
            <value>&quot;Other&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
          <bin value='&quot;1.0 to 7.5 mph&quot;'>
            <value>&quot;1.0 to 7.5 mph&quot;</value>
            <value>&quot;7.5 to 15 mph&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='San Francisco' />
          <alias key='2.0' value='San Mateo' />
          <alias key='3.0' value='Santa Clara' />
          <alias key='4.0' value='Alameda' />
          <alias key='5.0' value='Contra Costa' />
          <alias key='6.0' value='Solano' />
          <alias key='7.0' value='Napa' />
          <alias key='8.0' value='Sonoma' />
          <alias key='9.0' value='Marin' />
        </aliases>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
          <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
          <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
        </aliases>
      </column>
      <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
          <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
          <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
          <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
          <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
        </aliases>
      </column>
      <column-instance column='[Calculation_6500829184447940]' derivation='None' name='[none:Calculation_6500829184447940:nk]' pivot='key' type='nominal' />
      <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcto:sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_6350905173822671]' derivation='Sum' name='[pcto:sum:Calculation_6350905173822671:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_7680829191605709]' derivation='Sum' name='[pcto:sum:Calculation_7680829191605709:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Scenario,Speed Bin,Time Period)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:src:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_6500829184447940:nk]' />
          <groupfilter function='level-members' level='[none:timeperiod:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.396226' group-percentage='0.125416' measure-ordering='alphabetic' measure-percentage='0.354051' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:gl:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>4.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>9.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>6.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>1.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>8.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>7.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>3.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>5.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:gl:ok]' direction='ASC'>
          <dictionary>
            <bucket>1.0</bucket>
            <bucket>2.0</bucket>
            <bucket>3.0</bucket>
            <bucket>4.0</bucket>
            <bucket>5.0</bucket>
            <bucket>6.0</bucket>
            <bucket>7.0</bucket>
            <bucket>8.0</bucket>
            <bucket>9.0</bucket>
            <bucket>10.0</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Effective Hours' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='8.0'>
          <calculation class='tableau' formula='8.0' />
        </column>
        <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
          <calculation class='tableau' formula='1454' />
        </column>
        <column caption='Occupancy' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
          <calculation class='tableau' formula='1.5' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across DailyVMT' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily VMT</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT Per Hour (Daily)' datatype='real' name='[Calculation_7880911172232239]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_4420828151331817])/24' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7880911172232239]' derivation='User' name='[usr:Calculation_7880911172232239:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='34' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_7880911172232239:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='Across FwySpeed' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]'>
            <groupfilter function='member' level='[none:Calculation_7550828155717668:nk]' member='&quot;Freeways&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across FwySpeed Chart' tab-color='#eaeed3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Freeway Speed</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]'>
            <groupfilter function='member' level='[none:Calculation_7550828155717668:nk]' member='&quot;Freeways&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk] / ([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Across Miles Chart' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Growth in Roadway Lane Miles from Base Scenario</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:8]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Pane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC'>
            <dictionary>
              <bucket>4.0</bucket>
              <bucket>5.0</bucket>
              <bucket>9.0</bucket>
              <bucket>7.0</bucket>
              <bucket>1.0</bucket>
              <bucket>2.0</bucket>
              <bucket>3.0</bucket>
              <bucket>6.0</bucket>
              <bucket>8.0</bucket>
              <bucket>10.0</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='Growth in Roadway Lane Miles Relative to Base Scenario' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4890829192148691:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4890829192148691:qk] + [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8])</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across RoadSpeed' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across RoadSpeed Chart' tab-color='#eaeed3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Speed on All Roadways</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across VMT' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='122' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='38' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across VMT Share chart' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Share of Vehicle Miles Traveled by Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across VMT chart' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hourly Vehicle Miles Traveled</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' field-type='quantitative' max='14000000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across VMTSpeed' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation1:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation1:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='Across VMTSpeed Chart' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Vehicle Miles Traveled by Speed Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across VMTSpeed Share Chart' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Share of Vehicle Miles Traveled by Speed Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Supply' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Roadway Lane Miles by County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC'>
            <dictionary>
              <bucket>1.0</bucket>
              <bucket>2.0</bucket>
              <bucket>3.0</bucket>
              <bucket>4.0</bucket>
              <bucket>5.0</bucket>
              <bucket>6.0</bucket>
              <bucket>7.0</bucket>
              <bucket>8.0</bucket>
              <bucket>9.0</bucket>
              <bucket>10.0</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='88' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='70' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]' value='p0.0%' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='236' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='116' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='56' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Indid.Table.Supply'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Roadway Lane Miles by County: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcto:sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='natural' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC' />
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='47' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='92' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]' value='p0.0%' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='132' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='40' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='80' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle &apos;Delay&apos; by Facility Type: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Delay' datatype='real' name='[Calculation_2320829171401165]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([ctim]-[fft])*[vol_tot]/60' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column caption='Vehicle Seconds of Delay per Mile' datatype='real' name='[Calculation_8200829171900729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_2320829171401165]*60*60)/Sum([Calculation_4420828151331817])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2320829171401165]' derivation='Sum' name='[sum:Calculation_2320829171401165:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_8200829171900729]' derivation='User' name='[usr:Calculation_8200829171900729:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_2320829171401165:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_8200829171900729:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_2320829171401165:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_8200829171900729:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='39' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='103' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_8200829171900729:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='152' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='192' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='60' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='32' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.vc Ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle &apos;Congestion&apos; by Time of Delay: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Congestion (volume over capacity)' datatype='string' name='[Calculation_5010829191108792]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [vc] &lt;= 0.00001 THEN&#13;&#10;  &apos;0 (dummy)&apos;&#13;&#10;ELSEIF [vc] &lt;= 0.75 THEN&#13;&#10;  &apos;Light&#13;&#10;(v/c &lt; 0.75)&apos;&#13;&#10;ELSEIF [vc] &lt;= 1.0 THEN&#13;&#10;  &apos;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Heavy&#13;&#10;(v/c &gt; 1.00)&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT (Congestion non-dummy)' datatype='real' name='[Calculation_7680829191605709]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_5010829191108792]==&apos;0 (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_5010829191108792]' derivation='None' name='[none:Calculation_5010829191108792:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7680829191605709]' derivation='Sum' name='[pcto:sum:Calculation_7680829191605709:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;0 (dummy)&quot;</bucket>
              <bucket>&quot;Light&#13;&#10;(v/c &lt; 0.75)&quot;</bucket>
              <bucket>&quot;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&quot;</bucket>
              <bucket>&quot;Heavy&#13;&#10;(v/c &gt; 1.00)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='51' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]' value='158' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='124' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='216' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]' value='80' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='VHT modelese'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='VHT' datatype='real' name='[Calculation_5810829165448827]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ctim]*[vol_tot]/60' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5810829165448827]' derivation='Sum' name='[sum:Calculation_5810829165448827:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_5810829165448827:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_5810829165448827:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Road&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='136' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='VMT by speed'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_6500829184447940]' derivation='None' name='[none:Calculation_6500829184447940:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation1:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation1:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_6500829184447940:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='VMT modelese'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]' value='p0.0%' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='22' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='80' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='144' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Hourly VMT' tab-color='#f2e6e6'>
      <layout-options export-orientation='landscape' export-scale-mode-auto='false'>
      </layout-options>
      <style>
      </style>
      <size maxheight='850' maxwidth='1100' minheight='850' minwidth='1100' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='10' type='layout-basic' w='99636' x='0' y='0'>
              <zone h='75000' id='5' param='horz' type='layout-flow' w='99636' x='0' y='0'>
                <zone h='75000' id='3' type='layout-basic' w='99636' x='0' y='0'>
                  <zone h='75000' id='1' name='Across VMT chart' show-title='true' w='99636' x='0' y='0'>
                  </zone>
                </zone>
              </zone>
              <zone h='25000' id='8' name='Across VMT' w='80108' x='0' y='75000'>
              </zone>
              <zone h='25000' id='9' name='Across DailyVMT' show-title='true' w='19528' x='80108' y='75000'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='8824' id='13' name='Across VMT chart' pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' w='12727' x='84455' y='20235'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Miles Dashboard' tab-color='#fff6be'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='99600' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
                <zone h='78375' id='1' name='Across Miles Chart' show-title='true' w='99600' x='0' y='0'>
                </zone>
                <zone h='21625' id='7' name='Across.Table.Supply' w='99600' x='0' y='78375'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='9625' id='10' name='Across Miles Chart' pane-specification-id='1' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' w='14200' x='35400' y='17000'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='89'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.vc Ratio'>
      <cards>
        <edge name='left'>
          <strip size='195'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='114'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indid.Table.Supply'>
      <cards>
        <edge name='left'>
          <strip size='185'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='131'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Facility Type (group)]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across.Table.Supply'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='85'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across Miles Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Miles Dashboard'>
      <zones>
        <zone name='Across Miles Chart'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
              <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Across Miles Chart' pane-specification-id='1' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='VMT modelese'>
      <cards>
        <edge name='left'>
          <strip size='202'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:ft:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          <field>[textscan.41879.461103888891].[none:Calculation_4320828142204452:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='VHT modelese'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across VMT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across VMT chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across DailyVMT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Hourly VMT'>
      <zones>
        <zone name='Across VMT chart'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[none:src:nk]</field>
              <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Across VMT chart' pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across VMT Share chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across FwySpeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across FwySpeed Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across RoadSpeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:timeperiod:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across RoadSpeed Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='VMT by speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across VMTSpeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across VMTSpeed Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across VMTSpeed Share Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_3680912112348791:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_3680912112348791:qk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Indiv.Table.Delay' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.vc Ratio' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9Z5Nk13nn+bsub3pbJsv7qvYWAAGCMKQoQ3HE0UqcmNHMutjVbsTup+AX
      2NjYfbERu5JmhjIURVIUCJKgAQjfjfbd1eW9yaysdJXeXrsvCgAFAg0QqDYF1v296Oi6mXXP
      kzfrf855znnO8wi2bds4OBxRxEdtgIPDo8QRgMOhRdc0NN341L9nWRamaXLPyY1tY5oWAPJB
      DHRweFAUU2vMJauI7QonLz5JIbVFfHCIUiaNKXvoCntIpDJ0xfuo7u3ii/Vg1PbQBDe33nmd
      qTMX6Yt3s5PcZWiol51UGl8oRmckQH5nnWxTYnR4AMHxARwOI1dff41TzzyHVxRYvX0ZsfcY
      G/M3aDckJMXEq7roi6mspOroohuzVUE22wxNnSa3s0E46CdbrHPxwknuXr+OGRrGruf4wz/4
      Ku+89TqTEyMs75ScEcDhcDIyHGdhaQOllqbeNgjW60iyQjgcpNkuIYkCLU1DkhUESSEY7KI7
      FmR6dolQUEU3TGRJol5voLhc+CNRqs08AIIg4I31sf3ST5wRwOHwUtrLYUoq0ZCfbDpNpLML
      o61j2Sa7m0vMr25z8Uu/j8euo/rDmK0qhuDCI9u0DQG/z00+X6CrM0rbFLD0Nn6/n1J6k7zh
      pzugOAJwONo4q0AORxpHAA5HGkcADkcaRwAORxpHAA5HGkcADocSyzTQDRMATdN4f6nSttE0
      7d3/2pimeaB2HAE4HEpSC9f4+aUZAN74+S+oa002NjZI7e7wN3/zbdbXN0htzPAPP/gF1gHa
      cXaCHQ49u8kkv3zx+yi+GFu7JZrlAldf+wm+3nEajfaB7u2MAJ97bG5ffpUf/OQVLNvGMlpc
      v3kHgOTyHRa285/6jndvXqOpH6RfvT+sLd7lzUvvoJngcik0my0A/OFOJkf68PiDGK3GgUYA
      Zyf4847V4v/763+ix6fx2J/+JVL6DtcSFlZ2ns3tLfomzhLsHqG8NYtHsUhmSngCAdyhPtqZ
      eapt8HtVugbGsCUfQmWHzg4fWvgkT53sf2QfS281yOQLCKKER3WTXr/ND35xhbNPfplnLx7H
      7RKxJZVapUJHV+dn7smdEeB3ANu2sGwQBKiWi3j9PpKFFs88fgZTa1EsV8lmc9SaGl+8eJKu
      sQvUcptooocTw52cu/g4+QbkVm6Q12Ti0TCVUvm+21krF2gZv+5vi8UC9+p+FbeXeFcMXTcJ
      RyMcO/dF/sO/+3NODPegKgLbyV0a9RreQOhj/4i1RpVqs01ya5OmZoBtk9hcZWlpmVqzifSt
      b33rW/f1Uzo8XAQJj9CgJMW4MDWILFosbxU4MxxmZafMqfOPkd9cINTdz+hQP13d3bj9YYIe
      mc7OLnq6uwjHulAUFa2YZOTC8zQza4SHTtIV8tw/O22bF374LyguGbdbZnsnz907t5Fps7C+
      S19vHAGb7O4WN2ZWGB7o4xc/+h7zC/NYgV56Qiqry/P84vUbqHqaOxtFBrr8vHl1nhOTw/ds
      9pUXf4hha7z+9nWWEznOHh8jndrmxRd+zGB/h+MEf/4ROHnxaU6++1Oge4SzmpuhwX7OfGH/
      2omJ0Q/8Ri/AcPwD1+JdLW6aLc5N9JD2nCbeH76vVtqWTrVtYhQS/Mv1G0xeeBJBlvj5L9/m
      +a88Q9uwyK/d4m9//A5/+T//jwAUKnUePzPF9l4JcaIHUavzB9/4Bs3NW6jaLtvFCUqZ3Y9r
      lWSpTl99j6mzF1meWwBBoDviZej0F/GKtjMF+l1DECSGBj/93F2Q3Tx24RyyKNA/OIQsCvfZ
      LhFJgKmzF1ldSzDs0wj0TBBQDS5dvYVuWgwcu8j/9O+/xtzcPABj/XF+9sYtBsIid1cSrCdz
      jA90obfqZIt1gh4FSVU/rlVcokR8eJwbr/+C7oEBrt+4zerCHBMnT4FtOU6ww8Pjypuvceqp
      5/Ar96ffrWQ3WEybPHFm/J7vWbr1Nr6Rx+iPuD/ydUcADkcaZwrkcKRxBOBwpHEE4HCkcQTg
      cKR5fx/Ash597IeDw8PmfQFomuaIwOHI4SyDOhxpHB/A4UjjCMDhSPOBYDi9VafcNIkG3OTy
      e9TbJkN93SSSKUJBH3uFEoIkMzQ0jOxIx+F3gA+GQ2sVvv1PL9HtbnB9eoH/56/+jpOTvfwf
      /+dfcf4LF3jpn76LFIsz3NeH9AAF8MufvkCtpaFbIopgUm20EWyTcnmH27e36O3vpt1qoSgK
      zUKCb3//Fc6cGOO//Ne/5/S5s/zqx98n1DeF1wV3bk+TSW0xc3eenpExFMGmVNzDsEW0Zo1a
      o0WzUcfl9mDpNV574wY93VHqTQ1VdVHNJbg5s0S2UKW3uwOt3WSvVEWWBMrlEoahoxk2G0vz
      eKOdKA/ywXxK1hemmZmZRQeuXr/DTjqLT9L4xZs3OD45htks8bNX3kT1+pm9+Q6VpkGrlOXu
      7AwNMUBnyPuALLO5de0dlpdXifYOIrSKvH3lJjuZIonVOVKpNNVqhfW1FXIVk56OMNevXmJ+
      YQXFrHFjMUE4HKaRW+fldxY5Nj74mS35wAggeTsIUOGN6/N8+fmnuT09wws/eYuR4T464kMM
      9MQ5dfY0inTgJ/CxmO9mA5AlgelbN1ndTtHXGWPo5BiV3TWmF300y2W+9NQFpu8ucHI0ykoy
      T8xnc3duiWoLLNtGK+3QFIN84cwAL7/0UwzDoqUVuHVnhlypgVto4ZYF4j1xNgqjnB32UK9U
      uHT5Gj7ZYvKJ59lZWcSUu8DeXyGbv3uHzdVFPNEBArEwuVwZtwRPnBpkdSvLmfGeB/twPgWj
      x89Q3nuZbHKLweMX2F26jic4gV/d/9rb7RY+r59sJosky9RKeQYvfIFmdY9G62BnbT8Ws83q
      epK+3i4Mw8Llj3Hm2AjXZjdRBQFVL+GKnWEq4ma1AAgCFy9c5Kc/f5laK0LAI5HZTbGXTuBW
      fAcy5UPd1bnjQ2yWReJBlb6xYzSaLeLhB9UTfDSqP8TpM2fojvjZqzYJuBUEyUtXV5jI4DFW
      r75C78g4tm2yV23T1R1nbWEWf3yM5dtX6evpAMAydGxBZGNzm1PjfewW6tQLWQRvBCwdfyBE
      d0c3vT2dtNoasqLgdavYooJPldFNm1AkwuDwGJVCDoB0Lk9XNEirDb39fXR2dyNLNpIkHThF
      x/1ma32N0eOnadarVEpFBEHEHwjwXqCzIEhMnjhBs1ais3eQmE9haXGJ/hNnKKVTD84wUaa7
      p5d42EW5odOq5KnbPhRbIxjw0tBFqGe4vV7i/IlhsC3Wt1OM9cRo4Obk8UmSG8soLjfZ/N6B
      TPnQMui9V0UFeDc7iyDc31jx3yS1vU6+VCMQ6UQxG2goBP1+wlE/lUKVO3fv8szzzyNbbYp1
      k2jIRz6XRZAUJFFAwkL1h3FJNteu3+b45DCZUouxoX6wdFZW1vCGInhcMi5JRHW7qOsikYCb
      5HYCr9dFtS0w2NsF2GyurdDZP4rfrbCX2aFcb+Px+AlHQ7TbOqbeJpvcpG/qLEH34TljpDVr
      rG/vMj4xxvbaEqGuAWIhL3t7JWgU0YM9NHMJoj1DWM0i5ZbAQHeYpZVNJqYmH+h0rlEpsFto
      EJYNNH8HrdwOkZ5B7GaJmiHjEdqksgViXV2UixV6OgKU2wL9XSFW1raZmJpExmSvVCMW/eyH
      dz53+wC2ZdDWLdyq67d6v2EYSLLMg5XsfjuyfHj++D8JyzQRRPGBd2afaIdlgiAi3ssO28a0
      bKQHJMbPnQAcHO4nh2fJwsHhEeAIwOFIc6gmrZZlfYwT7uBw/zlUAjBN89AtJTr8buNMgRyO
      NI4AHI40jgAcjjSHVAAWqdQu2Ba5fB7btqlXyrR1E4w283NzLK1uYH2Ev1wuFjD/1cG2Wq1G
      q15hbTPxW7Rr02g0PnS1XS/TMmAvs0NiN/uxd2jVqzy6zOI2iY1VCpU6AIbWZGV1HdOySWyu
      UWm0AZty+d3Et7bF9sYq1aZGeS/DxnYKy9RZWV5BNx/EYoTN9voKhUqNjZUlZmdnqbXeTVi7
      sUa1oZHP7DC/sIJhGawuL9M2fv0wC4UChtZkcWkZw7JJJzfZK9cOZNGhSo773ipQKbXKz167
      ztD4KD/+zt8xcOI8b/38h4T6pwjaJWZ3NYaDGsu7DXKpDWzFSyG9zWYqx+7WKogSoupFFQ3u
      zCyzvbUGhoYnGseFweLCPJWmQW5ng8ROmnw2jScUA73Ij1+6RMADyUyRjlgEy2jyo3/8e2IT
      51iZX6BdyhHqHULU68zPL9AyBRLry+ykM2QzWaKxMLML6/TGOx/689NqRWqWysLMHUZGhrl7
      8yoBv8rC/BKa2kV6exmrWeSNawucPDZOu16kpsP83AK5XA5Fr7Cytkmku5PlrQL93ZH7ap9e
      K1C1PCzO3OHchYsszs0wODJKLb1GWvOwu7nMTjLB0Mg4hfW72MEOVjfSDPR0UM0n+acfv0Zv
      LESsw8PtW/PkKjp7mSSDg589GvTwjQC2zfTMAkM9AaZn1xgaH2HmytuowY7335JObpLYa2Pk
      Vthrwt3pW2xsbDN/Z5pao8I7dxbxqzKNfBJ8EcqVJkEV8pUmrdoeqWyRO9PTJHZzWI0SnREv
      C5sZVK+PrpCHjVQRVzNDqqIjyh7OnD4GaEiSB69i0tCglN1lr1pl+vZdMoUq9VIJv6KxW4V2
      rfBIHp3LHyUkt/FHuwFQFIXdzB7eYIBaPkliJ8PA+DE6gvtZn1V/lJBbxLRBlCS8bhd1QyCb
      2sUl3f8RQPHHCElNArE4WiWNGOjFLYu4/SEq2R2SqSxjE1MUEkvsNmXyuykUScC2LK7dnqM7
      6iM+MERqM0HfQC9Gu0rLOJhNh04Atq0h+Lp49stfxajsInsiaO06fd3Rd+NFBPqGRjl/4QIj
      I0PImHR3dtA2LCTbQvKFmYwH2C02cPkCWK02A70d5MpNAh4XerOJLcqYhoWqulDdXhRFZj8U
      RUTTddDr7BQ1wh4JQRCQJAlB8KA1s+xWIeyBRqOOJMkYloXqUnF7vSiytJ9wVXzA8eL3oFHK
      8MLPXifg91IsFJBkF4riQpYkLFNndGwcQRCQZYlWrUwhn2Z+LYnX68HWm2yky3TFwrhcMtID
      iBFqltK88PM3Cfi8pJPbDI6N06pVaFk2tmkwMjbGXmaXSsvC7/OgKjKSYFEsVzh79iySIDJ/
      8y2WUnUUTBSXC0U52Er+oYoF0nX9vu8DrKysMD4x8cCD4d6jUUxTMLz0dwYfUosfzW4qRby3
      956fu1bIYXnDBN3KQ7XrQ3YU85hqgJD3HlmebZNUOk9vT/cDaf93XgAODh/HoZsCOTg8TBwB
      OBxpHAE4HGkOlQ/gRIM6PGwOlQAcHB42zhTI4UjjCMDhSOMIwOFIc6iC4faxuXnlHcJdveQT
      KxTrJkgKbpfI4uIKHR0xttaWcfkjKNKH9zlrhSw1UyK9NosY6GZt9ibb6QI98a6P3Q02WxV2
      cnVCgV9XRy/nU0zPzOMORPHeY8fUti0SiSTBYIhHnGEE22hz6+ZNKi2LjmiIYi7F7Nw8kuJi
      fm6OatOgkN5mZ3ePaHcneq3E/MIii+sJ2pU8a1s7yGjMLSwh+8L4Pb9d6pnf2j6zzc3rN6i2
      bWKRILdv3qSrpxfbbDF9+w51zaKUTbK+nUYRTZYX59gttunpirC2NM/mTpbOrk62l6bR1Bha
      MUGmahEOfPaK9ofqSOR7ZFKriKE+mlsziLER0tkcWrPMTrpItZhldX2ds02NaqOC3tTpHj9F
      LZvk/PmzzC2ucOb8Gd66fZsnBiYp1sAv7lHRQMussZbKIqsBcrtbmKaFz+fj8S8+RzO1xq2N
      FlurBrbs5ktPPY7s9hP22KQyRTpCCi/96CV8kQ48iklb0zEEFX8whtwqEuvtw/eIMwZbNvT2
      9nB3aYtjY4PcuH6daHcPzZbB6bMXeOftN2nXy/QOTyLY4PaH6fQJ2N4+Mrur9IVV8pqbiycH
      uTS7TfzJE/fVPtuy6e3rZXZ5i6BQ5cbsCmcuPIbZqpDJVyg3DYR2mbZmc+zMaazVJQan+gBI
      Jndom1Af7uPy22/xxDcmyc3fQeq8wHBP9DPbdCinQK5QL4X1Wyi+GJbRYnlpjdGTZ4n6ZZqm
      zMTIINVaHctsUTNcrFz7FabsB6DeauPxBBgfHdi/mb3/j21DrV7HMjQSiQSeYAfhcJiuoItq
      UycYCOIVDcRgHLlZpcV+dfPhsSn2cruAjS/cSZfbYKOgc3K8j47+YSr5HEGXQLl5OEI4gtFu
      BLMFgOTycWJyjORuhtWZa4ydPM+Xvvx7dLlqrKT3zwzMb2Q59a/ymXpUmUvXl3jswtR9t80G
      QrFuMGrcXVzHLbSpt3UaxQLx0SlsrYktqQx0+SlVWxQaBh1+N1gmtuKhL+Lj8tWr+EJhSqUq
      x08cO3CM16EcAXp6epFtg1gsQqnWItrVT2JxDk+oi6gbdvN1+nv9VGoC3fEoJT3H6Nh+THjI
      56FlWIQ7e/DIHvweA02MElKh7fUi11rEuwNEIiFETHwKeFwSsjtGJNJC0ovYHXHcQLFaZDOV
      Z2pyvxJ5ansd36mznBqRUL0hIi4VqaebYq1Av/fRRIB+ANtkYXaO/qExEtsJTp2YZGF5k/4O
      P/OrBSZjNdLFErW2h+FYlUJdoaevD0kQ6Aj5yDYtAukVBLefSrmCr/P+ngcQsJifmaN/ZIoT
      EyMszM0h1EvovhhWNkF8YATZqFBpmIwGBPr6RhAw2d7J0NsRotqy+MpXnqKSWsEKR3HZFh2R
      g03TPvf7AJbeYi2ZZXxkEAFo18q0RPe9ows/MyaJRJqBgb4PXLVti1x+j67Oh38A5uMolUqE
      wuF79pCNWgXJ7UOVH61wW/UKuHy475Vy3DYpVRqEQ4EH0v7nXgAODgfhUPoADg4PC0cADkea
      Q+UEO7Mxh4fNoRKAYRjOiTCHh4ozBXI40jgCcDjSOAJwONI4AnA40hwqJ/g9Xnv5JTri/VSb
      GtvLy/zpX/wFN157ifHHfo+4UuEHr04zFFPpGjtLxG3j8QextCZtE1bm7jB15jFUl4IiCczc
      nQOzRb5Q5cnnv4yKTq3WxOXxYOvt/TyelokvGASzwTtX53n84ik0E/w+D/XSHmurS+xURP74
      K0/SajZo6yY+j0qj2USSZBAldjZWGZg4gUd5dH2K2arwzo0ZJNXHU4+fY2NpllypQjjSQSqz
      RyQaZSDm4fLddf7NHzxPq1ZieWWF9d0qfREXLd2iMxahrhuEo72MDd7fXDxWu8Kla3eR3QFk
      o0K9oXPhS8/ho8mrb17h2Kmz7KzNEYz14lMMstU24XA3E8M93Lp+hXJDZ7i/i3ypTLBjiHZ6
      Dit6nHOTvZ/ZpkMpAF3TsAHbsoj4YX5+mVKthWnbYFvoholt26RW77LjCWO2m6h2m6W1JIN9
      Yd54822+8uXnobZLAx+PnznGq7/4GYZp0S5scGWugKqYNEpZFFGkq7sTITbOyX4Xxb0Cl965
      gke0mXriWaLhGHpb4+mnnwHgtVdeprc7SqluIHgDFPdKeF0Sj50YYD2Z4+TIg0ng9NsguYOc
      PTHG5TurACytrBLv66dd2yPQ0c/W6jSjA0/heTdq1e0Po1gajz/1FBvTl2i1LfLFCsdPjnPt
      xsp9F4CoBjl7cpwrd5bxqS6mBr2kcnWGg00U1U8+nwcE6pUiJcNg4vgE168vMDHSy7lz5/j5
      y68xv1BiYGgQLJ1wNEz+gJmID+UUSPWFOHX6DE8/cR41MsDW/E26/1VmsHj/ME88/RxdXoG2
      poOpkS+3CKgKui0g2hYWYBoaSBLbiSQnx/vY3duPgIzEOpGw8AXCxLu66O/rptlqI7tU/B4V
      QVIJehR0Y19wdUMipO7Hqsiqh65IgLZu0dc/QGdXNy5JQJIlDOOAiSoPiN4oU9YUVHF/KTkS
      7WR0sJ9qG/RqDn8wTCAY/EB8ULqi0RfxgOxmpCeMx+cntZsmHIndd/uMZomy5sIlWpiGRr2h
      4fO5QJA5dvIEjXKB7v4hol4BfyhCaneXcCQKtsVWKstYTxRb9TE6PkY2nSZ4H+KDDlUs0HuZ
      4fbyeaIdHQi2Rb5QRBIEFElA9gRxizr5mkFH2I9tmayvrtDZN0wlt0PbEPGHAwTdLtq4CPsU
      btycZnJsgGy5xdjQAOXMMldm8zzx+FksvYlLEnF71PcLZSe2Eni9CtW2wFBfNwI2+UKJjth+
      zPnLP/8pI5On6e0IYrs8tFttbEMjv5ukZ+LkI001aNv76dG90Th76R1GRgbZ3EoxMjZCcmOV
      WO8wQa9CPl9EalfRgnGkdo2Ojg5K+TSFuslgPMLqZorxiVFk8f72j7Zts72xgi/ai2zUyFba
      dLgFNF+EZm6XSHwAq1mi0t4v2L26nmBkdJD1jSRdYc/+9XiUtfVNhscmEMwGdU060IGYQymA
      +31PWVHe7/Us08CwBFz3ij78BNrtNqr64UhTXddQlPt7guogfFLhbtM0EQ9DoWzT2E9n/zGF
      sg3TQn5AUau/8wJwcPg4DqUP4ODwsHAE4HCkOVTLoIIgIN5nx8vB4eM4VD6Ag8PDxuluHY40
      jgAcjjSOAByONIdSAJmdbRYWFkhl9+75HtsyqVTvXSS5Xq+xs73BwsICpVrr4xu0bZrN5m9e
      JLm1Tr2lf+yv1moHK9R8vzH1FvVGe///Wou19U1My2ZjdYlkOkejWmQrmQb2U7psb6xRqbco
      F7JsJdPYQLVawXogrqFNcnONUrVBtZjfb8/etyO5tU6tpVMp5tjJ5LEtg/XVNbR3C2VXCjlS
      mT1MvcXK8gqaYZHbTZIvVQ9k0SHMDQrXrl3j7IUL+FWRdK5Eo1qkWi6ykUgjWW2W19ZBVmm1
      GmwsL1GstxG0GotLi8j+TryKze3peSYmJ1mdm6azfwRVaHHr9ixN3aKQSbCZSLGXTaP4w7js
      Jt994efEoz7WtneJxTow63vsNUwW5pcYGRqglE+zsLSKLNosra6Ry+bZK9WgnqWEn5D3MOwC
      G7z64veoKHH6OgNMX7+M6pbYThdZW0syOTXB9WvXsap7eHqGsSpZ6raLmTt3yGYzCK0iLWT+
      +Ycvcu7cOSTx/u4Sa7U99loyc3dvIUoKldQGUkc/Lq3CXsNg9u4soiSytbSEVs9heUKsbmYY
      7ImxmUiSWFskm8nS0R/nxqW3yFRMGvUKfb3xz2zToRwB2vUKiwsL5MsNlhbnWFha4dKltygk
      l3jn6l2ifb3M3J5mK7HFXkVjd2uVOwsrxFSdVLFJu7qHKXmQ7CZNMUDE58LSypTaCrsbKyxs
      JKC8RyQeZnZpC8nloa+7g7mlNXp8BvObWVyBDmJeEcPa7wm3NtYo5ra4ef0Wuhojk0mTTawT
      G+gjubbxiJ/Ye0hceOzc+1+qLCukMwUkbI6dPMatm9dRRJNSvYmh6fgi3QTFJqGOHkRJJuBV
      MWQ/JyeHHoh1Ln8HnR6DQDTOxMQoFV0g7JZw+aN0+GRMG8ZGhzHNNjVdIZ/eL5SNIDAxMki7
      rVOsa8RiXWQTi4juAJVy8UA2HUoBCO/2PK22TkCsIQd76emO4/JG6IyE8HgUREFAEAQ8HjeS
      KOF1iaysJ5BlCdnlxjZ1ijsbdA5Nvn/fna012sh4XC4UxYOqvhu4Jgg0Gw0U0WRpM0tH2E+z
      lGZubRePe79nr9bqyKKIYVq4XC68Pi+iKKK36ige/0N/Rh+NgCCICECxWESUZFwuBUNrspva
      QfX4kWUFRZaoV8qkE6v880tvEQp6sdp1VlNFusL+BxYf1Czu8t0XXiYY8PDi974DqpdauUIh
      n2JmeRuPx82dmzdQ3B4sUcKjKmAbFIslbt66hUv10BHycOWdS4ydfQ6pXUKQjnhqxPdYmb9L
      rlDm9BNPE3AJLC4uMXXs18lTzWae6bUqF06N3Nd2N5YX6Rmbwv0RqdofJTvJJL39/fdMjVjd
      y2B5I4Tucwr0T0u1kMN0Bwnfs1C2QTKVo7+v56NfPyC/MwJwcPgsHMopkIPDw8IRgMORxhGA
      w5Hm/WjQRqPxyHNzOoWyHR42h8oJdk6EOTxsnCmQw5HGEYDDkcYRgMOR5kPBcG//8kf8+Jdv
      Eu/w88sri0yN9iEI+2k2RFF4f45umibCu+EIlmVimjatSoa/+i//yPEz5/iX73+XyWOTfP97
      P+DyKy8idIzz0t/937SVIL948Qe8dukG8aFxIv8qp8t7TvDc9E2y+QKaJRL0e99/3TTqJJMl
      QiHf+9dsvc7l67MM9HZy7eZt+np6WFucRQ124JJFUjs7FPNpVrd2iXd3fUIx6/1CeKF/lXDJ
      1JrMz81R0yASunfIQ2pnB18g8MjTjHwyNmuL86wn0nR1d2HrDW7dmqahw+7mMm1cNGsV/P5H
      Fd5hs7G8yG6+gkvQWFzZwBMI4XbB0vwC8/OLGKZOMp1HwUBUvcgHCNr70JngZr2KZYPWbHD3
      1lU25q7z1Wcu8uOf/ILnfv+P+NVrb3BuaojbM0t89c//e547O8w//Nf/TL1lMDjUT7EOqioR
      cxlcv3UL/B0Y9jpzl19mJ1dmXA7xtWcf42bGxWjPR5fhTKVSDI0fw+2SuX3jKrWWQdCjIPlV
      tma2kPxfobCzzenTJ1ibn6VSrpCrNFi5c53+0Qmm70wTGjiOhzLb6TLHRuOsrVylaZ1CaRe5
      PbMCspt2OYNuWgR8PuKTZ+n2tnnnym1ymQQtHS4+8TiJ+VuUjABSaz9cemHmNsViiUAoQqlW
      R9MtfP4AQ1GFrUyAkXjwM38ZDwXLIF2oE/dCptZGyCwTHTpJcvEK7UqV9F6Z8ZPnH6GBOslM
      hbhX582Exe89dY6bsws884XzjI8NspOvspdJUWkZCLbF6c6DpW/80BRIUIMc6/Mzu7LN4Pgp
      Bjq8zM7M4fF6qNYajJ96HI/dZGBkFMGysE2Nqi4xNdSJyx9l6vgkCnDh8Yv84ATZS0kAAB2c
      SURBVB9/wIWL5xDcHRS2Zxgc/+2KLyuql4GBAUJ+N9VKld3UDuWKxtBwH139A9x54+fY7hC2
      bbO6naIzrDI7s0Tf2ATXX32Fzvh+3EizmEXyhXCpKmP9UXZyVbRGnUZbJ5FIYAkynaEAo0M9
      pLIlVK+PrrCHmibR47XIVAx002Js8ji53QSwHytfK6RJ7JQYHB/DH4rSqhUJhoIUSweLTHw4
      7C/6CdhYlo1t2QgC2LbEl//wj+js7GR1+g1uzTyqCFeFsF9ibTvFQF8PSwsLtN89E7C9ssjw
      1Akee/JpJgd7yGV2efmNywdq7UMjwLnzZ5lfS/Hk6SlSew1kcwiXIpMtlIlEOzCR6I89wY07
      85w/PY7okvjTP3qO7XyTcydG3s+/GR2Y5L/9T/+R0XgU88vPokrP4va6ETwxgpKPs5F7ux+h
      gJfV1VUCwQhev4+YLRLr7ECRVKJdcUqFBKODcWyjweDUeU5MDHF3+jaSe4BoJEYk4EaVBbyx
      HszkBqlEiZqmMhnzITRaeNwqsViMrlgAv0tB9fqJ2TKgEAiFUN0ieV3mXEjBOnaaxdV5+ob2
      i2V7vX6saBeiJ4rP7SYWCaGpUCiU6Oq8v4F2DwRRIeyTyGpwStKx40PMzt+lq3cYS2/T1TOA
      1a4Qjj66kUwURXomTtMTVNhuuDh/aoJSuYyt+umJBhAFEFQ/Y4Nx9poHm3J+7vYBjHaDrXSB
      saH+3+qeuWyWjq6ue0ZF3i9y2SwdnZ/kYzgcNn5DAA1efPES3/jG73/ojUu33+HK3SX6J8/x
      e0+d+5TNtLl8aQavS2fq3FN47pE/1tkIc3jY/MYUyODW5bfY3FikMxriiWe+yJ35FH/+h1/g
      tWvz/C9/+T+QyxV442f/zNJWjmOnTnHp0jvIkspXnz3N9ek1dMlPTCiSKNo8eXaISzcWePa5
      L/DiT9/mxEQMWxC4evMu8eFJtqffAVnhj//j/8r4YXceHX4n+dBEPNI1wMmhDvpGhvn23/wD
      Zy6cA0FCtnVK5RIbiR1WtzN8/feeZGF5nZ7REwyFFRaXN3n86aex2w3WEhnCXglb8dIR9lC3
      ZUYHh5Atg7WVJb741a+T3l5GCcR4+vwk+cLBDjY7OHxWfmMEUDlzYgBN8XJ6fIRrN2YY7Q6A
      IPDNP/s6b755iRMXn+RPvv6HXLmzzDf/7dfYyZaR23HazSL/8r3v0z1ykm/+6dfZqcDpyR5K
      pRqnp06gVKp4omNMjk/wzqW3+dqf/Bn5nQS9HT4sn9P7OzwaPuQEa60G2XyJrng3kiggiSKG
      rmEJEq6PydFuWxamZSGK4mfO73mI/HGHI8IHRwBb5zvf/jbdfXHUjjFGoiLFtszO3Nt4R58i
      rjTwdQ8TlFqsJzJ09Ayil3fR5BAxj8lWKkeos4+Y20QO9hLxf7rzpod/F9Xhd40PCqC5R8vT
      yx99/RtYlsH3/vavubOc4qnzU1Db4a9++grBWB/9UZEzx0Z49bVlwI27nUbxeAmNXGDhzddx
      yzZ/8h/+u0fziRwcPgUfFIC3k4iV4e+//Z/pHD3G5laWUMhHMBAgU6wzNDDA+MlzGJlFltYS
      uEJ9lNMJmqLEcEikd2CYUG2J6T0/PtnpzR0OPx/yASzLRNfN/Xwyhg7s+wHvlSgVRZlLv/wh
      02tpnv/jb3J8MAaICNgIIvz4u3/Piee+wURf9ABmWZRKVcKhINVaHb/fh9ZuIiluZMEilc4g
      yipdnR38ZhxUo1HH7fG9f73daiEKNsVqk66OT7LJRtN0XK4PTt2MdhNb9tCul9AsiWj43tUJ
      9XYLQXEjH+I420atQkOziEXCgEU+m8UfjqE3q6i+IFjmR9ZBeyjYFtnMfoxWNBajuLdHKNaJ
      z+2iUavQNkX8bpFa28LvVhBl14Ey2B2qneD3qOU2+M6Ll/mL//RNvvvX/y/f/Mv/ncs/+UfO
      fuWb9CtFfnR1m5PdIk1PP0p7j+6hcdqlDMWmTSG1xtjUafzhKH5V4Nr1aQythltxMXr2CUIu
      WFtZwh3qwmwUqGs2omUyOD6FZBR54adXef7p01RaMD4ygGU0+ee//Rue+nf/G6s33kLC5vHn
      vrJfl3hphWi8n+peCsNWsEyT4f5OlhJFzp8cf9SP8aOxTV577Q3cksCxJ74Ee+ss5m1a5TRa
      pYw72kVnrIsTx8YekX0WpWKB1157k+PjA9SkECcnRvCoCq/96mUkQUYXbWwDenq6mDx+EuUA
      Ajh8/ZRtc+vmNP3dXu7MrTM00sfM1SvYrl/3uuVinmLdpJa4y3q2yuuvv878/CLX3r5EvV7m
      1cs38aoyzfwWpjdCejeHaLUp19u0qjlWN1O8fekycwsrlFObeF0206spVK+XjqCH2eUEWm6d
      3aqOKLs5c+o40EZxhYl6LCotKKYTJLNZLr19heX1HZIbq4h6kVRDobq3++ie3ydhGciqj+6A
      i0Jdp1Iu0TswgqHpjI6NINsW9WqWZLb8aOwTRGSrRufwCYKRKEFZZ3ZpHbCwDIOmpjE1PkE0
      7KNQrLKwtHag5g6dAGxbp61E+Nof/wnVzDqSp4O97A598V8Xbu4dHOXxJ59iqL+HcCjA2GAv
      TR1cgoXtDjIU85AtN5FVN5Zm0t8fx7RsJFGkWSkhe4OYuoGqqng8fjweF5ZlAyKtVgtLb5Cv
      6nhd4n6qQQHATaueIV2xCXugVCjgDwbRDR23quINBFFlGcuy3k/teCgRFfR6ic18naBs4A1G
      WJm7g+wOMDwyTKSjm2IuSTKRfmQmbq9vMjYxjqHpGKaFIktUa1VkRcXjkgh09OJSvUhWi1Rq
      50BtHbopkG1bGKaNIkvo+r4PIgggAIIoIQo2+ruv27ZNu9VEUd0YmoaNgCSJSKKIhYAsCczM
      zHLixHE03cTjVrFtm1ariSgpiAL7OUZFAcvef3+7rSGJAqYFLtWFAJiGjiApmHobCwHV5cK2
      LJrtNrIkI4jCvn0CNEoZMk2V8f6OR/sgPwZD1zAsG5csYQsiWruF4nIjCWAjYOhtJEW979mh
      f2v7DB1RUhDs/WfsdruxTBNsC8MCt0vBtCywrf3vyfXZi5MfOgE4ODxMDt0UyMHhYeIIwOFI
      4wjA4UhzqAplm6aJZVmP2gyHI8ShEoBlWc6JMIeHijMFcjjSOAJwONI4AnA40hxCAdgszc/R
      NiwKmSSZbJ5Kow1YbG1tA5De2aalf7Sz3KqVKNXbZJMb1DRYW5pnbmmNT9rts7QG2ULlA9ca
      lQJ37tyh0tDuba1tkclkP80HfORsry8zPbuAadlYeovp27fYTmVZmb9LOl8il8s/UvuSm6ss
      r21RL2W5decuxep+Vr6NlQVm5pfJ7SZYWNmgXMy/nzTrs3KonOD3WFu8ha5Gqa/fQOwcw+et
      UCvnSKZLVIs5FpdXOH/xcUqlPQQkOocmqedTHDs2xfzCEsdOnuDV11/ji3/aQ2aviVcsUNPH
      sEo7rGyn8Pqj5NPbmBaobg/nH3uC+s4K17d1erw2tuLhwrlT6IZFxCeykchydirOG796HXcw
      hl+1qNZbICn4Q50YlRyhjg7c0iHsT34TS2d7t0i3F7L1NkJmCV98gs2V62i1BmI6z/DkaTof
      mYEaG4k94j6T6ykL1RdCkSXAYCdTJqwaXNsx8CpgaN2cOnGwkJND+Y15on0UNu4guYNY7Toz
      d+cZmDxF2CtSapqMDfZS3CtgWC32yhpL19+gqu3HrVTrLbzeAMenRgATAQlRsDBMKBWLGHqb
      9fV1BJcPl+oi7LYpNzQCgSAeQUN3RzDLe7QAXzBEKByjXi0CFqLLT1iss7hTYXKwE39HL/lU
      iqALis3Py+qVjSAISALopo1hGMiKjG1LPPXMM0SjURLLV5lZTDwi+/ZTI65vbdM3forHjg1y
      ++78u3aLSCKcv/g4g/EO8rksb7xz/UCtHcoRIBKJIhltOru7KNZaHAtE2VqcRVCDBFyQzjXo
      7QnS1i2C0RCN3SzDI/vVzb0eF7pl4wtGcEleFLFGHR8hN9QlCVlxEQjIhEMhRAx8LgGXJCIr
      QTzeCkI9j+0P4wayuwlS+Qp9vX0A7CY3cY1NMtor4XJ78UtuzEiIilanx33vhAGHClHB57LZ
      bcBpUYfufqbn7xDp6kORoKO7H71RwP0I6webpknH8Ek87RxzKw1GhwcplRu4ZZ2i5mIi4iVZ
      8TPQbbHXOmKpEX8TS2+xtLHDsYmx/WjM8h5t2U/Ed79PNJmsrSUYGxv+wFXbtkjtpunt6XXS
      In4O+dwLwMHhIBxKH8DB4WHhCMDhSOMIwOFIc6h8gENkisMR4VAtgzqpER0eNs4UyOFI4wjA
      4UjjCMDhSHOofID3eOu1XxKMdqFZIsm1Vf7Nn/033L70K4bPPkOXXOGF16fpDav0T52nN/bB
      gs7TN68ydfYLuN/9ZIsLC7QbFUpVjSeffQb1YyWvcffuGmfOHH//Sq2UZ219jVTZ5mtffvKe
      v7m6tMDg+DFc0mH3Y2xuXLlMtW3xxaefhkaey3eWCYbCNHI7hPon8Mo24+OPKDWiZbC8tMTM
      7DwXzp0mWahx8vgJokGVy2++jY5MOKhSqpsM93YQHxhBPUAi1kMpgEajSe+gn61kCskoMre8
      RWo3R+9JCwSdtimiyrC+cIdFW0JVVYRmkcWNNKMDEV575WWefu55vEaeQlPmyXMX+OVPf4pu
      2TQzy7xydZNw2E81t41tQ0csQmTsIpNdMDu7SDa9jW3ZPPHl3ycU7sBszvDYE18C4MUf/hOh
      QBBJcVPSLerVBj6PhydP9bOSyHFyuOsRP71PwNJoGBKDAYFUpYWU3mT4xGOsT7+JC8gl1+kd
      Hqelm7iVRxDfJMqMDPeSyNZo1cu4RJlqrUE06OGpZ57l8uuvYtgqGE1yxSq+cA018tkrDB3K
      KZCkqHR0xXn2i1/A1zXK6s036eqNv/+6Pxhi/NRjxBQNU5TRGhWKNQ2/S6KlGzQ1A5cioTXr
      CC6VdCbH2ak+tjP7tciGxo4hYxCMdDI6MMjxY2NUak1Ur4/uaBBBDTAQ81Jr7WcjK7ag07ef
      fcwbiHJyvJdCtcWx4yfp6x/Eqwi43G7ardYjeV6fCkHEMg3apo1bEXG5FFrNBoKg8KUvf4XO
      zi52N+5w4+biIzNxZ3WRoamTdPQMcu7EGFvb+5GpC3eu0Tl6govnL9LX1UmpsMftO7cP1Nah
      HAGOnThFMOBHsC2mJicRJifwqBIurwJiiLPH3Pi8HiYvfBFzYZHOvnOUs0nqjR4i3TEiXpVa
      vUVHxyDCxgxytJO8HWaqN0g1vcvO1jqPP34GW2/iliV8fg+jbglwMzA8gMcjUWsL9AYVwGLq
      2LH3bWs1Kuw2Bnj2qfMI7iA+RcbUY6TTWYZGTj6yZ/ZbIyiMD3ZTbNmEBA27d5Ls0hJTp85i
      6G2GxibwqgKR3kdX9NsXGyDQ6ceqa6xs7HDx7AmKxTzVpom3VkQz40S64kSjYQrNg+0dHaqN
      sAdBo17H4/O9Xyjb0Jq0DBG/97NFi5bLZUKh0Ieu1+t1fD7fASx1eBT8zgvAweHjOJQ+gIPD
      w8IRgMOR5lA5wU5aRIeHzaESgGmazokwh4eKMwVyONI4AnA40jgCcDjSHEoB1Colcrkc1Vrj
      nu+xbYtW+94pCzVNo1IuksvlaGnGxzdo2+8W5PvARcqlIprx8T6Jpt3bhsNKq1mnVKlh2/un
      8EqFPdqaQb1aQTPMR/aZDF3DMC1ajRqlSg3LNNjbK2C8uzjSrFcpV+sYWotqvYFh6JjWwbax
      DpUT/B5Xr7zDibMXMM02ewUd0dYRBJtcqUk84mc3l6Ur3kejUadVKSP5wsR8EsndLD1DEwQ9
      Indn5pgYHeTujSuc+uJXUUWDldUt/NFORL1GqaGj2AbxoTHcNPmXn77OHz3/JOlig/HRQYx6
      ga2dDJXqOl968iLNWomN7TQD/XFS6Qyqy40tuZAaedw9k3QFH1Fl9U+LbXLt2nUUQeDEE1+E
      4hYLaQ2jsUC7XMId6yYWjnF8avQhm9Xmx9/9B85//d+zffcGkm3hCvjw+/xs7BZ47NQY165d
      RxIEWoiINvTEOxmfOs5BQvYO5Qhg6m3yuRyttsns7Cyzc3O8/tqrJJdu8dbl68iBIDdv3GIr
      ucV6IsfG0izXp2dR2jm29xpotQKG6CYU9CJ4YnSHPFjtIlvZJhsLs9ycmae+s4HsVZhe2ERS
      3HTFwty+O4vfLrG4vYfLH2OgM/D+CLC2vER2Z4Url69S1FUWF5fYXl2ge7CXjZX1R/zEPgWW
      gaz6iYdUCnWdcqlI/9A4eltjcHgQyTRoNgrs7lUfrl2iwplTx7HRkV0B4mGJRE5jdHiISqkA
      aChqkFhApjs+QCTkpVSusbK2ebBm74vx9xlRVgiGQkiSjNsug6eTWDRGtLuPWDBIMOhBeDeC
      w+/3IYkiiiSQL5SRRBFRkrEtk1Jqg+jAxPv3rZb20BFxq25Ulx+/X8W2LUBAa7UQscgWavg8
      Kq1ylu1cE5e0306pUiXg86AbJm6Pl2AogCgIGIaGpHxOen/YL5TdKLNTaBJQTLyBEBsr88iq
      n5HREcKxTkr5JImth1vt/tcFyRW0VpHkns5gp8LC0gqhSJR6w6DdKJAta4yNj+BWvQjG71ih
      7PcywzUbdTTdQFZUVEXEFmUEy6ClGbhdCqIsYWgGvFfI2bbZWJ4jmcpy8dnfJ6wKzMzOceL4
      FLYgIUsiZiPL5bsZnrhwHAELEfbvY9q4FIlmo4miyLQ0E5/Pg4BNvVbD5fbuF+3W2rR1A0WS
      EGUXtrXvVyTXV+gaPY7fdSj7ko9Ea7fQTRu3SwZBotmooXp8SOJ+oWyt1URxe5DFh/uZTF0D
      ScHUW+gmeFSFWr2Jz+/DNE1s08C0BbxuFePdwtm6BR71s+cxPZQCcHB4WHx+ui0HhweAIwCH
      I40jAIcjzfv7AI1G45GnJrQsy4kIdXioHCon2MHhYeNMgRyONI4AHI40jgAcjjTSt771rW+9
      90O7mmdxO0fYKzA3O8+t+RUGe6K8/vrb2FaLS5evsLaVZHBolANko/tEkttJXr25zPJ2jsGB
      OMq7bRmGifju7qTWqrO6W6Mj5HlwhnyOMPU2mXKbUmGPzWyN7mgATIO5lW2atojZrLOU3CPs
      kZlZSSC7vfhUmc3tFJuZMl4XzKylkF0qiUSKctsmGrh/z1ZrNdirGxTyebZyNfyqwPRyEn8w
      gFsWsW2bnWwRWTC5u5LEGwiQSadJl1t0hHxUy2Vm1tMEAj7W1hNoyAS9CslMkaD/s9v5gT9j
      l8fD6y+/zNLtK2T28nzvO9/l5q2bvPCTlwn2jFJP7zBx5hwPOmNeV7yLYi7HiWMjXLp8ne/8
      8iZzC8v8X/98iUtXb/P3v7jB2uoW6cYnhDkfEUxT58c/e4uCLqJZIs29LCUddF0jGPSzvJHi
      latzaLrOyuoWgsvNwkYabIs7S9u4PSqrq9s0TQGfKuL2+VndSt03+wy9zQs/u0zVlNBskUYh
      x1qmzmSvn9urWcBmcXGJK0sZWm2DsEdgYXmTN2aSNNr7YeqFaov+kMLrV2awfREWV7dYW9vg
      zZmD1TP+gAAE2Ue3z+ZXN1c5f3yYyYlhfvTSW0wM9aC43KguF76A7/0QnAeFS5Go6RJxtcVy
      AXztMtlqk/MnR6i0BbLpDPPJApN90QdryP/f3rn9RnGecfiZw3rP5/Wud72wtrG9PmBsHCBJ
      A4mpehEpalW1Uq8rVYra/6H/QS+qqooaNWpQS6NUJQGhOJxSCA0hGEw4+kRsWG/sXa+969Oe
      17sz0wtoC7ioDaGYxPPcrTTa753R/Ga+d97f973fECTJQCAYpKXehFgrU7N5cBlAMpiwSQqS
      WMXiDFDO5siUFYyVLEa7A03T2P9iH4lEiuZtzXQF6rgZz+K1yYiS4YnFJxuMhBqDhN0GhGoJ
      xeKmLWDl/GiK3dEGQCDid9IY8uN02smvFigWcuzY0UkmswSA12Hk6vQK3+lpIpNKsFRUafS7
      iYSecKf45/f04Qltw2Wzsv25PXRF2+lo3YosgtcfoO4pGKSqpQKNkTBmqxO7miNndOI1GSiu
      LnM7mcHu9mCx2gjYnsnlDBtCncWMvFbkwsQc9Q4zqfQK8fgst5KrtES24jEp1DmcBBwWlivg
      rlMplEpcm5jGYncQiycYm8liF8uMTC8QCT/ZTX5N1rvxfTaewuc0c254FJ/XxerKKuWaRnql
      TGvYzbXRKXKqgd6OJlZSCRr8HlJLOT6+NIHf56SQL6KqsLe/nXy+TGPD13sI6nWAbyGappJe
      KeB32x95TGYpi9ttR9rgtlSZpVXcbieP2lV+rVSiqMm4LE/ujXQ/ugB0NjX6Z1CdTY0uAJ1N
      jS4AnU3NM+UGVRRFd4PqPFWeqSRYXxKp87RZNwWqFHPMJudRaxUWl7Nf6c80VSGZSFBVVNLp
      NJoGmfQCqeQspTWF9HySbDZLLBYjFouRL33zNpXS+XbxgBcI4L2DbzE2MYWxTuT9Y+cw1hmx
      GzWGLl3B6bRz7crnqILIyM0RvIEG6mSRufgUo1OzrC1N88bb77Nv4GWOvPNHmqKtHDr8AcMf
      HaVsDXH07V8j+1tJjA5xcTxBtL0dq/nfK/pVVd3waZjO5mJdKbVvZz8nz168Ox0RJD7/9BS5
      aDvnPz1PrlhiaiZFePIa12+nmCuK/High6MnPyEasjEuuejq3YnZINLXsYVjgyeIdPQxXclx
      Z+g4RncQyWSnv6cDbb4Ov1vvqaWzsawTwNjoGCajTDZfwu2px1YqEI/dweZ0Ua1VcXsDNHnc
      pCtmutubESQZk1DhVrzEC3vbKKtZRKCrfxcH3vsVv/z+D5m+MYysrdIWbfsPIawndifO4IVx
      7C4PP3l1DxYJ0DQWVwt4XXcbY+eXM1xNrrGvO/Qkr8emYDGdYWpuhUAoSJPXws1b0+SrYDHA
      SkWjxW3C7KvH93+qvv435hIp4ks5fL56krNzBEMB2u75vq5cG8PkdBKbXWZXT4TMapnuSP1j
      j7UuCdZUlZqiIssiqqpxd6skAVXTEO6VzUVRpFarIcsygiCgqgqqqiFJIqoKkiQCGrWagiRJ
      KIqKIHC3U6MgIqChAtJDvqL7k+CDh0/z2qsvcWTwHPmawO72es7dKdBbLzGSyLI3GsAcaqK3
      8fGbJG9ONM5cGueVnjDn7+R4PmJlOF7AVMuzUq6BoiKbzezqjGAzbYwArl8fZ6Fcw+NwsLBS
      JOh307etgWRyjrNX4/RHg0wtFDBKGl2tERq9tsce66EkuMrk5DQGg4wgiEiShCTJiJJErZzj
      4tAQi9kigiBgMBjuE4R0TwzivZsfQPiXQGRZYHFxiS9jU9Q0AUEU193896MpFXJqHea1HDWz
      m3qzSKmi8EJnkExJo1pVmFnM0+x/tNdF59EYZJmZ5CKNATeVYgmbw0quovJKfxsWi5lqpcjF
      kekNi2+potEdsFEWTQz0b2N5OQto3E4soqCyZWuYZo+JWlXl8liMr/Ph/KEkuMCbv3mLTL5I
      fjmD0+vi6o1JwkEv7/zpIO2dHUzensGkZvnw1N/xel2cOX2K8ak5GtwGTpw8Q2q5SG5uikuj
      cexShcETZzCIFX73+0OYjBper5fjgx8g2X34XA8q959JsFKtYnU4CAW8CJUc/i1baW1wsqYI
      1InQ1tLI1gYPYa/+9P/qCBhFjbxWR4PdgNHmIJvO0NQURq2UaQj5Ya1Cc1MYq3Fj3LYmCRYr
      Ip1BG7e+TNPeEqRSUYg2B/E4bHjtRqoYCLnNOFwOfA7LY4/10BQoyxu/PcKOFjMLZcjlS7T1
      D/BSV4A3//AuP3/9p+Ryef767p/50Wv7+cuxC0hmJ7Z8EiwW+vd9l9MnT7M8H8dhd9HV28MX
      E7fYNfAyo0NfYBIWkE1W+gZ+wN8GD/OL13/2QDB6HUDnaSM+/HMtN8/IzAov7/8etydj9Hdu
      AcnIro4QBw4c4PSFG3S2hDn04Sc8t7MHn9eDy+MhEmnko+MnWBOMdEdbsfkaqXeYkUQBRZEp
      Z+fRTFY6urdzdvAQzdFehi8Pc2P4MpWNOXcdnUdXgqcnrhJbFhh4sY//xTGemh7jxMeX6N69
      l93bWx8rGP0NoPO00a0QOpuafwAVMa8ATca6qwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Indid.Table.Supply' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Supply' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across Miles Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Miles Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VMT modelese' width='192'>
      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
      OSNst/3/H98Mtcp70vIIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='VHT modelese' width='192'>
      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
    </thumbnail>
    <thumbnail height='182' name='Across VMT' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Across VMT chart' width='192'>
      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
      M6MejxwJOAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='98' name='Across DailyVMT' width='164'>
      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
      5Cnj124L8v+djGtd6tN97AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hourly VMT' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3daZAc533f8W93T8/03LOzc+yNXWCxuAgSAEUKpEiTOkxalijash3FiSpv
      UvGbvEhV8iJv/D5VeeNSpeJK2ZWk7DhVNm1HlhPJNkVRonhIJEGc5AKLve/due++u/MCIIQl
      bmIXS2Kez6vd3ul+nmd6ftv972sk3/d9BKFLybvdAUHYTSIAQle7GgCf8+fP4Rk1zl9evOWL
      33r7rS2/r81fpljXufjRR7hXd6TOvfdzKm0H37W4ND179ZUeb7/1zpZ5fc9mbn6ZlcU5ms0a
      05dneOfU2Rsb9Sz+4e+/zyuvvMK5S/N3GI7J22++v2VKaXmKC9Nrd5hP6FbSlRrA57//8R8R
      iydwEiMEOwVC6UHCkstQRmO52KTckZDdFoOZXrK9MbT8QTJyhZ+ense3TVIhl5WyTlRusV73
      ePz4Y2xWW9DcJJQdpr6xxmA2xtx6nW++/FuoZpHv/Y8fkA+2GT9+EgmVYr1O1GtTt4OkQg7J
      oYM8+egB0Kv89eunef6Rfr7/kzM8/cQRPjh7ifHRATK9SapNi4W5afYdOcLS1ArJiEXJCHBo
      T5p3f/kuB55+medO7Nvt91r4DLq2CxRO5vjdl17AaVeoWSqF9WXWluY4c+YcxVKZLz33FSTP
      ZU9/nL997SxD2TjR3mFaS+cZO/Qov3j7TeaXVrBcia9++Wk2S23a1TXWyy0Gsr24rs27b73F
      3MISummzubTAYD5BMN1PtdagWW/hGC3efOttFlZWSSUTfDR5cUtnzU6T/Y99kaWLZzn97nuk
      +3P88Cfvo3Q2OX3+Iyr1Jq7d5s033mJpcZUPL11maGgA6YG/rcLnxbUtQKFQJJtOUGyY+Ead
      QCSN7LSp1NvE4zGSPRlatRLryzMUzShffuoxAJr1OpFEkk6txHqlTa4nQigcRTdsPN9Fsg0s
      KUQAl3AowFqxzr59Y3TqVeRgCAlotZqowTC2bRHAoaa7xIPgq1FyvSnwHEq1FnFNQfcCyHab
      cq1Jrn8I3zGJRjTm5+boyQ9h6y1U2aPadhjMJllcXiM/OEIyFt7dd1r4TJLEYVChm4mjQEJX
      EwEQbsl1XRzHwfO8m/7t+um3+vmzLrDbHRA+uyrFZd49PctAr4ruR0gkE8hmnfzYI3z4/s8h
      GCauaaiRKK7nIVsGWiLF8tomX3v+md3u/l0RWwDhlrJ9/QwP9lNZm6fW8dGNJhfOnaPRNpCV
      AIfHhzl74SIrm1U8u8Hm2iofXppDkj8/HytRBAtd7VNF1bKs7e7HrnqYxnOrffbPq51eN58q
      AI7j3NXrfN/Hsiwc1702zb3uZ9/3cV3v6kpzcV0Pz/Nwb7MSPc/Dv25+x3H45CbM93087+43
      bHc7Htd1r7XpOA6+72PbFq77q776vod7te+ed3Vst9jIXj/GK332ri33EyO66w/1zee/Oc91
      ca+26Xoe3tXxXb+Oru+b67pX1s3Nlu9v7aPrOtfehy0v87y77t/H47kbH3/WXNe59pnyPQ/L
      sra09/E6BB/PdXe2CPasNn/2Z3/ByS89R6PeJKxJrK0VmNg/RjiRQ2qt8uZkAak8TTCWJtx/
      gEygQzQSoGzFeWQ0xcxKCUmv07Y9Dh97krNvv05+eAgtkkLWC5xbrPNbLz7De+9+QDgep91s
      0ZNOUK1bfOnkie0bjO/z2g/+N32PPMs//t0PSCkmv/dv/z0/++H30SJJkokE+VyGRmWNj+Yb
      /M63f5PTv3yLlYU5Tr74OyidTaotg2qhhByO8sQXjvPaP73KQH+W/MgEnfVLLFRtaqtLPPHC
      yzileTqmS6nWJBJLYBktnn3mmW09q3325//IdKlFuVLn6NHH2JxfZPT4IVbmlxhKxZGSeVIR
      leFejXfOLbJaKDGQkNF6Btk30MNmsUSh2iIcS/LFR8f50Wtv0pdOMHroOO3NaebKLhN9EZZK
      BtGgQ7OlEw8ryIkxju7v38aRgFFb5//9+Oc0qjWCyR5qLYffe/4Qb5yeIz80RioRgXaV+Y0y
      I6P7OLInxQdT6zt/FCibH0Qya5w6dZaRif1kkwk+PPUuX3rp9/no/AqaZyNlBqgVi+RGZXTd
      IZ2O47U6bKzUOH1+gYl8nLpusFlqomkaq6uraJE2ezJhXNvAaDc5/d679O57hFRYwfccPH97
      CzHPbtHy46zMTpLRQA/0IAHBUIRHJ4b5v6+fYqRaolYtUSpbGJaN4/rEExGq5Rr1lUusVerE
      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
      MrHToQoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Across VMT Share chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='Across FwySpeed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across FwySpeed Chart' width='192'>
      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
      vToAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='124' name='Across RoadSpeed' width='192'>
      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
      E17dkhKZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Across RoadSpeed Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VMT by speed' width='192'>
      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
      6a0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='184' name='Across VMTSpeed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across VMTSpeed Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across VMTSpeed Share Chart' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
