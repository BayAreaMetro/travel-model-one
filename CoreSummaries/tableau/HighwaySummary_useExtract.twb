<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Effective Hours' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='8.0'>
        <calculation class='tableau' formula='8.0' />
      </column>
      <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
        <calculation class='tableau' formula='1454' />
      </column>
      <column caption='Occupancy' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
        <calculation class='tableau' formula='1.5' />
      </column>
    </datasource>
    <datasource caption='avgload5period Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\avgload5period.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>a</remote-name>
            <remote-type>4</remote-type>
            <local-name>[a]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>a</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12113</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>20443.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>b</remote-name>
            <remote-type>4</remote-type>
            <local-name>[b]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>b</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12115</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>20443.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>385</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>12.800000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>4</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>lanes</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>8.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gl</remote-name>
            <remote-type>4</remote-type>
            <local-name>[gl]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>gl</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>10.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>use</remote-name>
            <remote-type>130</remote-type>
            <local-name>[use]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>use</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;   ?&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;4.0&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ft]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ft</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>10.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>at</remote-name>
            <remote-type>4</remote-type>
            <local-name>[at]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>at</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>7.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cap</remote-name>
            <remote-type>4</remote-type>
            <local-name>[cap]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cap</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>22</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2000.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ffs</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ffs]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ffs</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>10.0</statistic>
              <statistic aggregation='Max' datatype='real'>100.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fft]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>fft</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>554</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>19.370000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cspd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cspd]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cspd</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5621</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>65.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vol_tot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vol_tot]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vol_tot</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>242544</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>49725.989999999998</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctim</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctim]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ctim</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1338</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>30.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vc]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vc</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10854</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.9641</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeperiod</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeperiod]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeperiod</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AM&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;PM&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]&quot;' value='Growth in Roadway Lane Miles from Year 2010' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' value='Share of Vehicle-miles Traveled' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]&quot;' value='Share of VMT' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;' value='Share of VMT for Link Type' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:3]&quot;' value='Share of Daily Vehicle Miles Traveled' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;' value='Share of Roadway Lane Miles' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_6350905173822671:qk:3]&quot;' value='Share of Total Roadway Seat Miles along County' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' value='Vehicle Miles Traveled per Hour' />
        </aliases>
      </column>
      <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Delay' datatype='real' name='[Calculation_2320829171401165]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([ctim]-[fft])*[vol_tot]/60' scope-isolation='false' />
      </column>
      <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
      </column>
      <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
      </column>
      <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
      </column>
      <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
      </column>
      <column caption='Congestion (volume over capacity)' datatype='string' name='[Calculation_5010829191108792]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [vc] &lt;= 0.00001 THEN&#13;&#10;  &apos;0 (dummy)&apos;&#13;&#10;ELSEIF [vc] &lt;= 0.75 THEN&#13;&#10;  &apos;Light&#13;&#10;(v/c &lt; 0.75)&apos;&#13;&#10;ELSEIF [vc] &lt;= 1.0 THEN&#13;&#10;  &apos;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Heavy&#13;&#10;(v/c &gt; 1.00)&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='VHT' datatype='real' name='[Calculation_5810829165448827]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ctim]*[vol_tot]/60' scope-isolation='false' />
      </column>
      <column caption='Roadway Seat Miles' datatype='real' name='[Calculation_6350905173822671]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[distance]*[lanes]*[cap]*[Parameters].[Parameter 1]*[Parameters].[Parameter 3]' scope-isolation='false' />
      </column>
      <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='vcRatioTimes100' datatype='integer' name='[Calculation_6530829180003764]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT([vc]*100)' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Time Period Duration' datatype='integer' name='[Calculation_7220911171450081]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [timeperiod]=&apos;EA&apos; THEN&#13;&#10;  3&#13;&#10;ELSEIF [timeperiod]=&apos;AM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;MD&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [timeperiod]=&apos;PM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;EV&apos; THEN&#13;&#10;  8&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
        </aliases>
      </column>
      <column caption='VMT (Congestion non-dummy)' datatype='real' name='[Calculation_7680829191605709]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [Calculation_5010829191108792]==&apos;0 (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='VMT Per Hour (Daily)' datatype='real' name='[Calculation_7880911172232239]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_4420828151331817])/24' scope-isolation='false' />
      </column>
      <column caption='Vehicle Seconds of Delay per Mile' datatype='real' name='[Calculation_8200829171900729]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Calculation_2320829171401165]*60*60)/Sum([Calculation_4420828151331817])' scope-isolation='false' />
      </column>
      <column caption='Lanes' datatype='string' name='[Calculation_9060829180125573]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [lanes]==2 THEN&#13;&#10; &apos;2&apos;&#13;&#10;ELSEIF [lanes]==3 THEN&#13;&#10; &apos;3&apos;&#13;&#10;ELSE&#13;&#10; &apos;4 or more&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Facility Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_7550828155717668]'>
          <bin value='&quot;Collectors&quot;'>
            <value>&quot;Collectors&quot;</value>
            <value>&quot;Expressways&quot;</value>
            <value>&quot;Major Arterials&quot;</value>
            <value>&quot;Other&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
          <bin value='&quot;1.0 to 7.5 mph&quot;'>
            <value>&quot;1.0 to 7.5 mph&quot;</value>
            <value>&quot;7.5 to 15 mph&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='San Francisco' />
          <alias key='2.0' value='San Mateo' />
          <alias key='3.0' value='Santa Clara' />
          <alias key='4.0' value='Alameda' />
          <alias key='5.0' value='Contra Costa' />
          <alias key='6.0' value='Solano' />
          <alias key='7.0' value='Napa' />
          <alias key='8.0' value='Sonoma' />
          <alias key='9.0' value='Marin' />
        </aliases>
      </column>
      <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
          <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
          <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
        </aliases>
      </column>
      <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
          <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
          <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
          <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
          <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
        </aliases>
      </column>
      <column-instance column='[Calculation_6500829184447940]' derivation='None' name='[none:Calculation_6500829184447940:nk]' pivot='key' type='nominal' />
      <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcto:sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_6350905173822671]' derivation='Sum' name='[pcto:sum:Calculation_6350905173822671:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Scenario,Speed Bin,Time Period)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:src:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_6500829184447940:nk]' />
          <groupfilter function='level-members' level='[none:timeperiod:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.378277' measure-ordering='alphabetic' measure-percentage='0.475655' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:gl:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>4.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>9.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>6.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>1.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>8.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>7.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>3.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>5.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Effective Hours' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='8.0'>
          <calculation class='tableau' formula='8.0' />
        </column>
        <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
          <calculation class='tableau' formula='1454' />
        </column>
        <column caption='Occupancy' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
          <calculation class='tableau' formula='1.5' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='AcrossScen DailyVMT' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily VMT</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT Per Hour (Daily)' datatype='real' name='[Calculation_7880911172232239]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_4420828151331817])/24' scope-isolation='false' />
            </column>
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7880911172232239]' derivation='User' name='[usr:Calculation_7880911172232239:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='34' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_7880911172232239:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen FreewaySpeed' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]'>
            <groupfilter function='member' level='[none:Calculation_7550828155717668:nk]' member='&quot;Freeways&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen FreewaySpeed Chart' tab-color='#eaeed3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Freeway Speed</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]'>
            <groupfilter function='member' level='[none:Calculation_7550828155717668:nk]' member='&quot;Freeways&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk] / ([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen Miles Chart' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Growth in Roadway Lane Miles from Base Scenario</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC'>
            <dictionary>
              <bucket>4.0</bucket>
              <bucket>5.0</bucket>
              <bucket>9.0</bucket>
              <bucket>7.0</bucket>
              <bucket>1.0</bucket>
              <bucket>2.0</bucket>
              <bucket>3.0</bucket>
              <bucket>6.0</bucket>
              <bucket>8.0</bucket>
              <bucket>10.0</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk]' scope='rows' value='Growth in Roadway Lane Miles Relative to Base Scenario' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen Miles Table' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC'>
            <dictionary>
              <bucket>4.0</bucket>
              <bucket>5.0</bucket>
              <bucket>9.0</bucket>
              <bucket>7.0</bucket>
              <bucket>1.0</bucket>
              <bucket>2.0</bucket>
              <bucket>3.0</bucket>
              <bucket>6.0</bucket>
              <bucket>8.0</bucket>
              <bucket>10.0</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]' value='p0.0%' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk])</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen RoadwaySpeed' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen RoadwaySpeed Chart' tab-color='#eaeed3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Speed on All Roadways</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen VMT' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='122' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='38' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk])</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen VMT Share chart' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Share of Vehicle Miles Traveled by Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen VMT chart' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hourly Vehicle Miles Traveled</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' field-type='quantitative' max='14000000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen VMTSpeed' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation1:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation1:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen VMTSpeed Chart' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Vehicle Miles Traveled by Speed Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen VMTSpeed Share Chart' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Share of Vehicle Miles Traveled by Speed Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Delay modelese'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Delay' datatype='real' name='[Calculation_2320829171401165]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([ctim]-[fft])*[vol_tot]/60' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column caption='Vehicle Seconds of Delay per Mile' datatype='real' name='[Calculation_8200829171900729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_2320829171401165]*60*60)/Sum([Calculation_4420828151331817])' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2320829171401165]' derivation='Sum' name='[sum:Calculation_2320829171401165:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_8200829171900729]' derivation='User' name='[usr:Calculation_8200829171900729:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_2320829171401165:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_8200829171900729:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_8200829171900729:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='RoadLaneMi by County'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcto:sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC' />
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='RoadSeatMi by County'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Seat Miles' datatype='real' name='[Calculation_6350905173822671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]*[cap]*[Parameters].[Parameter 1]*[Parameters].[Parameter 3]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6350905173822671]' derivation='Sum' name='[pcto:sum:Calculation_6350905173822671:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_6350905173822671]' derivation='Sum' name='[sum:Calculation_6350905173822671:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_6350905173822671:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_6350905173822671:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_6350905173822671:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_6350905173822671:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC' />
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_6350905173822671:qk:3]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='VHT modelese'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='VHT' datatype='real' name='[Calculation_5810829165448827]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ctim]*[vol_tot]/60' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_5810829165448827]' derivation='Sum' name='[sum:Calculation_5810829165448827:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_5810829165448827:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_5810829165448827:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Road&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='136' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='VMT by Congestion'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Congestion (volume over capacity)' datatype='string' name='[Calculation_5010829191108792]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [vc] &lt;= 0.00001 THEN&#13;&#10;  &apos;0 (dummy)&apos;&#13;&#10;ELSEIF [vc] &lt;= 0.75 THEN&#13;&#10;  &apos;Light&#13;&#10;(v/c &lt; 0.75)&apos;&#13;&#10;ELSEIF [vc] &lt;= 1.0 THEN&#13;&#10;  &apos;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Heavy&#13;&#10;(v/c &gt; 1.00)&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT (Congestion non-dummy)' datatype='real' name='[Calculation_7680829191605709]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_5010829191108792]==&apos;0 (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_5010829191108792]' derivation='None' name='[none:Calculation_5010829191108792:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7680829191605709]' derivation='Sum' name='[pcto:sum:Calculation_7680829191605709:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;0 (dummy)&quot;</bucket>
              <bucket>&quot;Light&#13;&#10;(v/c &lt; 0.75)&quot;</bucket>
              <bucket>&quot;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&quot;</bucket>
              <bucket>&quot;Heavy&#13;&#10;(v/c &gt; 1.00)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='VMT by speed'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6500829184447940]' derivation='None' name='[none:Calculation_6500829184447940:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation1:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation1:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_6500829184447940:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='VMT modelese'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]' value='p0.0%' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='22' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='80' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='144' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Hourly VMT' tab-color='#f2e6e6'>
      <layout-options export-orientation='landscape' export-scale-mode-auto='false'>
      </layout-options>
      <style>
      </style>
      <size maxheight='850' maxwidth='1100' minheight='850' minwidth='1100' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='75000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='75000' id='3' type='layout-basic' w='99636' x='0' y='0'>
              <zone h='75000' id='1' name='AcrossScen VMT chart' show-title='true' w='99636' x='0' y='0'>
              </zone>
            </zone>
          </zone>
          <zone h='25000' id='8' name='AcrossScen VMT' w='80400' x='0' y='75000'>
          </zone>
          <zone h='25000' id='9' name='AcrossScen DailyVMT' show-title='true' w='19600' x='80400' y='75000'>
          </zone>
        </zone>
        <zone h='9375' id='6' name='AcrossScen VMT chart' pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' type='color' w='14000' x='81600' y='31125'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Miles Dashboard' tab-color='#fff6be'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='78375' id='1' name='AcrossScen Miles Chart' show-title='true' w='99600' x='0' y='0'>
              </zone>
              <zone h='21625' id='7' name='AcrossScen Miles Table' w='99600' x='0' y='78375'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='10625' id='6' name='AcrossScen Miles Chart' pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' type='color' w='14000' x='45100' y='28250'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Delay modelese'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='VMT by Congestion'>
      <cards>
        <edge name='left'>
          <strip size='195'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='RoadLaneMi by County'>
      <cards>
        <edge name='left'>
          <strip size='185'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Facility Type (group)]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='RoadSeatMi by County'>
      <cards>
        <edge name='left'>
          <strip size='185'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Facility Type (group)]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen Miles Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen Miles Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Miles Dashboard'>
      <zones>
        <zone name='AcrossScen Miles Chart'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='AcrossScen Miles Chart' pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='VMT modelese'>
      <cards>
        <edge name='left'>
          <strip size='202'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:ft:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          <field>[textscan.41879.461103888891].[none:Calculation_4320828142204452:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='VHT modelese'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen VMT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen VMT chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen DailyVMT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Hourly VMT'>
      <zones>
        <zone name='AcrossScen VMT chart'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[none:src:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='AcrossScen VMT chart' pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen VMT Share chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen FreewaySpeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen FreewaySpeed Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen RoadwaySpeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen RoadwaySpeed Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='VMT by speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen VMTSpeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen VMTSpeed Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen VMTSpeed Share Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Delay modelese' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VMT by Congestion' width='192'>
      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
      X4L/D64pceVyBY9AAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='RoadLaneMi by County' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='RoadSeatMi by County' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29d3Qc153n+6mu6txIjZwzCIAgQTCBSQwSk0TlREmOs+MZ2zOzO7Pn7N97
      Zs47Z9++eWffzps34zfz7PWMLduycqQYJGaCBAmQBAiAAIicc6MbnbsrvD8A0rJN26AIWWJ3
      fc4RKTRvV91bqG/9bvjV9wqapmno6MQphi+7Ajo6Xya6AHTiGl0AOnGNLgCduEYXgE5cowtA
      J67RBaAT1+gC0IlrdAHoxDW6AHTiGl0AOnGNLgCduEYXgE5cowtAJ67RBaAT1+gC0IlrdAHo
      xDVxJQBVVdFfgNP5LHElgJmZGWRZ/rKrofMVIq4EoKPzm+gC0IlrdAHoxDW6AHTiGl0AOnGN
      LgCduEYXgE5cowtAJ67RBaAT1+gC0IlrdAHoxDW6AHTiGl0AOnGNLgCduEYXgE5cowtAJ67R
      BaAT1+gC0IlrpC+7Ajp/mNBkFyebbiGrGoJkp2ztelblORGFZR4gMEPj1R6KNm0jy3KfldHC
      DLQ20TY0T0rRWrbWFv7Bm0gLz9M7GqKoNBsjgGeIoxfacOTXsGV1HnO9rVztd1G2roZwXx8J
      lVX4uzuxVmyiNN18nxX+/egR4AEgOH6Ds02TZFdXkyqO8NY7p/GFooQDXlyuOdzeAIqqoUSC
      uOddzM0vEJFVVDnCgtuFe6Kfk8dOMuwJ4lnwoypRFtzzhGSVsH8BbzBM0Odhbs6Fxx8iGg6w
      4A2gqgpB3wL+8K/eo45O3uSdD06hmkWaT39M77xGNOTHNTeH2xtE1TSUSADX3Byu+QWicoSe
      C2/x9ukOPKEoGsB8H2+98Ro/O3IR78IcV06/z2tvfkD7SIBEpxObyce1Tz+hayqEHA4wPzeH
      e8GPooESXjq224u8Av4GegR4QDDbUikqLyca6ibcMovfNcjH77zLjMFGKKjx0JPPYR+8wPn+
      GdyTs6x58k9YK1/jZyd6KMw0M7cQwjNwmf9xopv/8I06fvIP/0LNn/wdtoYfM1zwCIlTrcz7
      A0ypeby4K5G3P53mz7+9jzOv/hjz3u/yTG0mACqghgN4hGy+/p1HSBOnOf7Gu/SEFYJukce+
      8SKhix9wcdbPXM80u771LeY7bjE04qdrtIZtZVkIgNVmQ56ZomtsjKGwTJbJBLg49foRcg+/
      tNho2c2l949zbVYl6o/y0IsvITb/krc7/NhljYf/7K/Zlm+7r+uqR4AHhJmhi/zw7/87P3y7
      lXXbtxKebKUnlMuL3/gmOwsUTjb24EjPIifZTsQzysDIHD1tnaRuOsQLB7fhtBtJzi6gQJjg
      bEs/gsFCd2Mj7TNW6mrzyMnNw2IIMT44gjG9jCxlhtahAUaVNOoKk+7Uw5xZzUtfe5rozaP8
      6z//hKa2ds43tzHn8jA30U1rj4uErDwyHUaivhFG/Umsq8gjp3oTdWVZd244Y1Iy5WlRLl9p
      RbPl4bT+dlcnMtXDycYbzMy7cU0N0tE9is/nx+/1IdgSMBs07jcI6AJ4QEgv3Mq3vvsi+ZYI
      IRkMogktGiIajRKOyBhkP+c++hC3s5L1qzIRBQFRhEg4gixHUVUVQ2IOG8qtnPm0g5rHHsFz
      6ROGnaUkjTXyUcMItZu3k2UHY3Im68tNnHr/JKbc1aQ7bt+cGv7ZMSb8Dg5//+tkBwe5fmsO
      ozWHZ77zfb71yktsyw7y0ZHjGMvqqc5L/VUDNA1N+8wNKyZSXZ3HzUtXSSwuxWr67QGNYDBg
      tKZx8Ovf5U++fpidtYXkVG1k15Y67P5bnLrUS+Q+r6sugAcAwWDEbDJiTipm3/5NDJw9xoJz
      DZvygrz2wx/S6M7gyYdryc3PYLD5HLfmNAKhMNWbNhNtP8KrHzUS0EyIgoWKDWux2+wUlNdT
      niVRXVFGSlouaYZJzjdcJxKFBdlMdU0lPo+PwlXlWKVf3ZySKNN54QP+6R9eZTKxir37d7Fn
      XQLv/r//zHuNg5iSnJRkJ9Jy5hyTURW/x0NSdgHeros03hxbFIAgYrFYyC5fRUFWFiWFBdgt
      FoyiAaPZjGRY/NuaWckjm7I4+ZMf8NapLgSzCUNkjvb2bnzGHDbXFt13H17Q4sgqbWpqCqfT
      idFo/LKr8pUm5J2k5ZN3ODGcwn/485fJu79u9lcafRCs81sYDCaSS7fw9a2l5MTwzQ+6AHTu
      gsnupLLW+WVX44+CPgbQiWt0AejENboAdOIafQywgiyMtXP8xDlGXCEkewa7Hn+C2ryk3/ud
      yEwXr37QxbN/+jQpdy3h58bx80gbHqY6zQR4Of/qG0S3PMfD5cn3XefJ60d47XQbUwNjiJn5
      OIvX8/3n92Azi3fKDJ7/JeeiZaT2nyHt0f9CfS7g7eGf//7HTNvTSBA1LFnVPHkwh5M/6+XR
      7z9//zlHXwh+Gl//Ee+1+khPNRONKLoAVg6ZlnMn0Eqf5K++WYSv7yotcwtEnUHOH/uU3gUb
      ux7dS7K7g+sDLqZGJsje+AiFniZarreTc6kAg3eYYMBO/fYamo99xKSQwxPP7kQymZAEmZGW
      C5xqHyIw4qasfmVqnVV3iP9ct51PfvBzLE/+KQ/lWZCD8zQePU7HrEj97gPYVBVFVVEUGfXO
      pLmGZM7kue/9DTVWD+/9/Gf0TtpQFQVV9nD2rffomglSsOEAa6y9fHShFw3IqtrDvrUSxz86
      y3RQYMP+Z6mxTnDkRAM+Uz77D+0mN+GLS4BTVZmag9/m6ztzmOr+RO8CrRxzjIxEKSsvxSRK
      OMs3sWu1k5ZjH3LTn0BpgovX3z7NxGQfl3vCPLKtlKZzTdjzSkjPW0VRwgIXGkep37+BoeOv
      4SnZx/5iD7945yK9XV309XXy/rlbbHloB8mmCMoX2JKRlk9p8WSxZ10GJ48fxx24+6Yiihxg
      oPMGra1tTIWNOO1Lj/1olPSqenbWZ9H+aQNq4U5eefFJ6vKSSc3PAsXE6vod1Dj9nGzu4Fbj
      BVy2QvJMs3T0z3+BLVvENXKLGzducLNtWBfAymHH7tAIhkKLP0bnaLncyZgrgGBQUBIK2Lm2
      CIDEzGzy0pyYRBFBFDGIEpIooDnTyLZpuKYFSioKKCwtRJmYxg+EgwsoNic5mRnkpqV+oaE7
      uBAgISeXzOwCDKqXSPTuctPUCK7pSWY8Ebbvf5KyTMfi5/4pGhsu0jnmQVNVBMnIWOdVAvlb
      2V7swDfRzcXGVibdARTVRFn9TgqECbpG3Qh/hDsy4J5htKuRUx1hvQu0cthZu66c4+eOY/WV
      4Bu8wVTyeqoK0xifsuE0Bmlz+dn8G0MCg2REVHzMe6NLnyRQXJXA2fMNKHSSXF1D0nALxqRM
      EiMdNLfcoHdsmvwvsCVJ2Rl4m9u4FgbJno3VMnfXcpIpmQ279rN2aSgSDswCoC5MMOo1U1Vl
      o1OaZOD0L2nz5/DQ6gDDo9N4R/sI2CopMk8ihL30dUyjZZRRGrrO1LzvC2zZInlrtvPo9nSK
      zr2D+Ld/+7d/+4Wf8SuC3+/HarUiiuIfLnzPCCRlFZEm+Rgam8GYsZqdGyrIzs/HHJphKpLI
      li3rSHXYSUrNIjs9CbM9icLCPFIsKmJCAUW5meRnZZJWUIw6M8CCpZC9O2tJsdvJLClndW4C
      E7M+ckuqKC3KI8m6Us8vAaPJRmp2FolmA/aUbBLxMBuxU7+1niyng0RnJrkZqaRn55JgAgQD
      Zlsy2fnZ2KXbR1n6rLyUhMg8QUcxm6uciGIKkrKAx+0mrCZSXlOG7HaRUlhJSXYeVTV5uEZG
      iCaWsH3DKhzmL+q5LCCarKRm5pKebCU5K1fPBdKJb/QxgE5cowtAJ665axfI6/USuj2bEUPc
      HgMYDLrudRa562jDYrFgMpn+2HX5wolGozgcDiRJn/zSWeSud0KsDhJFUcRkMsVs+3TuHf1R
      +ICgyhG8Cx4iigFbQiI2sxFhub5AX2FUJYrX4yaiGLAmJGJfoXbJQS/zviCaZiAhxYmJMB6P
      D1W0kJzkQDIsnmT5AlBC9LdfZTiaxfaNpRjVKCNd13BZK6gtvnsa170Qnu3jak+YtVurcdz3
      0WKPmd7LvH30KooQxl7yCK8c2ojli1jO+CMzP3iNN99vQJZkTLkP8bWntt5ZV/j8yPSefpW3
      eswUpCSx+eBelNbjnOqbRw6obHvma9QXJwHy8meBwt4ZTn3wM958/QhDfhXUML3Nn3KxaxY1
      GsbrceP2eInICuGAD6/Pi9vtxh/w43G7WfCH0DQNORzA7Xaz4LttohTE43YzO9DKsU+usqAt
      mjHNz7vx3TZS0mFudJi0DY/x3GObCc6MEVkJV6ivAO6xQRxrD/LCkzuQZ4cJRdT7P6jiZXgk
      yvqHH+PJpx+l3GlgbspDQd12qlNhzhteKqgtPwK4hq8xLFZQZZ+iuXWM4s1LT301SnfDEU7e
      HGdhZpaKfa/g7HqNE64MskMjzJJBXmKEAU86//lvDnHjw3fp8kQJ+EUee/l5Apff5Hg/5Bld
      hKL5BCdu8OE7DcjBOTwJW/iP3ztAwv1fkgceJRoFm4QkmYiEA6iKCjz4IUCJRkAyIkomopEg
      iqJw37PzMiQWl9B/4xg/PRVg46PP4MxNo/36RURjEvXJS9mm6nLPpEXobLpBSskGNtVlcau9
      jYXbIhIEbKmZ5KclIS+M0z+2ABhIL69n/0PlzPgSeeHp/SS6J+gfv0XD5RZc825mh9toaunl
      WussOw+/xKNbKjCLAoLJQWFeDiZDlKmeAdz3dyliBslqQ1JVNE3DbndgEGNjKley2jGqylK7
      7Iji/Q9LNWMidbsO8NLL3+SxaiOXrtygscfN/udfYW+JyrnrvYsFo4HlRYCo6yaXO90IBTdp
      1iK4xloZcdUBoIT8XDzyHu6aZ9i0uo+bAIjYbGYEgwHBJGEVDQiCAIIBLNk8953vI431Y3am
      cKJZJRJRkGUZTYvQ33SGM91WXt62jqFjrvu+GLFCekExzWcucWYwSGJmPWZjDIyAgZT8EqIn
      Gjk9KWNJr8Nmvv92acE5Th4/BfYk3CMqG7dWQec0ly+cRpwPULE+E/foAD5r8nIEoDDR2Ukk
      cyPf+/7LpEVmeedH/0jrwDyFkhGT2URWbgY3r5/DL0YJCguIkhFJNGAwSJhMEggGjCYjyTnl
      7K69yts//FekpCK+9bVDbN9SzFuv/YR+exhNKsCZ7cR04QrnrtpQNSM+L+h9IEjJX83unTZc
      IYmcwiJMsREASMqqZM9uE7MBgayC4hUZ2BtsaezZs5O+kRkKS9dSVpwFBY8yMDSBbK6jtCiL
      UHcTg5EEPRlOJx7RmBsdA+cX+16Fjs5XFIHUvDxAT4bTiXN0AejENXftAkWj0aX52NhCURTC
      4XBMtk3n86FHAJ24RheATlyjzwI9IITcY1w4dYrRgI3a7buoLUrDEANrYWHvFBdPnmDIa2b1
      1t2sL81Y/u6XfwDZN0vDlU5Wb9tCmsWIf66Plls+6jbWYluaCV+mAGSGW85yoqEDf1TDnFbK
      Y4/vpSD5D/vf+UebONFh5uCBtVj/QFlVDtF79RSnm/oIyVFs2bU8/cRu0m2/f3VE0yJc/PQY
      zlU7qSq4f7vAryLjXVeZtVRRnz/KmfPXKc/di+Mu2wo9aMz0XmVcKGPr2nlOnbtCed4hki0r
      0S6ZnsajfHh6gfxNG7C4Bzjy7uv0CrWsrrstAHWZAlgY5OiJa1Q89adsL5ToaetEUVQinlEu
      nr/EmM9I9ZadVCcscKahG9HmY8ZtY9vWGprfe4fzkwVkpy4w1D+GAROV9Vvxd1+kb1ajbOM2
      NpRnIwngn73FsTO97HrlW6xOi9LR1k84ohIKj3D65EXmNQfrH3qEstQoV46foN+jUbV1P3mh
      y7z34SdkjFhJOVRE64Vm5oQUNm/fQWmmgwf/NoGg14spNZW09Ci0TaCosZEMF/J4EZ0VpKWb
      MSi3kOWVaJdGYLSFLlcChfkioBHVrKzdsYH5C59xuVMjyxsDeMf6mZHTKCl2YrIksnpTPUUJ
      Kg0fvUlHJIet5RY++eUb3Jqc4urlC4j5qzEMXeFkT5RVBelklK6mIsHH2as9ZFXXY/d0M+J3
      kGGe4uixywTDi7My3slevNYc8lITkKxp1G7eTF7CAp/+8nWmHNVsKFJ59/X3GGi7yAeX+0k0
      h7hwvgktZzW5TifrN1Qz2XGdcFIB0tgVjjfdIroC2bVfBQTBgLC0Zi8gQEzIGgSDcKclwp0/
      7g/FP8UnpztIyUlGC7qZnvGTmJ1PmuM3PEcF8/IEYLJaMRAh8pkt+ZRomMnxEKVryigpK8Gh
      jjE6CwZDFkUV+eSlWQgrAlazhGS2YjFKWO0OMrJysAgKPs8MMwtBZDnK7WQMyWpHiEZQ1c/c
      tQEXY/MhyqrWUlhZjcE9TtBezNZCM41X2lFFFQxmTJKI3W4BOcr89DjeoEJUjp3pTpvTieD3
      EQoEsDlSkGIkG9TiTEXyeQkG/FhsKRiN9x/VNMFMQUkugZlJPB430zMLd/dSVSPL6wKZ82uo
      y77O5XONKIVGrl+6TuHOgxSWJNF8pZXMXB8BezmlmdCKgCAId15rk0xmwu455v2/Cj3TfW2M
      hfLYluWgbU5BXXrtJTl7DRWON7hwrY3VTj+Nl3pZe/AAZTlJ3Lx6AUvyOGJ2ObbQFIPhZB55
      tIDLl8fwR9ZjMshMT03gv3GTcNk+Uu3gkRfTbGPhaZlVXI3UeYR3u41s2PM4lhiZvkjLr8bW
      9gHvHBeo3fUEjhVI05JsKdRt30udfxpVSKauJh8TIJkTSEuXEAWZ0asNjCZX3T0Z7m4LYeGF
      CVqv3WDKp5BevJp1q/IRQzO0XG1lKiBSVruREpuP5tZJqnetxdfWxJSjmpqEWU5dGqCgJJVx
      l8z6DZsx+fpovtqJbElGMNnYuqkWu0kEVAKuUa5f62AuBDnl61i3KhtlYZymy9fxqDaqN2yl
      MAW6rpynbzZCXtVmakpTGWw+SZfHyZp8mc6eWazJCRjtedSvLUZamlZwuVwkJibqrhBxj4ar
      5yZTSXnLF0AsoAtAZxGNaDgCkqSvA+jEIwJG8+KAODZGUjo6n5O7RoBYtQ40GAyIovgF2aPr
      PIjcVQCxepMIgoAkSfobYTp3iM1HvY7OMtEHwQ8IqiITCgaQVQMmqxWzJMaENaKmygQDAWRV
      wGSxYjZKK9YuRY4QkTUsZhOqHCEQDCNIJmxWMwZBYPnGWL4JLlztwphWzLrKfHxj3bT3zZBd
      uYGK7LsbGWqqwq3WK1gL1lKQal+ZFsUxs72NvPnhJcLIpFQe4JVH12OOgV6qa+gab7x1hpBB
      xVGyh689UY9tBR7LasTDxQ9/TuNCCd8/vIOu80e40j9DIJLA4y8/T2WGHdTlWiPO9/H6z/6N
      H797hnmPh5bT7/Kjf/85V/rmUeUIwUCAYGgxhSESChEMhghHVSw2BybJQDQcJBwOEQwGicoq
      8eNDsXLMjg6TtukpXnpiM4GpEcKxYo04OkjCusd5+bkdRKeHCK6ENSIRhjvamVEUiIBgMJJX
      8xCvHH6GMnOQaf+Sq5tgWH4XyGQxI8/P0TU2Rp9ngQyLFRQvl94+RuOkh/lJhWf+7Cma/v1f
      GbSWsmHrHgKXfkr6ob/B9cHfMpK0AcPMINa65/j+UxsxxkL8/iOiRCIIVgnJaCESno4da8RI
      GIxGJMlCNBJYGWtETBTVbUcyzjLaABjMZOXm0H32NQajIlm3nx2CuPwzGe0OSjIM3GhtJWTI
      JMNhAwQSswrIT3cQWRhmcCKAYJCo3vUcT28v/8y3zRSuf4Sn961iamAUVYmNp9cfE8liRdI0
      NDTsdlvMWCOKFitGbfGpb7PZvqDZRw1FUajY+SJPrrFwqaVv6WPtHqQmOlhVWcCt8xcwFlSS
      aDMgz9zig2PnsK3aRHlGIrA41WgxW379rR7JTILNgtFqQ9Lv/c9FekExgZ4rNFzpJiGjMGas
      EZ35pcgDTZy/1IYlrRireeWFrQZdnPz4PU6eOUfbeJSa8jw8EyNMuObvZRZIIL2omMyUZAqL
      C5lobkCwpZDlULh8sgFjMIDoXiBG0u+/cqTkr2Z7vZGZoERBaXnsWCNmV7JjG0z5DeSVVGBd
      wQDgLNjEYzYD1gQnD23fQnf/GKlZD7OqLJ1Q12V6bKuWaY2oaSvu0y98CWMA3RpRZxGVmeFR
      hNS0ZUYAQYiBjHodndsYSC8oWPo/HZ04RheATlyjWyPqxDV6BNCJa3QB6MQ1ejboA0LIM8Hl
      8+cYD9hYXb+NmoLUmLBG/OOgEZzu4/SFq4QcxTy8cz3JS7Yay4wAE/ziv/3v/OR4K27XBD/9
      +/+Di2P6BnZ/TCa6rzKu5VOdF+bi+RaCUX1JfdnIC1z55DRKXjWOqWYuds8vfq7Jy40ACr65
      ca6eOs2aokP4PB7CsoJ/qpeGy60sCE42b1tPZOAKPfMiYc88qVVbeKjSyUDrFZp6p0ksrGXf
      5nJEPQnucxHweDBnrCYnU4CuCeQYsUb8oyBayC3MoKvtKiJJ1KctudQqoXtIhrPaSJNcnDjb
      RlgF5BA3r90g7Egl2HeGT5qGGWpr4ORND9XFSTS88xYtQ4Nc6J6hIFXk0jtHGFL0RInPiyAY
      7ixG6s/+e0MNLtA56KFq81ZqMjT6xuYW/0FRly8AwZxE/a7tyN0NdLtA1cBoVnFPTuD2BwlH
      FqcWs4vKqCjMw6yNMjwr4JADDE7MEvSHiX4hzYsPbCkpCH4/oWAQuyMFKQbf2f6iUOUI7rBC
      ekYWaQkwMbO0/brRdG+zQAkFG9hXn0UkCEokSOfVFtTUPLKSTUSVRevDycFeugdHiBjycCi9
      NPUsUF6aj80oo8h/4AQ6v5OMokoYOcfbJ3sprF4VM9aIfwxERzq7NxbT8M6rHB+0sndTAbfO
      XaBjJrRcZzgP105fJ3nNVrLFCc6fukXpns2YJm5yrWcaq8OGlJCHdvMNGqM1rEmTSK+uZ0Ou
      gauXrzAbMSGpUPnQPoqTvryZV90ZTmcRmdH2bpS8ghW0RpRDXHz3X7iZ8hjf2VuxUjVdUXQB
      6CyiEgqGkUxm3RtUJ77RV4J14pq4skYUBOGOPaKODsSZNaLBYMBoNOpvhOncITYf9To6y0Qf
      DT4gaKqKLEdRNQFRkhANhtiwRtRU5GgUVQNRMq5ouzRVQVZBEkU0VSYqy2iagGQyIS1lEi5b
      AHLYS19nBzN+gdyyKgozEpeZjagRmB+ns7OP29uEFa7ZRmHK59ee7J+ko2+B0soKHKbPfZgH
      itneRl5/7yw+RSWr9jFePlAXE9aI80PX+OXrx/FqkFq1j1cObV4ha0Qvjcd+wcW5Qr7/tX1M
      XniVnzbOkZbgZOvTz7MxPxG4B18gV895Xv/4ClP9V/jl++dwBxU0VUVVFFRVQ9M0VFW9899n
      Z1fnR1p57UgjJrMFq9WK0cCvymraZ46j/tZxVO1Xx1aUxZ8FwYDRKCFw+3PlTrlfr9P9X8iv
      CrMjQ6RvfpZvPFuPfzJ2rBHnRwdIrHuabx7eSWRyBa0R21sY9QZRI4AWZHw8TP2T3+Iv//Lb
      bMhLWCymKcuPANGAF284Ss76wxxalYMhNMl7P3qNW3MBQtYyvvHiBt76hx9gzS9hanSKdc99
      l+c3F/zqALdDnTUNa6CX//u//yPzqWvYsm0zWtcFOua8eINpfO2vDnLh7/+JmewK1Klecvb8
      CU+vgbd+9iazUQP2/G08t1nhjbd6+cZ3nuSTH/5PJjUrCfkP8c0XN3LptR/SNqMgWPJ54ZvP
      U5ZmjQlHCzkSRkgyYjRaCYdiyBoxHAKTCaPRSjTiXzlrxPUPIZlcTDYAUQVDSgqjF37J/3nM
      wI6nDrO9PA00ZflnSq95hOc3pfPpGz/i1Y8b8UZF0vNLyUu3MjoyxII3BKKDdfue48BaC/1D
      s791DO3OHwASGw+9wsFNpaTnllCcnYxvboCxmSCIFiq2Ps6LO4sZ6h9gsKWBSccmvvNX32XP
      2lxum6Jpipvx0QUMpkQSHUaEyVYujibwwvf+Ey/srcURQyMc0WxBWgppdlsMWSOaLRiXbgqb
      zfrFzD6akth+6DB//t2/5PDmRC7fGFj83GBefgQIzLtIWnOA79UO8U//+CntCUN8fH6CJ57d
      TM7gxcVCZitJVgshqxXDbya+JeSwZetWjKKB0FQ3YMZmlVAmr/H+6VYefvkR8m9OL9ZLknA4
      HDjCtsVuzdIvXhBNmI2GOz8bxHT2P3+I4dEhGhrPsjZzHYsWXkbMVgmIMHxrEEtmPpHpUeY1
      G07nfVzIL5G0/CICjde4MunHkb4WsxQLcQ1S8kuQT1/jsjuC2bkK6xdgeacG5zj28UmMqdn4
      hoNU1uTinR4naLQuXwD+mV7ee78Z0WYkYdU68rPsOJTrNDa04g9HcH92G/l7QLCmkCJ6uHzm
      OkE1hNfn/61898ya7WTefId/+0EborOaZ7cujnw1JUJv23WmsJFXuIqs6i1s7f533vnRD0C0
      ceiVQ1x56xfkHvoG08d+QbT2eaqKsz9XPb9sUgtqqA/ClN9IXWUVpge/9wNAUnYVWzbITHgN
      rF21GusKRu2UvPXs22PA6khh54562m4NY6vZw9rqdEKdjXQ5KpdpjcjilFI0+qtpOEkUiEYi
      qCy+qCFKIqqiIEpGUKMoiJgkEdBQFYWoomEySgiCgKapRCNRDEYTkqARjUS53fMzSBKaoiBI
      RgyajKwKGCURRY4gKxqiZEQyQFRWkYwS6tLnBtGIURJRlQhRWcVgkJCMIko0iiBKaIrMzJyL
      9LRUfSEs7lGZGRpGTU1fvgBiAd0bVOc3iY2RlI7O50QXgE5co1sj6sQ1egTQiWtiaKkotlGi
      QeamZwgqIkmpaSTZzDGRDKdEQ7hmpgnIBhKd6STbV6JdGhG/m6m5BQzWZLJSE1GCHqbnPCgG
      CxlZaVilxXnk5adCBF20XmpgeMFAed0WqgtSf30fsN9ZF42p3is0tgxTsv0J1jFGc1kAABV3
      SURBVOQYaTvzAV2+DPbtryfZ9JkqqDLTA8Oo2Tlk2Sz32uqYZravmY/O3kKSAmgZW3npsY1Y
      YmAtYH64hQ9O3MBoiRJNrOOlJ7dhv89JOi3sofHkCcbDKq4ZhX2HD+G/dIxmj0pocorqQ9/i
      4cpU4B66QLNdZ/m4xUVWQpiLl1pYCEbxuWcYHxtn1u0jqkSYm5libnqK8ckZ/JFfLQXP9F/l
      +JEjfNLYQyTQx5G3jvLRySY8kQgLrmnGxsaZWwjgnxnkwzffpmVggkDQz/TkOBPTLsKyiqZE
      cM9OMTY+wbwvFHfmUK7xMVLW7ObA7nVEXBNE5NgwGfNMjGCv2sWjezehuscJRVegXUY7tTsP
      sn97LclqGJ/PQ8+sxrYDj7KrKpGJKe+dosuOAAbRhOwZx+t4nq/vLEUMjnDk7aP4JAPjbjsv
      Pr+JD/75RyRW1bEw1EXWw9/m5W3Fd76fkJ1NqLed3nYrs4l5pALeqS4azlwjogWZUAs4vNHG
      0NQkkfYOpP5mBlxBVO8CeVseZ52ph7c+7SY1xcisnMbhbzxHdhwFCVVWQDQgihKRSAhNjY1H
      gCYrIIoYRIloNLyU5Hd/Q1PBYCQpOYne7nOELQai3jBRDUTRgCAZCAQDd8ou+0xplbv49lP1
      DF58hx++dpz5sJHMnEzEqJ/x6Sn8gQhYkqnd9jBbKxOYmvT82vel7Goy6eL06XYKqqtIEEAy
      OcjKSkULeRmZmMKcXkZxeiaraksZaW1gaGyC+flpbnb303mtFUftXl46fJC0uXau9nt/R01j
      E5PdjiQrqIqKw5GAGCPJcJLdgVGWURUVu92BJN1/v05Toix4/RRveoydJXCtbwaHSUJVVBQF
      UpKT7pRdfhdo4CbT5lKefeERvN0d9LWf4eOmCVZt2kzG7T6bZMRilDAajb99YEMqZZkqzT0R
      qipSAJjsPMvJDj/rNq/HeScWaYCAKCWy/tHDvPLc4+zbVIHJLBFY8BEJBgkoBuxxZo2WlleE
      r6eBTy/cJCGzAFOsJMPlFhMduMSJMy1YM4qxmu6/XVpkgasXTnD04yM0jRlYX1tFdZ6Fy5+c
      oKFXoSjHhmuoh6FZ3/K7QKJRpe3jN7mISEH9DkrLLBQ0fcTFhk5MNhN+VSMhMQGjaEC1OnAo
      vxrJGC0OEh0W8levp8SlUJFs40aig5TsUjKvN9LQ7MdiNBA0msnLt9J2/gabttXTdOZtBs3p
      PPJEObUPPczIx+f4/34ik7LuAPUF1vu+UA8SSblV7NufgjdiIDUjC2NsBAASMsrZ+6iDhbCA
      Mz1rRd5yM1idbH9oF+MzbgyWJLIznQhZuzFPziJLDnKyEgn29jFJqm6MpROPaMxPTiEkJevr
      ADrxiEBKVhagrwTrxDm6AHTimrt2gWLVPU0URcxmc0y2TefzoUcAnbhGF4BOXKPPAj0gBF1D
      nPjwAwa8Dur3PcbmiszlJSN+xQl5xvj0g3fpdVvY8MhjbK3K4X7X+CLuMY4feY9bkyEA8uqf
      4fCOEmT/HGfPXqF8+24KkhbXkZYtAM9wEz/6t/fwqQYy1j3ONx7fhOP3rsZoeMfb+fnZCb73
      8v7fUUbBM9TKW++dZi6qoqkWNj/+AkWTH/Nqfy5//a0DJOnddQBGO5oIZO7iqbpBPjzXTE3R
      YySYH3wFTHU1MZ+0jWc2zfD+qUusLn4Wp/X+2mVMyuHxV/4C2T/FJ++fpaQqG4jSc/FD3j81
      x59t3LFYUA0tXwDugVbGbav568NbmPOCQQ5xo+EoDe2TZFbvYM+mbBqOnkBVVcYDNh468DAj
      H71K43WZrNw8auxjnLjYjSm3lpef3I5dMkDYzYVjxxHXPM/f7C7GPdDN7FKOiwbIwTlOv/8e
      HVMaq3ccYH3CCK+fuoko2Nh6YA+Tl0/QMRmlaudB9q7Ju6+L9lUn5PcjJjqwO1JBHUWJkX2C
      w34fQmICdoeKgemlBdj765gISy8UTPV34E8tpTjZjH+kmXZXCtVlnymoyssfA6RWPcQarZOf
      vn2WkGgiEhild1ShenUOFz85zvDEFDcbWzCUbaVYuc5HjYNUrd+Ks3AdB1fbaL7lZsO6EkYu
      fMTVqcUNU8NeN/0jIcqqsjAZJDJKV1NdlHEnBHpHbjKm5lKdHeLEidOMDw9yuc/L1gOPYZvt
      ZEbKY1Wqn7c/PH9fF+xBQDAY7vyyDAYDQkwYPoJgEDEsJbcvbsyyUu0K03uzn9K1a5DCsxz/
      5DrmJCNBzwwjI7MsJusLyxeAI72cl7/3H9lXY+XIL95mYNLFvGeOyVkvCEtmuIkp5KelkOJM
      QVQ0DKKIIIhoqoLgm2Zwwo2iwu2Mb8lowm4Df+DuOeDhoB+Pa4I5XxSDqqIB9oQEEhISQAkx
      OzGKyy8TD84ujtQ0tIUFAn4fNocTSYqN+Qtbajqi10PA78VsdWJaKcev4BDD81nkZZjBYKVq
      3WocRAmHwwSCkcV7UDQuP9bcOv0zPrhlZH2piNHsgPkReqf97ChNh4hKWF28iQVBuCNiyWjC
      GJ6lo7uHrt5pNu4vwCyEiYQXy4qJmezcsZoPjh8jaWspk9cv4cvfRf3S92eHbzHtS6IkVSKs
      yKjqUnU1ldmRbsaDmZQkSxCKEAbMK3PpvpJkl9Vi736fd/vMbDvw5Io6qH2ZpBetJeXmO7x9
      QmTzvqdwrNSYzxvEVrUKpwSilEDV+h1UhdyAleKaHKYaP2HAWbt8Y6yIf5abLTeYCRrIKVtN
      aaZE19VruFQ7FqOBvPJC5gZGKahcjTLTxbiaS3WmRtuNNrSkIqzhCab8GlZBI62ynvL0pdtV
      DtDbcYOBqQUsKbnUrKnEOHeLrgU75enQ1noL1Z6I0WChLMtI94zGujVV4BmiraMXxZSAolnY
      tL0W2x9og26MpbOIxkx3O7Mp+boznE48oqHIChgM+jqATjyy6G8L+kqwTpxz1wigLG1XFGto
      moYs/+bGBTrxzF0FcHvfrVjjdruEWHCU0lkR9C6QTlyjD4IfEFQ5jGd+npAi4khKxmExxoQ1
      oipH8My7CCkG7InJJFhN998uTSUc8OL2BhCMNlJSEhAiAVweH4LJjjPJgWgQAO0e9gkOumlv
      vsyY10DJmo1U5KX8ejaiKjPec40JoZgNFen32QKd32S2r4kPTraDIYwxbweHH90QM9aI733c
      DCYZIX0zh5/Ygv0+H8tKcI5zJz5lNqzinvGwdt+TGIca6ZoN4FsQ2P3sM1RnOkCN3oMv0K2z
      fHRlDLswx+lzzSwEFSJBL3Ozs7g8PmRFZqSjgctdUyjREB7XHLNzboIRhWjYj9vtwT03i8vj
      R9U0lEgQ19wssy4PESX2Btwrzdz4KCm1e3l8bx3huQmisWKNOD6MffXDPHGwHmV+jNAK7BNs
      MCVSt/Mgz7/wIg+vsjA4E6Fs48M8se8hssUInvBiLhrRe8gGBYGwbxY143m+vbcIKTLNxz9/
      nTHNhhKKsGbPE4srsZrCQPOnnL45RWBuivQtL1BvvcqP3x1jTYWF9mGNb//FS8xceI9LY2CO
      eMnedIjHd1QQJ5u+fy7UqIJgExElI5FwEDVGrBFVWQZJQpSMRCOhlbFGlMykpZoJL4wzFkxl
      8/ocnKkW+q80MGcQyYwsTfBI5nuxRtzN1/av4ebpN/jx26cYGWilcz6Rx59/hd0VVi5c7rh9
      eqzJ6eQ4E4gsTDI04V48V0oRjz92gBzBRe/QKJc6XOw//BJf31dB28VLTAR+97l1wGizISkq
      qqrhcDiWMicffCSbDePStLvdZl8Ra0Q0lUhghstnr+Co3kJJipFgMEThxsfYW2nm2s3hxXKG
      e0iGmx/tw+9cw0svZ/AvPzjNdEkVyGEi0SjhcASjefH5rcpRmk+8z2jxE2yqyaVp6fsmqxWL
      JCFJIgaDAUmQCYRkQqEwgtGCMQb6s18kaXmF+M82cnYghCOzHrMxBkbALFkjfnKZMxMylvT1
      K2KNGPVO8dGr/4vR5DVUD7XRQQXz/dcIaBaC81HW1uUxP9qP3+pcvgA0xc/lD05wxiCSWbeF
      VZWVREanOPLzH6PZ0nn04BrktltYDEayC/Jou9lAu1UlkuxDFE1YLEYEwYDZYsWRls++7RUc
      fePfOKsa2X3oeTJiOZVzBUjOrWb37gQ8YZGMnLzYsUbMrGD3wxbcQQNpOXkrYo0omBPZePA5
      KsOL3cTE1DRWZe1gZHwWrWodBbmpBHsGGZGTdGtEnXhEwzU+gZCcoq8D6MQjAs6cHEBfCdaJ
      c3QB6MQ1ujWiTlyjRwCduEYXgE5co88CPSAE50c4fewoQz47G/bsY0NpRkxYI4YXJjhz9CP6
      PRbW7dzH5lVZ998uLcJY2yWOXbqJmF7Nk4/WEx64yomGNtSUch47+BCZjsWF22VHgIXR6/w/
      /+2/8r/93d/xo4+u4o/GRi7Kg8LYzSbmEzfwcJ2VxrNXCcTI9Z/qbmLKtIa9W5w0nbnEQuj+
      2yV752ibhsdffIGycDPvn+3k5mSER55+nmpDJx9eGrhTdvmpEP3XGDRW8p9e2cjkPAhKlOHO
      S5xt7sGYWc3enXV4us/RMaXinZzAXrWdJ7eWMH2zkSMXuzClVvDEE1vxtJzm0oSC6JpAyitD
      nO4nklLDvn0b8bR/ysmmAWxZNex/dBspeny6Q9DrxZiSQoozBPLYUtLYg58/EvIuYEipIsUp
      YVA7kVfAGlFKzObg3mzQIkzZnaTl5PLI2jrQonjtTpzJv9pgetkRwFmxhcroTV470oSUmEhw
      7gavvXmJsi27SZ4+x89OtDDd38rFngib1mTS9OYHtA9c5Ue/PEPt/kfJ8VzkJx9cZ6z/Bu2D
      MqsKJM6eukRWXQ39549xo6eH61enKa7Jp7fhKFf74msf4D+EYDDcMQ2MpVc6Fy0fF5/6i+1a
      obZpUYbbmhlyVLGnMg00mfGuFvoM+eypWfKRlQPLF0BCZhXf+Iu/ZEexyjuvvklPfy+hhFyK
      CwopKsxmYngMgKyCInIz0rFIMO+eZt5WRF1hHqvLM5npG8ILJOQVk59ix2xKIjU/A4egIgfC
      hAU/Y+OzyHIURYmNEL9S2J2pCF4vwYAfu8O5MlmTXwGsznRE7wLBgA+LzYlpJbIilRB9zedo
      nTawadN67JLMYMsFrg6HqdtcT7L19jnEe7BGPPMLPh6wsbHUgVEMkJhVQWr4OM3NV/B1T1K9
      5lFw9QO3rREFnJnFFKvvcuxyE/6WKVZt3kLy1NBdjx91j9PZP0Hdw1sQjR3Isry0ZbYOQHbp
      Gsyd7/NWt5kt+5+KIWvEGhLa3uGNoyIbH3kKxwq8FBKcn6S5qZHeBRO3Whso3vAw3LpIp0vi
      Vvtlinc8wyZhgCHn2uU7w4V909xousZUQCCvch2ri1JxDXVwo2sUMbWIjWvL8A23MmEoZm2G
      THPLKFU761AHO7l8cwgxIZ/t26vx9rQwJBZRmzjP5d4AtZtKGLzcTmpVFe6uqwwHjCRaVFJL
      1lOVl7SiAtCd4XQW0Zjtbmc6WbdG1IlLNORIFERJXwfQiUcEJNM9rgPo6MQid+0C+Xw+QqHQ
      l1GfLxS/34/Vao2Z92l17p+7doFEUcRkij2PhmAwiNFoRBRjYwpR5/65qwAkSYqpxZbbiKKI
      0WjUX4nUuYN+JzwgqEoUv89HVBWw2h1YjFJsWCMqUQI+HxFVwGJzYDXdY7s0DUUO4/cHURCx
      2e2YDBoBv4+Ialj8WYRQwEcoqmH+zDk0TV2+AKKBebputDKxEMWanMOaNRUkWz/fdGLAPcaN
      Pg/raysxSQYmuy/TOui+8++O/DVsr875jW8peCYGCDnKyEz49X9xD7bQF86mdlVmzCp6tq+J
      949fQxYi2Ev2cPhA3Yo4KHzZuIdbeOfDS0QlBUvudg4f2oztHn6JGtDTdJRLXR7kiJ/kVXt4
      KMfNx6dbkQ0aGZWPsKtC5ej7p/ELBiw563j2wGbsRgPhhbFlzgKpPhref40rI1GyslOZ6zrH
      x5cHUKIhfD4fPn+AqCwT9Hvxer2EogqaHMbn8+P3+fAFQijqklK9XqZHu/j49BXCS/Z+9pQs
      CtM0ms81EE4oJMdpR1OiBPw+vF4f4aiCvDDM0bfeon0iiCxH8Hu9eL0+IorGbNdZTl0bJvo5
      fgEPCq6xEZx1B3j64AZCM2NE5NhYvnGPD+Oo2c+zh7Yiz418LmvE7IotPPPS13hqTy1zk0N4
      PXOIaavZVpONZ8ZFwO8hbM5hx5YqIq4ZIktbREjWZbpCREZaaOhXee6v9lKZJLB2zXpApufc
      m/zw/U4qtm5na5mZc+c6EKLzKCUHeKVimv/60xbW16Qz2Bfime98G+3GG5zoCOBMVPBEUu4c
      PyGjkEqzD4fNRl5xJcXpYfqaj/DehWFsRhlT/iZ2FHrp7BlhPP0SqeMuzrW7kOdHKNj/F9Tc
      8yV78FCiMoJNQpJMS9aIsZENqkajYJSQjCaikRDKPVojCoJAUlo2aDJtUy4qK2tJsI6Bu53L
      XguFteuwmQPYtTYamtyklddhWbrrJZNjeWeKBAOoWDCbYfjK+/zD//U/+JdfnicAmFNKeeqZ
      /RRmZlCQn4WkhZkaGcYfBWtKHnuefIVi0wQTrnFa20ZYt/95Ht26CtvvObMcXKC5oZOyfc/w
      J8/vwtNxAV/yKvKz09m0bRfZWbnkZydD1Mfw0DjxsOeLZLUiqRqapmG322NmKle0WDGqi/tM
      22w2xHtN8tM0VNlP78VPGTZVsHF1PgPd7aSte5RnHl5D5/XLDHW2Ec7dwotP7cbVdZUJ7+IU
      v6YqyxOAI7uENGmant5ZstfvY2e5g7GRaWTAYDRjEhV6Go5yfcbKtg0Vd75nNFkxmexYLKBp
      AgZBI6ooqIrM70v2FAQBgwjRiIKiyKiCyO19odXoLBePHmfKXMrGyqx7u1gPMGl5hfh7r9Bw
      5RaOjHxMsWKNmFeMPNjMhUvtWFIL79kaUQOuH/0pb16fwhGZpqN3jIysXKa7m2hs7SEtu4i0
      /HzUsXYuXrmBkJpLoiHK8PAQ89M9yxwzJhVx6OA2Pj37C35wUsXvi1KzdQs2QxeiuJjD7czJ
      I9RyjVOKBVMknXDUgiQu5rAbRBGDYGfDxgo+OvYLBpNMqFLqr59DEBBFEUEA0ZrE1t3refuT
      t/kXTSN7834qchIZThC5dO4C1UlJjLScQ7CGiaYsEE4UEWPkifi7SM6tYsdWC66QSE5hMaYY
      aW5iZgXbd4jMBQxkFRR/rj0Pcqq3cTBvcexgspooKNnJIynDuKNGNhcW4bSo7DenMuNVqc0v
      IskYoG9inIqaTbo1ok78IQcDTM25SM/Ji9lZQx2d34lktZGbZwPg/wdw2SveK/FnCgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='AcrossScen Miles Table' width='192'>
      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
      Hcv/B6B3lbHLi+LRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='AcrossScen Miles Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAARfklEQVR4nO3dSXAc133H8W/PTM++YrAMBhtBghBl0RIlUVIseYlsVWyVDrGdcpabk6pc
      bJfLJ+uSQ1K5OFX2yXbl4solJx9SKblUkeJKOY5dXmRLtkiCJLiIAAbgYB8MMEsv00sOkEi2
      hCEogpgRpv+f0xDdmPcH2D+8ftOvXyuu67oI4VOBbhcgRDdJAISvSQDEgTl2i8sXL7BW2Xnf
      FpfV1dWu1HSvFBkDiIPaWrrORqCPlLnG72feIRjP0B/c4VzJYCRrE1SzfOqFzxEPKd0u9QNC
      3S5AHH3poVEWL14mks8zNDBIIhnHsRM8llLJpYKsrW1/JA9+kB5AHDLXdbAsB1X9aP6tva8x
      gGmatFqtB13LPWk2m9JuBxiGgW3bB34fRQl8qINf1/UH0u69OtRBsNmscqO0QrlcbrvPRrmM
      8SE6oXYdlmU2mblwnq2adufObFYqnv2qG6ucn7mMfcfbNLcraJZzX+3uWUurwYWL17h47hzv
      /ZlwWhrbdf2e3+N+2gVYXrxBqVSiYRzsIGrXrt3S+OMf38Z43+9rdWmei1dusNdvsaXVqesP
      7g/mytI8N0reY8qxDM7PXOLKxXNoFji2SWXr/YPyDzrUfmnmrd9xbtng+GCCC2/8L9tmiEYr
      SP9gDmP9BqFIPw3NZGy6SK0GL73wqftua+7yedLFR6iULvHLuTVcIBxy2aluE45mUM11xp78
      ApXSJZ579lne+NXPabYUli69Rb44iZrtY3u7yV998cUD/9yWvs2rr7xKGIub6yWqa1sMDI+y
      uLSGmszwlS+9eGi/+BuXZvj1zCxnn/4k6+vLKKZBLpvn6vIWX/vbvz7w+9umRqm0hKnXKa9V
      cFoaE6eexK3MESlO8ep/vkIqHmCnrrNYD3N6NEouGeV6eRsiMVKuRjyZYauu8dnPf57EfYwN
      NtdX2baCvPV/rxPODtCyVF78/Cd4/dWfEFZhemkV06hRr2g0HZicGCakxnj+089+4L0OMQAu
      4cwQT6UcrFAYFYsYYSKpAZLJEEYmTDiaZmWtSiQUIZ6PHai10cmTXLgySyaVJJfLkc5miQZd
      6vVtYokcm8sKCTVA/tgo5y9eJtuXJ2YHSD5ymmh2iK2dGiPDg7jAQYdrQTXOs089ihuOE1Jb
      xIbjTJw4QSAYJZfPH/Dd76547CH+NNeH5aoMD+ZZWiiTzqSYCMaxgeCBWwiQz2WwlRDDQ4Ok
      0mki8ShqdJzByXECuo5e2yCWcEkWUuTjNsFAgLGJLLbtELbrROJZHFUnfJ/nH/FkhuZ2jfzQ
      MLFMP6lEmmAozCf/5El0JUIoGCQxmKfVp2EqUfoyIZxAfM/3uq9BsGmaKIqCqqr39xMcQKPR
      IJFISLv3wHUdDKNFNBr50N+r6zqqqhIMHjwyH+V277sH0DQN0zQfZC33xDCMjrd51NttNKwP
      /T2tVotWq0Ug0NlrpaZpYlkWitKZj03vOwCxWKwrPQDQlb/Efmu3Wz1AMBjsaLsyFUL4mgRA
      +JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+Fr7C2Guy9UrVxkbG2RlbYdaQ2doMMfQ4GAHyxPi
      cLXvAVyb1ZU1HMdkebVCc3uN8xevUGvqaJrW9tuEOEra9wCBEMdPHCMWzzA2FiAWhs2NVUKh
      EMGQnDmJ3nDXuUAjY2MAjI1EAegfGADoyiQ4IQ6D/CkXviYBEL4mARC+JgEQviYBEL4mARC+
      JgEQviYBEL52lwthLuWbZdQQ1HUL23LJ92XI5XKdq06IQ9Y+AI7N5UtXSA/0Yde2MG2FxXKE
      Z556kpahEY/vvdCQEEfJXecCTU6Oo6oKO7EU+XSMlfJNHBRisYOt4ibER8Vd5wIdn5ry/Lsw
      XARkLpDoHTIIFr4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+tu8DMmrVDRotsFsW2Uyq
      aw+JEOIw7BuAK7OzbGxtEQrFiaQyPP3EY+iazAUSvWHfAIyOjhLLFsgmVBbm59EtV+YCiZ6x
      bwAKo8covPt6ZGwCkLlAonfIIFj4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPja
      vleCL5/7PWvbTWp1k+npKaanJjtRlxAdsW8PoJkWgVCUk+ODXL54no3tpjwkT/SMfXuA0x9/
      DNMJEA4FKE5MkkjGsFr7fpsQR8K+R3I4Gif83utw+K77CnHUyCBY+JoEQPiaBED4micArmNz
      c2mJlu10qx4hOsoTgNrKAm+9/Qeulza7VY8QHeUNgGGRTKTIZ+WeX+EPno9Bc9ksyVSdYEDp
      Vj1CdJSnBzCbTeYXrrJeaXSrHiE6ytMDxNJJ4mqUSFS99bW18gLXbyxguhEmxoaZPDbe8SKF
      OCyeHqC5UyNbGCOTiNz6WjgA46ceIxd1mZ2dZXNH5gKJ3uHpAYKhEPXqOlvVCfrSuyu/RdL9
      pKJxcrHTDO3skEnGcCyZCyR6g+dIDodDaPUGgfDtU6BYfHct0EQiSSKRBECWxRK9wnshLKBS
      KBaJheQCsfAHz5FeKq/jGNvoeqtb9QjRUZ4ABDEYGZ8mEpVpz8IfPAE4fvJhXBcyqWi36hGi
      ozwBqK+v8Mabb3BzpdqteoToqPeNdl1c18Vx3e5UI0SHeQIQikaJBFUZAwjfeN/9AAEmp44T
      QHoA4Q+eC2FzpTmqlTp9A7dviFlenKOmGVR3DIrDA4yOFDtepBCHxRMAx7FQgiFsy7r1tYWF
      EnYwQlSxuXi5QjKTQ7FNeUie6AmeAHz8zNPMzZcYKeZvfe3hh09R1V0yiQj5SoVYNILiBDte
      qBCHwROA2toSV65fpRXK8NBEPwCZ/BCZd7dnszkA5Bl5old4BsGr6xVS2SzpuNpufyF6iqcH
      mDp9huzGJtlcqlv1CNFRnh5gZ3mB1376OtdKG92qR4iO8gQgks1z8sQ0o4Vst+oRoqM8Adha
      W2ZhYYFqrdmteoToKG8ANivkCwO4sjKc8AlPAIaHi2xtrKIZVrv9hegp3pXhmg36Mnnid6wK
      IUQv83wMmkwmsV0HnNuT4Wpb61Q1m6CikEknSSQSHS9SiMPiCUA8kUJB4c6VERdLJQKRKEuL
      K0RSWZ5+4lEMXScWk/VDxdHnOQU6f2GGlmmRiN8+BerL59FMOPXQFAGzhm65RKNyy6ToDR84
      BWq5Qdw77ggrjB6jMLr7enR8AgCzxyYD/ejCj/jh2z9su/1nX/kZYeQmoV7kCcDJ6SkuX53D
      pUdWh64uQmOt/faRJwFwXAfLkU++/MgTALPZZG1znb6hY5DugXP83/4Qfvuv7bf/43bnahEf
      SZ4xgKU3WF1dYbuhd6seITrKE4CNWpNkPEU+Jx91Cn/w3g9QXtq9JdK2u1WPEB3lCcDUqUdQ
      sQkEZHFc4Q+eI31tdYXcQAE1KAEQ/uA50j/26BlGhgsk43KhS/iDdzLcaplf/OqXLJQrt77m
      OjbL5Zu8c2OBalXWDBW9xfuIpHCEwvAo+eztNX/mrl5idqFMMhyhdDPKM089QcvQZF0g0RM8
      AVACsLO1RUM36Wf3o9DB4hgNR2Ugm2K5fBMHRSbCiZ7xvivBGgQsGtrtJ8Qk01k+/rHde4QL
      xZHd/XpsLpDwL++T4kcn+WJxiLm5nW7VI0RHeQKw8M5VtmoNhoonulWPEB3l+RSoUCgQCkVJ
      JMKyQLrwBU8AHNuiWq2wsLDUrXqE6ChPALRqhcWb8yiRdK/cESDEXXnvCc71M3XsJEP55INt
      pfQGGG0G1rEcjJ4F4Du/+w7n1s/tudtIcoTvfua7D7Yu4XueALiuxfx8iZETDz/YVl77Niy/
      vfe28Wfh714DYG57jpmNmT13a7ZktTrx4HmfFD8/T9/gEGpIJsMJf/Ac6cXCMKGQw0799oWu
      enWTja1tysurNBqNjhcoxGHyBMC2bNbWVmi1bt8gbjk2l97+PZdmZvjDhVkMs4Wuyy2Tojd4
      ApDIpIiFYqTStye6GZpGur8o6wKJnuQZBOuNJpn+Pgzt9inQ0MgEQ7tTgHp2XSDhX95B8PIq
      TssmmZBnhAl/8PQAzYaGYZiEgvIY1APZvA5XXmu//fRfQLrISmOF1+dfb7vb82PP0x/sv/d2
      9W34j79vv/3M38AjX8J1Xb7xs2+03e2zY5/lpfGX7r3dI8wTgLOfeBat2USNyPLoB7J6CX76
      D+23j5yFdJGl2hLfe/N7bXcbS47R3/8hAmCbcO2/228ffwYAF5dfLP2i7W4T6Yl7b/OI8z4h
      ZvEa//U/P2dtq96teoToKE8ADDdAPKR4FscVopd5ToEGi+OcNFxSsiqE8AlPD3Dt/JtcXyyj
      m612+wvRUzwBcN0AiUQU25KnRAp/8ARgYuo4lZU1QuFQu/2F6CneI10Jkskksazbi+OWF+dY
      KC1Q2bE5OX2c6ROTna5RiEPjvR/AaqGGVaw7T4Ecm1xhklx6i8sz5+nrH0KlJQtjiZ7gCYBl
      6lRrGtOR28/DSmb6iLhBkqMFihOTJFMxrJacIone4DmSnXCCdDjgGRmks323XkfkCrHoMZ5B
      8PzCEsePDbG2IovgCn/wBGB4IMdyxWTy2GC36hGiozynQIWxSQpj8imP8A+5+134mgRA+Jp8
      nimOtl9/H5qVvbf1T+/eBAT8+MqPWWmsfGAXCYA42t78N6jc2Hvb9BduBeAn13/C+Y3zH9hF
      ToGEr+3bA2xvLDG3VGG7rjM+VmByYrwTdQnREfv2AOl0Cr0VIBtxmJ2dpbLTRNO0TtQmxKHb
      twdQQnFOTR8jFIShnW3SyRiOJUMH0Rv2P5IDKtnM7jpByeTusumyLJboFTIIFr4mARC+JgEQ
      viYBEL4mARC+JgEQviYBEL4mARC+tu+FsNKNq2zVGphWkOJwPyPFYifqEqIj9g1ApaZhak0C
      wMylTRLpHIq9ey34naqD0WYZxUwsyHDMJRKJ4Dz5NczqMtFoFNd10XWdWCwGgBZMEW00UBSF
      lwov8Vz/cwQCAXRdRw2rBANBDMMgF8/RbDZptVpcvrlFVd+7XTWo8FBexbIsIsdfxImPY5rm
      3m1vbhKLxTjbd5ZvPvRNotEoiqKg6zrhcJhAIIBhGDi6AyrMrVRYabRfOXs6HyYcBCs2QeSF
      f8FxHG/bhkEsGoVYAW1zk0F1kJfPvIymaXu2XQgUcByHzWqNq5vtr78XEgpD6Si2Afan/5lw
      OIzjOLRaLSKRCK7rYhgG0ZFP4DYaaLrGy2de3v0d7NH2dN80zWYTVVWZ3Wxh2Xv/zNlogGIy
      gKqqxH/zPaiv7rlfc/LPcE98jqbW5AdXf9D253iu+Bxn02cJh8NcWjexnb3bzUUDDL/brvXU
      t3C0bcLhMLZt7/6/RyK7v/vYENFmE9d1+fLol3lx9EVcXDRNIx7bXddKcfdZC31rfYUdUyET
      D1Pd2mR4fBLFsVEUBVXt/KOUGo0GiURC2j1kuq6jqirBe31a0PfPwua1vbe98E/wyW9hORaP
      //vjbd/iq498la+f/vqHa/eA9u0BcgMFcu++zuZ2X5mm3f4bhDhCZBAsfE0CIHxNAiB8TQIg
      fE0CIHxNAiB8TQIgfE0CIHxt3wthrmtTr2vUG00y6QTxeOevSgpxWPYNwM56ibdnVzD1BrFM
      jqcefxTjjvk0Qhxldw3AarlEKttHfkAhm4D5uTk0yyUmj0oSPeKuARgq7i6DePrhDACj48cA
      ME1ZGUj0BhkEC1+TAAhfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhf23cqhKE3sdwArm0TiYS7
      shKEEIdl3wDUdna4euUiaxWdsclJzjxyCsuyJAiiJ9z1FGi1XGJxYZ54/yRPPPoQqwvXqDYN
      9llKSIgjY9+5QO/NBwIYn5wCZC6QuD9BJcgrf/5K2+2ZSKaD1eySxz2KB+Mz3wa9uve2sWcA
      UBSF49njd30bXdcfdGV3JQEQD8ajf9ntCu6LfAwqfE0CIHxNAiB8TQIgfE0CIHxNAiB87f8B
      Z5wAXWMCzhkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Miles Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VMT modelese' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VHT modelese' width='192'>
      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
    </thumbnail>
    <thumbnail height='182' name='AcrossScen VMT' width='192'>
      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
      K+oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='AcrossScen VMT chart' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='104' name='AcrossScen DailyVMT' width='144'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hourly VMT' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3dSZAcV2Le8X+ute9L7wu2xkKCJMghCW5DckjNcDSbPGN5LIXCF4d18cER
      9sEX3R3hi2LCYYVDCtshWY6wqLHlsbYZiuQMOQRJkCBWYu197+qq6tor90wfCEJsAiAAohsg
      UO93KmRX5nuvMj9kvnz5qqQgCAIEoUfJd7sCgnA3iQAIPe1yAAJOnz6Fb9Y5fWn+um9+58g7
      m/69MnuJcsPg/NmzeJcvpE598DYbHZfAs7kwOX35nT5H3nl307qB7zAzu8jS/AytVp3JS1O8
      e+zk1YX6Nn////6KV199lVMXZm/QHIsjv/5w05LK4kXOTK7cYD2hV0mf9AEC/usf/SHxRBI3
      OYreXSeUHSIieQznwyyWW1S7ErLXZiifo5CLE+7bR17e4JfHZwkci3TIY6lqEJPbrDZ8Hjv0
      MKVaG1olQoURGmsrDBXizKw2+O4PfgvNKvOT//Yz+vQOuw8dRkKj3GgQ8zs0HJ10yCU1vI8n
      HtoLRo2/fPM4Lzw4wF+9cYKnH3+Aj05eYPf4IPlcilrLZm5mkl0PPMDCxSVSUZuKqbJ/LMvR
      94+y9+kf8Pyju+72Zy18BV25BIqkivzT730Tt7NB3dZYX11kZWGGEydOUa5Ueeb5byD5HmMD
      Cf736ycZLiSI5UZoL5xmx/6HeO/Ir5ldWML2JF568WlKlQ6d2gqr1TaDhRye53D0nXeYmVvA
      sBxKC3MM9SXRswPU6k1ajTau2ebX7xxhbmmZdCrJ2XPnN1XW6rbY8/CTLJw/yfGjH5AdKPK3
      b3yI0i1x/PRZNhotPKfDr996h4X5ZT6+cInh4UGkO/6xCveKK2eA9fUyhWySctMiMBuo0Syy
      22Gj0SGRiJPK5GnXK6wuTlG2Yrz41MMAtBoNoskU3XqF1Y0OxUyUUCSGYTr4gYfkmNhSCBWP
      SEhlpdxg164ddBs1ZD2EBLTbLTQ9guPYqLjUDY+EDoEWo5hLg+9SqbdJhBUMX0V2OlTrLYoD
      wwSuRSwaZnZmhkzfMI7RRpN9ah2XoUKK+cUV+oZGScUjd/eTFr6SJHEbVOhl4i6Q0NNEAITr
      8jwP13Xxff+af/vs8uu9/qpT73YFhK+ujfIiR49PM5jTMIIoyVQS2WrQt+NBPv7wbdAjJMJh
      tGgMz/eRbZNwMs3iSomXX3j2blf/pogzgHBdhf4BRoYG2FiZpd4NMMwWZ06dotkxkRWVA7tH
      OHnmPEulGr7TpLSyzMcXZpDke+ewEp1goad9qajatr3V9bir7qf2XO+a/V613fvmSwXAdd2b
      el8QBNi2jet5V5Z5n3kdBAGe51/eaR6e5+P7Pt4X7ETf9wk+s77runz+FBYEAb5/8ye2m22P
      53lXynRdlyAIcBwbz/vHugaBj3e57r5/uW3XOcl+to2f1Nm/st3PteimD+prr39tvufhXS7T
      8338y+377D76bN08z/tk31xr+8HmOnqee+Vz2PQ237/p+n3anpvx6bHmee6VYyrwfWzb3lTe
      p/sQAnzP295OsG93+NM//XMOP/M8zUaLSFhiZWWdiT07iCSLSO1lfn1uHak6iR7PEhnYS17t
      EouqVO0ED46nmVqqIBkNOo7PgUee4OSRN+kbGSYcTSMb65yab/Bb33qWD45+RCSRoNNqk8km
      qTVsnjn86NY1Jgh4/Wf/k/4Hn+Pn//dnpBWL3/7X/5Zf/e1fEY6mSCWT9BXzNDdWODvb5Ec/
      /E2Ov/8OS3MzHP7Wj1C6JWptk9p6BTkS4/GvHeL1X7zG4ECBvtEJuqsXmKs51JcXePybP8Ct
      zNK1PCr1FtF4Etts89yzz27pqPbJt3/OZKVNdaPBwYMPU5qdZ/zQfpZmFxhOJ5BSfaSjGiO5
      MO+emmd5vcJgUiacGWLXYIZSucJ6rU0knuLJh3bzd6//mv5skvH9h+iUJpmpekz0R1momMR0
      l1bbIBFRkJM7OLhnYAtbAmZ9lb/5h7dp1uroqQz1tstvv7Cft47P0De8g3QyCp0as2tVRsd3
      8cBYmo8urm7/XaBC3xCSVefYsZOMTuyhkEry8bGjPPO93+Hs6SXCvoOUH6ReLlMclzEMl2w2
      gd/usrZU5/jpOSb6EjQMk1KlRTgcZnl5mXC0w1g+gueYmJ0Wxz84Sm7Xg6QjCoHv4gdb2xHz
      nTbtIMHS9DnyYTDUDBKgh6I8NDHCX795jNFahXqtQqVqY9oOrheQSEapVes0li6wstEgLkVw
      w20MX0WTPNbWVnH1NI/s2kvp9HkasowiS5w7f5qNpouWypEwXMIxlQC2NACyEqPWrTLeF2Vu
      ahZFUVhZXkH2LU58dJ7RfY+ypEbJ6wlSQ7tRZBfPbKEoKguzU0xOzyJHUyi2gqyGUN0WK+sm
      oWyNpKwheQbryyUW1l3S6TiybeLYATG5BWxtACRJIpoZYM/wEO+en2R4cAhJkukb24/WXWRp
      RaU6e45WkEDSY+zISchq+Mt1grvdLtFo9MvV1Pe4ODXDxMSea+7MSmmVZL4fXfnyuzpwupTq
      Nv2F9E29/7ba8wVWV1cZGNiKHR2wurp2U9syTRNN01AU5bZLrazMQ7xILq6ytl5noL9wy9so
      Lc+SKO4gqn3y7069gqunSH264Aa2a98Evs1aufnFAfA8D0WW8S5ft0mA7boY3S7hcHjLK3W3
      mKZ537THtm0URdmSAHwVbPe+ue4lUBAE/OK11/j64cc48tHHNBs1Io7Li//8x4R9f1tSeTfd
      L+2RZXnLzgBfFdu5b64bAEmSKOTzNJotfM8lrgZYxLatIoJwN9z5PsBX0P3Unq3sA3wVbPe+
      uXfGrAVhG4gACD1NBEDoaSIAQk8TARB6mgiA0NNEAISeJgIg9DQRAKGniUnxQu+YewfO/WzT
      IhEAoXesnYEP/njTInEJJPQ0EQChp4kACD1NBEDoadftBPuew9kLU8R16LTbqJlhuhtrPPro
      oTtZP0HYVtc/AwTQaNbJZNI4ZovJi+eYW65imiaO49zBKgrC9rnuGUBWNfbs3EFpvUy2f5xk
      USGaiBEOh++rbx4TetsXjgP09fXT19d/p+oiCHec6AQLPU0EQOhpIgBCTxMBEHqaeBhuq62c
      hMrFW1tn6HHI7bzyT8M1aFrNW9pERIuQ1JO3Vq4gArDlTv8FvP9Ht7bO936yKQCvzb3GHxz5
      g1vaxI/3/pg/OHxr6wjiEkjocSIAQk8TARB6mgiA0NNEAISeJu4CCfeEY3MbzFU7t7TO4Z05
      hjNf/NXqIgDCPeEvPlzkLz9auqV1/vPvPnrDAIhLIKGniQAIPU0EQOhp158T7FqcOjdJVHHp
      djvo2XE61VWeeOJrd7J+grCtrt8JlhS6nRZyWGd9aRar2sVzFTEnWLivXH9OsKIysWc3vtWl
      UHwBx5OIxCJiTrBwX/nC26CFfOFO1UMQ7grRCRZ6mgiA0NPESLDwxV79F7Bw9Obfv/N5+OHm
      ryD//dd+n6n61E1vIh/J8+r3Xr35Mm+DCMBn/Kc3J5kstW9pnX/3zQnGcrFtqtFXQHcD2ms3
      /36jdtWimlWjbJRvehMS0s2Xd5tEAD7j3akq781Ub2mdf/nsDsZy21QhYduJPoDQ00QAhJ4m
      AiD0NBEAoaeJAAg9TQRA6GkiAEJPEwEQetpVATAt+27UQxDuik0BsB2HP/kfP2W1dPPD1oJw
      L7vyKITtOPzhf/kzJEnCtsWML6E3XAmA47h884WnUVWVsZHBK284d+Y4ltFFSY/Rrizz9NOH
      70pFBWE7XAlALBrh0MH9n/tzQKNep12v0q10CIKQmBMs3Fc2PQ26sTzL1HqLvRN7ScVCAOza
      tYdAOYDrSYSjYTEnWLivbApAOJEkmJun2jAuB0CiODhyl6om3K5/879O0LW9m37/7kKcf//t
      fdtYo6+eTQEIXItLM0vsPPjU3aqPsIV+eWGdpune9Ps3xnrvFvim26COaTEyPozRte5WfQTh
      jvpMAAJqnRaBo5JK6HevRoJwB206A0gEeN4nrwShF2zqAwyN7mNkl44sjn+hR3zmDCBhNMq8
      c+Q9Gh3RBxB6w+ZOcLfNwuI06zXjbtVHEO6oTZ3gDTNg144Jdg+n716NBOEO2nQGsIwOgefS
      ErdBhR6xqRM8vGMPD6ZTd6sugnDHbToDnPnoA06dOkWjY96t+gjCHbV5QozVpd018YO7VR1B
      uLM2BeDAwYM0qut4IgFCj9gUgAvnzpPvG0ARI2FCj9gUgKeefZZ6tSwugYSeseku0OrqGk88
      8zypePjKsuZGGTeQUcNRXNMgm8ve8UoKwnb5TAAkduze+7k/B5w8cRwFh6ZWpFVa5fvf+5aY
      EincN274xVj5Qh5ZCxP2LXbs3UcoFEJVxe9qCPeHGxzJEgceeuzqpZLoJAv3B/HViEJPEwEQ
      epoIgNDTRACEniYCIPQ0EQChp4kACD1NBEDoaSIAQk8TARB6mgiA0NNEAISeJgIg9DQRAKGn
      iQAIPU0EQOhpN5za5Xs2G5UN5EgS12hT7CveiXoJwh1xgwAETJ47ydzsAn5qmNb6Ot//3jfF
      nGDhvnHDM0AskSKWSOPLAf0PHBA/kyrcV244J3h4fC/D45//tghBuD+ITrDQ00QAhJ4mAiD0
      NBEAoaeJAAg9TQRA6GkiAEJPEwEQepoIgNDTRACEniYCIPS0u/9LF0YN3vqPt7bO6GE48INN
      i35y/CeY7s3/vvFQfIjfO/B7t1aucN+5+wGw2vD+H93aOp59VQBevfgqTbt505t4pPCICIAg
      LoGE3iYCIPQ0EQChp91wSuTq0jzIGmo0idNpMTg0eOWvjuvTtt1bKjCqK4RU5cvUVRC23A07
      wfFYjBMfHKEd6qNdqfL972avzAn+1aV1/tWffXRLBf6HHx7kd54Y/XK1FYQt9sUBCGDy0iT9
      ozup1C2GD4o5wcL95YsDIEk8+uTTAEzcidoIwh0mOsFCTxMBEHqaCIDQ00QAhJ4mAiD0NBEA
      oaeJAAg9TQRA6GkiAEJPEwEQepoIgNDTRACEniYCIPQ0EQChp91wQky30wJJQVE1fNclEo3c
      iXoJwh1xwymRZ8+cZH1pFrX/ARqri/yz3/6tO1MzQbgDbngJpGsqiXQOr12jb3THnaiTINwx
      N/yVyIcfe2rTEtM0sSwLgJQW8O19mVsqsC8q0e12/3GBC+z5wXXff03ZA/DZbQDP9z2P4Ro3
      vYnRxOiVenzanq8NR0nrtzbdMyS5m9uT2Xfr7YkMbmpPTsnx8sDLt7SJ3bHddLtdHMfBdV1k
      WebliQzGLXxpwXg+trktAINPgZa9+Yr0P3jVvnk8+zjDoeGb3kRST161b/YXQrd8rGVDweb2
      xEau2jdSEATBLW1VEO4j4i6Q0NNEAISeJgJwj2pulDlx4gSlSu2qv1VLy1ycnufTi9tOu41/
      +XVto3rltSD6APe04ydPEvY7XJxbQwolCPld8mP70c11yl2JdnkONZpHj8SJh1yajS42Mt/+
      1ito4sv5gK/C16MLX1oum0VydCb2JgnkEL5jkC1mwdLYPzTOxTM6gRwjEo9idWrEomnatosk
      3e2af3WIM4DQ00QfQOhpIgBCT7tn+wB//X/+gpGJh9EDGzUcZnFxifGde4iEVIqZCH/+03/g
      4FiC9bZE1Qh48cEhKp7GemmDbzz9MGcuzJOKqTTaHYr941RnzkK+j4gWZjSr89Ofv8+PfvQD
      Qp/pLJamT3N03sCYO05mYJDEyEM45SmaFjy4exQ9Gqfa6LC+OM3+h5+gsz7PfLlGrm+UfaN5
      ppcrhHyTtuUytmsfF46/R2FkFD0Upy+l8be//JD+BITzO3ns4NXfxjpz6l1OLdaprpf52mOP
      Ul5eYGj3BLNz80wM90E4QTSkU8zFOT89TaVqYFaW2Xv4ZWJBE8Ny2ag1UMMRDu7dyRu/eofB
      Yp7h3ftprEwxX7V47slDV5X7zq/eYKPrUpqdYmQ4y+ihb7F28X1sKcLuoQKRVJZWu8v89HkO
      PfkCSzMXiUVk6k6EXX0xVmomUcWhZdgMje5m4exHRPuHiITjDGaj/M3PX+c7P/gnhNWr/z8+
      8sbf40Zy7BodwLVtuk6ALjkESHS6FoGskktG6LoSQymFybUus5MX+P53X+Hjj8+RSKZoddpE
      4ylGMhpHzy6STSc5cGAfH7/3+r0bAEnRSIYC3vjF6/ipER7YOcDM2Q9JjR2itjRJSPaYLTuU
      yquMjI6xWq6THxtjZWGZZnmZ119/m/0PT6C4bep1i4ziMzk1TUxRGXp0F616hbrh0Re/nIAg
      4NSFWYyuRziVZG5qhom+B3Atmz279nLknTdIpotMlVpkqZEe3o9RbYJvUy6tkaLOm+9d4MBI
      jo7RxJVTBMClySk0LcTIC18nm4xg2w0wrv1Ih+sEzM3P0ZdNcOqjY0QSKRoXLqEGFh++d5FY
      cReWpPKbT+xifKyfWukitm1jmDaLU6dZWVlD0sO40T72TUzgt0vMdju0iDOWiWB2K9cs17Yt
      Jvbsx61Oc3F6lYGHfCzLZs8De3j7735OenCMjXYHpzLH6ANP0Wy3KWQHWN6os9CaZ2rdJhzV
      kdwOhqOh+XBpaoqoFmLs64fJ9w1f8+AHcP2AQiHPx8eO4MgRNro+/YU0tNdptFz0fJ6ZWZeQ
      phAdKxBP5CkM7kDzOly4dIFG3SA/WCAeS7KzsJfFqUla+RT5kZ0kUsl7txPcbjXwUcD3kFUN
      TVOYvnCe8X0HUQIHVVUxTBtFkZEAu1mhq6ZIRnTCukKz1SEUCSMFAZIko8gBlu2CrBANh2i3
      28QTCa7cMAkCTMtGlgJcH2R8JEWHwCMU0ul2OiiqhmnahEIakiTRrKyiJItEdBVNDugYNiFd
      AwJkRSPwHDzfR1I0IiEdy7IIfA9FC6Fd40dEXNvG9nxkApAkLMsiFNJxXB98l25zg44UZ0d/
      ipoZEFMlXMcmEothdTv4SMiyRIBCJKxjGF081yMaT+DZJr6kEg5pV5VrWRYhXce0THzPRwtF
      8D2HkK7TbrfRdA3LdtE1BUlSWFteojDQj6LqlOYvoufGyUQVgiBAllWkwMN2PWRFIxxScRwP
      Xb+6XACz28GwXaKRMIqiYJgWuqYSBD6BHyDJMtMXz2IQ4aE9A6zVPfoLafTA4sTFBfbt+eQB
      TkmSCOka3a6B5/sk4nGMbvveDcBWcyyDtungWQa+pNCqbzC6ewJtm28ZBoHPRnUDTdewLQtV
      hlrXZ8dI//aW6zmsV2pEY1Esw0ALhSiVykzs2bWt5QI06xsEsoZtGkiyQr1WZcfuCZQ78FlX
      qhuENAXLclAD+969BNpq5z8+xdm5RSLdOlVLYefOcbT8TkYz2/sR2Z0NfvbTn6Jk+0lqNulU
      AVmNbnsAnMYqv/zlu6zWTEaKSZLpDCFFuiMB+NVbbyEFNt16G0OJMjbcT3pwF/nY9o7OdapL
      /OWrr1EcGUB1G6TTAyIAnxocHiGUKpIKyZgeVMpVisntHy5VQ3GefPppwukcMV3CN7tsWNu/
      WyRFI5ru44fP7kNXQFZgdaW87eUCJGIRdu79Gmrg46JQKa+TjGz/DclQPMuzzxwmXcijyy5O
      sy4ugYTepgIEQYBxnTsPgnA/23QG6LTbhEIaticTCSkYhoUqB0haBFX2MQyHaDRM4HvUGi1k
      fGRNR5UVovfAZPn6RoVwPI3kmnQd8B2DTC6PZZpEwhrLqxXS8TCBqtNutenrK7IV/TLXMmh0
      bbLpBNVqjWhEw5d0NClAC0fAs7Ecn27XQFdBiyQI67d/GWQZHcq1JoN9BVbX1tA0nUBS0OSA
      VCaH1WniBhLNZpNUKgWyRiIWvr1CgwDDNDG7baLJLJ7VxrA9zG6XVDqF60skY2E26i3wLNRw
      nJCmEIlszfFjdtuYLqTiYcrVOmFdQVZDdDodioU8tWqZSDxJ17BQA3dzH2Bt6hTnllvEU0kk
      PNZnZxkcHyfQ4+SSGtPnJ/FDKV55+TH+5I//OzHF5sGnn6dbWcUmTD4dojCyj707Pvkt4Upp
      mXOXZnC7DQojE9TqG8hGndToAQ7uGea9X71GKL+TSmmJb770DcxOgyNH3mdofAcLy6sMZyIY
      apbHHty9JR+OZbaYX60jWU2aZpOVSzM89NxLLC0s8dzDoxz7eJF8xKZZXsSU+/nGd3+D1BZc
      jl86/zFTpSbfefEZzhw/BrpOKJKgVVrm6W9/n6UzRym3JZbLTfoSLtnRh3hk3/htl6uoGitL
      Swz2F6mtr1EcGWNxcZmViyd46Bs/pHTpI/xQBi1wmJ2+SKowykMH9txWmVa3wbtHTxLRPSKp
      MTBKRHNDGLV15uZm0GM5Hto7wkfHjnNw3yjVjsvsxYu88spLt91eANOyuTQ9y85ikrc+Ok8u
      l8OuLuFG8jz3wjNMnj7GShskLUzULW9+FGLHgYeoVBskFI9YLMb4zlEa1RqtdgckGSlwUCMx
      ZElh50CG9NAuPM9DkQJkPYIq+axXNq5sz3cswtE4sqqghWOEFFBk5crPrCqKSr2ySqPZxvEC
      jFYdPZGjVS0xOjxCaaPN6GBhSz4YgOnJaVKxMHo0hK7q5AcG6RomigxNKyAT8snk8wyM7UFV
      FcJb1Afu6+8nm0nTqDeIJ+MoWhhVCdBDISqVCkgarmtTzCWJxDNbdutVlRyyxWFarTaRRBrd
      MRjfPU42P0CzXiMUiROJREjnsuQyGVzHvu0yQ7EkhVwGTVYIKZDpG6TdaZNI5yjmMniOSaPR
      JBmPUrck9owPMziwdfu4traIFk0QKBEKuSzpmE5+YARVVbA6BrKqksllyCajJDL57e0E25aJ
      7fooMuihCL7n4rku9VqFaqPD6MgIkUiEwLWYnZ1FDSfIZ1NIV57XDVC1EJFwaAvrZKHoOsrn
      ngk2TZNw+DZP/18owDRtwp9ry/aXe+0yLMtE00PI2/hstGOZyHp40/39wPexHJdwSN+2csHH
      NF3C4c1lXOtz2BSAWnmVN956l3379hIOh/EcC1WPgCxD4LC0sEqm2E9C95herHJo/xjzpSbF
      TBTbduh4Ggf37iAIAjzP28YGCsLW2HSFm871USwWWVleJqy4lFoOtfUqgwMptFia1cnzTC5v
      MJzXCQizOneJS4tNzlhtCjGN5O7DV7blujf/dRx3Sr1aJpzIoAQObcsjqin4gYdhB2TTCQzD
      wLNNLNen2+3SPzhy2zOnbNNA1sM4lkk4pFOubJBMRLHcT0afs7k8gWvjeD6drkngGCjhBJlU
      /Lbb63sOlY0mhXyOSmmFZL4f37Ewux3i6Rxmu46kh2lt1NFDMoESJp9J3V6hlzvBRqdFPJ0n
      cLqYroRttNFUFcuTKGSTbNRbRHQZlE8epygWC1tyw8EyOpiuRDKqs1auEA3rKHoUs9sml8vR
      rG+ArNDuWoRV6XMDYZLEU08dJggCCHx8ZGQJZAm8QEJ67ut43ieXND4ytbU5Xtg7RC6mEiAh
      yZuPlur6KucnZ3CNBn1jB1hbWSTkmyRH9vHg7iGOvv0GQTRHvd7iWy8/j2cbHHn/BDv6wlTM
      EJVKlRdffA5N3prTtON0WZpu4nXKOFqc5twsodFhJNvhqcce5q0j71NM6KT7x6lXygwOj9xm
      iQGnP3ibwf2PM3VxiqefOMj6yjynN9rkCgXsegkOPUt98gRWepC12Vke3DtMs6VtSQBW56b4
      8MI8r/zGi5w6eZoDjwTMzMzTLpc5+NzLRAOHmfNnKDUlDj+yk1KjddsBsIwmR499zMR4kXLT
      obU+A6pGeWmNkQcO4dsWmbjGqZOnUGWbkB6m0XF46oWXSG7BVZHR7XDm4hyH9g5ybnKFVESm
      traAHcry0otP8+G7R9j58JPUy6sM5qKbA7B84RgXlutEMoNEVIlsOgaBTa3ucOiRA1cVNjB2
      9SO7n+U5JqFonMDuUCmV6HQMwnGVT2drK4qCi0xcU7A8COsRomGNVDrJ8lSNrtHBcny00Nb0
      RmemZhgYmaArJ7FaHbRYFF2WkUIRWl2L4f4CmUSUjU6HdDazBc+mSPQPDBFLJMmlE9SrZdYb
      Jv2FDKZjE4nGqddqFPr7WbMCErEITVNi587cVjSXTL5IPtui227TX8zgq1HSySS6Y1CtVinX
      lkj3jeL5K6zVTfbs2nnbZYaiCQqZFDOzi+zccwAnnsZyXPLFHDHFITk6RqNRIRGLIusxcH1U
      RSK0RYPfrusSjYUwbJmYFqDIkO0bpNGy2ai3yGRT2O0a+cExps+f3NwHWPj4PZaaPjOzaySS
      OpYHGm2SyQle+sZjN12JIAiwLAvHtnC8AEUCTQ/h+x6+51LfqFBtdhkZHiEc0nBsi6WlRcLx
      LAPFLIos4QfgOA6hUHhL57A6loV8jU7wJ09Wbl1n+2oBlmVfVcb2l3vtMmzLQtP1z9xw2Hqf
      fNahqzrBtutdfip2u/hYlkvocx3ta30OmwLgey5+AAHgOi6q8smBKMsKmnbzEQ2C4CvZBxCE
      z+upZ4E2yiUiqRyqb9M0XVzLIJ2M07F8MskIpUodNbAJ1DCe69Hfd/v3p22zi6xHsE2DSDjE
      WqlMIhbGdME22hT6BpF8B8f3aTTaSL6FGkmSSydvu2zftVmvNugrFiitLpIpDOI5Fu1mnUyh
      H7NVI1DDGJ0OyVgYG41U/DZHZIOArmHQbTVJ5Ap0ahVsVHAtCn39WJaNgsva+gapVAItFAPf
      IRaL3XZ7Aaxui64rkY6FWF4rE4/oyFqYTqdDf1+RarlENJ6gazrI/jY/Dl0pLXP24hROt0H/
      +AOsLi8Q9k1SYwd4aGKEd9/8BUEsT63W5DuvvIRnG7z9zofsGM2zWm7SarZ48aWX0K8zW+hW
      eZ7J5NQcXruEo8Xwa+t0tTgg89zXHuTkyVM8dWiChfUqKwvz5L758m0OSgWceO+XDD14mEvn
      LvH1w49QWV3kfNtksFhgfn6RZ3L9rJ79iBXTp7pe49FDB/A9m1z69tu7MjfJ+yVZFawAAAO6
      SURBVOfm+M4rL3H65BkeOARTM3MorQbJiSfw6vN0O10M00FRIdc3tiUjwe99cIb9O/uYmXcZ
      y+vMzcxSXy2RHdtNq2Py9GMHqFTKzE6eJT+4g0tTM/zw+795+w0GDKPL6fMzPLZvmPNTy6Qi
      MqZhEI9FSWRTnD72PnJqBM9qE3RL2zsp3rMMQtEEiqJSXS/R7RpIisInF1mgqApIMgldxfJA
      1SPEoiFatRr9w8MMj+7YsoMfYPLiFMlomHAije86RBJxVEUjFo1Qr22QiEZZbdhMjPeRjEaw
      b3soQ2JwaJR4IkUhm6RWXWet3mXnyBDtrkExE2elVKY4MEhxYIhisYjrSYwNbVEnuNBHXz5P
      t3W5E6zFyCYzKJqKJnuENJVoPEEiGiWWzOK5zm2XGYolKWZTTE3PkwzLVDba7N53AFlTGBoa
      JB3XaTWaZAv95HJZzE6HaCSE5WzNuJHjuMRiEbrW5U6wIhGNhNho25gdg0J/H/lMglgsSjxT
      2N5LINexr3SCVV0n8H08z6VWWafS6DA+NkYopOPaFgvzc4QTOQb7cniugySrKIqComxtRp3L
      I8GfHwEVneCtd891greKGAkW7hWb+gCBZ/HhhyfJ9g+ye/z6g0DdepmyIRGYbTQ5YGm9RjEV
      pmV7OK7CoYf347outtGm0XXBMUjli7i2hdFuEk3niegqG+US4WSWwLWJxWLYRofltTKRcAjH
      B9l3CMXT5DO33yH8IiuLixSHh1mauUQg6SjhMPFIlOztjopeh220uTS9QCIeJprMEcam1DSQ
      bJN4Nk8xn92SUdHPCzyLs+cukc3lsH2JvlSE6aV1Ejpo8Sz9xdy2PRu0sjiLE6g0G032P3CA
      hekLRGIpnAAS8eSWDPxdSxD4LCwuIXkW8ewA2C3WNlqoQDaf/1wn2HdZL62xXFrn3LlzaMYa
      G12FeCpFpenxez9+iTf+7k0a9TIHnvs+rbmL1ByJ0oVTmGgcfvkbeJ52ZedZjsfizHlMyyS8
      VqXZqhOXA5RMm0MHdjI/fQlDilCr1/nOt15G1UO0GzVSqVFKq2WKSZ2OYZG/tR8GuSW+3eb1
      f3iT7/3O75LNZpldWKG5ME0kN7ptAdBCEUKKT6PVwXAl9owNUbowSSqsMru0yuNPPknqdp/L
      vxZZIxXVOHvhEvlCkdHBIpK/hG15XJg9g/rooxSz29PmTCbLpYvnmF+qMrpngk6rTcf0qFbW
      SPeNk0ltzSPvn+e5DkuLy+RSUWxq7BhIUW45tNeXWFpd4/8Dch8HwOv3ktsAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='AcrossScen VMT Share chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='AcrossScen FreewaySpeed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AcrossScen FreewaySpeed Chart' width='192'>
      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
      F7pJE9+7jhXaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='124' name='AcrossScen RoadwaySpeed' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='AcrossScen RoadwaySpeed Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VMT by speed' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9d3BcV37n++mcczdyBgiAIEgQzJkUSYkUlcNIownrOB7vPHvt9dart+v1
      q516qy2nGns8Y49lz4wmj9IoUyTFnEEQBEgi5xy60d3ogM7pvj8ABlGUREkUyTHup4pV4O17
      zz23+3zP+Z3f+d3fkQiCICAiskCR3u0KiIjcTUQBiCxoRAGILGhEAYgsaEQBiCxoRAGILGhE
      AYgsaEQBiCxoRAGILGhEAYgsaEQBiCxoRAGILGhEAYgsaEQBiCxoRAGILGhEAYgsaEQBiCxo
      RAGILGhEAYgsaEQBiCxoRAGILGhEAYgsaEQBiCxoRAGILGhEAYgsaEQBiCxoRAGILGhEAYgs
      aEQBiCxoRAGILGhEAYgsaEQBiCxoRAGILGhEAYgsaEQBiCxoRAGILGhEAYgsaEQBiCxoRAGI
      LGhEAYgsaEQBiCwgkoxeOETzWOzqEVEAIgsEgbS7h3f2XiChUZBJxQkFA8jvdrVERO4MGSYH
      uxmW5fGfLAn6T7/Jr46NiCOAyEIhgdfjQdDbMUY9tDT3UbDtWVEAIgsFgUw6g1Qqg0yGVFpA
      oVKIAhBZKCix2e1kwl4iWiu1NfmMnNovzgFEFgpycgqLsIZOM5jQs2Tbk+jLppAIgiDc7aqJ
      iNwZ4vQceo2xoifZWaUFuLkAkskkPp/vjldPROROc1MBZDIZEonE3aiPiMgdRTSBRBY0ohdI
      ZEFzi16gMCdf/B7Nqi383pc3og6O8NqPfo5m+0aGX3iJgeKN/PdvPYvJd4kf/fgXzEjqWbEG
      ultHmJ7yo7NlkVWxhT/8nW0Yvtjn+fykIkxOuknOj4sShRqbzY5OJfuI8+N4AxF0JiNq+Uec
      A6TiAbz+FGabFZU8Q9g/gy8kIavAjhJIRXxM+ZLY7Da08/cSBIF4NIQg0yKJz+D2R5CqzeQ4
      jMgkks/8iEImxWwwjEKnR6P4mDrHgkxP+0nLtWRlW1HJPm1/KZCKxYgLEjRqNdLPXuUvBCGT
      vNURQEdFdTbjva1MzSQIOjvo9esozzIQnp0l2N9Dr8fHxHAfU04/s2kVax/7Bn/5l18lX2Hl
      wd/5C/7rb0PjBwi08cLf/jNvHj7JyZMnOXuhFXco9dHnz47xxmt7GQhEP7bYyZbX+Zef7qXP
      FUEgQtv7r/D3/+df6ArOfT569pf81Xd+SsdE8Oo1mZSfS6camPRNcfyNN9h/5AC//tnL9Pgy
      n+sRU0En+998m67p2Y8+SQjRfugd3jl4jPd+8wqNIx9z7scQ941yprGdSDL9GWv7xSGk07e+
      DmCuXIntjVcZcXqJdl9GUbiMPLsOdEbyDEkGelxIZnyY82zM/JbPKrTWUnZ96essNl475uk+
      wsvvnMefVrP12a/hGG+hY3SM2agaXwYCg43sbclh+/2L6TzwKyQ1T7GySDt/dYCB9iiLFhUy
      MelkcV4WoKG8WKCtZ4a61UoGu2aw5jg+UI/IUCP9knJW2k0otz7K5hyBw//yEyZmM9RY53ru
      VMjJmff3crbHjXXRWh5/sJ7ud1/FJTUxMeVj2ZpljJ4/g3rVl3h2UylSwNV/jvNnTzPhqKda
      6ebgu/voD5u479EnqS82zvWKviHOTBl59ncfQh2YIKhQX61X1DvE4Xffpm0yRnH9Lh5er+fg
      a+1IrE6Gxqxs3Wjg3LE+Fj/8Fe6vLsTW9A7trmrWFeq/yJ/tUyNVqG99DqA2lFFfJnDx0glO
      tfiprl+BXSUBmZnqxUX0tRzlkjtOVVHub/3qWtDZzs//4Xmef/55vvfiawz600i0xex59jl2
      lCY5eqGPgKuLzkQNX39yLWYpKC0Okq5WXNM9tLZJsNqvNH6BWH8jrZb1PLW+iOGePkKpDCDF
      vmwlwqXzuJyd9EiWUptzvTmSov9iG9lVi1DIDeTn6ri47w0uZrLIUiWulp1GSemKHTz96H1E
      xtsYd8/Q39FDKncVjyxOcbDByc49qxk40sDE/FWO4uVULlnKxlo7TYcPECp9gK8+UMjZd95m
      1D/XU8dnpnGHRnn9+3/D37/wNuOz8WtVk2up3fIYTz9Uz3TrKSbdQXp7L2KoeZz1+g7e73Gw
      Z1MOJxtbQaqlsljOhS7nF/ujfUZuua1KFSqKKss49NYxBFUl2xZlIcEPgL20DEvHXjzarayy
      T8PIF1bfO4Ixp5bH/uJb140ACbpammmclKH0h8lkzR21223IpBIkgFrnwJGtxdXcRLhiJXlX
      23+UrstdeAYUvD4rMHLRyeXtq1ECcl0JNt0Zmk9No6usRe10X1eLCAG/FuN8pylVG9n05H+m
      +Oi/8fNjvVQ/V48KSIRcXGq4QEQqZXbeUlNodWRnZ5MTycaUXYjVIcfIFDcaTkImQzCdITfL
      htGmxKDsIhpLAjIkEimZiIYH/ts3iBz6V/Y1j7CmcOlczbwjNJ7uRqJOk5y361VqO3l5uSjt
      KrLtJTiMLqSSuf7VYDDi7/1sJtQXipD+FF4gqYKCsqUUmOVY6jZQZZEhQY7OaECbXcHyRXkU
      VS0hx6zFoNcgA5DI0Rn0KGX32OznExDSSUJBP36/H39gllgizEhXJ8rCJeQb1UhSKW60aCUK
      HcU2M83N/VSvKEU1VxJJ3wRt4Swef/h+tmx/mK8/Vk5LQzdxAaQyDQ67wKlzM1SXmW8oUYfd
      EcM7k4RAD6/95gQT/gDBaAarwzLfcwmEPKMMB2VUVxajTidJZ25hfiCRICVDIiVg16gYGx1h
      fLSLsJCNQacEQJlXTKU2xfT0DL6QgNV8zXzxTwzgTVqpLreTTgpkPvaeAjNeHw7bjc9390nF
      wsi+/e1vf/vWTpegthSwfvtDbK0rRC4BicTGhge2Up5jp3LtVlZXZWMvXcnWzUswMPf5mu0b
      KbAov8jnuL1k4oyPDNHbcYnW1lZau0aRW4spc0hpb+3FWl6NVWMmJ1uL2lxEWbaa2WiGvOJC
      bLg5N6lj99ZatPMek5DPTUaTzdIlVditZhwl+aQHR5FmZWHLKaA0S09cl8Wa6iJSyQSO3GIs
      OiUgxaBN0NwZpXppNdZED/v3n2RCU89zu2pRz7tUlAoVYVcvvS6ByqpKbDkONOkUjrJq7Mo4
      szIHlflawiE5xYsL0QJymQxi04zFHGxdswhf93kuj0vZuGsXZY55u1hhoTRf4NS+o0wblvL4
      9lq08x4jhVqOZ6CNkWgBS2vM2GxZSNIKiqvL0SR8CNYKigxpQhITiwvUXGwaoqR+ObmGe6sd
      SBUqcSHsdhEPTbD/l68RX7KLpzZWI78NPr9MMkDT8bNYlm+n0qG6DbW80wjMTvTQMBBm47rl
      6JQf7XK9W4gCuE0ImRSRcBS5WotSLuNzuOmvlSkIpJMJBJkSxW+ZGTmHQCaVIiVIUMjlt+U7
      ud2IAhBZ0IihECILmt92l/3nQhAE4vH4J58o8h8WcQQQWdCIAhBZ0CxoE0hkgSDEGevqZNwf
      RWUppLa6EKUESCc/zULYf0zS6ZtEKaYjdJ87TPO0hoo8I+Dh5Mvv0BlUU1BoRZGcpfX0fvZ3
      x1hekQNAMhLgzLs/Zf+JC1xovki/J01eXjYaxScMsuFpTh46RyInF5tK8cHPhDSuiQG8swpk
      kX72/uZtGjrd5C0qQy//7D7FTDxI+6UOkjoTRrXio08UMriHmrnQN0tuto3IVCf7332HU839
      pPUOsq26zxDinGG84wIhfR4GxZ3xi8bHz/ObMxNYDCk6Tp8illtPsVkOQkY0gW5G1Oekf6ib
      y02dBNMAEYYvdXKpqwVXIEM04Kb9/Eka+64FeGWSMQamfNRs3MOXn9qFxd3E4csTpBMRPM5x
      xieczMbSCGSY9ToZGxtlfNJDPDZLf0cf09EYQd8MoViKK47pVMRLx8UBFOYUje+fxrHhUe4r
      DtPY7b16XyGdIOBxMjY6xpTbTyKdwj89hdvtZmJiEn8wiGtijOlAjCv+7ohnhNMnTtDnmiWd
      jOJ1TjA+6Zq799WS03gHL/Dar16iocdFKhmm60IrQvF6NlSmaT7TQiB25WyBaNDN+Ngoo2NT
      RFIpwv4ZZmY8TI5N4A0E8ExNMOn2kUiDTJGh73I3scyd8cArc1bw1WcfZsuWnawqSDHpm3d8
      yBSiCXQzfK4R0o51bFP3cG4kwgNloNIYsBhUTE/7UOMEuQOT/oavTyZHqzdgMsux6ORMR+MM
      thzhbPcMEmkafe5K7t9SRvf5M/T7A0z0e7nvy08CEBi7zKGRKMs2b6bCMRd3ExpuYEJXz7bU
      GG8HLSx2ttKXKWFLjW3+hgLJkJv25vMMO2eYiih45MntNP/o+wSL1iKfbidiX0JucpgB6Sq+
      9ftbMQKRgBP3tAvtlJ/RQDOHL04il6fRF6xl97blzEUsJAnFVNRvrOfyBJBM4IulMWfZyZLl
      I+t2kUylmbOik4y1nadlzI+7v4/yZ76JpeUdzs3qsae9eNJa8kxyxvwCu596mkqrA29fH77Z
      CnJNHzMC3SYkCjU6eYaQq5tRYTEbKk1XPxNHgA+RYWqwG2PJUmpXFzN2po2gACjUZJvUuN3T
      eCdGkOcUo71xZX9miLd+/gP+/jv/wrEpPcvKLLQ3HKS9f4TRoT6amptxBmUUVCwiy6AgEZnE
      GwSY5PS+RmzLNlHm0F9dMZ0eHcKan4s0NMu0b4KI3Iwwepr3Wqau3lKmMVFSXIxZK2Nmxkck
      miAjU1Nct5nHN1UQFhzsfHgLWtc0gflrTFnlFBQVU1NspH9whILVu3li9wZCIy24gldCrdUU
      L1mCXXNdE7luzTSVSiNc7cFlOIoWUWjVkk76cXqiQAx1Vj2P7F5PGiUbd9xPpRm8oSgKnRZF
      LEEgdi1L8xdNZGaIk2d6KFy3kULdtePiCHADmdl2TjZME+/6AecFAUFhZGBqB6AgvyCLts52
      wp4o5auL6e28YQi3lvL4rj9kVakFgHQyxqgpjwd2/gFbyhW4vXHs8j5+8LPD1D65jQp773yb
      ymb1ljxG2y4TLNqARTXf6IS5tQpMdorUdirq6zGm2/jJwCSRdfloEfD0N/LawQHWrF9Gie8S
      AFK5HI1ajVrQoFBrUarlfO5+Vq7AqNMSjadIKZIYjGaUyiulOtn3k5eRbX2cuuLLDM0f1eh0
      KOUJZHo9eqUMuUw+Z2IJfEBMXzQx1yV++uL75G58AHlwgkm/Cm10FonFKgrgg6SYbLmMbc8f
      8NVNBUgzKdpPvMlw/zBJAVSOXLKC79On3cZWQ/gTS5PK5FRWVHDk9FtMtsjQ59Rz/zoTBlWc
      sf4RpFIJsnAYkGErW47Je5b2wUo2VmchlUB2aTmNY+OkqotZufQCJ155mUwozOr7K5hP64RC
      rUMjjTA0OEIsJiWaTPJJTUuuUKKXhugaCbC5rJjDTQd4U55CW7CGLONHRGzKNZQUWTlw/gCD
      yRjWyvvQXT1VjdEoZ3i4F1lCQTgU+tj7J8JhkmolZo36Y8+7XSQTMirql5IKTTEWliC1FjDb
      3kmkvn5hxwJ9eCU4QzQwQ1JtxaiSgiCQiIaIpjKkoyk0djOZgJeI3IRVmcAThWzL3JvOmXQS
      v9+H2mBDeyXqURBIJSL4ZnzEM3JMNjt6FfhdTsIZFTpVBpQGhGgUlcWIJBomKdNg1KqQSCAV
      mebk4QtU79xNljSE2xMgJdOQnWWbf8dCIJOM45vxEssoUKsUqLQaksEACpMdTSaEN67AbpAw
      441jzDKjBMgkCfq8RKRGHHoJfu8M0bQck82GXi3nmm9GIB72E0oosJj1CMkIM94ZYhk5JqsN
      g0Yxf26GkHcaXxT0WhlJmQ6dECYuM2FWpfGGEliNWsKzIaRaA8GRZvo8Rtauq74a1n1niTHQ
      PoyhuFgUwD0dCiGkcY71EZPnU5xn4B4MpvxMjLWfQ1K8lgLD3X8iUQD3sgBEvnBEL5DIgmbB
      T4JlsnvvLSWRO8eCNoFEREQTSGRBIwpAZEGz4OcAHyIVJxBJoNLoUCukZNJJopEIEpUOeSZJ
      RqZApZjzlQvJGOGUFK1GOdeTZFJEIwnkOg2KT/EGuJBJEk9JUSllSIQ00UgUuVqPXDq/DpFI
      I5Wr0Ok0fJ5344VMilg8hVKt+ujkukKGaDhEIg0KjRat8rM0EYF0IklaJkf5qRPq3n6E9Cxn
      3/gVJ/r8WGu283uPrmFusV0QR4APMXyYP//L/83bDSOkEPAPX+D7/+//xc/PTjB6uZn2Ue/V
      ldZ4917+8dUWIleujYzyyj/+iu74xyTT/RApPJ0NnOhwkUlFGO86wT///Xe46IJ0wsu+H36H
      F378Q777Dz+izf35Ni1JuDp58cdv4/mYKMykp42f//BH/PTff8CP3jjPJ69334wMvv5mjl8c
      +lACsbuB4BvFa9nAn/zxY9B8lq6reYwFcQS4GVqdg/jMIMF4EZ7pCZKCDuV1XYWn7zT7j/Zi
      1c0CBZD0cOKtfQzFkkwF4kAKV08zR05fxCdYWLN9LZKedkzrHqE8fpG3O9Xs3r4YDZCZnaKh
      P0r9fSa8o310jY4Rm291qeAAzmQtX//TPbT+5K/pH59ledZcJGjSP8zRg8fpdcfIW7qFHbU6
      2s61EIjEcae1VBcY6Osaomzrk2xcZEaSjtLfdoGOtlZKenayTjnAgeMXIauG7dvXk6OfXwGW
      GNj45O9SKnTwT78eYZYN6AASIS41nccTcDMwmWb5lvupNbs4enyUlMxFRCimPCdKW7uHTc98
      ncWVVUhfPcBAZTmVRu4qUvsSdq/1cOrdn+A0lpB3JQLj1tOjLyxM1lwkQgC3N8D09DRZxcUo
      SeEeGWJsupcDvzlJ1prt5KuTQIr+42/TFCtk+8oKBCGGkEmTUdtZtXk7i/ReLl9yIZG4uNgz
      wdClBnxK09XUiQHXJDGFEpNai61wMVt3rMV6JTwgGiEh1aJUadGoBGZDV/rjDImUjJK6DWyu
      zaH18iX8/mnOn7mIvGw1uTONnBpKs7ZKxalDzfgApCryikqw5lVRaZph36Em8tbuoDDewaHT
      HcTnu2qFvYwilZO33jiEpiQHTXL+lqk44x3nuBwtYsdKB+eOH2FiYpCG5i6yazeQ6nqftkAu
      y21T7D03BHILi3LDNPfO3Lkf7mNQ6Cysf+irbDT3cKx1LqctEqUogJsh15vIlcPoeAcT03oK
      cq6Ln41M44lYKCkvoaaqBIgyPeUhq2QxRUWF5JlNSDIpApP9NLdcZGjSTyItkLt4BcqxRhqH
      dKxa4pj/4gUikSgKmQaZTIJMoUR5/YYVSiUKBAQBpFIpatW17HDJkJvOlhba+0cJRtMIAmis
      Dopy8ygsKSErt5Dswhx0icScGSKRopArkMlVkIoRV+uoKMinqMRBdGaG1HW2ijGnhq/86bco
      mTzB6aHrQpY12SytKaUgvwSVIkEikcZkySW/oIqSIjU5ReWU5tmIx5OABLPFjNt79zdbTM8M
      cL7Xg9rowK7P4A/Nr/4LKVEAN0WmpShXQW/DCTzZdWRfH7SosaKXeXC6ZhgaHgNUWKx6XBMj
      +L0epoNBhHiQ9tZ+NGVLqc7RkhZAZyrEFOumU1ZAueFKI5egUqtIpqOk0x+2y2XGAiwqJwGf
      F19AhsNumf8khbO3hSEhjzW1pWhIfijz88ehVKmQhEJMBmbxTHmQ6/RcWQ+cadvLe60+BKkE
      CSo06usEGfUwOOknFHSRTMhQKD4+yHo2EMBsusv2DyBRqZk8+zJ/+9d/y5HAYh6s19J68CSd
      npA4B/gQWgflBSoKqozktLooXVeNqXeQXJMGE7lkrFWsfxZef+fnzBRnU5bnoHbrswReeZWf
      H1JhLynDoLOwrLaQfcf3E6mupdysQq7SojEVUFdYiPqqZ0SCLTcfWUcns7E4RpUa0FK4qAyj
      CuTqfFYsM/D2C/+GoXIXXym9En+soLB6BZZ3j3Kqr4TasmLSKj0FJUVzWznZCshTaFForBQV
      pbhylT67hBUFl7nsNPPIzmW88cZPEbLreOihZVxp59Ylm1H94qf8zXtJqu77MtuKrmvkaTmh
      vn28eNnAut2PkGcZp6RUi0YGlrxyVHo5CmkBZeggPUP3qJo1j39w04+7gVSXzxO//2fXHUkh
      teiIKGXiSvCdwnn5AG80+9ny4MMsydVfF9mZZOrCSVpVS9i1NOcu1vATiHjZ+7NfEV73KM/U
      l3xCZGoGf38Tp11mHtxYxb0XbJLE4wqgM5tFAdwpYoFpfAkldqvpQ4luhWQYf1yBRX9vpQ//
      AJkUwRkfGZ0Jk0b5CQIQSIRDJOQa9Kp728gQBSCyoBEnwSILmnt7fPqCEV+IERFHAJEFjSgA
      kQXNgjaBRBYKaXwTw0z642iseZTmmq96sUQB3EhkjP3vncWfyoBERk7FStbWW2nff4ZY3lLW
      rChGnQzTc7GBjlg+T25ZDEAqNsvFk3vp9wISGcb8ajauqsGs+YSvOOKlqbEXx+p6SvQ35MkR
      Mnhdo8QkNmS+Vs62jqPIXcoDGxej+hzpRDKJEP09IxhLysgxaG56TszVw9GGywSiczES5qpN
      PLii8FPeSSDsduJOySnIcfA58vl+LjL+Ad7bfxatVcHYeDtPffMZClRz9RNNoBuJOWlrnSJ/
      +UbWr65lsvk9mvoG6Tx1jjMXm3DPCsRnPVw8tZ9Dl67tCJ6OR2jv6cdSsowNq2tI9p/meLuT
      TDpJJBQkGAwRT2UQEIhHQgQCAYKzEVIxP21Nl5mIxIhHoyRSmWvJceMBOls6SUtcNDQ4KVq6
      iHDLAc5PXAncEUglY0TDYWaDQcLROBkhQyw8SzgcJhicJRaPEwoGCF+X+Dbun+T0iZMMeiPX
      6jcbmrv3/DkKUx71q9ezYfViZL5Z1Cbt1WdNxSOE5+8ZiacQMknCsxEikVmCwTDxeJRgIEg0
      mUGlydBzuRtf5POFcn8eJNo8HnjscXasW4x6NsDVtF1CWhwBboZcqSMrv4hiTYRBoxx/KIpS
      Y8JskOOa9qFiiozEivHG5LgKNfacPIqKFHjaG+icjTBy6QjHLgwSE6TkL97KzvWFtB16k1bn
      DNNTKR7++uMAhCY72dfvoWrjNhbnzMXPRIbOMKSsZUNWCYVfL2Ss+wwXkmqqr3baaUZa3mPf
      ySlUBilxRTa7HltL879/H1/uclLObhRFdei9XUyat/En/2kjOiDg7GN4sJ9Uv4tCfwv7z3ST
      QELeku3s2liDTgEytYHcPC3jrX1QVsfaIsvVx+w5/DPe6pXg0CYRDFU8usXCSz84iaXOjLPD
      Q9GKMvzd3chXPs0376+kWn2ChqEaHq21cTeQKPWYNR4aTjWRsBuRRZKgUoAgjgA3JeTp552f
      v8C//fCndEUdLC52IFOoyTJomJ5245kcQZZdjO7G7sM/xsHXf8m//ftPOTmhorrIROvZgwx6
      YyRD0zQ3NjIVkFBUU09NRT7q1CTTfgAXZw+cxVCzmcoc47XkuCODWPJzr4YSSGQ6crKkjE1+
      MMRYbqvi6eeepVoVZGDSS1Kiorh+O89uq2AmZmbP0ztRTUxy5SpL3mJKyiuor7DQ29NP3trH
      +MpjG/H3nscZTF4tN5OMMzI2QVF5JWr59UlyJVjKVvHMc89ii/cy7AyBAhZvepY9SzP4VPU8
      uasOt2sakJGba2F4dPr2/UCfAaXeztYnfo9NlmGOtrrnDkrF9Og3RWsp5r4nnqNCD3KlBo3a
      yUWJgrx8G90DPSQ8sxQvLaGv94YLDbls2vIYdUUmpAoVapnApNrC+nVPsLZYSSgqIVsxzE9e
      PkzxzjXkmTXz5o6F6mUOXIODRBbVY5zfVCOVTs2lbUlF8AbS5FWvQent5Ked49y/LIu5GYME
      tVaDQi5DKZeTEgRkCgU6rRadRI9KZ0StlXOzbbYFIC0IKJVy5HIVMmmaTOZaXGkyNo7TbWT9
      TvMHN8KQytEoNSjkShQKKYIgIJNr0ev1qDRydCYzWqUSybySpTIZqZttRHKHSI438uuWFNuW
      Z+GNayjNMxH2BZBoRAHcFKlMgc5g4sZIXm12HpbzhxmUbmatJQY3pqG9sj+AaS7/vJBJUV5a
      xqnWM0SHBTKaRdy/wYJMkmR2xkcMCZFoFFCSt2QNifPn6BguZl2FHYkEsovLaBqbIJ0vpeFg
      A5j0xDxp1qwr49p0OY5roI2jB124Igo2Zln4pAh8mVyBVhphaDLEysICjjUfI6COIc9agsN4
      3TsH7hFm9EVY1DfMXhMRRnsbORTV4cnkstxhoOkj75ZmcmKGksLln1CrLw5FwQo2Tx6jseEi
      xkUPsWORlL79F4itXLGwY4FuuhKcDDA8OoujuOA6EyeKc9CDrjCX1PQYAWUWBdoYowEoy5uz
      azOpOFNTUxjs+Rg1iis3IBkNMDkxRTitJLugCKtOwDk4gC+twaLNgNpGZjaILi8LSdBHXGHE
      YdIikUAyNMHRg23UP7wLbXCMMWcQtDbKS3JQSiVAioHG1zhwUc3GDdWY7NnkZ+vxjo2hchRj
      zHgZD6sptEmYHI/gKM2ZE046jntqnKDMTrFFwtTEJLNJBdkFhVj11wLdUqFpJqM6Ch26DwS/
      dbz1AofDJWxdWYLdVkCuOcP4aABbcSES3zB+RR7Z8iCjszLK7GkO729h0ZYtFJvvTDboTyZG
      38U+dGXlogDu6VAIIc34UAdReTEVRaabRGCmmew+ScuYlR3b6tB88ZutADBy9j3aZVXsWFvB
      xzdpgeDEECNROdVlRXzSdml3A1EA97IARL5w7kFNiojcORb8JFgqFfuAhcyCNoFERMTuT2RB
      IwpAZEEjCkBkYSAkGGrax95zw9eOJaPiJPhDeBv5y//+M4T8PHRyUNlLeOixp6jJvXnY8Efi
      6eJXJzw88tRmbj01VIbQWCPHu7XYUq2cbB4hEvHjjuTxx//rj1lm0X5yER+B++L77OvX8diX
      NmG+yedCOs7ghcO8e/wis4Ketbu+xH3L81F86hDmDF0n9xIr2U5dkf4e6WGT9GP4stIAACAA
      SURBVJ3bx2tv7Ee6voiHrxxWaEQB3AxjTi2P/cW3WDzfctOeXg6dTrNp02LifWe4mChnpXmG
      042XiWgKWLd+DSZ/G8e7vKRDM2gK17C1WkuWw0h4qpv2njE8bh/Yy9m0djlMt3C8YQiTw4Jg
      rmLLqqK55FUxDyfOuKh95GFKdHWs25Wi99x7dMRLqbwatx/m0pHDeDNavP44K3fuwuK5wEWP
      lPTkIPH85ZREu+gKOdi8bQ25BhUwQ8vxMzRFKtg0swx37xkuDAbJrtnA1uWFc8F2goDUVMzj
      v7+VaOvrnOkbJbYsn7lMjRkmO05x+vIYCYmJTQ/vQOhrx5WMMznoJGtJNZmRPmb0xWxZu5zs
      4iIae1opy16PSXX3d4KENEprGetWL6Hjhk/uDYHeYwSd7fz8H57n+eef53svvsZwSorz7DlG
      QgE6TjcTiAQ5cuQkCWMhhnAvR09exj14iROXJimoyqHz4Dv0Dk9xrrkXj2eIwyfasZUU4247
      RdtYD4defx8hrxqF8wLnOqe4En8ZcQ0xrrSSp54Phos56egOULO0GtXVt0liXDp+nJG4iQqz
      l71vnmFo+DKHjnZgLbDQ9t6v6ZPlkxm5RNOAd/4aPYXFDmwWB1rfBV4/6aZ8WQGDB1/jwtRc
      8JtErqa0uhbNyPu81uDEUZyDUnLFQZggkTJQXbcMvbeRE10uJrvOcKBphqIcGcd+s4+4PRdP
      5zm6pvyYTRaCIS/+0HV5Re8qaoqryjEqP9zcxRHgJtw4AkCGRN0h2hra8aeL2Z6VYv/+Tman
      Y+hVMgzlkElLsdhLKF+2jKHDp4leiypGm1VAdVk5of4Oor5hJv12HqxfRpG5h5OXr5036/eh
      1dmQSuZ+qNneBmZy1lNu/2AiKo3ZQsnyVSyxKGn+bhuzdlAWVbFqSQ6t+0epWl9FYKID55WU
      zygxmnVoAloirn6SZWtZVVtFpuUQ/eN+1uZar5adveopvmU6w6+PnMJdlU+BWQlkCPsm6JgI
      4HT50MbTQJr8RcuoqfBxbCDNqooS4gNdxFIpJGoNuniKQCwOfErT8Q4jjgC3hJScqiWMHz9B
      ujCPLI0anbmYDY9+hacfWEmRxYD8VndCUZvRSmfweAOMT0x98CONhlg8wdzSTIzBznEKq0u4
      McQnFoni9ngIT0wyqzWj/hQJ5XRmC8nJUTwhF+PTYDXPZb4W4rNcbDrLkDuMVCZHqZAiuSo7
      N01HLmOuXUOlw8AnLh0lk0RkEjTye7V/jdB9qpG+GTE57oeRa1Hj5JV/en7uHVaVnc0PPcba
      4hoqFvdiLStGZzOxc/My3nn3xzTpSrj/wRp0bivZVh0yZJgdWWg1WrLsJtRqLQ6bDLlcjsFs
      QdCX88AeJ6+/9CMs+ihSm+xqMzPmlWBobMObypAjCzEbK6Y8/yYRbukw7UdfoyctsP5Lv0O+
      6wDZKR1IlVizbaglUlJmKybttWt1JeUoWkfwm3Zyf+7b/Ph7bWQv2cPusvnwZ6WGfCPsffmf
      8Qg2Nu16jGzjleaRReUSA0cPHmN56SIUqRgaswOrQYlUocFhNSGTKzBYrKhVcmYDbtR6PVbD
      Z5+033601O3+fWrmUwVr5RJCkrS4EnznidLdcJZ+dxDX8BCOLV/l4eXZ80NxGlfzIS4pVnL/
      MsdHDM9efvHX3yX3if+bndV3P/X4zeg/vx+3dgWra7Pv0R42gXNiBoPNJgrgzpPAOTjIdCiB
      TG2hrLwAzfXJclNBnDNSsrI+yoWYYHJoFFVWCbYPvZN5bzDrmQJjDgblveAB+nhEAYgsaMRJ
      sMiC5t4cQ+8QgiCQSNy9fDUid58FLQDgk116Iv+hEU0gkQXNrY8AQhpX10lefusEvoSM8g2P
      8fi2XH7zjy9QsOeb3L8067ZXTsjEOPzi33B02MRD3/g9NhXfLIzrNpOKMDXlJTk/MkgVaiw2
      O7qbLKMDkI4z44+gNZk+mDzqxmLjQWYCKUxWCyp5hkjAhz8kwZ5vQwmkon6cviRWuxWtci4V
      liAIxGMhBJkWScyHJxBFqjaRbTcgk3x2D4uQSRGaDaPQ6lErPnoHr1QsiNsdIK3Q4nBYUN3q
      Yt+1O5GKx4hnpGjUKj5HOtMvDNm3v/3tb9/SmekYrUdfpUW6jv/86BL8wRS5uUYuHTrATFqB
      Z2KEsNSMzapk4vIZTje1MeiKkZenZ6T1PC1dA4xMzqBRCbQ3nuFS3xTordj08wsxQoaAs5/z
      DY10DE4h1dlITZzi1282Yardxv1rFqFT3v7t1tI3JmzyX+K7f/crxqIxPJNjTM1EsGQXYNZ8
      xL0Do7zyxgl0peU4tB+9JDvR/CovvjdATmkFdkOSy++9zIsvnSZ/42ayVTB6+qc8/1ILJVU1
      5M6nD8mkAlw6fQHBqObSvn1cHB7kYmMnlqo67JrPPninglPse+cQmZxicgwfkddBCNNxaC/H
      O4bpb7tMMmsRRZ8hrUnUM8K59nGyc7NQfmoBffHc+gggVWDLLSJ1/hCHi7/MI/ctx6L0QjRG
      OCVD5r3Iq3uDfOuxCt4+1EftGjtn9r+EJu/PCJx5n/dnKvijL9fTdfhNuuW1VEh7eeUNP//t
      W4+iBZLRGQ6/+itc2WsoV7Tx6hsentiei06jxuGwofmY3vV2o7MUs+OJ57h+ncnbe5zfvHeB
      QEbNxie/jGPyEp1jE4RiavwCBIfPs/9yDlu3V9F96BUk1Y9RX3hlJTTIYGeEsvICJqecVOVm
      ARpKi6Cj18fSlQqGenxYsz+YOzM63MSgpIx6mwnF5j1syBY49u+/ZCKUodo6J8h02EXD4QM0
      9nowV6zikfvr6Nn/Om6piUmnj9pVSxm/0IBqxRM8tb4EKTA9eJ4L5xuYtNdRqfBydN/7DERM
      bH3oUZYVGubsYv8QDU4jT31tN+rgJLOKa40/OjPC8X3v0eGMUrhsJw+u0XHkzS4kVhfD4xY2
      rdPTdHKAqgefYXtlHtaWS3ROV7KmQP9F/myfiVtvVVIFVVuf43/+2VdIdb7N33znJ/R6YqC3
      UF23irXralH4pwmQTW2lit6WdpyuCfyRuctzKpdR51DTM9BLe/NxGnucSP2hq/kq49E+uif1
      rN+4jQ0btqNytjIlNWDRacgrzMdwB3cbDE538tI//x1/93d/x7/+4k2G/Wkk2kIeeOoZthan
      OHmpn+B0Dz3Jap57dBUmCSgsDpLT7Uy7e2nvAIvtSuMXiA000WFZy+NrCxntHSCUygBSbEvq
      ENouMO3qoY8aarKvH2VSDLR2kF1RjkKuJy9HS+vBd2jL2MlWJa6WnUZBcd1WHn9oC9HJDiY8
      Mwx29ZHKWcGeqjRHG11s27WKwWPnmZy/yl5Yx6LqGtbV2Gg5eohQyQ6e3ZHHub17GQ/MjYhx
      nxdPeJy3X/gO3/3xXsZnr/OWyTQs3riHx3fX4W4/y5Rnlr7+yxiqH2atvosjfXYe2JDFmaZ2
      kGpZVCjnYs/dzQ36Udxyq8okY3SePYzXVscjT+5k9F9OMjMbAQlIrgub8nUc5t3TXp79+lYC
      k2MfLESlxqRWs2jFczxTFeTCmIIrO+PKZBZ0Uj+TXh/ZilFCMhNm9c0yWn7xGLNq2PMn37hu
      BEjQ03qRpkkZSn8IIQuQgM1mRSaZe3aV1o49S8P0pRYiZfXkXW3/UXrbe/AOKng7JDB62UX7
      thUoAbmuBKu2gYtn3GgX1aCe9lxXiwgBvwb9fKcpVRtZ/+gfUnjiRX59qp/Kp+tQAomQm9bz
      zUSlMkLzEagKrY4sh4OsaDbGrHwsdjlGifPGRI4ImQzBdIYchxWDVYFe2Us0lgSTDIlEQiai
      Ycef/S6Roz/i/UujrCpYAkDUN0rz2T5Qp0jO//AqtY3snBxUNhVZ1mLsevfVjBt6vZFA/+xt
      /IVuH7c8AkhkMrSaDM1vv8i//uIkeeu2UZlrQas3oFJIkchU6PVarCU15KvcHDp8noxCS9Dv
      R6XVo1MrQJPL/Q/vJN78Mv/28kkyOuPVCqj0JTywu46e/S/y43fbWLrjESqzjWj1elR30PwB
      yKSThGcDBAIBAsFZYokIo909KAsXk2dSQyrFjalepQotRTYTl1oGqFxeMh9yJZD0TdEetvPw
      g9vZuGU3zz1UyqXzvcQFkMrU2G1wtslHZemNE3wddkecmZkkBHp5883TTAaCzEbTWG3m+Z5L
      IOQdY3RWTuWiQtTpJOlbcOtKJBKkZEimwaZRMT42xuRYDxHBgX5+HqPMKaRCm2La7cMfFrCY
      rpkvgckhPCkzlWV20knhAwl1P4yAz+fDbrsDDozPwIIOhbhpZrjQIK+9cgRvcr6JKy2s3HIf
      OaGLHGxxU1GZRyhhpdToYVpey7ZFUk41DVC2qh6Lt5UfH5rkK7/zCDaFDBAITvXR5UyzbGk1
      GrkEMh7OHbgMJhWKnGpKFGOc7IiyfUMNvZ2XcVSspsQxN3xER0/xVoeNJ3dX42k9wqHzQ0iz
      l/LEnrUY5FJAIOGf4PTxo0wmrORlW8ldVIzvUhOWFbspTbRzdNLGjqVSTh91sfyRNdgA4gEu
      nj3CkKqOB6vlnD1+itGIjtXbdrC4wHg1HXtovIW3328mZa3i4d0bsM3vdjM73cOJg6cIGKop
      dsTILyiit2WMJQ/sQN77Hr26LazWDnFwRMlja/M5995hNGt2UZdzL0WHziEK4DalRoyHpjj0
      ypvEFu/giXWVyG6Dzy+TDNJ88hzmZVtZ5Lg75uDnQyA02cu5wQjr19ahuweTg4oCuE0CEDIp
      opEYMpUGpVzG53DTXytTEEinEghSJQrZPehE/0QEMqkUKUGCQi6/Ld/J7eYWJRlnoOkEjR0T
      JIB0bJb2huO0TfhvOC+Js6uR053OD1w73n6exu4PewGETJiLp08yOB3+bLUXMji7z9PYNU7Q
      3ceZhsv4op+tqM+LRCqfm68obk/jhzlbXa5Q/ZY2fgAJUrkCpeLebPxwywKQEho8w1sHG3BH
      IezrZ9/bR5kK3PjSc4KxlmO83zL2gWt1VgdZN1lEEYQQZ99/j66Jz+ohkKA1O8gy64i7Ozh0
      uAHPXRKAyG8nt+gGVVC+fj187zRD4z5yRs/ht1VRnafl5Ev/xMneICm5gV1feRYp4G09wD/8
      f68zGCngL/7X1xg/+Cpn1Tv5ozVxXn7tCK5IGkv5Br78+JL58uN0HfkFr58aJp6Rsf6p32NX
      3fzeWP4hfvLCjxjVZCGMjSLLKkKT9DGdsvPVP/waqVOvckjYyFdq50oSolO89cIvuOQOgbKM
      r/3BI3hP/IrfNLpQas1sfepr7KzNRSqZ62HV6ntl0waRu8Etz0qUtsVUGYP0jg3QemmMgqol
      2JOd7D3WjcKWi8Lfx/ET7YQBY8Eqfvcbz1FKD51XVl9ScXqaGvDlbuHP/ssfsKbUDFfCEIID
      HHj/PClTLlZcHH2v8YZtfjI4ah/gyQeqmHAqePrrX2VRZppBX+BD9fR3HedwqxdrbhbxkTMc
      PDfI2PgUGHLJt2tJJpMf8oeLLFxueSFMoTJRVWXnrTMHUPrk3PdYJerIKaIaK0vX3kf59vUo
      TWacx5tRWO1Y9Br0cunVNo6QIRFNoDLq0BhzqKu3IFfOmz6xMEFBRuXKbazO2kBGqcd55m1+
      cawdo6OMAGoK7HpkXhlSnQaTQo5CcfOqR4IBFPpCVt+3G/P6beiyClGUP0Hi5FGaO8bxWZez
      c1khsru1a7PIPcWtL4TJlZRUL0M21k7QXkdtiRZJ7mLqHDKGu5s58s7btLpiVwv8UPOSqyiq
      qSI12MKhvW/yrz98iT7PfJyErYTV5dmMdjZxav9bnB6MUb3xMf7rX/1P/uDZdVhuLOtjyK5c
      SZ7OTXdTI++8sZ+JmSAXz57Apa1k5ZJSjMp7d0Imcuf5VG7QZMhDT3cPCUsV9eV2EAR8E130
      Ds8g0edQu7SE6Gg340IuywsV9Hb0oCmrQ+nuxS3LoyZXzlBfL5P+JLaCcsoLDQy3daErWoxN
      cNHWPU5CYWZJ3WIsqvnlmESI/t5B5PnlmONT9DilLK/KYrxvEEVROTr/EFNCFqXmOP1jUUqr
      ygiPtDEwHUJtL2N5dS4J9xgd/WMkpEbKqheRY9R8vAjSYTobjjKsWs6e1YWAh6O/OECkZA07
      NleiSQS5dPoQTZFSvvHwirnvJhLg9N6f0+4CJHIsZct5cNsqbNpP2Lgr5OLYkcvk3beZKuMN
      SaSENM7xfqKSHOyyUfbtPY1PVcRjX3qQ3M8RDZqJB2m73IOlsoai+bxAN0XIMD1wgTa3gY2r
      q4k72zl0+DTTSRP1W7azujKHTz+QZhhtbUJWvoZ83d3viT5VhJlCb6d2lf3aAYkEa0EN6wqu
      HdKV1nLljMrlq+f+MNaSPX+svHYV5deVWbV8xfxfJazZWPLhmyr1VNQum/9PBWvng4fKl80f
      M9dyJYaybn6oMFbWk1t5rQi5o5jVjuJbfEqIzjjpH+yiLShn04pCjLIQQy3tTESk1CwtJzc5
      Teu5ozSo9vCN+Uyr6USU/okZarf/LsvzoOHdN3m/JZdn12Qx4/ESzcix2B3o1VJCHhe+cAKJ
      XEuWepa+tm5ka1eRm44g1ZjQqeZGqWTEQ9uFfmrut3Pm5RNkb36aldMnaOjy8uQKBwBCOkFg
      xksgkkChMWK36Yl43CQkcuKJJHqDnthsAKnBQZZJgwSIuIc4cfQYNcZC8rUSfN4Zomk5Zrsd
      vVo+P3qn8Qyc56Wf/YpA2VOsrSug8/xlhNJNbJZc5NjJZhYV7sGulQAC0YAHTyBCBgX2vCyY
      DRDLZIiGY6iNRoTILAm5DofVhFyZoftiF9YNi9Hc5ZcEFvwrkTdjxjlEyrGRnapOTg+H2VMO
      Kq0Ri1HF9LQPDVMgy8ZkuOHrk8nR6Y2YLTKsejmuWIz+poOc6vQglaUx5K9h97YKOs+dpNfn
      Z6zXy86vPQNAYPQi+4ciLN92H5VZc3E3ocHTjOlXsSM1yhsBKzVTl+jNlLJtyRXJCyRmp2lr
      amBgystkWMGTzzzA+X/9DoGSDchdrUQcS8lLDNInXcuff3M7RiDsn2LaOYVu0seIv4kDLeMo
      5Gl0BRt4eOcKjEqAJLNRNSu3rqRlFEgmmImmsGZnkS0rRNblJJlKM9eEkoxcbuDCqA9Xbw+L
      vvInWC+8wdmgAUfazXRaT4FZzqhPYM8zX2ax3YG3twffbAUa06dIa/cFcIvjaJjGV3/A888/
      f/XfC68d4bOuX10hk/Hxzs9+TOPAx23tHKL1/Vd45cTg57vZrdeKiYEujKV1LF1XwujJywQF
      kCg05Jg0uKZduMeHkeeVoLvxHZmZQV778Xf5P3/9XQ5PGlheZqXt9D5ae4cZ7u+h4XwjkwEp
      hZWVZBuUJCLjuIMAExx/5yz2+q1UZOmvmmeuoQFsBXlIQ7M4fWNEFFaEkZO8c+FaSkW51kxp
      SSkWrZQZr59wNEFGpqG0fhtPb11EKJPFrsfvQ+d0cmXZ0pxdQWFJGUtKTPQODFG49mG+9NBm
      wsMXcAWuhD2rKV1ai0N97SEFIXPVg5ZKpchctZ5lZJVUUmTTkkn6cHqiQBRV9kqeeGgzaZRs
      eWAX1RbwhiIotDoU0SSB6N1PnnuLI4COtc98i6WjF/j+9w+x/a/+jNUmLWHXAO1DSaRyBTlF
      OcSdo7hDSTSWPHINaSY8SUorcom5xnEm9JRnq5gaG8cXFbDmFpJlSjDW34tsWZz4rJvhkSkS
      Mj1FpcUY5XGcY2N4YrP093YzlF39xX4T82RmWzl22kmi/bucEwQyShN9E7sQkFNQlEVrexuR
      6QiL1pXS3XbD9Mlaxpce+hZryudssXQyxog5nz27v8l9i5RMu+PY5b38048OUPfsDiod3SAI
      QA7r7ytg5NJFAsWbsaqu9UuCIIDZTrHawaKVKzClL/HvfWNENuajRcDde5aX9vexblM9pTPN
      CIBULkej0aARNCg0OlRqOQo+tK/9p0OuwKTTEY0nSCmSGIwWVMor85sp3vnhL5Fvf5r60osM
      zAtDq9ejlCeQ6w0YlHLkcvnVOgj3iDP6c5lAo2d+zfeOC2zauZ016TGOHerGak/SNqLgke0V
      vPt2M1/9f/6Q8b2/5pL5Ab5U7GR/kwuzPo3znJ2nnlg5V5AQ5MJ7B7kczUEVHKC55mEeKJjm
      F680UFhXjnN6hlT2x9fl9pBioqkFx6N/zO9sKUSaSdF67DcM9Q2RFEDtyCfLv48e3U7uM4Q+
      sTSpTE5VZSUHT7zO+AU5htyV7N5gwqSKM9ozjFQCslAYkGGvWIHJc5q2gWo2L85GKoGc8koa
      RsdI1ZSwZvl5jv7yl2RCYdbvrmIurlKCUq1DIw0z0D9INCYlegtpXmRKFXrZLJ3DfraVl3Kg
      cS+vyVJoi9aT9VEmiUJLabGNfQ3v0Z+KYau+H93VU9WYjHKGBruRxZWEQ+GPbd6JUIikWolZ
      c/czR38qL1DkhhGg643/zY87qvnz//E09sAQJ0+eY3Soh4ujcZ770/+C+/V/xlX9IOnWMyz+
      0nMkj7/A6+0pcs1yZpIOvvpHe2j+yU8o2bKVlvfewavJRZ+aQeJYx8ZqH6dHy/lf31zJsRd/
      QLPlMf7HM3Vf5HcBZIj6vSTUNkxqKQgCiegskWSGdDSF1mEh7XcTkZuxqZK4I5BjNcxdmU7i
      m5lBY7ShvfL2miCQSkSY8f7/7Z1pcJt3Xsc/0qNH921JlmzL8p3Yce6rca4m7fZIYUt3l06H
      sjDDwgzDMAwMLxjeADO8ogPMwJYusAV2u0dhrx5k2yZpkzR27jjx7Th2fJ+yZF3W/UgPL2wn
      jus2m25JvGN9XkqPpOd59P89/+v7+/7mSOVVWB1OTBoITU8Rz2swaPKgNiEnE2jtVhSJebIq
      PWa9BoUCpISfMx9cof6ZY7iV8/hnw0iCDnexA7WwMPnMZ1PMBYOk8iJajYjGoCcbCSNanOjl
      GIGUGqcJ5gJpzG7bQp5CPktkLkBCacZlXJoEC1iKnJh0qmVL2DLpeIhoWo3dZoRsgmAguHAt
      RQ5MOnHx2Dyx4DShhAKjXiCrMmDIx0mrrNg0EoFYhiKLgXgshkJvIjp0lb5ZK03769H+qk+C
      lUoRlUrB2MW3ONFVxO9+eR8jP2hBofaw70A1f/WDt/E0NPE1p4VOQYvvsSf4o2cqGJ2I4ys2
      0QogCKi1Rg6/9CfsN40zJVuR+95DSiXJShIZSXpIHaYSndV519FeoUCtNy80Gsvia0VuFqao
      WtzLVBRKQaTIuaKbUihQaQy4Su5darR7vNiXv2BefN9y746HSldE485qUqF5hFIzJd6VZrgK
      lKIOh7vs3pe1S3l2VooXL8axXIuvFLE4PHcuyeH5NJ2+Ao3BjnPp9NV6XCWrHavEVFSC6Z6U
      ZsPifVLjWkwPNdsWrjqUland9ugbP3yBvkB6hwdV6BanL/aSkTJEY/O4tjZRmo1TUlWD2Wxk
      4649qIbO8vrr3+N87wzSUqu2VnN0byWtP/sW//rGccbmBSoatlGSbONfv/tTOscja2TE+JBR
      CHh89VSWmj+5sfgrTPnm/XhNa+OKHmgIJOeyJBIZ1AY9olKBlJonKanQG7UopDTxeIq8UkCJ
      jKg1oFHJJGJxlFo9WrUAOYlkMkk2B2qdHq2oIBlPIGj0qMgST6SRFSr0Rj0qcqSSSTI5GaUC
      lKJuIa2yQIEvkHWfEPMJX6AC64p1vxEmSdKjPoUCj5C1l6RZoMBDpBAABdY1hQBYiZQmGouR
      zi543ci5LIn5CMlMjmwqSSp7d0lWllLEk8sSbOQcyXgS6QGnVXI+SyqTW/geOUcyHiebW0za
      T8SIRCLE5pPkfsnZmpyXSCbTyyQMqx5Ecj5KJBIlmfm8w0OZXCZDNvdZfkFrg0IArGTkLH/x
      13/H8StjSMiER27wrb/9c968NMFoVxs9Y3N3Gnz65ge8+rMbJJY+mxjjp9/8H/oeqOFIBG9e
      pqXXjywlmehr5t//6Z/p8EM+O8eJ73yT/3jjv/iXV79LdzB7/6/7DDL+m3zvjeME8p8eANlg
      Nz/8zhv84L9e5zvvtt69tgciT3iwnXMdI58wEFtrrPtJ8GroDA7SoSFimTICgQmkvJ7lLuLB
      2xc5+XE/dv08UALZAC3HTzKckpiOZUCW8N+6wdmLHYSxsuvQLhjoxbz7WarSHRy/qeFLhzeg
      A/KxaS7fTrHtsIW58QFujU2QWhQZStFB/NkGXvrDp+j6/j8wOB5ji2NhM0mKjPLxR830B1J4
      Nu3ncL2enqttRJIZgjk9daVGBvqGqTzwPI9VW1DkUgx2X6e3u4vy/sfZLQ7xYUs7OOs5fGgP
      xcbFHWCFkX3Pv4wv38NrPx4lyt4F2UVmno7rrQQjAQanc2zZf4QGyyznmseQlH4SlFNVnKSr
      Z46mr7zEhpoalD87xWB1JbVrs5glUOgBVsVsK0aRjxIIRgn4Z3GUe1HLOQKjw4wHBjj1dguu
      nYfxaLOAxO3mn9OaKuPwtirkfAo5nyevLWLH/kNUG+bo6PCjkGfouDXJcMclwqKZBZsrmcjs
      FGlRjUmjw1a6gf2P78K+uEMqpxJklHpEjR6tRiYWX5Lf5slISryb97K/oZiuzg4ikQDXLnWg
      qthJcega54fz7KrRcv70jYX8aqUaT5kPm7uWGnOYk2eu49l9hLJ0L2cu9rJUVF4sqsSrnuH4
      u2fReYvRLXU6uQyTvVfpSpVxZLuDq+fOMjU5xOW2Plyb9iL1fURXxM2WoinevzIMKis17gRt
      n6n0ffQUAmAVVEYLbhFGJ3qYmDVRWrxMypD0E0zY8Fb62FjjA5LMTs/h8m3AW16Gx2JGIUtE
      pwa53tbO8FSYTB7cG7chjl/l2rCBHQ2OxRsvk0ykUAlaVIICQVSjFoW7+aSiGhEZZFAqlWjV
      d93hMvEAfW036L49RjQlISOjtTnwuj2UeX043SUUl7nQZ7LkARRKVKKIMmo2ZwAADsJJREFU
      IKohlyKt1VPl8VDmc5AMhZCWjVVMxRt58Q9/H990C5dGlhmHaV00bKygxONDo86SyeQwW914
      Suso92ooLqukoriITEYCFFisVoJzK72j1haFAFgNpR5vscjA5RbmXJtwLXdO0doxCAH8syFG
      R8cBLVabgZnJMcJzQWZjMeR0jJ7uIXSVjdQV68nJMgZLGebULW4KpVQal8ZTCjQaNZKUJLfK
      uFwwlWLVTBMNB4lEhWUGsxIz/e0MyyXs2uRDh8SDzLvVag2KeJzp2DzBqSCCwYiweEqhrvf5
      oCuELCgADVrNsrFfMsjwVIR4zE82I3yqMcESsWgYi9n0i5/YI6AQACvRO6gqtVNSW4/bXMye
      PRuxOr24bTosLjdOWy3PfbWJmz//IT1pFxUeB5ue+Cpbpeu8+VE3Dl8lRr2VTQ0ljDafZNq4
      gWqXBkGjQ28ppbG2FK1w1zrA7i5Fmc0SSy09afWUVldiVoNKW8K2TUZ+/vp/MuN+gt0VS/pj
      kbIN27CFWrkwkKHBV46kMVJWXoZBo8Tg8OCx6VHpbHi9RSwJSIzOcraVpOiaMXPs8Uba3/k+
      rfFyjh5oZCnvxdbQhLr9Tf7xH/+b/L6vctC7rJHnVMwPnOR7791kc9NhPG43Pl8xWiXYPFU4
      jCpEa8mCuW8uRN+olp0bl6XQrkHWvRTii/IGvR/+zlO8cyPC/qeepd5tWCZuyzJ94zzd6nqe
      2PRQkh4+H8k5Pvj+j4jvPcZXtpTfR5yXJ3y7lYt+K0/tq+WLL2z1xVEIgIcUAKnoLOGMmiK7
      GXGFDFjOxomkRazGR5sf+5nkJaKhCHm9CYtOfZ8AkMnE42RFLQb12l5oLATAQwqAAmuTwhyg
      wLpm3fcABdY3a3uA9v+MouCRuO4pDIEKrGsKAVBgXbOuh0Crkhjl+DvNhKQ8IODZsId9O4vo
      +N9zpMq2sG9XJdrsPL3XWuhMeXnxyEKRDykZ49qZt+kPAgoBc1k9h/duxqq7zy1OBLh0oZfi
      x3ZTaVxRrEPOE5geIaUoQphrp7ltFLFkK88e2vRLOSrkM/Pc6h3CUlmDZ6Uh7yKp6V5Ottwg
      klzQSNjqD/Nru8of8Jdk4v5J/FkRb4nrcxjp/v9T6AFWkpyivW2Ssh2HOLBvKxNX3uFy3wCd
      Z8/T3HoZfyxPKjpL68fHeb91+M7HpHSczt5b2Cu3cfCxRqRb5/ioY+puzeFojLSUR2ZR4x8O
      E4nGkZJhOi7dYDyeIp1MkJHyd2QNUjpC97UucsoZzrdM4tu2gfi141wav1N0ASmTIhGPE41G
      mE+kyct5UvMx4vE4kWiUZCrFfDTCfOpu3kI6NMG5M2e4HYiTz2VJxKJEovOL57eAaC1l12MH
      OLB3E8JcFO0yF+lsOsH8/DzRaIREKouczxKPxYnHo0SicdLpBNFIlGQmj0aX52ZbD6H4/Q27
      HgWFHmAVBLUBt9dHhS7BgEVFOJZEo7dgNamYmg6jYZIcRZ80xxW1OD1l+HwqZota6IwmGG49
      yakrA6RkJd7Gozy930f7+z/hxlQQ/6TE87/3NQCiE528e2aW+oNPsqlkQT8cH/yYAfVWDrgq
      Kf+9ckZ7z3Elo6XhzkM7x9C1d3n3zARas5KM2s2xrzRx5bV/YM6zE2mqB7FiO6ZAN+PWJ/mz
      bxzECISn+hjsv4XUP015+Br/e66HjEJBaeOXOHaoEaMIgtZMSamBsbY+qNlBk++uZ9HNE9/m
      J31KinVZ8uZ6vnLEzhv/dBr7DhtT7QF8u6sJ9/Sg2vMSf/zMRuo1Z2gZbOSFLWtPFlHoAVZh
      fvYWP339m7z62rfpTrhoqHQiqHW4zXr8/hlmJ4dReSoxrnx8hEd570f/yauvvc6ZcS2bfBba
      mt/j9myS7PwMly9cYDIMvs072VxbhkYaZyoEMEPLz5sxb36cjSXmu+a4gwPYy0ruSAkUghF3
      sYqR8eCyH5URHRt56esvU6+O0j8RIIuGip1f4uUn6gim7Pz6S0+jHR9jbvET9tIGKms3sKPO
      zs3eW5Q2fZXffeEQob6LTEfuJt3ks2mGRsbw1WxAq1rWVGQl9uo9/Nbv/DaO1E0Gp2IoRAWN
      h17my1tzhLS7ePG5HfinZgABT6mN28MzX+Rf9IVR6AFWwWCv5MkXv06tUYFKo0OvnaQVkdKy
      Irr7b5IJRKncWkVf74oPmko4fPRrbPdZEUQNWpXMhM7Ogf2/yb4qDbGEArc4xLe/f4KKpx/D
      a9UvmuPa2LS1mOmBARJ1uzAvFpSWJAlBEEBKEAhLlNTv5WCgk293jfLM9uJFBzslWoMBtahC
      LaqQZBlBVGM0GjAqDWgMZnR6FRpWMceVQZJBI6oQRC0qRY58/m4aYyY5ypTfwv5nbNwz5VAs
      mO+KKhFRLSDnZQSVHpPJhFqvwmC1YtCId5aZBUFAktZmblghAFZBIYgYzVasKzKZ9MVl2C+e
      YEB5hH22JJ9oUkv1AawLpoNyTqKmuoaz7edIDENeu4FnDtpRyVligTkSCtAmkoCa0i2Pkb50
      gc7BKprqHCgU4K6q4fLoOJJXScsHLWAxkvLneexAzV37RlJM97dz8r0pZhIiB4vtd570n4Yg
      qtEr49yeiLHbV8pH1z4kpE2iKt6C03I350DyDxM0VVCkXTF7zcQZ7rvI+4lOZnMl7Cw2c/lT
      fy3HxPgcVRU773NWj4Z1vRO8KtkIQyNRnBXeZUOcJFO3ZzGUl5CbGSGsduM1pBgOy9SULoxr
      89k0k1MTmBxeLEtlkWSZbDLM+Ngk8Zwad7mPIgNMDvQTyumxG3LIWgdyLIqhtBhlZI6UaMZl
      NSxUiImNc+qDdnY8fwxjZJSRqQgYHNRWelArFYBE/4U3Od6q5dDBBmxON2VuE4GRUTTFFVhy
      AUbjOnwOBROjcZzVnoXAyaXxT4wSUTmptCuZHBsnKom4y3zYTeo742IpNsNE0ki5y3CP+K3z
      J//MiXgVR3dX4XR4KbHJjI2EKfKVowwNEhLLcIsRhqMCNc4cJ45fZcPjR6mwrb2StIUAWMvI
      OcYGu0iqfNT6rKsoMHNM9JzhymgRTz+xnfuVI/uiGGp+mw6hgaeb6vjsJi0THR9kKCnQUF2B
      uAZnnIUAKLCuWYMxWaDAw2NdT4JlWb5n1aPA+mNdBwBANvvLmU0V+NWmMAQqsK4pBECBdU0h
      AAqsa9b9HOATzF3lb/76h8geDwYVqIt8PP3c89S7H3ATJ9jH/7QEOPb8fn5xa6g88fGrNPfr
      sWe7aWkbIZmIEEh4+MZffoNG26cVs7s/gfYPOTFo4Nde2HenON5y5HyG4euneb+5g1jewK4n
      X+DQlhLEB5Yw5+k7/z5p32Eay4xr/glbCIBVMLsaOPbHf8DGRSlELjjA6QsS+5o2kh64SEe2
      iu2WEBeudpHUlbB7z07MkW6a+0Lk43Noy3ZyoE6Py2EmPt1Hd/8EwUAYiqpo2r0Z/O00XxnG
      7LQiW2rZv927UIkyFaD5kp/6Z5/FZ9jM7icl+q98QG+mghrTkvghQcfZM8zldcyF02w/+iTW
      4A3ag0pyU0OkPZvxJW/RFy+i6eAu3CYNMEdbyyWuJ6poCjUyO3CJtqEozvq9HNxcttBI83kU
      5nKe+/pBUp1vc/H2GKnGkkVT4DzTPRe40DVORmFh3zOH4XYPfinD1NAMzvo68qMDhAzl7N+z
      BZfXy9VbXfhce7Go12ASwDLWeoA+EqL+Ht589RVeeeUVvvW9txiVlPgvX2V0PkrvpTYiiShn
      zp4nYynFGO/n4/NdBIa7aOmcorTOxc2P3qN/ZJrL1/sJBkc409KLvbycQPd5usf7+eidD5E9
      dYjT17naO83SOlTSP8KkaMejXRTDpWfovRVl46Y6NHeySZK0N59jNGOmyhri/XcvMzzSyZmP
      e7GV2Og+8WMGVB7yY51cH14ypjVS5nVitzrQhq7zTkuAysZShj98i+vTC8vACpWWiroGdKMf
      8tYVP06vG41iaY80Qzpnom5LI8bgVc73zTLVd4lTrSHKigU+fvsE6SI3wb4r9E1HsFhsxObn
      iMRSD+sv+9wUeoBVWNkDQJ7M5tP0XOkmLHl53Jnj5KmbzM+mMWiUmKpAzimxFZVTsamR4dOX
      SC9bXdU7SthQWUn8dg/J8DDTETtf2tpIuWWA8513j4tFw+gNRSgVCwEwP3CFUPFeqoruNaLS
      W2z4Nu+g3qqmrbWbmANEby076l10nRqjbk8t0cleZlJLdQrUmC16tFE9Sf9tspW72d5QS679
      NLcnIuxy39X6u3Y8zx9YLvGjs+eZrfVQalUDMonwBL0TUWZmQ+jSEpCjpLqRjVUhzg1JbK/2
      kR66RSorodBqMWQkopkM8OirwX8WhR7gF0KJq66eiebz5Es9OHVa9NZy9jz3m7xwdDtlFiOC
      8AveSo0VnTJEMBhhYnLqnre0Wh3JdGbRriXFUO8EZRvKWSnxSSWSzAaDxCeniOksaB/AUM5g
      tSFNjhOc9zPpB5t1YV4hp+dpb73EcCCBQlAhqpTLXDNmuX62C0vDLmocpvvbyWSzJJQKdMJa
      NkVcoNADrETQo2GGn732CioloC6i6enn2FW+keoNA9iqytHbLRzZt4n33nuDG4Zyjjy1EUPA
      itNmQEDA7HCi0+lxOSxotTocRQKCoMJotSEbq3jiaT/v/vi7WI1JFHblnae7yVOO6Wo3ISmP
      S4gznyqn0rOKwi0fp+fjt+jPy+z9jZcpnT2FS9KDUo3NZUejENBbbZiXqeP05ZWIXaNEzEc5
      4j7OG9/qwlX/FE9WLMqf1VpKzAo++PG/EcTOvieP4bqT8eakpt7I2dPn2FJRjZhLo7M6sBnF
      hUr1NguCSsRktaHRqIhFAmiMRmymzz9pf1isazHco7FGTHLr8mUGg1H8IyMU7X+RZ7cUL3bF
      Ofw3PqJT3M6RRuendM9Bfvj3r+H58p9ypG5tWo/fbj1JULeNHQ2uNf+ELQTAQw+ALDNDQwTi
      GZRaKxWVpeiEZSN8KcZMSInTafiUAMgyNTyKxunDblibzSsWnEZhKsa4xleAAP4PyXztBD+P
      6a0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='184' name='AcrossScen VMTSpeed' width='192'>
      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
      /D+Wy8kiZBUqZwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='AcrossScen VMTSpeed Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AcrossScen VMTSpeed Share Chart' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
