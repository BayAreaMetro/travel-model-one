<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Effective Hours' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='8.0'>
        <calculation class='tableau' formula='8.0' />
      </column>
      <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
        <calculation class='tableau' formula='1454' />
      </column>
      <column caption='Occupancy' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
        <calculation class='tableau' formula='1.5' />
      </column>
    </datasource>
    <datasource caption='avgload5period Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\avgload5period.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>a</remote-name>
            <remote-type>4</remote-type>
            <local-name>[a]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>a</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12113</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>20443.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>b</remote-name>
            <remote-type>4</remote-type>
            <local-name>[b]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>b</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12115</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>20443.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>385</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>12.800000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>4</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>lanes</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>8.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gl</remote-name>
            <remote-type>4</remote-type>
            <local-name>[gl]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>gl</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>10.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>use</remote-name>
            <remote-type>130</remote-type>
            <local-name>[use]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>use</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;   ?&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;4.0&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ft]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ft</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>10.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>at</remote-name>
            <remote-type>4</remote-type>
            <local-name>[at]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>at</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>7.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cap</remote-name>
            <remote-type>4</remote-type>
            <local-name>[cap]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cap</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>22</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2000.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ffs</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ffs]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ffs</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>10.0</statistic>
              <statistic aggregation='Max' datatype='real'>100.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fft]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>fft</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>554</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>19.370000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cspd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cspd]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cspd</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5621</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>65.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vol_tot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vol_tot]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vol_tot</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>242544</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>49725.989999999998</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctim</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctim]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ctim</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1338</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>30.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vc]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vc</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10854</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.9641</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeperiod</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeperiod]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeperiod</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AM&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;PM&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010 Base (v0.4)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040 Holy Moly!&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]&quot;' value='Growth in Roadway Lane Miles from Year 2010' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' value='Share of Vehicle-miles Traveled' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]&quot;' value='Share of VMT' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;' value='Share of VMT for Link Type' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;' value='Share of Roadway Lane Miles' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_6350905173822671:qk:3]&quot;' value='Share of Total Roadway Seat Miles along County' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' value='Vehicle Miles Traveled per Hour' />
        </aliases>
      </column>
      <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Delay' datatype='real' name='[Calculation_2320829171401165]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([ctim]-[fft])*[vol_tot]/60' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Scenario Position' datatype='real' name='[Calculation_3680912112348791]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [src]&#13;&#10;WHEN &apos;2010_04_ZZZ&apos; THEN 1.5     &#13;&#10;WHEN &apos;2040_03_116&apos; THEN 2.0&#13;&#10;WHEN &apos;2040_03_127&apos; THEN 2.5&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
      </column>
      <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
      </column>
      <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
      </column>
      <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
      </column>
      <column caption='Congestion (volume over capacity)' datatype='string' name='[Calculation_5010829191108792]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [vc] &lt;= 0.00001 THEN&#13;&#10;  &apos;0 (dummy)&apos;&#13;&#10;ELSEIF [vc] &lt;= 0.75 THEN&#13;&#10;  &apos;Light&#13;&#10;(v/c &lt; 0.75)&apos;&#13;&#10;ELSEIF [vc] &lt;= 1.0 THEN&#13;&#10;  &apos;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Heavy&#13;&#10;(v/c &gt; 1.00)&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='VHT' datatype='real' name='[Calculation_5810829165448827]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ctim]*[vol_tot]/60' scope-isolation='false' />
      </column>
      <column caption='Roadway Seat Miles' datatype='real' name='[Calculation_6350905173822671]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[distance]*[lanes]*[cap]*[Parameters].[Parameter 1]*[Parameters].[Parameter 3]' scope-isolation='false' />
      </column>
      <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='vcRatioTimes100' datatype='integer' name='[Calculation_6530829180003764]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT([vc]*100)' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Time Period Duration' datatype='integer' name='[Calculation_7220911171450081]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [timeperiod]=&apos;EA&apos; THEN&#13;&#10;  3&#13;&#10;ELSEIF [timeperiod]=&apos;AM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;MD&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [timeperiod]=&apos;PM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;EV&apos; THEN&#13;&#10;  8&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
        </aliases>
      </column>
      <column caption='VMT (Congestion non-dummy)' datatype='real' name='[Calculation_7680829191605709]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [Calculation_5010829191108792]==&apos;0 (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='VMT Per Hour (Daily)' datatype='real' name='[Calculation_7880911172232239]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_4420828151331817])/24' scope-isolation='false' />
      </column>
      <column caption='Vehicle Seconds of Delay per Mile' datatype='real' name='[Calculation_8200829171900729]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Calculation_2320829171401165]*60*60)/Sum([Calculation_4420828151331817])' scope-isolation='false' />
      </column>
      <column caption='Lanes' datatype='string' name='[Calculation_9060829180125573]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [lanes]==2 THEN&#13;&#10; &apos;2&apos;&#13;&#10;ELSEIF [lanes]==3 THEN&#13;&#10; &apos;3&apos;&#13;&#10;ELSE&#13;&#10; &apos;4 or more&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Facility Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_7550828155717668]'>
          <bin value='&quot;Collectors&quot;'>
            <value>&quot;Collectors&quot;</value>
            <value>&quot;Expressways&quot;</value>
            <value>&quot;Major Arterials&quot;</value>
            <value>&quot;Other&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
          <bin value='&quot;1.0 to 7.5 mph&quot;'>
            <value>&quot;1.0 to 7.5 mph&quot;</value>
            <value>&quot;7.5 to 15 mph&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='San Francisco' />
          <alias key='2.0' value='San Mateo' />
          <alias key='3.0' value='Santa Clara' />
          <alias key='4.0' value='Alameda' />
          <alias key='5.0' value='Contra Costa' />
          <alias key='6.0' value='Solano' />
          <alias key='7.0' value='Napa' />
          <alias key='8.0' value='Sonoma' />
          <alias key='9.0' value='Marin' />
        </aliases>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
          <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
          <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
        </aliases>
      </column>
      <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
          <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
          <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
          <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
          <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
        </aliases>
      </column>
      <column-instance column='[Calculation_6500829184447940]' derivation='None' name='[none:Calculation_6500829184447940:nk]' pivot='key' type='nominal' />
      <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcto:sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_6350905173822671]' derivation='Sum' name='[pcto:sum:Calculation_6350905173822671:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Scenario,Speed Bin,Time Period)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:src:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_6500829184447940:nk]' />
          <groupfilter function='level-members' level='[none:timeperiod:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.396226' group-percentage='0.125416' measure-ordering='alphabetic' measure-percentage='0.354051' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:gl:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>4.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>9.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>6.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>1.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>8.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>7.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>3.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>5.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Effective Hours' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='8.0'>
          <calculation class='tableau' formula='8.0' />
        </column>
        <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
          <calculation class='tableau' formula='1454' />
        </column>
        <column caption='Occupancy' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
          <calculation class='tableau' formula='1.5' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across DailyVMT' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily VMT</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT Per Hour (Daily)' datatype='real' name='[Calculation_7880911172232239]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_4420828151331817])/24' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7880911172232239]' derivation='User' name='[usr:Calculation_7880911172232239:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='34' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_7880911172232239:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='Across FwySpeed' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]'>
            <groupfilter function='member' level='[none:Calculation_7550828155717668:nk]' member='&quot;Freeways&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across FwySpeed Chart' tab-color='#eaeed3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Freeway Speed</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]'>
            <groupfilter function='member' level='[none:Calculation_7550828155717668:nk]' member='&quot;Freeways&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk] / ([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Across Miles Chart' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Growth in Roadway Lane Miles from Base Scenario</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:8]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Pane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC'>
            <dictionary>
              <bucket>4.0</bucket>
              <bucket>5.0</bucket>
              <bucket>9.0</bucket>
              <bucket>7.0</bucket>
              <bucket>1.0</bucket>
              <bucket>2.0</bucket>
              <bucket>3.0</bucket>
              <bucket>6.0</bucket>
              <bucket>8.0</bucket>
              <bucket>10.0</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='Growth in Roadway Lane Miles Relative to Base Scenario' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4890829192148691:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4890829192148691:qk] + [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8])</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across Miles Table' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC'>
            <dictionary>
              <bucket>4.0</bucket>
              <bucket>5.0</bucket>
              <bucket>9.0</bucket>
              <bucket>7.0</bucket>
              <bucket>1.0</bucket>
              <bucket>2.0</bucket>
              <bucket>3.0</bucket>
              <bucket>6.0</bucket>
              <bucket>8.0</bucket>
              <bucket>10.0</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]' value='p0.0%' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Across RoadSpeed' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across RoadSpeed Chart' tab-color='#eaeed3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Speed on All Roadways</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across VMT' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='122' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='38' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across VMT Share chart' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Share of Vehicle Miles Traveled by Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across VMT chart' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hourly Vehicle Miles Traveled</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' field-type='quantitative' max='14000000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across VMTSpeed' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation1:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation1:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='Across VMTSpeed Chart' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Vehicle Miles Traveled by Speed Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across VMTSpeed Share Chart' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Share of Vehicle Miles Traveled by Speed Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Delay modelese'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Delay' datatype='real' name='[Calculation_2320829171401165]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([ctim]-[fft])*[vol_tot]/60' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column caption='Vehicle Seconds of Delay per Mile' datatype='real' name='[Calculation_8200829171900729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_2320829171401165]*60*60)/Sum([Calculation_4420828151331817])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2320829171401165]' derivation='Sum' name='[sum:Calculation_2320829171401165:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_8200829171900729]' derivation='User' name='[usr:Calculation_8200829171900729:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_2320829171401165:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_8200829171900729:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_8200829171900729:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='RoadLaneMi by County'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcto:sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC' />
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='RoadSeatMi by County'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Seat Miles' datatype='real' name='[Calculation_6350905173822671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]*[cap]*[Parameters].[Parameter 1]*[Parameters].[Parameter 3]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6350905173822671]' derivation='Sum' name='[pcto:sum:Calculation_6350905173822671:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_6350905173822671]' derivation='Sum' name='[sum:Calculation_6350905173822671:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_6350905173822671:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_6350905173822671:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_6350905173822671:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_6350905173822671:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC' />
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_6350905173822671:qk:3]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='VHT modelese'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='VHT' datatype='real' name='[Calculation_5810829165448827]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ctim]*[vol_tot]/60' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5810829165448827]' derivation='Sum' name='[sum:Calculation_5810829165448827:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_5810829165448827:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_5810829165448827:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Road&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='136' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='VMT by Congestion'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Congestion (volume over capacity)' datatype='string' name='[Calculation_5010829191108792]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [vc] &lt;= 0.00001 THEN&#13;&#10;  &apos;0 (dummy)&apos;&#13;&#10;ELSEIF [vc] &lt;= 0.75 THEN&#13;&#10;  &apos;Light&#13;&#10;(v/c &lt; 0.75)&apos;&#13;&#10;ELSEIF [vc] &lt;= 1.0 THEN&#13;&#10;  &apos;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Heavy&#13;&#10;(v/c &gt; 1.00)&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT (Congestion non-dummy)' datatype='real' name='[Calculation_7680829191605709]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_5010829191108792]==&apos;0 (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_5010829191108792]' derivation='None' name='[none:Calculation_5010829191108792:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7680829191605709]' derivation='Sum' name='[pcto:sum:Calculation_7680829191605709:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;0 (dummy)&quot;</bucket>
              <bucket>&quot;Light&#13;&#10;(v/c &lt; 0.75)&quot;</bucket>
              <bucket>&quot;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&quot;</bucket>
              <bucket>&quot;Heavy&#13;&#10;(v/c &gt; 1.00)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='VMT by speed'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_6500829184447940]' derivation='None' name='[none:Calculation_6500829184447940:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation1:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation1:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_6500829184447940:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='VMT modelese'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]' value='p0.0%' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='22' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='80' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='144' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Hourly VMT' tab-color='#f2e6e6'>
      <layout-options export-orientation='landscape' export-scale-mode-auto='false'>
      </layout-options>
      <style>
      </style>
      <size maxheight='850' maxwidth='1100' minheight='850' minwidth='1100' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='10' type='layout-basic' w='99636' x='0' y='0'>
              <zone h='75000' id='5' param='horz' type='layout-flow' w='99636' x='0' y='0'>
                <zone h='75000' id='3' type='layout-basic' w='99636' x='0' y='0'>
                  <zone h='75000' id='1' name='Across VMT chart' show-title='true' w='99636' x='0' y='0'>
                  </zone>
                </zone>
              </zone>
              <zone h='25000' id='8' name='Across VMT' w='80108' x='0' y='75000'>
              </zone>
              <zone h='25000' id='9' name='Across DailyVMT' show-title='true' w='19528' x='80108' y='75000'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='8824' id='13' name='Across VMT chart' pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' w='12727' x='84455' y='20235'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Miles Dashboard' tab-color='#fff6be'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='99600' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
                <zone h='78375' id='1' name='Across Miles Chart' show-title='true' w='99600' x='0' y='0'>
                </zone>
                <zone h='21625' id='7' name='Across Miles Table' w='99600' x='0' y='78375'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='9625' id='10' name='Across Miles Chart' pane-specification-id='1' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' w='14200' x='35400' y='17000'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Delay modelese'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='VMT by Congestion'>
      <cards>
        <edge name='left'>
          <strip size='195'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='RoadLaneMi by County'>
      <cards>
        <edge name='left'>
          <strip size='185'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Facility Type (group)]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='RoadSeatMi by County'>
      <cards>
        <edge name='left'>
          <strip size='185'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Facility Type (group)]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across Miles Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across Miles Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Miles Dashboard'>
      <zones>
        <zone name='Across Miles Chart'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
              <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Across Miles Chart' pane-specification-id='1' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='VMT modelese'>
      <cards>
        <edge name='left'>
          <strip size='202'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:ft:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          <field>[textscan.41879.461103888891].[none:Calculation_4320828142204452:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='VHT modelese'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across VMT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across VMT chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across DailyVMT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Hourly VMT'>
      <zones>
        <zone name='Across VMT chart'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[none:src:nk]</field>
              <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Across VMT chart' pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across VMT Share chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across FwySpeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across FwySpeed Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across RoadSpeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:timeperiod:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across RoadSpeed Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 2)].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='VMT by speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across VMTSpeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across VMTSpeed Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across VMTSpeed Share Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_3680912112348791:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_3680912112348791:qk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Delay modelese' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VMT by Congestion' width='192'>
      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
      X4L/D64pceVyBY9AAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='RoadLaneMi by County' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='RoadSeatMi by County' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='Across Miles Table' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Across Miles Chart' width='192'>
      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
      I+yEPQvAH0MjdI285Y+rAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Miles Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VMT modelese' width='192'>
      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
      OSNst/3/H98Mtcp70vIIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='VHT modelese' width='192'>
      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
    </thumbnail>
    <thumbnail height='182' name='Across VMT' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Across VMT chart' width='192'>
      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
      M6MejxwJOAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='98' name='Across DailyVMT' width='164'>
      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
      5Cnj124L8v+djGtd6tN97AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hourly VMT' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3daZAc533f8W93T8/03LOzc+yNXWCxuAgSAEUKpEiTOkxalijash3FiSpv
      UvGbvEhV8iJv/D5VeeNSpeJK2ZWk7DhVNm1HlhPJNkVRonhIJEGc5AKLve/due++u/MCIIQl
      bmIXS2Kez6vd3ul+nmd6ftv972sk3/d9BKFLybvdAUHYTSIAQle7GgCf8+fP4Rk1zl9evOWL
      33r7rS2/r81fpljXufjRR7hXd6TOvfdzKm0H37W4ND179ZUeb7/1zpZ5fc9mbn6ZlcU5ms0a
      05dneOfU2Rsb9Sz+4e+/zyuvvMK5S/N3GI7J22++v2VKaXmKC9Nrd5hP6FbSlRrA57//8R8R
      iydwEiMEOwVC6UHCkstQRmO52KTckZDdFoOZXrK9MbT8QTJyhZ+ense3TVIhl5WyTlRusV73
      ePz4Y2xWW9DcJJQdpr6xxmA2xtx6nW++/FuoZpHv/Y8fkA+2GT9+EgmVYr1O1GtTt4OkQg7J
      oYM8+egB0Kv89eunef6Rfr7/kzM8/cQRPjh7ifHRATK9SapNi4W5afYdOcLS1ArJiEXJCHBo
      T5p3f/kuB55+medO7Nvt91r4DLq2CxRO5vjdl17AaVeoWSqF9WXWluY4c+YcxVKZLz33FSTP
      ZU9/nL997SxD2TjR3mFaS+cZO/Qov3j7TeaXVrBcia9++Wk2S23a1TXWyy0Gsr24rs27b73F
      3MISummzubTAYD5BMN1PtdagWW/hGC3efOttFlZWSSUTfDR5cUtnzU6T/Y99kaWLZzn97nuk
      +3P88Cfvo3Q2OX3+Iyr1Jq7d5s033mJpcZUPL11maGgA6YG/rcLnxbUtQKFQJJtOUGyY+Ead
      QCSN7LSp1NvE4zGSPRlatRLryzMUzShffuoxAJr1OpFEkk6txHqlTa4nQigcRTdsPN9Fsg0s
      KUQAl3AowFqxzr59Y3TqVeRgCAlotZqowTC2bRHAoaa7xIPgq1FyvSnwHEq1FnFNQfcCyHab
      cq1Jrn8I3zGJRjTm5+boyQ9h6y1U2aPadhjMJllcXiM/OEIyFt7dd1r4TJLEYVChm4mjQEJX
      EwEQbsl1XRzHwfO8m/7t+um3+vmzLrDbHRA+uyrFZd49PctAr4ruR0gkE8hmnfzYI3z4/s8h
      GCauaaiRKK7nIVsGWiLF8tomX3v+md3u/l0RWwDhlrJ9/QwP9lNZm6fW8dGNJhfOnaPRNpCV
      AIfHhzl74SIrm1U8u8Hm2iofXppDkj8/HytRBAtd7VNF1bKs7e7HrnqYxnOrffbPq51eN58q
      AI7j3NXrfN/Hsiwc1702zb3uZ9/3cV3v6kpzcV0Pz/Nwb7MSPc/Dv25+x3H45CbM93087+43
      bHc7Htd1r7XpOA6+72PbFq77q776vod7te+ed3Vst9jIXj/GK332ri33EyO66w/1zee/Oc91
      ca+26Xoe3tXxXb+Oru+b67pX1s3Nlu9v7aPrOtfehy0v87y77t/H47kbH3/WXNe59pnyPQ/L
      sra09/E6BB/PdXe2CPasNn/2Z3/ByS89R6PeJKxJrK0VmNg/RjiRQ2qt8uZkAak8TTCWJtx/
      gEygQzQSoGzFeWQ0xcxKCUmv07Y9Dh97krNvv05+eAgtkkLWC5xbrPNbLz7De+9+QDgep91s
      0ZNOUK1bfOnkie0bjO/z2g/+N32PPMs//t0PSCkmv/dv/z0/++H30SJJkokE+VyGRmWNj+Yb
      /M63f5PTv3yLlYU5Tr74OyidTaotg2qhhByO8sQXjvPaP73KQH+W/MgEnfVLLFRtaqtLPPHC
      yzileTqmS6nWJBJLYBktnn3mmW09q3325//IdKlFuVLn6NHH2JxfZPT4IVbmlxhKxZGSeVIR
      leFejXfOLbJaKDGQkNF6Btk30MNmsUSh2iIcS/LFR8f50Wtv0pdOMHroOO3NaebKLhN9EZZK
      BtGgQ7OlEw8ryIkxju7v38aRgFFb5//9+Oc0qjWCyR5qLYffe/4Qb5yeIz80RioRgXaV+Y0y
      I6P7OLInxQdT6zt/FCibH0Qya5w6dZaRif1kkwk+PPUuX3rp9/no/AqaZyNlBqgVi+RGZXTd
      IZ2O47U6bKzUOH1+gYl8nLpusFlqomkaq6uraJE2ezJhXNvAaDc5/d679O57hFRYwfccPH97
      CzHPbtHy46zMTpLRQA/0IAHBUIRHJ4b5v6+fYqRaolYtUSpbGJaN4/rEExGq5Rr1lUusVerE
      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
      MrHToQoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Across VMT Share chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='Across FwySpeed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across FwySpeed Chart' width='192'>
      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
      vToAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='124' name='Across RoadSpeed' width='192'>
      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
      E17dkhKZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Across RoadSpeed Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VMT by speed' width='192'>
      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
      6a0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='184' name='Across VMTSpeed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across VMTSpeed Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across VMTSpeed Share Chart' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
