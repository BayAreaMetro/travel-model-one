<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='ActivityPattern Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' version='8.3'>
      <connection class='dataengine' dbname='M:\Application\Model One\Value Parking Pricing Pilot\Across Scenarios\Across Tableau\ActivityPattern.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>8</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Child too young for school&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;University student&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity_pattern</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity_pattern]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>activity_pattern</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;H&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;N&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imf_choice</remote-name>
            <remote-type>4</remote-type>
            <local-name>[imf_choice]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>imf_choice</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>5.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inmf_choice</remote-name>
            <remote-type>4</remote-type>
            <local-name>[inmf_choice]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>inmf_choice</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>90</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>93.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;$30k to $60k&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;More than $100k&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2310</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>674433.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2015_04_134&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2015_04_136&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk:5]&quot;' value='Pattern Share' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;' value='Share' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
      </column>
      <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;H&quot;' value='Home' />
          <alias key='&quot;M&quot;' value='Mandatory' />
          <alias key='&quot;N&quot;' value='Non-mandatory' />
        </aliases>
      </column>
      <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='real' name='[imf_choice]' role='dimension' type='ordinal'>
      </column>
      <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[inmf_choice]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2010_04_ZZZ\\summary\\ActivityPattern.rdata&quot;' value='Year 2010 (v 0.4)' />
          <alias key='&quot;2040_03_116\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
          <alias key='&quot;2040_03_127\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
        </aliases>
      </column>
      <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
      <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:incQ_label:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Less than $30k&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;$60k to $100k&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;More than $100k&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;$30k to $60k&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;2015_04_136&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;2015_04_134&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;2015_04_135&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:activity_pattern:nk]' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;M&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;H&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;N&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Scenario:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:incQ_label:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Less than $30k&quot;</bucket>
            <bucket>&quot;$30k to $60k&quot;</bucket>
            <bucket>&quot;$60k to $100k&quot;</bucket>
            <bucket>&quot;More than $100k&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across Income' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Activity Pattern Share for Full-Time Workers by Household Income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' value='52' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]' value='85' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk:5]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]' value='144' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]' value='68' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk:5]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names])</cols>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]</column>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Across Rates Chart' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Activity Pattern Rates for Full-Time Workers in Households with Incomes of </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;H&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;M&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' scope='rows' value='Share of Full-Time Workers' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]' value='243' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='24' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color' value='#ffffff' />
                <format attr='font-size' value='16' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='ActivityByPersonType'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActivityPattern.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]' direction='DESC' using='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[sum:freq:qk]'>
            <groupfilter function='member' level='[none:activity_pattern:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='ActivityFullTimeWorkers'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActivityPattern.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]' direction='DESC' using='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[sum:freq:qk]'>
            <groupfilter function='member' level='[none:activity_pattern:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActivityByPersonType'>
      <cards>
        <edge name='left'>
          <strip size='204'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:dir:nk]</field>
          <field>[textscan.41862.719548923611].[none:activity_pattern:nk]</field>
          <field>[textscan.41862.719548923611].[none:type:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActivityFullTimeWorkers'>
      <cards>
        <edge name='left'>
          <strip size='245'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:dir:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]</field>
          <field>[textscan.41862.719548923611].[none:activity_pattern:nk]</field>
          <field>[textscan.41862.719548923611].[none:incQ:ok]</field>
          <field>[textscan.41862.719548923611].[none:type:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='83'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across Rates Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='92'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Calculation_9600929140032390:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ActivityByPersonType' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='ActivityFullTimeWorkers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across Income' width='192'>
      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
      eQfI81Tz/wFBK/gzqhgjVwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across Rates Chart' width='192'>
      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
      LCwE7vD/D7LsdPbw5sol1qIhFoOTJa37fvxo5kV67dW8uvg6L82dp0FJcGXtHZrtrei1Gq4s
      //r0rtVk4srqEJF0nPnt1T19niaTybzb35mMhfGF4pi0aUyOSgy6j3YzIBwOY7G8/w20rw9/
      lbub43sqtJS+efY7e973y5f+NI+VFMcnWz/Dcwc+u6d9X5n9Ma/M/iTPFRVO1qmT3mjBbZQ7
      wEI9ZMSbUDUJgFA1CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1CYBQtZwD
      sOld5satEaKRIDeGhvCs+7h+7RrhSIiNzXAhaxSiYHKeSKMxWkhtLjE0GOTQI49w++JLzK+G
      CGPm0ZN9haxRiILJuQXIZKCvt5OZeQ8AGksNn//cc2i3lvjBixeIFHhGmBCFkHMLkI5HmFiN
      8OlPPc348BCdh/vZDEY48cgpjBMeTAYDGVkjTJSZnANQ5a6nyr0zwfzEiRP3ttoAODmw98dS
      CFFK0gskVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIg
      VC3n0aDTd0bxrq6gWCvZjqcxa6LcvTtL38kz1NY14HbKY9VF+cm5BWjv7sVmsbC9GWHgzAnC
      kRhd3d1EA15mZ2aIy4QYUYZyDsDw1deY9cVoqrNw8+ogNlczrQ3VWA0Kk7NLaAu8RJIQhZDz
      KdDAI08xcO91+29sdzd3cPjozut4/uoSoijkIliomgRAqJoEQKiaBEComgRAqJoEQKiaBECo
      mgRAqJoEQKiaBEComgRAqJoEQKiaBECo2kcKQDAYhEyKyTt3iCZSzM/NkcmkCG/LPABRnnIe
      Dr21vsxPLrzB2SMtGBq6Gbz4Ml5fjDlvLwP9hwtZoxAFk3ML4HA10NboYjucwlHpAFM1J08f
      Rwl7uPKra8RkRpgoQx/pFMhZ4aS1o4nRa4PUt3RgUvS0HTyIRqNBkRlhogzlfAoE0D/QD8Cj
      rqas7c82tuWtICGKSXqBhKpJAISqSQCEqkkAhKpJAISqSQCEqkkAhKpJAISqSQCEqkkAhKpJ
      AISqfaSxQADrs2PcXgnJAhliX/jILcCqZ+s9F8jIFKI6IQrsIwegts72ngtkpApRnRAF9n9T
      HbDuFzBH1AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
