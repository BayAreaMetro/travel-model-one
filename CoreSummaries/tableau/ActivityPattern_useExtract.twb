<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='ActivityPattern Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\ActivityPattern.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>8</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Child too young for school&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;University student&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity_pattern</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity_pattern]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>activity_pattern</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;H&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;N&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imf_choice</remote-name>
            <remote-type>4</remote-type>
            <local-name>[imf_choice]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>imf_choice</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>5.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inmf_choice</remote-name>
            <remote-type>4</remote-type>
            <local-name>[inmf_choice]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>inmf_choice</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>90</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>93.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;$30k to $60k&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;More than $100k&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2125</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>607577.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010 Base (v0.4)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040 Holy Moly!&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk:5]&quot;' value='Activity Pattern Share' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;' value='Share' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;H&quot;' value='Home' />
          <alias key='&quot;M&quot;' value='Mandatory' />
          <alias key='&quot;N&quot;' value='Non-mandatory' />
        </aliases>
      </column>
      <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='real' name='[imf_choice]' role='dimension' type='ordinal'>
      </column>
      <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[inmf_choice]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2010_04_ZZZ\\summary\\ActivityPattern.rdata&quot;' value='Year 2010 (v 0.4)' />
          <alias key='&quot;2040_03_116\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
          <alias key='&quot;2040_03_127\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
        </aliases>
      </column>
      <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
      <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:incQ_label:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Less than $30k&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;$60k to $100k&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;More than $100k&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;$30k to $60k&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:activity_pattern:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;M&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;H&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;N&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across Income' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk:5]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk:5]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names])</cols>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]</column>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Across Rates Chart' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Activity Pattern Rate for Full-time Workers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;H&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;M&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]' value='165' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across RatesByIncome Chart' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk] * [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk])</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='ActivityByPersonType'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]' direction='DESC' using='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[sum:freq:qk]'>
            <groupfilter function='member' level='[none:activity_pattern:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='ActivityFullTimeWorkers'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]' direction='DESC' using='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[sum:freq:qk]'>
            <groupfilter function='member' level='[none:activity_pattern:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActivityByPersonType'>
      <cards>
        <edge name='left'>
          <strip size='204'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:dir:nk]</field>
          <field>[textscan.41862.719548923611].[none:activity_pattern:nk]</field>
          <field>[textscan.41862.719548923611].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActivityFullTimeWorkers'>
      <cards>
        <edge name='left'>
          <strip size='245'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:dir:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]</field>
          <field>[textscan.41862.719548923611].[none:activity_pattern:nk]</field>
          <field>[textscan.41862.719548923611].[none:incQ:ok]</field>
          <field>[textscan.41862.719548923611].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across Rates Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across RatesByIncome Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ActivityByPersonType' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9Z3Rc13m/+0zvfQaDGfReSIAECYKdFJtEkZRIUaItS5bixHHsxI6d/7q+
      N+u/Evv65mY5juPYist1tyzbEmUVimIRi9g7WAASlehlUAYDYAaYGUwv9wNFirIoiRCpinm+
      zTlnzn73Oee367vfLUgmk0lSpJihCD9qA1Kk+ChJCSDFjCYlgBQzmpQAUsxoUgJIMaNJCSDF
      jCYlgBQzmpQAUsxoUgJIMaNJCSDFjCYlgBQzmpQAUsxoUgJIMaNJCSDFjCYlgBQzmpQAUsxo
      UgJIMaNJCSDFjCYlgBQzmpQAUsxoUgJIMaNJCSDFW+jr6/uoTfhQSQkgxVuYaVFyUgJIMaNJ
      CSDFjEb8URuQIsWHwdRoD32jQQAEQjHatEzsRmVKAClmBn1HfsMPz6lYVGUn6OjArV/KP3xl
      Q6oJlGLmoM9bzCNPPMEXNs1jsv0yPZOhVA2QYuYQjwSY9Iwz2TeMQKoBT3tKAClmDu7O4/zp
      N83IxDrW/81m7IHalABSzBws5ffz1a+vQg9AgpE2TaoPkGKmIsCYUY4gtUFGipvp7e0lNzf3
      ozbjrhOPhokmRcikYgTXDyaTqSZQipmBSCJD9JcHBYJUEyjFzCYlgBQzmpQAUsxoUgJIMaNJ
      CSDFjCYlgBQzmtQwaIqPHf6pAC1t3e943mTUU5CbeVfSSgkgxW3g5eqJWrpCVpbfW4kWYLKT
      XUfbyZy7hHm5+mndLRYe4vLpYXKWzscie/v5wWEX3/7PX7zj/1ctq+af//EL75nOSNNRGr1W
      qheUo5eAo+kko+qKt9ibagKluA18tJ0+y6HDu7g6du3IeMthXjlwlMu9k9O+Wyw6RN2xesbC
      d9nMv2Ck+TDbd+6nsddDAnA0n3qbvakaIMVtoqKsTE5r8yDzl8u5XBemtMwAQMzdykvP76Kx
      340wfQ6PPboF9/7vcMSdg8jdRyR/E//8ZDV95/ay6+BlyLUj4hZF/xtkZ9p46t+/+ZZjWo0K
      jVoFgFj8tjndWyNSoFeI6LlaT6FtxY3DiaCTEy9v52CzOyWAFLePLr+URFcjzkIjzaJi5prq
      GQTiQi3V9z1C5Wgn+4+1MeDxIgiEEKdX8+Wtlfzsx1docafTfLmXudu+RpXwLL/odb9jOv0D
      w/zTv/7gLccef/h+nvjMxmlaLMSSV4pNMElT7wiqN466r7zOofEC/te/PJ5qAqW4feSabAwK
      B5fOdCAvyELzxvHgaBenjp+mrd9FKPGGq5lYjMpkxqjXoheJiUT8RJBh1unQ5GRj/bCMlhqZ
      Oy8T54UrOKPXDnknJ1BnZWNRq1I1QIrbRypXo9OE2XXYx+q/M8Ebhbint5HuRAlfqlTS13ma
      JMk3PS6v/1emRZoMMjw+jn28g4F3SedWTSCzUfe+7VakV7I673n+fZeHBZlgMJqYbOhk2GtN
      CSDF7SDFYEtHolWTk1tGbuUUZWl63EYbZq0Uu7WGjMv72X7YTlZ2CQpBEoklG6tWDqIE1qw0
      DOZs7l1dw85dT9NeUMysDAvyUC+7DvayYOMCIm1X6A+Ymb+kGMdNTaDfPvVtMmxp78tqpdGG
      LapCKJRhX/kg61vHEGil6Oc+yGOjz/Pz7/8qtR4gxVv5OKwHaOvs5Rv/cucCuB1SNUCKjx3p
      VjP/51efBMCg136gaaVqgBRv4eNQA3yYpEaBUsxo3rEJ5PV6iUQiH6YtKT4GxGIxxsbGPmoz
      PjTeUQASiQShMFVBzDSEQiFyufyjNuND4x0FoFAoPkw7UnxMGBsbQ61Wf9RmfGikivgUM5rU
      MGiK2yY02cfly/1kzVtOxnU/CJJMDbdw/PQVxiMKCubWMK/Ehqf1OCcuO4jK06levoRCbYyr
      F0/S0DuB2JjPytWLsSqulb/JeARnx0XO1ncxldQwb90GZlmkAASdDZxpElK9dja62Bhn9x6m
      3RtFm1XBPTWz0CvFb5t1vm2S0enVAO6BU/z8W9/iW9/6Ft/61rd56je76Z261ZUedv/qKfbU
      OxmsfYn/efoQNzuhJqJBrjaep7XPAz2H+cFPX6TT/35zcac4OfzLp/jF4Z6PyoBPBDFvD7t+
      9wt2nKhnNHDTibCTM3uP4VTlUmYX03jhNAMDV3htxyVkRXPJTHaz98xVxvsuUXc1QmFVJbL+
      o7x0tJ3r3tAh3yCnjpwmaS1ntsHF7t11TJLA33+eP/zqDxyu7cQPBDrPsL9XREWBkd7Tp6h3
      TdxZniaHp1cDREJu3AkzD37pb6jKVCAQCImHPAz2h9DbLQj8btwhMWnmKCN9PQiLw4TDw/Q4
      okRvus9Y7xlefvZ1ctY+SdaCCh5+MIFZ4Mc56EUgSRAMJJAr5CSiQaJJCca0dDSSOD73GGO+
      MBKlFrNJj0wsRECcwIQbT0SK1aDEO+YkJjdi0goYHfKgMJkRBD14vEEEUhUGkxE1fhwjEwiE
      YsTKCZw9PfTr/AQmRxn3JTFZjQiCHsbcfuIiBRarBUnMx9i4l0QygUBpwWZWzaD24xRtl3vJ
      XLWE4Vf+oqDwjtHplzO3spwywQB1zSdwtYXplOSyft5spKJ2dh/rQ735IT5fDAKBALf3Ej/v
      niIGyIBIeJgJr4mlc+dQEhjn1eOtjHiycfcJWL6wmK6L15Ia6mxFV/wIVXMl9F/qZWIyDEl4
      v1WASJc1/SZQdHKEhtoTeDoVmAvnYR05xI9/18zW730Nycln2d6Szj/+3Yp3vYeroxGn202o
      pY0ReS0/2Onjic/N4+TzryKeVQI9HbiEVgqz5Axc7aXsoW+wPtPJK7tOEEJMICxl7vrNrChN
      RyKM4ri4h9/XKfn7J+Zy4Effxzn783xlFfzsv0+ycNtaxmpP4BarEYQDpFVt4IH0Tv79x3ux
      ly+jekE6wTiEfQMc+fNr1AcLeeyxBXTueYkWr4KY34N9+cMsVrfxu98cRF1WTuHc9Wxenj+D
      BKBi1opVTDiPcPEvT2nTmW2NcenoUab0CTyTYQLGOcySnubAa0fIDjoJT2oJCASoBBCb7Ofi
      gJgVS0puuCfLFRmkGc9y9uBBxswjxGN+QkI7i5bb8Z9vuZFUIp4AsQABAiDE1FTsjnIleF+R
      4QQCRGIxEokYsfD9SS+3ZjX5NhuLVyyhwKi86YyUnOr7uH+JnUBEzoJ1j7LIFqK3p5PWunOc
      bx4kHAkx2l3HucZegjEAGVm5uSgnHLT0X8UxBq7xYXrPX2TKnA/OS/RSxCNP/jWbFtloPXcG
      x1gQoVRF5ZpH2LC4BI0EXHX7OdYDy+69hzRvEwdOXcUTDBOe6OPM/guMAohNzFu/ja1Lc5G8
      r5x/CpGZWbD+fhblm1FrdBhsFjTGUjZsW0+xUYnJbESeZkYDhMa7OX70IoKiVSzJf3OkSarO
      YPmGjZRnaFHZbKRJ9ahuMQgpU8ivlfgAKNFo7rwLO+07SLRWKhcsZ172tQ93eESIQCAgmYRk
      Ismt/SriONsO8ewzRxghj81fqbpx5q3XqzEYZAidYuQyGTKJEplMAMSYmgoRM89my8OrScai
      SHVpKMUAAhSZuRSpD3LuQBhR/jzs9LHnVCdZa9ajm9qHRGdALZUh1OsRRNxEogqEIiEqpQqh
      8NqkjzAiAqYYHncT0UwS0VqpWfsQs00PgEhFfOw8yBSoZSIEqfkRIEE0HEckGOfsgTpk1QvJ
      8DXSJtdglTs5+Go3VduW4j/dQlHpPBLjnRw6cApp0XIWFpmIR+MIRUliCQHxqWEuna0jbdG9
      aDpfITR3CZnSt6doyysicLQH55iJcYGMUq38fTd/AJJR353X4jqzFZMuzNW6Frr6Rwjd8ioR
      6SVr+cZ3v8t3v/slKtRq5KIwwwODTISit/zHW1GTU1xARrCfy12dvP7yy5zrHiP+RuYF8iwW
      zLHQNzBIzrLlzFNF6XXpqVlUQl7xbESOS5w6f44L55owllRiN799nDtj7WN8cW0+zcdPMaTO
      p1SVZKC7iTOvPsvLl4bu5Dl/ahBLDWTmZaKWAvTz6lO7cEitzK+x0rr3GV6q9VC55B6y7GUs
      nBNm969/w4VQIZsW5jHZe5mmLgfn9z/HT370FM+93sp4/zme3X+JpNREYa6G48/9mp19GTzx
      YPmNBZMirY3CXAsyQFq0nDWaVn79zD4EebMpT9Pf0XsJTYxOzxnON97KxUseimuqydC/IdGo
      h+baWlpGguh0KmISK0sW5NJx6gSCwuXkx1o4M6Bi1eo5N9p88bCfq+cP0ThuZEm5jLrOOFVz
      7PQ29JK5tBqtq4kL/WKqF8zB17yfAXkVi2Zr6blwjobeCbTZZSyYV45J8eba0JizkT3n+yhZ
      tBrNSB0XukWsenARupifrqZLNLQ7EeizmFs9n9xkN7vO9lC2dCPFxgkaDpxk2FbDPRlBzl1o
      x1y1CKP7CrWNQ0TkNpatWYRysovzl12ULFlAtl75qRXE7TvDTXJxfwt56xdjep9pxd3tnOyV
      sLgiB5nko6lVU96gKd7C7QsgyJgrhjHt/e+ykgh48SSkGFRy3md38o5JTYSleJ8oMN/hOhWh
      Uvu+a4+7Rao3l2JGkxJAihnNOzaBotEoiUTiw7QlxceAZDJJOPwBh2z7GPGOAkgmk6T6xzOP
      mfbeU02gFDOalABSzGimOQyaJJlIEo/HSSRBKBIhEgqBBIkECEXC95ggSpKIxYkLhEhEt6e9
      a1VyAhAifI/B4mQyQTwWI4EQsViEUPABDS4nrz2DpECISCjkzWQSxKJxBCIxorfZmiQei5EU
      iBDfZt4/ESSTBF2N7HxhP11BDTXrNjJX3Mjvdl0iFI2TiCcQlqznXx4s5MTuP3Ki3Y9YpmD1
      E//M0qxrt0hE/DQd38G+cz1E5HYe/MJfU6nzUX94D69f6kVTsIhNG1eTpRESD7q5cOwo/oxF
      3DMn8459skTf+c53vnOrE/F4/O1twUSEgfoD/OZ3z3HkyBHqBgXkFecicp7j+de6yanM5d0X
      Uvqp/eMP+WWzijWV9tsyMB5yc/LwQVwJM5lm1bteO9FxgB/+5y84NiSgNC8LjeIDmuYIjHLo
      2V+w36lmVn460hvf8yCv/epFhnUl5Jn/Mvqxnwsv/5EzvnRmZ32wsW7uBJ/Ph0ajee8LrxN1
      cuSV02hWfoat1RaGBwYxz1rD/WtXsnR+EYLJGMULqzExypX2MVY9+jW2bVhJ9k2RDr1DtRw4
      4mHdl77MKkUjv6+FIkUfexumePjzj0LrXtqimZRaIpze9wp7TnVjLJhNSZbh7Xv/TovENGuA
      sI+u1gZ8Gav4h3Vm6prG8A72UHd4Lxf6rGSf06MWTZI0zqEyLUjT5R4MJRVka0I01NYxlhTj
      9QRImiER9tHX1kTH4ARKaxEVswtg+Ap1jggaoZexgJKiykoSHft4/VA9lnkGsuyLsGnlCEgS
      nnBw5XIb42EhabmllNkFnD9Sy4jIyNrKMnRqORBnYqiTxr4J1PEpXCEJOaUVFGbo8DsaqW8d
      JCxSkztrLiVmIX1XmxkKJIj6vCRU6cyunIVFdf0RJwm5HTQ0XsUbjDLsjUE6eHsucKbHh1gs
      Ib00k8yyUkRCN/VnWtCWzSZLGqKlsQ1NfhHm/FKEBhnuvmYahwNoI5O4okoKZs0mz6pg4MoZ
      rjpj6HQypoIa5q2eg+H6dxYco/XSZQa9MWRpxSyfn0vMM0hz01XGw0r0GgFSYz7l+Sp66y/R
      PRZFn1VEZXEWSqnoA3PdSEyMMSBVUdB/iTNCNXllc7CohZCIMNTeikeTwWq7gZDjIiP948Rr
      jzBiy6FmfhnXnTkTkSBxgRKZTIREIiE0PELMnE+2spcLJ08QFmZSkmlEFBxHUbiSxROvcTse
      ZLdh/TT7ABI5pjQr8a4THGwMs2DVSgrSNagUEsRSJRqRnysn9nL86jjBiX5O7H+dq0Mees/t
      5LUzvSSFUcYngyQSUUY6z3PsXAcChZKrx17i2JVBRjrPsWfnAYYi4Lj8OjtPtiGQq5FJJKg1
      KmTiN8wNODmzbyeHr/qQJTyc2bubC/0+VCo5UrkWnUaBSAAQx93XyIEdB+kNgqf5ILuO1zPu
      vMqOF3bRNiEi4Wpix/P7GJzy035+PztPd5AQTXFu16ucvep880FHPTQcf419dWPIZTDp8QDg
      vnqcVw6ewBVVoZBOULt3H419I1ytPcjRhlEmh+s4cvgiY1MB2k7u43jrCKOdl9j78iGGYwKc
      V/ax53QLE/11/PmVo4zExYy2nGT3zrPcHJzE1XiEE+0+FLFhDu3cReuYj5bT+zjU4EQsCVK7
      cwdnmvpxNBxk14VhlOIAdYf2c7bX85cut3eVSChEYKiX4YQccdDBmVPnGPHFiIX89A8Nk5ZX
      gk4uQpM2izUb11GaZcTXfICDDS6uD7Kr0srIMwyy49dPc8gRRBsJMjHpJoQCi9mMQS7C5wsQ
      MxUwv9CC5K6pWTxNAYhUlK14hL99eCn+xt389CdP0+jVkGlRo9DbKci3IntbWeOjo6kHWfly
      1i6roTxDjygWYrDtMhcv13Hs8GHaByZxOpwEAJEunwVL51ORY8A/7kVnz8eo0ZCdl4NJKUUA
      BEb7aWgNMve+FaxctpA89Sj1HRGy7UYUehs5mVbkN9dtpkzmVc1nTnk6sQkPzpY62sdtrNy8
      hntXzUM6cpa6XgAZ6XmlzK1eSZ7Bh2dikoDfx8TEJH7XMG29HuzVi1k8v4oC+/VtdgSodNlU
      Lqwi16RGCIj1mcwpTaezsYWB5iZi1hKybZq3PhlzDjXz5zG7wER4wour7QquZAlL1y2jZlY2
      cunNryaJJrOcEkOQ1tZuxoeHGZ3w0dc1hnXWfBYuWkhJphLw0Hy+mc6WSxw+cZ7e/na6Bm65
      ZvWuIZUrkCnSKJozj/mziwl6enF7g4Smhhgb05CdY0AkAKnSTP6sCqrmVTPbmqSzY+jGkkix
      Mo1Fmx7jC088zD3FaQjtBsKOQRKafObX1FBgjNDd0o3v7hT7b2FaTaBENIRrYJBkxgK+8NVs
      fvfvT3O1a4i5AElIioRIxSLi0SjxaJBwFECIRCwgFgoSjkYJR+IkFQKEYhGWsnv44hPrSDp7
      wJxH7MpFBBIpUskbndjrfZDkTePTAgFCkRiJKM6UP0JcHyUcBZlM9M6+4RIpMpGQsFiCCBBL
      ZQiSEwQCUcKhEFFkKKSQRIhEKkEokCKRJAkzSdOhy1zq8WCzZxAUJogEIsQTIiKR629DgEBw
      rYN+ozMsUJA/qwzjqVPs8k5StuZR0uR/YZxUilwkRCS+VgqJpFJIhIhEYoTDURKJm4vtGPW7
      /8TJyEIeXbWQoZHzCAQCRGKIRKLE4xFCoTggRCwWYpi1gW8+MY/xQRdy+wcbiV9oslNlb6C9
      /jI+hlEZ8zBpFYQcvbiV2ZiV1/I91nGaQ1cC5BWn4RoRMWthLoKJYQaiSnSiYY7tPIuirJhI
      5zBzlq0lj3pa+rqovxTD60qQnp+BSgLc5Vht0xJAMh6iv/Ekp/qTWI1J/KZiFuVa0A+aSYy2
      UttsIS3LTkPLEQ6FJPhjAGpKF8zl4p7DvLgrC9+Il0SBnMzSKqxtF9m/cxzfaISFWzNJv0Wa
      IrEanczPlYuXKc9ZQaZOgdySx6IFNg4d2suf9Uk8ogKWV2Qg6by9fKgLalhY8GeOP/9nriTd
      KMrXMi8DLr3tSgPztyxmKUDMR/NRH69cep2dHh2OsTDSgndOQ55RRrV9H68O5VBanIYI77va
      pC2sofDMcxx4cRfp4SEiceNNZ5OojCYSLX1cbJMQD3uZiqkoKs+h9dIx9nizGJ+II0JL6eJq
      Wl+q5bntHQQjau7ZaiNd/QEGuhIZqVqzgvjFZsZjNhYtm4NVIyZkyGPu/HSur/czFdSwIFRH
      59AYutn3s7BMT7SngcsuO2vn5VGzfJLGrnFU5fexuFiDPF7N6piM1r5xdMWLqazIQQ4kJEpK
      5i8lajLeYQf4Gu/oDh2JRN7uCpFMEPK5GXaOEoiC0mAlI92IMDhKT/84Yo0ZoyqKa8RDUqpC
      lIijs9oxyGMM9jrwJ6UoRTFiShv5ZgnjI8OMTYaQatPIzDCTmBhgwCshN9dE0DXMeERFllWF
      Z7gXV0hBVrYNjVyCgCSxgIfBQRf+qACN2Uq6SUfSO8SAV4w908q1pQIJgpOjDE0kyLRbiPlG
      GJ2SkG6zkPANMeicJCqQYrJnkqYS4h4ZJiA1YjMocQ92E1fbsRqvL35PEp3yMDQ0QjAhRioW
      I9GZMSTdDPsl2LPsqMQBBjuGEFtzsGpF+Jy9OANqsvLSkAuijPX3MaVMxyz0MeQXkZdhJOgZ
      xh1WYos1873fHqN83TbyJ0+w/ZSUr37vr8l949GHJofpG/SAXIYoEkVtstB3cjtHxmysrSml
      58gLuAs38/jGMvz9DjzBBEqjFbtFj1R0+43moaEh7PbbG6G7U3w9zXRiZHaOjY9oOcA0BZDi
      gyPmYu9vnuaSMwgiDbPvf5Qt1Rnv3ElLRBhsPsWe/WdwTsXRZlZy34P3U5Ymv6MRnw9TAMlE
      nAQChIKb51I+XFICSPEWPkwBfBz4FE1JpkgxfVICSDGjecdRIKn0FnEpUnzqmWnh0VM1QIoZ
      TUoAKWY0qagQKe6QJPFomGAoQlIgRq6QIxYJiIUCBCNxhBIZCpn02kw510KhB4JxZGrFjY8v
      mUwSj4YIhaMkBGJUKgVCEkRCIcLROEKRBLlCjigZJRAIE0+CWCZHLhXfscv7tAQQnhqhp22Q
      a9GxhagM6WRlWVGK392IRDzExOgEMnM6qhspXpvMGpmSYNOJcTocJAx2bEb1XZnhmy5BTz+9
      rgT27Cx0io/Cgk8mycgE9a/v4WizgwhqqlZtYXWZkP1/ep5md4ikqoDN2zYx26aBZJiRulf5
      nz+O84Uf/z0lb9wjHhrn7J7nOXF1knBUwpov/gPVkm52vXqQbncYkdzM4k2byXOf5aVTHYTC
      UeT2uTz00GpyDYo7mveYVhPIM1zL9l8/x6n6q7Q1nuDZ379AXe8k7zVbEHFc4IUdR3DcHFee
      AN21+3jhaDuJeAS3c5gxX+iDdFx8V0ZbD/K7P+yia3TmLAi/K8SiCNLm8Pkv/yOb52hwtPfi
      D4XQzXmQr3/tCcoFbjpGvUCSqZEOapu6iUTf+pYjQQ89g1Msf/TLbCmc5EzzEI62FiY0VXzl
      G//E+hIxnU1tjCdtbPqbr/PNr2zFPNZL+/i7u5fchvHTbwJJjdksW7eF2cZJ/vTf36ezz0Wl
      upsdfz7McEhC8ZL7uHeRkj0/egGXUolEpyPZfolzAyGClkwM96/Aqo5fcwnee5QrU5d5WvlZ
      igIOorp8Wg/+iuMODerwEKOSAuZZx6hr9ZO3+D7uW1xK1HGO3buPM5ywsHjjZlYWm68ZFuzk
      xWeOkrXx82Q4D7PrbJitX1mL68R+2sUVLM/ysX/3MZwRBYXLNrBhjoUrB57n4nCESEDLnAXX
      bpPwtfPCL08hqtzCvYUBju09QMtoktIl61ldo6fuTy9zPixGKzOyYv16ymzvvkjn045Amcb8
      BWl0H/kNL9WOU7l2FWpTLssUHk7t+Bn1gQy2mDUkQh6amjpRZReR1vzWjS1kqjRK8rQcfu4n
      RJUFbF1vRdh6LTpFPJ4g6nczHoySsWklaTKIjQkQWy1YFHc6WvU+wqMnoiHcY04G+xoY9Gsx
      6CI0HDyDZM56VpQpOXP0FCNuF90NHcRMc9m65SG2rStHb69k1T2LMCsBhJhyS6goySW98n62
      VZtw9nQx6J7CM9BK52CYyppKAm37OBeu4t4aE+ePnmJkrJ+9z75AMHclK7KmePW3O+i67pQp
      tyD1t3Gh7hIN9VeoO3eQc83jNDd0kYh38+JvX8JXsIHH1pfQsfNp9re5Ge1rpDduZ8tjW8iR
      QiIwyIHntnNh0s6SchEX9u2hjUJWL8mhYd+LnG1zMNxxlSGfjfsfWU+BObWR4HWyl36Ov9o0
      l5HmMwyMRxArdSzd+hUeKA5ytLYDV9cFWvqTpFvUxONBvG4/16P7T4230NAhZN1f/SOPz/az
      97gDe9VSymSd/H//8zPqoiYsAgEIIOIf4WJ9O9byBZSn3+nKOtH0a4DIeB+nDr5Kq1rBrPsf
      4Z7ZOYzGiuhsu8ClwR4mIzkkk4BMgcGWSbpGhV8uRigSIBMG6WlswOmLYsgwIRCLESFHIb2p
      zS0QobUXU2gTIRVBWnY+RskgUvEUSX8nre0TxJJniOglFObriYcACSDQUV6eycXTpxnXyCkp
      FnDp/DkMESXLCXEhoGLzogqy9VoKtIe42j7KbBRYLFYMFh3+PvAPD+KWSSiak48m6mdwyEGv
      N4DYq0WXlY9GkmAUUGTnka2Z2SX/dRIBNx3OAJmZ6eh0Boj3EnB10+C1UJFnwKiV4h3wIgiH
      8E05OHLQzcCEl/qTbRRsno8RiPknCWHElKYnfVzH6JV+RiOVFK74DCu3qWk5upPOpBWJv4dz
      5+rxqspYWZWH/C501aYtAHl6Cfc/9rc39gfA08T21/binfvXrFsoovd48Jb/S5IgkYgRDgbw
      T0VQRHQkgcR04tDIDJh0agxLH+A+m5Nz3QrSb1q+ai6dhfDlPzKqu4+/W6jg+y+fQjHnXtJL
      MrDsraWv28mczBGcUwJs6VoY/ou8pRWxcqGVKxf3cbnyM6hUaiyZq3lirYELFxyYDVr6p/vA
      Pu0kwzhbTnPuuJ9oPIm1uAa7PsHrB3ZSfwLCERHLl5RhnWXl6/MF4L7Ij753hZWb5yPsred8
      yEx5eikFxl3s/+MzCIN+lt+7Dt3UMIeOXuRwVIhIaWbBMg1Ne7bz0uUopbMmeLGrgwWb7mF2
      mvaOOsF3PgyqslCam8ZLJ19kr0FGNKjE9ReRxURpWahdL7L39UKeeHA1s9QAAVp7TIT3vsiv
      jFu5rTir0jzu2zCb7ft+yVMCJZWbvsDNrUClqYyiLBlJcxq2qnwytjehzysizYiVDFAAACAA
      SURBVJ7P1s3t/GnHj/iPpBBD5X08Um7gYv1f3F5joGTRA1g8P+HYKQeblyyic9du/qtJiL3y
      PuaqU/vC/CVClZVFK9aQMzZBXCTHZLGiU4rYtFHDiDeMWKHHmmbkhruntpRHv5aNHhBKwrhd
      McT52ax86DOUu/3ERWrsWVbkmFh3vxW3L4JCb8GilzC5+nN8fXHkjYESGWbtnc9YTys8+s2X
      Cq5nKPlOu8K8ed1bk7i+cirJ3QhAJrhpHPgdsyIQ8O6JCZjuwlnBR+W/+wFz++HR75zJvi5c
      ch35aWamsWThrjKtGuCWL10geM8q6NYfi+Cu+4C/60f5nol9Oj/ojzO6nAJ0733ZB0rKFSLF
      jCYlgBQzmndsAiUSiRkVJTjFm8Tj8Y/ahA+NdxRALBZLLYmcgSQSCaLRDyAAz8eUVBMoxYwm
      JYAUM5rUeoAUd0YyyuSwg+7BUWJiNfacPNINMjy9rXS7phAqjOQV5qCXxHH2djDkDiJSpVFS
      lsf1uMPJRAyvq59uxxgxiYGy2YWoRXG8I/10OcYQqMzk5uegiY9xtb0ff0yEPj2HPLtxWjGP
      bsW0wqP7xls4c6oDqcmKWhSj8dhuOqbUWKy6t8VpjwUmaDx9msGkBotBdRd8/D00HDhEpyCD
      LE2YrjYHCbUapWR6d45NuWjoHMVk0N4ihv/NRHF11HOkaZTcDMttx/SfdLbTPSbAov9kOspN
      Nzx6bKKXw8fPMx6I4nY0c3Uwil3j57VXjjMpFTHSeoUhkR1brJ0DBy/iFwoZbKzFY5hFgela
      CPno1DAn9+6maxJGm08zoC6jUOri6IlaRv0RRvs68AiUTDWd4ZIrSmLCQf2VftQ5OaSp3x6N
      djpMqwkUnOjh4tkrjPpiJOJROs4f5UqH85bhGoVSBRlFJWSb7tYCFyUZZRXkm2V4ehvYd/A4
      rsB0A0VGGGg8za4TjYRj79XBj+Ppb+FkXQfR+O2Ohk1ybtfLnOuZnKZdn1yESisLVt7Lhg0b
      WLNkDvh6cTRfoltbyZaNm1hWoqCzZ4DJvnb8lnnct3EjS3ITNLYN3fAGjUejTExFKVqwgrmW
      IH0jfsYcPUwps1l13wYe2LSeqlwrWVX3sHnjejbetxRbbAqnP/Cutt0Od6cJNF7L9777PKKC
      2QT72kgW388/bS3i+IvPEp43n+jJI8SWfY0nykb47S93kLb5n6hJXGTXgVpcU3Fyah7i3uIQ
      L/3pJdxKC7b0CuYVRTl8oJZgUkzm3A088oCdE8/8gsH5T1A0fIDGllGGn0qSa+hHMfdxti3X
      sOO/fkp4yVd44p5sxIBvuIGX/7CdNk8SmaWKbQ/Nof74Yfp6hPzsaShInmfAuoG/esDA0//H
      70l79Kt8ptTHC7/9M1ejKnQCPwFZJbHgGKf37OBY0whBoZ71T/wthVO1/H7HKfQWLQN9Y9gX
      bmaZrpVDlzuZ6t1FjvkRVlRk3PEOJh93hDI16WlqkvEwQxOTmK0l5BWGUV3poL7TSnzEy9DI
      BPISI4LWLto6TfhHvARFHoKABpAotBRk6jn8x/8hZixn2306Jpum8HY18tvLR4kpMli9eSvV
      eTaEyTh+1wTxzAwK9He+0chd6gQniSUlZMzbwJMPzGWqvp5+kiQTCZKiDOZWWhhoqqOxvQen
      MJ+KND/njx7Hqy1kYYWF5mO7uOwIkUhEsS95nK98roboYA8eYQbzK3NJeF14AwmS8TgidRpV
      NcvIySnnc/+4lcWlNly9PYx0NNIZsFAxK/OGqv1jHXSPSSmZMxtjcgy/LJMF1TWYSlbw5c/U
      oEgkiCeSQJJEPE4yGaH3wnEa4qV89RtfZFmRCeLgGzjP4fPD2GfXUCh1sHfXeTzJBPFggtw1
      j/Hk+jycbW3IZ99LTbaZitUPsmYGfPw3SIYYbL5Ei0tExeL5mAsXsW1lGt0Xm/EjxWDSYilZ
      zpJyOe11TYiNVsRKJdcD7/idDdR3ytj6v/6Vv6+e4vmdl/EmvXjFBTz+99/g/sI4DZda8cZg
      ynmVs40jFM6eR7bxzpZDwnQFIBCSSCbenB+QiJEp5IgBsURMWlo6ep0GiUh00zJJEdnzq1EP
      ned4bR/64nLMwgjjngAyuQyFtZKt2zZSqBcAakxGOQKpjrLqlSzNCXPubCvOqQD+qbe7WQuE
      YtLySxB5u7h4qo5YznxKzW9myZC9gDU1mQw2NuLw+hnzvLVp8vYF1RH83iBJYzpWtQqDQY9C
      DNFxJx7EyBQa8pdsYeuKgmteqCoLGUY5coMBVfLuOPd94oj5aT93nEvDCWbVLCNHL4bxDpr9
      uWx+eC1WmZKinHR84334JeU8uGUF0kCAvKIcbt5EKpm49vxEQiHRcBK92Ypa82bjWSAQMOU4
      z6GzDsylcynPN/MeS9Fvi2kJQCZPRyuZZNA1is/Xz4hfhcGgezMjAgECBG/zK5OaKiizTtLS
      G6SkNBOFQkeaSYlIY6VA7+f8+Q4CopsCcYW9dDRcYEA+l8997h5ko32MTobePC8QIkgkCIdi
      6K15ZEhGOHShn+J5FahuSnui5xJXXDJWffZhykRuuoZ8CIQCBPEo0VgStV5FcMqPr3eAEQDk
      mNL0iIY6aRsZZXDYiT8CUmsGRpEMo92KaOAy9a7otTwLuJbfmzIsFEI8EiYci39k65s/TCYd
      zRw5fIBjR/bxzE++xw+e2UtfzITaeZinvv8TTvutLC3PQK7Q4rm6m6d+8HMapDWsLdcy2nKE
      fbVtSM2VzC0IsPMn3+PHx2I8tKWG/KIq5hnG+eNPfsTBXhXzqnQ0HDzMsRNHeOVPv+B7//Yr
      Tg247/gZT6sPoEsvZ9MDHg4efYlfHRGTvWQrq+dnIw76ySkowCgHMSbyiyKoxTIsWTlEdUok
      EhWzl6xmwKKgItOCQi1ixeZHOLT/ONt7JFQ/8DilumG68/OxqCQg11JRs5ThA4c5cCxJ0cqN
      zC9OoyGvELFegt6Wx9z8dk7sOI3ta8vJSbeg0GSwqEz1Fu2ZipazoG8nZ/YfRZq7hs+sLEHl
      nGJO+zFePNHL/TUrydp7hl0N2cwuKSRdpyKn5AE2uF5hz/bdmPUWygvTMGRXsW1DgNcP7yKi
      LeZzWwtRDE+Sm5uJSiJGrraQk6NBKTVSuaCMritnOZ+rZ3F5+qd+nFmXt5Cv/OvCtx3P+fw/
      seotR/LZ9MVvsummIxFjGrqkBrHCyMLNX2Lh5puvV1G94QmqN9x06Mv/m5t/3g0+0dGhk/Eo
      fZf389rRFii+ly9umPPmPmIp3hcfZnTo4JiLSYmCNK2G99gB9wPjk11ACYSoTLksurcIe07O
      be89nOLjgcKc9h7b6n7wfKIFIBCKsORWYPmoDUnxiSVVZKaY0bxjDSASiRAKU/qYaQgEAsTi
      T3TDYFq8qwBSzDxmmgBSRXyKGU1KAClmNDOnrkvxwZAMMdBQy4m6DsIyC3MXL6ciV0v3yR2c
      aJ1AqMtl5b1LyVMnaL94nHPNThTZ1WxYNxfNG8VvMhqkq+4IJxsGiEssrHhoC0WyCRrOneRS
      pxtz8ULuWVKOVgwko4x0XqLZpWJ+dQU62bta9x62R6dXAyRjQRyXD/Hz//o3/uVfvs3/PPMa
      neMhkhOX+eX3/5vTA29eG/U6OfiH37C3vpfuE7/nqd8cxXXjbAxn6zF++usX6R9706U1GRzh
      zI6jn5zwgyEHu372H/zv7/2Mo61jd/XWsXCAA0//JzvOdPN+AraHnK1s/+mvOdo39oG6ZERG
      OjjS5KKgehllxglOvH6UgcFmjh1yUbB8PsqRCxypc+EZruPk2UHyq+cQrXuFI1fffO8h/zCX
      L7diq1yO3X+eV053MdxWR6NLxLyFc/A0vMa5djcAYZ+Lkzuf5Vizg+AdLl2OTQ5PrwYY6zrJ
      sy9fouqzX+JvCuVc2PkCtZdaMVcGGRlwoO3txuSLIjPZyDHombtqHQmthamTowy7DEQTETwj
      w4xMTuFxDDLg8r3plx/x03biFZ496GbbvFKMVh2BMSfj/jAytRGr1YJSmmTS6WDEEyQpUWHL
      tKOTv5GFuA9HjwtFei5meZDB/mHEafkYmMQ5MspUVIDGZCPdrGDKOcBYVEO2TcH48BARZQbp
      qgDDgxMggmA4jtaaRbpewtSYk6HxKURSOQgEWGw2tHIJgngQ15UzvN7kYtnfPM78HA3jQ72M
      TgYRKXRY09PQxN20OdyIRBJkOgt2sxaxEGLBSZzOEXyhJCqjFZtFjzgZYKinH29UgMqUTppa
      yMSIA6eilw5jGLnCTFaWBWkixLhziFFfGInSQHq6BZUUfGODOMemSIjkpGVlIY8GGXO6UIZj
      7/xC7wLS9AqefLwCkknGlT7aXW3EBjrpNhTySHkZjvYzvD45iViiQaVMEg4GScrUaBVv+sqG
      w0N4J+1UzSpHE8zgeNcExg1r+fzsKfpam4gnhUilEogH6Dh3iCFVORnqO7ddrM+engCcjZcI
      WcuZVWBDJodlj36ZZQBjZ4iGg7TXn2bc10qvpJr/64vVHHnu94QWf5ZrniJJAsNN7P/DbibM
      OaiDA0yGzW/ePOxlYMRNKOym92oHqiEfJ4+3oDJrCUwEKFy1lVUZHp5/ZidTGjtCrxt1xX18
      flPVtdnEmJvX//BTWPtNPpvbxe9/vJ95X/tfGJte5mhXGJMWPFMm7t22mqn9T/PiaDXf/lIR
      +577OUNlX+OL5a389oensC6oJNF/CW/uFv56vY3Tz/+ZdkkGNsEEV7ojfPbrf8fibCPEAgwO
      jRIOhxnpa6Uj2UvtkdNgMhH1ekmbt5EHjFf496eOUl59DzVLFpNm1CIWhhm4cpjf7m7ClqHE
      G8lgy+MPoOk7wNO7OzGZxXgSNh7ctg5ifgY7G7k4cZaGPhWf+8aXyHKdYfurF1DYzAQmp8hZ
      /CDrCkLseG4HoyIriqALUfF6Nld9uN27RGwKR28flvz5WLXtJG6qdgKBAIKEAokkSW9bDwKD
      HYMsBjccxhPc7HUTDwQIA/K4l772HmISE4KIj5H2Fuonc1lRPUld592xe1pPSSQWkUwk3pK5
      64hlSmav2MzDa+YQ7+rG+bYrogx3NNMctrPtM1tZVZWL8ubUNXbmleei0+SxZHkBzobLhHOX
      8bnHP8uSfKg7U0/j8T20xsvZ+ldP8vg9WbQcO0qH743/yzJZuX4OY2d3sGNvHeLK+6hQDFDb
      MEzJ8i08/tltZEw1UFvfQ/Ad/E5ESjOVyzawbWUhrp5OOttbqXfKWP+Zbdy7uAT9zQ7+MhNV
      c4rQatOpXlpNoPMcLu08PvvYY6yZY6Cx9gKjk2HEKj3z1m5h9dwcZKJrj1xrL2JZTQVKAvR1
      ttAx0MHFA6cRzn2IJ//qCR5aNQe9XARCBVmzl7H18xuxT/XT1TNAQ+05JmzLefLJR1lZJOP8
      2Tq6zx+iyZ3Fhief5MmN5fSc2kuz69Z5vOvEvDQf28+JjgnSC6uomV+MJjOHnIATl3eKSa8A
      W7oJ70g7g1NprHv4Ycq4yuk2941bSKU29EYvExM+Rkc9mLOtTDZf4ExLgAUbNzMvPURXtwt0
      eaxcW43pbvVc48Hp1QC2ucswNRznYn0rsgI5F/e8zHDacrZWg1AoQq3WokCGSJC8xbZJYtQ6
      HeqQgy7nKBKXC39E+ZYrhEIxQiL4Qgl0Bg3e3j6GnUYGhybR26xk5QQQ1PXQ1TuEvGcEmTmb
      9Bu3EJFRtgrrgW+zvz2fJ/65DLMigEUVwzEwgFOfYCigpMiaQwZqBJ2j9AxpcXt8b1ool6OS
      y1GrlJCMo1Tr0eClZ8CFcNSF79aR30Esx2i2ELnag8NZgGtwDE1aFUrFGCKRCLlc8aazVzyI
      o/UiF/s0rF+yEs/I68SiUqwZOvwD3TgHtZx4vY7cjVtAJEWpVCJVi1AKICFSYLGYCNS343Ba
      GXROYEyvwJwtQXKqhd6uQSIOB0JDATY9XJ3Oy32fTPa3cPzkftomjqCSiVEXLOKxLWtZUXWa
      Z//jhyRMs/jcOjsWhYJZrTt4+j//E0XWfB5dYGW08QCnJ7NYPz+H0nwlr/ziu0xh57FvFpKe
      cND62h6+97ILQ94iNm0pw2KUISTG4IAMhVx8xw50gbGBd14UfysUWit5djntF09y6kIrZNaw
      btUC0qUhnGNhsmZVkSaeZNQnoaSqADxeNNmF2GQh/CI7NSvmk8E4589ewSdNw5ZhY1ZxPhrF
      NR1KFWImx3rpcwioWr0ca7CD42euIMhZwsZ1i8jKLyFLMMzFMxcZIJuHH9tA7k0hy0UkmXC0
      0KUs56HlczEZ9GTaLYy11nKucYTiex5mbU0u6RY9o32tOJxBVKZ07AUVFFsSTPqk5JUWomMS
      Z0RHxZwCRMNXudDYgzeQwBeJUT5/Ppm6N1YihX0MTgooqqyiND8LfXKIUycu4NVXsOn+FWTJ
      A/R7xcyaPYe06/tpCGWYzHrCwy3UNvZhm7uOVQvnUlpRQqD1OKebhjDNuYdV5XZCEyOoMsrJ
      s8lwD/gwl82nZl4R2nAvR45dJmqbz+Z7F5GZXUSOapzLZ87TGbTw4OOPUKKK4J6IYC0pJkNz
      +yunJiYm0Ov1t/tJIDdksmDleu6/bx1r1qxh+bwS9EoJ1uIaVq9dy5ollaRpZIjlOgoqF7Fq
      zWqWVZeilwoRxwNMYCDTasJWOIeVq9eydvVCrHIhIoWBwsqFrFq9mkVVxRgV4jfyIERrLaSi
      LB/VHe7lLlGbphce/ePNFFdee4XX63uwLn6ErSvKbtqR8v0RcTXy7O9ewmXIxxzzMC7N5jOP
      bCDHIP/UxpL+MMOjB8dH8UkUmDXqj8wd+lMkgAjOzk7cCSXpGXYMKumdf6SJMOPDQzjdfpJC
      Cbo0OzaTBvFH9bY+BD5MAXwc+BQJIMXdYKYJIOUKkWJG867RoVOVw8wjmUzOqOjQ77o/wMd9
      TXCKu08ymZxR+wOkmkApZjQpAaSY0aTcoVPcFaLBQc4eqSdjySYKDNeOhd39nLrQSU51DQV6
      Ef2NZzlxoZ24sZyND6zA8sZEViIapLv+MCfqHURl6ax5aDMFMg9XzhznQsc4lpIlrFo2C50Y
      EhEfLRfPM2WuYH5x2h1/wNOrAZIxxtpP85sf/r985//+N57eU89ELEnUfZU9ey7w3jGR/dS/
      /DN+sLPhtpOMR3xcrj1OY/f4e17rc5zhZ//Pv/KdX+9h0BN668lElJ6z2/nlHw8w6Lv5hJ/6
      l3/Or4/23vKejtPP8rPtZ/DetsUzjSRhdxev/eF3vHb+Ku433EWSUT8dF15n35FGxgJRfK5O
      6pqGKLtnExWSqxxvfvN9TrmbOX16kOKVm1iRNsyOw004OhvpnNKxcs1SQm0HON/uhqiXy4f+
      zJ9eOUX/mP8W7jbTZ3oCCk/SfOEEA7ql/N2DMg6e6qCv18rk2T9zuDubzNI0tMIASXU22ZoI
      jv4x1LZMTPIo/V29+JIJhkZGcGsjJGJBxocGcHoCSHVWsjKtMNFP73gMhSCILyLFmp1NtO8E
      e3aeImOZlkybFr1CgoAksSk3ff1D+KNCtBYbGXoBradO0RE3sXn5Qsyaa7uIJyJ+nAMDjPlC
      uJ1jeLwyYj4XzX0jCEQSZFoDtqrVrJRqcPV3EpCnkWlS4XF0MiW3YihazBq7GtGUh+5hFwJB
      Et9UDK0lkwyrjqjHQffgBBKZnFgMLHkFpCmvr6eOM9bXztBEBGR68vIzUBLGNdjPqC+ORi0n
      gpKs7DTi4w56hr2I1UYyMmxob0z9f9wJM9TvIW/NMoafufTGsSRuRwPdgwms2dc8fr2jvXgT
      aYgjbiSlG9hQYLpxh+jkGAGhlaxcO2lBPe5Dg8i23s8jpT66mhoIJWUoFVIY62HMUMPC0kPc
      LSfvaW2QQSLG+EA7zR1DSNIquPe+FdiE4zTW19IxJiTLIOTi8R1ciZQyW+Pg+d++Qthegnzw
      KM+9Wk9QFMXZ1cOEsYx52mEOvn4Bl99H88XzhHT5CLt28+sXL4A8xuUTx+iMWrFGO7jUPAja
      TEqKMq/54ofd1B3eyZ7zg0R9A9Rf7kZqUuFsukLneBxbfjG56UakwigjbWd4YedJJiJxPAOd
      uEV25upd/Pi3f8YV1aLTi3Ec2s5rowZ0A8c42CGgLFfKoWd+R6+0EEXfTv50Okqxzc/OPz5H
      X0SGu+UEpzrD5Oaoqdv5J451h2G8hT27TiKtWEqR4Q3/JE8r27cfZjw4yvkTtUTSyzFM1vHy
      K8dxBRM46w9wqDVMnl3EiT2HGQj46Wm4jAszeTbDRzLjPN0NMkCMId2OTjrO5dO92BcswSZ0
      cPJoK7aqOQRco5gKilAOX+BEmwdRMkBn/XkmDCUUmq8VUoiSjLRdoqnLhTcwinNATuU9Zehi
      k3Q2djIeBE1aJvb8AvKNYnqbrxA1l1KaZbjjvSem1wSSqClb9gBbFqTRdOh5fvfsLvoEmczK
      NaFNL2XB/HxUb/uTn/ZLDQjK1vLIxnsoTdcijIVwtFzkfFM7XV3d9LR30NTYwxQgUthYeO9a
      FhVqGBkYw1o6nwyzmcp5lTec0EKjvdRedFF87wYefmA1mfRS2yVgTnkG2vRi5swqQC0FYgEc
      HS0ETZVs2LiRqgLTjQcmkikpX7KepZW5KMUgkGnJLyogOtzFUF89PQE9hUX/f3tnHhzHdd/5
      T0/PfQ/OATAABidxkABJEBAJguIhSDRtHpJir2IpvpLY2d3KWuvdrVSlktrKppJKJbVbriS1
      hzdZ22tJsURJlmhSPCBeIEGCIEiAJAgQN4gbII6ZwWDume78AdKiJFIWKIsUjf78h3kz3a9n
      8H3v/d77Hbno7/4fFG0UVm2hfnsp8q0JvENdtPRHqd79O+ysXYPD+JEJVZdM4SoXunCAhdlB
      hqeC3OrrxGMt4Zk9e6guSALiTHS3cbmzm+GBAYb6O7nYMUgw+vhuQS8OXOREaztHD/yC9quX
      OPjuefyigaTkfOp272OLO0Z7+xB3YsL01jy27dtDbWUxq3KdaJIcmAG0aVQ//QwbsuL0dvTj
      /xyOJ5a1BJKlBAkMFNTupXjDTX72P17jclcFlXfaVQJqUUROSEhSnKXtZIl4XEalFhFFNRq1
      CkGWScSi2ItrefGr2zFGfYjWNPyX2xEMFiwGDVqtDvHuGUiWl2YkQUBKJEhIKvR69e1rQjwm
      wcfiQ2UkSUJQqVGpBNRaza+WFSpBhU6vRyXcCThU48wrxiX00tDQB+7dlGbpmOm463JaAxaD
      BlE0opNnIZEgjgqtVo06pv5YHiVPZwOHmubZ+ewGiqfGSSAjJyQEtRpRFNFo1MDSwZNkLuZ3
      /+3vYQ8tENfZseof3w06c9ke/uIvd4FngDfea6dgxwayDCOk9vYyNjSKzxPHmZ+OJryIX9Ig
      hPo5fbiTnCfX4+kYIa+2Dn/7ac7PaikvceENq3A40zCq4Z7liD4DyxJAIuzl0uFXaQ9lsjoX
      goZMstJsmCUrkneM3vFsUtJT6Rq8TJsYYckOtVBUUcilpiYa7DmMTnhJ5OlwFpZj7enlSlsj
      E1f7KN7zTQrv3EiAO6n7VaIeozrMUP8QswV2Ukw6jGk5VJabaG5oRJ2d4GY4nQ2rM1CPfvTp
      jGS6C1E1XKfpXIJgzwRRddZ9n09MymHDKj0/OhKibmc5dhXMfNIXkpbPusyLtL5/HMk2gWfx
      w9G70YSEmIjhm5vBGwwjRKIk5xdi6O6h+awRoW8KSMdZkEfBlQaazpxHGOvFXPkV9myyPFZb
      dKI6iaLKUpINoFLrMKl1IKdRXFKEM8mMw1ZOzTofTWePI6dtYW9NJouDx2mcdbFzQz5r1gxz
      9tRpdNlb2bsuFWN0DfPNZzl+pBNH3ga2byrCIEBC1JJVUEok1fwb2cNflg2g0uhJcWZiIkok
      bqRsYx2VxU6sNgdmgxqtyUlxST5JmgSiPZey0gLy3Tlk5xfg0CaIqWzkFxVRVFhEaWE+Gcl6
      wiEZ97otVJdlYdDqcKS7yM1MRqc1kZLhIicjnWS7AUQTaRmpmLRqBI2JzOwsrEKYsGChtLqW
      Ne409Do9trSlz+tFQBAx21NJs2sIRyWcxZWU5OWRnZWOIzWTQnc2Nr2AWm8h3ZWLK8mK2WYj
      KbOItRUFmNUgavQkZeTgzkrB7kgl25WB1WDE6nDichqZ6L7OnJiO2y4zPOonr7aWAuuSDWBM
      ysBmVCHq7RQUlZCdlYFdvkX3wAx6ezopai/DwWQ21W+lIjuZWChCatF6atbkYdGJj8QIXr4N
      sISodpBfVozj7my3WjM57mySjFoElQZHRj6V66uoXJWNQQQpGCKqd5CZ6iDFVcTaqvWsKcxA
      KwgIaiPOvBLWV1VRVpCB8XY1DJVah9NdhCvZ9BsRwGOdHv2RE/fQ9C//l3e7FjFrQMyu5Xu/
      9zTpH7UF7iBLzA+18ObPDzIS1qBR6yirf5G9m9x8UVY8DzM9ejwcIqoSMWi0fKxYz0NCEcBn
      4t5lkYT7/pr3KaMkCF+YLc+HKYAvAo/TMvMLiLDMkWu571f4vPmCTLwKCo+G+84AGo1GiQdY
      gahUKrTazxht/hhxXwEIgvAJa1mF32ZWUl2IlfOkCgr3QBGAwopmWQKIxwLMz8wTCMeQJIlF
      zyy+xfBvxC11eUhEFr3MehZZOcF7Cg+KLMUIzHby47/9a86P3d0iLU8As8Mn+Lsf/Fd+dqqL
      xWCA9/7+z/jJ4SuPwFc+SMcvf8Rf/PAgnod+b4XHizje0S5OHnmPzvEA0btHzMTCA5wDRG/R
      euo8G1dn3PWixEzfBc5cHCCktlPyRB1r06DjQjO3JFiY96JPLWXTxrWkGARAYmGil+bOGSpq
      qkn0n6RtIZ3ajcVMnD3JvOsJSjVjtLT3sICZ0qotVGaEaT5+nmlZi9ZoQPBLgIx/upe28z2k
      Vm2mxBqg9cw5hhfUuNbWUpdv4PqFRgZ9cRIxB5uffYqslbPBoQCATEK0V4BBFgAADcRJREFU
      sW7XNoYuvfvhplhk+TaAwW5H5+nkUNPAB4UX5q7y6ivvMWPMJ0sY4xc/fZsBv5+e1gbO9oXJ
      zhRoOnCIS/13ooAExJif7uYLXJuZo/3Y6xw40czIYCeNJ5oYmRznvbcPMa3Lwm2e4tBb73B9
      aIT2Mye4MKqmqDgXi1YgEfVy7u1XaRmPYDLpuXHyDVq9NsqdMU69/hZXZ/30tB7j3FCMwlX5
      mJW6fysQDSkuN66UexcUWLYA1KmlfGn7auZPv0Pz7aIocz1tDAfy2LG3lm3bNmBbaKW1H8BO
      fmkppetqcJkWWfD7mJ0YZWhoBL/GQX5qlK6r5+gZNGLXSnSeb2JALCLXPsBYOIvNNU+wfuMz
      ZIS76b45SQzILq+iJCcTs04gOnqW411R8iuqcDtmuHzqBp0X3ufNE1eJxMaZmgEw4SooprjM
      jVURgMLdaHQPsgskkl29g7q8CJO3c9DrrTbUCS+zM0EWPB4CspUkC4CASrV0nqBSAVEvPZeb
      OXGykatjEu78NCbOnWY+exObizW0X+xAX1ZJod6MOuFjbjFIxH8Lf8KAyWhABQh3uRNo7EXU
      rXMycPkCNz0qTA4TJdte4k9+8Ec8u/sF1udw5xNfKH8bhUfNAn0tPXhF8wP6Aumy2LpnK2ev
      HQPAVLCZHZUDnPjJP3FeDpBcs4fqDDjx0c/pnWzeVsXm23+Gh8Yxv9eMsHo9q51dXIibqFjj
      JsWVRXVxP+cP/JRLQgRdyVNUFZoZ+sjl1MklPP2lMhpeOcCF6+up3lHD4PGD/FOfSDy9ht8v
      SfloDxRWLJnUv/g7JCUDyMx1dSE9sWp5yXHjUT8ebxSzw4FOiDA77UE027HbDCQCHua8QRKC
      GosjGasWFjweZIMNi0HAN+tBNCdhM95VZiUeYnbWA+YUbGIEjyeIISUFi0YgElzA61skhhqL
      LRmrPsH8zDxY0kg2qQj55vFGNKQmGwh6vUQ1Vux6Ce+ch3BCwGBPJsmgYsEzR1xrw2ExPLIU
      3I8TKyM57hwtJ8Yof6pSyQ6t8GFWhgA+QDkJVljRKAJQWNHc1whWVkYrl5X0299XALFYTAmJ
      XIFIkkQk8iC16R9PlCWQwopGEYDCikYRgMKKZlknwaGFEbraBlnKLi6gs6ZRUFxIqlnzMTcD
      KRZkZs6D3pqOaq6bHo+VsoocjB+/7D2Jesfp7PXgWldKqkZx4lH4HJBjy5sB/DMdHDt4mpH5
      pfTm147/gpOXhwjew1ZemOmg4WAjo/NRuO03upy9hch0N4ffep/hyMop2KbwkIl4lu8LpLGm
      U1FdR6VTwHKrg1Oj4wSi2Qw1vsnBlptonBXsfraa7tdep6k3QkfczjfypmiZLsIo9nHqUDuy
      RcCas426ohCnDp9lMm6l5ql9PFmZzM0Tb/BWyxQOi8h8RBn5FT4/EqHg8m2ARHiBsZt9dHV3
      cH08Sq4rE3GogdeO32LtV+rJDLTxyuFRNj1fT6FrDS/u3oZFXmBqZoFQaIHp8Qncz3yPF6oN
      nP3lWWLFdWwrV9N06CDXzr3PvxwfZuM3/h0712ehWUHlOhUePlIisXwBxAMeBrtaOfL6awzo
      y6lZV0BgfITFsI/h3mEEZymr3bZPuEIqTqeGcMCP13OLuZFeRn1WSqvK0ITmickZ5OTaSEtL
      w2zSfMJ1FBQ+GxrTAyTY1SXn8uSur/HSC/Xop3rouTmDMSkZncFCRe02ipI0GI1L2YVlQJIl
      5Hus/nUGIyaTieTSrdRXOdHEZWypTjTCNONjC8zOzhIMKjOAwueIPml5AlCpdZjMRtRqLekl
      23l6nY62i60EXPXsW6vh6I//D8f6JQqybRjNOTj1Y/ziWBMLMS0Wkw61RofZakIjCOjSCnm6
      /gmCza/xv9++gtaZR8bqWvZtTOLkP/9PDrdNItptaJTkXAqfF4JWyQ6t8GFWWnZo5SBMYUWj
      CEBhRaMIQGFFc9+DsHA4TDT6Gy7Jp/CFR5IkFhcXH3U3Hhr3FYBKpUIUlZPYlYYgCCvqd7+v
      AMzme2fSUvjtxufz4XA4HnU3HhqKDaCwolGK5Cl8ChL4hrto7R5DsGRSvrqUdKv2Vy7wcmSe
      zstXGPELuIrKKXGn4e8/z4W+pdzdKSW11LiN3Brq4nr/FLIlm+qa1djueLrIEsH5MTo7bjAb
      1rHqic3kO5YaI3N9XB1QUVZTgDnhpaOplZFAHFN6IevL87Hof009ZTnG/Egf13uHCQpm8kor
      KMi0cbvs8DIFIC+lmm5sbGbYE0HvyKW6ro7V7mQ0n+nANs50z0WOd8f4cn0tDpOG0Pg1Dh1v
      YsJ7lztETh3ff3b9PUo3xZjrbWFYX8P6nI+nf56+epRjA1aee76W5ZeAVpB9Qxw72YbelUHw
      xgWaIjp2PVmCSQSIMtx6gpZRI25blMuXLmKx1zPVfJAucTub3EbMOjWB+UEaT55FziwhevEA
      Rw3pvLA+FQApukhn6xl6Aslkawc4ctTGN79eiWryOgd+/iZdoSqyagpQ37zAu63TbCrVcfHY
      ScTUZOpykj6x73HvKE0t7UjWDLSBbt4/Oof2+d3kOdSAvDwB+CY62P/qIQwbdvHcjjTG245y
      5PAprC98mSxDgpgkgCBiMGiWiiAnZARRi9GgRY6FCcdlkCVkVOgMRrQqiUg4TCQWYWZ8kCtd
      cXZsfQLQoEst5KmvOLnVdZD/f3SOnS99i9JMM8gy0XCQSCwBKjV6ox68fbz35rtEtxRS5kxB
      JUWJRONL7QYDgak+2q6n8GVFAA+GKZtnnn8eDYtc9o4wHAx9UBQlcour3QlKtq2lPNlAhaTC
      apnn4qhM8b4aKvK06PV6IrMyUVmFu2AVkYkmhkIfeBmEA7NMToYoeWoTReYoJbIZY3CKlm4f
      Be5UrtxYet9kbyf6kj3s2KrF13+YOV9oyeHsEwZf0eJi+659aA1GItNpzB5uxBeMgUMNcmh5
      Api41MCIYRV/sKmKbItAdtb32AjALK//+Z9yJuTCXbqWZ59M5+RbDcxFI8ySzbf+8GvI537E
      T69BfprAyFCAJ7/zMvXOSd78f/sZUDmwSF4WEgW/updKayQpxYhkN6HVBLCnpJPuAP/4FQ68
      fYj+eRBkFev2fo1cXzudA9OEYm9wWl1HuPsMXVMBFv1x6l78DxQt5yEVPoag1mG36bhx5BXO
      DUuUbTYjShKIKgj4mYnOMHX0DRq9URyrNvL89gwEi4ubJ/+ZfwiKFG/by95yC5k2kXPvvIro
      WM3OAjMSS0ZoPD7PZP84/cGfcHzGR9b27/C1rbnUbs9k8eIgb98WQCwaRdSpUalERFUYvz/+
      KfquxWLRghxnfOImFuc6XCmGpcZEfHlGsG/Wi9Zgw6AX8PScYf/+/ew/cJqBmUVkQUP6qi18
      +1t7yNGDKX8dG8pzEad7uXErBEiokwvZ/Y3vsinVR3dXP33XWrgUdPPvv/9d6isyUH8K16Ob
      F4/RHS3ipZd/wDfqrDQdOo22cD3F2Ums2/UdNrsNGNMKqN6wGl1wmv6BMVZOko/Pl9Iv/RHf
      frqYgWst3Fq4fUYkCKg8EVK2fZ0//taXEKa7GPCl8tWX/5iXX/5PfK8+k8vNVxkdaqdnzskL
      3/8Tvl40wzuHr90OrQVIkNAZqNn1Xf7jNzfQ29DIWPjj99fqdHeFFRowmT7l+C2HGGs7S9uU
      nrVbakjR3X5dbV2eAOypDiJBD8GQjM6RSaohwKVTZxicDSCrRHRmC0YNeMb7GR6ZIKa1YDbe
      uZsGm82OyZiMwy4gyzGCgTAJawppBh1Wmx3Dp3D/988tYHSkYbeZSHc5kYMz+AJ3WhP4PZP0
      99zEJyWT+klhCQqfmvitLvY3XMQfTYAgY9DpPzgrsKTgTtUTDcWRpTiySoV2oYv9+88xF5eI
      RKJozWZ0ahE5FiYel4gnJCT5g3T1Ol0WGVlaIpEoiWgUWatHe4+jiPScXAKTk/gCi3gFHSlW
      3Scuf5Y6v8iNM8c5N6li45YtuO13iSYyv7wlUOaGZ8i99i6NTRfYviYdIbRAQmNE96Gg9SjT
      N/uZDRWSlGpGlMIk4ncP7XfqD+tJy8rA0dRFU28JwYGbeMK/3gsxu2wVoePX6bjiRLrcia2g
      Fne6SK9aZGF+gtG5QUZ8IusydIwHVMiJxCMo4vfbhZjsZoPhPf7xb36JZM+nfvc+MmyjvP3f
      O6j5L3upe247b73+Kn83r6Zy21coKctDN/1z/td/O4xkX8W+f1NNZopEdeEB9v/wr5CSVvPS
      t6tQDTXxs24dX91RwcbadRw88A+cClip//0/xHV7MBT0VlKSlvL461c9ycamH/O3P1wkvbKe
      klT7r+27f3KQi61NXJuGq+ePYcxZy1efq6L/lTZK/vPzy8wOLSfwjnfTfLaFwbkAoiGZosoa
      qtek0HnoALMZW3i6Nh9hqp3X3zlH1GLHHI9hq9hJWbSN9nAu22vXMN74MwZNdTxd7eDGyWM0
      DwWwOyxE9U6erd+E/a5IMP9oMw0XF9hQv5NcGyTCXrounOBC1zSCLYen9nyZPEuQ7lMNNA76
      KFyznuhgC4NeA640LbKjjPKkSVqGLOx7bpNiBP8aPn126EXajrTj2rWFtAe8l+Tro7FXpHat
      G53mYR5JBek40krSrq1KenSFD/PpBeBnfCSOM8fBgzpOSP45phN60mwmxIca9xRkfCSIMydF
      EYDCh1lp9QH+FTpG23eWiaz4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='ActivityFullTimeWorkers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across Income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across Rates Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across RatesByIncome Chart' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
