<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='ActivityPattern Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\ActivityPattern.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>8</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Child too young for school&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;University student&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity_pattern</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity_pattern]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>activity_pattern</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;H&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;N&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imf_choice</remote-name>
            <remote-type>4</remote-type>
            <local-name>[imf_choice]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>imf_choice</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>5.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inmf_choice</remote-name>
            <remote-type>4</remote-type>
            <local-name>[inmf_choice]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>inmf_choice</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>90</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>93.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;$30k to $60k&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;More than $100k&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2125</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>607577.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk:5]&quot;' value='Activity Pattern Share' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;' value='Share' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;H&quot;' value='Home' />
          <alias key='&quot;M&quot;' value='Mandatory' />
          <alias key='&quot;N&quot;' value='Non-mandatory' />
        </aliases>
      </column>
      <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='real' name='[imf_choice]' role='dimension' type='ordinal'>
      </column>
      <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[inmf_choice]' role='dimension' type='ordinal'>
      </column>
      <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2010_04_ZZZ\\summary\\ActivityPattern.rdata&quot;' value='Year 2010 (v 0.4)' />
          <alias key='&quot;2040_03_116\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
          <alias key='&quot;2040_03_127\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
        </aliases>
      </column>
      <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
      <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:activity_pattern:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;M&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;H&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;N&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:incQ_label:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Less than $30k&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;$60k to $100k&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;More than $100k&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;$30k to $60k&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across Income' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActivityPattern.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk:5]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk:5]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names])</cols>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]</column>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Across Rates Chart' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Activity Pattern Rate for Full-time Workers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActivityPattern.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;H&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;M&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]' value='167' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across RatesByIncome Chart' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActivityPattern.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk] * [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk])</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='ActivityByPersonType'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActivityPattern.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]' direction='DESC' using='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[sum:freq:qk]'>
            <groupfilter function='member' level='[none:activity_pattern:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='ActivityFullTimeWorkers'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde'>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Scenario' datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActivityPattern.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\ActivityPattern.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]' direction='DESC' using='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[sum:freq:qk]'>
            <groupfilter function='member' level='[none:activity_pattern:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActivityByPersonType'>
      <cards>
        <edge name='left'>
          <strip size='204'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:dir:nk]</field>
          <field>[textscan.41862.719548923611].[none:activity_pattern:nk]</field>
          <field>[textscan.41862.719548923611].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActivityFullTimeWorkers'>
      <cards>
        <edge name='left'>
          <strip size='245'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:dir:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]</field>
          <field>[textscan.41862.719548923611].[none:activity_pattern:nk]</field>
          <field>[textscan.41862.719548923611].[none:incQ:ok]</field>
          <field>[textscan.41862.719548923611].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across Rates Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across RatesByIncome Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:activity_pattern:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\ActivityPattern.tde].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ActivityByPersonType' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9Z3Rc13m/+0zvfQaDQe+NBNhAsJNikyiSEilKtGXJUpw4jp1/nDhZ1/dm
      /VdiX99cL8dxnFhxue6WZVvFKhTFIhaxF5AAUUhUopdBGQyAGWBmML3cDxQpqhMiVTHPtznn
      zNnvPuf8dn33uwWJRCJBkiRzFOHHbUCSJB8nSQEkmdMkBZBkTpMUQJI5TVIASeY0SQEkmdMk
      BZBkTpMUQJI5TVIASeY0SQEkmdMkBZBkTpMUQJI5TVIASeY0SQEkmdMkBZBkTpMUQJI5TVIA
      SeY0SQEkmdMkBZBkTpMUQJI5TVIASeY0SQEkeRMDAwMftwkfKUkBJHkTcy1KTlIASeY0SQEk
      mdMkBZBkTpMUQJI5TVIASeY0SQEkmdMkBZBkTpMUQJI5TVIASeY0SQEkmdMkBZBkTpMUQJI5
      TVIASeY0SQEkmdMkBZBkTpMUQJI5TVIASeY04o/bgCRJ3opvxk9bR++7njcZ9eTnZNyRtJIC
      SHILeLh6poaeoJU1d1egBZjuZt/JTjIWrmRxjn5Wd4uGRrh8fpTsVUuwyN5+fnjUybf/4xfv
      +v/1qyv557//0vumM9ZykmaPlcqlZeglYG85y7i6/E32JptASW4BLx3nL3Ds+D6uTlw7Mtl2
      nJePnORy//Ss7xaNjNBwqpGJ0B028y2MtR7n2b2Hae53EwfsrefeZm+yBkhyi6goLZXT3jrM
      kjVyLjeEKCk1ABB1tfPic/toHnQhTF3AIw/vxHX4O5xwZSNyDRDO284/P17JwMWD7Dt6GXLS
      EPEORf/rZGXYeOK733zTMa1GhUatAkAsFt2aySIFeoWIvquNFNjW3jgcDzg489KzHG11JQWQ
      5NbR5ZUQ72nGUWCkVVTEQlMjw0BMqKXynoeoGO/m8KkOhtweBP4g4tRKvrqrgp/9+AptrlRa
      L/ezcPfXWSS8wC/6Xe+azuDQKP/4rz9807FHH7yXxz63bZYWC7HklmATTNPSP4bq9aOuK69x
      bDKff/qXR5NNoCS3jlyThUFhp766C3l+JprXjwfGezh3+jwdg06CccG1g2IxKpMZo16LXiQm
      HPYRRoZZp0OTnYX1ozJaamTh4gwcl67giFw75JmeQp2ZhUWtStYASW4dqVyNThNi33EvG/7G
      BK8X4u7+ZnrjxXylQslA93kSJBC89b8yLdJEgNHJSdImuxh6j3TeqQlkNuo+sN2K1Ao25D7H
      d/e5WZoBBqOJ6aZuRj3WpACS3ApSDLZUJFo12Tml5FTMUJqix2W0YdZKSbNWkX75MM8eTyMz
      qxiFIIHEkoVVKwdRHGtmCgZzFndvqGLvvifpzC9iXroFebCffUf7WbptKeGOKwz6zSxZWYT9
      pibQb5/4Num2lA9ktdJowxZRIRTKSFt3P1vaJxBopegX3s8j48/x8x/8CkFiroUCS/Ke9Pf3
      k5OT87Ha0NHdzzf+5fYFcCska4AknzhSrWb+z797HACDXvuhppWsAZK8iU9CDfBRkhwFSjKn
      edcmkMfjIRwOf5S2JPkEEI1GmZiY+LjN+Mh4VwFIJBKEwmQFMdcQCoXI5fKP24yPjHcVgEKh
      +CjtSPIJYWJiArVa/XGb8ZGRLOKTzGmSw6BJbpng9ACXLw+SuXgN6df9IEgwM9rG6fNXmAwr
      yF9YxeJiG+7205y5bCciT6VyzUoKtFGu1p2lqX8KsTGPdRtWYFVcK38TsTCOrjouNPYwk9Cw
      ePNW5lmkAAQcTVS3CKncNB9ddIILB4/T6YmgzSznrqp56JXit8063zKJyOxqANfQOX7+rW/x
      rW99i29969s88Zv99M+805Vu9v/qCQ40OhiueZH/efIYNzuhxiMBrjbX0j7ghr7j/PCnL9Dt
      +6C5uF0cHP/lE/zieN/HZcCngqinj32/+wV7zjQy7r/pRMhB9cFTOFQ5lKaJab50nqGhK7y6
      px5Z4UIyEr0crL7K5EA9DVfDFCyqQDZ4khdPdnLdGzroHebcifMkrGXMNzjZv7+BaeL4Bmv5
      w6/+wPGabnyAv7uaw/0iyvON9J8/R6Nz6vbyND06uxogHHThipu5/yt/xaIMBQKBkFjQzfBg
      EH2aBYHPhSsoJsUcYWygD2FRiFBolD57hMhN95nor+alp18je9PjZC4t58H745gFPhzDHgSS
      OAF/HLlCTjwSIJKQYExJRSOJ4XVNMOENIVFqMZv0yMRCBMTwT7lwh6VYDUo8Ew6iciMmrYDx
      ETcKkxlBwI3bE0AgVWEwGVHjwz42hUAoRqycwtHXx6DOh396nElvApPViCDgZsLlIyZSYLFa
      kES9TEx6iCfiCJQWbGbVHGo/ztBxuZ+M9SsZffktBYVngm6fnIUVZZQKhmhoPYOzI0S3JIct
      i+cjFXWy/9QA6h0P8MUiEAgEuDz1/Lx3higgA8KhUaY8JlYtXECxf5JXTrcz5s7CNSBgzbIi
      euquJTXS3Y6u6CEWLZQwWN/P1HQIEvBBqwCRLnP2TaDI9BhNNWdwdyswFyzGOnaMH/+ulV3f
      /zqSs0/zbFsqf/83a9/zHs6uZhwuF8G2DsbkNfxwr5fHvrCYs8+9gnheMfR14RRaKciUM3S1
      n9IHvsGWDAcv7ztDEDH+kJSFW3awtiQViTCCve4Av29Q8rePLeTIj36AY/4X+dp6+Nl/nWXZ
      7k1M1JzBJVYjCPlJWbSV+1K7+e6PD5JWtprKpakEYhDyDnHiz6/SGCjgkUeW0n3gRdo8CqI+
      N2lrHmSFuoPf/eYo6tIyChZuYceavDkkABXz1q5nynGCuree0qYy3xql/uRJZvRx3NMh/MYF
      zJOe58irJ8gKOAhNa/ELBKgEEJ0epG5IzNqVxTfck+WKdFKMF7hw9CgT5jFiUR9BYRrL16Th
      q227kVQ8FgexAAECIMjMTPS2ciUQCD7AOxQIEInFSCRixMIPJr2cqg3k2WysWLuSfKPypjNS
      sivv4d6VafjDcpZufpjltiD9fd20N1yktnWYUDjIeG8DF5v7CUQBZGTm5KCcstM2eBX7BDgn
      R+mvrWPGnAeOevop5KHH/5Lty220X6zGPhFAKFVRsfEhtq4oRiMBZ8NhTvXB6rvvIsXTwpFz
      V3EHQoSmBqg+fIlxALGJxVt2s2tVDpIPlPPPIDIzS7fcy/I8M2qNDoPNgsZYwtbdWygyKjGZ
      jchTzGiA4GQvp0/WIShcz8q8N0aapOp01mzdRlm6FpXNRopUj+odBiFlCvm1Eh8AJRrN7Xdh
      Z30HidZKxdI1LM669uGOjgkRCAQkEpCIJ3hnv4oYjo5jPP3UCcbIZcfXFt048+br1RgMMoQO
      MXKZDJlEiUwmAKLMzASJmuez88ENJKIRpLoUlGIAAYqMHArVR7l4JIQobzFpDHDgXDeZG7eg
      mzmERGdALZUh1OsRhF2EIwqEIiEqpQqh8NqkjzAsAmYYnXQR1kwT1lqp2vQA8033gUhFbKIW
      ZArUMhGC5PwIECcSiiESTHLhSAOyymWke5vpkGuwyh0cfaWXRbtX4TvfRmHJYuKT3Rw7cg5p
      4RqWFZqIRWIIRQmicQGxmVHqLzSQsvxuNN0vE1y4kgzp21O05RbiP9mHY8LEpEBGiVb+gZs/
      AImI9/ZrcZ3ZikkX4mpDGz2DYwTf8SoRqcWb+Mb3vsf3vvcVytVq5KIQo0PDTAUj7/iPN6Mm
      uyif9MAgl3u6ee2ll7jYO0Hs9cwL5JksXWBhYGiY7NVrWKyK0O/UU7W8mNyi+Yjs9Zyrvcil
      iy0YiytIM799nDt90yN8eVMerafPMaLOo0SVYKi3hepXnual+pHbec6fGcRSAxm5GailAIO8
      8sQ+7FIrS6qstB98ihdr3FSsvIvMtFKWLQix/9e/4VKwgO3Lcpnuv0xLj53aw8/wkx89wTOv
      tTM5eJGnD9eTkJooyNFw+plfs3cgncfuL7uxYFKktVGQY0EGSAvXsFHTzq+fOoQgdz5lKfrb
      ei/BqfHZOcN5J9upq3dTVFVJuv51iUbctNbU0DYWQKdTEZVYWbk0h65zZxAUrCEv2kb1kIr1
      GxbcaPPFQj6u1h6jedLIyjIZDd0xFi1Io7+pn4xVlWidLVwaFFO5dAHe1sMMyRexfL6WvksX
      aeqfQptVytLFZZgUb6wNjTqaOVA7QPHyDWjGGrjUK2L9/cvRRX30tNTT1OlAoM9kYeUSchK9
      7LvQR+mqbRQZp2g6cpZRWxV3pQe4eKkT86LlGF1XqGkeISy3sXrjcpTTPdRedlK8cilZeuVn
      VhC37gw3Td3hNnK3rMD0AdOKuTo52y9hRXk2MsnHU6smvUGTvIlbF0CACWcUY4rmAzcj4n4P
      7rgUg0rOB+xO3jbJibAkHxAF5ttcpyJUaj9w7XGnSPbmksxpkgJIMqd51yZQJBIhHo9/lLYk
      +QSQSCQIhT7kkG2fIN5VAIlEgmT/eO4x1957sgmUZE6TFECSOc0sh0ETJOIJYrEY8QQIRSJE
      QiEQJx4HoUj4PhNECeLRGDGBEIno1rR3rUqOA0KE7zNYnEjEiUWjxBEiFosQCj6kweXEtWeQ
      EAgRCYW8kUycaCSGQCRG9DZbE8SiURICEeJbzPungkSCgLOZvc8fpiegoWrzNhaKm/ndvnqC
      kRjxWBxh8Rb+5f4Czuz/I2c6fYhlCjY89s+syrx2i3jYR8vpPRy62EdYnsb9X/pLKnReGo8f
      4LX6fjT5y9m+bQOZGiGxgItLp07iS1/OXQsybtsnS/Sd73znO+90IhaLvb0tGA8z1HiE3/zu
      GU6cOEHDsIDcohxEjos892ov2RU5vPdCSh81f/xvftmqYmNF2i0ZGAu6OHv8KM64mQyz6j2v
      neo6wn//xy84NSKgJDcTjeJDmubwj3Ps6V9w2KFmXl4q0hvf8zCv/uoFRnXF5JrfGv3Yx6WX
      /ki1N5X5mR9urJvbwev1otFo3v/C60QcnHj5PJp1n2NXpYXRoWHM8zZy76Z1rFpSiGA6StGy
      SkyMc6VzgvUPf53dW9eRdVOkQ89IDUdOuNn8la+yXtHM72ugUDHAwaYZHvziw9B+kI5IBiWW
      MOcPvcyBc70Y8+dTnGngFuNEvwvxWdYAIS897U1409fzvzabaWiZwDPcR8Pxg1wasJJ1UY9a
      NE3CuICKlAAtl/swFJeTpQnSVNPAREKMx+0nYYZ4yMtARwtdw1MorYWUz8+H0Ss02MNohB4m
      /EoKKyqIdx3itWONWBYbyExbjk0rR0CC0JSdK5c7mAwJSckpoTRNQO2JGsZERjZVlKJTy4EY
      UyPdNA9MoY7N4AxKyC4ppyBdh8/eTGP7MCGRmpx5Cyk2Cxm42sqIP07E6yGuSmV+xTwsquuP
      OEHQZaep+SqeQIRRTxRSwdN3ieo+L2KxhNSSDDJKSxAJXTRWt6EtnU+mNEhbcweavELMeSUI
      DTJcA600j/rRhqdxRpTkz5tPrlXB0JVqrjqi6HQyZgIaFm9YgOH6dxaYoL3+MsOeKLKUItYs
      ySHqHqa15SqTISV6jQCpMY+yPBX9jfX0TkTQZxZSUZSJUir60Fw34lMTDElV5A/WUy1Uk1u6
      AItaCPEwI53tuDXpbEgzELTXMTY4SazmBGO2bKqWlHLdmTMeDhATKJHJREgkEoKjY0TNeWQp
      +7l09gwhYQbFGUZEgUkUBetYMfUqt+JBdgvWz7IPIJFjSrES6znD0eYQS9evIz9Vg0ohQSxV
      ohH5uHLmIKevThKYGuTM4de4OuKm/+JeXq3uJyGMMDkdIB6PMNZdy6mLXQgUSq6eepFTV4YZ
      677Igb1HGAmD/fJr7D3bgUCuRiaRoNaokIlfN9fvoPrQXo5f9SKLu6k+uJ9Lg15UKjlSuRad
      RoFIABDDNdDMkT1H6Q+Au/Uo+043Mum4yp7n99ExJSLubGHPc4cYnvHRWXuYvee7iItmuLjv
      FS5cdbzxoCNumk6/yqGGCeQymHa7AXBdPc3LR8/gjKhQSKeoOXiI5oExrtYc5WTTONOjDZw4
      XsfEjJ+Os4c43T7GeHc9B186xmhUgOPKIQ6cb2NqsIE/v3ySsZiY8baz7N97gZuDkzibT3Cm
      04siOsqxvfton/DSdv4Qx5ociCUBavbuobplEHvTUfZdGkUp9tNw7DAX+t1vdbm9o4SDQfwj
      /YzG5YgDdqrPXWTMGyUa9DE4MkpKbjE6uQhNyjw2bttMSaYRb+sRjjY5uT7IrkopJdcwzJ5f
      P8kxewBtOMDUtIsgCixmMwa5CK/XT9SUz5ICC5I7pmbxLAUgUlG69iH++sFV+Jr389OfPEmz
      R0OGRY1Cn0Z+nhXZ28oaL10tfcjK1rBpdRVl6XpE0SDDHZepu9zAqePH6RyaxmF34AdEujyW
      rlpCebYB36QHXVoeRo2GrNxsTEopAsA/PkhTe4CF96xl3epl5KrHaewKk5VmRKG3kZ1hRX5z
      3WbKYPGiJSwoSyU65cbR1kDnpI11OzZy9/rFSMcu0NAPICM1t4SFlevINXhxT03j93mZmprG
      5xylo99NWuUKVixZRH7a9W12BKh0WVQsW0SOSY0QEOszWFCSSndzG0OtLUStxWTZNG9+MuZs
      qpYsZn6+idCUB2fHFZyJYlZtXk3VvCzk0ptfTQJNRhnFhgDt7b1Mjo4yPuVloGcC67wlLFu+
      jOIMJeCmtbaV7rZ6jp+ppX+wk56hd1yzeseQyhXIFCkULljMkvlFBNz9uDwBgjMjTExoyMo2
      IBKAVGkmb145ixZXMt+aoLtr5MaSSLEyheXbH+FLjz3IXUUpCNMMhOzDxDV5LKmqIt8Ypret
      F++dKfbfxKyaQPFIEOfQMIn0pXzp77L43Xef5GrPCAsBEpAQCZGKRcQiEWKRAKEIgBCJWEA0
      GCAUiRAKx0goBAjFIiyld/HlxzaTcPSBOZfolToEEilSyeud2Ot9kMRN49MCAUKRGIkoxowv
      TEwfIRQBmUz07r7hEikykZCQWIIIEEtlCBJT+P0RQsEgEWQopJBAiEQqQSiQIpEkCDFNy7HL
      1Pe5saWlExDGCfvDxOIiwuHrb0OAQHCtg36jMyxQkDevFOO5c+zzTFO68WFS5G8xTipFLhIi
      El8rhURSKcSDhMNRQqEI8fjNxXaUxv1/4mx4GQ+vX8bIWC0CgQCRGMLhCLFYmGAwBggRi4UY
      5m3lm48tZnLYiTztw43ELzSlsSitic7Gy3gZRWXMxaRVELT341JmYVZey/dE13mOXfGTW5SC
      c0zEvGU5CKZGGYoo0YlGObX3AorSIsLdoyxYvYlcGmkb6KGxPorHGSc1Lx2VBLjDsdpmJYBE
      LMhg81nODSawGhP4TEUsz7GgHzYTH2+nptVCSmYaTW0nOBaU4IsCqClZupC6A8d5YV8m3jEP
      8Xw5GSWLsHbUcXjvJN7xMMt2ZZD6DmmKxGp0Mh9X6i5Tlr2WDJ0CuSWX5UttHDt2kD/rE7hF
      +awpT0fSfWv5UOdXsSz/z5x+7s9cSbhQlG1icTrUv+1KA0t2rmAVQNRL60kvL9e/xl63DvtE
      CGn+u6chTy+lMu0Qr4xkU1KUggjPe9qkLaiioPoZjrywj9TQCOGY8aazCVRGE/G2Aeo6JMRC
      HmaiKgrLsmmvP8UBTyaTUzFEaClZUUn7izU882wXgbCau3bZSFV/iIGuREYWbVxLrK6VyaiN
      5asXYNWICRpyWbgklevr/Uz5VSwNNtA9MoFu/r0sK9UT6WvisjONTYtzqVozTXPPJKqye1hR
      pEEeq2RDVEb7wCS6ohVUlGcjB+ISJcVLVhExGW+zA3yNd3WHDofDb3eFSMQJel2MOsbxR0Bp
      sJKeakQYGKdvcBKxxoxRFcE55iYhVSGKx9BZ0zDIowz32/ElpChFUaJKG3lmCZNjo0xMB5Fq
      U8hINxOfGmLIIyEnx0TAOcpkWEWmVYV7tB9nUEFmlg2NXIKABFG/m+FhJ76IAI3ZSqpJR8Iz
      wpBHTFqGlWtLBeIEpscZmYqTkWYh6h1jfEZCqs1C3DvCsGOaiECKKS2DFJUQ19gofqkRm0GJ
      a7iXmDoNq/H64vcEkRk3IyNjBOJipGIxEp0ZQ8LFqE9CWmYaKrGf4a4RxNZsrFoRXkc/Dr+a
      zNwU5IIIE4MDzChTMQu9jPhE5KYbCbhHcYWU2KKtfP+3pyjbvJu86TM8e07K333/L8l5/dEH
      p0cZGHaDXIYoHEFtsjBw9llOTNjYVFVC34nncRXs4NFtpfgG7bgDcZRGK2kWPVLRrTeaR0ZG
      SEu7tRG628Xb10o3RuZn2/iYlgPMUgBJPjyiTg7+5knqHQEQaZh/78PsrEx/905aPMxw6zkO
      HK7GMRNDm1HBPfffS2mK/LZGfD5KASTiMeIIEApunkv5aEkKIMmb+CgF8EngMzQlmSTJ7EkK
      IMmc5l1HgaTSd4hLkeQzz1wLj56sAZLMaZICSDKnSUaFSHKbJIhFQgSCYRICMXKFHLFIQDTo
      JxCOIZTIUMik12bKuRYK3R+IIVMrbnx8iUSCWCRIMBQhLhCjUikQEiccDBKKxBCKJMgVckSJ
      CH5/iFgCxDI5cqn4tl3eZyWA0MwYfR3DXIuOLURlSCUz04pS/N5GxGNBpsankJlTUd1I8dpk
      1tiMBJtOjMNuJ25Iw2ZU35EZvtkScA/S74yTlpWJTvFxWPDpJBGeovG1A5xstRNGzaL1O9lQ
      KuTwn56j1RUkocpnx+7tzLdpIBFirOEV/uePk3zpx39L8ev3iAUnuXDgOc5cnSYUkbDxy/+L
      Skkv+145Sq8rhEhuZsX2HeS6LvDiuS6CoQjytIU88MAGcgyK25r3mFUTyD1aw7O/foZzjVfp
      aD7D079/nob+ad5vtiBsv8Tze05gvzmuPH56aw7x/MlO4rEwLscoE97gh+m4+J6Mtx/ld3/Y
      R8/43FkQfkeIRhCkLOCLX/17dizQYO/sxxcMoltwP//w9ccoE7joGvcACWbGuqhp6SUcefNb
      Dgfc9A3PsObhr7KzYJrq1hHsHW1MaRbxtW/8I1uKxXS3dDCZsLH9r/6Bb35tF+aJfjon39u9
      5BaMn30TSGrMYvXmncw3TvOn//oB3QNOKtS97PnzcUaDEopW3sPdy5Uc+NHzOJVKJDodic56
      Lg4FCVgyMNy7Fqs6ds0l+OBJrsxc5knl5yn024no8mg/+itO2zWoQyOMS/JZbJ2god1H7op7
      uGdFCRH7RfbvP81o3MKKbTtYV2S+ZligmxeeOknmti+S7jjOvgshdn1tE84zh+kUl7Mm08vh
      /adwhBUUrN7K1gUWrhx5jrrRMGG/lgVLr90m7u3k+V+eQ1Sxk7sL/Jw6eIS28QQlK7ewoUpP
      w59eojYkRiszsnbLFkpt771I57OOQJnCkqUp9J74DS/WTFKxaT1qUw6rFW7O7fkZjf50dpo1
      xINuWlq6UWUVktL65o0tZKoUinO1HH/mJ0SU+ezaYkXYfi06RSwWJ+JzMRmIkL59HSkyiE4I
      EFstWBS3O1r1AcKjxyNBXBMOhgeaGPZpMejCNB2tRrJgC2tLlVSfPMeYy0lvUxdR00J27XyA
      3ZvL0KdVsP6u5ZiVAEJMOcWUF+eQWnEvuytNOPp6GHbN4B5qp3s4REVVBf6OQ1wMLeLuKhO1
      J88xNjHIwaefJ5CzjrWZM7zy2z30XHfKlFuQ+jq41FBPU+MVGi4e5WLrJK1NPcRjvbzw2xfx
      5m/lkS3FdO19ksMdLsYHmumPpbHzkZ1kSyHuH+bIM89yaTqNlWUiLh06QAcFbFiZTdOhF7jQ
      YWe06yojXhv3PrSFfHNyI8HrZK36An+xfSFjrdUMTYYRK3Ws2vU17isKcLKmC2fPJdoGE6Ra
      1MRiATwuH9ej+89MttHUJWTzX/w9j873cfC0nbRFqyiVdfP//c/PaIiYsAgEIICwb4y6xk6s
      ZUspS73dlXWi2dcA4ckBzh19hXa1gnn3PsRd87MZjxbS3XGJ+uE+psPZJBKATIHBlkGqRoVP
      LkYoEiATBuhrbsLhjWBINyEQixEhRyG9qc0tEKFNK6LAJkIqgpSsPIySYaTiGRK+bto7p4gm
      qgnrJRTk6YkFAQkg0FFWlkHd+fNMauQUFwmor72IIaxkDUEu+VXsWF5Oll5LvvYYVzvHmY8C
      i8WKwaLDNwC+0WFcMgmFC/LQRHwMj9jp9/gRe7ToMvPQSOKMA4qsXLI0c7vkv07c76LL4Scj
      IxWdzgCxfvzOXpo8FspzDRi1UjxDHgShIN4ZOyeOuhia8tB4toP8HUswAlHfNEGMmFL0pE7q
      GL8yyHi4goK1n2PdbjVtJ/fSnbAi8fVx8WIjHlUp6xblIr8DXbVZC0CeWsy9j/z1jf0BcLfw
      7KsH8Sz8SzYvE9F/OvCO/0sQJx6PEgr48c2EUYR1JID4bOLQyAyYdGoMq+7jHpuDi70KUm9a
      vmoumYfwpT8yrruHv1mm4AcvnUOx4G5Si9OxHKxhoNfBgowxHDMCbKlaGH1L3lIKWbfMypW6
      Q1yu+BwqlRpLxgYe22Tg0iU7ZoOWwdk+sM86iRCOtvNcPO0jEktgLaoiTR/ntSN7aTwDobCI
      NStLsc6z8g9LBOCq40ffv8K6HUsQ9jdSGzRTllpCvnEfh//4FMKAjzV3b0Y3M8qxk3UcjwgR
      Kc0sXa2h5cCzvHg5Qsm8KV7o6WLp9ruYn6K9rU7w7Q+DqiyU5KTw4tkXOGiQEQkocb4lspgo
      JRO18wUOvlbAY/dvYJ4awE97n4nQwRf4lXEXtxRnVZrLPVvn8+yhX/KEQEnF9i9xcytQaSql
      MFNGwpyCbVEe6c+2oM8tJCUtj107OvnTnh/x7wkhhop7eKjMQF3jW26vMVC8/D4s7p9w6pyd
      HSuX071vP//ZIiSt4h4WqpP7wrwVocrK8rUbyZ6YIiaSY7JY0SlFbN+mYcwTQqzQY00xcsPd
      U1vCw1/PQg8IJSFczijivCzWPfA5ylw+YiI1aZlW5JjYfK8VlzeMQm/Bopcwvd2yMa4AACAA
      SURBVOEL/MOK8OsDJTLM2tufsZ5VePSbLxVcz1Di3XaFeeO6NydxfeVUgjsRgExw0zjwu2ZF
      IOC9ExMw24Wzgo/Lf/dD5tbDo98+0wM9OOU68lLMzGLJwh1lVjXAO750geB9q6B3/lgEd9wH
      /D0/yvdN7LP5QX+S0WXno3v/yz5Ukq4QSeY0SQEkmdO8axMoHo/PqSjBSd4gFot93CZ8ZLyr
      AKLRaHJJ5BwkHo8TiXwIAXg+oSSbQEnmNEkBJJnTJNcDJLk9EhGmR+30Do8TFatJy84l1SDD
      3d9Or3MGocJIbkE2ekkMR38XI64AIlUKxaW5XI87nIhH8TgH6bVPEJUYKJ1fgFoUwzM2SI99
      AoHKTE5eNprYBFc7B/FFRehTs8lNM84q5tE7Mavw6N7JNqrPdSE1WVGLojSf2k/XjBqLVfe2
      OO1R/xTN588znNBgMajugI+/m6Yjx+gWpJOpCdHTYSeuVqOUzO7O0RknTd3jmAzad4jhfzMR
      nF2NnGgZJyfdcssx/acdnfROCLDoP52OcrMNjx6d6uf46Vom/RFc9lauDkdI0/h49eXTTEtF
      jLVfYUSUhi3ayZGjdfiEQoaba3Ab5pFvuhZCPjIzytmD++mZhvHW8wypSymQOjl5poZxX5jx
      gS7cAiUzLdXUOyPEp+w0XhlEnZ1Nivrt0Whnw6yaQIGpPuouXGHcGyUei9BVe5IrXY53DNco
      lCpILywmy3SnFrgoSS8tJ88sw93fxKGjp3H6ZxsoMsxQ83n2nWkmFH2/Dn4M92AbZxu6iMRu
      dTRsmov7XuJi3/Qs7fr0IlRaWbrubrZu3crGlQvA24+9tZ5ebQU7t21ndbGC7r4hpgc68VkW
      c8+2bazMidPcMXLDGzQWiTA1E6Fw6VoWWgIMjPmYsPcxo8xi/T1buW/7FhblWMlcdBc7tm1h
      2z2rsEVncPj872nbrXBnmkCTNXz/e88hyp9PYKCDRNG9/OOuQk6/8DShxUuInD1BdPXXeax0
      jN/+cg8pO/6Rqngd+47U4JyJkV31AHcXBXnxTy/iUlqwpZazuDDC8SM1BBJiMhZu5aH70jjz
      1C8YXvIYhaNHaG4bZ/SJBDmGQRQLH2X3Gg17/vOnhFZ+jcfuykIMeEebeOkPz9LhTiCzLGL3
      AwtoPH2cgT4hP3sS8hO1DFm38hf3GXjy//g9KQ//HZ8r8fL8b//M1YgKncCHX1ZBNDDB+QN7
      ONUyRkCoZ8tjf03BTA2/33MOvUXL0MAEact2sFrXzrHL3cz07yPb/BBry9NveweTTzpCmZrU
      FDWJWIiRqWnM1mJyC0KornTR2G0lNuZhZGwKebERQXsPHd0mfGMeAiI3AUADSBRa8jP0HP/j
      /xA1lrH7Hh3TLTN4epr57eWTRBXpbNixi8pcG8JEDJ9zilhGOvn6299o5A51ghNEExLSF2/l
      8fsWMtPYyCAJEvE4CVE6CyssDLU00NzZh0OYR3mKj9qTp/FoC1hWbqH11D4u24PE4xHSVj7K
      175QRWS4D7cwnSUVOcQ9Tjz+OIlYDJE6hUVVq8nOLuMLf7+LFSU2nP19jHU10+23UD4v44aq
      fRNd9E5IKV4wH2NiAp8sg6WVVZiK1/LVz1WhiMeJxRNAgngsRiIRpv/SaZpiJfzdN77M6kIT
      xMA7VMvx2lHS5ldRILVzcF8t7kScWCBOzsZHeHxLLo6ODuTz76Yqy0z5hvvZOAc+/hskggy3
      1tPmFFG+YgnmguXsXpdCb10rPqQYTFosxWtYWSans6EFsdGKWKnkeuAdn6OJxm4Zu/7pX/nb
      yhme23sZT8KDR5zPo3/7De4tiNFU344nCjOOq1xoHqNg/mKyjLe3HBJmKwCBkHgi/sb8gESM
      TCFHDIglYlJSUtHrNEhEopuWSYrIWlKJeqSW0zUD6IvKMAvDTLr9yOQyFNYKdu3eRoFeAKgx
      GeUIpDpKK9exKjvExQvtOGb8+Gbe7mYtEIpJyStG5Omh7lwD0ewllJjfyJIhaykbqzIYbm7G
      7vEx4X5z0+TtC6rD+DwBEsZUrGoVBoMehRgikw7ciJEpNOSt3MmutfnXvFBVFtKNcuQGA6rE
      nXHu+9QR9dF58TT1o3HmVa0mWy+GyS5afTnseHATVpmSwuxUvJMD+CRl3L9zLVK/n9zCbG7e
      RCoRv/b8REIhkVACvdmKWvNG41kgEDBjr+XYBTvmkoWU5Zl5n6Xot8SsBCCTp6KVTDPsHMfr
      HWTMp8Jg0L2REYEAAYK3+ZVJTeWUWqdp6w9QXJKBQqEjxaREpLGSr/dRW9uFX3RTIK6Qh66m
      SwzJF/KFL9yFbHyA8engG+cFQgTxOKFgFL01l3TJGMcuDVK0uBzVTWlP9dVzxSlj/ecfpFTk
      omfEi0AoQBCLEIkmUOtVBGZ8ePuHGANAjilFj2ikm46xcYZHHfjCILWmYxTJMKZZEQ1dptEZ
      uZZnAdfye1OGhUKIhUOEorGPbX3zR8m0vZUTx49w6sQhnvrJ9/nhUwcZiJpQO47zxA9+wnmf
      lVVl6cgVWtxX9/PED39Ok7SKTWVaxttOcKimA6m5goX5fvb+5Pv8+FSUB3ZWkVe4iMWGSf74
      kx9xtF/F4kU6mo4e59SZE7z8p1/w/X/7FeeGXLf9jGfVB9CllrH9PjdHT77Ir06IyVq5iw1L
      shAHfGTn52OUgxgTeYVh1GIZlsxsIjolEomK+Ss3MGRRUJ5hQaEWsXbHQxw7fJpn+yRU3vco
      JbpRevPysKgkINdSXrWK0SPHOXIqQeG6bSwpSqEptwCxXoLelsvCvE7O7DmP7etryE61oNCk
      s7xU9SbtmQrXsHRgL9WHTyLN2cjn1hWjcsywoPMUL5zp596qdWQerGZfUxbziwtI1anILr6P
      rc6XOfDsfsx6C2UFKRiyFrF7q5/Xju8jrC3iC7sKUIxOk5OTgUoiRq62kJ2tQSk1UrG0lJ4r
      F6jN0bOiLPUzP86sy13G1/512duOZ3/xH1n/piN5bP/yN9l+05GwMQVdQoNYYWTZjq+wbMfN
      16uo3PoYlVtvOvTV/83NP+8En+ro0IlYhIHLh3n1ZBsU3c2Xty54Yx+xJB+IjzI6dGDCybRE
      QYpWw/vsgPuh8ekuoARCVKYclt9dSFp29i3vPZzkk4HCnPI+2+p++HyqBSAQirDklGP5uA1J
      8qklWWQmmdO8aw0gEokQCpP6mGsIBALE4k91w2BWvKcAksw95poAkkV8kjlNUgBJ5jRzp65L
      8uGQCDLUVMOZhi5CMgsLV6yhPEdL79k9nGmfQqjLYd3dq8hVx+msO83FVgeKrEq2bl6I5vXi
      NxEJ0NNwgrNNQ8QkFtY+sJNC2RRNF89S3+3CXLSMu1aWoRUDiQhj3fW0OlUsqSxHJ3tP697H
      9sjsaoBENID98jF+/p//xr/8y7f5n6depXsySGLqMr/8wX9xfuiNayMeB0f/8BsONvbTe+b3
      PPGbkzhvnI3iaD/FT3/9AoMTb7i0JgJjVO85+ekJPxi0s+9n/87//v7PONk+cUdvHQ35OfLk
      f7CnupcPErA96Gjn2Z/+mpMDEx+qS0Z4rIsTLU7yK1dTapzizGsnGRpu5dQxJ/lrlqAcu8SJ
      Bifu0QbOXhgmr3IBkYaXOXH1jfce9I1y+XI7too1pPlqefl8D6MdDTQ7RSxetgB306tc7HQB
      EPI6Obv3aU612gnc5tLl6PTo7GqAiZ6zPP1SPYs+/xX+qkDOpb3PU1PfjrkiwNiQHW1/LyZv
      BJnJRrZBz8L1m4lrLcycHWfUaSASD+MeG2Vsega3fZghp/cNv/ywj44zL/P0URe7F5dgtOrw
      TziY9IWQqY1YrRaU0gTTDjtj7gAJiQpbRho6+etZiHmx9zlRpOZglgcYHhxFnJKHgWkcY+PM
      RARoTDZSzQpmHENMRDRk2RRMjo4QVqaTqvIzOjwFIgiEYmitmaTqJcxMOBiZnEEklYNAgMVm
      QyuXIIgFcF6p5rUWJ6v/6lGWZGuYHOlnfDqASKHDmpqCJuaiw+5CJJIg01lIM2sRCyEamMbh
      GMMbTKAyWrFZ9IgTfkb6BvFEBKhMqaSohUyN2XEo+ukyhpArzGRmWpDGg0w6Rhj3hpAoDaSm
      WlBJwTsxjGNihrhITkpmJvJIgAmHE2Uo+u4v9A4gTS3n8UfLIZFgUuml09lBdKibXkMBD5WV
      Yu+s5rXpacQSDSplglAgQEKmRqt4w1c2FBrBM53GonllaALpnO6Zwrh1E1+cP8NAewuxhBCp
      VAIxP10XjzGiKiNdffu2i/VZsxOAo7meoLWMefk2ZHJY/fBXWQ0wUU0kFKCz8TyT3nb6JZX8
      X1+u5MQzvye44vNc8xRJ4B9t4fAf9jNlzkYdGGI6ZH7j5iEPQ2MugiEX/Ve7UI14OXu6DZVZ
      i3/KT8H6XaxPd/PcU3uZ0aQh9LhQl9/DF7cvujabGHXx2h9+Cpu+yedzevj9jw+z+Ov/hLHl
      JU72hDBpwT1j4u7dG5g5/CQvjFfy7a8UcuiZnzNS+nW+XNbOb//7HNalFcQH6/Hk7OQvt9g4
      /9yf6ZSkYxNMcaU3zOf/4W9YkWWEqJ/hkXFCoRBjA+10JfqpOXEeTCYiHg8pi7dxn/EK333i
      JGWVd1G1cgUpRi1iYYihK8f57f4WbOlKPOF0dj56H5qBIzy5vxuTWYw7buP+3Zsh6mO4u5m6
      qQs0Daj4wje+QqazmmdfuYTCZsY/PUP2ivvZnB9kzzN7GBdZUQSciIq2sGPRR9u9i0dnsPcP
      YMlbglXbSfymasfv9yOIK5BIEvR39CEwpGGQReGGw3icm71uYn4/IUAe8zDQ2UdUYkIQ9jLW
      2UbjdA5rK6dp6L4zds/qKYnEIhLx+Jsydx2xTMn8tTt4cOMCYj29ON52RYTRrlZaQ2ns/twu
      1i/KQXlz6po0FpfloNPksnJNPo6my4RyVvOFRz/PyjxoqG6k+fQB2mNl7PqLx3n0rkzaTp2k
      y/v6/2UZrNuygIkLe9hzsAFxxT2UK4aoaRqleM1OHv38btJnmqhp7CPwLn4nIqWZitVb2b2u
      AGdfN92d7TQ6ZGz53G7uXlGM/mYHf5mJRQsK0WpTqVxVib/7Ik7tYj7/yCNsXGCgueYS49Mh
      xCo9izftZMPCbGSia49cm1bI6qpylPgZ6G6ja6iLuiPnES58gMf/4jEeWL8AvVwEQgWZ81ez
      64vbSJsZpKdviKaai0zZ1vD44w+zrlBG7YUGemuP0eLKZOvjj/P4tjL6zh2k1fnOebzjRD20
      njrMma4pUgsWUbWkCE1GNtl+B07PDNMeAbZUE56xToZnUtj84IOUcpXzHa4bt5BKbeiNHqam
      vIyPuzFnWZluvUR1m5+l23awODVIT68TdLms21SJ6U71XGOB2dUAtoWrMTWdpq6xHVm+nLoD
      LzGasoZdlSAUilCrtSiQIRIk3mHbJDFqnQ510E6PYxyJ04kvrHzTFUKhGCFhvME4OoMGT/8A
      ow4jwyPT6G1WMrP9CBr66OkfQd43hsycReqNW4hIL12P9ci3OdyZx2P/XIpZ4ceiimIfGsKh
      jzPiV1JozSYdNYLucfpGtLjc3jcslMtRyeWoVUpIxFCq9Wjw0DfkRDjuxPvOkd9BLMdothC+
      2ofdkY9zeAJNyiKUiglEIhFyueINZ69YAHt7HXUDGrasXId77DWiESnWdB2+oV4cw1rOvNZA
      zradIJKiVCqRqkUoBRAXKbBYTPgbO7E7rAw7pjCmlmPOkiA510Z/zzBhux2hIR+bHq7O5uV+
      QKYH2zh99jAdUydQycSo85fzyM5NrF10nqf//b+Jm+bxhc1pWBQK5rXv4cn/+A8UmUt4eKmV
      8eYjnJ/OZMuSbErylLz8i+8xQxqPfLOA1Lid9lcP8P2XnBhyl7N9ZykWowwhUYaHZCjk4tt2
      oPNPDL37ovh3QqG1kpsmp7PuLOcutUNGFZvXLyVVGsQxESJz3iJSxNOMeyUUL8oHtwdNVgE2
      WRCfKI2qtUtIZ5LaC1fwSlOwpduYV5SHRnFNh1KFmOmJfgbsAhZtWIM10MXp6isIsleybfNy
      MvOKyRSMUlddxxBZPPjIVnJuClkuIsGUvY0eZRkPrFmIyaAnI83CRHsNF5vHKLrrQTZV5ZBq
      0TM+0I7dEUBlSiUtv5wiS5xpr5TckgJ0TOMI6yhfkI9o9CqXmvvw+ON4w1HKliwhQ/f6SqSQ
      l+FpAYUViyjJy0SfGOHcmUt49OVsv3ctmXI/gx4x8+YvIOX6fhpCGSazntBoGzXNA9gWbmb9
      soWUlBfjbz/N+ZYRTAvuYn1ZGsGpMVTpZeTaZLiGvJhLl1C1uBBtqJ8Tpy4TsS1hx93Lycgq
      JFs1yeXqWroDFu5/9CGKVWFcU2GsxUWka2595dTU1BR6vf5WPwnkhgyWrtvCvfdsZuPGjaxZ
      XIxeKcFaVMWGTZvYuLKCFI0MsVxHfsVy1m/cwOrKEvRSIeKYnykMZFhN2AoWsG7DJjZtWIZV
      LkSkMFBQsYz1GzawfFERRoX49TwI0VoLKC/NQ3Wbe7lL1KbZhUf/ZDPDlVdf5rXGPqwrHmLX
      2tKbdqT8YISdzTz9uxdxGvIwR91MSrP43ENbyTbIP7OxpD/K8OiByXG8EgVmjfpjc4f+DAkg
      jKO7G1dcSWp6GgaV9PY/0niIydERHC4fCaEEXUoaNpMG8cf1tj4CPkoBfBL4DAkgyZ1grgkg
      6QqRZE7zntGhk5XD3CORSMyp6NDvuT/AJ31NcJI7TyKRmFP7AySbQEnmNEkBJJnTJN2hk9wR
      IoFhLpxoJH3ldvIN146FXIOcu9RNdmUV+XoRg80XOHOpk5ixjG33rcXy+kRWPBKgt/E4Zxrt
      RGSpbHxgB/kyN1eqT3OpaxJL8UrWr56HTgzxsJe2ulpmzOUsKUq57Q94djVAIspE53l+89//
      L9/5v/+NJw80MhVNEHFd5cCBS7x/TGQfjS/9jB/ubbrlJGNhL5drTtPcO/m+13rt1fzs//lX
      vvPrAwy7g28+GY/Qd+FZfvnHIwx7bz7ho/Gln/Prk/3veE/7+af52bPVeG7Z4rlGgpCrh1f/
      8Dterb2K63V3kUTER9el1zh0opkJfwSvs5uGlhFK79pOueQqp1vfeJ8zrlbOnx+maN121qaM
      sud4C/buZrpndKzbuIpgxxFqO10Q8XD52J/508vnGJzwvYO7zeyZnYBC07ReOsOQbhV/c7+M
      o+e6GOi3Mn3hzxzvzSKjJAWt0E9CnUWWJox9cAK1LQOTPMJgTz/eRJyRsTFc2jDxaIDJkSEc
      bj9SnZXMDCtMDdI/GUUhCOANS7FmZREZOMOBvedIX60lw6ZFr5AgIEF0xsXA4Ai+iBCtxUa6
      XkD7uXN0xUzsWLMMs+baLuLxsA/H0BAT3iAuxwRuj4yo10nrwBgCkQSZ1oBt0QbWSTU4B7vx
      y1PIMKlw27uZkVsxFK5gY5oa0Yyb3lEnAkEC70wUrSWDdKuOiNtO7/AUEpmcaBQsufmkKK+v
      p44xMdDJyFQYZHpy89JREsI5PMi4N4ZGLSeMksysFGKTdvpGPYjVRtLTbWhvTP1/0gkxMugm
      d+NqRp+qf/1YApe9id7hONasax6/nvF+PPEUxGEXkpKtbM033bhDZHoCv9BKZk4aKQE9rmPD
      yHbdy0MlXnpamggmZCgVUpjoY8JQxbKSY9wpJ+9ZbZBBPMrkUCetXSNIUsq5+5612ISTNDfW
      0DUhJNMgpO70Hq6ES5ivsfPcb18mlFaMfPgkz7zSSEAUwdHTx5SxlMXaUY6+dgmnz0trXS1B
      XR7Cnv38+oVLII9y+cwpuiNWrJEu6luHQZtBcWHGNV/8kIuG43s5UDtMxDtE4+VepCYVjpYr
      dE/GsOUVkZNqRCqMMNZRzfN7zzIVjuEe6sYlSmOh3smPf/tnnBEtOr0Y+7FneXXcgG7oFEe7
      BJTmSDn21O/olxagGNjLn85HKLL52PvHZxgIy3C1neFcd4icbDUNe//Eqd4QTLZxYN9ZpOWr
      KDS87p/kbufZZ48zGRin9kwN4dQyDNMNvPTyaZyBOI7GIxxrD5GbJuLMgeMM+X30NV3GiZlc
      m+FjmXGe7QYZIMaQmoZOOsnl8/2kLV2JTWjn7Ml2bIsW4HeOY8ovRDl6iTMdbkQJP92NtUwZ
      iikwXyukECUY66inpceJxz+OY0hOxV2l6KLTdDd3MxkATUoGaXn55BnF9LdeIWIuoSTTcNt7
      T8yuCSRRU7r6PnYuTaHl2HP87ul9DAgymJdjQptawtIleaje9icfnfVNCEo38dC2uyhJ1SKM
      BrG31VHb0klPTy99nV20NPcxA4gUNpbdvYnlBRrGhiawliwh3WymYnHFDSe04Hg/NXVOiu7e
      yoP3bSCDfmp6BCwoS0ebWsSCefmopUDUj72rjYCpgq3btrEo33TjgYlkSspWbmFVRQ5KMQhk
      WvIK84mM9jAy0EifX09BYTbym79BkY6CJWvYtL6UhHOEqb42arrDLN3+IPesLMegfEuFKjNR
      UJyBLDiDZ6KXAYcfZ1crbm0Jd993H0vzjUCUkasN1LdeZaCnh77uVmqbe/GHP71D0L6eWo5f
      auTwK3tovFLH/r3VeEUKjKY8Vm/fwZqcCI2NfVxfEybX5nLX/9/emQdHed53/PPuu/e9Olf3
      6kQHSAiQDEKYw8IY24Dt2nVjx3GSJk7bSeOm7WSm006n7bTTSaadTNPpkSZNUh+Jje3YhFvm
      EgiEEIhDSEhCB7oROnZX0t6779s/BDE2YCNsg4nez3/aZ/d9n1fvfN/3+T2/a8smqsoKWJDl
      RBPnwAygTaJi/cMsS4vS2dLF9OfgnpjTEkiWYsQwkFu1mYJll3jlX1/nVFspZdfGVQJqUUSO
      SUhSlNntZIloVEalFhFFNRq1CkGWiUXC2AuqeO7ptRjDXkRrEtOnTiMYLFgMGrRaHeL1byBZ
      nn0jCQJSLEZMUqHXq68eE6IRCW7ID5WRJAlBpUalElBrNb9dVqgEFTq9HpVwLeFQjTO7gHSh
      k9rai+B6nKI0HWMt1x1Oa8Bi0CCKRnTyOMRiRFGh1apRR9Q31FFyt9ayo36SDU8so+DyEDFk
      5JiEoFYjiiIajRqYdTxJ5gL+4I++jD0wRVRnx6q/fzfozMWb+Lt/2Ajubt7ceZrcdctIM/ST
      2NnJYO8AXncUZ04ymuAM05IGIdDFoV2tZD64BHdLP9lV1UyfPsSxcS0lhel4giocziSMarhp
      O6JPwZwEEAt6OLnrNU4HUlmYBX5DKmlJNsySFckzSOdQBgnJibT1nKJZDDFrh1rIL83jZH09
      tfZMBoY9xLJ1OPNKsHZ0cqa5juGzFynY9BXyrp1IgGul+1WiHqM6SG9XL+O5dhJMOoxJmZSV
      mGiorUOdEeNSMJllC1NQD3z06oykuvJQ1Z6n/mgMf8cwYXXaLa9PjMtk2QI9P94doHpDCXYV
      jH3cPyQph/LUEzS9vw/JNox75sPZu+GYhBiL4J0Yw+MPIoTCxOfkYWjvoOGIEeHiZSAZZ242
      uWdqqT98DGGwE3PZY2xaYbmvtuhEdRz5ZUXEG0Cl1mFS60BOoqAwH2ecGYethMpyL/VH9iEn
      rWJzZSozPfuoG09nw7IcFi3q48jBQ+gyVrO5PBFjeBGTDUfYt7sVR/Yy1q7IxyBATNSSlltE
      KNH8mezhz8kGUGn0JDhTMREmFDVSvLyasgInVpsDs0GN1uSkoDCHOE0M0Z5FcVEuOa5MMnJy
      cWhjRFQ2cvLzyc/Lpygvh5R4PcGAjKt8FRXFaRi0OhzJ6WSlxqPTmkhISSczJZl4uwFEE0kp
      iZi0agSNidSMNKxCkKBgoaiiikWuJPQ6Pbak2d/rRUAQMdsTSbJrCIYlnAVlFGZnk5GWjCMx
      lTxXBja9gFpvITk9i/Q4K2abjbjUfBaX5mJWg6jRE5eSiSstAbsjkYz0FKwGI1aHk3SnkeH2
      80yIybjsMn0D02RXVZFrnbUBjHEp2IwqRL2d3PxCMtJSsMtXaO8eQ29PJkHtoc8fz4qa1ZRm
      xBMJhEjMX0LlomwsOvGeGMFztwFmEdUOcooLcFxf7VZrJtOVQZxRi6DS4EjJoWzJUsoWZGAQ
      QfIHCOsdpCY6SEjPZ/HSJSzKS0ErCAhqI87sQpYsXUpxbgrGq90wVGodTlc+6fGmz0QA93V5
      9HtO1E39L/+H99pmMGtAzKjipS+vJ/mjtsA1ZInJ3kbe+tV2+oMaNGodxTXPsXmFiy/Kiudu
      lkePBgOEVSIGjZYbmvXcJRQBfCpu3hZJuOXdvEUbJUH4wmx53k0BfBG4n5aZX0CEOT655vp9
      hc+bL8iLV0Hh3nDLN4BGo1HyAeYhKpUKrfZTZpvfR9xSAIIgfMxaVuF3mfnUF2L+XKmCwk1Q
      BKAwr5mTAKIRH5Njk/iCESRJYsY9jncm+JmEpc4NidCMh3H3DPMneU/hTpGlCL7xVn72/X/i
      2OD1I9LcBDDet58ffPdveeVgGzN+Hzv/7a/5+a4z9yBW3k/Lb37M3/1wO+67fm6F+4sonoE2
      DuzeSeuQj/D1T8zY1B34AcJXaDp4jOULU677UGLs4nEOn+gmoLZT+EA1i5Og5XgDVySYmvSg
      TyxixfLFJBgEQGJquJOG1jFKKyuIdR2geSqZquUFDB85wGT6AxRpBmk83cEUZoqWrqIsJUjD
      vmOMylq0RgPCtATITI920nysg8SlKym0+mg6fJS+KTXpi6uozjFw/ngdPd4osYiDlU88RNr8
      2eBQAEAmJtoo37iG3pPvfXgoEpq7DWCw29G5W9lR3/1B44WJs7z26k7GjDmkCYP8+hfv0D09
      TUdTLUcuBslIFajftoOTXdeygATEyDTtDcc5NzbB6b1vsG1/A/09rdTtr6d/ZIid7+xgVJeG
      y3yZHW+/y/nefk4f3s/xATX5BVlYtAKxsIej77xG41AIk0nPhQNv0uSx9inVWAAADTRJREFU
      UeKMcPCNtzk7Pk1H016O9kbIW5CDWen7Nw/RkJDuIj3h5g0F5iwAdWIRj6xdyOShd2m42hRl
      oqOZPl826zZXsWbNMmxTTTR1AdjJKSqiqLySdNMMU9NexocH6O3tZ1rjICcxTNvZo3T0GLFr
      JVqP1dMt5pNl72YwmMbKygdYsvxhUoLttF8aIQJklCylMDMVs04gPHCEfW1hckqX4nKMcerg
      BVqPv89b+88SigxxeQzARHpuAQXFLqyKABSuR6O7k10gkYyKdVRnhxi5WoNeb7WhjnkYH/Mz
      5Xbjk63EWQAEVKpZf4JKBYQ9dJxqYP+BOs4OSrhykhg+eojJjBWsLNBw+kQL+uIy8vRm1DEv
      EzN+QtNXmI4ZMBkNqADhunACjT2f6nIn3aeOc8mtwuQwUbjmeb733W/xxOPPsiSTa7/4QsXb
      KNxrprjY2IFHNN9hLJAujdWbVnPk3F4ATLkrWVfWzf6f/4Rjso/4yk1UpMD+j/5O72TlmqWs
      vPpnsHcI884GhIVLWOhs43jUROkiFwnpaVQUdHFs2y84KYTQFT7E0jwzvR85nDq+kPWPFFP7
      6jaOn19CxbpKevZt5ycXRaLJlXy9MOGjM1CYt6RS89zvERcPIDPR1ob0wIK5FceNhqdxe8KY
      HQ50QojxUTei2Y7dZiDmczPh8RMT1Fgc8Vi1MOV2IxtsWAwC3nE3ojkOm/G6NivRAOPjbjAn
      YBNDuN1+DAkJWDQCIf8UHu8MEdRYbPFY9TEmxybBkkS8SUXAO4knpCEx3oDf4yGssWLXS3gm
      3ARjAgZ7PHEGFVPuCaJaGw6L4Z6V4L6fmB/FcSdo3D9IyUNlSnVohQ8zPwTwAYonWGFeowhA
      YV5zSyNYWRnNX+bTvb+lACKRiJISOQ+RJIlQ6E5609+fKEsghXmNIgCFeY0iAIV5zZw8wYGp
      ftqae5itLi6gsyaRW5BHollzQ5iBFPEzNuFGb01GNdFOh9tKcWkmxhsPe1PCniFaO92klxeR
      qFGCeBQ+B+TI3N4A02Mt7N1+iP7J2fLm5/b9mgOnevHfxFaeGmuhdnsdA5NhuBo3Ope9hdBo
      O7vefp++0Pxp2KZwlwm55x4LpLEmU1pRTZlTwHKlhYMDQ/jCGfTWvcX2xktonKU8/kQF7a+/
      QX1niJaonReyL9M4mo9RvMjBHaeRLQLWzDVU5wc4uOsII1ErlQ9t4cGyeC7tf5O3Gy/jsIhM
      hpQnv8LnRyzgn7sNEAtOMXjpIm3tLZwfCpOVnorYW8vr+66w+LEaUn3NvLprgBVP1ZCXvojn
      Hl+DRZ7i8tgUgcAUo0PDuB5+iWcrDBz5zREiBdWsKVFTv2M7546+zy/39bH8hT9mw5I0NPOo
      XafC3UeKxeYugKjPTU9bE7vfeJ1ufQmV5bn4hvqZCXrp6+xDcBax0GX7mCMk4nRqCPqm8biv
      MNHfyYDXStHSYjSBSSJyCplZNpKSkjCbNB9zHAWFT4fGdAcFdnXxWTy48Rmef7YG/eUOOi6N
      YYyLR2ewUFq1hvw4DUbjbHVhGZBkCfkmq3+dwYjJZCK+aDU1S51oojK2RCcaYZShwSnGx8fx
      +5U3gMLniD5ubgJQqXWYzEbUai3JhWtZX66j+UQTvvQatizWsOdn/83eLoncDBtGcyZO/SC/
      3lvPVESLxaRDrdFhtprQCAK6pDzW1zyAv+F1/uudM2id2aQsrGLL8jgO/PQ/2NU8gmi3oVGK
      cyl8XghapTq0woeZb9WhFUeYwrxGEYDCvEYRgMK85paOsGAwSDj8GbfkU/jCI0kSMzMz93oa
      d41bCkClUiGKiid2viEIwry677cUgNl880paCr/beL1eHA7HvZ7GXUOxARTmNUqTPIXbIIa3
      r42m9kEESyolC4tItmp/GwIvhyZpPXWG/mmB9PwSCl1JTHcd4/jF2drdCYVVVLqMXOlt43zX
      ZWRLBhWVC7Fdi3SRJfyTg7S2XGA8qGPBAyvJccwOhiYucrZbRXFlLuaYh5b6Jvp9UUzJeSwp
      ycGi/4R+ynKEyf6LnO/swy+YyS4qJTfVxtW2w3MUgDxbarquroE+dwi9I4uK6moWuuLRfCqH
      bZTRjhPsa4/waE0VDpOGwNA5duyrZ9hzXThEZjXfeWLJTVo3RZjobKRPX8mSzBvLP4+e3cPe
      bitPPlXF3FtAK8jeXvYeaEafnoL/wnHqQzo2PliISQQI09e0n8YBIy5bmFMnT2Cx13C5YTtt
      4lpWuIyYdWp8kz3UHTiCnFpI+MQ29hiSeXZJIgBSeIbWpsN0+OLJ0Haze4+Nr3ypDNXIebb9
      6i3aAktJq8xFfek47zWNsqJIx4m9BxAT46nOjPvYuUc9A9Q3nkaypqD1tfP+ngm0Tz1OtkMN
      yHMTgHe4ha2v7cCwbCNPrktiqHkPu3cdxPrso6QZYkQkAQQRg0Ez2wQ5JiOIWowGLXIkSDAq
      gywho0JnMKJVSYSCQUKREGNDPZxpi7Ju9QOABl1iHg895uRK23b+b88EG55/kaJUM8gy4aCf
      UCQGKjV6ox48F9n51nuEV+VR7ExAJYUJhaOz4wYDvssXaT6fwKOKAO4MUwYPP/UUGmY45emn
      zx/4oClK6Apn22MUrllMSbyBUkmF1TLJiQGZgi2VlGZr0ev1hMZlwrIKV+4CQsP19AY+iDII
      +sYZGQlQ+NAK8s1hCmUzRv9lGtu95LoSOXNh9nsjna3oCzexbrUWb9cuJryB2YCzj3n4ipZ0
      1m7cgtZgJDSaxPiuOrz+CDjUIAfmJoDhk7X0GxbwhyuWkmERyEh7ieUAjPPG3/wVhwPpuIoW
      88SDyRx4u5aJcIhxMnjxG88gH/0xvzgHOUkC/b0+Hvzay9Q4R3jrf7fSrXJgkTxMxXJ/ey6V
      1khcghHJbkKr8WFPSCbZAdNDZ9j2zg66JkGQVZRvfoYs72lau0cJRN7kkLqaYPth2i77mJmO
      Uv3cn5I/l4tUuAFBrcNu03Fh96sc7ZMoXmlGlCQQVeCbZiw8xuU9b1LnCeNYsJyn1qYgWNK5
      dOCn/MgvUrBmM5tLLKTaRI6++xqiYyEbcs1IzBqh0egkI11DdPl/zr4xL2lrv8Yzq7OoWpvK
      zIke3rkqgEg4jKhTo1KJiKog09PR25i7FotFC3KUoeFLWJzlpCcYZgdj0bkZwd5xD1qDDYNe
      wN1xmK1bt7J12yG6x2aQBQ3JC1bx1Rc3kakHU045y0qyEEc7uXAlAEio4/N4/IVvsiLRS3tb
      FxfPNXLS7+JPvvNNakpTUN9G6NGlE3tpD+fz/Mvf5YVqK/U7DqHNW0JBRhzlG7/GSpcBY1Iu
      FcsWovOP0tU9yPwp8vH5UvTIt/jq+gK6zzVyZeqqj0gQULlDJKz5Et9+8RGE0Ta6vYk8/fK3
      efnlP+elmlRONZxloPc0HRNOnv3O9/hS/hjv7jp3NbUWIEZMZ6By4zf5s68so7O2jsHgjefX
      6nTXpRUaMJlu8/ktBxhsPkLzZT2LV1WSoLv6udo6NwHYEx2E/G78ARmdI5VEg4+TBw/TM+5D
      VonozBaMGnAPddHXP0xEa8FsvHY2DTabHZMxHoddQJYj+H1BYtYEkgw6rDY7htsI/5+emMLo
      SMJuM5Gc7kT2j+H1XRuNMe0eoavjEl4pnsSPS0tQuG2iV9rYWnuC6XAMBBmDTv+Br8CSgCtR
      TzgQRZaiyCoV2qk2tm49ykRUIhQKozWb0alF5EiQaFQiGpOQ5A/K1et0aaSkaQmFwsTCYWSt
      Hu1NXBHJmVn4Rkbw+mbwCDoSrLqPXf7MTn6GC4f3cXRExfJVq3DZrxNNaHJuS6DUZQ+Tde49
      6uqPs3ZRMkJgipjGiO5DSethRi91MR7IIy7RjCgFiUWvf7Rf6z+sJyktBUd9G/Wdhfi7L+EO
      fnIUYkbxAgL7ztNyxol0qhVbbhWuZJFOtcjU5DADEz30e0XKU3QM+VTIsdg9aOL3u4UY72KZ
      YSf//s+/QbLnUPP4FlJsA7zzLy1U/uVmqp9cy9tvvMYPJtWUrXmMwuJsdKO/4j//fheSfQFb
      fr+C1ASJirxtbP3hPyLFLeT5ry5F1VvPK+06nl5XyvKqcrZv+xEHfVZqvv4N0q8+DAW9lYS4
      2Tr++gUPsrz+Z3z/hzMkl9VQmGj/xLlPj/Rwoqmec6Nw9thejJmLefrJpXS92kzhXzw1x+rQ
      cgzPUDsNRxrpmfAhGuLJL6ukYlECrTu2MZ6yivVVOQiXT/PGu0cJW+yYoxFspRsoDjdzOpjF
      2qpFDNW9Qo+pmvUVDi4c2EtDrw+7w0JY7+SJmhXYr8sEmx5ooPbEFMtqNpBlg1jQQ9vx/Rxv
      G0WwZfLQpkfJtvhpP1hLXY+XvEVLCPc00uMxkJ6kRXYUUxI3QmOvhS1PrlCM4E/g9qtDz9C8
      +zTpG1eRdIfnkrwXqesUqVrsQqe5my4pPy27m4jbuFopj67wYW5fANMM9UdxZjq408AJaXqC
      0ZieJJsJ8a7mPfkZ6vfjzExQBKDwYeZbf4D/B4QRn8qNZ3GKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='ActivityFullTimeWorkers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across Income' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9Z3Bc17Wo+XXOAY1OCI0MEIE5ZzBJIkVly5Jt3Wt7fO2b38xUTap5NTV1
      Z/7NvDc1r+r5ju+78rOvbEuiLFEixZwTCJAEA4icM9BIHYDO6Zz5QSpQlkyAFEUS6K8KP9B9
      uvc6q8/ae+29115LIoqiSJo0CxTp4xYgTZrHSdoA0ixo0gaQZkGTNoA0C5q0AaRZ0KQNIM2C
      Jm0AaRY0aQNIs6BJG0CaBU3aANIsaNIGkGZBkzaANAuatAGkWdCkDSDNgiZtAGkWNGkDeIoJ
      h8OPW4QnltnqJm0ATzEzMzOPW4QnltnqJm0AaRY0aQNI892SjNI9MIzwhJzElT9uAdJ8d8Qm
      u3j3w3pe+PsfYX/A7wi5O6jpjlFpnuRYp4q//t7mWX9WTASoOfAun9T3sWrXWzxXIeOTg6eI
      KDJ58fVXkA1c5kBNJ5aCNexaAu8cHeXf/eJVtMpH10+nDWABISTj+LzTpO7+n4oHuXn+BA0j
      MdZsf4Z8sZ+PTtzAmLuEPbvW0H3pINf7A5St20X10jwkcT8XD+/n084EqW2LGWjp411/M9Zl
      e9hQJOXCydOMRgzseXUHE7Vn6YvImAkmqH5+LyU2HSn/MFcae7GUr6YqW4dMpWLz7ldoOPgO
      vSNDjJ6/xfo3fsLtD96nx7KIKY+Pzvrj9EZyeGnXskfysKZdoAWMt7eWP55uRRYa5KMPjlBf
      d4H+oIBnqIcxr4cLpy8SE2J0dQ8gACjNLF9SimvZNsrtctT6HJ7fVcX5U2cYGR5D1NuJ9p2n
      tn2S0e4Oko6VFKR6qWkZAkBuyad6bRXjNy5yvceN3JxDmTnOlNyIKhYnEAOtwYBckiAaixN1
      3+bdTxsorSx+ZD112gAWMKlYGElGPtuee4FXnt/EomUbqLCqcA/1MOSJsG77dnTxGXob2vB9
      /inx7h8oMiyYTQbUQorhtpt0+yDLZkQCSKRSMiwZmIx6PnP3hUSSDFc5q3cuZaCmjoGebgbi
      mazPl3GrcwytQiQSDJESFaiUSpKCHqspxciE70+F/5ZIG8ACQiJTIJdM8NHbb/P2O/vx6stZ
      ZvZx6Oh5PHGQxmcY80ZwuIpw2YwEPBOEBDUlS8vR3/0OtTULsf8a3dMKjDo1EokCo1GHMdNK
      zN3FZFxDKh5FozeiVkhQavXoVHf7bzFOx81abt/op2j9RgwSLyf2/4Erbi3bqtdSvXUplz/c
      h7xwLUXZGeRULud7uzfQd+s2wUc0Z5akE2M9vYyNjeF0Oh+3GHMjEaFjaILSwjykEskja2a2
      uklPgtN8tyg0LCrKf9xSfE7aBUqzoEkbQJoFTdoA0ixo0gaw0BAFwv5JvMH417wVx+8PEAr4
      mYl86X0xhc/rJRIN4Q/MrwjUtAEsMMRkhPMn3uXo6TYSX3lPCHTzx48u4PF48IW+ZACCgGdi
      EnfPNQ6cvf2dyvuoSa8CLTDC027i+uXYE60MexZhnLjMb4+1IddoWO5S0Njpw5XpI6yzcmZC
      xsvV2Xx8vgNNMoBWMUF7r5p9ni6WfO9VJo99gLn6L1mepXrct/XApA1gQSHgbrvBtJCPNhmj
      pbuXjM5uNr35c6q0AYj0caNvFIsuQTKjCOvMbbr7BfIKi/F3NZBVXE6BysyexTHO3WgiLClg
      lf3pffgh7QItKMSoh9tdEezGGEq9nqHOftBJ8Hr89Lc3MuyLgSAgiiISuZriDBX17f248l0A
      SABREDCUriLaUIOqMB+D7LHe0kOTHgEWELFInMIN21hZUQAkyWu4jjpvDbdPn6TfWs7O1cUs
      aa9DZbNQZDexqGAZk5pSirL0xKqqcObZCE53MpU0Y87KINf1lO1Cfw3pUIinmMcTCpFitKmG
      +gkDz2xbgVb26MIZHoZ0KESaR4SM7CXVvPy4xfiWSBvAAiLqc1NbV4c/CmqLi03rVmDSfPEI
      iMkZOjqncNhVTIWVlObZHqO03w1pA1hARHwj1A9F+Pnru+m6cphzN83sKlPTPTSJKsOJNd7K
      voNDbCxJ0Bwp4e++t5y+nkGkxizKcrT0dY0SlytRqlKkZoKIphxK82xP9UrK0yx7mgdGRBQA
      McXU5CQz/kFOHzjJRFQglRIRhRSpZIKrpw9zu7uPuuMf09Lfy0cfHsHt8XH0/ffomxrh1MGT
      jEcf9708HGkDWGDEJvu4cOEifmMV25fn4h0dYMQbJB6OoM7IxGyy4MhyYMkwMtjfSyyawJSV
      i0KIoTU5KS/LQ6aysGzTanJlSSLJx31HD0faBVpgaHOqeO21V+/8E5umt2cEXXEhSrWPpERF
      KuAjjpmQz8/SPBcjciNiYAqJIu/xCv6ISC+DPsXMdRk0EZlh1BcjP/vu5FZM4R8fwR1IYdTI
      MNnsTPaPYnIY8E1Fyc7WMzzoRqqzUZilZcQdwO60MOmewJ5rZ3rUgz4rC80TuBk2W92kDeAp
      5qk8Evkdkd4HSHNfUrEgnS2NTIYgu6SKIn2YljEJFaXOR/Zg+IbbaOyZACRkuhZRWeR4rBPR
      tAEsYEYbz3OpT8mWEg03ausxL4YDZyJoNCuxZ9rQEmNsyoso1eJ0GPBN+EjJVWTopEx4ZtCY
      rFhNWuayFzzSXEtzoIhdi43UnzmEwvhjHOIUMzEJmTYryZCfcCyFXq9lxudDqjFhsxgI+yfx
      R0SsdiupwDShRIyUqMJmtxD2upmJSrDYbOjVijnpIG0ACxiFwUBsvI2R3E08u6ccg/sCU+O9
      XD0zjOjYyLOlEtp6Buhp6mLL93Zz6DeHqdqxA6mnjZRaj98Du7//KnbNHBqVyLBk5VFaYqW9
      toYZdweXrzZgNknBUo60+yRTzvUsVg9zc0yHIuZjbfVabp2pQ2uUQ+5ibF0XaTGUIZ/oY82L
      e2k+eBSlVY80aw1v7lwyJx2kl0EXMM7yav7h739MljjIv/3LbxgKgjN/GVu3LEOIzJCMhvB4
      fQRDU4SioLPksqwih86WBkaHJ0nKEoTCf3qy7M+SitJw9gD/9Z39aJfsJS/eTtPQOFP+MMFI
      BBI6lm1YRWVFFdLAKEqLC6l/BGnOKl55Zi0TfQMEiVG5/kVWlpqZCanJz1HhDUlw2k1z1kF6
      BFiwCLTXHKY1bKUy14nLHrjXlRFT9Ld0gLkAm3GQZPLOgr9CqSbbWUjW6hUEBibRaJRza1am
      ZvmOZ/jB5mIkQGx4CleWyJJKK96E5u4pNZFp7xQFS9Yw3t6AJ6+S+EQ3N5oU6KxWNGOdX4gp
      zBCX5lKaHaCzZ5DqJXNbrk2vAj3FPOwqUCLso625FV8UckqrKNJHaBmTUOSUMuYTsalCtPZ5
      yTCrMWQ6mJ4MUrgon6RnkIaOYTLzyynPs85pDuAb6cYvd1DgMNw5XyAmGWhtYCQopay8goi7
      H21BMWYxyO2bzYjGHCoXufD1t9LnFVhUtYikuweyl6CY7iWpyyY50UbfZJLC8ipyM3Vz0k3a
      AJ5i0sug38wDG0AsFsPne3TJSNN8e4TDYbRa7eMW44lktrpJjwBPMekR4JuZrW7Sq0BpFjT3
      XQWKTHXxh3c/JYSaVbteInvmJoeuDWDOX8H3X9hMcqKZ9z88z+bv/5z8VDvvH6whLs/kpR99
      nzzjF5sSMf8gBz46xGgAdrz5U5Zma5hqO8c/Hx3mv/3bt7DovhBlou0iB2s6CHpH8CazeHlX
      GQ2N3QSmhhgWS/mblwuoq21nxjdCr1jI//6PPyJD9zUbIPEgHX3DZGYXYTUo8Q53MkUmZbmZ
      91VMYmYMd9xAnlX3+WtCIsroVIDcrKf8oEhyhmP73qc3KFC8ag9LVP0cqmkiEFbyw7//G3K1
      EHc38c7hK8SCPqKmxby+QsORK12Ub3qO1eoh6kJFPLsie849qCik8A43sv9EK6++9QOSvTUc
      qulEY81j1+osDp+6erfNpfzjz3ajFhN01BzhVNM4KlMWL+3ZxNVPP2A4oSCnajNrtKMcutYL
      Uh3VL7xIudMwJ3nuK79MZaL65bfYUiLjen0T58+2sOOtl0l11dM9McQHv/0jnYOTJJJJWq9e
      QL9kDysyJqhrdt+pKnKX0Y56xtSVvL7WxJmLrQR8Ixw5fQGfP4jwFSfMXrGFv/rpG2SrpZSu
      Xs/ytdv56Y/2YtfqWbF+JaVVW3jrhy/hNKhYvmoNes032PHMEO+/9x6XGgcQhSAXPnyHDy80
      IyRjTPu8eH3TJJIJAtMz+HxegpE4YirJzLSP8daLHL89Rioewef14JsOMu3u4v2Dx4klBSKB
      aby+aeIpkUjQz7Tfhz8QQhAFoqEgidQT7FmmvLh9OtauLGa0f4SeriFW7H6VTVkB2t13FiKV
      WUv4xc9/xoalpWzZvBzvyAyLlxTiGe2npsXDqkUPFsIQC0/R0duFdyKIEJ3m0u1xnnn1ZTYt
      K0R3T5srUQMkfNxu9PHcj39GnjBKx+AIfWEV33vtezyzughVZik/+OlfscElpXtoas7y3HcE
      UBpsuEKt/Ifz7ZQ9u5zJbhGdWY1CTBGNydn1xhuIH54ABELhECqtCa1KRigU5suPQDQaQqbI
      xaDTEAl4uH6pBf2SDdjP9P5Jm6KQoOnkPnp0q/mHbUuQS0QuH97HuHkFf1NdhYQUDWcP0EEl
      /+POShR/Zh3OlOHC6x0g6YnhVudgV0NgrIdLN9oY6upi+fO7ufTBCeylVqZTOby6UsXhy31Y
      xDHE0lV4Bpu4fHuQnoFJ1i2z4x7qZ3Soh3MnziJXgalsJ7Gbv2HGsgwhkGT3W7u4/eFJFr/x
      FxTqv1mux4mYkKPWxujsnsSWl0t8NIlOoUCukjMZCgN3NpRSvg46pm28sj0LqWUJZ6/1kGcM
      447KuXD8JKu2bqXwSyPkbFDrHWzcto6btSdIRqNMTQ5wveYsPp/A828UoQt13m3zbhk/hYEC
      l4STfzyA0hfGJUhYVeqg7sSnTGsX8cbLG1DFphhPmFhcnDVnXdzXiKO+Qf71P7+NY+Mb7Flb
      hEYlEPRGiEtkaLU2ikrt3EkMIEGj0RAN+QlFk+j1unvWh1VqLclYkJlgGI1KxDudZLylieHx
      Lq53T3zpSgF360X2X4ny1ps7MSpFxm4d4Uifiddf3IxWKjJy6zjHO0R+8PpzqO+zCK0ymskM
      +KhtGyKnMAclIoIoIKZEkskA04E4WnM22555AZ04Tl9LH4WbnuGZ9eVIJJBKCSAKRGYCyDNy
      sbuK0HhbUZRu5bWXtzLe1khYZmLN5ud4bZ2Rm1famc4qJ0/3ZGZLAIiMdeI1LWbPznV0Nd9A
      r9ORjMWIxiRYMz9zIQT6m7vIqlqERipBbS3iuW1L8I3HkYciZOUquNna/1ByyJVKjKpMNux9
      lSz5BG5P6Ett3r1IIie3YiOvvbKLXJcNu9GEq2ItLz6/gdjIIBOTQ5w4dZXCNZvJz1DPXYb7
      XeAbaGQorCLH3cTl9kx27V7FoQ8Ok1G5geJMBSDDZMlApVBQuukZ2g6epFGRw0tLnPdYV27F
      elxtR/jkJjz3ZjWVDi2peB9v/6qWdWVfLtoZoeNmKylFjOPv/w61WkYs5EGeknJs/x+QSWxk
      KFuJRhWcPfB7zqmdvPTaczh037AjKdNSVRjmnSuTvLY1D39IZKTtJl6Zi1yLkVQqhUQiRSqR
      IpGAyaZnaGCA3uQYon4ZfS3XiepXYdcPIgLSVBSZvoBwez893aAw25F5upFIJFgrVzHxnz5g
      0ctv8IRmCwFA41pGUf0hPjossGTNNsos0xw6cwR/Kpsf2xO01TfhXLocf1SFy/ZFsNvE4BCm
      RcsoTPbxyZVelm1f/IASKDBbTMi0ZnZuLubQO++gsS1lS5aGnq4v2vR1XaZPtQSTp4fT5y7g
      KFlFkVXNjbMnOTkVoWD1RkZqT3K9PcjQmA//zmdZXTS3ArCPaBlUYLz9GqevdZC8++3Fa/ew
      ueLrheu9foJLLWN3/9OycudOluRaHl6MiJfbfdNUFmiob/FSUWxh1JOgwJzk6u0+LDYzGlMm
      EW+YovJ8Bvv6KSvMpunWLeJSJbqcKlySEa62uHE4snC4bIx3tWKv2kik5xo9HpFl69Yz3d+A
      pWApNr3I/t/9jtUv/ZT8jDmGCDwA830ZNDTQSL+mjCr73Hv2x7wTLCKkUiSSqc9fkckVyGVf
      73GlkgmSqc+mzBLkCjky6dO2Qpug5+oFhlRlbF7mQv4I6199xnw3AFEQECWSB6ol9pgPxEiQ
      yuSoZLP7eplcwSwvfYJRULxuF8WPW4x5hEQqnVOc0YPwtHWzadJ8qzz1/e5XiUaf8kQ1cyCV
      Si2o+50Ls9VNegRIs6CZdyNAmrkjCimSyRSiRIpCLufzOaco3lkmlsmQiAKJpIBcLkeCQAop
      cum34KGLIoKQQpTIkEpASCZIiRLkcjnSu98vCncWVKQyOTKphFQqiSCIyORyEFKk7oYSSGXy
      b1xo+SbmtwEkAjQ1dmAvW45DHaKt3UPBkiLmcoR1rkR8I/TPyKjI/2IFQhQS9PUNkJ1XhFrx
      5A263VeOcq51nFQkyc6//AVlZhmiKOAfauH9A2fY/v2fk+o4w+XOKco37SJ/uoVBx0a2Fpsf
      uu1UzM/h3/+K1NKf8GKlyL4/HCAslVOydi87V7iAGLdPfsyV4TAKbQ7Pby/lzKcnSUpBX7GJ
      xbIJbvSOMz7Yx6LnfsLela45tT/PDcDP5WPHUPtV/GS9gZtXWrEvLiDsHmAqBFk52cRmJgmF
      wiTkRgrznMglICTjuCcnEcNBEiozisQ06LNwmGS4h4YIJuS4XE6mfV7ikRByYxY5Vi0TQ32M
      DXbSHHFQYlXSOziGVG3Crg9zYP9RXvvZX2GITzEREHEV5pL0juIJicjVcmxWB3HfJLLMLAx/
      LrbjEdAzOMbaZ19F2fIxTb0+ylZaEVMpRj1TKCVSEAWCcRkFOZkEJ4ZoCqvYtdb4LbScZKx/
      AJlejyCASAxRbqUoS0o89tlZY4FoJEHeonK8/eP4xoYQHCv54Rolvz4xzHM/20NRWSdHa/PZ
      tCRnzhLMbwMAtAYLCm8PvTN3sgUkA30cPVyLw6nidm8eyoHLRF0VhHsG4S/+llIzpCJ+Dr33
      O4pXLKW5oZ+KFXkM9HTwyosrGR0dpa+1gbHl22mvPUfhykUMnmtix+YCzl3pxWUIEFHZCUy4
      cU9O0Nt6nqWb1xOJxPC6O7h4s4McM7SMVWIeOsegbi05ilE8ZasZvnqFld9/8zs3gPLSfE6d
      PkKGJETMFANAKldQtWI1bddbQapg2eoVtA96Sfi6cKfUfPThITY9s5Mi68MEPMnJKV+Kd/AG
      vUAqEELQKEEmRcLdpKOJGOGUEokAKp0MvS0P9c1TfHpZhxDWkxBFBhq7yF2yAfMDjK5P3nj8
      LSORa1lfvZKmS3WEEyKpiUHi2cvZvHY5E2ODkNRRvn4dixzgGe7l6OFPqWsdAUUmK6vXUKzP
      oHz1RgwSP5HgDG73BOFIgFBEQC7JZHn1ZhzKGcYGBjCWrWLN0nJ0aoHIzCTuMT/haAhRY8Fq
      MSMLe9BnLWHn1mX4ugaIyJQUL17KuspihgcGSGTYyFJ+9zEUMmMOL7z6CiVWC4V51q/TIhpL
      DhW5asaDJkgJrCjT09U//q3KEfYMI1oXsbQ0i/7BwTsvxgIM+yUsX7cG+cwIk6EUVZv3sntN
      CZYiF/pUkv7pIPnWuWeEgAVgAAASnYsKp4ypQBCZNReFu4mrN5rItN07ZCpM2azfuJnFBV8f
      7x+YHGYqKsdq1pNI3JsOxJyVy0zPbRpaugjHkri7uhBMVgwqNamUBFkyhKDJIDjWyqW6JoyF
      uXx2YM/kKkAY68TkLHugXc+HRa8SuHzsEP36pazOjtNc10oIADnOvAL0qjuPyeRUkEUrV7B2
      UQY322coyptb3M3XI8Fgc+HIUGMu20hRvImT10fZtmk1ozcv0hjKYMf6HM7sex9d+XYW5Vrx
      99ZxsN7DpnXlyIljzcxDp36wBKXz7kjkPWu/qQjDQ1NYcl0o434Gx8PkFjjxD3UzHoDc/Dxi
      U+Noc7JITrqRWfIxqUFIxhgaGiOrwIlvaApDtg3f6ARmi57h/iGUegNKrZ5UMIq9yIl/aBSj
      3Yl3uJtgSonWnIlNHqZzJIDZrEVvthMZ60XpyAf/KO4ZgYKSQpKeUTDnYpR6OfPJWUr3vk6x
      afZeqcfjITPz/od7nk5Epno6iTsLyf6mQMc/w2x1M78N4ClhoreB/kgma6pcc9r6n98G8HDM
      VjfzfhL8NGAvWs634UykmTvzzgAkj8GHfpwstPudC7PRzbwzAJVK9bhF+M6QyWQL6n7nwmx1
      syBWgdKk+Sbm3QiQZpaIKWZ8XhQGG4pUkPFJDympluxsG3LJ3fQlE25CCQkZVjtaSZTRyRnM
      Njt6WRxfREaGUf1w8fqiQCTgY8IXRGO0YjXrkJLE5/GjNVtRyQFEwtMeJv0htCYrFoOKgHeC
      mZgUm8OGijhu9wRSjRm71TTno6jz2wDiXmovtVK2eTNWprhyZZjF1ct5QpM1fKeMddbyhw9O
      s+tv/g+0nWe4PBgkMDjMzr/5X6iyQHyylQNHmzFrovh0ZWzRe7ni9mEuWs0qSS+txvU8Uzn3
      o4pfJhX1c/L4cZQGDQODYZ5/8w2EvjO8d6yVH/zd/0BRBhCZ4tTRU8gydPQNBNm9YxnXLjcg
      F4MYlz1HRew254flJKcn2fryDyizzS3Sa367QMkgHU1tzCSAZICOlj6iYoqBlqucr7nGhD9E
      b0crjTcuU3OthfbGOuqb+4nGo/Q0XuHspetMheaY//6pIMJ0Qo7TcCeeZ2TMx9Ktu9hUqmJg
      IgyAyrGEv/rZD3l2y2okqTBIpciQEJ8eo3ZMSfUiy0Of1pJpLLz8xlvs2b2XImOMQCRARGXE
      Jv+S766x8fIPf8QLu18gzxBBnlHCW9/fBUISkFOw/iV2r8hCkkoikaRDIf6EsH+IT373Nm+/
      8zFD/ggJTwtHagZRJSc4dLqOm6c+oTssoefyEToCShovHqOtoZZDF1rx9V/n4PlGUvdv5ilD
      w6LFZWg+8xe+tFoiCp+dzRZJhLw0dY6wYc0aStZvpXprNcXKGWSJAP/11+9wpevhQyFEMUHP
      jVpUi6opdWRSUVmE/CtPpZCM0XfzAoaKXeRmqEBpYMXiUkZ7+4kiwWDNpdimpW944usb+TPM
      ewPQml28+uNf8IufvIbLrEHwTSA4SqksK2ZmehJSBgqqyih0asgpWkWmPkFg3E1IpsGSW0aV
      K5N5tVP4NWRmmAj6fPhmZDhsOlLJJImolzPHT6PKXUqRQ49MbcCuTTAQ1GIWJKxeU8Dw6ORD
      tSumYrRfPkV7NJPl5S7k92haREglSaWitNWdpSmYydrKbMKeXq63TZBtNxOLheitr2MCExaj
      kmgsMWcZ5r0BfBV5VinaoVo+PXmZnLySr73GmF9KRnKaieEBxkLxeTpRUlO6YiU2LZSvXkO4
      +xbenPUss8XpaWxiYnSI8WCE5rpTHLrUAsB0MMnytWvZWF1Ob1eAFZUFDyVBMhJiZMrDVM8t
      Dh87hXsmAeioWrUck0pk7Po56nvcDHn8+Poa2H/4HFGZBbmvmU+uT/HCnmrKKvJpPP4hA9Ii
      dqwsnLMM8y4U4h6EBNPTYbQmEwoSzMzE0Jp0RKc9BGNgyjCRDAVRGI0IoRmk2gySYR9KjYFY
      wEcoIcFsyUCteAIrQTPf06KITPX3gTMXq3rusUDpCjELgPltAA9Huj5AmjSzYN65t6FQiIUy
      qCUSCYLB4OMW44lktrqZdwaQSCQQBOH+F84DBEEgHp+P+xQPz2x1M+8MQK1+uN3Jp4lIJJIu
      kvcNzFY3884A0nwzYf8YU1E1eU4jw51NuGcEsovKcKgTdHR2ExF1VC6tQCsDURQY729jaCqK
      vaCMXH2C5vZBrPml5BgFhsYSZOdamOv6WDIWoKe9k5BET0lZEbLgKK294+hteZTm2/EMdjDs
      S5FfUorVcGdHOOIbobVrBLUlh9JCJ0F3Hz1jQVyl5VjlQZrb+pAabJQW5aGZ48F42T/90z/9
      0xzv4Ynms4rmAL6hJg4dOMSpM+dp6mgnacgn1/JFrIiYStBUfx1Zph3tl5Y6A1Ot7D/SSmVF
      /mM5oztbZj8CiMSm3Rz547/RHLSzyhXn4Ke3UOkC1LcEsMR6aBxPEu6sxZOxhAKLklTcy/HD
      Z1DKU9S0jZEVHaZjapqu8TAZwS56kw7y7bo5h0NMdl+nZVJCwn2LTp+MyZvXiDuMNF24Rkah
      lXOfXkIhm6F5JMXikiwgTuOZTxmVO2m9eh6zzcaZM+fIUMe42jONytOPR2VhsrGOSZWTApth
      TrqZ16tAGa4lvPrKXhQBgWd/+lPWFZuY6LrOB+/v48KNbsZ7rvPuvvc5W9NMX9sV9r33PjWN
      g0Rj0wwMzn1b/UkmEhUoqihGIwDeMYLWYpYtLicRmGRqLEBOxRKWlJhwT84AkEp5iAs5LF1S
      jjQ0g0SvYXx4BDER5sagwJpFmQ/08DjKN/H89rWU5ecgT4UZjKpYtXI5dk2EUESFSROm3z2D
      zf5ZfYgQE+MyKlasIkcvEEiBTSPS1u/F5nBSUb2b7auWUOzKQCLMvbOa1wbwVUITPfzh44us
      2bWD0bpPaQpYcDlsrKyy0dM1SbZdyunjx5mcdwsrEsyOXCyfHS6XyZCLIHLn4IhU9kUa8s/q
      MkiQIZPdXU2TybFXbeEnP/kxazOCkArx23/9Vw5e7Zm7KKLA9EgnLT4Nm5YXI5NKEblzeis5
      1cWEqpI91csY6O7gTmCDFJmMO8JKpET8w7iT2bzx/Bom2ruYTgqMttcxKi1hXYVjzuIsKANI
      JMJE5Cac5gwsGgmBWAKpREIqHmJ0ZJC4TIMMcd7H/pCZiyU0THfPEAaLE0euhcmBHnpGI+Rl
      WwjNeElKbOjUHrp7B9BarKglUsSAm84ZPYUmFaVVJYQeYAnW03+LA6dv4szOInUhW9gAACAA
      SURBVIGcYqNIa1sXgZQFS6YBWTzAlDcAcgWpsJ9AVEO2S0FfexvTKRVWkwm5GGZ8ahqpVMJo
      0xlO3PKR5dATjc59RWxBGYAhs4B1zhhv/+bXdKVyWV2ag0kZ5WpdG9MzXrr63cTjMeLxuQdV
      PQ1kupaxdkkuKJysX59HLGFgy6Yl5FSsIl+bQlm0lRU5CoK+CRISPevWLCWS0rJt/TIAEqhZ
      sWoFVevWoJNq2LTs62Op/hyCKCM314ZntB+3X2TljvUk3H4qq6txuSrZtTYLf1zL7u3rSY43
      0TScpHT1VnRhN5XrnqG4qIJnN5Yx6JWx47n16OQZ5NlVjA0O4Q3G5izPvAuFeBrTojwo8z0t
      Smh8lKjZRqbqa4qg34d0WpQ0Tz06RzZzq0I8dxaUC5QmzVf5ExcokUgQCAQelzwPTTKZXDCx
      QOFwOL0T/A3MVjd/4gLJZDL0+vSx8aeBZDJJRkbG4xbjiWS2uvkTA5BKpSiVj77Ic5qHRyaT
      pX+rb2C2urlvKEQqHuTmxVNc7xjDZHcgDwxy4vQlAlIzWZl6JKTovl7HaEqHTR2n7vw52t1R
      cl0O5F/emEtFaL12idqmYbIL80j6Brl49jyjESVZNjOyr9SbSs4MU9cwhNVpRyGFkfarDAR1
      2E1qBppquHS9C0WGnYwHyBw8XwgGgw84Wov0NVyk5kYnKksWysgoF85doGUwQF5hDgrJnbJO
      7dfOcqVlGJMtC3lwkJPnryMzOzALkzQNx7FbtA+WGUII0XCjBYPVjr/vNqcuXsWf0uHI1NJZ
      /0WbevWX+ufoJNduDZBh1dN98xI1NzqQGW2YZV5OHDpFU+8oRmsWRo1iTrq57yQ4MtlDd0CH
      KdLKwRNXOLLvQ1Q5Tq4e/oRefwp/7zX+7Z393B6YoO3iAVoCOiJtpznXMnXPhtJY22VONnlx
      xFv48EwnQ11tJEx2rh78gMHpyD1tRqe6+d1/+WcOnb9FOJlg6PZpfvnLf+Vaj5fE5C32nx/C
      YUrS1D7054X3dvP//Mf/i3PN44gkufTuf+D/3X/lvkoBmGk9wXs1A/fK5Rvi3QOnZvX5J5pI
      H6cuDuKwCpw8dZ2WK3UI9jzErjPcHLkTSp4MjTISzCBLMcGF+lZaaxvRGOFGYwvXa64i1T/Y
      +kwi6qfu+B/5+ORVZmYCtAwHWLd+Gb21h2jt6/tSm12ff0ZIRrlx8RCnLzYy5R1nPGJibYmW
      s4cuMtrXQK/ExZYNqz4PnpsL9zUAfc5S3tizismhIWLJBO7xFAVL8zAkA0xNeTh57hbZ2WYQ
      BSbG3Fhyy8m1yhkb9/DlqHy/dwyF0cWiPBsTw27y1j/HClOQmCEbnfJeTyzmcWN0lSGXSyEV
      o38kTOXifORAcLgPt2ec252TOBz38fGEBImkkpGRXsTwKO2jCWRCjPBEN/vf/S1v//pd+scH
      +OT3H/CHP/yWI7XthDz9fLLv9xyvbSYQTeIdaOC93/6aX+87SlvDFeouX6B7IkDN4X385t/2
      0eYOUnfs39j3/nv84dNzTMdD3Dx7nMHAkzsRFxUZ2LR+rl3vJ6/ExUwoSqYzmxybGq//TmkM
      hSGf6mVmbneOYTAZyco3097Uh0oMMhg3YpdHiSfmnjBGIlVSum41NqRINWa2V2/BnmEiw5iJ
      2V78pTbvGpgo4B1sYVztxCmTobMUsK16FRlGA0aHBf/4FNMDtzh55gqeyCPICiEkolze/1+4
      PJXDcxtKQbwbRAJ4mo5T2+lnOjhNZ30T06J4531AIvlqmXvxbpCBCBIJEsBeWU0Z7Vzr9d9z
      pWnRFl7fVHYnzZ1cz5bnX2KRXY8EkEgl6BxlbF1p5ciRi/e9QUOGnbh3kpH+PpSFRZikIFEa
      qaisQB7oor1/nL7RaVZvqaa/6RqNNRcQ89awpsSKBFDoLFQtrcTX2ULUlEducQWWiVpaE4W8
      sKOQCycu0dk1TMGaHayQjdHaO0CzW4pF/+RGkUYHbzNiWMUPXttBZ8NVpDL557/Vl/1mhbWE
      N/ZupavxNpZl2/i7v/0xOTEvYtjDJwf2c6ZxcM5ty5VarJnGz9sThTB1J8+TteEZ8o2yL7V5
      ixhAwsf5I2fo7xuie7CTHreP5PQAJ+on2L59FUt2/Jh//9//NSsyp6m51Td3ee53wVTXBf5w
      pIfNb75OMiVlcZWJywdrmDHksmPHK2zZlaR+/9sMuCpYZtRy6PZp/BGRxS857zEAZ14FNN7i
      xHSQylXraDzyB9pCJqKCnQ322aezMxYvw3HuBI2tCrJyKu97vURtZIlphv1Xo6wuz6RnVKDv
      ximuzmRjNWpABJVKh1ZjQK0WEZICMrkchaiAJLRcOkyvchkZZsXnLp0gpJApFcjlIBFSoFCi
      VWqoWF/Fr/ddIXd9Nbon9/lHZXaimrnJjcYpjNYs8nPj1F+vIziiZttuGeODQ6g0Uc5c7MKi
      T2F35aIEvL0tjOgLKZWNIKpEUl8KPX8QUhEfh9/7NZO2FVRODjMhneDS1d7P20x5hhiT23nh
      r/6BRGqIfVM3yZSM8S+/OkLhurWMDQzh83fQlchAHE/gWj33XfH7GoDeuYR//J/v1NLS6oxs
      eulHOAfG0NtdZJs0SIBVu79PpToTh76Ml8wDxBQmcq0CY+7RzwYEtNYKvv+SmamwjOLSXCSR
      vWQMuZFv3IhNHWN09LO9BxlGiwW9rYqfvF6M8e4uePnm13HJrUj1Gt58YzfjgRRZrvw/L7xM
      idlopGyZnYtHRsi2WZmciWPKtBPu6iNmtKESRUxmA3K5DJPRSNmqEnpPnadGEsNYriBDZWOy
      sROL3o5aq8cp9eK17MLedJg/HhJZUv0ivttuVAopUssiDNJz5GXZHjpt4KNEainj1T1KJoJJ
      1uQWYFLEwDREfPk6CvUS/EEl6oxstqyBqbCEFXn5SAC1tZCtDi06ClAO+XDm30f/34iDV360
      lwydmiXbnicQFZAqNagz89myRvZ5m+J4PQNk4izUoaaAF96wYDTL2LX3ORKASqsjr6waRe8A
      FO0k3/V1Bf7+PI8oFkjA09/CtZYBUne/PbdqI8sLLV979XBrHQ29nrv/qSlfu4YS+4NV/Xt8
      JOm7fo5L/VJefXnHd1LqdL6nRYl4p4jrzZiUc4/YSecF+s654xKIEhky2VfnP4+G+W4AD8Ns
      dZMOhvvWkCCTzz1qMc3jZd4ZQCIxP2P5vw5BEBbU/c6F2epm3hlAKjX/kpl/E6IoLqj7nQuz
      1U06HDrNgmbejQD3IAokkymkMjlSiUgyJSKTyx7pBFUUUqRECXLZF32LKIoIgoBUKn0iy5pG
      PAOcOVtDWF/Cy7vXobobC9Ry+QQNwwlWb9uOPdLDyfoR1uzYQXain9a4i1UFD79SJ4oCI621
      TGqqWOZSUHviMEMJC9t2VJNlUgEiYy0XOXK1F1N2Cc9u34JRJdJdf4GIczkVmTGOHzxB3FLC
      jm3rMavm1qfP7xEgMsKv/+P/zamWccTwIB/89hjeR9ykt6uOD87cuOc1ITnNh+9/gC/8ZLor
      HfWXkBWswDxyhaa7NS8SsSHqmkKsKTdQV3uLhhY3FSUm2ltbqanvxeX8NkLmU0x23eTQoSP0
      jIdJzoyjKq5mqTnAtZbPdpkT9HZ0sPSZt3h99xaMKohNtfHp4fOM+CKM3DzFjGsrGcEWmvo9
      f7a1r2N+jwCASq6mu7WBDXnlAAhxPyc++YThsJyKNZsJd1xkLCoQjJn43luvYVNBMuThw08P
      oUdgNGnCqZ4mrFnK7vUO6s6dp38sxIZndtB2rRapPElCU87zm/M5e/QYkYRAPGsl/v5bHL7Y
      QDipZuOqbG7eaqdwdT/+5jqG/CLLtu9EaD5Bo99ChiXFslVbmayvwbnzJYr03209AltOLtfr
      akCVw1K9AEiRSYzYtD4u3AhTsrqacqWbMzdHceUZmFFa8AwOosl3YVA9zCMkxZRbzrrlJQwB
      ysxiKqItfFzrJW/t3eiAZIRYSkP7uX30ZBbyzMZF3LoyyMp1FQiIGLKLmTl2gpjJTrV17gF6
      83sEAOTaDDYt0lN7exhBFEmOtdArKefF7YtpuNVAcHya4m3PUaYcY2gqTjAYJByJMT3qY+ne
      ZzFO+yjb9iyJkTZiopbcgkK0KTdDY0ECU3HWvfIyyqkOuhpvEsnayI7VhSgkINdaKC7IJeof
      JqLPp7ggF11oEI+ylLf2lHPrciNToTAFq7ewJsfK0OAgg3EZ2drv/idpbu1hze7X2Gj3c7XL
      B0B8rIMJ/Qpef241XU0tZFZu4q3v70TwREiEJ+horudG19hDtixBpdXyWTZDIRlHYS9n7/bl
      tLe23nlRpmfjS2/y07/8CzRTTTQ33+R2Sys3bzXTeKOOKzXNLH35J6zLTdHYOTpnCeb9CAAS
      zKUbCB7/Zxr9WSCVIiYSJJNyJBIZoESjVSGopMQ8A5y+ehujsxAUOvQ6JTqlFo1ag1wOYx1X
      uD6soMiZSUgUkUjVqLUqVAqQSKUkowmSyQSCGKPx5CHGS3fhNLR9IYlEQjKZIJWQgUyGVCJB
      qVSS68qn9nAdpuwqlI9hjlCQ6+BqzWnEiJR1a2R03+7FUeRC7zvJqUsaLK7FqICB9mZkhVUU
      TLXSMhLFKv92R6rYVCefnGtDKUtSUrKWqb4O4kYLHTUX8CIjrM1j08pdVG/ZTcvZDxm3rmdR
      qpFjZw+hkSSo3PoIYoGeamRqcgpcaGQylq/fwaTMi9a5nFXWw5y+KmHzps2EWm9iVChQZuWj
      cpWyYWkpqYifmGcShUSJIy8HjVxBTl4ONlcWxt5rxKyFmAwqFIW5qJDjyM0jb8lKgjXHud6v
      JbvATqFrMW23W8nJL0WrMFDiVJG0lLFo6iofXUqydddOEp0J0MmRGRw4ZRGMxcU8jjly6bpn
      yaoKIchUmPQqoho1Sq2KV3/4faIJ0N49WJJVvoYsmRJpKpeiSBKd4duYB0go3/oDSiRq1Mos
      Xt6bQ1yQoTfoCXbdZkaSz+bn9hAMx1Bo9OjuHpIp27iXYqkKldzOGwUBRLkKvW7u56PnXSjE
      05gXaKT1Apc6pLz00ha0c+hU53deIJFIIIhMq0Mpm7tbOFvdpA3gKWZ+G8DDMVvdzPtJcJo0
      f455NwdQKpULJi+QVCpFoUgH4H0ds9XNvDMAqXThDGoSiQSZ7MmsYfy4ma1uFs7TkuZexATD
      3W14IxCdHqO+9hKX69uI3R08RSHFSFcDNbU3GJuOEJ8epa6unlF/GDE8SffI9LeTRl4U8bu7
      GZwMIYoC7u5GLtfeYGz6i7lcLDBOfc0lmnvGSCaidDVd48KFC7QMehFTMdpvXObqrTaC8bkX
      R5zfBhAd4/AHBxmNAJFRju6/gP++H1oIpOi+cYrf//59Bmeg89olRiIpBmoP0jh+57FOxkY4
      fuw6MX8PJ2saaK+txzPtpu52Oy11l/Gmvo1HRyA40c0Hv/kVlzt9JAL9XKjrRUmAlq67oRBC
      lIYL5wmoLQx13mRsfJyTdY04s7LI0CvxtF3g5qSchHeA7tG5/7rzzgW6ByHOpHuCaAqQxJgc
      95IQkjTVHOHWKGzdvg1vbyN+v5vJhBOXfhKPtIQd60tov3ySpgkFO/fsxGWe/aH9p4MUGruL
      gow7m3RT/hCu9VvB14DbEwKnHqnchEUTpLUvQcXGNZhifnqu9ZBTbqA9YuSlHP23EFQoEksq
      qVxcwrgIMXcX7miURL+PdTtX3bkk6qFzLI46eB1jwQaUeJkeHqa29hYbdlsItI6SUPgZidvY
      5Zh7cN78HgGAsH+IT373Nm+/8zFD/giJsWuc6daybZmVT4+do/faeRIFq1CN1BFwbCTQcZ7b
      tSc5dH0cfbSbDw5f4eFyHzyJKMnJy0Z5NxufTPZFhKz87u5ufKyFUc1y3nh+HZ3NLWSv38N/
      9+9+QanogcgE//mX/8zxhoFv+P7ZIiMzx4VReecxjIfCJHW5bF9p48Tpy3cuSSYI+YMse/4N
      fI1HmZAU8+//z3/irV0lnDhynsnIJJbiZyhXuTl7fe4lm+b3CABozS72/PgXFEn6eOedBsRY
      DJneiFarRhBGABM2h4mgWYvWkkVEIyEVi2PMKmDpaidFUuu87yWynVbaOloJTyhZ5lTin5pC
      qtSjiHYyMBxDodUhBWaGO+mXZpGnnURX4SIa/nb3XPSF5dgb2+kflmI02Qn7PaTUFqryDQx1
      dROTG0j5eznRHCBbN4PRlkNVjoKakS7GAknMzrmP1PP8t5Ugk8u509FJkMtlKJxV2HxXef9Q
      DaXllXfeR3LnzAAgk8uxFC3GMtPB6fNX8cZS81RJelY/8xx5Rihcvg6XQUn+xmcpMwmEAwFk
      lir2bCkiLsvkxV3rkQGiOpMNa5azfOtqjPoc1i9+0LQoX0aCa+k21pRloDSVsWtTIehc7Nm6
      nFB/C51+OWuf3YU+4mf19hepLCunLFeLT+pk7/aV5C1/lhXWBBll69hYmTP31ufbTvBCYn5n
      hRDxucdQWG3oFY8uLcq8d4HSPK1IyMjKeuStzM/RPU2aWTLvXCCv17tgQiECgQAGg+Fxi/FE
      MlvdzDsXSKVSLRgDCIfDqFRzz4m/EJitbuadASyk2BipVIpcPu9+wm+F2ermviWSnjaSD5my
      +2kiEonMqUrk9Fgnne44jkwtLZdPcOlGJxhsmEQ/58+eobFjHGdRAWrpnVig7hvnuXCliZja
      glXm5+SpGuJaGzZ1kKY2L5l244NNIoUgt+qbMNiyCQ3e4MiZWvrdAew5DnrrT1PbPIzJ7sRw
      9/RXLDDOpdMn6Z+W4sjU0XXjAhevtyMz2jFL/Jw+foKO0SC2LCdquXROupnXk2DfUBMf/PZX
      /G//0//KP//2t1ztvjcpipCMce7Qp4wG793Q8bvr+U//30FSwnxxpURm3F0c+ugDrrZPwEwX
      17okVC3Sc/H8DbpvXSWRWYYj2kRtxwwAyfgk9c0TLC6xcrHmCn23bqGxm7nR2ExLXR0Jk5kH
      GWsTUT91J/Zz5EID4XiUzmvXcazaTfWGZajjY3iS2RQaprl8vfvuJ+K0XLqApnwLZnGKUfcg
      PtFJ9RIrF4+e4eLpI1C0GXt8gGvtI3OWZ16PnxmuJbz2mpWpgXd54ac/xZWK0V57lJr2MTKy
      q1iZE+Xo6dO4pTbKzX5utw9hKlzHhtIkkUj8cYv/rSLX2VixupJbk0BgmqgxE5tVRyrWTtCf
      wJhnxRHR0TcTAIwIwgyCkIHVakUeG8GQV0TvuduY80ronlawUh4mHFV/fkZ3tkhlKso3rKWx
      5QokYnijEkZqPsaTXckzW1exvjLB+wfGsC9feucDqQBDQyFCkZMoNPk8s7SEkkIZoaFbZOQ4
      0SVnmAiHiEeDTHqDc9bLvB4BvkposoeDl3p56c03kPbV0BpxUJidxYZ1xcSiUhxmKTev1eEN
      P25Jv20kaI1mdMq7fbZCgeJupSuVUolcqUByd7BT3S2RJJEokMvvlrtSqcgsXMV/87MfU6H0
      QiLI2TMnOfqlQnazRabQkGHW3Yk9UprY85O/5ud/8UPUE1dpHw2iyCzitd0b6W1uvFMiSRRJ
      pWIs3vo6Gd5WWt0+ktP9nL7lZcvmVazeuRfzTC8zMiMZD5CjaEEZgCgKiBIpcqkUmVSCIN6p
      WRbxjnDtWiPW4hI0D3AA+6nDWoQj0Mqly7cxO/NxlTjpv1VLXXuIsvxMJoe7CQtOzBo3l2pv
      YHRkowCCIx10JXNZlmNAo1UhCnOPv/8yYmyaU0cOcOHSRfw4seDm448Oc6WpH0deHqmpAdwh
      PVVLnXRcuYQ7pUMfHeRffrUfhUHOUO8gfS3XcMckhGMSSkty5yzDvHaBACQyBVaHDSWgtxWz
      e2UXH733HnrHKp6tdKHoNtLcMoEz20Bz6zBmkw6pVIHdbn7con/rOBdt5bkCFUh1bN27k6lA
      EqszB6MyRbXaTURcT36mlIjfiFypZtOO3Uz4Y2Q47uzIKswutq5TYpAnEO0ezI7sB5TEwcs/
      2ovFZGTr1s0Mj/tZtHgd9gwtJqUKX1SKPcsJ47cYwc6Ktc+gHRlDqltNph4M3zOQBJQaM1mO
      bSiHxpAbMnFY02lR0lkh5hFRv5eEzoRBMffp9mx1M+9HgDRPL2qzBfUjbmMBOLxp0nwzf+IC
      xWIxfD7f45LnoVlIFVOi0Shq9aPuI59OZqubeTcHWEjM7/MAD8dsdZN2gdIsaO4bC5QITXHy
      k31cuNmD3pGDdKqFfR8dYyJpoCA7E4kYo/7oQXoFMznKGQ59/Ak3uv0UlOShkn2RN0CIT1Nz
      7CAnazvIKVtE3N3Mxx8dpNsLBXlOFNIvrhVFgbC7mcPnu8gpymG6s5b3PjlOvxdsklHe++gI
      167UcnM0xepy1zcLL6QIR6IglSGTSkjEwsRSoJhFWm8hGSeW4t5SR4JAPJ74/OD44yYYDKLX
      P0CGZjHJrbOfcOzSLSRmF+pAD598cpCrzWMUV5ahloKQjFB37CNO13eid7hQetvZd+AcZGST
      mRikti+Jyz73zBCiKJKMTnDm9BUyc3MZbbzAx8fO4A4pyXXqqT/xRZuZ+s+iOUWS030cPduG
      I8vIrbOHOHHxJgmtA5t0lPd+v5+GHjd2VyEGlWxOurnvCJAIelDlb2C108+xk3Uc+uAYi5/d
      Sv+FI3R6kow3n+ODTy8xOOWn8dwB/NaVZAVvcrph/J7ESSNNF7k+ZWRb3jR/PN6MbzpE+aZq
      +i4dZng6ck+boeEGfvnLt7nS0k88kWDcG2XHS8/9/+2d6XdUZ37nP7XvkkpLaS8tSKAdLSAk
      YTDIloQXcJtxt7s9nXZOkp55NXMyb+Y/yJkz58yLSeZFZpLuuNtx2h0Tg8E2GAzYgACzCSG0
      71upJJUkqkq13nVeSG03nU5A4I1Cnzd16p576/ndp+7v/p7l93wflrvOMmWo5Od/9mNyDCKu
      7AeMQ68M8z//x19xusuDSpyzv/gr/teRKw+sFIBg30nevjh537Ho8iS/fO/kQ13/vSY2wRe9
      Is0787h68TZ9N7txt7RRIvXSNbvWh5LjK5hym9ldoufG7UH6b05QsT2focEBLl7uxe1+NLEA
      IbJE56cfcqVrjGgkxrLWxZ/87HXiw+cYmJ7/vTK/UnhQhDCXL5ymr3+a1UgIS95O/uSlGro+
      vcTN65+R8cxPKNF56Z5Y2LA9DxwGtWZu5RnLHL/83wPYakoJDGtw5iRhQSSwOMXVy7PUV2WD
      qhAI+LHnZOIMG5gKBFDI/jJhKhy+h8GyjXRnhNDYCtmH92G7ew4l1Y3pD9NWVQPPtrXy8e0I
      6MxU725lpPMIU1Ed+20GfIOdDAv5/Fmd+4E36EjJZck3juKPMSWmkWGG1bkBTp27indxldbD
      7Vx5/xxapxZ9eh0Ht1s4ceY6BmkZdWs1vtHrfHLhDotxMy2lRvp77jI8u4u+8x+yEIHKZ19h
      9fpbzClZSJokXn19P30fnaGw40cUJ33/NsQDUDVOXPZlPrsQpHjH88QmpkixWDDbTXhWw0AS
      BlsuNXmj/NMxL86qMsq26Th2YYC8wgwCsSSWx4exl2z5vbf0w2GwOGnu2Edf73m05iR21lYS
      C0xjTttKfl4hzvD4epnl68bKzPTfQsmvxjXhxZKcS60LfENXyK4qRuubw2534DCZ8DzCHNAD
      nViK+PnoH/+O+eRGOnZtQadTkeISKhr8ozcYnVtkZMZDX2cXQZ0eWRKQFBWD0XhfeNRq9aiy
      hCRJ6E1G4qFVkra0UKwOc3sycF+Zdnc1TSUZ68YprAx38oujt2hoO0SRU8vQ3W5cFbWkGh/8
      DrIkOTH4Vxgcnya5yI1VA1qTHbc7D6Psw7O4ShQr+w8cJO4bYfDWbdLrn+O5ukI0gMGaQmFR
      PrGFOUgrJG9LOc7lLu6l7+T1V3bSf/U6vlWF2n0v0V6o0Nc/wawmixzH9/PhB4h6evAm7+DH
      h1sZvH0Vg9GEKisoiga7fU1aRJXiCLYCXntxN1P9fZiL6nnzpwcx+YMQ9jMx3cfl3o3rAmm1
      esymddFaVSEWWuDSxR62tuwhwyD+Xpm9xABEP13XurjzxXX6xnoZmF7EP3uXy6MKexsrSbaZ
      1nbl0emwPcLioAdGgMXB8xzv9NDQXsqoN0pzYw6n/uEDdBnbONRxkBcOwZXf/A0T7kZa0uZ5
      5/RR5hQDbc/k3OdduSV1GG99wm88Io2vPMdE53EujIRBKeKg+99uqymxAKc/+ICQPp3o4ije
      e/nMzYbI25nyUO1PjdFBtSvA0S+itO/IZHBGYfT6WUbUMgrSk0AFg96E0WDGYFDR6TUIMYGY
      GAegt/MUCxnPkuXsQ11v1On1esRYDCEOqtaARq/HqDNSvGM7p//2DCUdL2P+/j7/WDJLSFo6
      xfFPDGQV1lKSvcrJsyfw37Pwk0Mqo3fukpLj4NOPP0fWanGXNWAC5od7Wc0qozo2wdkhL4V5
      j6dMLYaX+Je3/5r5lEr81y5jqCnmymeXvyxTmLnLjKmUV//zfwOm+fVfXyNXN8v/+Zv3yaut
      4uplC43VdZw9/it0GpXW+vQN2/DAYVBZjBGJrW05rzOaMetVIlEBvdGMyahHA4jxKIrWiFEH
      sWgURaNHCs4xOLnA71LqMworyE/RI8garDYLGlkkGouj0ZsIzY8w5g2ul2jEXVZGbpKRiKBg
      NhkQYhFEWQWNFrPFiiJE0RrNGB6UuLbq4XTXIntrrBy/4GXvzlyGZwVqXDE+vjhIVlYK9mw3
      gRk/O57ZTs/t2zTWbOHCuYtIOh3W0n1U0M+p6x5ys7Mprixm7OZltu75AUu3TjLgg5aOl1i6
      e5a82jYK0vQceesX1B38U0oyNp6XslEefRhURYhFESQVk9mCXqsQjcZQNHpsVhNiXEBnMCLF
      I4gymCwWDDotsiigaHTokInExC+PbxyZWFTEYFz7byUF0GqxmC3IQvTL5iY8vAAADslJREFU
      MiVPN4PacuryLOvXSOgNGmLROCqg1RmwWAzEwhFUrQGLxYR2fY+ph62bb2geQCW87GXSu/yl
      AzhztpCX9scfCr93nJml8Po3A1mFBWQ4njQ9TpGxa+e5E0znhdZ6LLpvPgQk+jyAGA4hmaxY
      9Bt3su/YATb5Nkh0B3gcNifCNtnkIUi4bFBBEJ4aWRRZlonH49+1Gd9LHrZuEs4BlMdcpfSk
      8bQ4+6PwMHWz2QTa5Kkm4SLAfchxFhaWsaVlYdcL+JaipGQ6+Sb3VRSjQfxxLRkpX81tqKqM
      /14AR7IT/bcwOrRRViZuc/pSFxFdJod/+DJOIyhSiIsfHmPsHpQ37yc3NsL5O15q97Xhjg4z
      ZKqkpfjxl40qUpSuc8dYzXmePcUqJ4+fZFm20/xcB2U5SYDKxNVjfHTnHtmFW2nfv4ckk8QX
      x/8ZuaKdRuc8/++dS9iyc9nf2kbhBoefEzsCxBc5+tYvOdszgxqb58yJywRVFVkSEQQRRVGR
      JQlRFBBEid9FTFVVkSQJSRQQ1z8lWUFVlbVzBRFFUZAkEVEQECV57RpRYGWimzPXB1AVGUFY
      +11JWOHE0RPci0hflb1uhyiKiJK0/l1aX6j/7eIZHSJ5605yo5NMrk/HSOIy4wsGmmoyGR0a
      Z9wTZnt5Fp7JMa6N+KnI+zo0SSXmBnvoG51gJSSColK+5xANORpGpn1rp6hxZqZ9NL7wE155
      vgWHUSU0fZurfbOEoxL+6TEcNW28cfgl3OkbHzpP7AgAWK3JLI5049uyHQA5Os97/3iUkNZI
      TkUT4uBZfPokQisqr/2nvyDfBlLIxy9/9Wsy0pyMLSoUZmtYiRdzuH0LNy9fYXzCw/bWDu5e
      PIfDZScQy+YHz23h1EfnMBognt3IyvhtztwYZMkXomV3OQNDk2ybHOTczStEBJXcxlaMfR/R
      EysiMzlE5Y5WPJ3nKXn1DUrs3262aVJaOgt3utCYsqg2yYAOrWIk2RziRp9EXnUT9RlOznfN
      ken0saxzcPPKTWp21OLaYC7Q/ejJq9pJ/Vwv44DekUVOaJCPvCFSK9bfzYqINd3NxPUT9EoW
      Op6t43Z3gD27igmiIBrTsS7f4d23v6Cm7WXq3c4NWZDYEQDQGu3sbSrm2tVeBFlFmh8mkNnM
      ay+2MDk2BHEjdS8cpCFbZH5+mcGBfqYXgyBb2X34JbaYzdS3H8Ien0OUddgcyZi1Ie4FJfRq
      Cvt++BpZLDA1OIC1oo2O3ZVYDCoanYkURxKKFERJKaDInYM1No82cyc/e7WJ6e5hwjoj1c+0
      sr+yBM/MFEF7OgXWb/8vGRyZpP65l2nMuMf10bXVgKJvjGV7NYdaaxnp7cecX83LrVUEVnRI
      8QBmdYmeUe/XaocUXiZkLaStpYrx0d9pDhnIr9zJD/7DD0kX55icHmd+ZpSLX/TQc6sLMWUL
      B145zK4SK1MzSxsuM+EjAGgwZ1aS1X+FvkAKGlsuqn+RRZ8Fo8kOoSX0Bh06nQZVFgmFQpht
      DtAaMBh0GLR69Ho9Wi34Ju4y5jdSkJlCRFFAo0Nv0KHXgtluJzLvY1m3jCDqGbpyC6HkWVye
      SVQVNKqM1mAmsrrE4oIWbZIdo6BBp9OS4XYTuHWW5KJd6DXffh+hoqyE82ePI2iTeKFFT+/V
      fty128iMHufYaT1FtbsxARPjE6Rtq8Kx3MPFfh/1bbavoXQNOoMJo16LLKxy8eMPCct6anbt
      Z77vFmFXESt3OznpuYclvZLqut0807SPwUsn8KU1YA6M8S+fnkZjcLC7Y3OLpPtlUcQAt2+N
      UVhfjy08y42Be9Q2lePpusjgokpd405WxwZx1lQhjPZiKGwkxwFyPMStrgGqdpUzdWuMrJpS
      pnuHyHNn0H3tFtb0TKxOF8JygLKWCma6eskuLWfq9ucsinZS84soMd3js+55cvOdZORuwz/Q
      ib2sCXW2h16vRPOzzcQm70JOHUVpMp+/d4S0/T+h2mV86HtNbFkUlZXhPu5llrIleePNrIet
      m8R2gCcET38n3b5k2vdWY9hAAEh0B5BECY1ej+4RouKmLtATRG7FM2w8eCc6GvSGb3LAeo2E
      7wRvssm/R8JFgKdpyyCdTvdU3e9GeNi6STgH0HwHoyjfJU/b/W6Eh6mbzSbQJk81CRcB7kMK
      MzrsIbN0Kw5WGRu7R26Z+xsXXH0SCHj7eP+fP2bHG/+dlJnTHL88QDAIb/zlX1JkB1lY4YNf
      vYMnpqV4VzvbmeDo9VG2thxgl2mKK/EyXmzIeew3qBwPcPo3/5doxU/5QZ2VT357hOlVKG5+
      no76YkBm4sZpPrk5i9GZy8H2Jno+O8H4QgRXXQeHmrcQXxrkrXc+pePN/8qWjU0EJ7gDCMtc
      OnOBZ91bcWiW6DzfzUvb8hCWF/DHID0jHSEcQBTjxBUTVr2AoLGR7rQRWlkkGNeSkZmB5RHk
      ub/fRJmYmCIWlVFUmJxcYNfBHyF/8S4jXoGiUiOKEmVVslNb4WR2xc8KccrKCwn4ZuiMhtnz
      QubX0HyQmBsdYVVW0Ygq8fl+FqwVtDW70DvWn2RhhTsDIXZ3tGOUFaTADEtKNm3tRciWVJCi
      3LzZg6xIPMqWbontAEDEP8Oxt/+eJIIs+LORw9McefcTbKkmtBmVaMfOEsooZWV4kuyqLfim
      /LS313Pjaj8Ok4SmuJlXdpV+17fxNWOhtmUXYzcHAZBkGZ1eh86gIxqNAkYQRPQGDUsBEZvL
      QllVHYGeGVItfmajcOLIB7S0t1Oa+ThJcXryK+spm77FCBD2eZn2ROkWRlGy6inMckI0xIzP
      gzLQz+L8Co2VTiYnPNgULytJ1Vhy/UTSq8lLWXlgaX+MhO8DWFPyefVnP+fnbx4mP8WCNDdC
      zN3Mi63NeKZHQbBT07qfHUVmSncexp0cYnHoDj2THhZDccRgiMTaLu9fk5yUhBiNEY1pcWUk
      AyAuTxFwbGNfYxmTQ8PgzKelwY3XK2OMCFRtz6B7cPJrtcOekUVOTiktO8rwembWDloc5NnT
      2L7vedLVJVY1dlx5xbTvrsE/PcH0Sozp259zs3+IroHxDZeZ8BHgD9GmZaP19tLdayY5NRPC
      /zqByuLKoyDPTv02Oz6TjYdPTniS0JOanY3NAJlVZXx09jQBTRH/0RVn4MZdXOW1lBtPcPQM
      7Ni9HxPgnVskp7qOAnmKo5dHqX+u/GuwQ4M1xUWa1Ygpu5Zy0wk+uiTTvPd55rousZJXT/Pe
      Ek69+2ts+c3UVZZjCX7K2yenadh7gF3lOTTvi9D58ScUVBdvvPRES4W4jz/WCd6Wy9LwHabu
      QWn5NqJz09iLi5DmJtBllhPxDpCSVcDyZD+eVT3l1RWk2b6fLpDYqhAqvqE+IjmlFDg2Ptex
      KYvyFJDYDvB4bMqibLLJQ5BwfYCnaYskVVWfqvvdCA9bNwnXBFpYWHhqpFGi0SgWy5MmIfnt
      8LB1k3ARIDk5+bs24VtDURSczg1OfT4lPGzdJJwDbPJvIwkxBEWL1WwgshogJqpY7A5MWoXV
      UAhZ1ZOUkoRes9aEiEeCROIKJpsdq14lEIxgstmx6FUiMRWL1bjhLZIAUGXC4Rhmqw1VCBOM
      xNHqjNgdNsRwgJisxWa3Y1wXxVVkkdDqKugt2K0m4pFVooKKxW7HrFMIBkOoOiN2uw29dmMW
      JbQDBOaG6Lx2l+h6U7Bkx/PUFn6lZaOqMt7Jaey5+SQZv6qKaHCa6z1B9uyu/FJu+0lHiQc4
      d+QtZlP38+dtORx/+whxuw5N2g7aCoKcvDmNtOyj4Y3/ws4cE4oY4uR7bxNSTERSy3m1WORk
      9wzWgnoO5PvpnM+nY3fhhh8gVRaZuvsZRy7M8uZfvMnyxX/i7FImZe48GmpcnDl6DlEnk1n9
      PO0NBYDK7N3zXBhYRUFDU2MFPVduotGKRB1lNOcu82lPFBtRKlsP0VCwqQrxJXZXEc801eG5
      M0plRwfluXZWF6a4ceMGw1OLBLyj/PpX/0DXwAxL3nFuXL/B6OwK4VUPV64NkDi9I4Vl7zyW
      jDSMMrA0SSCzgZcO7Ca25GFuconyvQdoq09lwuMHQJYWiKglvHRgL3LAR0hQSEpxIIaX6Oxd
      pWVH/iO9PYVYgIjRhE0ApBBjUzHyi3JxF7lJTs7m0KsHyEoxIQpre1KgBhm648ddVkRtXQP5
      eSUcev3HvPrCbgguMzI4x/a2Q+xwWxifXtywPQntADq9EavVil6nx2q3Q3ieo++9T0CWuPjh
      Mfq8ETSqilEN8cWlGyz7hjly7BNWog/+7ScLLRmF23BnONaaLOraZiMajRZZllEUFY1Gg0ar
      QZKk9WtUNOvnaGSFzJpGtpdXsT1dRkLk+Lu/4crg/IYtMdnSqagoWlO/0FppePFlytMN9Fw6
      xcSyjNliweVysbK8gAIgxVkJLhIV9Axc+5zJezEMWom7fTNUtexkV9N2+k7+lm5vCK208RGx
      hHaAPyQcnGdactHa1EyJI8JMWEOSzYbLlYyWOKGIiBAJIib6yKIzneRokEgkgj0pFWeGnVgo
      RCgUx5W+tpBcq0vFbAkRiYQxJKdgNyVRnJeCZzFOmkahckcFY1Ozj2WGKsaY8YUpLt2GjTAB
      3wR3JqMUF+YSDfqRAQwOsjMcZLq3kqoT8AeWuXnhPKKrguoiF/G4ludee52y7FSysjYuEPBU
      OYDDmU+Zxcf7pz5mMJRCTWEOFp3AYE8/w2Oz6CxmJEVCfoQ3yZOAPTWf4jwnmIvYXhThQuc4
      9U3bKaqpRxy9xp1YKU3FJiZ6r7IiprC9JJnPrg7R0LCmqhdYCVBQvZPGlirG7oxSvW3juTdr
      2Cit3ILFaqXQEeG377yHqayD6tJCZM9ljl8cZX/rHsJD57k8qrCjbR/Tnx1BdDdRbAsxOuGl
      98ppTpy8gTknk9unjrBoLqGu1LVhSxJuHuAPZVEUSWDRu4QzLxsTKtHgCnNLfqxJLlxpdgKL
      s4RlM0ZNjLAIBq0eZ6qNQEAiJzv1e73kMLFlUSDsGWXJ7qYgeeO5WJu6QE8Bie4Aj8PD1s3/
      B1Nl2f1EcOVdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Across Rates Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across RatesByIncome Chart' width='192'>
      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
      fKXJ/wdq0Gm9bKsg5AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
