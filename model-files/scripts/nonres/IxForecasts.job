; ----------------------------------------------------------------------------------------------------------------
;
; IxForecasts.job
;
; TP+ script to create a daily matrix that includes internal/external, external/internal, and external/external
; passenger vehicle travel (based on Census 2000 journey-to-work flows).  These trip tables are based on total 
; traffic counts, which include trucks, but trucks are not explicitly segmented from passenger vehicles.  This 
; short-coming is a hold-over from BAYCAST and will be addressed in the next model update.
;
; The row and column totals are taken from count station data provided by Caltrans.  The BAYCAST 2006 IX matrix is
; used as the base matrix and scaled to match forecast year growth assumptions. The script generates estimates 
; for the following forecast years: 2005, 2010, 2015, 2020, 2025, 2030, 2035, and 2040.  The growth rates were 
; discussed with neighboring MPOs as part of the SB 375 target setting process. 
;
; Input:  (1)  Station-specific assumed growth rates for each forecast year (the lack of external/external movements
;              through the region allows simple factoring of cells without re-balancing);
;         (2)  An input base matrix derived from the Census journey-to-work data. 
;
; Output: (1) Four-table, forecast-year specific trip tables containing internal/external, external/internal, and 
;             external/external vehicle (xxx or person xxx) travel. 
;
; Notes:  (1)
;
; See also: (1) IxTimeOfDay.job, which applies diurnal factors to convert this P/A matrix to an time-period-specific
;               O/D matrix.
;
; version:  Travel Model One
; authors:  dto (2010 12 30)
;
; ----------------------------------------------------------------------------------------------------------------

; Step 1: Establish 2005 as the base year, making a handful of adjustments to BAYCAST RVAL06 numbers
run pgm = matrix

   ; Begin with Chuck's BAYCAST matrix
   mati = ixDaily2006x4.may2208.mat
   
   ; Write out a year-specific matrix
   mato = ixDaily2005.tpp, mo = 1-4, name = ix_daily_da, ix_daily_sr2, ix_daily_sr3, ix_daily_total
   
   jloop

      ; Default value is the 2006 value
      mw[1] = mi.1.IX_Daily_DA
      mw[2] = mi.1.IX_Daily_SR2
      mw[3] = mi.1.IX_Daily_SR3
   
      ; Apply gateway-specific adjustments based on chats with SJCOG, SACOG, and review of counts    
      ;   - I-505, Solano/Yolo
      if (i == 1460 || j == 1460)
      
         mw[1] = mi.1.IX_Daily_DA  * 1.020228
         mw[2] = mi.1.IX_Daily_SR2 * 1.020228
         mw[3] = mi.1.IX_Daily_SR3 * 1.020228
      
      endif
      
      ;   - I-80, Solano/Yolo
      if (i == 1462 || j == 1462)
      
         mw[1] = mi.1.IX_Daily_DA  * 1.242555
         mw[2] = mi.1.IX_Daily_SR2 * 1.242555
         mw[3] = mi.1.IX_Daily_SR3 * 1.242555
      
      endif
      
      ;   - CA 12, Solano/Sacramento
      if (i == 1463 || j == 1463)
      
         mw[1] = mi.1.IX_Daily_DA  * 0.848518
         mw[2] = mi.1.IX_Daily_SR2 * 0.848518
         mw[3] = mi.1.IX_Daily_SR3 * 0.848515
      
      endif
            
      ;   - CA 4, Contra Costa/San Joaquin
      if (i == 1465 || j == 1465)
      
         mw[1] = mi.1.IX_Daily_DA  * 1.673817
         mw[2] = mi.1.IX_Daily_SR2 * 1.673817
         mw[3] = mi.1.IX_Daily_SR3 * 1.673817
      
      endif
      
      ; Sum the working matrices to form the total
      mw[4] = mw[1] + mw[2] + mw[3]
   
   endjloop
   
endrun

; Step 2:  Loop through the forecast years
loop year = 1,7

   if (year = 1)
   
      token_year = '2010'
      
      ; Set gateway-specific annual growth rates
      token_1455 = 'pow(1.005,5)'
      token_1456 = 'pow(1.005,5)'
      token_1457 = 'pow(1.005,5)'
      token_1458 = 'pow(1.005,5)'
      token_1459 = 'pow(1.005,5)'
      token_1460 = 'pow(1.010,5)'
      token_1461 = 'pow(1.010,5)'
      token_1462 = 'pow(1.010,5)'
      token_1463 = 'pow(1.010,5)'
      token_1464 = 'pow(1.010,5)'
      token_1465 = 'pow(1.010,5)'
      token_1466 = 'pow(1.010,5)'
      token_1467 = 'pow(1.015,5)'
      token_1468 = 'pow(1.010,5)'
      token_1469 = 'pow(1.010,5)'
      token_1470 = 'pow(1.010,5)'
      token_1471 = 'pow(1.005,5)'
      token_1472 = 'pow(1.005,5)'
      token_1473 = 'pow(1.005,5)'
      token_1474 = 'pow(1.005,5)'
      token_1475 = 'pow(1.005,5)'

   elseif (year = 2)
   
      token_year = '2015'
      
      token_1455 = 'pow(1.005,10)'
      token_1456 = 'pow(1.005,10)'
      token_1457 = 'pow(1.005,10)'
      token_1458 = 'pow(1.005,10)'
      token_1459 = 'pow(1.005,10)'
      token_1460 = 'pow(1.010,10)'
      token_1461 = 'pow(1.010,10)'
      token_1462 = 'pow(1.010,10)'
      token_1463 = 'pow(1.010,10)'
      token_1464 = 'pow(1.010,10)'
      token_1465 = 'pow(1.010,10)'
      token_1466 = 'pow(1.010,10)'
      token_1467 = 'pow(1.015,10)'
      token_1468 = 'pow(1.010,10)'
      token_1469 = 'pow(1.010,10)'
      token_1470 = 'pow(1.010,10)'
      token_1471 = 'pow(1.005,10)'
      token_1472 = 'pow(1.005,10)'
      token_1473 = 'pow(1.005,10)'
      token_1474 = 'pow(1.005,10)'
      token_1475 = 'pow(1.005,10)'
      
   elseif (year = 3)
   
      token_year = '2020'
      
      token_1455 = 'pow(1.005,15)'
      token_1456 = 'pow(1.005,15)'
      token_1457 = 'pow(1.005,15)'
      token_1458 = 'pow(1.005,15)'
      token_1459 = 'pow(1.005,15)'
      token_1460 = 'pow(1.010,15)'
      token_1461 = 'pow(1.010,15)'
      token_1462 = 'pow(1.010,15)'
      token_1463 = 'pow(1.010,15)'
      token_1464 = 'pow(1.010,15)'
      token_1465 = 'pow(1.010,15)'
      token_1466 = 'pow(1.010,15)'
      token_1467 = 'pow(1.015,15)'
      token_1468 = 'pow(1.010,15)'
      token_1469 = 'pow(1.010,15)'
      token_1470 = 'pow(1.010,15)'
      token_1471 = 'pow(1.005,15)'
      token_1472 = 'pow(1.005,15)'
      token_1473 = 'pow(1.005,15)'
      token_1474 = 'pow(1.005,15)'
      token_1475 = 'pow(1.005,15)'
      
   elseif (year = 4)
   
      token_year = '2025'
      
      token_1455 = 'pow(1.005,20)'
      token_1456 = 'pow(1.005,20)'
      token_1457 = 'pow(1.005,20)'
      token_1458 = 'pow(1.005,20)'
      token_1459 = 'pow(1.005,20)'
      token_1460 = 'pow(1.010,20)'
      token_1461 = 'pow(1.010,20)'
      token_1462 = 'pow(1.010,20)'
      token_1463 = 'pow(1.010,20)'
      token_1464 = 'pow(1.010,20)'
      token_1465 = 'pow(1.010,20)'
      token_1466 = 'pow(1.010,20)'
      token_1467 = 'pow(1.015,20)'
      token_1468 = 'pow(1.010,20)'
      token_1469 = 'pow(1.010,20)'
      token_1470 = 'pow(1.010,20)'
      token_1471 = 'pow(1.005,20)'
      token_1472 = 'pow(1.005,20)'
      token_1473 = 'pow(1.005,20)'
      token_1474 = 'pow(1.005,20)'
      token_1475 = 'pow(1.005,20)'
      
   elseif (year = 5)
   
      token_year = '2030'
      
      token_1455 = 'pow(1.005,25)'
      token_1456 = 'pow(1.005,25)'
      token_1457 = 'pow(1.005,25)'
      token_1458 = 'pow(1.005,25)'
      token_1459 = 'pow(1.005,25)'
      token_1460 = 'pow(1.010,25)'
      token_1461 = 'pow(1.010,25)'
      token_1462 = 'pow(1.010,25)'
      token_1463 = 'pow(1.010,25)'
      token_1464 = 'pow(1.010,25)'
      token_1465 = 'pow(1.010,25)'
      token_1466 = 'pow(1.010,25)'
      token_1467 = 'pow(1.015,25)'
      token_1468 = 'pow(1.010,25)'
      token_1469 = 'pow(1.010,25)'
      token_1470 = 'pow(1.010,25)'
      token_1471 = 'pow(1.005,25)'
      token_1472 = 'pow(1.005,25)'
      token_1473 = 'pow(1.005,25)'
      token_1474 = 'pow(1.005,25)'
      token_1475 = 'pow(1.005,25)'
      
   elseif (year = 6)
   
      token_year = '2035'
      
      token_1455 = 'pow(1.005,30)'
      token_1456 = 'pow(1.005,30)'
      token_1457 = 'pow(1.005,30)'
      token_1458 = 'pow(1.005,30)'
      token_1459 = 'pow(1.005,30)'
      token_1460 = 'pow(1.010,30)'
      token_1461 = 'pow(1.010,30)'
      token_1462 = 'pow(1.010,30)'
      token_1463 = 'pow(1.010,30)'
      token_1464 = 'pow(1.010,30)'
      token_1465 = 'pow(1.010,30)'
      token_1466 = 'pow(1.010,30)'
      token_1467 = 'pow(1.015,30)'
      token_1468 = 'pow(1.010,30)'
      token_1469 = 'pow(1.010,30)'
      token_1470 = 'pow(1.010,30)'
      token_1471 = 'pow(1.005,30)'
      token_1472 = 'pow(1.005,30)'
      token_1473 = 'pow(1.005,30)'
      token_1474 = 'pow(1.005,30)'
      token_1475 = 'pow(1.005,30)'
      
   elseif (year = 7)
   
      token_year = '2040'
      
      token_1455 = 'pow(1.005,35)'
      token_1456 = 'pow(1.005,35)'
      token_1457 = 'pow(1.005,35)'
      token_1458 = 'pow(1.005,35)'
      token_1459 = 'pow(1.005,35)'
      token_1460 = 'pow(1.010,35)'
      token_1461 = 'pow(1.010,35)'
      token_1462 = 'pow(1.010,35)'
      token_1463 = 'pow(1.010,35)'
      token_1464 = 'pow(1.010,35)'
      token_1465 = 'pow(1.010,35)'
      token_1466 = 'pow(1.010,35)'
      token_1467 = 'pow(1.015,35)'
      token_1468 = 'pow(1.010,35)'
      token_1469 = 'pow(1.010,35)'
      token_1470 = 'pow(1.010,35)'
      token_1471 = 'pow(1.005,35)'
      token_1472 = 'pow(1.005,35)'
      token_1473 = 'pow(1.005,35)'
      token_1474 = 'pow(1.005,35)'
      token_1475 = 'pow(1.005,35)'
      
   endif
   
   run pgm = matrix
   
      ; Begin with 2005 base year matrix established above
      mati = ixDaily2005.tpp
      
      ; Write out a year-specific matrix
      mato = ixDaily@token_year@.tpp, mo = 1-4, name = ix_daily_da, ix_daily_sr2, ix_daily_sr3, ix_daily_total
      
      jloop
      
         ; Apply gateway-specific adjustment factors (no X/X trips mean the gateways act independently)
         
         ;   - CA 1, Sonoma/Mendocino
         if (i == 1455 || j == 1455)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1455@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1455@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1455@
         
         endif
         
         ;   - CA 128, Sonoma/Mendocino
         if (i == 1456 || j == 1456)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1456@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1456@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1456@
         
         endif
         
         ;   - US 101, Sonoma/Mendocino
         if (i == 1457 || j == 1457)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1457@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1457@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1457@
         
         endif
         
         ;   - CA 29, Napa/Lake
         if (i == 1458 || j == 1458)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1458@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1458@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1458@
         
         endif
         
         ;   - CA 128, Napa/Yolo
         if (i == 1459 || j == 1459)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1459@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1459@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1459@
         
         endif
         
         ;   - I-505, Solano/Yolo
         if (i == 1460 || j == 1460)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1460@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1460@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1460@
         
         endif
         
         ;   - CA 113, Solano/Yolo
         if (i == 1461 || j == 1461)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1461@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1461@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1461@
         
         endif
         
         ;   - I-80, Solano/Yolo
         if (i == 1462 || j == 1462)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1462@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1462@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1462@
         
         endif
         
         ;   - CA 12, Solano/Sacramento
         if (i == 1463 || j == 1463)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1463@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1463@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1463@
         
         endif
         
         ;   - CA 160, Contra Costa/Sacramento (combined with CA 4, 1465)
         if (i == 1464 || j == 1464)
         
            mw[1] = 0.0
            mw[2] = 0.0
            mw[3] = 0.0
         
         endif
         
         ;   - CA 4, Contra Costa/San Joaquin
         if (i == 1465 || j == 1465)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1465@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1465@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1465@
         
         endif
         
         ;   - County J-4, Alameda/San Joaquin
         if (i == 1466 || j == 1466)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1466@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1466@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1466@
         
         endif
         
         ;   - I-580/I-205, Alameda/San Joaquin
         if (i == 1467 || j == 1467)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1467@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1467@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1467@
         
         endif
         
         ;   - CA 152, Santa Clara/Merced
         if (i == 1468 || j == 1468)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1468@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1468@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1468@
         
         endif
         
         ;   - CA 156, Santa Clara/San Benito
         if (i == 1469 || j == 1469)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1469@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1469@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1469@
         
         endif
         
         ;   - CA 25, Santa Clara/San Benito
         if (i == 1470 || j == 1470)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1470@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1470@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1470@
         
         endif
         
         ;   - US 101, Santa Clara/San Benito
         if (i == 1471 || j == 1471)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1471@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1471@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1471@
         
         endif
         
         ;   - CA 152, Santa Clara/Santa Cruz
         if (i == 1472 || j == 1472)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1472@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1472@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1472@
         
         endif
         
         ;   - CA 17, Santa Clara/Santa Cruz
         if (i == 1473 || j == 1473)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1473@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1473@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1473@
         
         endif
         
         ;   - CA 9, Santa Clara/Santa Cruz
         if (i == 1474 || j == 1474)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1474@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1474@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1474@
         
         endif
         
         ;   - CA 1, San Mateo/Santa Cruz
         if (i == 1475 || j == 1475)
         
            mw[1] = mi.1.IX_Daily_DA  * @token_1475@
            mw[2] = mi.1.IX_Daily_SR2 * @token_1475@
            mw[3] = mi.1.IX_Daily_SR3 * @token_1475@
         
         endif
         
         ; Sum the working matrices to form the total
         mw[4] = mw[1] + mw[2] + mw[3]
      
      endjloop
      
      
   endrun

endloop





