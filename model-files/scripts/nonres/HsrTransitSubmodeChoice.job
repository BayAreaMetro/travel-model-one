;----------------------------------------------------------------------------------------------------------------
;
; HsrTransitSubmodeChoice.job
;
; TP+ script to determine transit submode choice for transit trips to and from Bay Area HSR stations.
;
; Starting with input trip tables for 2025 (opening year for the Gilroy and San Jose stations), 2029 (opening
; year for Millbrae and San Francisco stations), and 2040 (future modeled year), the script will assume zero
; trips before the opening year for the relevant station and interpolate the number of trips afterwards.
;
; Input:   Trip tables representing trips to/from the four Bay Area HSR stations in 2025, 2029, and 2040, with the
;          following four tables: (a) da. for drive alone, (b) sr2, for shared ride 2, (c) transit, and (d) walk.
;
;          Additionally, the model year will be specified in the environment variable, MODEL_YEAR.
;
; Output:  Five, time-of-day-specific trip table matrices, each containing the following four tables: (a) da,
;          for drive alone, (b) sr2, for shared ride 2, (c) transit, and (d) walk.
;
; See also: (1) IxTollChoice.job, which applies a toll/no toll logit model for the auto trips and
;               follows this script.
;           (2) 
;
; version:  Travel Model One v0.6
; authors:  lmz (2016 06 21)
;
; ----------------------------------------------------------------------------------------------------------------

; set the time coefficient
token_model_coefficient_in_vehicle = '-0.0220/0.72'

; set the cost coefficient, which is a function of the value of time in the highway parameter block
token_model_coefficient_cost = '(_kIvtt / VOT) * 0.6'

; Bay Area HSR TAZs
Gilroy_TAZ = 707
SanJos_TAZ = 538
Millbr_TAZ = 240
SanFra_TAZ =  14

loop tpnum=1,5

  if (tpnum=1)
    time_period = 'EA'
  elseif (tpnum=2)
    time_period = 'AM'
  elseif (tpnum=3)
    time_period = 'MD'
  elseif (tpnum=4)
    time_period = 'PM'
  elseif (tpnum=5)
    time_period = 'EV'
  endif

  DistributeMultistep processid = 'ctramp', processNum = tpnum, commpath = 'm:\commpath'

  RUN PGM=MATRIX
    ; These are the trips
    filei mati[1] = 'nonres\tripsHsr@time_period@.tpp'  ; name=da,sr2,transit,walk

    ; skims
    filei mati[2] = 'skims\trnskm@time_period@_wlk_trn_wlk.tpp'
    filei mati[3] = 'skims\trnskm@time_period@_drv_trn_wlk.tpp'
    filei mati[4] = 'skims\trnskm@time_period@_wlk_trn_drv.tpp'

    ; read in the highway assignment parameter block for VOT, AUTOOPC
    read file = ctramp\scripts\block\hwyparam.block

    ; set universal variables
    _kIvtt = @token_model_coefficient_in_vehicle@
    _kCost = @token_model_coefficient_cost@

    fileo mato[1] = 'main\trips_transitHsr@time_period@.tpp', mo=1-15,
      name=wlk_loc_wlk, wlk_lrf_wlk, wlk_exp_wlk, wlk_hvy_wlk, wlk_com_wlk,
           drv_loc_wlk, drv_lrf_wlk, drv_exp_wlk, drv_hvy_wlk, drv_com_wlk,
           wlk_loc_drv, wlk_lrf_drv, wlk_exp_drv, wlk_hvy_drv, wlk_com_drv

    jloop
      inputTrips = MI.1.transit

      ; set the level-of-service variables -- walk-transit-walk
      wlk_ivt    = MI.2.ivt
      wlk_ovt    = MI.2.wait + MI.2.wacc + MI.2.waux + MI.2.wegr
      wlk_cost   = MI.2.fare
      ; factor boardpen = 0, 5, 10, 15, 60
      if (MI.2.boards <= 1)
        wlk_boardpen = 0
      elseif (MI.2.boards <= 2)
        wlk_boardpen = 5
      elseif (MI.2.boards <= 3)
        wlk_boardpen = 10
      elseif (MI.2.boards <= 4)
        wlk_boardpen = 15
      else
        wlk_boardpen = 60
      endif

      if     (MI.2.ivtCOM > 0)
        wlk_matnum = 5
      elseif (MI.2.ivtHVY > 0)
        wlk_matnum = 4
      elseif (MI.2.ivtEXP > 0)
        wlk_matnum = 3
      elseif (MI.2.ivtLRF > 0)
        wlk_matnum = 2
      elseif (MI.2.ivtLOC > 0)
        wlk_matnum = 1
      else
        wlk_matnum = 0
      endif

      if (j=@SanFra_TAZ@, @Millbr_TAZ@, @SanJos_TAZ@, @Gilroy_TAZ@)

        ; if destination is HSR station, drive option is drv-trn-wlk
        drv_ivt    = MI.3.ivt
        drv_ovt    = MI.3.wait + MI.3.dtime + MI.3.waux + MI.3.wegr
        drv_cost   = MI.3.fare + MI.3.ddist*(AUTOOPC_PER_RM+AUTOOPC_PER_FU)
        drv_boards = MI.3.boards

        ; factor boardpen = 0, 15, 30, 45, 60
        if (MI.3.boards <= 1)
          drv_boardpen = 0
        elseif (MI.3.boards <= 2)
          drv_boardpen = 15
        elseif (MI.3.boards <= 3)
          drv_boardpen = 30
        elseif (MI.3.boards <= 4)
          drv_boardpen = 45
        else
          drv_boardpen = 60
        endif

        if     (MI.3.ivtCOM > 0)
          drv_matnum = 5
        elseif (MI.3.ivtHVY > 0)
          drv_matnum = 4
        elseif (MI.3.ivtEXP > 0)
          drv_matnum = 3
        elseif (MI.3.ivtLRF > 0)
          drv_matnum = 2
        elseif (MI.3.ivtLOC > 0)
          drv_matnum = 1
        else
          drv_matnum = 0
        endif

        elseif (i=@SanFra_TAZ@, @Millbr_TAZ@, @SanJos_TAZ@, @Gilroy_TAZ@)

        ; if origin is HSR station, drive option is wlk-trn-drv
        drv_ivt    = MI.4.ivt
        drv_ovt    = MI.4.wait + MI.4.dtime + MI.4.waux + MI.4.wacc
        drv_cost   = MI.4.fare + MI.4.ddist*(AUTOOPC_PER_RM+AUTOOPC_PER_FU)
        drv_boards = MI.4.boards

        ; factor boardpen = 0, 15, 30, 45, 60
        if (MI.4.boards <= 1)
          drv_boardpen = 0
        elseif (MI.4.boards <= 2)
          drv_boardpen = 15
        elseif (MI.4.boards <= 3)
          drv_boardpen = 30
        elseif (MI.4.boards <= 4)
          drv_boardpen = 45
        else
          drv_boardpen = 60
        endif

        if     (MI.4.ivtCOM > 0)
          drv_matnum = 5
        elseif (MI.4.ivtHVY > 0)
          drv_matnum = 4
        elseif (MI.4.ivtEXP > 0)
          drv_matnum = 3
        elseif (MI.4.ivtLRF > 0)
          drv_matnum = 2
        elseif (MI.4.ivtLOC > 0)
          drv_matnum = 1
        else
          drv_matnum = 0
        endif

      endif

      ; initialize/reste the utility and exponential utility values
      utility_wlk = 0.0
      utility_drv = 0.0

      exp_wlk = 0.0
      exp_drv = 0.0

      ; probability calculations
      if (drv_ivt > 0.0 && inputTrips > 0.0)
        if (wlk_ivt > 0.0)
          ; set the utility
          utility_wlk = _kIvtt*wlk_ivt + _kIvtt*wlk_boardpen + _kIvtt*2.0*wlk_ovt + _kCost*wlk_cost
          utility_drv = _kIvtt*drv_ivt + _kIvtt*drv_boardpen + _kIvtt*2.0*drv_ovt + _kCost*drv_cost

          ; compute the exponentiated utility
          exp_wlk = exp(utility_wlk)
          exp_drv = exp(utility_drv)

          ; compute the probability
          prob_wlk = exp_wlk/(exp_wlk + exp_drv)
          prob_drv = 1.0 - prob_wlk
        else
          prob_wlk = 0.0
          prob_drv = 1.0
        endif

      else
        prob_wlk = 1.0
        prob_drv = 0.0

      endif

      ; apply the probabilities to the input trips
      trips_wlk = prob_wlk * inputTrips
      trips_drv = prob_drv * inputTrips

      ; add the values to the output matrices
      if (wlk_matnum > 0) MW[wlk_matnum][j] = trips_wlk
      if (drv_matnum > 0) MW[drv_matnum][j] = trips_drv

    endjloop
  ENDRUN

  EndDistributeMultistep
endloop

Wait4Files files=CTRAMP1.script.end, CTRAMP2.script.end, CTRAMP3.script.end, CTRAMP4.script.end, CTRAMP5.script.end,
           printfiles=merge, deldistribfiles=t, CheckReturnCode=t