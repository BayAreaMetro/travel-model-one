; ----------------------------------------------------------------------------------------------------------------
;
; TransitSkims.job
;
; TP+ script to create transit skim tables for five time periods, three access/egress combinations, and six line-
; haul mode combinations.  The script first loops through the five time periods, which are: (a) early AM, before 
; 6 am; (b) AM peak period, 6 am to 10 am; (c) midday, 10 am to 3 pm; (d) PM peak period, 3 pm to 7 pm; and, (e) 
; evening, after 7 pm. Next the script loops through three access/egress combinations, which are:
; walk/transit/walk; drive/transit/walk; and walk/transit/drive.  Next, the script loops through six line-haul 
; mode combinations, which are: (a) long-haul premium or commuter rail; (b) medium-haul premium or heavy rail 
; (BART) (c) medium-haul basic or express bus; (d) short-haul premium or light rail; (e) short-haul basic 
; or local bus; and, (f) a generic transit path used to calculate accessibility that does not weight specific modes
; in an effort to create different, reasonable travel choices. 
;
; Please note that ferry is included in the short-haul premium or light rail line-haul options.  This was done to
; reduce the number of skims that need to be created.  Because light rail and ferry do not compete with each other, 
; travelers in corridors with light rail are presented with the light rail choice and travelers in corridors with
; ferry are presented with the ferry choice. 
;
; The hierarchy used to create transit path options is as follows: (1) long-haul premium; (2) medium-haul premium; 
; (3) medium-haul basic; (4) short-haul premium; and, (5) short-haul basic.  Using more traditional mode names: 
; (1) commuter rail; (2) heavy rail; (3) express bus; (4) light rail/ferry; (5) local bus.  All modes lower than
; the line-haul mode are made available when skimming the line-haul mode path, in an effort to create a set of
; reasonable transit paths for the mode choice model to assess for each traveler. 
;
; The transit network coding uses the following mode codes: 
;	(1) centroids to walk auxiliary rail nodes/bus stops, or "walk access connectors";
;	(2) centroids to drive auxiliary nodes, or "drive access connectors";
;	(3) transit stop to transit stop walk connectors, or "stop-to-stop" or "stop-to-station auxiliary links";
;	(4) drive auxiliary nodes to station platforms, or "drive access walk funnel links";
;	(5) walk auxiliary nodes to station platforms, or "walk access walk funnel links";
;	(6) walk auxiliary rail nodes/bus stops to centroids, or "walk egress connectors";
;	(7) drive auxiliary nodes to centroids, or "drive egress connectors";
;	(8) not used;
;	(9) not used;
;	(10)  through  (79) local bus modes, coded by, at least, provider; 
;	(80)  through  (99) express bus modes, coded by provider;
;	(100) through (109) ferry service, coded by provider;
;	(110) through (119) light rail, coded by provider;
;	(120) through (129) heavy rail, coded by provider;
;	(130) through (139) commuter rail, coded by provider. 
;
; Input:  (1) A highway network with the variable BUS_TIME that represents link bus times;
;	  (2) A .block file listing all of the origin/destination fare files that contain the o/d fares (transit_faremat.block);
;	  (3) Origin/destination fare files listed in the .block file above (.far files);
;	  (4) A .far file setting fares to links as necessary to account for all the odd fares in the bay area (Farelinks.far);
;	  (5) A .far file setting the transfer fares for all the 139 by 139 modal interchanges (xfare.far);
;	  (6) A .block file listing all of the transit line files (transit_lines.block);
;	  (7) Transit line files listed in the .block file above (.tpl files);
;	  (8) Numerous support link files that connect zones to transit stations via walking or bicycling (*transit_suplinks*.dat);
;	  (9) A .block file that lists commands to combine headways for all line-haul modes when the difference in path time
;             is less than plus or minus five minutes (transit_combined_headways.block);
;        (10) A .block file containing access- and egress-mode-specific transfer prohibitor tables (transferprohibitors*.block);  
;
; Output: (A) A 16-table skim for each time-of-day, access/egress, and line-haul mode combination, containing the following:
;		 (1) Transit in-vehicle time, time (minutes x 100), ivt;
;		 (2) Initial wait time, time (minutes x 100), iwait;
;		 (3) Transfer wait time, time (minutes x 100), xwait;
;		 (4) Walk access time (mode 1), time (minutes x 100), wacc;
;		 (5) Auxiliary walk time (modes 3, 4, and 5), time (minutes x 100), waux;
;		 (6) Walk egress time (mode 6), time (minutes x 100), wegr;
;		 (7) Drive access and/or egress time (modes 2 or 7), time (minutes x 100), dtime;
;		 (8) Drive access and/or egress distance (modes 2 or 7), distance (miles x 100), ddist;
;		 (9) Fare, cents ($2000), fare;
;		(10) Boardings, number, boards;
;		(11) Local bus in-vehicle time (modes 10 through 79), time (minutes x 100), ivtLOC;
;		(12) Light rail and/or ferry in-vehicle time (modes 100 through 119), time (minutes x 100), ivtLRF;
;		(13) Express bus in-vehicle time (modes 80 through 99), time (minutes x 100), ivtEXP;
;		(14) Heavy rail in-vehicle time (modes 120 trhough 129), time (minutes x 100), ivtHVY;
;		(15) Commuter rail in-vehicle time (modes 130 through 139), time (minutes x 100), ivtCOM,
;		(16) Ferry in-vehicle time (modes 100 through 109), time (minutes x 100), ivtFerry.
;
; Notes:  (1) Script modified to use a single computer
;
; See also: (1) PrepHwyNet.job -- computes the bus time as a function of the highway time 
;
; version:  Travel Model One
; authors:  dto, be (2014 02 03); dto (2011 10 27); gde; sai (2009 04 15)
;
;
; ----------------------------------------------------------------------------------------------------------------
   
   counter = 0
   
   ; time period loop
   loop period = 1,5
      
      ; set a debug origin
      token_debug_origin = '342'
           
      ; set a debug destination
      token_debug_destination = '1'
      
      ; set a debug filename prefix
      token_debug_filename = 'logs\TransitSkims'
   
      if (period = 1)   
         token_period   = 'ea'
      
      elseif (period = 2)   
         token_period   = 'am'
      
      elseif (period = 3)   
         token_period   = 'md'
      
      elseif (period = 4)   
         token_period   = 'pm'
      
      elseif (period = 5)   
         token_period   = 'ev' 
      
      endif  
   
      ; access/egress loop (walk/walk, auto/walk, walk/auto)
      loop accegg = 1,3
      
         if (accegg = 1)         
            token_access = 'wlk'
            token_egress = 'wlk'
            token_boardpen = 'factor boardpen = 0, 5, 10, 15, 60'
   
         elseif (accegg = 2)        
            token_access = 'drv'
            token_egress = 'wlk'
            token_boardpen = 'factor boardpen = 0, 15, 30, 45, 60'
   
         elseif (accegg = 3)       
            token_access = 'wlk'
            token_egress = 'drv'
            token_boardpen = 'factor boardpen = 0, 15, 30, 45, 60'
   
         endif
         
         counter = 3 * (period - 1) + accegg
	             
	 ; distribute the tasks
         DistributeMultistep processid = "ctramp", processnum = counter,  commpath = 'm:\commpath'
      
         ; line haul loop
         loop path = 1,6
         
            ; commuter rail or long-haul premium
            if (path = 1) 
         
               ; no transit modes are excluded from this path
               token_skipmodes = '; do not skip any modes for this path'
               
               ; mode-specific perceived time factors
               ;                           support  loc bus  exp bus   ferry  lt rail  hvy rail  com rail
               token_modefac = 'modefac   =  9*2.0,  70*1.5,  20*1.5, 10*1.5,  10*1.5,   10*1.5,   10*1.0'      
               
               ; drive access/egress links to this mode (';' means no)
               ; allow higher-class PNRs to be read in case of shared lots
               token_drivelinks_express_bus   = ';'
               token_drivelinks_light_rail    = ';'
               token_drivelinks_ferry         = ';'
               token_drivelinks_heavy_rail    = ';'
               token_drivelinks_commuter_rail = ' '       
               
               ; KNR access links to local bus
               token_bus_acclinks_KNR = ';'
               
               token_path = 'com'
            
            ; heavy rail or medium-haul premium
            elseif (path = 2)
            
               ; commuter rail excluded from this path
               token_skipmodes = 'skipmodes =  130-139'
               
               ; mode-specific perceived time factors
               ;                           support  loc bus  exp bus   ferry  lt rail  hvy rail  com rail
               token_modefac = 'modefac   =  9*2.0,  70*1.5,  20*1.5, 10*1.5,  10*1.5,   10*1.0,   10*1.5'
   
               ; drive access/egress links to this mode (';' means no)
               ; allow higher-class PNRs to be read in case of shared lots
               token_drivelinks_express_bus   = ';'
               token_drivelinks_light_rail    = ';'
               token_drivelinks_ferry         = ';'
               token_drivelinks_heavy_rail    = ' '
               token_drivelinks_commuter_rail = ' '      
   
              ; KNR access links to local bus
               token_bus_acclinks_KNR = ';'
               
               token_path = 'hvy'
            
            ; express bus or medium-haul basic
            elseif (path = 3)
            
               ; commuter rail and heavy rail excluded from this path
               token_skipmodes = 'skipmodes =  130-139,120-139'
               
               ; mode-specific perceived time factors
   	    ;                        support  loc bus  exp bus   ferry  lt rail  hvy rail  com rail
               token_modefac = 'modefac = 9*2.0,  70*1.5,  20*1.0, 10*1.5,  10*1.5,   10*1.5,   10*1.5'
               
               ; drive access/egress links to this mode (';' means no)
               ; allow higher-class PNRs to be read in case of shared lots
               token_drivelinks_express_bus   = ' '
               token_drivelinks_light_rail    = ';'
               token_drivelinks_ferry         = ';'
               token_drivelinks_heavy_rail    = ' '
               token_drivelinks_commuter_rail = ' '                 
   
              ; KNR access links to local bus
               token_bus_acclinks_KNR = ';'
               
               token_path = 'exp'
            
            ; light rail (or ferry) or short-haul premium
            elseif (path = 4)
            
               ; commuter rail, heavy rail, and express bus excluded from this path
               token_skipmodes = 'skipmodes =  130-139,120-139,80-99'
               
               ; mode-specific perceived time factors
               ;                           support  loc bus  exp bus   ferry  lt rail  hvy rail  com rail
               token_modefac = 'modefac =    9*2.0,  70*1.5,  20*1.5, 10*1.0,  10*1.0,   10*1.5,   10*1.5'  
               
               ; drive access/egress links to this mode (';' means no)
               ; allow higher-class PNRs to be read in case of shared lots
               token_drivelinks_express_bus   = ' '
               token_drivelinks_light_rail    = ' '
               token_drivelinks_ferry         = ' '
               token_drivelinks_heavy_rail    = ' '
               token_drivelinks_commuter_rail = ' '                   
              
              ; KNR access links to local bus
               token_bus_acclinks_KNR = ';'
               
               token_path = 'lrf'
            
            ; local bus or short-haul basic
            elseif (path = 5)
            
               ; commuter rail, heavy rail, express bus, light rail, and ferry excluded from this path
               token_skipmodes = 'skipmodes =  130-139,120-139,80-99,100-119'
               
               ; mode-specific perceived time factors
               ;                           support  loc bus  exp bus   ferry  lt rail  hvy rail  com rail
               token_modefac = 'modefac  =   9*2.0,  70*1.0,  20*1.5, 10*1.5,  10*1.5,   10*1.5,   10*1.5'  
            
   
               ; drive access/egress links to this mode (';' means no)
               ; allow higher-class PNRs to be read in case of shared lots
               token_drivelinks_express_bus   = ' '
               token_drivelinks_light_rail    = ' '
               token_drivelinks_ferry         = ' '
               token_drivelinks_heavy_rail    = ' '
               token_drivelinks_commuter_rail = ' '                   
                
              ; KNR access links to local bus
               token_bus_acclinks_KNR = ' '
               
               token_path = 'loc'
            
            ; all transit treated equally
            elseif (path = 6)
               
               ; no transit modes are excluded from this path
               token_skipmodes = '; do not skip any modes for this path'
               
               ; mode-specific perceived time factors
               ;                           support  loc bus  exp bus   ferry  lt rail  hvy rail  com rail
               token_modefac = 'modefac   =  9*2.0,  70*1.0,  20*1.0, 10*1.0,  10*1.0,   10*1.0,   10*1.0' 
   
              ; KNR access links to local bus
               token_bus_acclinks_KNR = ' '
               
               token_path = 'trn'
            
            endif
   
            run pgm = trnbuild
                
                ; use the highway network with the computed bus times 
                filei neti  = trn\@token_period@_transit_background.net
                                      
                ; read in the fare matrices
                read file = trn\transit_faremat.block
                read file = trn\farelinks.far
                read file = trn\xfare.far
                
                ; output skim matrix
                fileo mato  = skims\trnskm@token_period@_@token_access@_@token_path@_@token_egress@.tpp
                
                ; the bus times are based on those computed in the highway network
                hwytime = BUS_TIME
                
                ; read the transit line and link files
                read file = trn\transit_lines.block             
                
                ; read in the generated walk support links
                read file = trn\@token_period@_transit_suplinks_walk.dat
                
                ; read in the generated drive access/egress links for this mode             
                @token_drivelinks_express_bus@    read file = trn\@token_period@_transit_suplinks_express_bus.dat
                @token_drivelinks_light_rail@     read file = trn\@token_period@_transit_suplinks_light_rail.dat
                @token_drivelinks_ferry@          read file = trn\@token_period@_transit_suplinks_ferry.dat
                @token_drivelinks_heavy_rail@     read file = trn\@token_period@_transit_suplinks_heavy_rail.dat
                @token_drivelinks_commuter_rail@  read file = trn\@token_period@_transit_suplinks_commuter_rail.dat            
                
                ; read in the generated KNR links for local bus
                @token_bus_acclinks_KNR@    READ FILE = trn\@TOKEN_PERIOD@_BUS_ACCLINKS_KNR.DAT
                
                ; set the service headways
                freqperiod = @period@
                
                ; we do not need access links built
                zoneaccess generate = no
                
                ; path parameter: 0 - best path by mode; 1 - single best path
                parameters pathstyle = 0 
                
                ; path parameter: we want to build paths
                parameters buildpaths = t   
                
                ; path parameter: assumed walking speed is 3.0 miles per hour
                parameters walkspeed = 3
                
                ; path parameter: do not list all of the input
                parameters listinput = no
                
                ; path parameter: we do not use the route time coded in the line files; bus times are a function of highway times
                parameters useruntime = n        
                
                ; path parameter: the maximum path time for a single route is 3 hours or 180 minutes
                parameters maxruntime = 180
                
                ; path parameter: the maximum perceived path time for a single route is 4 hours or 240 minutes
                parameters maxpathtime = 240
                
                ; perceived time factors: first boarding is free; second, third, and fourth boarding adds five perceived minutes; 
                ; discourage more than four transfers with a 60 minute penalty
                @token_boardpen@
                
                ; perceived time factors: initial wait time is equivalent to 2.0 minutes of ride time for modes 10 through 255  
                factor iwaitfac[10] = 246 * 2.0
                
                ; perceived time factors: transfer wait time is equivalent to 2.0 minutes of ride time for modes 1 through 255 (xxx why not same as above xxx)
                factor xwaitfac = 255 * 2.0
                
                ; perceived time factors: use token_skipmodes to remove modes from the network per the hierarchy
                @token_skipmodes@
                
                ; perceived time factors: slow down non-key modes by 50 percent; walk and drive by 100 percent; use token_modefac
                @token_modefac@
   
                ; combine paths if runtimes differ by less than 5 minutes
                read file = ctramp\scripts\block\transit_combined_headways.block
                
                ; read in the transfer prohibitors file
                read file = ctramp\scripts\block\transferprohibitors_@token_access@_trn_@token_egress@.block
                
                ; set the desired output
                matrices name = ivt, iwait, xwait, wait, wacc, waux, wegr, dtime, ddist, fare, boards, ivtLOC, ivtLRF, ivtEXP, ivtHVY, ivtCOM, ivtFerry, ivtMUNILoc, ivtMUNIMet,
                                 
                         ; in-vehicle time for all transit modes, use TP+ code 1001    
                         mw[1]  = time(1001),
                         
                         ; initial wait time, use TP+ code 'iwait'
                         mw[2]  = iwait,
                         
                         ; transfer wait time for all transit modes, use TP+ code 'xwait' and 1001 for all modes
                         mw[3]  = xwait(1001),
                         
                         ; total wait time - use a single matrix so can save memory when reading into Java
                         mw[4]  = (iwait + xwait(1001)), 
                         
                         ; walk access (mode 1) time
                         mw[5]  = time(1),
                         
                         ; walk auxiliary (modes 3, 4, and 5) time
                         mw[6]  = time(3,4,5),
                         
                         ; walk egress (mode 6) time
                         mw[7]  = time(6),
                         
                         ; drive access or egress (modes 2 and 7) time
                         mw[8]  = time(2,7),
                         
                         ; drive access or egress (modes 2 and 7) distance
                         mw[9]  = dist(2,7),    
                         
                         ; each of the fare types (transfers, matrices, and boarding fares) for all modes
                         mw[10] = xfare + modefare + faremat(1001),
                         
                         ; number of boardings
                         mw[11] = boards,
                         
                         ; local bus in-vehicle time (modes 10 through 79)         
                         mw[12] = time(10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79), 
                                                       
                         ; light rail and/or ferry in-vehicle time (modes 100 through 119)
                         mw[13] = time(100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119),            
                         
                         ; express bus in-vehicle time (modes 80 through 99)
                         mw[14] = time(80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99),    
                         
                         ; heavy rail (BART) in-vehicle time (modes 120 through 129)
                         mw[15] = time(120,121,122,123,124,125,126,127,128,129),           
                         
                         ; commuter rail in-vehicle time (modes 130 through 139)
                         mw[16] = time(130,131,132,133,134,135,136,137,138,139), 
                         
                         ; capture the ferry in-vehicle time in order to distinguish between ferry paths and light rail paths in the light rail/ferry choice                  
                         mw[17] = time(100,101,102,103,104,105,106,107,108,109),
                         
                         ; muni local time
                         mw[18] = time(20,21),
                         
                         ; muni metro time
                         mw[19] = time(110)
                         
                ; trace a selection of o/d pairs for debugging
                select trace=(i=@token_debug_origin@ && j=@token_debug_destination@)
               
            endrun
            
            ; print out some debug
   	 run pgm = matrix
   	    
   	    mati[1] = skims\trnskm@token_period@_@token_access@_@token_path@_@token_egress@.tpp
   	       
   	    jloop
   	       
   	       ; debug print
   	       if (i = @token_debug_origin@ & j = @token_debug_destination@) 
   	          
   	          ; one header
   	          if (@period@ = 1 & @accegg@ = 1 & @path@ = 1)
   	             
   	             list = 'Debug for origin zone ',@token_debug_origin@(5.0),'  and destination zone ',@token_debug_destination@(5.0),'.', 
   	                    file = @token_debug_filename@.@token_period@.@token_access@.@token_path@.@token_egress@.debug
   	             list = ' ', file = @token_debug_filename@.@token_period@.@token_access@.@token_path@.@token_egress@.debug
   	             
   	             list = '  time   access  egress  path     ivt   iwait   xwait    wacc    waux    wegr   dtime   ddist    fare',
   	                    '  boards  ivtLOC  ivtLRF  ivtEXP  ivtHVY  ivtCOM ivtFerry', 
   	                    file = @token_debug_filename@.@token_period@.@token_access@.@token_path@.@token_egress@.debug
   	             list = ' -----  ------- ------- ----- ------- ------- ------- ------- ------- ------- ------- ------- -------',
   	                    ' ------- ------- ------- ------- ------- ------- --------', 
   	                    file = @token_debug_filename@.@token_period@.@token_access@.@token_path@.@token_egress@.debug
   	             
                     ; break for each access/time combination
   	          elseif (@path@ = 1)
   	             
   	             list = ' -----  ------- ------- ----- ------- ------- ------- ------- ------- ------- ------- ------- -------',
   	                    ' ------- ------- ------- ------- ------- ------- --------', 
   	                    file = @token_debug_filename@.@token_period@.@token_access@.@token_path@.@token_egress@.debug
   	             
   	          endif
   	             
   	          list = '    @token_period@      @token_access@     @token_egress@   @token_path@', mi.1.ivt(8.0), mi.1.iwait(8.0), 
   	                 mi.1.xwait(8.0), mi.1.wacc(8.0), mi.1.waux(8.0), mi.1.wegr(8.0), mi.1.dtime(8.0), mi.1.ddist(8.0), mi.1.fare(8.0), 
   	                 mi.1.boards(8.0),mi.1.ivtLOC(8.0), mi.1.ivtLRF(8.0), mi.1.ivtEXP(8.0), mi.1.ivtHVY(8.0), mi.1.ivtCOM(8.0), mi.1.ivtFerry(9.0), 
   	                 file = @token_debug_filename@.@token_period@.@token_access@.@token_path@.@token_egress@.debug
   	                           
   	       endif
   	       
   	    endjloop
   	    
         endrun
            
      endloop ; line haul loop
      
      EndDistributeMultistep
         
   endloop ; access/egress loop   
   
 endloop ; time period loop
   
 wait4files files = ctramp1.script.end, 
      	            ctramp2.script.end, 
      	            ctramp3.script.end, 
      	            ctramp4.script.end, 
      	            ctramp5.script.end,
      	            ctramp6.script.end, 
      	            ctramp7.script.end, 
      	            ctramp8.script.end, 
      	            ctramp9.script.end, 
      	            ctramp10.script.end, 
      	            ctramp11.script.end, 
      	            ctramp12.script.end, 
      	            ctramp13.script.end, 
      	            ctramp14.script.end, 
      	            ctramp15.script.end, 
              printfiles = merge, DelDistribFiles = t, CheckReturnCode = t
              
; put in a quick dummy tp+ action to see if this helps the return code 4 error
run pgm = matrix

   fileo mato = deleteMe.mtx, mo = 1
   
   zones = 10
   
   ; loop through each destinaton zone
   jloop
   
     mw[1] = i + j
   
   endjloop
   
   

endrun
              

; combine all the debug output
* copy @token_debug_filename@.ea.wlk.com.wlk.debug+@token_debug_filename@.ea.wlk.hvy.wlk.debug+@token_debug_filename@.ea.wlk.exp.wlk.debug+@token_debug_filename@.ea.wlk.lrf.wlk.debug+@token_debug_filename@.ea.wlk.loc.wlk.debug+@token_debug_filename@.ea.wlk.trn.wlk.debug @token_debug_filename@.ea.wlk.all.wlk.debug
* copy @token_debug_filename@.am.wlk.com.wlk.debug+@token_debug_filename@.am.wlk.hvy.wlk.debug+@token_debug_filename@.am.wlk.exp.wlk.debug+@token_debug_filename@.am.wlk.lrf.wlk.debug+@token_debug_filename@.am.wlk.loc.wlk.debug+@token_debug_filename@.am.wlk.trn.wlk.debug @token_debug_filename@.am.wlk.all.wlk.debug
* copy @token_debug_filename@.md.wlk.com.wlk.debug+@token_debug_filename@.md.wlk.hvy.wlk.debug+@token_debug_filename@.md.wlk.exp.wlk.debug+@token_debug_filename@.md.wlk.lrf.wlk.debug+@token_debug_filename@.md.wlk.loc.wlk.debug+@token_debug_filename@.md.wlk.trn.wlk.debug @token_debug_filename@.md.wlk.all.wlk.debug
* copy @token_debug_filename@.pm.wlk.com.wlk.debug+@token_debug_filename@.pm.wlk.hvy.wlk.debug+@token_debug_filename@.pm.wlk.exp.wlk.debug+@token_debug_filename@.pm.wlk.lrf.wlk.debug+@token_debug_filename@.pm.wlk.loc.wlk.debug+@token_debug_filename@.pm.wlk.trn.wlk.debug @token_debug_filename@.pm.wlk.all.wlk.debug
* copy @token_debug_filename@.ev.wlk.com.wlk.debug+@token_debug_filename@.ev.wlk.hvy.wlk.debug+@token_debug_filename@.ev.wlk.exp.wlk.debug+@token_debug_filename@.ev.wlk.lrf.wlk.debug+@token_debug_filename@.ev.wlk.loc.wlk.debug+@token_debug_filename@.ev.wlk.trn.wlk.debug @token_debug_filename@.ev.wlk.all.wlk.debug
    													 											 					
* copy @token_debug_filename@.ea.wlk.com.drv.debug+@token_debug_filename@.ea.wlk.hvy.drv.debug+@token_debug_filename@.ea.wlk.exp.drv.debug+@token_debug_filename@.ea.wlk.lrf.drv.debug+@token_debug_filename@.ea.wlk.loc.drv.debug+@token_debug_filename@.ea.wlk.trn.drv.debug @token_debug_filename@.ea.wlk.all.drv.debug
* copy @token_debug_filename@.am.wlk.com.drv.debug+@token_debug_filename@.am.wlk.hvy.drv.debug+@token_debug_filename@.am.wlk.exp.drv.debug+@token_debug_filename@.am.wlk.lrf.drv.debug+@token_debug_filename@.am.wlk.loc.drv.debug+@token_debug_filename@.am.wlk.trn.drv.debug @token_debug_filename@.am.wlk.all.drv.debug
* copy @token_debug_filename@.md.wlk.com.drv.debug+@token_debug_filename@.md.wlk.hvy.drv.debug+@token_debug_filename@.md.wlk.exp.drv.debug+@token_debug_filename@.md.wlk.lrf.drv.debug+@token_debug_filename@.md.wlk.loc.drv.debug+@token_debug_filename@.md.wlk.trn.drv.debug @token_debug_filename@.md.wlk.all.drv.debug
* copy @token_debug_filename@.pm.wlk.com.drv.debug+@token_debug_filename@.pm.wlk.hvy.drv.debug+@token_debug_filename@.pm.wlk.exp.drv.debug+@token_debug_filename@.pm.wlk.lrf.drv.debug+@token_debug_filename@.pm.wlk.loc.drv.debug+@token_debug_filename@.pm.wlk.trn.drv.debug @token_debug_filename@.pm.wlk.all.drv.debug
* copy @token_debug_filename@.ev.wlk.com.drv.debug+@token_debug_filename@.ev.wlk.hvy.drv.debug+@token_debug_filename@.ev.wlk.exp.drv.debug+@token_debug_filename@.ev.wlk.lrf.drv.debug+@token_debug_filename@.ev.wlk.loc.drv.debug+@token_debug_filename@.ev.wlk.trn.drv.debug @token_debug_filename@.ev.wlk.all.drv.debug
																										   
* copy @token_debug_filename@.ea.drv.com.wlk.debug+@token_debug_filename@.ea.drv.hvy.wlk.debug+@token_debug_filename@.ea.drv.exp.wlk.debug+@token_debug_filename@.ea.drv.lrf.wlk.debug+@token_debug_filename@.ea.drv.loc.wlk.debug+@token_debug_filename@.ea.drv.trn.wlk.debug @token_debug_filename@.ea.drv.all.wlk.debug
* copy @token_debug_filename@.am.drv.com.wlk.debug+@token_debug_filename@.am.drv.hvy.wlk.debug+@token_debug_filename@.am.drv.exp.wlk.debug+@token_debug_filename@.am.drv.lrf.wlk.debug+@token_debug_filename@.am.drv.loc.wlk.debug+@token_debug_filename@.am.drv.trn.wlk.debug @token_debug_filename@.am.drv.all.wlk.debug
* copy @token_debug_filename@.md.drv.com.wlk.debug+@token_debug_filename@.md.drv.hvy.wlk.debug+@token_debug_filename@.md.drv.exp.wlk.debug+@token_debug_filename@.md.drv.lrf.wlk.debug+@token_debug_filename@.md.drv.loc.wlk.debug+@token_debug_filename@.md.drv.trn.wlk.debug @token_debug_filename@.md.drv.all.wlk.debug
* copy @token_debug_filename@.pm.drv.com.wlk.debug+@token_debug_filename@.pm.drv.hvy.wlk.debug+@token_debug_filename@.pm.drv.exp.wlk.debug+@token_debug_filename@.pm.drv.lrf.wlk.debug+@token_debug_filename@.pm.drv.loc.wlk.debug+@token_debug_filename@.pm.drv.trn.wlk.debug @token_debug_filename@.pm.drv.all.wlk.debug
* copy @token_debug_filename@.ev.drv.com.wlk.debug+@token_debug_filename@.ev.drv.hvy.wlk.debug+@token_debug_filename@.ev.drv.exp.wlk.debug+@token_debug_filename@.ev.drv.lrf.wlk.debug+@token_debug_filename@.ev.drv.loc.wlk.debug+@token_debug_filename@.ev.drv.trn.wlk.debug @token_debug_filename@.ev.drv.all.wlk.debug

* copy @token_debug_filename@.ea.wlk.all.wlk.debug+@token_debug_filename@.am.wlk.all.wlk.debug+@token_debug_filename@.md.wlk.all.wlk.debug+@token_debug_filename@.pm.wlk.all.wlk.debug+@token_debug_filename@.ev.wlk.all.wlk.debug @token_debug_filename@wlk.all.wlk.debug
* copy @token_debug_filename@.ea.drv.all.wlk.debug+@token_debug_filename@.am.drv.all.wlk.debug+@token_debug_filename@.md.drv.all.wlk.debug+@token_debug_filename@.pm.drv.all.wlk.debug+@token_debug_filename@.ev.drv.all.wlk.debug @token_debug_filename@drv.all.wlk.debug
* copy @token_debug_filename@.ea.wlk.all.drv.debug+@token_debug_filename@.am.wlk.all.drv.debug+@token_debug_filename@.md.wlk.all.drv.debug+@token_debug_filename@.pm.wlk.all.drv.debug+@token_debug_filename@.ev.wlk.all.drv.debug @token_debug_filename@wlk.all.drv.debug

* copy @token_debug_filename@wlk.all.wlk.debug+@token_debug_filename@drv.all.wlk.debug+@token_debug_filename@wlk.all.drv.debug disco.text

* del @token_debug_filename@*.debug
* copy disco.text @token_debug_filename@.debug
* del disco.text

* del deleteMe.mtx


