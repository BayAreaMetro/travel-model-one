; TODO
; 1. update documentation
; 2. test
; ----------------------------------------------------------------------------------------------------------------
;
; TransitSkims.job
;
; TP+ script to create transit skim tables for five time periods, three access/egress combinations, and six line-
; haul mode combinations.  The script first loops through the five time periods, which are: (a) early AM, before 
; 6 am; (b) AM peak period, 6 am to 10 am; (c) midday, 10 am to 3 pm; (d) PM peak period, 3 pm to 7 pm; and, (e) 
; evening, after 7 pm. Next the script loops through three access/egress combinations, which are:
; walk/transit/walk; drive/transit/walk; and walk/transit/drive.  Next, the script loops through six line-haul 
; mode combinations, which are: (a) long-haul premium or commuter rail; (b) medium-haul premium or heavy rail 
; (BART) (c) medium-haul basic or express bus; (d) short-haul premium or light rail; (e) short-haul basic 
; or local bus; and, (f) a generic transit path used to calculate accessibility that does not weight specific modes
; in an effort to create different, reasonable travel choices. 
;
; Please note that ferry is included in the short-haul premium or light rail line-haul options.  This was done to
; reduce the number of skims that need to be created.  Because light rail and ferry do not compete with each other, 
; travelers in corridors with light rail are presented with the light rail choice and travelers in corridors with
; ferry are presented with the ferry choice. 
;
; The hierarchy used to create transit path options is as follows: (1) long-haul premium; (2) medium-haul premium; 
; (3) medium-haul basic; (4) short-haul premium; and, (5) short-haul basic.  Using more traditional mode names: 
; (1) commuter rail; (2) heavy rail; (3) express bus; (4) light rail/ferry; (5) local bus.  All modes lower than
; the line-haul mode are made available when skimming the line-haul mode path, in an effort to create a set of
; reasonable transit paths for the mode choice model to assess for each traveler. 
;
; The transit network coding uses the following mode codes: 
;	(1) centroids to walk auxiliary rail nodes/bus stops, or "walk access connectors";
;	(2) centroids to drive auxiliary nodes, or "drive access connectors";
;	(3) transit stop to transit stop walk connectors, or "stop-to-stop" or "stop-to-station auxiliary links";
;	(4) drive auxiliary nodes to station platforms, or "drive access walk funnel links";
;	(5) walk auxiliary nodes to station platforms, or "walk access walk funnel links";
;	(6) walk auxiliary rail nodes/bus stops to centroids, or "walk egress connectors";
;	(7) drive auxiliary nodes to centroids, or "drive egress connectors";
;	(8) not used;
;	(9) not used;
;	(10)  through  (79) local bus modes, coded by, at least, provider; 
;	(80)  through  (99) express bus modes, coded by provider;
;	(100) through (109) ferry service, coded by provider;
;	(110) through (119) light rail, coded by provider;
;	(120) through (129) heavy rail, coded by provider;
;	(130) through (139) commuter rail, coded by provider. 
;
; Input:  (1) A highway network with the variable BUS_TIME that represents link bus times;
;	  (2) A .block file listing all of the origin/destination fare files that contain the o/d fares (transit_faremat.block);
;	  (3) Origin/destination fare files listed in the .block file above (.far files);
;	  (4) A .far file setting fares to links as necessary to account for all the odd fares in the bay area (Farelinks.far);
;	  (5) A .far file setting the transfer fares for all the 139 by 139 modal interchanges (xfare.far);
;	  (6) A .block file listing all of the transit line files (transit_lines.block);
;	  (7) Transit line files listed in the .block file above (.tpl files);
;	  (8) Numerous support link files that connect zones to transit stations via walking or bicycling (*transit_suplinks*.dat);
;	  (9) A .block file that lists commands to combine headways for all line-haul modes when the difference in path time
;	       is less than plus or minus five minutes (transit_combined_headways.block);
;	 (10) A .block file containing access- and egress-mode-specific transfer prohibitor tables (transferprohibitors*.block);
;	 (11) A .block file containing boarding penalties by mode code, in minutes (Boarding_Penalties_by_Mode_Code.block);
;	 (12) A .block file containing in-vehicle penalties by mode code, in minutes per mile 
;	      (Invehicle_Penalties_by_Mode_Code.block);
;
; Output: (A) A 16-table skim for each time-of-day, access/egress, and line-haul mode combination, containing the following:
;		 (1) Transit in-vehicle time, time (minutes x 100), ivt;
;		 (2) Initial wait time, time (minutes x 100), iwait;
;		 (3) Transfer wait time, time (minutes x 100), xwait;
;		 (4) Walk access time (mode 1), time (minutes x 100), wacc;
;		 (5) Auxiliary walk time (modes 3, 4, and 5), time (minutes x 100), waux;
;		 (6) Walk egress time (mode 6), time (minutes x 100), wegr;
;		 (7) Drive access and/or egress time (modes 2 or 7), time (minutes x 100), dtime;
;		 (8) Drive access and/or egress distance (modes 2 or 7), distance (miles x 100), ddist;
;		 (9) Fare, cents ($2000), fare;
;		(10) Boardings, number, boards;
;		(11) Local bus in-vehicle time (modes 10 through 79), time (minutes x 100), ivtLOC;
;		(12) Light rail and/or ferry in-vehicle time (modes 100 through 119), time (minutes x 100), ivtLRF;
;		(13) Express bus in-vehicle time (modes 80 through 99), time (minutes x 100), ivtEXP;
;		(14) Heavy rail in-vehicle time (modes 120 trhough 129), time (minutes x 100), ivtHVY;
;		(15) Commuter rail in-vehicle time (modes 130 through 139), time (minutes x 100), ivtCOM,
;		(16) Ferry in-vehicle time (modes 100 through 109), time (minutes x 100), ivtFerry.
;
; Notes:  (1) Script modified to use a single computer
;
; See also: (1) PrepHwyNet.job -- computes the bus time as a function of the highway time 
;
; version:  Travel Model One
; authors:  dto, be (2014 02 03); dto (2011 10 27); gde; sai (2009 04 15)
;
;
; ----------------------------------------------------------------------------------------------------------------
   
   counter = 0
   
   ; time period loop
   loop period = 1,5
      
      ; set a debug origin
      token_debug_origin = '342'
           
      ; set a debug destination
      token_debug_destination = '1'
      
      ; set a debug filename prefix
      token_debug_filename = 'logs\TransitSkims'
   
      if (period = 1)   
         token_period   = 'ea'
      
      elseif (period = 2)   
         token_period   = 'am'
      
      elseif (period = 3)   
         token_period   = 'md'
      
      elseif (period = 4)   
         token_period   = 'pm'
      
      elseif (period = 5)   
         token_period   = 'ev' 
      
      endif  
   
      ; access/egress loop (walk/walk, auto/walk, walk/auto)
      loop accegg = 1,3
      
         if (accegg = 1)         
            token_access = 'wlk'
            token_egress = 'wlk'
            token_boardpen = 'factor boardpen = 0, 5, 10, 15, 60'
   
         elseif (accegg = 2)        
            token_access = 'drv'
            token_egress = 'wlk'
            token_boardpen = 'factor boardpen = 0, 15, 30, 45, 60'
   
         elseif (accegg = 3)       
            token_access = 'wlk'
            token_egress = 'drv'
            token_boardpen = 'factor boardpen = 0, 15, 30, 45, 60'
   
         endif
         
         counter = 3 * (period - 1) + accegg
	             
	 ; distribute the tasks
         DistributeMultistep processid = "ctramp", processnum = counter,  commpath = 'X:\commpath'
      
         ; line haul loop
         loop path = 1,6
         
            ; commuter rail or long-haul premium
            if (path = 1) 
         
               ; no transit modes are excluded from this path
               token_skipmodes = '; do not skip any modes for this path'
               
               ; mode-specific perceived time factors
               ;                           support  loc bus  exp bus   ferry  lt rail  hvy rail  com rail
               token_modefac = 'modefac   =  9*2.0,  70*1.5,  20*1.5, 10*1.5,  10*1.5,   10*1.5,   10*1.0'      
               
               ; drive access/egress links to this mode (';' means no)
               ; allow higher-class PNRs to be read in case of shared lots
               token_drivelinks_express_bus   = ';'
               token_drivelinks_light_rail    = ';'
               token_drivelinks_ferry         = ';'
               token_drivelinks_heavy_rail    = ';'
               token_drivelinks_commuter_rail = ' '       
               
               ; KNR access links to local bus
               token_bus_acclinks_KNR = ';'
               
               token_path = 'com'
            
            ; heavy rail or medium-haul premium
            elseif (path = 2)
            
               ; commuter rail excluded from this path
               token_skipmodes = 'skipmodes =  130-139'
               
               ; mode-specific perceived time factors
               ;                           support  loc bus  exp bus   ferry  lt rail  hvy rail  com rail
               token_modefac = 'modefac   =  9*2.0,  70*1.5,  20*1.5, 10*1.5,  10*1.5,   10*1.0,   10*1.5'
   
               ; drive access/egress links to this mode (';' means no)
               ; allow higher-class PNRs to be read in case of shared lots
               token_drivelinks_express_bus   = ';'
               token_drivelinks_light_rail    = ';'
               token_drivelinks_ferry         = ';'
               token_drivelinks_heavy_rail    = ' '
               token_drivelinks_commuter_rail = ' '      
   
              ; KNR access links to local bus
               token_bus_acclinks_KNR = ';'
               
               token_path = 'hvy'
            
            ; express bus or medium-haul basic
            elseif (path = 3)
            
               ; commuter rail and heavy rail excluded from this path
               token_skipmodes = 'skipmodes =  130-139,120-139'
               
               ; mode-specific perceived time factors
   	    ;                        support  loc bus  exp bus   ferry  lt rail  hvy rail  com rail
               token_modefac = 'modefac = 9*2.0,  70*1.5,  20*1.0, 10*1.5,  10*1.5,   10*1.5,   10*1.5'
               
               ; drive access/egress links to this mode (';' means no)
               ; allow higher-class PNRs to be read in case of shared lots
               token_drivelinks_express_bus   = ' '
               token_drivelinks_light_rail    = ';'
               token_drivelinks_ferry         = ';'
               token_drivelinks_heavy_rail    = ' '
               token_drivelinks_commuter_rail = ' '                 
   
              ; KNR access links to local bus
               token_bus_acclinks_KNR = ';'
               
               token_path = 'exp'
            
            ; light rail (or ferry) or short-haul premium
            elseif (path = 4)
            
               ; commuter rail, heavy rail, and express bus excluded from this path
               token_skipmodes = 'skipmodes =  130-139,120-139,80-99'
               
               ; mode-specific perceived time factors
               ;                           support  loc bus  exp bus   ferry  lt rail  hvy rail  com rail
               token_modefac = 'modefac =    9*2.0,  70*1.5,  20*1.5, 10*1.0,  10*1.0,   10*1.5,   10*1.5'  
               
               ; drive access/egress links to this mode (';' means no)
               ; allow higher-class PNRs to be read in case of shared lots
               token_drivelinks_express_bus   = ' '
               token_drivelinks_light_rail    = ' '
               token_drivelinks_ferry         = ' '
               token_drivelinks_heavy_rail    = ' '
               token_drivelinks_commuter_rail = ' '                   
              
              ; KNR access links to local bus
               token_bus_acclinks_KNR = ';'
               
               token_path = 'lrf'
            
            ; local bus or short-haul basic
            elseif (path = 5)
            
               ; commuter rail, heavy rail, express bus, light rail, and ferry excluded from this path
               token_skipmodes = 'skipmodes =  130-139,120-139,80-99,100-119'
               
               ; mode-specific perceived time factors
               ;                           support  loc bus  exp bus   ferry  lt rail  hvy rail  com rail
               token_modefac = 'modefac  =   9*2.0,  70*1.0,  20*1.5, 10*1.5,  10*1.5,   10*1.5,   10*1.5'  
            
   
               ; drive access/egress links to this mode (';' means no)
               ; allow higher-class PNRs to be read in case of shared lots
               token_drivelinks_express_bus   = ' '
               token_drivelinks_light_rail    = ' '
               token_drivelinks_ferry         = ' '
               token_drivelinks_heavy_rail    = ' '
               token_drivelinks_commuter_rail = ' '                   
                
              ; KNR access links to local bus
               token_bus_acclinks_KNR = ' '
               
               token_path = 'loc'
            
            ; all transit treated equally
            elseif (path = 6)
               
               ; no transit modes are excluded from this path
               token_skipmodes = '; do not skip any modes for this path'
               
               ; mode-specific perceived time factors
               ;                           support  loc bus  exp bus   ferry  lt rail  hvy rail  com rail
               token_modefac = 'modefac   =  9*2.0,  70*1.0,  20*1.0, 10*1.0,  10*1.0,   10*1.0,   10*1.0' 
   
              ; KNR access links to local bus
               token_bus_acclinks_KNR = ' '
               
               token_path = 'trn'
            
            endif
   
            run pgm = trnbuild

                ; path parameter: do not list all of the input
                parameters listinput = F

                ; use the highway network with the computed bus times 
                filei neti  = trn\@token_period@_transit_background.net
                                      
                ; read in the fare matrices
                read file = trn\transit_faremat.block
                read file = trn\farelinks.far
                read file = trn\xfare.far
                
                ; output skim matrix
                fileo mato  = skims\trnskm@token_period@_@token_access@_@token_path@_@token_egress@_temp.tpp
                
                ; the bus times are based on those computed in the highway network
                hwytime = BUS_TIME
                
                ; read the transit line and link files
                read file = trn\transitLines.link             
                read file = trn\transitLines.lin             

                ; read in the generated walk support links
                read file = trn\@token_period@_transit_suplinks_walk.dat
                
                ; read in the generated drive access/egress links for this mode             
                @token_drivelinks_express_bus@    read file = trn\@token_period@_transit_suplinks_express_bus.dat
                @token_drivelinks_light_rail@     read file = trn\@token_period@_transit_suplinks_light_rail.dat
                @token_drivelinks_ferry@          read file = trn\@token_period@_transit_suplinks_ferry.dat
                @token_drivelinks_heavy_rail@     read file = trn\@token_period@_transit_suplinks_heavy_rail.dat
                @token_drivelinks_commuter_rail@  read file = trn\@token_period@_transit_suplinks_commuter_rail.dat            
                
                ; read in the generated KNR links for local bus
                @token_bus_acclinks_KNR@    READ FILE = trn\@TOKEN_PERIOD@_BUS_ACCLINKS_KNR.DAT
                
                ; set the service headways
                freqperiod = @period@
                
                ; we do not need access links built
                zoneaccess generate = no
                
                ; path parameter: 0 - best path by mode; 1 - single best path
                parameters pathstyle = 0 
                
                ; path parameter: we want to build paths
                parameters buildpaths = t   
                
                ; path parameter: assumed walking speed is 3.0 miles per hour
                parameters walkspeed = 3
                
                ; path parameter: we do not use the route time coded in the line files; bus times are a function of highway times
                parameters useruntime = n        
                
                ; path parameter: the maximum path time for a single route is 3 hours or 180 minutes
                parameters maxruntime = 180
                
                ; path parameter: the maximum perceived path time for a single route is 4 hours or 240 minutes
                parameters maxpathtime = 240
                
                ; perceived time factors: first boarding is free; second, third, and fourth boarding adds five perceived minutes; 
                ; discourage more than four transfers with a 60 minute penalty
                @token_boardpen@
                
                ; perceived time factors: initial wait time is equivalent to 2.0 minutes of ride time for modes 10 through 255  
                factor iwaitfac[10] = 246 * 2.0
                
                ; perceived time factors: transfer wait time is equivalent to 2.0 minutes of ride time for modes 1 through 255 (xxx why not same as above xxx)
                factor xwaitfac = 255 * 2.0
                
                ; perceived time factors: use token_skipmodes to remove modes from the network per the hierarchy
                @token_skipmodes@
                
                ; perceived time factors: slow down non-key modes by 50 percent; walk and drive by 100 percent; use token_modefac
                @token_modefac@
   
                ; combine paths if runtimes differ by less than 5 minutes
                read file = ctramp\scripts\block\transit_combined_headways.block
                
                ; read in the transfer prohibitors file
                read file = ctramp\scripts\block\transferprohibitors_@token_access@_trn_@token_egress@.block
                
                ; set the desired output
                matrices name = ivt, iwait, xwait, wait, wacc, waux, wegr, dtime, ddist, fare, boards, ivtLOC, ivtLRF, ivtEXP, ivtHVY, ivtCOM, ivtFerry, 
                                dist_10,dist_11,dist_12,dist_13,dist_14,dist_15,dist_16,dist_17,dist_18,dist_19,
                                dist_20,dist_21,dist_24,dist_28,dist_30,dist_33,dist_38,dist_40,dist_42,dist_44,
                                dist_46,dist_49,dist_52,dist_55,dist_56,dist_58,dist_60,dist_63,dist_66,dist_68,
                                dist_70,dist_80,dist_81,dist_82,dist_84,dist_86,dist_87,dist_88,dist_90,dist_91,
                                dist_92,dist_93,dist_94,dist_100,dist_101,dist_102,dist_103,dist_104,dist_110,dist_111,
                                dist_120,dist_121,dist_130,dist_131,dist_132,dist_133,dist_134,dist_135,dist_136,dist_137,
                                distLOC, distLRF, distEXP, distHVY, distCOM, distFerry,

                                 
                         ; in-vehicle time for all transit modes, use TP+ code 1001    
                         mw[1]  = time(1001),
                         
                         ; initial wait time, use TP+ code 'iwait'
                         mw[2]  = iwait,
                         
                         ; transfer wait time for all transit modes, use TP+ code 'xwait' and 1001 for all modes
                         mw[3]  = xwait(1001),
                         
                         ; total wait time - use a single matrix so can save memory when reading into Java
                         mw[4]  = (iwait + xwait(1001)), 
                         
                         ; walk access (mode 1) time
                         mw[5]  = time(1),
                         
                         ; walk auxiliary (modes 3, 4, and 5) time
                         mw[6]  = time(3,4,5),
                         
                         ; walk egress (mode 6) time
                         mw[7]  = time(6),
                         
                         ; drive access or egress (modes 2 and 7) time
                         mw[8]  = time(2,7),
                         
                         ; drive access or egress (modes 2 and 7) distance
                         mw[9]  = dist(2,7),    
                         
                         ; each of the fare types (transfers, matrices, and boarding fares) for all modes
                         mw[10] = xfare + modefare + faremat(1001),
                         
                         ; number of boardings
                         mw[11] = boards,
                         
                         ; local bus in-vehicle time (modes 10 through 79)         
                         mw[12] = time(10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79), 
                                                       
                         ; light rail and/or ferry in-vehicle time (modes 100 through 119)
                         mw[13] = time(100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119),            
                         
                         ; express bus in-vehicle time (modes 80 through 99)
                         mw[14] = time(80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99),    
                         
                         ; heavy rail (BART) in-vehicle time (modes 120 through 129)
                         mw[15] = time(120,121,122,123,124,125,126,127,128,129),           
                         
                         ; commuter rail in-vehicle time (modes 130 through 139)
                         mw[16] = time(130,131,132,133,134,135,136,137,138,139), 
                         
                         ; capture the ferry in-vehicle time in order to distinguish between ferry paths and light rail paths in the light rail/ferry choice (modes 100 to 109)                  
                         mw[17] = time(100,101,102,103,104,105,106,107,108,109),
                         
                         mw[18] = dist(10),
                         mw[19] = dist(11),
                         mw[20] = dist(12),
                         mw[21] = dist(13),
                         mw[22] = dist(14),
                         mw[23] = dist(15),
                         mw[24] = dist(16),
                         mw[25] = dist(17),
                         mw[26] = dist(18),
                         mw[27] = dist(19),

                         mw[28] = dist(20),
                         mw[29] = dist(21),
                         mw[30] = dist(24),
                         mw[31] = dist(28),
                         mw[32] = dist(30),
                         mw[33] = dist(33),
                         mw[34] = dist(38),
                         mw[35] = dist(40),
                         mw[36] = dist(42),
                         mw[37] = dist(44),

                         mw[38] = dist(46),
                         mw[39] = dist(49),
                         mw[40] = dist(52),
                         mw[41] = dist(55),
                         mw[42] = dist(56),
                         mw[43] = dist(58),
                         mw[44] = dist(60),
                         mw[45] = dist(63),
                         mw[46] = dist(66),
                         mw[47] = dist(68),

                         mw[48] = dist(70),
                         mw[49] = dist(80),
                         mw[50] = dist(81),
                         mw[51] = dist(82),
                         mw[52] = dist(84),
                         mw[53] = dist(86),
                         mw[54] = dist(87),
                         mw[55] = dist(88),
                         mw[56] = dist(90),
                         mw[57] = dist(91),

                         mw[58] = dist(92),
                         mw[59] = dist(93),
                         mw[60] = dist(94),
                         mw[61] = dist(100),
                         mw[62] = dist(101),
                         mw[63] = dist(102),
                         mw[64] = dist(103),
                         mw[65] = dist(104),
                         mw[66] = dist(110),
                         mw[67] = dist(111),

                         mw[68] = dist(120),
                         mw[69] = dist(121),
                         mw[70] = dist(130),
                         mw[71] = dist(131),
                         mw[72] = dist(132),
                         mw[73] = dist(133),
                         mw[74] = dist(134),
                         mw[75] = dist(135),
                         mw[76] = dist(136),
                         mw[77] = dist(137),

                         ; local bus distance (modes 10 through 79)
                         mw[78] = dist(10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79), 

                         ; light rail and/or ferry distance (modes 100 through 119)
                         mw[79] = dist(100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119),

                         ; express bus distance (modes 80 through 99)
                         mw[80] = dist(80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99),

                         ; heavy rail (BART) distance (modes 120 through 129)
                         mw[81] = dist(120,121,122,123,124,125,126,127,128,129),

                         ; commuter rail distance (modes 130 through 139)
                         mw[82] = dist(130,131,132,133,134,135,136,137,138,139),

                         ; capture the ferry distance in order to distinguish between ferry paths and light rail paths in the light rail/ferry choice (modes 100 to 109)
                         mw[83] = dist(100,101,102,103,104,105,106,107,108,109)

                ; trace a selection of o/d pairs for debugging
                select trace=(i=@token_debug_origin@ && j=@token_debug_destination@)
               
         endrun
         
         run pgm = matrix
         
            filei mati = skims\trnskm@token_period@_@token_access@_@token_path@_@token_egress@_temp.tpp
            
            fileo mato = skims\trnskm@token_period@_@token_access@_@token_path@_@token_egress@_board_delay.tpp, mo = 1, 
                         name = wait_board_delay
                         
                         
            ; read in boarding penalties
            read file = sgr\boarding_penalties_by_mode_code.block
            jloop
              _BoardCount      = 0
              _BoardDelay      = 0
              _FinalBoardDelay = 0

         ; -----------------------------------------------
         if (mi.1.dist_10 > 0)
            _BoardDelay = _BoardDelay + (100*_board_10)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_11 > 0)
            _BoardDelay = _BoardDelay + (100*_board_11)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_12 > 0)
            _BoardDelay = _BoardDelay + (100*_board_12)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_13 > 0)
            _BoardDelay = _BoardDelay + (100*_board_13)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_14 > 0)
            _BoardDelay = _BoardDelay + (100*_board_14)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_15 > 0)
            _BoardDelay = _BoardDelay + (100*_board_15)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_16 > 0)
            _BoardDelay = _BoardDelay + (100*_board_16)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_17 > 0)
            _BoardDelay = _BoardDelay + (100*_board_17)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_18 > 0)
            _BoardDelay = _BoardDelay + (100*_board_18)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_19 > 0)
            _BoardDelay = _BoardDelay + (100*_board_19)
            _BoardCount = _BoardCount + 1
         endif
         ; -----------------------------------------------
         if (mi.1.dist_20 > 0)
            _BoardDelay = _BoardDelay + (100*_board_20)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_21 > 0)
            _BoardDelay = _BoardDelay + (100*_board_21)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_24 > 0)
            _BoardDelay = _BoardDelay + (100*_board_24)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_28 > 0)
            _BoardDelay = _BoardDelay + (100*_board_28)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_30 > 0)
            _BoardDelay = _BoardDelay + (100*_board_30)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_33 > 0)
            _BoardDelay = _BoardDelay + (100*_board_33)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_38 > 0)
            _BoardDelay = _BoardDelay + (100*_board_38)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_40 > 0)
            _BoardDelay = _BoardDelay + (100*_board_40)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_42 > 0)
            _BoardDelay = _BoardDelay + (100*_board_42)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_44 > 0)
            _BoardDelay = _BoardDelay + (100*_board_44)
            _BoardCount = _BoardCount + 1
         endif
         ; -----------------------------------------------
         if (mi.1.dist_46 > 0)
            _BoardDelay = _BoardDelay + (100*_board_46)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_49 > 0)
            _BoardDelay = _BoardDelay + (100*_board_49)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_52 > 0)
            _BoardDelay = _BoardDelay + (100*_board_52)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_55 > 0)
            _BoardDelay = _BoardDelay + (100*_board_55)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_56 > 0)
            _BoardDelay = _BoardDelay + (100*_board_56)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_58 > 0)
            _BoardDelay = _BoardDelay + (100*_board_58)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_60 > 0)
            _BoardDelay = _BoardDelay + (100*_board_60)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_63 > 0)
            _BoardDelay = _BoardDelay + (100*_board_63)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_66 > 0)
            _BoardDelay = _BoardDelay + (100*_board_66)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_68 > 0)
            _BoardDelay = _BoardDelay + (100*_board_68)
            _BoardCount = _BoardCount + 1
         endif
         ; -----------------------------------------------
         if (mi.1.dist_70 > 0)
            _BoardDelay = _BoardDelay + (100*_board_70)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_80 > 0)
            _BoardDelay = _BoardDelay + (100*_board_80)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_81 > 0)
            _BoardDelay = _BoardDelay + (100*_board_81)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_82 > 0)
            _BoardDelay = _BoardDelay + (100*_board_82)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_84 > 0)
            _BoardDelay = _BoardDelay + (100*_board_84)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_86 > 0)
            _BoardDelay = _BoardDelay + (100*_board_86)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_87 > 0)
            _BoardDelay = _BoardDelay + (100*_board_87)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_88 > 0)
            _BoardDelay = _BoardDelay + (100*_board_88)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_90 > 0)
            _BoardDelay = _BoardDelay + (100*_board_90)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_91 > 0)
            _BoardDelay = _BoardDelay + (100*_board_91)
            _BoardCount = _BoardCount + 1
         endif
         ; -----------------------------------------------
         if (mi.1.dist_92 > 0)
            _BoardDelay = _BoardDelay + (100*_board_92)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_93 > 0)
            _BoardDelay = _BoardDelay + (100*_board_93)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_94 > 0)
            _BoardDelay = _BoardDelay + (100*_board_94)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_100 > 0)
            _BoardDelay = _BoardDelay + (100*_board_100)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_101 > 0)
            _BoardDelay = _BoardDelay + (100*_board_101)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_102 > 0)
            _BoardDelay = _BoardDelay + (100*_board_102)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_103 > 0)
            _BoardDelay = _BoardDelay + (100*_board_103)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_104 > 0)
            _BoardDelay = _BoardDelay + (100*_board_104)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_110 > 0)
            _BoardDelay = _BoardDelay + (100*_board_110)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_111 > 0)
            _BoardDelay = _BoardDelay + (100*_board_111)
            _BoardCount = _BoardCount + 1
         endif
         ; -----------------------------------------------
         if (mi.1.dist_120 > 0)
            _BoardDelay = _BoardDelay + (100*_board_120)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_121 > 0)
            _BoardDelay = _BoardDelay + (100*_board_121)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_130 > 0)
            _BoardDelay = _BoardDelay + (100*_board_130)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_131 > 0)
            _BoardDelay = _BoardDelay + (100*_board_131)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_132 > 0)
            _BoardDelay = _BoardDelay + (100*_board_132)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_133 > 0)
            _BoardDelay = _BoardDelay + (100*_board_133)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_134 > 0)
            _BoardDelay = _BoardDelay + (100*_board_134)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_135 > 0)
            _BoardDelay = _BoardDelay + (100*_board_135)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_136 > 0)
            _BoardDelay = _BoardDelay + (100*_board_136)
            _BoardCount = _BoardCount + 1
         endif

         if (mi.1.dist_137 > 0)
            _BoardDelay = _BoardDelay + (100*_board_137)
            _BoardCount = _BoardCount + 1
         endif

         if (_BoardCount > 0) _FinalBoardDelay = _BoardDelay + ((_BoardDelay/_BoardCount) * (mi.1.boards - _BoardCount))
         mw[1] = _FinalBoardDelay

         endjloop
         endrun

         run pgm = matrix
         
            filei mati = skims\trnskm@token_period@_@token_access@_@token_path@_@token_egress@_temp.tpp
	                
	    fileo mato = skims\trnskm@token_period@_@token_access@_@token_path@_@token_egress@_ivtt_delay.tpp, mo = 1-7, 
                         name = loc_ivtt_delay, exp_ivtt_delay, lrt_ivtt_delay, hvy_ivtt_delay, com_ivtt_delay, fer_ivtt_delay, all_ivtt_delay     
                         
            ; read in boarding penalties
            read file = sgr\invehicle_penalties_by_mode_code.block
            
            jloop
               ; local: 10-79
               mw[1] = mi.1.dist_10  * _invehicle_10  +
                       mi.1.dist_11  * _invehicle_11  +
                       mi.1.dist_12  * _invehicle_12  +
                       mi.1.dist_13  * _invehicle_13  +
                       mi.1.dist_14  * _invehicle_14  +
                       mi.1.dist_15  * _invehicle_15  +
                       mi.1.dist_16  * _invehicle_16  +
                       mi.1.dist_17  * _invehicle_17  +
                       mi.1.dist_18  * _invehicle_18  +
                       mi.1.dist_19  * _invehicle_19  +
                       mi.1.dist_20  * _invehicle_20  +
                       mi.1.dist_21  * _invehicle_21  +
                       mi.1.dist_24  * _invehicle_24  +
                       mi.1.dist_28  * _invehicle_28  +
                       mi.1.dist_30  * _invehicle_30  +
                       mi.1.dist_33  * _invehicle_33  +
                       mi.1.dist_38  * _invehicle_38  +
                       mi.1.dist_40  * _invehicle_40  +
                       mi.1.dist_42  * _invehicle_42  +
                       mi.1.dist_44  * _invehicle_44  +
                       mi.1.dist_46  * _invehicle_46  +
                       mi.1.dist_49  * _invehicle_49  +
                       mi.1.dist_52  * _invehicle_52  +
                       mi.1.dist_55  * _invehicle_55  +
                       mi.1.dist_56  * _invehicle_56  +
                       mi.1.dist_58  * _invehicle_58  +
                       mi.1.dist_60  * _invehicle_60  +
                       mi.1.dist_63  * _invehicle_63  +
                       mi.1.dist_66  * _invehicle_66  +
                       mi.1.dist_68  * _invehicle_68  +
                       mi.1.dist_70  * _invehicle_70
               ; express bus: 80-99
               mw[2] = mi.1.dist_80  * _invehicle_80  +
                       mi.1.dist_81  * _invehicle_81  +
                       mi.1.dist_82  * _invehicle_82  +
                       mi.1.dist_84  * _invehicle_84  +
                       mi.1.dist_86  * _invehicle_86  +
                       mi.1.dist_87  * _invehicle_87  +
                       mi.1.dist_88  * _invehicle_88  +
                       mi.1.dist_90  * _invehicle_90  +
                       mi.1.dist_91  * _invehicle_91  +
                       mi.1.dist_92  * _invehicle_92  +
                       mi.1.dist_93  * _invehicle_93  +
                       mi.1.dist_94  * _invehicle_94
               ; light rail:    110 - 119
               mw[3] = mi.1.dist_110 * _invehicle_110 +
                       mi.1.dist_111 * _invehicle_111
               ; heavy rail: 120-129
               mw[4] = mi.1.dist_120 * _invehicle_120 +
                       mi.1.dist_121 * _invehicle_121
               ; commuter rail: 130-139
               mw[5] = mi.1.dist_130 * _invehicle_130 +
                       mi.1.dist_131 * _invehicle_131 +
                       mi.1.dist_132 * _invehicle_132 +
                       mi.1.dist_133 * _invehicle_133 +
                       mi.1.dist_134 * _invehicle_134 +
                       mi.1.dist_135 * _invehicle_135 +
                       mi.1.dist_136 * _invehicle_136 +
                       mi.1.dist_137 * _invehicle_137
               ; ferry service: 100 - 109
               mw[6] = mi.1.dist_100 * _invehicle_100 +
                       mi.1.dist_101 * _invehicle_101 +
                       mi.1.dist_102 * _invehicle_102 +
                       mi.1.dist_103 * _invehicle_103 +
                       mi.1.dist_104 * _invehicle_104

               mw[7] = mw[1] + mw[2] + mw[3] + mw[4] + mw[5] + mw[6]

            endjloop

         endrun
         
         run pgm = matrix
         
            filei mati[1] = skims\trnskm@token_period@_@token_access@_@token_path@_@token_egress@_temp.tpp
            filei mati[2] = skims\trnskm@token_period@_@token_access@_@token_path@_@token_egress@_board_delay.tpp
            filei mati[3] = skims\trnskm@token_period@_@token_access@_@token_path@_@token_egress@_ivtt_delay.tpp
            
            fileo mato    = skims\trnskm@token_period@_@token_access@_@token_path@_@token_egress@.tpp, mo = 1 - 17,
                            name = ivt, iwait, xwait, wait, wacc, waux, wegr, dtime, ddist, fare, boards, ivtLOC, ivtLRF, ivtEXP, ivtHVY, ivtCOM, ivtFerry
                            
            mw[1]  = mi.1.ivt   + mi.3.all_ivtt_delay
            mw[2]  = mi.1.iwait + mi.2.wait_board_delay
            mw[3]  = mi.1.xwait
            mw[4]  = mi.1.wait  + mi.2.wait_board_delay
            mw[5]  = mi.1.wacc
            mw[6]  = mi.1.waux
            mw[7]  = mi.1.wegr
            mw[8]  = mi.1.dtime
            mw[9]  = mi.1.ddist
            mw[10] = mi.1.fare
            mw[11] = mi.1.boards
            mw[12] = mi.1.ivtLOC   + mi.3.loc_ivtt_delay
            mw[13] = mi.1.ivtLRF   + mi.3.lrt_ivtt_delay
            mw[14] = mi.1.ivtEXP   + mi.3.exp_ivtt_delay
            mw[15] = mi.1.ivtHVY   + mi.3.hvy_ivtt_delay
            mw[16] = mi.1.ivtCOM   + mi.3.com_ivtt_delay
            mw[17] = mi.1.ivtFerry + mi.3.fer_ivtt_delay
         
         endrun
                     
         ; print out some debug
   	 run pgm = matrix
   	    
   	    mati[1] = skims\trnskm@token_period@_@token_access@_@token_path@_@token_egress@.tpp
   	       
   	    jloop
   	       
   	       ; debug print
   	       if (i = @token_debug_origin@ & j = @token_debug_destination@) 
   	          
   	          ; one header
   	          if (@period@ = 1 & @accegg@ = 1 & @path@ = 1)
   	             
   	             list = 'Debug for origin zone ',@token_debug_origin@(5.0),'  and destination zone ',@token_debug_destination@(5.0),'.', 
   	                    file = @token_debug_filename@.@token_period@.@token_access@.@token_path@.@token_egress@.debug
   	             list = ' ', file = @token_debug_filename@.@token_period@.@token_access@.@token_path@.@token_egress@.debug
   	             
   	             list = '  time   access  egress  path     ivt   iwait   xwait    wacc    waux    wegr   dtime   ddist    fare',
   	                    '  boards  ivtLOC  ivtLRF  ivtEXP  ivtHVY  ivtCOM ivtFerry', 
   	                    file = @token_debug_filename@.@token_period@.@token_access@.@token_path@.@token_egress@.debug
   	             list = ' -----  ------- ------- ----- ------- ------- ------- ------- ------- ------- ------- ------- -------',
   	                    ' ------- ------- ------- ------- ------- ------- --------', 
   	                    file = @token_debug_filename@.@token_period@.@token_access@.@token_path@.@token_egress@.debug
   	             
                     ; break for each access/time combination
   	          elseif (@path@ = 1)
   	             
   	             list = ' -----  ------- ------- ----- ------- ------- ------- ------- ------- ------- ------- ------- -------',
   	                    ' ------- ------- ------- ------- ------- ------- --------', 
   	                    file = @token_debug_filename@.@token_period@.@token_access@.@token_path@.@token_egress@.debug
   	             
   	          endif
   	             
   	          list = '    @token_period@      @token_access@     @token_egress@   @token_path@', mi.1.ivt(8.0), mi.1.iwait(8.0), 
   	                 mi.1.xwait(8.0), mi.1.wacc(8.0), mi.1.waux(8.0), mi.1.wegr(8.0), mi.1.dtime(8.0), mi.1.ddist(8.0), mi.1.fare(8.0), 
   	                 mi.1.boards(8.0),mi.1.ivtLOC(8.0), mi.1.ivtLRF(8.0), mi.1.ivtEXP(8.0), mi.1.ivtHVY(8.0), mi.1.ivtCOM(8.0), mi.1.ivtFerry(9.0), 
   	                 file = @token_debug_filename@.@token_period@.@token_access@.@token_path@.@token_egress@.debug
   	                           
   	       endif
   	       
   	    endjloop
   	    
         endrun
            
      endloop ; line haul loop
      
      EndDistributeMultistep
         
   endloop ; access/egress loop   
   
 endloop ; time period loop
   
 wait4files files = ctramp1.script.end, 
      	            ctramp2.script.end, 
      	            ctramp3.script.end, 
      	            ctramp4.script.end, 
      	            ctramp5.script.end,
      	            ctramp6.script.end, 
      	            ctramp7.script.end, 
      	            ctramp8.script.end, 
      	            ctramp9.script.end, 
      	            ctramp10.script.end, 
      	            ctramp11.script.end, 
      	            ctramp12.script.end, 
      	            ctramp13.script.end, 
      	            ctramp14.script.end, 
      	            ctramp15.script.end, 
              printfiles = merge, DelDistribFiles = t, CheckReturnCode = t
                   

; combine all the debug output
* copy @token_debug_filename@.ea.wlk.com.wlk.debug+@token_debug_filename@.ea.wlk.hvy.wlk.debug+@token_debug_filename@.ea.wlk.exp.wlk.debug+@token_debug_filename@.ea.wlk.lrf.wlk.debug+@token_debug_filename@.ea.wlk.loc.wlk.debug+@token_debug_filename@.ea.wlk.trn.wlk.debug @token_debug_filename@.ea.wlk.all.wlk.debug
* copy @token_debug_filename@.am.wlk.com.wlk.debug+@token_debug_filename@.am.wlk.hvy.wlk.debug+@token_debug_filename@.am.wlk.exp.wlk.debug+@token_debug_filename@.am.wlk.lrf.wlk.debug+@token_debug_filename@.am.wlk.loc.wlk.debug+@token_debug_filename@.am.wlk.trn.wlk.debug @token_debug_filename@.am.wlk.all.wlk.debug
* copy @token_debug_filename@.md.wlk.com.wlk.debug+@token_debug_filename@.md.wlk.hvy.wlk.debug+@token_debug_filename@.md.wlk.exp.wlk.debug+@token_debug_filename@.md.wlk.lrf.wlk.debug+@token_debug_filename@.md.wlk.loc.wlk.debug+@token_debug_filename@.md.wlk.trn.wlk.debug @token_debug_filename@.md.wlk.all.wlk.debug
* copy @token_debug_filename@.pm.wlk.com.wlk.debug+@token_debug_filename@.pm.wlk.hvy.wlk.debug+@token_debug_filename@.pm.wlk.exp.wlk.debug+@token_debug_filename@.pm.wlk.lrf.wlk.debug+@token_debug_filename@.pm.wlk.loc.wlk.debug+@token_debug_filename@.pm.wlk.trn.wlk.debug @token_debug_filename@.pm.wlk.all.wlk.debug
* copy @token_debug_filename@.ev.wlk.com.wlk.debug+@token_debug_filename@.ev.wlk.hvy.wlk.debug+@token_debug_filename@.ev.wlk.exp.wlk.debug+@token_debug_filename@.ev.wlk.lrf.wlk.debug+@token_debug_filename@.ev.wlk.loc.wlk.debug+@token_debug_filename@.ev.wlk.trn.wlk.debug @token_debug_filename@.ev.wlk.all.wlk.debug
    													 											 					
* copy @token_debug_filename@.ea.wlk.com.drv.debug+@token_debug_filename@.ea.wlk.hvy.drv.debug+@token_debug_filename@.ea.wlk.exp.drv.debug+@token_debug_filename@.ea.wlk.lrf.drv.debug+@token_debug_filename@.ea.wlk.loc.drv.debug+@token_debug_filename@.ea.wlk.trn.drv.debug @token_debug_filename@.ea.wlk.all.drv.debug
* copy @token_debug_filename@.am.wlk.com.drv.debug+@token_debug_filename@.am.wlk.hvy.drv.debug+@token_debug_filename@.am.wlk.exp.drv.debug+@token_debug_filename@.am.wlk.lrf.drv.debug+@token_debug_filename@.am.wlk.loc.drv.debug+@token_debug_filename@.am.wlk.trn.drv.debug @token_debug_filename@.am.wlk.all.drv.debug
* copy @token_debug_filename@.md.wlk.com.drv.debug+@token_debug_filename@.md.wlk.hvy.drv.debug+@token_debug_filename@.md.wlk.exp.drv.debug+@token_debug_filename@.md.wlk.lrf.drv.debug+@token_debug_filename@.md.wlk.loc.drv.debug+@token_debug_filename@.md.wlk.trn.drv.debug @token_debug_filename@.md.wlk.all.drv.debug
* copy @token_debug_filename@.pm.wlk.com.drv.debug+@token_debug_filename@.pm.wlk.hvy.drv.debug+@token_debug_filename@.pm.wlk.exp.drv.debug+@token_debug_filename@.pm.wlk.lrf.drv.debug+@token_debug_filename@.pm.wlk.loc.drv.debug+@token_debug_filename@.pm.wlk.trn.drv.debug @token_debug_filename@.pm.wlk.all.drv.debug
* copy @token_debug_filename@.ev.wlk.com.drv.debug+@token_debug_filename@.ev.wlk.hvy.drv.debug+@token_debug_filename@.ev.wlk.exp.drv.debug+@token_debug_filename@.ev.wlk.lrf.drv.debug+@token_debug_filename@.ev.wlk.loc.drv.debug+@token_debug_filename@.ev.wlk.trn.drv.debug @token_debug_filename@.ev.wlk.all.drv.debug
																										   
* copy @token_debug_filename@.ea.drv.com.wlk.debug+@token_debug_filename@.ea.drv.hvy.wlk.debug+@token_debug_filename@.ea.drv.exp.wlk.debug+@token_debug_filename@.ea.drv.lrf.wlk.debug+@token_debug_filename@.ea.drv.loc.wlk.debug+@token_debug_filename@.ea.drv.trn.wlk.debug @token_debug_filename@.ea.drv.all.wlk.debug
* copy @token_debug_filename@.am.drv.com.wlk.debug+@token_debug_filename@.am.drv.hvy.wlk.debug+@token_debug_filename@.am.drv.exp.wlk.debug+@token_debug_filename@.am.drv.lrf.wlk.debug+@token_debug_filename@.am.drv.loc.wlk.debug+@token_debug_filename@.am.drv.trn.wlk.debug @token_debug_filename@.am.drv.all.wlk.debug
* copy @token_debug_filename@.md.drv.com.wlk.debug+@token_debug_filename@.md.drv.hvy.wlk.debug+@token_debug_filename@.md.drv.exp.wlk.debug+@token_debug_filename@.md.drv.lrf.wlk.debug+@token_debug_filename@.md.drv.loc.wlk.debug+@token_debug_filename@.md.drv.trn.wlk.debug @token_debug_filename@.md.drv.all.wlk.debug
* copy @token_debug_filename@.pm.drv.com.wlk.debug+@token_debug_filename@.pm.drv.hvy.wlk.debug+@token_debug_filename@.pm.drv.exp.wlk.debug+@token_debug_filename@.pm.drv.lrf.wlk.debug+@token_debug_filename@.pm.drv.loc.wlk.debug+@token_debug_filename@.pm.drv.trn.wlk.debug @token_debug_filename@.pm.drv.all.wlk.debug
* copy @token_debug_filename@.ev.drv.com.wlk.debug+@token_debug_filename@.ev.drv.hvy.wlk.debug+@token_debug_filename@.ev.drv.exp.wlk.debug+@token_debug_filename@.ev.drv.lrf.wlk.debug+@token_debug_filename@.ev.drv.loc.wlk.debug+@token_debug_filename@.ev.drv.trn.wlk.debug @token_debug_filename@.ev.drv.all.wlk.debug

* copy @token_debug_filename@.ea.wlk.all.wlk.debug+@token_debug_filename@.am.wlk.all.wlk.debug+@token_debug_filename@.md.wlk.all.wlk.debug+@token_debug_filename@.pm.wlk.all.wlk.debug+@token_debug_filename@.ev.wlk.all.wlk.debug @token_debug_filename@wlk.all.wlk.debug
* copy @token_debug_filename@.ea.drv.all.wlk.debug+@token_debug_filename@.am.drv.all.wlk.debug+@token_debug_filename@.md.drv.all.wlk.debug+@token_debug_filename@.pm.drv.all.wlk.debug+@token_debug_filename@.ev.drv.all.wlk.debug @token_debug_filename@drv.all.wlk.debug
* copy @token_debug_filename@.ea.wlk.all.drv.debug+@token_debug_filename@.am.wlk.all.drv.debug+@token_debug_filename@.md.wlk.all.drv.debug+@token_debug_filename@.pm.wlk.all.drv.debug+@token_debug_filename@.ev.wlk.all.drv.debug @token_debug_filename@wlk.all.drv.debug

* copy @token_debug_filename@wlk.all.wlk.debug+@token_debug_filename@drv.all.wlk.debug+@token_debug_filename@wlk.all.drv.debug disco.text

* del @token_debug_filename@*.debug
* copy disco.text @token_debug_filename@.debug
* del disco.text
