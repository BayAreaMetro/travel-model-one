; ----------------------------------------------------------------------------------------------------------------
;
; CreateFiveHighwayNetworks.job
;
; TP+ script to create five time-of-day specific highway networks to be used in transit skimming and assignment. 
; The five time periods are as follows: (a) early AM, 3 am to 6 am; (b) AM peak period, 6 am to 10 am; (c) midday, 
; 10 am to 3 pm; (d) PM peak period, 3 pm to 7 pm; and, (e) evening, 7 pm to 3 am the next day.  The networks are 
; identical save the following: (i) the reversible lanes on the Golden Gate bridge head southbound in the early AM, AM
; peak period, and midday periods and northbound in the PM and evening periods; (ii) the Caldecott tunnel has 
; X lanes headed westbound in the early AM, AM peak period and midday periods and X lanes headed eastbound in the
; PM peak and evening periods; (iii) the fixed time toll delay links are given time-of-day specific values; (iv) 
; the shared ride toll bypass lanes are either left in place or deleted. 
;
; Input: (1) A highway network containing the following fields: (a) TOLLBOOTH (see SetTolls.job); (b) FFT, free
;            flow travel time for fixed time links (i.e. volume has no impact); (c) LANES, which is the number
;            of travel lanes. 
;
; Output: Five time-of-day-specific highway networks to be used in skimming and assignment. 
;
;
; See also: (1) HwySkims.job, which does the skimming
;           (2) SetTolls.job, which sets the toll values in the network
;
; version:  Travel Model Zed
; authors:  dto (2010 08 10); crf (2013 07)
; revised jef (2016 08 09) to work with cube 6.4
; version: TM 1.5 BCM
; author jmh 10 2022
; ----------------------------------------------------------------------------------------------------------------

;set fft, and drop off non-hwy links
run pgm = hwynet

;    PAR NODES=10000000

   ; begin with the standard input network
   neti = hwy\complete_network_tolls_at_capclass.net

   ; write out to the same name with the added variables   
   neto = hwy\complete_network_tolls_at_capclass_int.net
   
   ;drive links and TAZ/MAZ connectors only, network already has ASSIGNABLE field.
   IF (CNTYPE = 'TAZ' ) ASSIGNABLE = 1
   ;IF (DRIVE_ACCESS = 0) DELETE

   if (FFS > 0)
       FFT = (60.0 / 5280.0) * FEET / FFS ; (60 minutes / 1 hour) * (1 mile / 5280 feet) * (feet) * (miles / hour) => minutes
   else
       FFT = (60.0 / 5280.0) * FEET / 25 ; put a default of 25 mph
   endif
   
endrun

; build a network for each time period
loop period = 1, 5
     
   ; a two letter token is used for each time period
   if (period = 1)   
   
      token_period = 'EA' 
      
      ; turn HOV into free flow
      token_hov_to_freeflow = 'if (USECLASS_EA = 2 | USECLASS_EA = 3) USECLASS_EA = 1'
      
  
   elseif (period = 2)   
      token_period = 'AM'
      
       ; do not turn HOV into free flow
      token_hov_to_freeflow = '; do not turn HOV into free flow'
  
  
   elseif (period = 3)   
      token_period = 'MD' 
      
      ; turn HOV into free flow
      token_hov_to_freeflow = 'if (USECLASS_MD = 2 | USECLASS_MD = 3) USECLASS_MD = 1'
  
   elseif (period = 4)   
      token_period = 'PM'
      
       ; do not turn HOV into free flow
      token_hov_to_freeflow = '; do not turn HOV into free flow'
      
  
   elseif (period = 5)   
      token_period = 'EV'
      
      ; turn HOV into free flow
      token_hov_to_freeflow = 'if (USECLASS_EV = 2 | USECLASS_EV = 3) USECLASS_EV = 1'

      
   endif
   
   
   run pgm = hwynet

      ; begin with the input network with tolls added
      neti = hwy\complete_network_tolls_at_capclass_int.net
     
      ; write out to the same name with the added variables   
      neto = hwy\avgload@token_period@.net
      
      ; set the time-period-specific congested times to free-flow times
      CTIM = FFT
      
      ; set period-specific lanes and useclass (already added in the network)
	  
      LANES = LANES_@token_period@
      ;ML_LANES = ML_LANES_@token_period@ ;ML_LANES not in network
      USECLASS = USECLASS_@token_period@
      
      ; turn hov lanes off
      @token_hov_to_freeflow@
      
      ; disallow park-and-ride across certain bridges
	  IF (ROADWAY='PNR')
		PNROK=1
	  ELSE
		PNROK=0
	  ENDIF
        
   endrun
   
endloop ; token_period
