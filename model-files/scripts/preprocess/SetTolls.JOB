; ----------------------------------------------------------------------------------------------------------------
;
; SetTolls.job
;
; TP+ script to set the bridge and value tolls in the highway network.  A value toll is paid to save time by
; taking a parallel (e.g. HOT) or nearby facility.  The time periods are: early AM, 3 am to 6 am; AM peak, 6 am to
; 10 am; midday, 10 am to 3 pm; PM peak, 3 pm to 7 pm; and evening, 7 pm to 3 am the next day.
;
; A separate SetTolls.job is needed for each forecast year and for each pricing alternative.
;
; The variable TOLLCLASS specifies one of the eight existing Bay Area bridge toll booths as follows:
; (1) Benicia-Martinez Bridge; (2) Carquinez Bridge; (3) Richmond Bridge; (4) Golden Gate Bridge; (5) San Francisco/
; Oakland Bay Bridge; (6) San Mateo Bridge; (7) Dumbarton Bridge; (8) Antioch Bridge.  TOLLCLASS codes nine and ten
; are reserved for testing new Bridges.
;
; TOLLCLASS codes 31 and above (please see hwyParam.block which denotes this value) are reserved for so-called "value
; toll" facilities, which are currently used to model high-occupancy toll (HOT) lanes.  These variables can be used
; to toll specific links (each link with a different toll needs a different TOLLCLASS code).
;
; All tolls should be expressed in year 2000 cents.
;
; Separate tolls can be charged to each of seven vehicle classes, as follows: (1) single-occupancy passenger
; vehicles, or drive alone, "DA"; (2) two-occupant passenger vehicles, or shared ride two, "S2"; (3) three-or-more-
; occupant passenger vehicles, or shared ride three, "S3"; (4) very small commercial trucks, which are assumed to
; be two-axle vehicles, "VSM"; (5) small commercial trucks, which are assumed to be two-axle vehicles, "SML"; (6)
; medium commercial trucks, which are assumed to be three-axle vehicles, "MED"; and, (7) combination trucks, which
; are charged the average of the five- and six-axle fee, "LRG".
;
;
; Input: (1) A highway network containing the field (a) TOLLCLASS, which is a code distinguishing bridge
;            tolls -- one through firstValue - 1 -- from value tolls -- firstValue or greater, firstValue
;            is coded in thehwyParam.block file); (b) USE, which is a code defining
;            which class of vehicles can use which link, 0 - everyone, 2 - two occupants, 3 - three occupants,
;            4 - no large trucks.
;            Note: TM2 has an additional attribute TOLLSEG, which holds an integer identifying express
;            lane toll segments for which the same unit toll applies. TM1 or TM1.5 do not have tollseg.
;        (2) A dbf mapping the TOLLCLASS/USE combination to the toll value for each time period
;            and vehicle class.  Tolls for bridges are in 2000 dollars while tolls for express lanes are in
;            2000 dollars per mile.
;
; Output: A highway network containing the following fields:TOLLXX_YY, where XX is a two-letter code
;         representing one of the five time periods and YY is the path in question, be it drive alone, shared
;         ride 2 or 3+, or very small, small, medium, or large (combination) trucks.
;
; See also: (1) hwyParam.block, which stores the "firstValue" variable denoting 31 as the first value toll.
;
; version:  Travel Model 1.5
; authors:  dto (2010 08 10); gde (2009 03 12); crf (2013 07); wkft (2018 11)
;
;
; ----------------------------------------------------------------------------------------------------------------

RUN PGM=HWYNET

    ; begin with the standard input network
   neti = hwy\freeflow.net

   ; write out to the same name with the added variables
   ; no need to keep FT-specific AV_PCE as the relevant version has been added to the link
   neto = hwy\withTolls.net, exclude=AV_PCE_FT01,AV_PCE_FT02,AV_PCE_FT03,AV_PCE_FT04,AV_PCE_FT05,AV_PCE_FT06,AV_PCE_FT07,AV_PCE_FT08,AV_PCE_FT09,AV_PCE_FT10

   ; the input tolls file
   FILEI LOOKUPI[1]=hwy\tolls.dbf
   read file = "CTRAMP\scripts\block\hwyparam.block"

   ; load toll values
   lookup lookupi=1, name=tolls,
     lookup[1]= FAC_INDEX, result=TOLLCLASS,
     lookup[2]= FAC_INDEX, result=TOLLSEG,
     lookup[3]= FAC_INDEX, result=USE,
     lookup[4]= FAC_INDEX, result=TOLLEA_DA,
     lookup[5]= FAC_INDEX, result=TOLLAM_DA,
     lookup[6]= FAC_INDEX, result=TOLLMD_DA,
     lookup[7]= FAC_INDEX, result=TOLLPM_DA,
     lookup[8]= FAC_INDEX, result=TOLLEV_DA,
     lookup[9]= FAC_INDEX, result=TOLLEA_S2,
     lookup[10]=FAC_INDEX, result=TOLLAM_S2,
     lookup[11]=FAC_INDEX, result=TOLLMD_S2,
     lookup[12]=FAC_INDEX, result=TOLLPM_S2,
     lookup[13]=FAC_INDEX, result=TOLLEV_S2,
     lookup[14]=FAC_INDEX, result=TOLLEA_S3,
     lookup[15]=FAC_INDEX, result=TOLLAM_S3,
     lookup[16]=FAC_INDEX, result=TOLLMD_S3,
     lookup[17]=FAC_INDEX, result=TOLLPM_S3,
     lookup[18]=FAC_INDEX, result=TOLLEV_S3,
     lookup[19]=FAC_INDEX, result=TOLLEA_VSM,
     lookup[20]=FAC_INDEX, result=TOLLAM_VSM,
     lookup[21]=FAC_INDEX, result=TOLLMD_VSM,
     lookup[22]=FAC_INDEX, result=TOLLPM_VSM,
     lookup[23]=FAC_INDEX, result=TOLLEV_VSM,
     lookup[24]=FAC_INDEX, result=TOLLEA_SML,
     lookup[25]=FAC_INDEX, result=TOLLAM_SML,
     lookup[26]=FAC_INDEX, result=TOLLMD_SML,
     lookup[27]=FAC_INDEX, result=TOLLPM_SML,
     lookup[28]=FAC_INDEX, result=TOLLEV_SML,
     lookup[29]=FAC_INDEX, result=TOLLEA_MED,
     lookup[30]=FAC_INDEX, result=TOLLAM_MED,
     lookup[31]=FAC_INDEX, result=TOLLMD_MED,
     lookup[32]=FAC_INDEX, result=TOLLPM_MED,
     lookup[33]=FAC_INDEX, result=TOLLEV_MED,
     lookup[34]=FAC_INDEX, result=TOLLEA_LRG,
     lookup[35]=FAC_INDEX, result=TOLLAM_LRG,
     lookup[36]=FAC_INDEX, result=TOLLMD_LRG,
     lookup[37]=FAC_INDEX, result=TOLLPM_LRG,
     lookup[38]=FAC_INDEX, result=TOLLEV_LRG,
     lookup[39]=FAC_INDEX, result=TOLL_FLAT,  ; if 1, flat toll, otherwise, per mile toll
     fail[1]=0,
     fail[2]=0,
     fail[3]=0,                  ; set toll to zero if not found in table
     list=Y                      ; echo the lookup table to the standard printo file

   ;_fac_index formula in TM2 includes a tollseg attribute
   ;_fac_index = TOLLBOOTH*1000+tollseg*10+USECLASS
   ;_fac_index formula in TM1.5 does not include a tollseg attribute
   _fac_index = TOLLCLASS*1000+USE

   ; apply the bridge tolls

   TOLL_FLAT = TOLLS(39,_fac_index)

   if (TOLL_FLAT == 1)

     TOLLEA_DA = TOLLS( 4,_fac_index)*100
     TOLLAM_DA = TOLLS( 5,_fac_index)*100
     TOLLMD_DA = TOLLS( 6,_fac_index)*100
     TOLLPM_DA = TOLLS( 7,_fac_index)*100
     TOLLEV_DA = TOLLS( 8,_fac_index)*100

     TOLLEA_S2 = TOLLS( 9,_fac_index)*100
     TOLLAM_S2 = TOLLS(10,_fac_index)*100
     TOLLMD_S2 = TOLLS(11,_fac_index)*100
     TOLLPM_S2 = TOLLS(12,_fac_index)*100
     TOLLEV_S2 = TOLLS(13,_fac_index)*100

     TOLLEA_S3 = TOLLS(14,_fac_index)*100
     TOLLAM_S3 = TOLLS(15,_fac_index)*100
     TOLLMD_S3 = TOLLS(16,_fac_index)*100
     TOLLPM_S3 = TOLLS(17,_fac_index)*100
     TOLLEV_S3 = TOLLS(18,_fac_index)*100

     TOLLEA_VSM = TOLLS(19,_fac_index)*100
     TOLLAM_VSM = TOLLS(20,_fac_index)*100
     TOLLMD_VSM = TOLLS(21,_fac_index)*100
     TOLLPM_VSM = TOLLS(22,_fac_index)*100
     TOLLEV_VSM = TOLLS(23,_fac_index)*100

     TOLLEA_SML = TOLLS(24,_fac_index)*100
     TOLLAM_SML = TOLLS(25,_fac_index)*100
     TOLLMD_SML = TOLLS(26,_fac_index)*100
     TOLLPM_SML = TOLLS(27,_fac_index)*100
     TOLLEV_SML = TOLLS(28,_fac_index)*100

     TOLLEA_MED = TOLLS(29,_fac_index)*100
     TOLLAM_MED = TOLLS(30,_fac_index)*100
     TOLLMD_MED = TOLLS(31,_fac_index)*100
     TOLLPM_MED = TOLLS(32,_fac_index)*100
     TOLLEV_MED = TOLLS(33,_fac_index)*100

     TOLLEA_LRG = TOLLS(34,_fac_index)*100
     TOLLAM_LRG = TOLLS(35,_fac_index)*100
     TOLLMD_LRG = TOLLS(36,_fac_index)*100
     TOLLPM_LRG = TOLLS(37,_fac_index)*100
     TOLLEV_LRG = TOLLS(38,_fac_index)*100

   ENDIF

   ; apply the per-mile tolls - e.g. express lanes

   IF ((TOLLCLASS > 0) && (TOLL_FLAT == 0))

     TOLLEA_DA = TOLLS( 4,_fac_index)*100*DISTANCE
     TOLLAM_DA = TOLLS( 5,_fac_index)*100*DISTANCE
     TOLLMD_DA = TOLLS( 6,_fac_index)*100*DISTANCE
     TOLLPM_DA = TOLLS( 7,_fac_index)*100*DISTANCE
     TOLLEV_DA = TOLLS( 8,_fac_index)*100*DISTANCE

     TOLLEA_S2 = TOLLS( 9,_fac_index)*100*DISTANCE
     TOLLAM_S2 = TOLLS(10,_fac_index)*100*DISTANCE
     TOLLMD_S2 = TOLLS(11,_fac_index)*100*DISTANCE
     TOLLPM_S2 = TOLLS(12,_fac_index)*100*DISTANCE
     TOLLEV_S2 = TOLLS(13,_fac_index)*100*DISTANCE

     TOLLEA_S3 = TOLLS(14,_fac_index)*100*DISTANCE
     TOLLAM_S3 = TOLLS(15,_fac_index)*100*DISTANCE
     TOLLMD_S3 = TOLLS(16,_fac_index)*100*DISTANCE
     TOLLPM_S3 = TOLLS(17,_fac_index)*100*DISTANCE
     TOLLEV_S3 = TOLLS(18,_fac_index)*100*DISTANCE

     TOLLEA_VSM = TOLLS(19,_fac_index)*100*DISTANCE
     TOLLAM_VSM = TOLLS(20,_fac_index)*100*DISTANCE
     TOLLMD_VSM = TOLLS(21,_fac_index)*100*DISTANCE
     TOLLPM_VSM = TOLLS(22,_fac_index)*100*DISTANCE
     TOLLEV_VSM = TOLLS(23,_fac_index)*100*DISTANCE

     TOLLEA_SML = TOLLS(24,_fac_index)*100*DISTANCE
     TOLLAM_SML = TOLLS(25,_fac_index)*100*DISTANCE
     TOLLMD_SML = TOLLS(26,_fac_index)*100*DISTANCE
     TOLLPM_SML = TOLLS(27,_fac_index)*100*DISTANCE
     TOLLEV_SML = TOLLS(28,_fac_index)*100*DISTANCE

     TOLLEA_MED = TOLLS(29,_fac_index)*100*DISTANCE
     TOLLAM_MED = TOLLS(30,_fac_index)*100*DISTANCE
     TOLLMD_MED = TOLLS(31,_fac_index)*100*DISTANCE
     TOLLPM_MED = TOLLS(32,_fac_index)*100*DISTANCE
     TOLLEV_MED = TOLLS(33,_fac_index)*100*DISTANCE

     TOLLEA_LRG = TOLLS(34,_fac_index)*100*DISTANCE
     TOLLAM_LRG = TOLLS(35,_fac_index)*100*DISTANCE
     TOLLMD_LRG = TOLLS(36,_fac_index)*100*DISTANCE
     TOLLPM_LRG = TOLLS(37,_fac_index)*100*DISTANCE
     TOLLEV_LRG = TOLLS(38,_fac_index)*100*DISTANCE

   ENDIF

    ; check that all bridge (non-value tolls) are set
    if ((TOLLCLASS > 0) && (TOLLCLASS < FIRSTVALUE))
      ; some peak period DA toll must be non-zero.
      ; note this includes HOV lanes because they get converted to GP during non-peak periods via token_hov_to_freeflow
      ; in CalculateFiveHighwayNetworks.job
      IF ((TOLLAM_DA == 0) && (TOLLPM_DA == 0))
        print LIST="Link ",A,"-",B," has TOLLCLASS ", TOLLCLASS," and no non-zero peak period DA tolls"
        ABORT MSG ="Link has TOLLCLASS and no non-zero peak period tolls; see log file"
      ENDIF
    ENDIF

    ; AV impacts on roadway capacity - represented by adjusting the PCE
    ; Make these factors into link attributes
    IF (FT = 1)  AV_PCE = AV_PCE_FT01
    IF (FT = 2)  AV_PCE = AV_PCE_FT02
    IF (FT = 3)  AV_PCE = AV_PCE_FT03
    IF (FT = 4)  AV_PCE = AV_PCE_FT04
    IF (FT = 5)  AV_PCE = AV_PCE_FT05
    IF (FT = 6)  AV_PCE = AV_PCE_FT06
    IF (FT = 7)  AV_PCE = AV_PCE_FT07
    IF (FT = 8)  AV_PCE = AV_PCE_FT08
    IF (FT = 9)  AV_PCE = AV_PCE_FT09
    IF (FT = 10) AV_PCE = AV_PCE_FT10

ENDRUN
