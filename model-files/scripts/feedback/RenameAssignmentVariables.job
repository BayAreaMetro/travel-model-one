; ----------------------------------------------------------------------------------------------------------------
;
; RenameAssignmentVariables.job
;
; TP+ script to rename the TP+ assignment variables (the *_1 variables, where _1 signifies the first iteration).  
; Giving the assigned variables these standard names and removing the *_1 variables allows subsequent assignments
; to write the results to the same *_1 variables, which can then be processed in the same manner, rather than 
; accumulating assignment results with *_2, *_3, etc variable names. 
;
; The script performs the variable renaming for five time-period-specific assignments. Assignments are performed 
; for each of the following time periods: (a) early AM, 3 am to 6 am; (b) AM peak period, 6 am to 10 am; (c) midday,
; 10 am to 3 pm; (d) PM peak period, 3 pm to 7 pm; and, (e) evening, 7 pm to 3 am.  
;
; Thirteen vehicle classes are tracked in each assignment, with value-toll-eligible and not-value-toll-eligible classes
; as follows:
;      (1) drive alone, no value toll (da)
;      (2) shared ride 2, no value toll (s2)
;      (3) shared ride 3+, no value toll (s3)
;      (4) very small, small, and medium trucks, no value toll (sm)
;      (5) large trucks, no value toll (hv)
;      (6) drive alone, value toll eligible (daT)
;      (7) shared ride 2, value toll eligible (s2T)
;      (8) shared ride 3+, value toll eligible (s3T)
;      (9) very small, small, and medium trucks, value toll eligible (smT)
;     (10) large trucks, value toll eligible (hvT)
;     (11) zero passenger personally-owned AV, no value toll (zpav)
;     (12) "drive" alone personally-owned AV, value toll eligible (daav)
;     (13) two-occupant personally-owned AV, value toll eligible (s2av)
;     (14) three-or-more-occupant personally-owned AV, value toll eligible (s3av)
;     (15) zero passenger TNC, no value toll (zptnc)
;     (16) "drive" alone TNC, value toll eligible (datnc)
;     (17) two-occupant TNC, value toll eligible (s2tnc)
;     (18) three-or-more-occupant TNC, value toll eligible (s3tnc)
;
;
; Input:  (1) A highway network containing the following fields: (a) V_1, which is the total a-to-b link volume, in 
;         units of equivalent passenger vehicles; (b) VC_1, which is the volume to capacity ratio; (c) TIME_1, which 
;         is the congested travel time in minutes; (d) CSPD_1, which is the congested travel speed in miles per hour;
;         (e) VDT_1, which is the vehicle-distance traveled, in miles; (f) VHT_1, which is the vehicle hours traveled,
;         in hours; (g) VX_1, which is the a-to-b link volume for vehicles in class X, where X is 1 to 13; (h) VT_1, 
;         which is the total b-to-a link volume for two-way links only; and, (e) VXT_1, which is the b-to-a link volume
;         for vehicles in class X, where X is 1 to 13.  One such network is input for each of the five time of day periods. 
;
; Output: (1) A highway network for each time period with the following fields: (a) VOL, which is the total a-to-b link
;         volume, in units of equivalent passenger vehicles; (b) VC, which is the volume to capacity ratio; (c) CTIM, which 
;         is the congested travel time in minutes; (d) CSPD, which is the congested travel speed in miles per hour;
;         (e) VDT, which is the vehicle-distance traveled, in miles; (f) VHT, which is the vehicle hours traveled,
;         in hours; (g) VOL_XXY, which is the a-to-b link volume for vehicles in class XX (see codes in above list), 
;         and Y is "T" for the value-toll-eligible classes and blank for the non-value-toll-eligible classes; (h) VOLT,
;         which is the total b-to-a link volume, in units of equivalent passenger vehicles; (i) VOLT_XXY, which is the 
;         total b-to-a link volume for two-way links only and XX and Y have the same meaning as in (g).
;                                     
; Notes:  (1) Overhead gains are too small to distribute via Cluster
;
; See also: (1) HwyAssign.job, which peforms the highway assignment;
;	    (2) AverageNetworkVolumes.job, which averages the volumes from this and previous iterations. 
;
; version:  Travel Model One
; authors:  lmz (2020 09); dto (2010 08 09); gde (2009) ; jef 2018
;
;
; ----------------------------------------------------------------------------------------------------------------

; set the current iteration DOS token as a TP+ token
token_current_iteration = '%ITER%'

; do, more or less, the same procedure for each time period
loop period = 1, 5
  
   ; a two letter token is used for each time period  
   if (period = 1)    
      token_period = 'EA'
      
   elseif (period = 2)      
      token_period = 'AM'
      
   elseif (period = 3)   
      token_period = 'MD'

   elseif (period = 4)   
      token_period = 'PM'

   elseif (period = 5) 
      token_period = 'EV'

   endif   
   
   run pgm = network
   
      ; read in the loaded network from the current iteration
      neti[1] = hwy\iter@token_current_iteration@\load@token_period@.net
  	
      ; write out the average loaded network
      neto = hwy\iter@token_current_iteration@\load@token_period@_renamed.net, exclude =  V_1, TIME_1, VC_1, CSPD_1, VDT_1, VHT_1, 
      											  V1_1, V2_1, V3_1, V4_1, V5_1, V6_1, V7_1, V8_1, V9_1, V10_1, V11_1, V12_1, V13_1,  V14_1, V15_1, V16_1, V17_1, V18_1,
      											  VT_1, V1T_1, V2T_1, V3T_1, V4T_1, V5T_1, V6T_1, V7T_1, V8T_1, V9T_1, V10T_1, V11T_1, V12T_1, V13T_1, V14T_1, V15T_1, V16T_1, V17T_1, V18T_1
      
      ; rename the assignment varaibles
      vol      = V_1   
      ctim     = TIME_1
      vc       = VC_1  
      cspd     = CSPD_1
      vdt      = VDT_1 
      vht      = VHT_1 
      vol_da   = V1_1  
      vol_s2   = V2_1  
      vol_s3   = V3_1  
      vol_sm   = V4_1  
      vol_hv   = V5_1  
      vol_daT  = V6_1  
      vol_s2T  = V7_1  
      vol_s3T  = V8_1  
      vol_smT  = V9_1  
      vol_hvT  = V10_1 
      vol_zpav = V11_1
      vol_daav = V12_1
      vol_s2av = V13_1
      vol_s3av = V14_1
      vol_zptnc= V15_1
      vol_datnc= V16_1
      vol_s2tnc= V17_1
      vol_s3tnc= V18_1
      volT     = VT_1  
      volT_da  = V1T_1 
      volT_s2  = V2T_1 
      volT_s3  = V3T_1 
      volT_sm  = V4T_1 
      volT_hv  = V5T_1 
      volT_daT = V6T_1 
      volT_s2T = V7T_1 
      volT_s3T = V8T_1 
      volT_smT = V9T_1 
      volT_hvT = V10T_1
      volT_zpav = V11T_1
      volT_daav = V12T_1
      volT_s2av = V13T_1
      volT_s3av = V14T_1
      volT_zptnc= V15T_1
      volT_datnc= V16T_1
      volT_s2tnc= V17T_1
      volT_s3tnc= V18T_1 
  	
      
  		    
  endrun
  
endloop ; time period loop