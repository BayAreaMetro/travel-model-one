;
; Test variations on hwy assignment to investigate negative logsums issue we're seeing in Project Performance Assessment
; testing.
;
; ----------------------------------------------------------------------------------------------------------------

input_dir          = '%INPUT_DIR%'
token_period       = 'AM'
token_capfac       = 'parameters capfac = 4'
token_hov_xfer_pen = 'li.HOVXPEN'
token_relativegap  = 'parameters relativegap = %RELGAP%'
token_maxiters     = 'parameters maxiters = 1000'
token_enhance      = ', enhance = %ENHANCE%'
if (%ENHANCE%=0)
  token_procnum    = 1
  token_proclist   = 2-24
else
  token_procnum    = 25
  token_proclist   = 26-48
endif

DistributeMultistep processid = 'CTRAMP', processNum = @token_procnum@, commpath = 'm:\commpath'

   run pgm = highway
  
      ; distribute via cluster
      DistributeIntrastep processid = 'CTRAMP', processlist = @token_proclist@, commpath = 'm:\commpath', saveprn = f
    
      ; time-specific input highway network
      neti    = @input_dir@\hwy\avgload@token_period@.net
      
      ; household travel demand
      mati[1] = @input_dir@\INPUT\warmstart\main\trips@token_period@.tpp
      
      ; internal/external travel demand
      mati[2] = @input_dir@\INPUT\warmstart\nonres\tripsIx@token_period@.tpp 
      
      ; commercial travel demand
      mati[3] = @input_dir@\INPUT\warmstart\nonres\tripsTrk@token_period@.tpp
      
      ; air passenger travel demand
      mati[4] = @input_dir@\INPUT\warmstart\nonres\tripsAirPax@token_period@.tpp
    
      ; loaded time-specific highway network
      neto    = load@token_period@.net
    
      ; set the assignment paramters -- equilibrium assignment, frank-wolfe
      parameters combine = equi @token_enhance@
      
      ; set the assignment parameters -- 1454 internal zones + 21 external zones
      parameters zones = 1475
      
      ; set the assignment parameters -- maximum number of iterations to 300
      @token_maxiters@ 
      
      ; set the assignment parameters -- closure criteria (tighten up as runtime allows)
      @token_relativegap@ 
      
      ; set the assignment parameters -- other closure criteria (do not use)
      parameters gap = 0, aad = 0, raad = 0, rmse = 0
    
      ; set the number of hours in the assignment (see the loop tokens)
      @token_capfac@ 
    
      ; hwyParam.bock contains variables used in the remainder of the script, particularly in the generalized cost expressions
      read file = @input_dir@\ctramp\scripts\block\hwyparam.block
      
      ; read in the speed/capacity table
      read file = @input_dir@\ctramp\scripts\block\SpeedCapacity_1hour.block 
      
      ; set the working variables
      phase = linkread
      
         ; distance is used in the volume/delay functions and the generalized cost function
         distance = li.DISTANCE
         
         ; facility type is used in the compuation of the volume/delay function parameter
         linkclass = li.FT
         
         ; tollclass determines whether a link is only available to value toll payers
         lw.tollclass = li.TOLLCLASS
         
         ; fixed time links (where TSIN = 1) are indifferent to congestion
         lw.ot = li.OT
         
         ; free-flow speed is used in the volume/delay functions
         lw.ffs = li.FFS
         
         ; free-flow time is a function of free-flow speed and distance and is used in the generalized cost function
         lw.fft = (distance/lw.ffs) * 60 
         
         ; TSIN is a code, where 1 indicates the link has a fixed time and is immune to demand
         lw.tsin = li.TSIN
         
         ; link capacity is a function of the number of lanes
         lw.lanes = li.LANES
         
         ; the speed/capacity table and the computation of the volume/delay function parameter (see FreeFlowSpeed.block) uses the capacity class code
         ; which is area type * 10 + facility type
         lw.capclass = li.CAPCLASS
         
         ; set the input time to OT for fixed time links
         if (lw.tsin = 1)
            t0 = lw.ot
         endif
      
         ; the setting of critical speeds and computation of the volume/delay function parameter is in the FreeFlowSpeed.block file
         read file = @input_dir@\ctramp\scripts\block\FreeFlowSpeed.block
     
         ; compute the generalized cost for passenger vehicles
         lw.gencost_da = lw.fft + (0.6/vot) * (lw.dist*li.autoopc + li.TOLL@token_period@_DA)
         lw.gencost_s2 = lw.fft + (0.6/vot) * (lw.dist*li.autoopc + li.TOLL@token_period@_S2 / sr2costshare)  + @token_hov_xfer_pen@
         lw.gencost_s3 = lw.fft + (0.6/vot) * (lw.dist*li.autoopc + li.TOLL@token_period@_S3 / sr3costshare)  + @token_hov_xfer_pen@
         
         ; compute the generalized cost for very small, small, and medium trucks (use small truck costs) and large trucks
         lw.gencost_sml = lw.fft + (0.6/truckvot) * (lw.dist*li.smtropc + li.TOLL@token_period@_SML)
         lw.gencost_lrg = lw.fft + (0.6/truckvot) * (lw.dist*li.lrtropc + li.TOLL@token_period@_LRG)
         
         ; create the link exclusion classes -- HOV only (23), HOV 3+ only (3), no large trucks (4)                
         if (li.USE = 2,3)   addtogroup = 23 
         if (li.USE = 3)     addtogroup = 3              
         if (li.USE = 2,3,4) addtogroup = 4                            
         
         ; create the link exclusion classes -- value toll links for passenger vehicles
         if (lw.tollclass >= firstvalue && li.TOLL@token_period@_DA > 0) addtogroup = 11
         if (lw.tollclass >= firstvalue && li.TOLL@token_period@_S2 > 0) addtogroup = 12
         if (lw.tollclass >= firstvalue && li.TOLL@token_period@_S3 > 0) addtogroup = 13
         
         ; create the link exclusion classes -- value toll links for commercial vehicles (use SML for very small, small, and medium)
         if (lw.tollclass >= firstvalue && li.TOLL@token_period@_SML > 0) addtogroup = 14
         if (lw.tollclass >= firstvalue && li.TOLL@token_period@_LRG > 0) addtogroup = 15
    
      endphase
  
      ; set the pathload parameters
      phase = iloop
      
         ; no value toll paying classes firsth
      
         ; drive alone, no value toll, exclude drive alone value toll and HOV facilities, internal demand plus intra-regional demand plus air passenger demand
         pathload path = lw.gencost_da, excludegrp = 11, 23, vol[1] = mi.1.da + mi.2.da + mi.4.da
         
         ; shared ride 2, no value toll, exclude sr2 value toll and HOV 3+ facilities, internal demand plus intra-regional demand plus air passenger demand
         pathload path = lw.gencost_s2, excludegrp = 12, 3, vol[2] =  mi.1.sr2 / 2 + mi.2.sr2 + mi.4.sr2
         
         ; shared ride 3+, no value toll, exclude sr3 value toll facilities, internal demand plus intra-regional demand plus air passenger demand
         pathload path = lw.gencost_s3, excludegrp = 13, vol[3] = mi.1.sr3 / 3.25 + mi.2.sr3 + mi.4.sr3
         
         ; very small, small, and medium trucks, no value toll, exclude small truck value toll facilities and HOV facilities
         pathload path = lw.gencost_sml, excludegrp = 14, 23, vol[4] = mi.3.vstruck + mi.3.struck + mi.3.mtruck
         
         ; large trucks, no value toll, exclude large truck toll facilities, HOV facilities, and no commercial truck facilities 
         pathload path = lw.gencost_lrg, excludegrp = 15, 23, 4, vol[5] = mi.3.ctruck
         
         ; value toll paying classes second
         
         ; drive alone, value toll paying, exclude HOV facilities, internal demand plus intra-regional demand plus air passenger demand
         pathload path = lw.gencost_da, excludegrp = 23, vol[6] = mi.1.datoll + mi.2.datoll + mi.4.datoll
         
         ; shared ride 2, value toll paying, exclude HOV 3+ facilities, internal demand plus intra-regional demand plus air passenger demand
         pathload path = lw.gencost_s2, excludegrp = 3, vol[7] = mi.1.sr2toll / 2 + mi.2.sr2toll + mi.4.sr2toll
         
         ; shared ride 3+, value toll paying, no exclusions, internal demand plus intra-regional demand plus air passenger demand
         pathload path = lw.gencost_s3, vol[8] = mi.1.sr3toll / 3.25 + mi.2.sr3toll + mi.4.sr3toll
         
         ; very small, small, and medium trucks, value toll paying, excluded from HOV facilities, use the small truck generalized cost
         pathload path = lw.gencost_sml, excludegrp = 23, vol[9]= mi.3.vstrucktoll + mi.3.strucktoll + mi.3.mtrucktoll
         
         ; large trucks, value toll paying, excluded from HOV facilities and no commercial truck facilities
         pathload path = lw.gencost_lrg, excludegrp = 23, 4, vol[10] = mi.3.ctrucktoll

      endphase  
    
      ; set adjust parameters (volume delay functions)
      phase = adjust
 
         ; very small, small, and medium trucks have a passenger car equivalent of, on average 1.0, large trucks see HwyParam.block for PCE
         function v = vol[1] + vol[2] + vol[3] + vol[4] + trkpce*vol[5] + vol[6] + vol[7] + vol[8] + vol[9] + trkpce*vol[10]
           
         ; the volume delay functions are housed in the SpeedFlowCurve.block file
         read file = @input_dir@\ctramp\scripts\block\SpeedFlowCurve.block 
      
         ; set the generalized cost functions (same as before, only now we start with "time")
         lw.gencost_da = time + (0.6/vot) * (lw.dist*li.autoopc + li.TOLL@token_period@_DA)
         lw.gencost_s2 = time + (0.6/vot) * (lw.dist*li.autoopc + li.TOLL@token_period@_S2 / sr2costshare)  + @token_hov_xfer_pen@
         lw.gencost_s3 = time + (0.6/vot) * (lw.dist*li.autoopc + li.TOLL@token_period@_S3 / sr3costshare) + @token_hov_xfer_pen@
         
         lw.gencost_sml = time + (0.6/truckvot) * (lw.dist*li.smtropc + li.TOLL@token_period@_SML)
         lw.gencost_lrg = time + (0.6/truckvot) * (lw.dist*li.smtropc + li.TOLL@token_period@_LRG)
         
      endphase
      
   endrun      
  
   EndDistributeMultistep
  
Wait4Files files = CTRAMP@token_procnum@.script.end, PrintFiles = merge, DelDistribFiles = t, CheckReturnCode = t




