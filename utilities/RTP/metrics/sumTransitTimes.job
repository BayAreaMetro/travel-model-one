;
; This script Uses Transit trips * Transit skims (IVT and OVT) and outputs:
; metrics\transit_times_by_acc_mode_egr.csv with columns:
;  * Age                   (all, 20-74, 20-64)
;  * Access                (wlk, drv)
;  * Mode                  (com, hvy, exp, lrf, loc)
;  * Egress                (wlk, drv)
;  * Transit Trips         (# of transit trips taken by relevant ppl)
;  * In-vehicle hours      (# of in-vehicle hours taken by relevant ppl)
;  * Out-of-vehicle hours  (# of out-of-vehicle hours taken by relevant ppl)
;  * Init wait hours       (# of hours spent in the initial wait by relevant ppl)
;  * Xfer wait hours       (# of hours spent in the transfer wait by relevant ppl)
;  * Walk acc & egr hours  (# of hours spent in walk access and egress by relevant ppl)
;  * Aux walk hours        (# of hours spent in auxiliary walk by relevant ppl)
;  * Drive acc & egr hours (# of hours spent in drive access and egress by relevant ppl)
;  * AM path count         (# of O-D paths that exist out of full matrix in AM)
;  * MD path count         (# of O-D paths that exist out of full matrix in MD)
;
; Also outputs
; metrics\transit_times_by_mode_income.csv with columns:
;  * Income                (inc1, inc2, inc3, inc4)
;  * Mode                  (com, hvy, exp, lrf, loc)
;  * Daily Trips           (# of daily transit trips by relevant ppl)
;  * Avg Time              (average travel time per transit trip by relevant ppl, in minutes)
;  * Avg Cost              (average fare cost per transit trip by relevant ppl, in $2000 dollars)
;


*del metrics\transit_times_by_acc_mode_egr.csv

; Loop thru transit modes
  loop path = 1,5
    ; commuter rail or long-haul premium
      if (path = 1)
        token_path = 'com'
        token_ivt  = 'ivtCOM'
    ; heavy rail or medium-haul premium
      elseif (path = 2)
        token_path = 'hvy'
        token_ivt  = 'ivtHVY'
    ; express bus or medium-haul basic
      elseif (path = 3)
        token_path = 'exp'
        token_ivt  = 'ivtEXP'
    ; light rail (or ferry) or short-haul premium
      elseif (path = 4)
        token_path = 'lrf'
        token_ivt  = 'ivtLRF'
    ; local bus or short-haul basic
      elseif (path = 5)
        token_path = 'loc'
        token_ivt  = 'ivtLOC'
      endif

 DistributeMultistep processid = 'ctramp', processNum = path, commpath = '%COMMPATH%'

; Loop thru access + egress modes
 loop accegg = 1,3
      if (accegg = 1)
         token_access = 'wlk'
         token_egress = 'wlk'

      elseif (accegg = 2)
         token_access = 'drv'
         token_egress = 'wlk'

      elseif (accegg = 3)
         token_access = 'wlk'
         token_egress = 'drv'

      endif

    loop age = 1,3
      if (age = 1)
        token_suffix = '_no_zpv_allinc'
        token_age    = 'all'
      elseif (age = 2)
        token_suffix = '_no_zpv__2074'
        token_age    = '20-74'
      elseif (age = 3)
        token_suffix = '_no_zpv__2064'
        token_age    = '20-64'
      endif

    RUN PGM = MATRIX
      ; Read person trips
      ; 1. da, 2. datoll, 3. sr2, 4. sr2toll, 5. sr3, 6. sr3toll, 7. walk, 8. bike,
      ; 9. wlk_loc_wlk, wlk_lrf_wlk, wlk_exp_wlk, wlk_hvy_wlk, wlk_com_wlk,
      ; 14. drv_loc_wlk, drv_lrf_wlk, drv_exp_wlk, drv_hvy_wlk, drv_com_wlk,
      ; 19. wlk_loc_drv, wlk_lrf_drv, wlk_exp_drv, wlk_hvy_drv, wlk_com_drv
      FILEI MATI[1] = "main\tripsEA@token_suffix@.tpp"
      FILEI MATI[2] = "main\tripsAM@token_suffix@.tpp"
      FILEI MATI[3] = "main\tripsMD@token_suffix@.tpp"
      FILEI MATI[4] = "main\tripsPM@token_suffix@.tpp"
      FILEI MATI[5] = "main\tripsEV@token_suffix@.tpp"

      ; Read transit skims
      ; ivt, iwait, xwait, wait, wacc, waux, wegr, dtime, ddist, fare, boards, ivtLOC, ivtLRF, ivtEXP, ivtHVY, ivtCOM, ivtFerry, ivtMUNILoc, ivtMUNIMet,
      FILEI MATI[6] = "skims\trnskmEA_@token_access@_@token_path@_@token_egress@.tpp"
      FILEI MATI[7] = "skims\trnskmAM_@token_access@_@token_path@_@token_egress@.tpp"
      FILEI MATI[8] = "skims\trnskmMD_@token_access@_@token_path@_@token_egress@.tpp"
      FILEI MATI[9] = "skims\trnskmPM_@token_access@_@token_path@_@token_egress@.tpp"
      FILEI MATI[10]= "skims\trnskmEV_@token_access@_@token_path@_@token_egress@.tpp"

      FILEO PRINTO[1] = "metrics\transit_times_by_acc_mode_egr_@token_path@.csv", append=T

      ; EA Transit Trips
      MW[1] = mi.1.@token_access@_@token_path@_@token_egress@            ; Trips
      MW[2] = MW[1] *  mi.6.ivt                                          ; IVTTrips
      MW[3] = MW[1] * (mi.6.wait+mi.6.wacc+mi.6.waux+mi.6.wegr+mi.6.dtime) ; OVTTrips
      MW[101] = MW[1] * mi.6.iwait       					 ; iwaitTrips
      MW[102] = MW[1] * mi.6.xwait       					 ; xwaitTrips
      MW[103] = MW[1] * (mi.6.wacc +mi.6.wegr) 		 ; accegrTrips
      MW[104] = MW[1] * mi.6.waux       					 ; wauxTrips
      MW[105] = MW[1] * mi.6.dtime       					 ; dtimeTrips

      ; AM Transit Trips
      MW[4] = mi.2.@token_access@_@token_path@_@token_egress@            ; Trips
      MW[5] = MW[4] *  mi.7.ivt                                          ; IVTTrips
      MW[6] = MW[4] * (mi.7.wait+mi.7.wacc+mi.7.waux+mi.7.wegr+mi.7.dtime) ; OVTTrips
      MW[201] = MW[4] * mi.7.iwait          			 ; iwaitTrips
      MW[202] = MW[4] * mi.7.xwait       					 ; xwaitTrips
      MW[203] = MW[4] * (mi.7.wacc+mi.7.wegr) 		 ; accegrTrips
      MW[204] = MW[4] * mi.7.waux        					 ; wauxTrips
      MW[205] = MW[4] * mi.7.dtime       					 ; dtimeTrips

      ; MD Transit Trips
      MW[7] = mi.3.@token_access@_@token_path@_@token_egress@            ; Trips
      MW[8] = MW[7] *  mi.8.ivt                                          ; IVTTrips
      MW[9] = MW[7] * (mi.8.wait+mi.8.wacc+mi.8.waux+mi.8.wegr+mi.8.dtime) ; OVTTrips
      MW[301] = MW[7] * mi.8.iwait       					 ; iwaitTrips
      MW[302] = MW[7] * mi.8.xwait       					 ; xwaitTrips
      MW[303] = MW[7] * (mi.8.wacc+mi.8.wegr) 		 ; accegrTrips
      MW[304] = MW[7] * mi.8.waux        					 ; wauxTrips
      MW[305] = MW[7] * mi.8.dtime       					 ; dtimeTrips

      ; PM Transit Trips
      MW[10] = mi.4.@token_access@_@token_path@_@token_egress@           ; Trips
      MW[11] = MW[10] *  mi.9.ivt                                        ; IVTTrips
      MW[12] = MW[10] * (mi.9.wait+mi.9.wacc+mi.9.waux+mi.9.wegr+mi.9.dtime) ; OVTTrips
      MW[401] = MW[10] * mi.9.iwait      					 ; iwaitTrips
      MW[402] = MW[10] * mi.9.xwait      					 ; xwaitTrips
      MW[403] = MW[10] * (mi.9.wacc+mi.9.wegr) 		 ; accegrTrips
      MW[404] = MW[10] * mi.9.waux       					 ; wauxTrips
      MW[405] = MW[10] * mi.9.dtime      					 ; dtimeTrips

      ; EV Transit Trips
      MW[13] = mi.5.@token_access@_@token_path@_@token_egress@           ; Trips
      MW[14] = MW[13] *  mi.10.ivt                                       ; IVTTrips
      MW[15] = MW[13] * (mi.10.wait+mi.10.wacc+mi.10.waux+mi.10.wegr+mi.10.dtime) ; OVTTrips
      MW[501] = MW[13] * mi.10.iwait       					 ; iwaitTrips
      MW[502] = MW[13] * mi.10.xwait       					 ; xwaitTrips
      MW[503] = MW[13] * (mi.10.wacc+mi.10.wegr)		 ; accegrTrips
      MW[504] = MW[13] * mi.10.waux       					 ; wauxTrips
      MW[505] = MW[13] * mi.10.dtime       					 ; dtimeTrips

      JLOOP
      Trips  = Trips  + MW[1]   + MW[4]   + MW[7]   + MW[10]  + MW[13]
      IVT    = IVT    + MW[2]   + MW[5]   + MW[8]   + MW[11]  + MW[14]
      OVT    = OVT    + MW[3]   + MW[6]   + MW[9]   + MW[12]  + MW[15]
      iwait  = iwait  + MW[101] + MW[201] + MW[301] + MW[401] + MW[501]
      xwait  = xwait  + MW[102] + MW[202] + MW[302] + MW[402] + MW[502]
      accegr = accegr + MW[103] + MW[203] + MW[303] + MW[403] + MW[503]
      waux   = waux   + MW[104] + MW[204] + MW[304] + MW[404] + MW[504]
      dtime  = dtime  + MW[105] + MW[205] + MW[305] + MW[405] + MW[505]
      ENDJLOOP

      ; count paths
      MW[600] = mi.7.@token_ivt@ ; AM ivt for primary submode
      MW[601] = mi.8.@token_ivt@ ; MD ivt for primary submode
      _pathcount_am = _pathcount_am + ROWCNT(600)
      _pathcount_md = _pathcount_md + ROWCNT(601)

       Name = '@token_access@_@token_path@_@token_egress@'
      if(I = 1 & @path@ = 1 & @accegg@ = 1 & @age@ = 1)
      	PRINT PRINTO=1 CSV=T LIST= "Age", "Access","Mode","Egress",
          "Transit Trips","In-vehicle hours","Out-of-vehicle hours","Init wait hours",
          "Xfer wait hours","Walk acc & egr hours",
          "Aux walk hours","Drive acc & egr hours",
          "AM path count","MD path count"
      endif
      if(I=1475)
        IVT_triphours = IVT    / 6000
      	OVT_triphours = OVT    / 6000
      	iwait_hours   = iwait  / 6000
      	xwait_hours   = xwait  / 6000
      	accegr_hours  = accegr / 6000
      	waux_hours    = waux   / 6000
      	dtime_hours   = dtime  / 6000
        PRINT PRINTO=1 CSV=T LIST= '@token_age@','@token_access@','@token_path@','@token_egress@',
          Trips,IVT_triphours,OVT_triphours,iwait_hours,
          xwait_hours,accegr_hours,
          waux_hours,dtime_hours,
          _pathcount_am, _pathcount_md
      endif
    ENDRUN
endloop
endloop

EndDistributeMultistep
endloop

Wait4Files files=CTRAMP1.script.end, CTRAMP2.script.end, CTRAMP3.script.end,
                 CTRAMP4.script.end, CTRAMP5.script.end,
           printfiles = merge, deldistribfiles = t, CheckReturnCode = t

; combine the path files into one
* copy metrics\transit_times_by_acc_mode_egr_com.csv+metrics\transit_times_by_acc_mode_egr_hvy.csv+metrics\transit_times_by_acc_mode_egr_exp.csv+metrics\transit_times_by_acc_mode_egr_lrf.csv+metrics\transit_times_by_acc_mode_egr_loc.csv metrics\transit_times_by_acc_mode_egr.csv
; delete the individual ones
* del metrics\transit_times_by_acc_mode_egr_com.csv
* del metrics\transit_times_by_acc_mode_egr_hvy.csv
* del metrics\transit_times_by_acc_mode_egr_exp.csv
* del metrics\transit_times_by_acc_mode_egr_lrf.csv
* del metrics\transit_times_by_acc_mode_egr_loc.csv

; Transit attributes by mode and income quartile
; 1. Daily Trips
; 1. Average travel time
; 2. Average travel cost

*del metrics\transit_times_by_mode_income.csv

; Loop thru transit modes
  loop path = 1,5
    if (path = 1) token_path = 'com'
    if (path = 2) token_path = 'hvy'
    if (path = 3) token_path = 'exp'
    if (path = 4) token_path = 'lrf'
    if (path = 5) token_path = 'loc'

 DistributeMultistep processid = 'ctramp', processNum = path, commpath = '%COMMPATH%'

  ; Consolidate these and simplify
  ; This is unfortunately now required because the subsequent section would otherwise
  ; run out of MATI since there is a limit of 20
  RUN PGM = MATRIX
    FILEI MATI[1]  = "skims\trnskmEA_wlk_@token_path@_wlk.tpp"
    FILEI MATI[2]  = "skims\trnskmEA_drv_@token_path@_wlk.tpp"
    FILEI MATI[3]  = "skims\trnskmEA_wlk_@token_path@_drv.tpp"

    FILEI MATI[4]  = "skims\trnskmAM_wlk_@token_path@_wlk.tpp"
    FILEI MATI[5]  = "skims\trnskmAM_drv_@token_path@_wlk.tpp"
    FILEI MATI[6]  = "skims\trnskmAM_wlk_@token_path@_drv.tpp"

    FILEI MATI[7]  = "skims\trnskmMD_wlk_@token_path@_wlk.tpp"
    FILEI MATI[8]  = "skims\trnskmMD_drv_@token_path@_wlk.tpp"
    FILEI MATI[9]  = "skims\trnskmMD_wlk_@token_path@_drv.tpp"

    FILEI MATI[10] = "skims\trnskmPM_wlk_@token_path@_wlk.tpp"
    FILEI MATI[11] = "skims\trnskmPM_drv_@token_path@_wlk.tpp"
    FILEI MATI[12] = "skims\trnskmPM_wlk_@token_path@_drv.tpp"

    FILEI MATI[13] = "skims\trnskmEV_wlk_@token_path@_wlk.tpp"
    FILEI MATI[14] = "skims\trnskmEV_drv_@token_path@_wlk.tpp"
    FILEI MATI[15] = "skims\trnskmEV_wlk_@token_path@_drv.tpp"

    ; consolidate travel time and fare by time period for all paths
    FILEO MATO[1]  = "skims\trnskmEA_@token_path@_temp.tpp", mo=1-6,   name=w@token_path@w_time, d@token_path@w_time, w@token_path@d_time, w@token_path@w_fare, d@token_path@w_fare, w@token_path@d_fare 
    FILEO MATO[2]  = "skims\trnskmAM_@token_path@_temp.tpp", mo=11-16, name=w@token_path@w_time, d@token_path@w_time, w@token_path@d_time, w@token_path@w_fare, d@token_path@w_fare, w@token_path@d_fare
    FILEO MATO[3]  = "skims\trnskmMD_@token_path@_temp.tpp", mo=21-26, name=w@token_path@w_time, d@token_path@w_time, w@token_path@d_time, w@token_path@w_fare, d@token_path@w_fare, w@token_path@d_fare
    FILEO MATO[4]  = "skims\trnskmPM_@token_path@_temp.tpp", mo=31-36, name=w@token_path@w_time, d@token_path@w_time, w@token_path@d_time, w@token_path@w_fare, d@token_path@w_fare, w@token_path@d_fare
    FILEO MATO[5]  = "skims\trnskmEV_@token_path@_temp.tpp", mo=41-46, name=w@token_path@w_time, d@token_path@w_time, w@token_path@d_time, w@token_path@w_fare, d@token_path@w_fare, w@token_path@d_fare

    MW[1] = (mi.01.ivt + mi.01.wait + mi.01.wacc + mi.01.waux + mi.01.wegr + mi.01.dtime) ; EA wlk-XXX-wlk
    MW[2] = (mi.02.ivt + mi.02.wait + mi.02.wacc + mi.02.waux + mi.02.wegr + mi.02.dtime) ; EA drv-XXX-wlk
    MW[3] = (mi.03.ivt + mi.03.wait + mi.03.wacc + mi.03.waux + mi.03.wegr + mi.03.dtime) ; EA wlk-XXX-drv

    MW[4] = mi.01.fare ; EA wlk-XXX-wlk
    MW[5] = mi.02.fare ; EA drv-XXX-wlk
    MW[6] = mi.03.fare ; EA wlk-XXX-drv

    MW[11] = (mi.04.ivt + mi.04.wait + mi.04.wacc + mi.04.waux + mi.04.wegr + mi.04.dtime) ; AM wlk-XXX-wlk
    MW[12] = (mi.05.ivt + mi.05.wait + mi.05.wacc + mi.05.waux + mi.05.wegr + mi.05.dtime) ; AM drv-XXX-wlk
    MW[13] = (mi.06.ivt + mi.06.wait + mi.06.wacc + mi.06.waux + mi.06.wegr + mi.06.dtime) ; AM wlk-XXX-drv

    MW[14] = mi.04.fare ; AM wlk-XXX-wlk
    MW[15] = mi.05.fare ; AM drv-XXX-wlk
    MW[16] = mi.06.fare ; AM wlk-XXX-drv

    MW[21] = (mi.07.ivt + mi.07.wait + mi.07.wacc + mi.07.waux + mi.07.wegr + mi.07.dtime) ; MD wlk-XXX-wlk
    MW[22] = (mi.08.ivt + mi.08.wait + mi.08.wacc + mi.08.waux + mi.08.wegr + mi.08.dtime) ; MD drv-XXX-wlk
    MW[23] = (mi.09.ivt + mi.09.wait + mi.09.wacc + mi.09.waux + mi.09.wegr + mi.09.dtime) ; MD wlk-XXX-drv

    MW[24] = mi.07.fare ; MD wlk-XXX-wlk
    MW[25] = mi.08.fare ; MD drv-XXX-wlk
    MW[26] = mi.09.fare ; MD wlk-XXX-drv

    MW[31] = (mi.10.ivt + mi.10.wait + mi.10.wacc + mi.10.waux + mi.10.wegr + mi.10.dtime) ; PM wlk-XXX-wlk
    MW[32] = (mi.11.ivt + mi.11.wait + mi.11.wacc + mi.11.waux + mi.11.wegr + mi.11.dtime) ; PM drv-XXX-wlk
    MW[33] = (mi.12.ivt + mi.12.wait + mi.12.wacc + mi.12.waux + mi.12.wegr + mi.12.dtime) ; PM wlk-XXX-drv

    MW[34] = mi.10.fare ; PM wlk-XXX-wlk
    MW[35] = mi.11.fare ; PM drv-XXX-wlk
    MW[36] = mi.12.fare ; PM wlk-XXX-drv

    MW[41] = (mi.13.ivt + mi.13.wait + mi.13.wacc + mi.13.waux + mi.13.wegr + mi.13.dtime) ; EV wlk-XXX-wlk
    MW[42] = (mi.14.ivt + mi.14.wait + mi.14.wacc + mi.14.waux + mi.14.wegr + mi.14.dtime) ; EV drv-XXX-wlk
    MW[43] = (mi.15.ivt + mi.15.wait + mi.15.wacc + mi.15.waux + mi.15.wegr + mi.15.dtime) ; EV wlk-XXX-drv

    MW[44] = mi.13.fare ; EV wlk-XXX-wlk
    MW[45] = mi.14.fare ; EV drv-XXX-wlk
    MW[46] = mi.15.fare ; EV wlk-XXX-drv
 ENDRUN


 ; Read means-based fare discounts from the block file
 ; Means_Based_Fare_Factor & Means_Based_Cordon_Fare_Factor
 Read File = "CTRAMP\scripts\block\trnParam.block"

; Loop thru income quartiles
  loop inc = 1,4
   if (inc = 1)  token_inc   = '_no_zpv_inc1'
   if (inc = 2)  token_inc   = '_no_zpv_inc2'
   if (inc = 3)  token_inc   = '_no_zpv_inc3'
   if (inc = 4)  token_inc   = '_no_zpv_inc4'

  RUN PGM = MATRIX
  ; Read person trips for a transitmode for all time periods and Access+Egress combinations
  ; Sum them to get daily total transit trips by transitmode

     ; matrices with persons in households over poverty threshold
     FILEI MATI[1] = "main\tripsEA@token_inc@_poverty0.tpp"
     FILEI MATI[2] = "main\tripsAM@token_inc@_poverty0.tpp"
     FILEI MATI[3] = "main\tripsMD@token_inc@_poverty0.tpp"
     FILEI MATI[4] = "main\tripsPM@token_inc@_poverty0.tpp"
     FILEI MATI[5] = "main\tripsEV@token_inc@_poverty0.tpp"

     ; Read temp consolidated transit skims we created above
     ; w@token_path@w_time, d@token_path@w_time, w@token_path@d_time, w@token_path@w_fare, d@token_path@w_fare, w@token_path@d_fare 
     FILEI MATI[6] = "skims\trnskmEA_@token_path@_temp.tpp"
     FILEI MATI[7] = "skims\trnskmAM_@token_path@_temp.tpp"
     FILEI MATI[8] = "skims\trnskmMD_@token_path@_temp.tpp"
     FILEI MATI[9] = "skims\trnskmPM_@token_path@_temp.tpp"
     FILEI MATI[10]= "skims\trnskmEV_@token_path@_temp.tpp"

     ; matrices with persons in households under poverty threshold
     FILEI MATI[11] = "main\tripsEA@token_inc@_poverty1.tpp"
     FILEI MATI[12] = "main\tripsAM@token_inc@_poverty1.tpp"
     FILEI MATI[13] = "main\tripsMD@token_inc@_poverty1.tpp"
     FILEI MATI[14] = "main\tripsPM@token_inc@_poverty1.tpp"
     FILEI MATI[15] = "main\tripsEV@token_inc@_poverty1.tpp"

     FILEI ZDATI[1] = "landuse\tazData.dbf"  ; need cordon and cordon cost information

     FILEO PRINTO[1] = "metrics\transit_times_by_mode_income_@token_path@.csv",APPEND=T
     FILEO PRINTO[2] = "metrics\debugM16M18_@token_path@.csv",APPEND=T

   ; discounts for households under poverty threshold by time period
   MW[1] = @Means_Based_Fare_Factor@ ; EA
   MW[2] = @Means_Based_Fare_Factor@ ; AM
   MW[3] = @Means_Based_Fare_Factor@ ; MD
   MW[4] = @Means_Based_Fare_Factor@ ; PM
   MW[5] = @Means_Based_Fare_Factor@ ; EV
  

   if (@Means_Based_Cordon_Fare_Factor@ < 1.0)
     jloop
        orig_cordon = zi.1.CORDON[i]
        dest_cordon = zi.1.CORDON[j]
        ; cordon discount overrides if orig or dest in cordon
        if ((orig_cordon > 0) || (dest_cordon > 0))
          MW[2] = @Means_Based_Cordon_Fare_Factor@  ; AM
          MW[4] = @Means_Based_Cordon_Fare_Factor@  ; PM
        endif
      endjloop
    endif

    ; TOTAL TRIPS by persons in households under poverty threshold
    MW[6] = mi.11.wlk_@token_path@_wlk +
            mi.11.drv_@token_path@_wlk +
            mi.11.wlk_@token_path@_drv +
            mi.12.wlk_@token_path@_wlk +
            mi.12.drv_@token_path@_wlk +
            mi.12.wlk_@token_path@_drv +
            mi.13.wlk_@token_path@_wlk +
            mi.13.drv_@token_path@_wlk +
            mi.13.wlk_@token_path@_drv +
            mi.14.wlk_@token_path@_wlk +
            mi.14.drv_@token_path@_wlk +
            mi.14.wlk_@token_path@_drv +
            mi.15.wlk_@token_path@_wlk +
            mi.15.drv_@token_path@_wlk +
            mi.15.wlk_@token_path@_drv

   ; TOTAL TRIPS by persons in households above poverty threshold
   MW[7]  = mi.01.wlk_@token_path@_wlk +
            mi.01.drv_@token_path@_wlk +
            mi.01.wlk_@token_path@_drv +
            mi.02.wlk_@token_path@_wlk +
            mi.02.drv_@token_path@_wlk +
            mi.02.wlk_@token_path@_drv +
            mi.03.wlk_@token_path@_wlk +
            mi.03.drv_@token_path@_wlk +
            mi.03.wlk_@token_path@_drv +
            mi.04.wlk_@token_path@_wlk +
            mi.04.drv_@token_path@_wlk +
            mi.04.wlk_@token_path@_drv +
            mi.05.wlk_@token_path@_wlk +
            mi.05.drv_@token_path@_wlk +
            mi.05.wlk_@token_path@_drv
  
   ; TRIPS x TIME by persons in households under poverty threshold
   MW[8] =  mi.06.w@token_path@w_time * mi.11.wlk_@token_path@_wlk +
            mi.06.d@token_path@w_time * mi.11.drv_@token_path@_wlk +
            mi.06.w@token_path@d_time * mi.11.wlk_@token_path@_drv +
            mi.07.w@token_path@w_time * mi.12.wlk_@token_path@_wlk +
            mi.07.d@token_path@w_time * mi.12.drv_@token_path@_wlk +
            mi.07.w@token_path@d_time * mi.12.wlk_@token_path@_drv +
            mi.08.w@token_path@w_time * mi.13.wlk_@token_path@_wlk +
            mi.08.d@token_path@w_time * mi.13.drv_@token_path@_wlk +
            mi.08.w@token_path@d_time * mi.13.wlk_@token_path@_drv +
            mi.09.w@token_path@w_time * mi.14.wlk_@token_path@_wlk +
            mi.09.d@token_path@w_time * mi.14.drv_@token_path@_wlk +
            mi.09.w@token_path@d_time * mi.14.wlk_@token_path@_drv +
            mi.10.w@token_path@w_time * mi.15.wlk_@token_path@_wlk +
            mi.10.d@token_path@w_time * mi.15.drv_@token_path@_wlk +
            mi.10.w@token_path@d_time * mi.15.wlk_@token_path@_drv

   ; TRIPS x TIME by persons in households above poverty threshold
   MW[9] =  mi.06.w@token_path@w_time * mi.01.wlk_@token_path@_wlk +
            mi.06.d@token_path@w_time * mi.01.drv_@token_path@_wlk +
            mi.06.w@token_path@d_time * mi.01.wlk_@token_path@_drv +
            mi.07.w@token_path@w_time * mi.02.wlk_@token_path@_wlk +
            mi.07.d@token_path@w_time * mi.02.drv_@token_path@_wlk +
            mi.07.w@token_path@d_time * mi.02.wlk_@token_path@_drv +
            mi.08.w@token_path@w_time * mi.03.wlk_@token_path@_wlk +
            mi.08.d@token_path@w_time * mi.03.drv_@token_path@_wlk +
            mi.08.w@token_path@d_time * mi.03.wlk_@token_path@_drv +
            mi.09.w@token_path@w_time * mi.04.wlk_@token_path@_wlk +
            mi.09.d@token_path@w_time * mi.04.drv_@token_path@_wlk +
            mi.09.w@token_path@d_time * mi.04.wlk_@token_path@_drv +
            mi.10.w@token_path@w_time * mi.05.wlk_@token_path@_wlk +
            mi.10.d@token_path@w_time * mi.05.drv_@token_path@_wlk +
            mi.10.w@token_path@d_time * mi.05.wlk_@token_path@_drv
  
   ; TRIPS x COST by persons in households under poverty threshold
   ; so includes Means-Based Fare Factor
   MW[10] =(MW[1] * mi.06.w@token_path@w_fare * mi.11.wlk_@token_path@_wlk) +
           (MW[1] * mi.06.d@token_path@w_fare * mi.11.drv_@token_path@_wlk) +
           (MW[1] * mi.06.w@token_path@d_fare * mi.11.wlk_@token_path@_drv) +
           (MW[2] * mi.07.w@token_path@w_fare * mi.12.wlk_@token_path@_wlk) +
           (MW[2] * mi.07.d@token_path@w_fare * mi.12.drv_@token_path@_wlk) +
           (MW[2] * mi.07.w@token_path@d_fare * mi.12.wlk_@token_path@_drv) +
           (MW[3] * mi.08.w@token_path@w_fare * mi.13.wlk_@token_path@_wlk) +
           (MW[3] * mi.08.d@token_path@w_fare * mi.13.drv_@token_path@_wlk) +
           (MW[3] * mi.08.w@token_path@d_fare * mi.13.wlk_@token_path@_drv) +
           (MW[4] * mi.09.w@token_path@w_fare * mi.14.wlk_@token_path@_wlk) +
           (MW[4] * mi.09.d@token_path@w_fare * mi.14.drv_@token_path@_wlk) +
           (MW[4] * mi.09.w@token_path@d_fare * mi.14.wlk_@token_path@_drv) +
           (MW[5] * mi.10.w@token_path@w_fare * mi.15.wlk_@token_path@_wlk) +
           (MW[5] * mi.10.d@token_path@w_fare * mi.15.drv_@token_path@_wlk) +
           (MW[5] * mi.10.w@token_path@d_fare * mi.15.wlk_@token_path@_drv)

   ; TRIPS x COST by persons in households above poverty threshold
   MW[11] = mi.06.w@token_path@w_fare * mi.01.wlk_@token_path@_wlk +
            mi.06.d@token_path@w_fare * mi.01.drv_@token_path@_wlk +
            mi.06.w@token_path@d_fare * mi.01.wlk_@token_path@_drv +
            mi.07.w@token_path@w_fare * mi.02.wlk_@token_path@_wlk +
            mi.07.d@token_path@w_fare * mi.02.drv_@token_path@_wlk +
            mi.07.w@token_path@d_fare * mi.02.wlk_@token_path@_drv +
            mi.08.w@token_path@w_fare * mi.03.wlk_@token_path@_wlk +
            mi.08.d@token_path@w_fare * mi.03.drv_@token_path@_wlk +
            mi.08.w@token_path@d_fare * mi.03.wlk_@token_path@_drv +
            mi.09.w@token_path@w_fare * mi.04.wlk_@token_path@_wlk +
            mi.09.d@token_path@w_fare * mi.04.drv_@token_path@_wlk +
            mi.09.w@token_path@d_fare * mi.04.wlk_@token_path@_drv +
            mi.10.w@token_path@w_fare * mi.05.wlk_@token_path@_wlk +
            mi.10.d@token_path@w_fare * mi.05.drv_@token_path@_wlk +
            mi.10.w@token_path@d_fare * mi.05.wlk_@token_path@_drv

    JLOOP
      tottripspv = tottripspv + MW[6]   ; total trips by persons in households under povery threshold
      tottripsnp = tottripsnp + MW[7]   ; total trips by persons in households above povery threshold
      triptimepv = triptimepv + MW[8]   ; total trip time by persons in households under povery threshold
      triptimenp = triptimenp + MW[9]   ; total trip time by persons in households above povery threshold
      tripcostpv = tripcostpv + MW[10]  ; total trip cost by persons in households under povery threshold
      tripcostnp = tripcostnp + MW[11]  ; total trip cost by persons in households above povery threshold

      ;debug
      if (MW[7]>0) PRINT PRINTO=2 CSV=T LIST=i, j, MW[7], MW[11]

    ENDJLOOP
    Tripspv = tottripspv
    Tripsnp = tottripsnp
    Timepv  = triptimepv /100  ; minutes x 100 to minutes
    Timenp  = triptimenp /100  ; minutes x 100 to minutes
    Costpv  = tripcostpv /100  ; convert from cents to dollars
    Costnp  = tripcostnp /100  ; convert from cents to dollars

    if(I = 1 & @inc@=1 & @path@ = 1) PRINT PRINTO=1 CSV=T LIST = "Income","Poverty","Mode","Daily Trips","Avg Time","Avg Cost"

    if(I = 1454) 
      Avg_timepv = Timepv/Tripspv
      Avg_timenp = Timenp/Tripsnp
      Avg_Costpv = Costpv/Tripspv
      Avg_Costnp = Costnp/Tripsnp
      PRINT PRINTO=1 CSV=T LIST= '@token_inc@',1,'@token_path@',Tripspv,Avg_timepv,Avg_Costpv
      PRINT PRINTO=1 CSV=T LIST= '@token_inc@',0,'@token_path@',Tripsnp,Avg_timenp,Avg_Costnp
    ENDIF

    ENDRUN
  endloop ; income

  EndDistributeMultistep

  * del skims\trnskmEA_@token_path@_temp.tpp
  * del skims\trnskmAM_@token_path@_temp.tpp
  * del skims\trnskmMD_@token_path@_temp.tpp
  * del skims\trnskmPM_@token_path@_temp.tpp
  * del skims\trnskmEV_@token_path@_temp.tpp
endloop ; path

Wait4Files files=CTRAMP1.script.end, CTRAMP2.script.end, CTRAMP3.script.end,
                 CTRAMP4.script.end, CTRAMP5.script.end,
           printfiles = merge, deldistribfiles = t, CheckReturnCode = t

; combine the path files into one
* copy metrics\transit_times_by_mode_income_com.csv+metrics\transit_times_by_mode_income_hvy.csv+metrics\transit_times_by_mode_income_exp.csv+metrics\transit_times_by_mode_income_lrf.csv+metrics\transit_times_by_mode_income_loc.csv metrics\transit_times_by_mode_income.csv
; delete the individual ones
* del metrics\transit_times_by_mode_income_com.csv
* del metrics\transit_times_by_mode_income_hvy.csv
* del metrics\transit_times_by_mode_income_exp.csv
* del metrics\transit_times_by_mode_income_lrf.csv
* del metrics\transit_times_by_mode_income_loc.csv
