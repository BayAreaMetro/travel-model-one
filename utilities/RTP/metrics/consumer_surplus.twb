<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0917.1648                               -->
<workbook source-build='2019.2.4 (20192.19.0917.1648)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='TAZ and ConsumerSurplusdiff Joined' inline='true' name='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Travel Analysis Zones' name='ogrdirect.1efdtoc1ji58yc1e8ugyi0d6gs5f (copy)'>
            <connection class='ogrdirect' directory='M:/Data/GIS layers/Travel_Analysis_Zones_(TAZ1454)' filename='Travel Analysis Zones.shp' ogr-grid-shift-folder='C:\Program Files\Tableau\Tableau 2019.2\local\proj4' password='' server='' tablename='' />
          </named-connection>
          <named-connection caption='consumer_surplus' name='textscan.1e7qetk1ws4dz714nplef00kcg77'>
            <connection class='textscan' directory='.' filename='consumer_surplus.csv' password='' server='' />
          </named-connection>
          <named-connection caption='accessibilities_dummy_full_households' name='textscan.08jhfuo1vkcd651beqy4311hdads'>
            <connection class='textscan' directory='X:/populationsim/bay_area' filename='accessibilities_dummy_full_households.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[consumer_surplus.csv].[taz]' />
                <expression op='[accessibilities_dummy_full_model_households.csv].[taz]' />
              </expression>
              <expression op='='>
                <expression op='[consumer_surplus.csv].[walk_subzone]' />
                <expression op='[accessibilities_dummy_full_model_households.csv].[walk_subzone]' />
              </expression>
              <expression op='='>
                <expression op='[consumer_surplus.csv].[incQ_label]' />
                <expression op='IF ([accessibilities_dummy_full_model_households.csv].[income] &lt; 30000) then&#13;&#10;  &quot;lowInc&quot;&#13;&#10;ELSEif ([accessibilities_dummy_full_model_households.csv].[income] &lt; 60000) then&#13;&#10;  &quot;medInc&quot;&#13;&#10;elseif ([accessibilities_dummy_full_model_households.csv].[income] &lt; 100000) then&#13;&#10;  &quot;highInc&quot;&#13;&#10;else&#13;&#10;  &quot;veryHighInc&quot;&#13;&#10;END&#13;&#10;' />
              </expression>
              <expression op='='>
                <expression op='[consumer_surplus.csv].[autoSuff_label]' />
                <expression op='IF ([accessibilities_dummy_full_model_households.csv].[autos]==0) then&#13;&#10;  &quot;0_autos&quot;&#13;&#10;ELSEIF ([accessibilities_dummy_full_model_households.csv].[autos] &lt; [accessibilities_dummy_full_model_households.csv].[workers]) then&#13;&#10;  &quot;autos_lt_workers&quot;&#13;&#10;ELSE&#13;&#10;  &quot;autos_ge_workers&quot;&#13;&#10;END' />
              </expression>
              <expression op='='>
                <expression op='[consumer_surplus.csv].[hasAV]' />
                <expression op='if ([accessibilities_dummy_full_model_households.csv].[autonomousVehicles] == 0) then&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  1&#13;&#10;END&#13;&#10;' />
              </expression>
            </expression>
          </clause>
          <relation join='right' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Travel Analysis Zones.shp].[TAZ1454]' />
                <expression op='[consumer_surplus.csv].[taz]' />
              </expression>
            </clause>
            <relation connection='ogrdirect.1efdtoc1ji58yc1e8ugyi0d6gs5f (copy)' name='Travel Analysis Zones.shp' table='[Travel Analysis Zones.shp]' type='table'>
              <columns>
                <column datatype='integer' name='SUPERD' ordinal='0' />
                <column datatype='integer' name='TAZ1454' ordinal='1' />
                <column datatype='real' name='Shape__Are' ordinal='2' />
                <column datatype='real' name='Shape__Len' ordinal='3' />
                <column datatype='spatial' name='Geometry' ordinal='4' />
              </columns>
            </relation>
            <relation connection='textscan.1e7qetk1ws4dz714nplef00kcg77' name='consumer_surplus.csv' table='[consumer_surplus#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='real' name='CS diff min' ordinal='0' />
                <column datatype='real' name='autoSuff' ordinal='1' />
                <column datatype='string' name='autoSuff_label' ordinal='2' />
                <column datatype='real' name='base_dclogsum' ordinal='3' />
                <column datatype='real' name='base_num_persons' ordinal='4' />
                <column datatype='real' name='base_num_workers' ordinal='5' />
                <column datatype='real' name='base_num_workers_students' ordinal='6' />
                <column datatype='boolean' name='cem' ordinal='7' />
                <column datatype='real' name='diff_dclogsum' ordinal='8' />
                <column datatype='integer' name='hasAV' ordinal='9' />
                <column datatype='string' name='incQ_label' ordinal='10' />
                <column datatype='real' name='ldm_cem' ordinal='11' />
                <column datatype='real' name='ldm_mult' ordinal='12' />
                <column datatype='real' name='ldm_ratio' ordinal='13' />
                <column datatype='real' name='logsum_diff_minutes' ordinal='14' />
                <column datatype='boolean' name='mandatory' ordinal='15' />
                <column datatype='real' name='scen_dclogsum' ordinal='16' />
                <column datatype='real' name='scen_num_persons' ordinal='17' />
                <column datatype='real' name='scen_num_workers' ordinal='18' />
                <column datatype='real' name='scen_num_workers_students' ordinal='19' />
                <column datatype='integer' name='taz' ordinal='20' />
                <column datatype='integer' name='walk_subzone' ordinal='21' />
                <column datatype='real' name='CS diff hours' ordinal='22' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.08jhfuo1vkcd651beqy4311hdads' name='accessibilities_dummy_full_model_households.csv' table='[accessibilities_dummy_full_model_households#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='hh_id' ordinal='0' />
              <column datatype='integer' name='taz' ordinal='1' />
              <column datatype='integer' name='walk_subzone' ordinal='2' />
              <column datatype='integer' name='income' ordinal='3' />
              <column datatype='integer' name='workers' ordinal='4' />
              <column datatype='integer' name='size' ordinal='5' />
              <column datatype='integer' name='autos' ordinal='6' />
              <column datatype='integer' name='autonomousVehicles' ordinal='7' />
              <column datatype='string' name='cdap_pattern' ordinal='8' />
              <column datatype='string' name='jtf_pattern' ordinal='9' />
              <column datatype='integer' name='humanVehicles' ordinal='10' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[CS diff hours]' value='[consumer_surplus.csv].[CS diff hours]' />
          <map key='[CS diff min]' value='[consumer_surplus.csv].[CS diff min]' />
          <map key='[Geometry]' value='[Travel Analysis Zones.shp].[Geometry]' />
          <map key='[SUPERD]' value='[Travel Analysis Zones.shp].[SUPERD]' />
          <map key='[Shape__Are]' value='[Travel Analysis Zones.shp].[Shape__Are]' />
          <map key='[Shape__Len]' value='[Travel Analysis Zones.shp].[Shape__Len]' />
          <map key='[TAZ1454]' value='[Travel Analysis Zones.shp].[TAZ1454]' />
          <map key='[autoSuff]' value='[consumer_surplus.csv].[autoSuff]' />
          <map key='[autoSuff_label]' value='[consumer_surplus.csv].[autoSuff_label]' />
          <map key='[autonomousVehicles]' value='[accessibilities_dummy_full_model_households.csv].[autonomousVehicles]' />
          <map key='[autos]' value='[accessibilities_dummy_full_model_households.csv].[autos]' />
          <map key='[base_dclogsum]' value='[consumer_surplus.csv].[base_dclogsum]' />
          <map key='[base_num_persons]' value='[consumer_surplus.csv].[base_num_persons]' />
          <map key='[base_num_workers]' value='[consumer_surplus.csv].[base_num_workers]' />
          <map key='[base_num_workers_students]' value='[consumer_surplus.csv].[base_num_workers_students]' />
          <map key='[cdap_pattern]' value='[accessibilities_dummy_full_model_households.csv].[cdap_pattern]' />
          <map key='[cem]' value='[consumer_surplus.csv].[cem]' />
          <map key='[diff_dclogsum]' value='[consumer_surplus.csv].[diff_dclogsum]' />
          <map key='[hasAV]' value='[consumer_surplus.csv].[hasAV]' />
          <map key='[hh_id]' value='[accessibilities_dummy_full_model_households.csv].[hh_id]' />
          <map key='[humanVehicles]' value='[accessibilities_dummy_full_model_households.csv].[humanVehicles]' />
          <map key='[incQ_label]' value='[consumer_surplus.csv].[incQ_label]' />
          <map key='[income]' value='[accessibilities_dummy_full_model_households.csv].[income]' />
          <map key='[jtf_pattern]' value='[accessibilities_dummy_full_model_households.csv].[jtf_pattern]' />
          <map key='[ldm_cem]' value='[consumer_surplus.csv].[ldm_cem]' />
          <map key='[ldm_mult]' value='[consumer_surplus.csv].[ldm_mult]' />
          <map key='[ldm_ratio]' value='[consumer_surplus.csv].[ldm_ratio]' />
          <map key='[logsum_diff_minutes]' value='[consumer_surplus.csv].[logsum_diff_minutes]' />
          <map key='[mandatory]' value='[consumer_surplus.csv].[mandatory]' />
          <map key='[scen_dclogsum]' value='[consumer_surplus.csv].[scen_dclogsum]' />
          <map key='[scen_num_persons]' value='[consumer_surplus.csv].[scen_num_persons]' />
          <map key='[scen_num_workers]' value='[consumer_surplus.csv].[scen_num_workers]' />
          <map key='[scen_num_workers_students]' value='[consumer_surplus.csv].[scen_num_workers_students]' />
          <map key='[size]' value='[accessibilities_dummy_full_model_households.csv].[size]' />
          <map key='[taz (accessibilities_dummy_full_model_households.csv)]' value='[accessibilities_dummy_full_model_households.csv].[taz]' />
          <map key='[taz]' value='[consumer_surplus.csv].[taz]' />
          <map key='[walk_subzone (accessibilities_dummy_full_model_households.csv)]' value='[accessibilities_dummy_full_model_households.csv].[walk_subzone]' />
          <map key='[walk_subzone]' value='[consumer_surplus.csv].[walk_subzone]' />
          <map key='[workers]' value='[accessibilities_dummy_full_model_households.csv].[workers]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>SUPERD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUPERD]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>SUPERD</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAZ1454</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAZ1454]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>TAZ1454</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape__Are</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape__Are]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Shape__Are</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape__Len</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape__Len]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Shape__Len</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>4</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CS diff min</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CS diff min]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>CS diff min</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_dclogsum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_dclogsum]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>base_dclogsum</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_num_persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_num_persons]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>base_num_persons</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_num_workers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_num_workers]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>base_num_workers</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_num_workers_students</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_num_workers_students]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>base_num_workers_students</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cem</remote-name>
            <remote-type>11</remote-type>
            <local-name>[cem]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>cem</remote-alias>
            <ordinal>12</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diff_dclogsum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diff_dclogsum]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>diff_dclogsum</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hasAV</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hasAV]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>hasAV</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ldm_cem</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ldm_cem]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>ldm_cem</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ldm_mult</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ldm_mult]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>ldm_mult</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ldm_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ldm_ratio]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>ldm_ratio</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>logsum_diff_minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[logsum_diff_minutes]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>logsum_diff_minutes</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mandatory</remote-name>
            <remote-type>11</remote-type>
            <local-name>[mandatory]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>mandatory</remote-alias>
            <ordinal>20</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scen_dclogsum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scen_dclogsum]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>scen_dclogsum</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scen_num_persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scen_num_persons]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>scen_num_persons</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scen_num_workers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scen_num_workers]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>scen_num_workers</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scen_num_workers_students</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scen_num_workers_students]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>scen_num_workers_students</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[walk_subzone]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>walk_subzone</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CS diff hours</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CS diff hours]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>CS diff hours</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[accessibilities_dummy_full_model_households.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hh_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hh_id]</local-name>
            <parent-name>[accessibilities_dummy_full_model_households.csv]</parent-name>
            <remote-alias>hh_id</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taz (accessibilities_dummy_full_model_households.csv)]</local-name>
            <parent-name>[accessibilities_dummy_full_model_households.csv]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[walk_subzone (accessibilities_dummy_full_model_households.csv)]</local-name>
            <parent-name>[accessibilities_dummy_full_model_households.csv]</parent-name>
            <remote-alias>walk_subzone</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[income]</local-name>
            <parent-name>[accessibilities_dummy_full_model_households.csv]</parent-name>
            <remote-alias>income</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>workers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[workers]</local-name>
            <parent-name>[accessibilities_dummy_full_model_households.csv]</parent-name>
            <remote-alias>workers</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>size</remote-name>
            <remote-type>20</remote-type>
            <local-name>[size]</local-name>
            <parent-name>[accessibilities_dummy_full_model_households.csv]</parent-name>
            <remote-alias>size</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autos</remote-name>
            <remote-type>20</remote-type>
            <local-name>[autos]</local-name>
            <parent-name>[accessibilities_dummy_full_model_households.csv]</parent-name>
            <remote-alias>autos</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autonomousVehicles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[autonomousVehicles]</local-name>
            <parent-name>[accessibilities_dummy_full_model_households.csv]</parent-name>
            <remote-alias>autonomousVehicles</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cdap_pattern</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cdap_pattern]</local-name>
            <parent-name>[accessibilities_dummy_full_model_households.csv]</parent-name>
            <remote-alias>cdap_pattern</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jtf_pattern</remote-name>
            <remote-type>129</remote-type>
            <local-name>[jtf_pattern]</local-name>
            <parent-name>[accessibilities_dummy_full_model_households.csv]</parent-name>
            <remote-alias>jtf_pattern</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humanVehicles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[humanVehicles]</local-name>
            <parent-name>[accessibilities_dummy_full_model_households.csv]</parent-name>
            <remote-alias>humanVehicles</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Superd' datatype='integer' name='[SUPERD]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Taz1454' datatype='integer' name='[TAZ1454]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Auto Suff' datatype='real' name='[autoSuff]' role='dimension' type='ordinal' />
      <column caption='autoSuff label' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;0_autos&quot;' value='Zero Autos' />
          <alias key='&quot;autos_ge_workers&quot;' value='Autos &gt;= Workers' />
          <alias key='&quot;autos_lt_workers&quot;' value='Autos &lt; Workers' />
        </aliases>
      </column>
      <column caption='Base Dclogsum' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[base_dclogsum]' role='measure' type='quantitative' />
      <column caption='Base Num Persons' datatype='real' name='[base_num_persons]' role='measure' type='quantitative' />
      <column caption='Base Num Workers' datatype='real' name='[base_num_workers]' role='measure' type='quantitative' />
      <column caption='Base Num Workers Students' datatype='real' name='[base_num_workers_students]' role='measure' type='quantitative' />
      <column caption='Cliff Effect Mitigation (CEM)' datatype='boolean' name='[cem]' role='dimension' type='nominal' />
      <column caption='Diff Dclogsum' datatype='real' name='[diff_dclogsum]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Has Autonomous Vehicle' datatype='integer' name='[hasAV]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='n0;-0' name='[hh_id]' role='measure' type='quantitative' />
      <column caption='incQ label' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;highInc&quot;' value='High Income' />
          <alias key='&quot;lowInc&quot;' value='Low Income' />
          <alias key='&quot;medInc&quot;' value='Medium Income' />
          <alias key='&quot;veryHighInc&quot;' value='Very High Income' />
        </aliases>
      </column>
      <column caption='Ldm Cem' datatype='real' name='[ldm_cem]' role='measure' type='quantitative' />
      <column caption='Ldm Mult' datatype='real' name='[ldm_mult]' role='measure' type='quantitative' />
      <column caption='Ldm Ratio' datatype='real' name='[ldm_ratio]' role='measure' type='quantitative' />
      <column caption='Logsum Diff Minutes' datatype='real' name='[logsum_diff_minutes]' role='measure' type='quantitative' />
      <column caption='Mandatory' datatype='boolean' name='[mandatory]' role='dimension' type='nominal'>
        <aliases>
          <alias key='false' value='False (e.g. Shopping)' />
          <alias key='true' value='True (e.g. Work)' />
        </aliases>
      </column>
      <column caption='Scen Dclogsum' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[scen_dclogsum]' role='measure' type='quantitative' />
      <column caption='Scen Num Persons' datatype='real' name='[scen_num_persons]' role='measure' type='quantitative' />
      <column caption='Scen Num Workers' datatype='real' name='[scen_num_workers]' role='measure' type='quantitative' />
      <column caption='Scen Num Workers Students' datatype='real' name='[scen_num_workers_students]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[taz (accessibilities_dummy_full_model_households.csv)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Taz' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Walk Subzone' datatype='integer' name='[walk_subzone]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Cannot walk to transit' />
          <alias key='1' value='Short walk to transit' />
          <alias key='2' value='Long walk to transit' />
        </aliases>
      </column>
      <column-instance column='[SUPERD]' derivation='None' name='[none:SUPERD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
      <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
      <column-instance column='[taz]' derivation='None' name='[none:taz:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Superd,Taz)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:SUPERD:qk]' />
          <groupfilter function='level-members' level='[none:taz:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.436931' measure-ordering='alphabetic' measure-percentage='0.563069' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:autoSuff_label:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;0_autos&quot;</bucket>
            <bucket>&quot;autos_lt_workers&quot;</bucket>
            <bucket>&quot;autos_ge_workers&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:incQ_label:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;lowInc&quot;</bucket>
            <bucket>&quot;medInc&quot;</bucket>
            <bucket>&quot;highInc&quot;</bucket>
            <bucket>&quot;veryHighInc&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='CS Diff - All Tours'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Accessibility Benefits (household-based)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ and ConsumerSurplusdiff Joined' name='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)'>
            <column datatype='real' name='[CS diff hours]' role='measure' type='quantitative' />
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Superd' datatype='integer' name='[SUPERD]' role='measure' type='quantitative' />
            <column caption='autoSuff label' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0_autos&quot;' value='Zero Autos' />
                <alias key='&quot;autos_ge_workers&quot;' value='Autos &gt;= Workers' />
                <alias key='&quot;autos_lt_workers&quot;' value='Autos &lt; Workers' />
              </aliases>
            </column>
            <column caption='Cliff Effect Mitigation (CEM)' datatype='boolean' name='[cem]' role='dimension' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Has Autonomous Vehicle' datatype='integer' name='[hasAV]' role='dimension' type='ordinal' />
            <column caption='incQ label' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;highInc&quot;' value='High Income' />
                <alias key='&quot;lowInc&quot;' value='Low Income' />
                <alias key='&quot;medInc&quot;' value='Medium Income' />
                <alias key='&quot;veryHighInc&quot;' value='Very High Income' />
              </aliases>
            </column>
            <column caption='Mandatory' datatype='boolean' name='[mandatory]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='False (e.g. Shopping)' />
                <alias key='true' value='True (e.g. Work)' />
              </aliases>
            </column>
            <column-instance column='[SUPERD]' derivation='None' name='[none:SUPERD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[cem]' derivation='None' name='[none:cem:nk]' pivot='key' type='nominal' />
            <column-instance column='[hasAV]' derivation='None' name='[none:hasAV:ok]' pivot='key' type='ordinal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[mandatory]' derivation='None' name='[none:mandatory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:qk]' pivot='key' type='quantitative' />
            <column-instance column='[walk_subzone]' derivation='None' name='[none:walk_subzone:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CS diff hours]' derivation='Sum' name='[sum:CS diff hours:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Taz' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Walk Subzone' datatype='integer' name='[walk_subzone]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Cannot walk to transit' />
                <alias key='1' value='Short walk to transit' />
                <alias key='2' value='Long walk to transit' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]'>
            <groupfilter function='level-members' level='[none:autoSuff_label:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]'>
            <groupfilter function='member' level='[none:cem:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]'>
            <groupfilter function='level-members' level='[none:hasAV:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]'>
            <groupfilter function='level-members' level='[none:incQ_label:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]'>
            <groupfilter function='member' level='[none:mandatory:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]'>
            <groupfilter function='level-members' level='[none:walk_subzone:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:taz:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Longitude (generated)]' field-type='quantitative' max='-13533564.187641144' min='-13770022.190333871' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Latitude (generated)]' field-type='quantitative' max='4642886.1687449953' min='4420708.0454333657' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:CS diff hours:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:taz:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:SUPERD:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:Number of Records:qk]' />
              <geometry column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Latitude (generated)]</rows>
        <cols>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F3E0C0D7-3D35-4DFB-8098-8D6FE09ADBC8}' />
    </worksheet>
    <worksheet name='Logsum Diffs - CEM'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Logsum Diff Minutes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ and ConsumerSurplusdiff Joined' name='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)'>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Superd' datatype='integer' name='[SUPERD]' role='measure' type='quantitative' />
            <column-instance column='[hh_id]' derivation='Attribute' name='[attr:hh_id:qk]' pivot='key' type='quantitative' />
            <column caption='autoSuff label' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0_autos&quot;' value='Zero Autos' />
                <alias key='&quot;autos_ge_workers&quot;' value='Autos &gt;= Workers' />
                <alias key='&quot;autos_lt_workers&quot;' value='Autos &lt; Workers' />
              </aliases>
            </column>
            <column caption='Base Dclogsum' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[base_dclogsum]' role='measure' type='quantitative' />
            <column caption='Cliff Effect Mitigation (CEM)' datatype='boolean' name='[cem]' role='dimension' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Has Autonomous Vehicle' datatype='integer' name='[hasAV]' role='dimension' type='ordinal' />
            <column datatype='integer' default-format='n0;-0' name='[hh_id]' role='measure' type='quantitative' />
            <column caption='incQ label' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;highInc&quot;' value='High Income' />
                <alias key='&quot;lowInc&quot;' value='Low Income' />
                <alias key='&quot;medInc&quot;' value='Medium Income' />
                <alias key='&quot;veryHighInc&quot;' value='Very High Income' />
              </aliases>
            </column>
            <column caption='Ldm Cem' datatype='real' name='[ldm_cem]' role='measure' type='quantitative' />
            <column caption='Mandatory' datatype='boolean' name='[mandatory]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='False (e.g. Shopping)' />
                <alias key='true' value='True (e.g. Work)' />
              </aliases>
            </column>
            <column-instance column='[SUPERD]' derivation='None' name='[none:SUPERD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[cem]' derivation='None' name='[none:cem:nk]' pivot='key' type='nominal' />
            <column-instance column='[hasAV]' derivation='None' name='[none:hasAV:ok]' pivot='key' type='ordinal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[mandatory]' derivation='None' name='[none:mandatory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:qk]' pivot='key' type='quantitative' />
            <column-instance column='[walk_subzone]' derivation='None' name='[none:walk_subzone:ok]' pivot='key' type='ordinal' />
            <column caption='Scen Dclogsum' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[scen_dclogsum]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[base_dclogsum]' derivation='Sum' name='[sum:base_dclogsum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ldm_cem]' derivation='Sum' name='[sum:ldm_cem:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scen_dclogsum]' derivation='Sum' name='[sum:scen_dclogsum:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Taz' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Walk Subzone' datatype='integer' name='[walk_subzone]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Cannot walk to transit' />
                <alias key='1' value='Short walk to transit' />
                <alias key='2' value='Long walk to transit' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]'>
            <groupfilter function='level-members' level='[none:autoSuff_label:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]'>
            <groupfilter function='member' level='[none:cem:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]'>
            <groupfilter function='level-members' level='[none:hasAV:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]'>
            <groupfilter function='level-members' level='[none:incQ_label:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]'>
            <groupfilter function='member' level='[none:mandatory:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]'>
            <groupfilter function='level-members' level='[none:walk_subzone:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Longitude (generated)]' field-type='quantitative' max='-13467290.034717163' min='-13794216.147805894' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Latitude (generated)]' field-type='quantitative' max='4614946.7612502323' min='4479846.1723574381' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:ldm_cem:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:taz:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:SUPERD:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:Number of Records:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:base_dclogsum:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:scen_dclogsum:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[attr:hh_id:qk]' />
              <geometry column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Superd:&#9;</run>
                <run bold='true'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:SUPERD:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Taz:&#9;</run>
                <run bold='true'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:taz:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Scen Dclogsum:&#9;</run>
                <run bold='true'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:scen_dclogsum:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Base Dclogsum:&#9;</run>
                <run bold='true'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:base_dclogsum:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Logsum Diff Minutes:&#9;</run>
                <run bold='true'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:ldm_cem:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Records:&#9;</run>
                <run bold='true'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:Number of Records:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666'>Trace hhid: </run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run fontcolor='#4e79a7'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[attr:hh_id:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Latitude (generated)]</rows>
        <cols>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9A388C0D-CAA9-42ED-B64A-0D32CE9F5285}' />
    </worksheet>
    <worksheet name='Logsum Diffs - no CEM'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Logsum Diff Minutes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ and ConsumerSurplusdiff Joined' name='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)'>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Superd' datatype='integer' name='[SUPERD]' role='measure' type='quantitative' />
            <column-instance column='[hh_id]' derivation='Attribute' name='[attr:hh_id:qk]' pivot='key' type='quantitative' />
            <column caption='autoSuff label' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0_autos&quot;' value='Zero Autos' />
                <alias key='&quot;autos_ge_workers&quot;' value='Autos &gt;= Workers' />
                <alias key='&quot;autos_lt_workers&quot;' value='Autos &lt; Workers' />
              </aliases>
            </column>
            <column caption='Base Dclogsum' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[base_dclogsum]' role='measure' type='quantitative' />
            <column caption='Cliff Effect Mitigation (CEM)' datatype='boolean' name='[cem]' role='dimension' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Has Autonomous Vehicle' datatype='integer' name='[hasAV]' role='dimension' type='ordinal' />
            <column datatype='integer' default-format='n0;-0' name='[hh_id]' role='measure' type='quantitative' />
            <column caption='incQ label' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;highInc&quot;' value='High Income' />
                <alias key='&quot;lowInc&quot;' value='Low Income' />
                <alias key='&quot;medInc&quot;' value='Medium Income' />
                <alias key='&quot;veryHighInc&quot;' value='Very High Income' />
              </aliases>
            </column>
            <column caption='Logsum Diff Minutes' datatype='real' name='[logsum_diff_minutes]' role='measure' type='quantitative' />
            <column caption='Mandatory' datatype='boolean' name='[mandatory]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='False (e.g. Shopping)' />
                <alias key='true' value='True (e.g. Work)' />
              </aliases>
            </column>
            <column-instance column='[SUPERD]' derivation='None' name='[none:SUPERD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[cem]' derivation='None' name='[none:cem:nk]' pivot='key' type='nominal' />
            <column-instance column='[hasAV]' derivation='None' name='[none:hasAV:ok]' pivot='key' type='ordinal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[mandatory]' derivation='None' name='[none:mandatory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:qk]' pivot='key' type='quantitative' />
            <column-instance column='[walk_subzone]' derivation='None' name='[none:walk_subzone:ok]' pivot='key' type='ordinal' />
            <column caption='Scen Dclogsum' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[scen_dclogsum]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[base_dclogsum]' derivation='Sum' name='[sum:base_dclogsum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[logsum_diff_minutes]' derivation='Sum' name='[sum:logsum_diff_minutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scen_dclogsum]' derivation='Sum' name='[sum:scen_dclogsum:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Taz' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Walk Subzone' datatype='integer' name='[walk_subzone]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Cannot walk to transit' />
                <alias key='1' value='Short walk to transit' />
                <alias key='2' value='Long walk to transit' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]'>
            <groupfilter function='member' level='[none:autoSuff_label:nk]' member='&quot;0_autos&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]'>
            <groupfilter function='member' level='[none:cem:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]'>
            <groupfilter function='member' level='[none:hasAV:ok]' member='0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]'>
            <groupfilter function='member' level='[none:incQ_label:nk]' member='&quot;lowInc&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]'>
            <groupfilter function='member' level='[none:mandatory:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]'>
            <groupfilter function='member' level='[none:walk_subzone:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Longitude (generated)]' field-type='quantitative' max='-13467290.034717163' min='-13794216.147805894' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Latitude (generated)]' field-type='quantitative' max='4614946.7612502323' min='4479846.1723574381' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:logsum_diff_minutes:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:taz:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:SUPERD:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:Number of Records:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:base_dclogsum:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:scen_dclogsum:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[attr:hh_id:qk]' />
              <geometry column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Superd:&#9;</run>
                <run bold='true'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:SUPERD:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Taz:&#9;</run>
                <run bold='true'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:taz:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Scen Dclogsum:&#9;</run>
                <run bold='true'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:scen_dclogsum:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Base Dclogsum:&#9;</run>
                <run bold='true'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:base_dclogsum:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Logsum Diff Minutes:&#9;</run>
                <run bold='true'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:logsum_diff_minutes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Records:&#9;</run>
                <run bold='true'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:Number of Records:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666'>Trace hhid: </run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run fontcolor='#4e79a7'>&lt;[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[attr:hh_id:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Latitude (generated)]</rows>
        <cols>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{36384D33-3B08-46C1-8F9D-10FC9078D515}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='CS Diff - All Tours'>
      <cards>
        <edge name='left'>
          <strip size='129'>
            <card size='31' type='pages' />
            <card size='83' type='filters' />
            <card size='166' type='marks' />
          </strip>
          <strip size='189'>
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]' show-all='false' size='45' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]' size='64' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]' size='83' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]' size='83' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]' size='64' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]' size='102' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:CS diff hours:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CF40427A-32CE-4607-B72B-EEB15AB61A91}' />
    </window>
    <window class='worksheet' name='Logsum Diffs - no CEM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='83' type='filters' />
            <card size='166' type='marks' />
          </strip>
          <strip size='160'>
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:logsum_diff_minutes:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5A325415-34E6-44E5-B2CE-4A43F0651A8D}' />
    </window>
    <window class='worksheet' maximized='true' name='Logsum Diffs - CEM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]' show-all='false' type='filter' />
          </strip>
          <strip size='160'>
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:ldm_cem:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:ldm_cem:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B3D343C4-A274-47CE-9545-69CB2198F6BE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CS Diff - All Tours' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Logsum Diffs - CEM' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Logsum Diffs - no CEM' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9+Y8kyZXn93lm7h5n3nVXH2TzmKF2MDuEdnWuDgiQ9AfqfxAWkH6RfhAE
      CANJu7M7AndnMQMshzskhz1N9lFdZ2bG7e5mph/MzcPCwz0yIqu62Oyq1yxmZoS7mbn5e2bv
      fd9hcn197dI0ZV8yxnB9fY1zbq/rRWTj733va7vfOYe1FqUUSZJsfd7WT7P/tvZFBK01xpj6
      b2NM3a5z7sZ2utruD/pkacbV1RWIoKJ2Ql9tYw3Puc8z7KKb5kFrDfj32kVJklCWZX19fG2Y
      p/Ascb9hXuNxdI2tiy+MNeAa9wsoUZ3PF18bxtXkD4DHjx9LkqYp/X6/8+GbZK1lPp9TluVe
      zOycQylVP+ShAtCcXKVU3V74zFrb+YLbXkpMgcmUUoxGI9I0RURYrVbMZjOKssCZlnELCILz
      DW/1FfqzxtIb99aME407PEN4QfH94Rnb2j1EIJrM0PZ9YNSud2OtJcsyRISiKOo5C20G4Qjt
      hzaTJEEpVbfbbD/mh7jNretwm985QG+Ps02QbpqrZOe3LSQiZFlGURR73xNLqVKqVRr3vb85
      yV1CtS+ThHZGo1H9kgEGgwFaa66urihduTVmwT+Lsd0rJ1DvIEmSUO5YZWMhaFtNb/t8+1wX
      73Jd1wcmb2u/+U6dcxsr/65Fr8m0nQIr4GzFB2qb0Zs7Qfw8u/pXnd/soF6vd/AqFE9yc3W7
      zRYf2mvrqzmhbdtkc1eJmT98n2UZR0dH6MZKFtoVEbTS/j6J+mP9QoJaFf62HS+77fl2PWPX
      d7ehfd+BtbZm7JjC6m2MwRhDkiRbcxnG3dZv10LmnEMrvbE7aK1r9eem5wnztGvBvdUOENSQ
      XXpjG7XptW0Sf5O+GP4OzNV27U16e/xd84XF1/T7fYqiYD6fb05kJMBaa4z1ujASvlp/P1/M
      CZ80e+lSD/ahfe2cfWifNrpW06DuNG2xrvfYptJ1Pb+IgNtUBbvspja6aV5vtQMkSYLW+rVX
      7jadedeAm9+1rYJNNaleeRvXxr+Px+POPsNOACBKIapatRrXKVEoUQiCiKrnpyxLppMpeZ53
      PlPXjtX2zL9vukkVCrwR7/LxNbtstS6bRytFvz+oF6o2I7f53mHTruiig3eA0Gmv1zvIDogp
      foCdxs8Og2bXFtv8u/mzee9NExW+12oTeWiOrfnirHNQvbBDdPZDmP62CNVtKFYrdjGz1vpg
      3uiyeQaDQT3/C2u3DO54XPH9TWHqmtNb7QBh23+diW9b7dsYuU3C4+tva0vsoyYFSpKkRjTa
      xtXVfvU0G59b5zAdOumutnZ9/m3bJW5LbTyxWq22oNquuW+qYLBGDbvoVgIQBvEmKAy4bUXv
      YrTYuImNxebWGMOlbVtyzEDN9pqq2vn5ORcXFxuQ8S6VrR43m2MX2l9UPJ599Np4fGEcN6mQ
      b4JuEnzYDUsfStZaJpMJAa5vY+Yb9fzq3ce+o0C3UoHeNAV0oWvSArM08edAuyCvJsKwpaZY
      y/X1dW3UB0gvrPjD4bDuN89zTk5O6Pf75Hlev+iyLGuHUFMIu9Q6i0Oc1IZzE9mI743H3sXk
      b0sVajN2m1QUBVmWddoLu6hNFXLOMZlMaqGPYddd9lJ8TZqmrYDLrQTAOXdr/b+LAkLUpb/H
      dBO606Vate028bOIrD2GeZ5jjEFrXTuxApP1ej16vV7NCMExuO84LQ7lhNIYryaJoBroYpfg
      tL3Em/p7kxTDnF0oYG0zRd71fXamXQIeqz9dc6O1bhVMpTwosVwu6zYC3VoAQmNvisKDtzlV
      4t936twdu0CgtnvjNtt2ievra8ALz2AwYDgcAl5AAtMvFoutVTru0+Fw1uFwCJFaFNCKDgOw
      a+xtht0h0OCboGZIRJOKomhVOb4JiuejbQcpy7JzN7qVDbBcLSnM4dtbGzUH3GT4pu5+k57b
      pe83+4qpa0UJO0JY/VerFfP5nACNFkVBWZatMTvOOaxzWFfZJ3jvMawZvgv2u2mM8Rw0f38b
      FMJgdjF4HFrxJsfVpmbehPSE65rtwC0EwDnHYrEgae7Zt6R45Y4HFn8P+ztqYqbqwqJvGk+X
      QRl/LiIcHR3V6lCzL2st1hgfL+QcmxEt8YA2vcM3je1tQZ43USwEXTtrbLMFJG0X7YPMNee4
      LMtW1Tb83fYvfq8H7VFB310t19DUvvrdLmquuAG66kJKdk3QLqNo1z1NFSJ+GXF/q9WqHttw
      OKTf79Pr9QBqw9gbtl7Fsc5tIUExeQGxOLcfjLsLEg3jfhtC4pyrVaCge+9SVw8xiG/iqSZK
      6HdYhxZdv7cAqjQXrWa7BwlAWZZMp1OU7oYUX4fiLbMLZWiuAF3fNx82XtG7oLR9tuyyLJlM
      JvV1/X6/tg/KsvTGobW4sCqx3+5lrFnHFd2CYhvqbe8UIt4v1GTyOHZon7CZNnh1F6jRph7H
      ghhHIYfxNHnmIAHQWpOm6Vas/JumfdWeNiaPP+9aSdrab1N32vqPJ3A6nTKbzRARBoNB3Z9W
      Cqd1tbLfHNoR7iuNQTdCvQ+hXcb8N0kBPo7zBgIdyiO7UK4mbewAEZPHqF+4xljj353bFLSD
      BCDo1YcGwd2GDhGCQ3aj5qR16a9dKlAbTOucq9GiEAejRHD4cGkn1bPQLZAOVxnOIC3q0D5C
      8bYZP+439B2jQ2FX2Hc8uwCOfdG9oJ4GVXq9EFYgRGMoBwvAYDDAuTfvB+iitlX9puvaqAtJ
      ineKtkjVQwQxnty2NusVSUktDNZajLX45oUKLtpW74S9VKS2OTpkVb0tBedhPO5DdrLmXB+C
      9MT3NRNw1v1X7xmH/5+/5mABCJGRs9mMoii+ERUoUJtRGv6Of8bX7KKmELVP1Pra8F2XYd1c
      eZpjbTJAHEtffy6CcYFpHKH5NiYOfewz520qXdu43zQFlWdXhtlNtK/gtO0YTS1Fa+1Rtorp
      lVKIrhYabgGDiviYivF4/Na22uaK3fXQ+4S/dt3f9l14EWFVafv3us+kxCfVhP4cHjlqa9tY
      sxdzNOeqS4DfNIVdIKiBXSHgbfc1F7fmgrfPzh5oK500fqdKNnbSWwlACA84OjrikIT6N0VB
      dYiD4PY1tppwZ/PzZttdu00YR/j70MXAOrvF6Ov+thnXq1DbociH2kD7fH9bEpE6fORQ2LP5
      HG0LTZe91tZOEES/oKz9BMJmgvxrhUP3ej2Oj4/3WnnfJB3CbF3GZJcQxNS1Ct2E7OzLYGmS
      kKRJyB2LEmraBSr+pGvX+iYpoIBd7/s2IEmbqti28ITPmtBn2wIVSCk/n80KIvHPWwdrBCFQ
      SpGmKavV6rZN1YNtDu6m/uOfTTKmALeOv4nWidZ22tpq6uPNl9T2+z7kdxlX21DOOV4ulpz2
      e6Ra1yETzXHGzNDEuA/tv/k8N1FwdnUFwwUj/9BkmOb8x17dtoWqKRDhs7aFoFYzA7SstheW
      145WEhHG4zHGmFuFv8aDDe11PVD8/fb9kR6JkC8mGLPWQS2CPZBXsmxArzfaGlu8hTZf2D7k
      nKuEc/1MR72Mp7MFx72MYZayyAsQSJQiVar2D9T3w8Zqe6gwHGoUx8ze5oAMPoBDK340xxJ/
      1vVMe4MAso5J6so8fCPhelmWcXp6ytXV1RtJk9xlpHZRWeas5ped3yu84X+IDOT5gqJYMRwe
      o3V648S3oUltJCLQuK6nNaMs5XK54mq52hhnphX3x6PWvm5TZubQ8TapjTED8nObRbBroYsF
      veu75ljiv7OsR75ate4iddsHj7aFRIQ0TTk7O6vjYm5LN72ULia86TV6njv8ZTtnmc0uyfP5
      Dddtj6srKrV9fMIo9etRs6XcWPKGXh3318Ygu/5u0qFqVPD8xnTbLLBdEHQ8f0HD6OqnuQMP
      h0PSSvdv253D328sYDvYBMfHx1xeXt5qJ7CmxJqi4uaAAPjfoZ3JgyLhbihQBaDEHawGBVou
      54AiTferiRQjEk2jMFaB6hdsLeWOwc3zgl4UeRn7Gg6xmd6Uf6B5bWDMm/IEuqi5k8Xth8jT
      cE34vQ0lineNGIbtMrLfaMZC2AkuLi6YzWZ10Ni+ZE1OvpoedI+rhWMbwdmSeg7XleOeVqsp
      aZoRRPGmnWrXbiZq7Ywx1vJkOsNat6UaBZrmBeN+j15Dl23CoW3q477o1U3PFFNT7QqMH2LF
      9qWu/sL8xTZO+Bmg6uZzNdXotgoS8ffwDeUEK6UYj8c455jNZmsprQyTNTWY9jX6DGhP3bLI
      1mehx9v24ye1IE231bxdk9xkzKA+WOf9DYvS+J1pl0AB81VOFuVOt+0Cu9SffQRhX2pjchGf
      H50kSR0weSgF5o7bbHumLh+Nc24Dqm1b+eM2v7GcNRGfMKK15vr6mjJfHLy672i9+rlm8Cqc
      bB3w5DZ3hfDwWhwgeyehNGm5nKJ1ugHbdumksBmR2GQIJaHQVlk/w/oJt9ucFyXHzqE7Xuq+
      qlDXdbeBRwPFQW9lWdLr9Vqh8Vho28YS2xc37Q5tzxQctHEF8wDbxs7SutDCwU96AIkI/X6P
      Mp+RryascZhd//ah5rWyIQj17y36rmF/w7S1Z2cpisXWyhKjMs2YnV2MlRvDq/kyUuS6x1Za
      u+HWj/s/hHZBtrdxrIV72hjspvva+jzEpml+Fgpp5UVe7wa9Xq8ucgBeyN6KAAAopTk5PX8t
      pruZAoOpyum1OZku+olzVfTl7cezWs0py7xT7bkpRS8edYA8hVghlNalwOF3gWZ/h1JTDfgm
      qNP2aaz8TRUt4PZhHneVv4z/KaVIs5TRaERZlmilGY/HZFnGbDar722+m29cAESEo+MzPvjo
      x4yPz77ZzsJERcVUvTs8+r7FYLoNWbsuk7JufjurLH5Jzfgiay3LJkNHu2H4L6aX8wV52Q2J
      NulN6Ps3URtD3saYbmZs7dqNmgKUpimjofeV9Ho9Tk9PAcijkjfxeAO9lSAeEaHXH3Dv/gec
      nt17C7FDmztALQgiu+zMg2ixmNRCEPppVmuLg/WaW7xzjpfzxZYtItF/66dZC4LFMe2Istxl
      iHdd/6Z2gRivD8bwvvfAJvPvI0xhQQkl2Ufj9fkOYYdZLpeYG8bxVqPYlNJc3H3Ig0ff/8a2
      31rdqV98lB5ZqRaqY0IPpdVqjjFl6zbd1IubO8OyLJnl276SmNmbghA+awpN20rZ3Jm6qMlg
      txUKYwxFUdRMPJlMmM/nrX23wcNNG6ppT+0iEfF1l6I5LgrvT7rped56aUQRYTAcc+feBzx/
      +vkb36K3YU4PvVq3qU40EYhDnEqBimJJUSwBIUlSBoPj1vbXu4DFlitsuaQsCxIyysYaFGyY
      Nv9GGFlelhhrfe5xZHTui/k3aZctE+PuocJa3H74Pqz8vV5vw8i8iWLn1ussitfX1zUCVJQF
      y9WyFVMJwhUM4t9LbdBgF8yml8xnhznL9m0/kAMkWJnRp9JiaLbp9PuRoyxzrDVovRl662xZ
      M72NgvM0MBS4dtvnsylRWGdr5m/uAitj+PzymkcnRwjOw6nSnYm2D7VdH3tdY+y9bbfraqON
      ug5JKcvyVvklscr16vKVH2fkrGwzvL9xP8BNpJTi9Pw+q9USU775/GJXM88aBdokWzHabvXg
      kJV0tZoxGBxhyrxi+hXO3i5Cdkv1iZgl7BJFaci0qhPqmwzV9fc+1LwnxvibBa5EpD5ccFco
      RPi8eWhi0OVDRtkh4wzXF0VR70LNGqFtPpu3hgLtosFgxMWdR99Y+w6HZYd3QbbRgQLBoGoB
      OoRMmbOaPqWYv8TksxuYXyilfbVrW8WDTry+poJQW4zs0MbrqpdthnsM88ZjC2MtisIjMqMR
      o5FHZeLanM65OqgttBWqa99GBeqKQG2qg11+ht+rAIgI46MT+v3hN9D6Hi/fWZSAVoJWPhLB
      OCF3sEJ5/bzjQLZWvblq8yaykrCQAQvbXV5yF/Yd/l6aki8mM2ZF2Vr06XUorKRhLE2UZheF
      mKAY04/HHVbk0N5tDltp+gluEvimb+GtOcJuIhHh7OLBG0eFBP9wuzyr4D27rmJaE9kFzjkK
      BzmqNUanzWjT7MH8KEonaEzdbJfOHvTvOCx4AxVxXuhW5XYoRVtbhxrGIQUy1PUMv99EMaMF
      nX5X33E/XXwQ7g8nlKZpytHRUb2jBDg0/GtbEGJBCe19KwRgODri6OQC+CYcN/u153VryNQm
      TOrRo/Zp2haC3X1Z9Br1cZae+HpAXX6Cpm7fjos7+kmyIbi7nvE28xv7UfalPM83wpFv6jsU
      WmgjpRT9fp8kScjzvNbxp9Mpy+VyAzJtwqZt9lAsGN+KE2JEhIs7D8hXSxbzyWtDYhttVz/3
      ee2pVCe3AKvoBgMoFDObEsxrJY6BFBuxOTevJpZ4yjMKhISVaGxLOHcYfXM+Qipk+GyaF8zy
      gjujwdZBG78PitWeGEq9LWmt68C6ALk657bObQtlY5pjiReQ5ji+FQIA3kl2dHzGajl7o7os
      7C8E/lRHRe42vQmlg9/mJyxtzOKOM13wQTJBhMpsXuvIbS+8KdICZFKisUxt2qJq+YSgertu
      1LsJn6+qk2YWRclRxyr6tikwXjguKc/zWiCgOzQhpuBXaO4kbRlpZVn6HVPWp3nG93T19XtX
      gQKJCMcn5zz+6Eck1XlOr7NqhIgaiFn5ZnugdELpGhMIjHQTaRBemZSlW6cxxv2I0i39tfev
      sSSyfdBfYH7Hdt2jjSpz1c/ZWypXeRM131tRFK1G8E3Ga5qmG1Gc4f5Q8yem2kbaQ3PY2E33
      e6S3Q17iBxwdn9ef3VoInDcJjQsntXhP7E2tOZxXdYLOWH2e0oZtCzMjjMwrenaKdsEY9cVY
      kRjd8PBqF7W9tnUQ3zYSA9u5wIUxG0ewds3dm7ez2ttv3QV32jNrilGk+J6g9myt5EqR6Jt9
      CE0/wLdGBQokIgwGY66Tl762z+u05XzpQQv72sIkGAwagyYRy5XpcVWmLO32xGosZ1yjXIFy
      BVZSrB6BMxV8GoULIFjX/XJ6YjBOMG2iUH1UQ3dRrEwsEMY5jHMbL7XNu31byDH2T7TF6Fjn
      sNbUOno4+bKtz11jCKv7YrGonzvUHHqdQMo2L/+3agcINBwd8ejxJ4zGp/XqdxsSAGtR1qKc
      /6cjN3kbGacoHVybHi/smGdFr9b9T2XGx+opfXIUlh8nTziRdSiHuILUzNB2BdaA21Rr9A6+
      01jGKqcnLVh79PhNVGOTIYTla9RmaqMAM8ZM3BW7I0ROvMiAP1SdDYF14HX71WpVe3pvW31i
      Y5zfhlCIXSTiw6fv3nsMzjGf+dr7h7j0xeOL9e8b3j9nMaLr2Pu4tbIyZwsHfTEcJ46FUXwk
      X/OQJwjwQfIcQ4JqrNeCFwJxBVpycj3GoXCiKpSn2pE6eEGAvhQoEhYNO6TOmmG7BEnYCQRY
      5iUn2+FFe9EavQmj6VZngiHaFWNTn4lwy90ndlwlSVKHOruOd3pb+lYKAIT4kowHj77Hq5dP
      efXiSc0AbcnuHY3UVzUnbJ03tnZ+iQilWxtXSyuMVcGJMqRoqtRdBIdutQnC94ArUa4kV4Ot
      52LHixOgJyVaNHO7DY/CNqYe69N5S6JOFxlTUBQrtEqw1rBaTbHWAEKS9uj1RojoKu/B70zW
      GvKVPxWnPxiTZcNW9UYpRZZmOw+xa6Omod+Wz7sP44fo1a62w+/fWgEIpJTi7PweZVkwuXqx
      09vZRk4Eadk52lop0RSRAPTFYBycMOXcPluPCXaw/5oSM2NhNZL0UISXZ0mUxniIp/NpEgxD
      5Tw82vVszm29aOd8Ia1MCyIK5ywi2+cSLGaXFPkiOptgo2WKfEGRLzwY4GM8thhvPrsiSXob
      EbAx6cTXCe06PmnXc8X6/m1g8Zs8yn8wAgD+Ye7cfUjWGzC5fM4qXxx0fywEEJQeqX8LEOaT
      ol8jNapKn3HO8YIjlmjO5JKBndArnqKKKbPRD9gFrZZo/t7e5yM3oS/rGjWCJRFAKQrT/XK9
      XVAydwkaS+HCuLdXwbArJFqxWlxR2DxMHoPhKWk2qJlitZiQr3yebDOHenvy2ldd39Ym+Nsk
      U6VudlWI6KLXKfwbj2+fNv5gBEDrhNPTC0ajIyaTS2aTS/LVTYKwdmg5qnRI5xlbCPH2Xrku
      0QyU4UgteWW8metbcAxZ4kTzJY/4ePlvOJv/AhFFVl5xffwnGGkvB1miq+C6pBaAWJd3AaWK
      HF2ekcOI/U5wJJ7RrAgzm/hCv43D4AL1KBFbrLtxjuX8CqU0OslYzv3Kv56h/fbU7hW14wa3
      vdreRMG7C92rfhzSEP8dmL3VHmnRAL7VRnAXBbvg/PweZ2d3uHz5jJcvvqZ7FYo+r3ZyERW9
      8nUKeiqWc+UZ476eMrGagVsxYoZ2ORbNM32f6/5H3F38AnDockJSXEN2sYHxO8CQ8JW7g3HC
      tc04Vsu6R+skcCciHh2yzofuKSUY62rGir0RCkdPLAu3mZUVKBGHtgW+eRd5lh3z6YtaJTqM
      Nr3iu6jNUA7qzL4r+k32S+xNjqkJDLT11RQQ+AMTAIglXnN2cZ806/H0yW93TO7mC4xTDV2k
      DK3bdmhX8sA+r2E9AI3h1F1ymd5l2X9MUk4RV/BSXSByxJAlOMMLTvnKnrMg8z0JXJuUieox
      kJxEqnRHF/cJSizWCU2NqPlUqRgMQt5AiRSOgZT+eWRbPfJ0IPOL4qbw7pboDZB1WXKA+Xxe
      n6fsnKtDG5pOqSAksfrSXMXb6od27TS7BC608wcnADGJCOOjU5ROePb17yiL7WoJSvmjhbYp
      KAnVHhDj3KJxKkNsXFzVMbQTVirjavwTjD4mK16ykFOcHrGiALPiU/NgA7kRfIDdZ/mYO8mS
      e3ru1a/o5a2FwI9pVwFfD5WWGJdugLB9ZZEqvwHnWjiz6/nb7YDgzT7UURQM1/intbZ2aoVT
      RpsMXj+fyJZgwKYa04bm7ENtMUF/0AIA/kFGoyP6H/+YL373a/LVcmOSNp02kQJOAECrz8Ok
      4xmiVCNQA5wN+neCwzIyM0QlOJUwTe/SdwUFlifmmIlpn87Qz/Oyz5HKGaluD7dIlfJ4gxCM
      VMGKlFXDQ62EvSBi5QzivJHqRG1kpwWvtZL9mKvtVJeA+nj7bR3qHP4O0axtnur497ZdYgvS
      fg2D+Q9eAAIppRmNTshXy81JBALTKyziTMXM67j8YCxuwqQCqNqh4xAKyZjpPpkYFIpCKbRV
      pFJUqkJV8jxiwLEq+DC5Jneaic0YqhYANZJLwTOxueF9CtCnIFGK0ilv2Etbqn/X/S66trn6
      b/+2D+1yVAZMPwjFrlW+zdN8SChFF7WVVP/OCICIcHx6wXR6SZ4v11/U71BwTkA0ypU40QgO
      yxojdw5EVWwhCqlyesWVHBdfo92SxOU4B7/u/xMyKVk5DZLRVyUGxdyup1QLfJjOSHAkUjJU
      5Qbbrcce1JDDKakiSePHbbJGK7PsWjFd2EluR10H5TXDGdrGFdsAu+hQhKlJtdp5q7u/pZQk
      KQ8efb8KwmpUV3MOi/jQBFS9/W+QrOXFeWkgc0tO8s/omUsSu2Suz3iRfa92mClxOGtIxTGS
      nEw88uHRHpi6tNGFW3cW/t/5SNWwKseG+aFkWgLubmQSZ0kb9s4h4hh7okPEZhsiFD4PwtHm
      W2j+ax3uazJ/fO93SgBEhCzrkWX9DWRHi0WLJaFEuYKQuOLVnyjW3DmUNWgs2pX0zDVHq39A
      2/WOMlMnTPQZRjQluu4nxZBpeJAsuEhzUvHq0KzFLoihzZjWqx97GLHt5KA1fGKjfxGcWo/L
      C9y68nTX+Lo67FJpti6tni+c29vMCWgmuHcZu4cG1+2i75QAgH8BDx59DxWMrkrv9yv+9qR5
      h5hFuYJx8SVH+acM8idk5Suv0mSPNpgx3iGWNgGcR16AgRScqCVnasUHyZRH6bx1JY1X+E1f
      amX8OoeW/ZI72si4sI9sUlPH9v3fdq/ZpmD87joey7E+sTHYBXFViC4osw3BuQ01d5bvnAAA
      JGnGeHy6tyqR2hmj4iuUXXjmswuUK9F2QaEGzNKHUMfTeJY+VisuuOTh8m/XaErV41ByjlTO
      hZrzMGk/FCRSgKpV21M47lVVuv1t3/V2XoGArNElweEkwcmbNQNvZE4HaZJupXcGYWirOuGc
      u3UeQJsqFX/2nRQAEeHs4j6Jcoi7KQDL0SsvUS5atQIyJAniCowasEzv4VSCFkcmllQsojNO
      ii/oWx9Xc7L6LXfnf0Nm4vDt7RLn1Shp7ki25Uot+694m+7/xuru1n6CwPwlbyZ/OKgkNx3Z
      GlduaMvq2mUY71J5diFEXfd+Z/wAXaR1gugUOrLK6hXAGRQt14SVuBKMEo3Rd1GS0MP40IfK
      6fR4+Tc86f0x91e/QtsFiZnzavBjFvoMnK8FZESTian1bIdPvlENg7P2TAQjTSpcvkNF2Biy
      awqUoEMYhVsxKJ4hojHpMXPGa6THSYCiDiYX9ZumaWeVtpDfe1DbEfPuG+Idx0c5HCJqpyr5
      ndwBAjk0qGRrZdmcyAq5j5AHrxpsT5pFYStVKBWDEsWzo/8YjeHj+c/QzhvLmbnm7uyvyeyc
      ucuYuJS51RQkIHVgtG+zgdp4BKkaJ94wb4Y27P388W0OembCePkplEs0lsxMSO28Dg68He3W
      zcOBdXmetxq3t6U2xChm/nAA4U64l+/wDlCWOaKE87sf8OrpZ8DaY1ivJs6RlddsuH4cGD3A
      VJ5Rt2GuCtrmWJ1iJcE4YarPOJYeiZvhRLFKjrjMPmahjsE58qDtCyysIlGm0S44JxtMHmP5
      zoUy6AdH8lQGduVhUAnaLbEqIzETlF35b0VIqutW6cODd4HAX3EB2kDBH3BIPH9bsk/8s/l7
      2z2h74BQ7aLvrAB4Z4siSTLSbLAOAZY12p7gIdFlcpfUTkjsEsSv9OAruS2SU8XgWLMAACAA
      SURBVHwxc4tyJUmwFZxXMESEafaYF/0fsVDHlJLUTGFQSLTCO6rS5zhsFMLgWwpXBPI2glK+
      gnWCxQKlrIPM6vCOYNgKiLPEGFPY4p1oJr3vM8q/pFQjjOqR2hkVLkOphpU6FHXfGFGTlIgv
      +e4MkqTkq6LOKFNKkyT9LZXoUARnn+tb/Qnsp9LJYrFw/f4tk0i/xeSc48Wzrzg7v4vSCdev
      vubV8y8w+Ho9fheAEDgmzjIsnpLYGU5SZuk9cga4luK4SqgyvNbKzNIlG8ziVRmhaERtjpVB
      icNEEW8GRSq+MmnYndaYExUMu24vtg+aQpM08J/6WqUqh1toD7RboWyB0cNa6LdogwEFE/Wn
      3Hofa8bjDI4u6iScQwPW2mL6d10f/zyknwcPHnSUPv4OkIhwcfchqqoVc3x2n+OLx9QApFQg
      aeU1dqKZpfcp9BHiCo+idEyPdWus3QEz12ut+dOGxq+qkisBBbGiWUVCUr9w57whHn7Fpzhq
      cSTKx/63HPERwbU0dopK7YoYykiPQo+7mb8eh6vHo53fVVRjbjYYUIQk9YvqoTVF9/EEN/tt
      ixva93il76wAwLaH8vTsLlnW7zbERDFP7rFM7lDIYPv75uXOa9glPj4/hhVD33EpFBGhdMLK
      +Sgky3Zcf7jOiK8m4eOSvLA655AKzmx3dVV2QoT3A15LanleXwC+qJ2B+5I4h9jWCkZVf65S
      hTarR/ivtj268SreVTqxSxh2Qaf70HdaAJqklObew486k7gBEGGZnN7ogHIAziHOkVWOsNLi
      V/dYTcCQNLB84wTjFEV05dymbCqtERoUdH3WFaPbWLZmslq98jtMIQorClEKEaoa1Tm+DJdF
      KBp970e78Pf4m2YJlbZ/zaoP+4Y+NBe5uI99jO93SgAAsqzP0fHZzu1V8Iuu2mkCenLOMiRn
      LCV9ZRnJNjMpDGkoeIVXjVZO14FrIlJ5g7drkgaVPfgGgnGngOgE5PrFy8advkdNOCuhEptq
      B6kegNQsbhUS0fTQxkwadoBAzZ0gjLlNiNquu4li5t+Hwri/syhQG/mVwaJ27QAVeSHwerZp
      UVMASlFo58MVUilJ8UyZiKsqTMf6tyMVR9n1fkRYOE1fVYZsWNWQWoVZM7kXAttYJSGgQOun
      UM6SqRJdXNXGNA6sSgAhK688BKqO6ToNp3OOgjOxxQMsLW0FgWlDbQ5x8O267qa2RNYnWcI7
      JgDgePX8CWlvwHB0vF/FOedQmGp1buLPPn1SVxUmrHOUoihbVlPr1I1atqtsAi1r/TqoP3WL
      0RjjihK1wNQFgAOzO9L8GalbbSSOe63N+wisJCQup5TD0MA2A7RlmFuqTxu9ToBbPJ5dJCIM
      BgMGg0FdpuUdU4GE3mBMvlwwGp/Q6w+3jzVteUkCtNVoq18sXhXyntv22KM1uLPbE2rdesUH
      r4a5rhIhNHXgTTTJw6kl2i5bnymoQaUaUqr20i63IZFQHt7/HlIinXNkWbYXOnMbj/FN6lWS
      JAyHww2E6J0SABF/SPdqOcOUJfcffo/h6Lj12lbvYn1+5BqHVwFNjVbqhBYkY0+UxYEv5KVu
      UAtoxv37OHvX6Dezkwr/3yF0knEbI7geS2MX6A3GtTDGKk98fGlgwhAB2nU80iEUw59t768s
      S2azGfP5vA7ZfsdUIP8STs7v8fSrz+j1B4zGx0yuX+692kjFdr7coIMohKHNRb++z2P3pglR
      Nq5VSqF06tM2FbjImHSV0y606Mserm0MqHwXUXZZaqZb/WxES6Iwb2D1d84hSpFmA7Le2I9Q
      fHZYfK5B8Az3er2N41Ob9Doq0Zb/I0KXQnWK9Q77DlKS+BNovv7yU5IkYzA8OnjCnVsXjI1X
      T+e8V/ilHTB32cY9gqtyeKMQhQABVv+lqlK3xBfJ0lVx2K1EEdbOvPgbWxnNAKmZEpdggbVj
      alMIXl//Ho5PGZ3coz86A6U3jM2iKLbq+axWq84DtV+Xwk4AN9sF76QA9Acjzu88xBrDqxdP
      OD27d+u2ArK03nIdQ1akGKY2afWyCg4tkQIj3hwVpKo6HTmGROrstnV/QQ1rq+cTNglHZiad
      GHnNGOLRoNeh8fEZo+MLsqxfZ3eF0OiwwsfjCKpPr9erT5j/JmifXf2dFACA/sBv07PJJdaU
      jMYne7vfYfcWLcBdNaNPycS0C4G/rtKNRRglloG2dYiD4KJ4/dCqhM4RpLNygxNFYnOUa4+/
      39SPzd71f9qo1x/SH52yWq3qUuhKKYqi2GDAUAsoGMPW2vrgizZGtdZunPkbft+Hqfd1gsE7
      LACxo+bq1VNOzu6RZr1W11dbbErQx301IDbzB8TXozhRK66N5nnZ2yi/EkiJD8hLkpQ7p+cc
      JY6eW5C6Fdr4n4ldoJRBJT61RSIflzhbJ7zUXUMFw7arF00PqzjDoHh6UChETP3hmKJY6/HO
      uZrRg4qTZdmG8bvPqfaBiZv/4vMGuu47BD1654zgQKvlrP59MZ8yn15x9/6HfPXFb7AN3bRr
      Qk0wrvxFtafAY/OCFl/9OXfCM9PnfrJgo9amc4ho7p2dcX52jju/z2x6zfTyCeXiqnYcKVsi
      pCAVQhQw/orWVU6rXUVUfUqlHp6jdIZKUkQ0xWJCMXsWDcGBM40W9yedZJQtVbzC2LXWG0x7
      aGRo7GxrfvYm6B0WgKi0usCrF0/QScZodMzk+tWt2nR4+NKrLZ4plfh4/tIJC5cywDtgkiTB
      GMPDO3e5c3Zev9Sj41MGwzGXL58wv3riVYpEo3VGma9YKz1rlg191I/jHEsZkGZnnDz6M9LB
      Guot8yWXv/y/cFGqqHOQuBWIkLO/Myzr9UnSHqXZrv1vjGE4HNYHZATjO6hANx2WcWjwW/P7
      fXeCd1IA4kPYoPKHOseLp7/j7v0PKYqc5WK2dV8TVgtVgUIyu8Nh7BqdUVjuJnNWVnNtUyYm
      4fyox6M7d8iyFGddfQRQ3Eeapty59wGL8SkvnvyGolxydDTyaYWE8ove8eUqb+8mFuR/nyUX
      3M1G609d5T1QyYYAiCvprb6i6N2FA7zBx6d3fO615Fv6flCFQinEWG3ZhzG7GP0QGy1+X119
      vpM2wGI+oVjN67/XOLHl+dPPOT27x2B41Hn/+iV4tt8sRltFIjp/TKgGBqrkTOeUDl6VCf1e
      j0QnOxEQEWE4OuLe4x8jolhMXzAYjhFU5WSqoFG3eSpj1AJ37z2unULWFMy++GuufvnnuHLZ
      1iVWuo9jao5NKUVRegbXSki0Z7ieNqj8BZmbkSjHYDDYYP6yLFtLn7T1EZxjsT1wG/Vn167x
      zu0AzjmmlYqjkxRTltTarwNrDM+f/I7ecNyKv9cBadF3EqUe2qoPJwprDYn4LC6DYqxKhiYH
      7u893l5/wPm9j3nx5DcM+2NEJ5RmI/OAuoxLBIveufuQo6NTRIRyec3y6gnojOz0Q/LrL3Hl
      CgGfMJT0KVczeuUlefJg93gGI69yWYOIxjlL+fJXmHJJ/+Qhi+unmMKrl72jewzu/pjhcFij
      OQEhChTvgOE41kBBbQrG9CG1gTackDuE5p0TAGNKFrMJohS9/pDlfIq1m1tkWeaUk1femJQq
      NocbatNUPzU+b9c4H6ymMYhAJrmv+GyFsizJsqyzrSaNju8wm16xWky4uPiA58++xlmDUroO
      c3BIXcn67Pw+p6d36hdvi4VXQ8olg3s/ITt+iFlNUOmAdHiGdcLk03+FKRZkUqB6x2T9kT+U
      sA5jSDg5v4fojLIoPQLmfJySKZfYMmf+4rPNuS4WKBHmy2XNxL1eb304RVUrNOwKATlqMm9c
      a/TQHeCm6NB3TgDm02usNfSHY8bHZyRJxvXls+0LXVWOxFW/A8Hw3Ddowli/E2gFCSUimmEv
      20sFiEkpxd2H36/7T7M+OFgt5yid8OLZV5Vn2nF0dMb5+b0NRknHd5HeKaKqkL5hn974Xn2Y
      xuzJLyhXUwTHoHiCHvYYn31Mf3jEooqYHR6dsVrl2AB5VkxlzXbsa1A5BmcfsVytGA79UarX
      19cb3t/YEA6rf5PRYz0+FNjdNz8gpo1w8ui7d0oAnHNMJ5eANyCV0kyunqO0rlSh6joqVrO2
      xvTrb1y1qnT0oVxB5laIZJQoqLK/UhFSSgaD3ck4XaR1wovnX3H16lnlM3Zk/SEXdx9xcfch
      z55+gQhc3HmAiJDnObPZhLxYsVwuWC79LrAi5bPymL5Y/tMn/zvZoz9G9/r0zj5E94/J59cs
      ppeQfI7JzhgenTMcDplMJlv4e5poystPMWVe2wUxg0kyoMh9SfTBYFALQmBkpVQNkYbwiLYE
      GWADRn0dO6CJEL1TAmDKkuV8AsBiNmE0PiHNevT6I6ZVQNzWdrkRgLb+rEsIQpphzy3Iqk9w
      CaAQVzAcbB8svQ9NJ5dcvnrm7RQsWIOZTXha/pbHH/+IwWBUv9yvv/qM2XxO3ghDsNaSYLBF
      n3k+o/jV/4v71Z/T/+OfsDr/p8zns+rxHKvZS87OP/RIk3Mb0ZpJkpAqw/LFr8nnl3W/Iesr
      9FnOnqL79zDGkOd5rdMPh8P62KQABMQl07sQnDb7ax9qOjDje98pAQhRn0macXJ2l/HxKcPR
      EaYs6Q+GXF++YLmc0YwMiA/WCySV4Rl7gL1HOGWBZiAFYg1IVXXNGZyDrDc8eNxFkfP86ZfB
      41YJpc/vzfMlT7/+nNOzuyxmM16++ApnfVh0Ij4Jv7lq/jC7ImeJPP5jnBJK0bC6RCeOIjn2
      15ZLli9+Q3byAbiMLEtJtFAWK1bzS6bXX2JNCSrF2bVRGx/cvbz8nP5FhlFHFEXBcDis1Z4Q
      MxQfmlHPY7yLtHjgY0E7hFpzPb6rdYGa5Jzjd5/+B0xZ8OijH5H1+q164nw24eWzL1kt1zBp
      8DltxvdDa602pZk5H206Yl6FKjgSM0eAo4sPGN35PjpphxzLYunDoZWmLHJKU/Lki08xxhue
      xolPknEWV2UtK7cOM/AOuPCSfcUKV409lEDUrjpN0hkSSnClR7LMgmn6gMwt6JlrQFBpD9Ix
      TvVY5TlS9RHmInE5qpwAqg4KrKci6XH08CcY6ZPnOWmabsT+DIdDlstlHTTXjFpte4fh3jTd
      D7Ltut85XxfondgBnHNMrl5Q5EuG45NW5gfPJKPxMf3BiBfPvuD68nmA+n07EeYvGMT5BHiH
      qo9c0mbKSPosyZjLkJFboJ3PysLB7NmvWV5+wfDiY0Z3vr81jumLL1hOX9A/fsDVZEppDc6G
      GhAe//cH48VAqPLHr9ZVrUPOgSPBod2KVBwFodxj9TxSnS8mFSKVjei5Ao1BuRKjj1gxQC2n
      WFVgSardMXJ6mSnOlTiV1YZx/V3aR5Ihtijp9/t1qcSg7hhjSNO0DpsI8OhNKmLwCxy6C7Sp
      Tu+EAABk/SEPPvgEay3LxYx+pTO3kdaaO/c+QIni8uXT9RcOnHhEKLUeNfEQJMRxmaJ7VWI8
      9Ke/gvQYhcEpjbI5ejUh/+o5/dEJyfBio+/+6JTpi98yefE7rGQMzTUrNaZUvUr4KiQqWoWt
      gwJVlV8Jh2F730Sv8OcdawdO+jhRGMn8/RujBjHLKoyjZLj8nFn/Y1b6mFQN0K4kcUuM8oF9
      mpLMXq1jm1rOE5Z0wHyxrMc6GAzI87wWgDzP0VpvOAR3Ha4Ba+EIp0zua091eYPfCQEQEfr9
      w3RvpRQX9x4jonj14sn6iyrgPpcRmfPZVp4lbfWdBuePYxqLhWTE8at/S9m/x2r0IVogHd1j
      cP8/QqXRmJyjWM2ZvvoCk4zBFvTKK1IzoUh7pNZhJEFJQiZCicKwZmDnHIWDRNm6ap0S6Iuv
      a5qYGX3zNaU+YpHerYr/CoICHP3yFbka4RB65XOUWIb5F2g7Z5Y98nVOxRfpRfz5Z97G8TMg
      rqwP2yhlgGBxDnS16ofMsBgGdc5RFAVFUdTMPBwOyfN8A/+PkaL43jcRGPdOCMBtSUQ4vbjP
      dPKKIl8HfPlQ6ARDry6JLgi+Eoqt/LF+tZkPPsJk5yxlQJ8F2el9ju59D5Rf9fLlFKVTrLU8
      /e3fYssVNjnCqYwEw1z1KyjWIM4X3ipRGzUqNpjAWRQKIwrjHEb1EaUo7Dp4TmyB6FACXiGU
      jPLPSZIzZsl9MjP3aolbMSieoiko9TFFckKJIrETxlc/J1t+hc2Oa8VwOfiQ6/EfYauiwfnK
      cTpaM/xsNmv1rIfAwJCyeHR0xGKx8GEWLbnCzZisfd9lW5DcewG4gZRSjI/PefX8q43PxZVQ
      nTmsqkoQtTfYzlGSYiTDqh5LfcLSKUQ0aVFUzO+vddby/Mufk6R9bLn0qAoOJ1AGX4J4PX9B
      Wmvfpla81pUpfKql910ocRQIpfRJKFnKMU5K0D2cJP7cNFGARWyJOEsvf4aYlT8qqvZ/OHrF
      SzIzwxTPaq+4JAliliSLRc2Qq/S8Zv61B1lwhtr4bWPa4EMI8T6TyYTRyKuoQdfP8/ygMutd
      1LQD3gvADSQinJ7fw5qS66sXdYmSdfUfwUqCuLVH1G8EOUoJxmUY8a4ElfZxOqMsVt6bC2T9
      MUnWZ3H9zKexSLo2tF2Bkl6ddBOA2GCMx+EZtUDhk1xSCjSJFwhbokRRJCfgLNosfOyS1Vid
      +bucrxiXmcv62V3dozf6ISXUonC6Tzl6RDr7YmvOYgZbLWf0h6copepaPG1zrLXeEILpdHqj
      kfs654aFMb6T0aCHktaaO/c/4PHHP2YwGJG4JcqVDE8ekGRDoDpVZh1Th1UZuYTy6v5cMcFx
      /+H3auYHEKU4vviQwfgcJxpXVXdWWKwakrEktUuo0iRjSFZXyecikOBXf8H/rSpGrU+0Ka9B
      hFL1PGpVhUYrW/igNtG1Pl8/RERGMoweUOoRRvnxm94FNjvZOXfz2bTW4W8qfRJ2gkBdKk5w
      zN1W/4+N5/cCsCcFQ/rugw8INd7K1ZSzhz9CZwOcA6cSHMJKH7NQRziVoJwhdQZlPdb95Hd/
      x2r6fKPttD/m/IOf+AJS4g/2sM4zclZcMiqeQDjmNfJHHOVfcjf/NXfzT0kpKlTHIS4gkg6L
      opQMp/t4fV+wqoKBncXZAmdWTLMPKfRmjaRwen0lKlxnH/Gq/yMmvY/qa4rRhzjVjsmL+DpM
      wZjt9W4uv9I0dLvUnqBOHWIHtNF7ATiQ0t6QwdGFj4a0BiVwdv8T0t4IEIz0MJVmqQmJ7Y6E
      koG5RKa/Y/78770XtaIQz3/n8U84u3jIo49+xKMPf0ia9bEqY5nd47j8CuUMSekLXSVmxunq
      M8bFUwblSzIzJbMLEpujq2R4VRnkCBgHg/wJfXuNImetVAHOUUrGNHvMNH2MYx1wFqDS1EwZ
      558DUEifee+DSq/TFKOPNqDgOH0xSb0TrCgKFosFWZbduHLHeQBthitQ5we/rgC8M57gN0nO
      OVbzK5JsQJL6Vc2UOU9/97fMV0XtcEKg51aIKNI0JTNThmePKJ79HZKNGdz9Ednxg41263OC
      lWa1mPLidz/3zFs8IyueYedXpMVLf/jf8C4ojSXlevAJBo0jqDMKJ4KVjNL5Ar8ZSxxCZuf+
      9MuGd9vhyGWAOMvF6pdou6BUI5bJGaPyGde977NI1n6LhNw/pAOxK6zyRn/Q5UUUp+cPsQ0e
      DR7hm+Y4wKOB4vCIsDME2+FQstZy//79d8MT/KZJROiPTjc+00nG0d1PmH/9OcqUVY6uY8qI
      uU05RfHB+Sn9o3v0BkdMPv3XLL769z5UOaqjKbJe/bIkYfDbv2Dx+J9gdR9jxyTpDF2UqHyC
      syvK4+9jRViJ9ykMzSt/gJ9k3i5R2pc+FGHphlgnzKXH2F2RybpsSoBtE0pm+oSvhj9FnPNH
      Sglcpx8gKiGEADqEAn8yTqIsotb5DYE5s6y3xfxws7MrzEWzknSwI7rOGb4NvReAN0ij0RHf
      +94fMZ9P+eqr3+KcRfnDVZkuV6zyT8n6RyS9Y0YXH6JOf8Dy5T/Qv/ikNQzYvPyMdPKUmXNc
      pg/oG+E4XdDrT3ALR5mdU+oRTjQaD8mm5gptVxR67LH59C5FklFYfxZZ4QASrtQZA7cgI6fn
      QoqkkIs36i3BKPZUSgpVkg9Qn3Em4jCozUJfFdUhF7d0WGmtt3aBN8X4dXtvrKX3VMN54/Ex
      jx9/j+FwTCKOkRRYyXjm7vDqs39HMXtO+uDP/DZ/9SXOtldI0He+T/bJf8Hwq7+idIIkA1bZ
      fcrkmPnZn1KMHuNCkoxdkLgSdB8nmsT6tMSsfEVuFXOX1gdyaIGRlBjVoxBfC6mQIXN1Si7p
      RspPDLU65w/3M9bVxoHDYdy6LEtMg8EIXMFyfrl1YMa+8xmrNyJyY12gQ+n9DvANkIgwGh0x
      GIz48svPmE6vOZIViGbiTkkXC06PhWRwwtEn/6y7naSH/vBPWTmFtgXD8iXazpn3v8cqOaZn
      JiTlFcoZ+uYV88rB5cMxDMquWCUjxBmGCgZuRSEah5A4QyI+otSoQQWiqjobyHu712PZMDZl
      7R9wVfRpaYVU1iu9TlJOz+9R5CuuXj0lzYY+hfMWc9nMBwiRowEKfZ0d4b0AfIOklOLevUdY
      a1hUZVZKyZgbzSnrFxpeYFn48iJp5g1rVy4RDMP8CUOuQBTaFSR2gRMhMRMfZm1LEpmR2AVl
      WMElAWeZqHMPZdqSFZq+qhxZFcPnwEr8GcE1j1c/175gF0KgfPRQZeRuIjCbyn6aZoQS6cPR
      KTrZPwf6Jqrnqyzr4lu3FYL3AvANU5b1ePDgQyaTqyruJWU0Gre+MGMNs8kl53ce4mxJ+Q9/
      QfmL/4006ZM/+k8okiOUzbEOevkLBuXXFPoEKwlWfOWJdVSmwaLXR706MCIUaNIqdENh6QmU
      aIxzm97kmvk3Ka4uvRH733ic1XLOl7/7NXm+4vj07s74/SBQzWJZSZJsFNdtLhhxJtqhedZ1
      H7e66z0dRGmacX5+t/57dfU5JunhnK9S4VYThucfkWV9zGCEc458MWG+zHHDx6T9Pnl2jkUY
      Fl+jzBJcgVMZDsv14AeIM/TMVeUwA3AUakDJWqd3zjvGRKnq3IEI649VjTi0G/zSH9kBTUas
      wNeNz51z5Lk3rq2TnZXglFL0er2amTfnbg2ZtpU6adoJh9J7AXgLtIG1W8vyq7/Grq4p0nNQ
      GYkrUMtn9D/6LxmOjj0T6ZR8/Bg9uoNISW9xhc1nGNVDGX/Cu1UJSuBk+Wum6SPm+nydmO58
      bvLYXVHQZ0nlhbUGK7ZiaK/wV7ZxpxoRM7XF4ky88vsaqCFX4TaaSMgPblJAgJIkaYVOnXN1
      Qs0htIEqHT7c93Qbcs4x//o/cPnpX2KLHKeHJC5HuwKwLCdPcasrYO3oWa1WLApYzS9JNRzd
      /yFJNsKJokjPKZJzLClp/pLTxd9VbVX9icaQkLqcgb1m7KaoOFlSFIhGxAc67KK4okLdPp75
      N89APowRb2LcMA9hlY93qdfxAH/Ho0HX+bDfNlpOX1AsJ6BHYC02GZGW14gzZPPPkcVz6HsH
      W29wxOMf/JTF9CWzl4J78e8oL39Jooc4s/B1PBG0zTHZKQ5hYF4yVw+2ji0VIHMLFCUrOQbn
      sFWQns8IcHsXR1f4UGuF9wFUGTIHz0VIjgkrfBsFlSioR2EniivFtQlCs7bQLvoOCgBVEvjv
      exSbJCJI75hyVWAkZeBe0l99xTy952NtkhE2n9aZviKCTlLGp/cZHd/BnZ1Rvvx75j/7P3F3
      /pjkwyOvRpHgkhPA+fBpV2Bsu8HpgyZyXHXEdgie0xjiYosxVVE9PqZJqIxsjyP584r3mehN
      b24TQerK7/UBiD5MJz5gIxTfbQucC7tGiBgN7cZnFcTOte+gANxOD30bpLIR8AKNwZFQ6BGl
      HqKdL5+YX39B/84/QvQmA4vSyNkPMWqE/WmKHhyTuAXz5ZxF/2OMPmJcPKFfvEKc4zp9TLs6
      onBOKv61OFXVK6IkFMHzBjH1aZhbU1lP7iGTXHmPo/InsUq1K8E93JOm6YaBHDN/SLSP24yF
      JA6uCznJ71g49OtFDL4pypKExK1IyyvEGSbpQ6yk3mGV3cPOnmG+/NcbJ0PGpHtHzGTI6uVv
      sM9/jnIlRXJMrkdM0/tYlSFJtl6tRapEFk/iCjI79YFwANaAczi8MZ2KP80+wfoT5xshx5sh
      yAcIQHV/XPezLbqz+3bPuLu+j38Pu0FQs5bLJUVRtOYWvyMC8O0gnfVR5RSjh+T6CCs+Tt5I
      glEZHH+Mnb+gS2DT3pDTtGA4/ww9+xzrBO1KTlefovHJ8MnkU07Lz7lY/MIfktdoK5wa6Uu5
      iP+HoJyp1JvN0OMYQo1b2f6smwJTBvWl+flN3lwRf2ZC13nCwRGWZVntb3AtQtdG30EVqI3W
      L+xNBlIdSjobY7WP2iz0wH8ognVwlH9O9vC/RZ3+Nxs4fEwiivH3/nNKN4PFU4rjP6OYL0h0
      jkNYDj6mSE+xeoBmjCiNi9c4UZSqTynrxBSfNxNW9JbKaaIiFzGVT2AtGPtSqP0TEJ2g2gSm
      jkOc2+4Nzq62nSDYCs1zh7uS5+O+3hEBAOcsNp+he90HX3zTpNIBpn/XlwPHcnT11xhJGS0/
      QycaffrJjUalqITkk/8RiikXZLhP/y1iV6AcVlLK7D44g0kzlKtOZ/nbn8HlM8oP/xT76McQ
      RSX4ahYuAs/iwzYqPwFUzrMQRnE75Cde8cNu0IQ3u6jtYL3AyG1GceivbXd5J1MiRdTvlfn9
      GISkyhwrSZmMfkQvf4YurnD5FFdsH8vU1Y5kRyRpxvmDH6BtztHi70nsskqESZiqcwpSUjND
      lhPcb/8W/a/+Ocn/8T+hvvi7SJ+3tSfYZ6aBUlI7f0ORLZxDVGDUrj1qP2pmeB2S2hgg07Ar
      lNUxTF2qTtx2zPjvnAB8W0hEcKKxgNV9Jsd/wnLwITYZYl/98uC2eif36zRugQAAHp5JREFU
      6d/9Iyb9T7wvoHhKr3jBefEP9M0lyhWMf/AR+uyOv2f2Cv2X/wvq6W+AwCB1iz48I6y2Ehxm
      cQWK9R7wuhSM1X2ZP6g4m8FvDlOBBlvOuj3afWdUoG8L6XSAE180d7z8jEV6l+nRP2Im0Msz
      Lg62U4TxnY/QX/w5YguUXWGtw/QuWCUX9MsXqLTA/dEfMf2rK1xRIKsZ+lc/w118iNMptarj
      AkLiYaQQEl1HDIVgObeZnP86dIjTKlwfHGClMXVljHUdonV2XQyPdtH7HeBtU6VbOGcp9NhH
      bKoE3TtmdPrwdkyV9EmzHtrMQGkkSdGLZ/SK56w+/5zFb/6eyc/+EhvF0+gvfkH6L/9npMpB
      dpWDKyQ8uggR2gyTDnp1+1BuU63hkOtFfEl1bz9sl37f0O/3yB57LwBvmYyxWOfj8efJhYc/
      JcEV09qYO5QEQXpVfR5bAoLJjj2/imP6878DQPX6qOGIo5/+Y87/6/+MdPUC/Yu/WLcjLWdN
      SqjyEILntqmL6cNnpsX729XGvlSaEhFV2yVtzB4LQ1f771Wgt0xlWXr/akAosKASWL7g8u//
      JeMHP2Fw5weH7QQiSDr2vzoDZkGZntBbfEkyWJL99EfQH6GOzgBQiUYETn76J7z4F/8P5pOf
      wuA4UoHW5Nwm47dBik1qYkS2Cr1WWqGlOyssZtKbQpytsV6wnCXRSQ3VNscTjmGKP+/1enV0
      6fsd4C1SQC6c8wnqpfOYOragTE+RpA9IZ47wLpLxw/XvQL98Rdm7gwjoYYZyBUoLOl0nu4vW
      UBYkf/m/Qr4ZjrwZAbrJ9PExSF2rdkiV9NdXcCf7H210044Qr+xK+YC6tqSbsDMER1pIqawD
      6vYazXt6bbLWMJ1cUpSFZ7yKQjW5Ug2Y6wts79Sf5H6oKtTfPGeApAdJD5OcQrlCDYZVRegE
      o4dYSTGFRZ352kLJ3/6LvaDNgL13RWLCOsFmXVeULVXkpufb5xrBl1/XSteM3RZZGlb8sOrH
      zrL3KtBborIsefb15xvOGeecr+WvhmALLPDiyadMXn6BVoq+Mhw9/tP91CEXw4PCXB+BM0hv
      gCwzcCWUC2xyAg6sSlHjhNE/++94MfoTYNsH1/SkxgZnnCRzKLVldu26tusapRSlKVnlKwaD
      Aa7YTphvQq1N59h7AXhLZI0vaF6vgFBDjcb5AOVeeYV2C0p7RqEycjOHr39Frz9E9Y5xukeW
      tdfXVOPHuMEFJp+BzdFiWeojkuVLyPq48SOWvXtIcU1iFxg9Rps5EhgFiDX3wCTx8aSbP4E1
      ZnQr19g+EOiua0SENPEZYb4o8LqMYlt+MWzHBr0XgLdEaZahlaKwZm0lbgSdCcouUS5H2zni
      CqzqUXz5b9DTT5me/mMmox/ywQef0G8rMqsz3Ef/PS+ffUW6ekrpfHW4xdEJerSi52Y++X3w
      AUb6GAd3Zn/DcPU5i/QO8/T+eix7ITLVNa/pC9hXz4//brsuz/Na1WmLKYrtljis4r0N8JZI
      6uoMa1Rlw9AUxTK9g5UEbIFUdX0St0T6xzg9oJc/58X//c+Zf/rvW5lUnXyPdHDCKrlgJSMK
      l2D0gDw9ZZ7eI9dHYA1ic6zKmAx+iC0M/eIFypnaJwDtvt7aHRCHF/C6gRGbdsGhcGhMq9Wq
      DnfutE+iOCR4vwO8NSqLvD7qNFI0NqBHq3rkyRnarShVj1yGqP5HpNbX/Bk8+Sue/ez/Q738
      Jc79D/Tu/JDk+PFGP4OTB6ymL9FaU1qHQ4MIpcpQNq8rRmdmRvL1zyknX7E8+6eIzT0cS7LF
      /I51tkyTr0I06S41piyWpKr7UMJ96BCPsXOOft9Xpb5JmN4LwFsiUT6mRqKIyLZYe5se4QoF
      aHpuhVF9xotPfRWI579k/MknjD55iLz6BVY73NHD9e4CZINjlNJYFEqqQ+kc/khUSbGiERTa
      zBCdwOOfkNoZKzX2WWIx8zdz3Zu8VCeH7WbKfDXFmIIk6SFKoZPerYThECHIMn8S5q5EGngv
      AG+NkiRlODxiPp9AdZK7QM08ATc3VtDJ0Nf+sYUvO6iHmN4J8oNTjpjhQpjzy1+To8g++q/q
      fkSEARNMPqe0Qq5GlNKvVviUxMzIzIRZ9gh18n1WWlHokzrLt5O23QFVPNB+4dGmXGHKFaI0
      w/HNB2WEOYmfK/7sJiGYzWZ7Ccp7AXhLJCLcufeYVy+eoJTm+uol1tlap4hf8P/f3pk1SXZc
      9/13Mu9aVb3N9EzPDJYBiIUgBUi0FbTNkIKWpQiHnqwnhz6aXvTkR/tDyA8OOhyiZYEyBQIE
      sZBYZjA9vdZ2l8zjh7y36lZ1VXcPBiYadv0nOnrq7rcrT+ZZ/ucchyA2awTFc5a/QezOiVOl
      8jGJOyH0EajRJ7/E1CNEK7QcEr3116Tb9yHuU48OsaNjht7Pos+RnxC7c7anv8GZhFpynMRk
      7gSHwcV3F547lFlsX4JFIWjTLp9BZVfvKKfnJNkAOoGx5cjvZa7S6whBmydwlat2IwC/R8Rx
      wn7TeziOEw4Pv+x8Oe3oalyjYvC2R1Y9Ia6PSfwQtQmj5B6F3yYvv0J8iaHAP/57wFDHu0Su
      IDl4B4Dk1vdIz78kffSPnLotrD8l0/NQ06dp6qcak7ozjG968/oplaTURE2wyy8p/p2B2drz
      DcFvFY9o4XPzuyrHqHqSbN6S6TJ//0q6xTWEoM0iazvJrDp2IwC/Z7QVkrd39xkOT5lORos+
      9aa2p/dBH6/MgP3hPyDAKH81NKwwfYbZK3gi8vJz+m6CN2nIMxg/xe7MG3BLlKHTEwZ2gvFV
      GIUNJUDVUxHsg9Y4z/wpRi2/qN9oqkY06plfbQhcqmTIxf0CpBZ+2LML0eRvwiZYlQLZllJZ
      LrnYYuMG/ZYgIuR5UANWsSxbmWgpEtQTcAVWKxSoJMWLMIrvM+q9hot3EDFUn/wd/uzz+eBI
      BsQv/xTdeothuc/TJzHnQ4PTONCoTVgJxFi8iVH1xFTcNuc4ldBkz4NDmh+z8FNf9qOGaumn
      VEPpDcjcL3+daPClnKMrWKbOOeI4Xkmw26wA3yJsFNGNpi6gIcwpwmHvh0zyh3ib4SVGxWJc
      Ecof2gFDk1Bbx+3yI+Txu0yPPiF59c+wuy/h83scffoF/+s//Q3iKsrzU5xzvPZv/zWv/Pjt
      UJRLm1qjtjd7jm2Z8Mg/fxfGVSg8/PLY8c4tS2bXD/5uZPc60eLLsK4470YAvkVE0fqS4RBa
      UnsFb7c4Y0BGEcqaNOQDxBLrBPFl6BHgRsjWHXj6KfrP/xlvDL/+xPLBzz9CUeIsJ+4P0NGQ
      ww9/y4N33kSsgHhUBNHQ68vWQ25zxIHkPPY7XOXh+ToY1jB1kF3SM6M7sLuCsM4muI5RfCF4
      +OyPvsE3hTTrzfVXutUYgvIcddwrHqEgCTand3gbXIlp9QQvMYOzD1AfmlfX+29Re6WqSu69
      douDt17Fe0c5HlGNhqj3HP3uc372t/+FYjQFsRTRLqJ1uJNAnxHfj7/ix/ljcnl2evZVGESw
      c7n8L2CRnr0aV9EqVEOv4u41NivAtwhrI9Ksx2Q8XNhei6HSRiQ6QuAwpNURu+VvGSYvUNht
      euWX9J7+gqfZayRasV0Pcdke5f4fEJ18jNne582fvsCtOxHTYcEXv3nK1m6P27sRg5cPSLII
      oxWV9IkJVSmc7VGZHEeMxfFacsIvi9uXxwmeEZUPqtBlK8AynjcHWVUpimLBKN4IwLcIEaE/
      2FkUAAmJMr4JMgmhTmebhB75CdaN2Zl+2JRVnKJ5RswUb3vUokyj2xTbL5AMXiWrnoJJuPuH
      71CZLQ5+4ukNP6b8+EPiRHmS3CeiRrTiKHpATkHqzlAb0bJ8BqZgYCrO/TfX5qjw8OnQ8+b2
      3Bi+DFepOM8iHCLzphobAfiW0esNEBM8LR6hbLtVNMZoEAQzWwmO01fI3AlpfYoh5P8C3Co+
      gTpj2n9Ibfs4k4eWSFpRmx6xG5L4c2J3jCSKefGA+viIgTuhjnpUqpzJgJiaSBJQxUoNCtZV
      ZFScsygAX5cG3eKkVN4/9ThVXh4YtuL1Gvl1BOQ6x7XH/n9XGe6mIk4y+oNdvjo9W/QDyfxL
      daqhGYXWPBj/A7ahQujMfgCN+5jqHI/FNV1nnMkZJ30iNyKePCZmhClP0aiPZBnxndvUbowx
      hpiC1N5iSg7WYqkxCgaHorwWH1JVlhMfypXPowJfXwjGNYzrcKXMKlvPYBM8D5xzmxXgpkBE
      6G3toadni9u7dXjQ0HleBNEa6ydNjQaHtDOfjVDtYetzUI/DhE7vxuJMj8xbpls/oO4JIgbr
      p+yc/2+y0/fw6Q5V/oDt+JypGRCpR7F4FG9SrB9ixfC99JwPC+HUJ3yTniEj8KD3zfhjWjr0
      dVWijRfoBmDQ65OtyPSaVWNr6AY1lvP4XqdASTcvVyFKSHVEXj5GxeAkRjFUJscPDrDUjJMD
      ivg2ajMm/YdofgtTnDCNb1PbHokolcmoTILVElWhkoxaYmoiXk4mJKLfSB5Ai8SE6PBV6Gal
      PU/eQFcF2gjADYFbVx9f5iuBB75KX+NR/k7g+TeCsTAgfEW/+IykPsNLhMNgcKTFl8TVKf36
      qFMKXSjyF5nuvU3iR1gNpDlFUBWmdoeppBTRgImEatZGlNtRsfCIz1sosfRQNEyFNn93uY7Q
      qqSZrxsdbo+BjQp0Y7D6C+vOsPNOjCfRASaruDt9H5UU0enCWcZPuTX6BePsJSbxvcAklRrc
      Kc5lVNE2E7vLJN6nX38VmmFIaKbhiUjciMr2GGnc3ppD1wt+dKnZjwqeVGnoS7yGyvEs8Aqf
      jT1vbC82vF7l+fkmItML1eOe+2obfCPwumoFCMpOGyTrzmzH8Yt81vsXOJEF2mU3xdK4Kak7
      xlCjziFuSlydkJVfYSU0yjbqqU2fkb0zizI7iVAMVpTCGw6rlNIbBKUvNRY3WwXmPqvnG5hT
      t+jJuU5ZQ7hcIJb3bdigNxS1q1d+kYIsDizpbFdlFN3m0/5PuFV8xF7xCdB+6UIR71LaLYbx
      CxiUJDkjqZ4S+xE99xQkeItaE8NhydwphU1wkmCAVEuMsezJCERwtOxQwipQZ8xIos9lDii5
      UaraY41Z6Ea/Ctcl0F22emxUoBuElq++CguGpra/5l9uLQnD+ICd8guMlu1JxPU5x9n38SpE
      lIEKDXiTcZ6+AupQsaFRn8mJKHESKNWVCimemJrcHSO+QoDP5QFn2uOWnRAzb3b3ddBkPnCQ
      hWjwi3lYyLx61CvWzBvbtWhdl89DoW6xqQt0g1CtYSp2sSwg3c9ju8tp/iq3Jh+EmQ+ItGB3
      +hGF3SXyE7wEj5GXGOtGVDY0C/ES0fp0KpPTqlwOi7UZlbpAkVDPvj7hc/c9DqsdrDyf0iPA
      XiK8vgV0CgN0DdzIRhe2r/r8PIKwsQFuACbT6aX7uzPeaiYklPmLOJvPBwiQuFNiP0LwIWHG
      1VCNsFoS+TEqBi+2sSEEJ4ZYSxItKbyAK1EilAgvMbEo/zL6DXt2TNNX5rne22sobbj6nYNq
      eBWe1yjeCMC3DFVlUkwu3T/7/yVzbh3tcHbnLyjyl5stBt9QGhSDLY6IikO8rzmPHzCN9qiJ
      QryAqOkcb3DEjElIqRo1JQgPhM421lhet4++EW9Mapl1d1kH36wO1zWKnxUbAfiWoapMi+Lq
      Axtv40pjWQSvSm36nO/+mLqpCxrXx2T1ExClTG5T5C/g413y+ileIiqTMZUcQakldIqpJAox
      BhsSb5yJOWYHHw9C0V6EWlLMs2TCs1p4h1WIcMsKL5YxhshGGLl6iD6PMG4E4FuGiJAm12BZ
      rqk8Ms8nCPBYRttvoyb48K2fBHUHYZq/yDh7QG0HGK1Dow6vlGpRDRKW6JQIh/cu9BpQpVLF
      eaijbdRmJNbyejrkkmSu+WPrPJqtzEumK8rIwaNJEN5lmGvw/7v3WIdV1aIX7nPl1Tf4vwoR
      YW97d2HbjNywZrZflxzSGoVF9hJnt/6UKg0lTpL6BBFDLRmqIG6C+Loph1gHrhEN8xQhNuG+
      U40p1JKJo8JSKZSS4SRm21a8mg6brvRXD1IJBYSa95u/18cj+NXZxdIlXi+2RV133W7q5LNi
      4wW6AUiTZLF+ja7R9hWyJCVPsiaR3cx2eL+YW1ymB/hkl2TyGb3TdwEfqjxoYxCjxD7YHuId
      KsJUetTGhhwEEVx4lBAcU4NtOke22DMFDxPhk6K/tv7OhcF5YSUTjktl7IR+kyLdCouY1YK1
      7A1adc91+5axEYAbgDRJiWxEVVfrD2psABHBdL5gabYveFOaWVnJKQZvUNotdPIEfI0xFqFG
      XIlKhJeISCfgPZFMmLJDLUEgBbsgiMvUZxHYj6Y4hN+VVwtBW3qlvVb7DohwVik9+3xuza9z
      3kYAbgCstRzs3+HJ0SFFp5ZlbKPAEm1mQ0EwjT9/9mXr1ZFRzQ6gPEfclLb7o6hHtMZ0uDxG
      HYmf4GywSQxu5u6MdErITVvk6whwEE2o1fBFma2+f+vGveRvcFbB/Sy8x6gOnqvtZH5G3axw
      kbn8XZf3tdz/derURgBuCG7t7LG7tcPvHn3OydkpbdnBNE4bZuS87LfCTJUI2WJXzHwiaLID
      k2kYhLo4r3cR6ZRIMypSWhOxVz7iztn/xNYjvrz3VyjRBTXjQTQkl4rPqgG1h7kHfw2dYc7r
      mD+FhCSZd4/B43l9S7mTBQH8zbknEnh9+6LZelV1uNaFump12gjADUFbt/72zh6n52fBMPWO
      tjRh+wUG1WReSeIytMJiRCC9jZgIJk/AX1IxWZXMnRKZjFJyalL2T/6euDoCIC++ZJy9tDCY
      2pDYnpmyl04Yacqn1RZj11AX2oMuwbAKRviXE2iSxPjgzPPrs3Byazr0ImUrFrbiiwN/HUWi
      7Wm2Chsv0A1DnuVsDxqags6m+Yb6LzOCnM72r0dwPzaUAWMhvYX07wNXqBHqif2Y3J1z9+zn
      JPXxbN/26btYN25u0IxrBVQDuxRl2xS8nR3xdvokJPQzF9Z1hunUw/tncFh09ze5Ce37AL8+
      V/7xyFFc7SCaX0Xkgjt0VpT3+pfZ4PeBKIp4+OAl+nkfgKJqgmSqCzO/EcEaE8hjz5AYovE2
      svcDJD+4XAgQ0uopO6P3F1SmuD4ln3wWroWivrEppF0HwlNaX7HHGW9Ej+l4QC+B8LQUSt8K
      +DxmsPxOTuFwevHdLiuadeFum3yAmwtpBreIMC6nDV1AkIYq3Hp5gFl0eN3yv3JAiIXeAbL7
      JtK7h9gV6ZiqJMUTBL+Qb6AoW8N/5vbxzxgUn82Uk3D/xqRWj9USUccdOWXfjBZTe67w2Uvn
      3zp8MvQzVakbF1kbKfcXm4DDxga4kRARHty9R+0cdV1zcnoSIqMs6rmzHFl07RS7TvdVVTAp
      5HeDalQcQXEMPrQViqsTkumjcK9ww9mMHLkR0fhj8vGn5NkLHO39BDVxmP8VIj8N/QoaZuor
      0VOOyn7wKD1/AhkAu4nMPELdQZ8kCWVZLhjpSZKsLZG+EYAbijRJyZovt5flPDk8nM2Hy/p0
      +9mrxzBPJlkXSLoAEwVByPaDABRnxJPfYvxS9/ilGVnwZNPfsX2+xen2jxDRsEp5Rzfem+uU
      LVty6tKLST4r0Ir1uhXAoNzLgofHd1bDJE7IsgznPUU5z1jr9XqMx+MFwZhfa4MbiRnHR4Q4
      jtnZ3r5AgQipj7MTaFWR1mCOo/iZgkOKoCaFbJ/x/X/P6ODPQ9R4XWSacPvB8D22R+8T6RTr
      J3RLn7cP+ECOZ+bspTELVS4b/AC3UyG3HQMcSJKU3Z1dsixje3uLOIpBA9murmvSNMUY02km
      HrBZAb4DEBH6/T7T6ZSqqharIjQks5Y85r0PrZU6rMq2DuY63kz38yzaa2KKvT/CVqdkT3/e
      cCKWZs8mwCQoSX1E6e81Ls/F+v+qyj6n/LE54bxyJFrwoX2LCb2F63Uz3S7DYSlMz5R39iCx
      hjzP6eW9mb8/iRP2b99mMpkwGo+I4xhrLd57yrIkahqEwEYAvjMQEba2tjg5OZkN6FWJMu2A
      6xaIave1vXGXu6UsZFd11CkrlvH+n1Bl9+g9/R/Y4nBhXu5GV4tkvyNEvnNcoGuowp3qUx6W
      XwCQaMHPo3+z8MwAKldXmlNVhhV8cKr8YMdRFiXGGFJNSZsm4sYYer0eRVEwGo0oqzIUxa3d
      gl20UYG+Q0iShMFgMBvIwDw+0BlEM92/+WWtnfnBnXOLQaxWQJbHXJt7YCzV9pucPvxrxnd/
      iosGq5+tOGyyy8ws9oAqojV5+YhYp+T14ez4F9xH9AnxhMAHYrbCBJXrck/RbgJv7YRnr6qK
      8/NzRuPRwjEiQp7njCdj1CtVWc0mg01hrO8gRIRer0eWZcy7N+qspIqq4gkJ5SKC+sUCU8uD
      H0IwrRtQC9eVi94jkzC99ceMD/5spT3gXMWXcsBjucNXss9UevTLz4jdkMHkI3ZH/4TROdkv
      1pLvu1/OBG/B6dmqQWvUodTC3awZvB12qe90tHHOMS2mM52/VQeX1b+NAHzH0NoDWZZhWh6Q
      hspyIqFlaV3XeO8XqqwtV1prr9XMubNtRkwzGa8OKpWD15ju/igYzJ3B1Kue8PDsv1GrMNWY
      ymSM0pfIyi9BHUbr2T3bO5Ya0a2BCl1BWK8IvdyDg2yu3hkJ2WPeOUajEXVdc3xyzNHREUfH
      Rxfcrt3n3gjAdxBRFLG3u0eWd4UgfKld4teqVMMLn2UeeLqqHk840VANHuJtPtukqhhfsDf6
      FS+d/Yz98hN2Jh/iTEoR32FZv3ocv0olOb+N3giXXHavyuVWwO/GgAldJru5wt57xuMxdV0T
      xzEiBiNmQWW88Le85D4b3GBYa9nb3ePUnDIejWcDvjvwveosotw1jq21c9XAtyuIW7j2MmZG
      qiqu/xI+3sbUowvH3Bq9x17xMaKOw+jfhaZ+JkF0TsAzWvN32X9guOQFWr7XOswCgt0Idef5
      qqqiKqu1FSe62KwA32EYY9jZ3mFnZwfT8W/PhKAzKNrVoR34rZfIGIONgirSfu6iqz/PftyY
      0YO/pNj5Acj8vrPfqqCe/af/la2zXwCLzLU77nN6jNhLDZG5OPtfhVcGF89r39NaO1MBr4PN
      CvAdhzGGfr9PFEUcn54gTdCqGytojb9l9SaKIrIso6oqik7T6q6bdFltAiC7jXrP+N5fkAw/
      RnynqoWYljsRdH83Ruzcc6QmYXT/L/m+pkR5zKhW3j2sKDvjVVbM7F08mih3c51lxnXPq6qK
      uq7XUkAg2EvaCIhMJhPNstWZPBt8d6Cq1K5mPB4zHA0JaQQ+lBZp1KA8zynLkqqqyLKMnZ2d
      2WBrXYnOuQsCMGNOdkoTBnXKYUdfYMef0zv8702XyRDHxSagLkR/ky2MhBDb9O5PKXfeomsX
      nBSeXx3X+IUI8ApSW3ggUM9uIhdWgpXCugJePSjcv39fNivA/yNoqQ/bW9sM+gOmxZSiKAKt
      OU2J45g4joMO38mSahHHMYPBgLOzeaeaVhDage+cI4qijspjqHsPqHsPsNUJ2ck/he0o6gow
      ySJfQSxV/yHLRvFOIvyrg3hBdWtnfq9LRD8B1Cx4SFcxYNexYyF4umbEviv/sht8p9BmlvV7
      ffq9/sr962rlJElCr9djNBoFolknk6odVHVdY+3cAwNhRZjc+QnR5DF1dpf07L1QU8iXIE2R
      W4Ri70dox3vUfabZ7M7SeG+DZAsnLH5cDux1t19lU2wEYIMF5HmOc47JZHKReNegu621L3y8
      xfkr/xE1KfXgZdLT94iGnwRBcBXTgz+l2PvRs5HzrvAGdY/pOgC67uCrsPECbbCANtrceoxa
      dI3oVfEEEQGbISLUuz9k9NJfUe69A2Iodv+Q6fYfzNywV7o519znWd7hutisABtcgLWWPM/x
      3l/oXbCqRn/XfTrzx5sITfbw8Q7Tu38yY4cunwurOzuuCuatwrqV6brYCMAGK5FlGZPJhDiO
      58SxTpS5ncm77sYFVqcq0913KG/90cLgb9GqKl2PU9fAXs58W9bzV60i1xGYZWxUoA1WwhhD
      mqYzo7oNoC0PxpZn1OUbzfZHGWpToiha6ZdvXa7t8curzbrBvIoG3t23Ss1al4e8WQE2WIk2
      blAUxQWVZZWqcZle75wjaeqfVlXTqqkZpJfxdFYZuMv3Xd53FZZXic0KsMFatJHiFl2vT3db
      F13h6A7Oqqooy3J2bruqtKvMMhFvXXWH7v8vU3cuE84NHXqDayPP89lga4l0XVVo1U+LdWpH
      l6I9mUxm2y4b1F3P0KpjVhnQq+yIro0CGwHY4Aq0szTMB24cx7P9q1Iv22PnlAk/C6x1t7fH
      r0rUWYd1g3/Vvdehu39jA2xwJdrgGATKRFEUFzwxXTdo6zVa9gotq06rorbXFYRlrEz2WbEq
      LOP/ADDmo5lGb/SdAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
