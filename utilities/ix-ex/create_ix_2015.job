; ----------------------------------------------------------------------------------------------------------------
;
; create_ix_2015.job
;
; Working directory is M:\Development\Travel Model One\InternalExternal
;
; ----------------------------------------------------------------------------------------------------------------
FIRST_EXT_ZONE = 1455
run pgm=matrix

   ; Begin with Chuck's BAYCAST matrix
   mati = "M:\Development\Travel Model One\InternalExternal\ixDaily2006x4.may2208.mat"
   
   ; Write out a year-specific matrix
   mato = ixDaily2005.tpp, mo = 1-4, name = ix_daily_da, ix_daily_sr2, ix_daily_sr3, ix_daily_total
   
   ; Write out totals
   reco = ixDaily2005_totals.dbf, fields=EXT_ZONE(5.0), PROD(12.4), ATTR(12.4)
   
   ; summarize by external production and attraction zones - daily total
   ARRAY prod_tot=21, attr_tot=21

   jloop

      ; Default value is the 2006 value
      mw[1] = mi.1.IX_Daily_DA
      mw[2] = mi.1.IX_Daily_SR2
      mw[3] = mi.1.IX_Daily_SR3
   
      ; Apply gateway-specific adjustments based on chats with SJCOG, SACOG, and review of counts    
      ;   - I-505, Solano/Yolo
      if (i == 1460 || j == 1460)
      
         mw[1] = mi.1.IX_Daily_DA  * 1.020228
         mw[2] = mi.1.IX_Daily_SR2 * 1.020228
         mw[3] = mi.1.IX_Daily_SR3 * 1.020228
      
      endif
      
      ;   - I-80, Solano/Yolo
      if (i == 1462 || j == 1462)
      
         mw[1] = mi.1.IX_Daily_DA  * 1.242555
         mw[2] = mi.1.IX_Daily_SR2 * 1.242555
         mw[3] = mi.1.IX_Daily_SR3 * 1.242555
      
      endif
      
      ;   - CA 12, Solano/Sacramento
      if (i == 1463 || j == 1463)
      
         mw[1] = mi.1.IX_Daily_DA  * 0.848518
         mw[2] = mi.1.IX_Daily_SR2 * 0.848518
         mw[3] = mi.1.IX_Daily_SR3 * 0.848515
      
      endif
            
      ;   - CA 4, Contra Costa/San Joaquin
      if (i == 1465 || j == 1465)
      
         mw[1] = mi.1.IX_Daily_DA  * 1.673817
         mw[2] = mi.1.IX_Daily_SR2 * 1.673817
         mw[3] = mi.1.IX_Daily_SR3 * 1.673817
      
      endif
      
      ; Sum the working matrices to form the total
      mw[4] = mw[1] + mw[2] + mw[3]
      IF (J>1454) attr_tot[J-@FIRST_EXT_ZONE@] = attr_tot[J-@FIRST_EXT_ZONE@] + Mw[4]

   endjloop
   
   IF (I>1454) prod_tot[I-@FIRST_EXT_ZONE@] = prod_tot[I-@FIRST_EXT_ZONE@] + ROWSUM(4)

   ; write production/attraction totals to the log file and dbf
   IF (I==ZONES)
     LOOP EXT_ZONE = @FIRST_EXT_ZONE@,1475
       print LIST="For external zone ",EXT_ZONE, " production: ", prod_tot[EXT_ZONE-@FIRST_EXT_ZONE@], " attraction: ", attr_tot[EXT_ZONE-@FIRST_EXT_ZONE@]

       RO.EXT_ZONE = EXT_ZONE
       RO.PROD     = prod_tot[EXT_ZONE-@FIRST_EXT_ZONE@]
       RO.ATTR     = attr_tot[EXT_ZONE-@FIRST_EXT_ZONE@]
       write RECO=1
     ENDLOOP
   ENDIF

endrun

; Step 2: Create 2015 using targets
run pgm=matrix

   ; Begin with 2005 base year matrix established above
   mati = ixDaily2005.tpp
   
   ; Write out a year-specific matrix
   mato = ixDaily2015.tpp, mo = 1-4, name = ix_daily_da, ix_daily_sr2, ix_daily_sr3, ix_daily_total

   ; Write out totals
   reco = ixDaily2015_totals.dbf, fields=EXT_ZONE(5.0), PROD(12.4), ATTR(12.4)

   ; Also read the totals from 2005 calculated in previous step
   filei lookupi[1] = ixDaily2005_totals.dbf
   filei lookupi[2] = "X:\travel-model-one-master\utilities\ix-ex\totals_2015.dbf"

   lookup lookupi=1, name=totals_2005,
     lookup[1]=EXT_ZONE, result=PROD,  ; productions
     lookup[2]=EXT_ZONE, result=ATTR   ; attractions

   lookup lookupi=2, name=totals_2015,
     lookup[1]=EXT_ZONE, result=TOTAL_2015

   ; summarize by external production and attraction zones - daily total
   ARRAY factor=21, prod_tot=21, attr_tot=21

   IF (I==1)
     ; first, figure out desired daily total
     LOOP EXT_ZONE = @FIRST_EXT_ZONE@,1475
       prod_total_2005 = totals_2005(1,EXT_ZONE)
       attr_total_2005 = totals_2005(2,EXT_ZONE)

       ; this one is special - in 2005 it's combined into 1465, so undo
       IF (EXT_ZONE = 1464)
         prod_total_2005 = totals_2005(1,1465)
         attr_total_2005 = totals_2005(2,1465)
       ENDIF

       ; figure out 2015 desired total -- grow the non-commute share by the slope
       total_2005 = prod_total_2005 + attr_total_2005
       total_2015 = totals_2015(1,EXT_ZONE)

       if (total_2005 == 0)
         factor[EXT_ZONE-@FIRST_EXT_ZONE@] = 1.0
       else
         factor[EXT_ZONE-@FIRST_EXT_ZONE@] = total_2015/total_2005
       endif

       PRINT LIST="2005: For external zone ",EXT_ZONE, " prod_2005: ", prod_total_2005, " attr_2005: ", attr_total_2005, 
         " total_2005: ", total_2005, " total_2015: ", total_2015, " => factor: ",factor[EXT_ZONE-@FIRST_EXT_ZONE@]

     ENDLOOP
     ; however there are X/X trips between 1461 and 1462
     TOT_1461_1462 = MATVAL(1,1,1461,1462) + MATVAL(1,2,1461,1462) + MATVAL(1,3,1461,1462)
     TOT_1462_1461 = MATVAL(1,1,1462,1461) + MATVAL(1,2,1462,1461) + MATVAL(1,3,1462,1461)

     ; so if we scale those according to 1461, then 1462 will be short this much
     TOT_1461 = (TOT_1461_1462 + TOT_1462_1461) * factor[1461-@FIRST_EXT_ZONE@]
     TOT_1462 = (TOT_1461_1462 + TOT_1462_1461) * factor[1462-@FIRST_EXT_ZONE@]
     DIFF_1462 = TOT_1462 - TOT_1461

     PRINT LIST="XX trips for 1461-1462: ", TOT_1461_1462, " 1462-1461: ", TOT_1462_1461
     PRINT LIST="Using 1461 factor: ", TOT_1461, "; Using 1462 factor: ", TOT_1462, "; 1462 will be short by: ", DIFF_1462

     ; so make up for it by upping the 2015 target. Assuming two XX vals factor to TOT_1461, remove them from the calc
     total_2005 = totals_2005(1,1462) + totals_2005(2,1462)
     total_2015 = totals_2015(1,1462)

     factor[1462 - @FIRST_EXT_ZONE@] = (total_2015-TOT_1461)/(total_2005-TOT_1461_1462-TOT_1462_1461)
     PRINT LIST=" => Updating factor 1462 to ", factor[1462 - @FIRST_EXT_ZONE@] 

   ENDIF

   jloop
   
      ; Apply gateway-specific adjustment factors 
      ; (no X/X trips mean the gateways act independently, other than the pair we compensated for above)
      if (I=1464)
         mw[1] = MATVAL(1,1,1465,J) * factor[I-@FIRST_EXT_ZONE@]
         mw[2] = MATVAL(1,2,1465,J) * factor[I-@FIRST_EXT_ZONE@]
         mw[3] = MATVAL(1,3,1465,J) * factor[I-@FIRST_EXT_ZONE@]
      elseif (I >= @FIRST_EXT_ZONE@)
         ; 1461/1462 have XX trips -- use 1461 factor
         if ((I=1462) & (J=1461))
           mw[1] = mi.1.IX_Daily_DA  * factor[J-@FIRST_EXT_ZONE@]
           mw[2] = mi.1.IX_Daily_SR2 * factor[J-@FIRST_EXT_ZONE@]
           mw[3] = mi.1.IX_Daily_SR3 * factor[J-@FIRST_EXT_ZONE@]
         else
           mw[1] = mi.1.IX_Daily_DA  * factor[I-@FIRST_EXT_ZONE@]
           mw[2] = mi.1.IX_Daily_SR2 * factor[I-@FIRST_EXT_ZONE@]
           mw[3] = mi.1.IX_Daily_SR3 * factor[I-@FIRST_EXT_ZONE@]
         endif
      elseif (J=1464)
         mw[1] = MATVAL(1,1,I,1465) * factor[J-@FIRST_EXT_ZONE@]
         mw[2] = MATVAL(1,2,I,1465) * factor[J-@FIRST_EXT_ZONE@]
         mw[3] = MATVAL(1,3,I,1465) * factor[J-@FIRST_EXT_ZONE@]
      elseif (J >= @FIRST_EXT_ZONE@)
         mw[1] = mi.1.IX_Daily_DA  * factor[J-@FIRST_EXT_ZONE@]
         mw[2] = mi.1.IX_Daily_SR2 * factor[J-@FIRST_EXT_ZONE@]
         mw[3] = mi.1.IX_Daily_SR3 * factor[J-@FIRST_EXT_ZONE@]
      endif

      ; Sum the working matrices to form the total
      mw[4] = mw[1] + mw[2] + mw[3]
      IF (J>1454) attr_tot[J-@FIRST_EXT_ZONE@] = attr_tot[J-@FIRST_EXT_ZONE@] + Mw[4]

   endjloop
   
   IF (I>1454) prod_tot[I-@FIRST_EXT_ZONE@] = prod_tot[I-@FIRST_EXT_ZONE@] + ROWSUM(4)

   ; write production/attraction totals to the log file and dbf
   IF (I==ZONES)
     print LIST="-----RESULTS-----"
     LOOP EXT_ZONE = @FIRST_EXT_ZONE@,1475
       total = prod_tot[EXT_ZONE-@FIRST_EXT_ZONE@] + attr_tot[EXT_ZONE-@FIRST_EXT_ZONE@]
       print LIST="For external zone ",EXT_ZONE, " production: ", prod_tot[EXT_ZONE-@FIRST_EXT_ZONE@], " attraction: ", attr_tot[EXT_ZONE-@FIRST_EXT_ZONE@], " total: ", total
       
       RO.EXT_ZONE = EXT_ZONE
       RO.PROD     = prod_tot[EXT_ZONE-@FIRST_EXT_ZONE@]
       RO.ATTR     = attr_tot[EXT_ZONE-@FIRST_EXT_ZONE@]
       write RECO=1
     ENDLOOP
   ENDIF
   
endrun

