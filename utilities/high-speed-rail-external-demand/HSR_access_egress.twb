<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.1012.1128                               -->
<workbook original-version='18.1' source-build='2023.2.3 (20232.23.1012.1128)' source-platform='win' version='18.1' xml:base='https://10ay.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='HSR_access_egress' path='/t/metropolitantransportationcommission/workbooks' revision='1.1' site='metropolitantransportationcommission' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='tripsHsr_long' inline='true' name='federated.0mo7ce812m5sp719s7n8b1czznzn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tripsHsr_long' name='textscan.07wsao11naihu41fi9tvl0tgeouu'>
            <connection class='textscan' directory='E:/Box/Modeling and Surveys/Development/Travel_Model_1.6/Model_inputs/CHSR' filename='tripsHsr_long.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='tripsHsr_long.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='type' />
            <column datatype='integer' name='year' />
            <column datatype='integer' name='ORIG_TAZ1454' />
            <column datatype='integer' name='DEST_TAZ1454' />
            <column datatype='string' name='timeperiod' />
            <column datatype='real' name='DA' />
            <column datatype='real' name='S2' />
            <column datatype='real' name='TAXI' />
            <column datatype='real' name='TRANSIT' />
            <column datatype='integer' name='WALK ' />
            <column datatype='string' name='Table Name' />
            <column datatype='real' name='person_trips' ordinal='7' />
          </columns>
          <relation connection='textscan.07wsao11naihu41fi9tvl0tgeouu' name='tripsHsr_long.csv' table='[tripsHsr_long#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='string' name='acc_egr' ordinal='1' />
              <column datatype='integer' name='ORIG_TAZ1454' ordinal='2' />
              <column datatype='integer' name='DEST_TAZ1454' ordinal='3' />
              <column datatype='string' name='timeperiod' ordinal='4' />
              <column datatype='string' name='mode' ordinal='5' />
              <column datatype='real' name='trips' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.07wsao11naihu41fi9tvl0tgeouu' name='tripsHsr_RTP2021_long.csv' table='[tripsHsr_RTP2021_long#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='integer' name='ORIG_TAZ1454' ordinal='1' />
              <column datatype='integer' name='DEST_TAZ1454' ordinal='2' />
              <column datatype='string' name='timeperiod' ordinal='3' />
              <column datatype='string' name='mode' ordinal='4' />
              <column datatype='real' name='trips' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='tripsHsr_long.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='type' />
            <column datatype='integer' name='year' />
            <column datatype='integer' name='ORIG_TAZ1454' />
            <column datatype='integer' name='DEST_TAZ1454' />
            <column datatype='string' name='timeperiod' />
            <column datatype='real' name='DA' />
            <column datatype='real' name='S2' />
            <column datatype='real' name='TAXI' />
            <column datatype='real' name='TRANSIT' />
            <column datatype='integer' name='WALK ' />
            <column datatype='string' name='Table Name' />
            <column datatype='real' name='person_trips' ordinal='7' />
          </columns>
          <relation connection='textscan.07wsao11naihu41fi9tvl0tgeouu' name='tripsHsr_long.csv' table='[tripsHsr_long#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='string' name='acc_egr' ordinal='1' />
              <column datatype='integer' name='ORIG_TAZ1454' ordinal='2' />
              <column datatype='integer' name='DEST_TAZ1454' ordinal='3' />
              <column datatype='string' name='timeperiod' ordinal='4' />
              <column datatype='string' name='mode' ordinal='5' />
              <column datatype='real' name='trips' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.07wsao11naihu41fi9tvl0tgeouu' name='tripsHsr_RTP2021_long.csv' table='[tripsHsr_RTP2021_long#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='integer' name='ORIG_TAZ1454' ordinal='1' />
              <column datatype='integer' name='DEST_TAZ1454' ordinal='2' />
              <column datatype='string' name='timeperiod' ordinal='3' />
              <column datatype='string' name='mode' ordinal='4' />
              <column datatype='real' name='trips' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tripsHsr_long.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[tripsHsr_long.csv+]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tripsHsr_long.csv_CF86B8302A934AF3B83B875C396432C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>acc_egr</remote-name>
            <remote-type>129</remote-type>
            <local-name>[acc_egr]</local-name>
            <parent-name>[tripsHsr_long.csv+]</parent-name>
            <remote-alias>acc_egr</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tripsHsr_long.csv_CF86B8302A934AF3B83B875C396432C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORIG_TAZ1454</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ORIG_TAZ1454]</local-name>
            <parent-name>[tripsHsr_long.csv+]</parent-name>
            <remote-alias>ORIG_TAZ1454</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tripsHsr_long.csv_CF86B8302A934AF3B83B875C396432C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEST_TAZ1454</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEST_TAZ1454]</local-name>
            <parent-name>[tripsHsr_long.csv+]</parent-name>
            <remote-alias>DEST_TAZ1454</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tripsHsr_long.csv_CF86B8302A934AF3B83B875C396432C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeperiod</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timeperiod]</local-name>
            <parent-name>[tripsHsr_long.csv+]</parent-name>
            <remote-alias>timeperiod</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tripsHsr_long.csv_CF86B8302A934AF3B83B875C396432C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[tripsHsr_long.csv+]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tripsHsr_long.csv_CF86B8302A934AF3B83B875C396432C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trips</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trips]</local-name>
            <parent-name>[tripsHsr_long.csv+]</parent-name>
            <remote-alias>trips</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tripsHsr_long.csv_CF86B8302A934AF3B83B875C396432C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[tripsHsr_long.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tripsHsr_long.csv_CF86B8302A934AF3B83B875C396432C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Egress Person Trips' datatype='real' name='[Access Trips (copy)_712131710750982148]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Origin Station (copy)_712131710721490946]==&quot;N/A&quot;) then [Calculation_790100279623106561]&#13;&#10;// egress trips&#13;&#10;ELSEIF ([Calculation_712131710720942081]==&quot;N/A&quot;) then 0&#13;&#10;// could be either - for RTP2021, split the difference&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;) &gt; 0) then [Calculation_790100279623106561]/2.0&#13;&#10;// for RTP2025, we only have access trips&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='Origin Station' datatype='string' name='[Calculation_712131710720942081]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF     ([ORIG_TAZ1454]== 14) THEN &quot;San Francisco (STC)&quot;&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;)==0) AND ([ORIG_TAZ1454]==109) THEN &quot;San Francisco (4TH)&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==240) THEN &quot;Millbrae/SFO&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==538) THEN &quot;San Jose&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==707) THEN &quot;Gilroy&quot;&#13;&#10;ELSE   &quot;N/A&quot;&#13;&#10;END' />
      </column>
      <column caption='Access Person Trips' datatype='real' name='[Calculation_712131710731395075]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Calculation_712131710720942081]==&quot;N/A&quot;) then [Calculation_790100279623106561]&#13;&#10;// egress trips&#13;&#10;ELSEIF ([Origin Station (copy)_712131710721490946]==&quot;N/A&quot;) then 0&#13;&#10;// could be either - for RTP2021, split the difference&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;) &gt; 0) then [Calculation_790100279623106561]/2.0&#13;&#10;// for RTP2025, we only have access trips&#13;&#10;ELSE [Calculation_790100279623106561]&#13;&#10;END' />
      </column>
      <column caption='Egress Person Trips (RTP2021 egress scaled to access)' datatype='real' name='[Calculation_712131710760386566]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF (FIND([Table Name],&quot;RTP2021&quot;)&gt;0) THEN&#13;&#10;  IF ([year]==2035) THEN&#13;&#10;    [Access Trips (copy)_712131710750982148]*(11167/16961)&#13;&#10;  ELSEIF ([year]==2039) THEN&#13;&#10;    [Access Trips (copy)_712131710750982148]*(38406/52804)&#13;&#10;  ELSE&#13;&#10;    [Access Trips (copy)_712131710750982148]*(44273/61852)&#13;&#10;  END&#13;&#10;ELSE&#13;&#10;  [Access Trips (copy)_712131710750982148]&#13;&#10;END' />
      </column>
      <column caption='Station' datatype='string' name='[Calculation_712131710760865799]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ([Calculation_712131710720942081] != &quot;N/A&quot;) then [Calculation_712131710720942081]&#13;&#10;ELSE [Origin Station (copy)_712131710721490946]&#13;&#10;END' />
      </column>
      <column caption='Approx Year' datatype='string' name='[Calculation_712131710763319304]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if (([year] == 2039) OR ([year]==2040)) then &quot;2039/2040&quot;&#13;&#10;ELSE str([year])&#13;&#10;END' />
      </column>
      <column caption='Egress Person Trips (scaled) / Access Person Trips' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_712131710782271498]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_712131710760386566]) / &#13;&#10;sum([Calculation_712131710731395075])' />
      </column>
      <column caption='Daily Access or Egress Person Trips' datatype='real' name='[Calculation_790100279623106561]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ENDSWITH([mode],&quot;_VEH&quot;) then 0&#13;&#10;ELSE [trips]&#13;&#10;END' />
      </column>
      <column aggregation='Sum' caption='Dest Taz1454' datatype='integer' name='[DEST_TAZ1454]' role='dimension' type='ordinal' />
      <column caption='Daily Access or Egress Vehicle Trips' datatype='real' name='[Daily Access or Egress Person Trips (copy)_790100279623671810]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ENDSWITH([mode],&quot;_VEH&quot;) then [trips]&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='Annual Access or Egress Person Trips' datatype='real' name='[Daily Access or Egress Trips (copy)_712131710752305157]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_790100279623106561]*365' />
      </column>
      <column aggregation='Sum' caption='Orig Taz1454' datatype='integer' name='[ORIG_TAZ1454]' role='dimension' type='ordinal' />
      <column caption='Destination Station' datatype='string' name='[Origin Station (copy)_712131710721490946]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF     ([DEST_TAZ1454]== 14) THEN &quot;San Francisco (STC)&quot;&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;)==0) AND ([DEST_TAZ1454]==109) THEN &quot;San Francisco (4TH)&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==240) THEN &quot;Millbrae/SFO&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==538) THEN &quot;San Jose&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==707) THEN &quot;Gilroy&quot;&#13;&#10;ELSE   &quot;N/A&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;tripsHsr_long.csv&quot;' value='RTP2025 Update' />
          <alias key='&quot;tripsHsr_RTP2021_long.csv&quot;' value='RTP2021' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='tripsHsr_long.csv' datatype='table' name='[__tableau_internal_object_id__].[tripsHsr_long.csv_CF86B8302A934AF3B83B875C396432C3]' role='measure' type='quantitative' />
      <column datatype='string' name='[mode]' role='dimension' type='nominal' />
      <column caption='Timeperiod' datatype='string' name='[timeperiod]' role='dimension' type='nominal' />
      <column caption='Trips' datatype='real' name='[trips]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[Access Trips (copy)_712131710750982148]' derivation='Sum' name='[diff:sum:Access Trips (copy)_712131710750982148:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_712131710731395075]' derivation='Sum' name='[diff:sum:Calculation_712131710731395075:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_712131710720942081]' derivation='None' name='[none:Calculation_712131710720942081:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_712131710760865799]' derivation='None' name='[none:Calculation_712131710760865799:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_712131710763319304]' derivation='None' name='[none:Calculation_712131710763319304:nk]' pivot='key' type='nominal' />
      <column-instance column='[Origin Station (copy)_712131710721490946]' derivation='None' name='[none:Origin Station (copy)_712131710721490946:nk]' pivot='key' type='nominal' />
      <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[mode]' derivation='None' name='[none:mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
      <column-instance column='[Access Trips (copy)_712131710750982148]' derivation='Sum' name='[pcto:sum:Access Trips (copy)_712131710750982148:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk]' />
          <order field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk]' />
          <order field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:mode:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Access Trips (copy)_712131710750982148]' derivation='Sum' name='[pcto:sum:Access Trips (copy)_712131710750982148:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk]' />
          <order field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:mode:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Access Trips (copy)_712131710750982148]' derivation='Sum' name='[pcto:sum:Access Trips (copy)_712131710750982148:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:mode:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Access Trips (copy)_712131710750982148]' derivation='Sum' name='[pcto:sum:Access Trips (copy)_712131710750982148:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_712131710731395075]' derivation='Sum' name='[pcto:sum:Calculation_712131710731395075:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk]' />
          <order field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk]' />
          <order field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:mode:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_712131710731395075]' derivation='Sum' name='[pcto:sum:Calculation_712131710731395075:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk]' />
          <order field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:mode:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_712131710731395075]' derivation='Sum' name='[pcto:sum:Calculation_712131710731395075:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:mode:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_712131710731395075]' derivation='Sum' name='[pcto:sum:Calculation_712131710731395075:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Access Trips (copy)_712131710750982148]' derivation='Sum' name='[sum:Access Trips (copy)_712131710750982148:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_712131710731395075]' derivation='Sum' name='[sum:Calculation_712131710731395075:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_712131710760386566]' derivation='Sum' name='[sum:Calculation_712131710760386566:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:timeperiod:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AM&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_712131710760865799:nk]' palette='miller_stone_10_0' type='palette'>
            <map to='#4f6980'>
              <bucket>&quot;San Francisco (STC)&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;San Francisco (4TH)&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;Millbrae/SFO&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;Gilroy&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:mode:nk]' palette='nuriel_stone_10_0' type='palette'>
            <map to='#638b66'>
              <bucket>&quot;WALK&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;TRANSIT&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;DA_PERS&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;DA_VEH&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;TAXI_VEH&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;TAXI_PERS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DA&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;TAXI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SR2&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;AUTO_PERS&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;SR2_PERS&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;SR2_VEH&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710760386566:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[diff:sum:Calculation_712131710731395075:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[pcto:sum:Calculation_712131710731395075:qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[pcto:sum:Calculation_712131710731395075:qk:2]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[pcto:sum:Calculation_712131710731395075:qk:3]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[pcto:sum:Calculation_712131710731395075:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710731395075:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[diff:sum:Access Trips (copy)_712131710750982148:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[pcto:sum:Access Trips (copy)_712131710750982148:qk:1]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[pcto:sum:Access Trips (copy)_712131710750982148:qk:2]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[pcto:sum:Access Trips (copy)_712131710750982148:qk:3]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[pcto:sum:Access Trips (copy)_712131710750982148:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Access Trips (copy)_712131710750982148:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Calculation_712131710720942081:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;San Francisco (STC)&quot;</bucket>
            <bucket>&quot;San Francisco (4TH)&quot;</bucket>
            <bucket>&quot;Millbrae/SFO&quot;</bucket>
            <bucket>&quot;San Jose&quot;</bucket>
            <bucket>&quot;Gilroy&quot;</bucket>
            <bucket>&quot;N/A&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:Calculation_712131710760865799:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;San Francisco (STC)&quot;</bucket>
            <bucket>&quot;San Francisco (4TH)&quot;</bucket>
            <bucket>&quot;Millbrae/SFO&quot;</bucket>
            <bucket>&quot;San Jose&quot;</bucket>
            <bucket>&quot;Gilroy&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:Origin Station (copy)_712131710721490946:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;San Francisco (STC)&quot;</bucket>
            <bucket>&quot;San Francisco (4TH)&quot;</bucket>
            <bucket>&quot;Millbrae/SFO&quot;</bucket>
            <bucket>&quot;San Jose&quot;</bucket>
            <bucket>&quot;Gilroy&quot;</bucket>
            <bucket>&quot;N/A&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:timeperiod:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EA&quot;</bucket>
            <bucket>&quot;AM&quot;</bucket>
            <bucket>&quot;MD&quot;</bucket>
            <bucket>&quot;PM&quot;</bucket>
            <bucket>&quot;EV&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Calculation_712131710763319304' />
        <field-sort-custom-order field='ORIG_TAZ1454' />
        <field-sort-custom-order field='Calculation_712131710720942081' />
        <field-sort-custom-order field='Calculation_712131710760865799' />
        <field-sort-custom-order field='Origin Station (copy)_712131710721490946' />
        <field-sort-custom-order field='DEST_TAZ1454' />
        <field-sort-custom-order field='timeperiod' />
        <field-sort-custom-order field='mode' />
        <field-sort-custom-order field='trips' />
        <field-sort-custom-order field='Daily Access or Egress Trips (copy)_712131710752305157' />
        <field-sort-custom-order field='Table Name' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='tripsHsr_long.csv' id='tripsHsr_long.csv_CF86B8302A934AF3B83B875C396432C3'>
            <properties context=''>
              <relation all='true' name='tripsHsr_long.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='type' />
                  <column datatype='integer' name='year' />
                  <column datatype='integer' name='ORIG_TAZ1454' />
                  <column datatype='integer' name='DEST_TAZ1454' />
                  <column datatype='string' name='timeperiod' />
                  <column datatype='real' name='DA' />
                  <column datatype='real' name='S2' />
                  <column datatype='real' name='TAXI' />
                  <column datatype='real' name='TRANSIT' />
                  <column datatype='integer' name='WALK ' />
                  <column datatype='string' name='Table Name' />
                  <column datatype='real' name='person_trips' ordinal='7' />
                </columns>
                <relation connection='textscan.07wsao11naihu41fi9tvl0tgeouu' name='tripsHsr_long.csv' table='[tripsHsr_long#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='year' ordinal='0' />
                    <column datatype='string' name='acc_egr' ordinal='1' />
                    <column datatype='integer' name='ORIG_TAZ1454' ordinal='2' />
                    <column datatype='integer' name='DEST_TAZ1454' ordinal='3' />
                    <column datatype='string' name='timeperiod' ordinal='4' />
                    <column datatype='string' name='mode' ordinal='5' />
                    <column datatype='real' name='trips' ordinal='6' />
                  </columns>
                </relation>
                <relation connection='textscan.07wsao11naihu41fi9tvl0tgeouu' name='tripsHsr_RTP2021_long.csv' table='[tripsHsr_RTP2021_long#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='year' ordinal='0' />
                    <column datatype='integer' name='ORIG_TAZ1454' ordinal='1' />
                    <column datatype='integer' name='DEST_TAZ1454' ordinal='2' />
                    <column datatype='string' name='timeperiod' ordinal='3' />
                    <column datatype='string' name='mode' ordinal='4' />
                    <column datatype='real' name='trips' ordinal='5' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Egress over Access'>
      <table>
        <view>
          <datasources>
            <datasource caption='tripsHsr_long' name='federated.0mo7ce812m5sp719s7n8b1czznzn' />
          </datasources>
          <datasource-dependencies datasource='federated.0mo7ce812m5sp719s7n8b1czznzn'>
            <column caption='Egress Person Trips' datatype='real' name='[Access Trips (copy)_712131710750982148]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Origin Station (copy)_712131710721490946]==&quot;N/A&quot;) then [Calculation_790100279623106561]&#13;&#10;// egress trips&#13;&#10;ELSEIF ([Calculation_712131710720942081]==&quot;N/A&quot;) then 0&#13;&#10;// could be either - for RTP2021, split the difference&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;) &gt; 0) then [Calculation_790100279623106561]/2.0&#13;&#10;// for RTP2025, we only have access trips&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Origin Station' datatype='string' name='[Calculation_712131710720942081]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF     ([ORIG_TAZ1454]== 14) THEN &quot;San Francisco (STC)&quot;&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;)==0) AND ([ORIG_TAZ1454]==109) THEN &quot;San Francisco (4TH)&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==240) THEN &quot;Millbrae/SFO&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==538) THEN &quot;San Jose&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==707) THEN &quot;Gilroy&quot;&#13;&#10;ELSE   &quot;N/A&quot;&#13;&#10;END' />
            </column>
            <column caption='Access Person Trips' datatype='real' name='[Calculation_712131710731395075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Calculation_712131710720942081]==&quot;N/A&quot;) then [Calculation_790100279623106561]&#13;&#10;// egress trips&#13;&#10;ELSEIF ([Origin Station (copy)_712131710721490946]==&quot;N/A&quot;) then 0&#13;&#10;// could be either - for RTP2021, split the difference&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;) &gt; 0) then [Calculation_790100279623106561]/2.0&#13;&#10;// for RTP2025, we only have access trips&#13;&#10;ELSE [Calculation_790100279623106561]&#13;&#10;END' />
            </column>
            <column caption='Egress Person Trips (RTP2021 egress scaled to access)' datatype='real' name='[Calculation_712131710760386566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF (FIND([Table Name],&quot;RTP2021&quot;)&gt;0) THEN&#13;&#10;  IF ([year]==2035) THEN&#13;&#10;    [Access Trips (copy)_712131710750982148]*(11167/16961)&#13;&#10;  ELSEIF ([year]==2039) THEN&#13;&#10;    [Access Trips (copy)_712131710750982148]*(38406/52804)&#13;&#10;  ELSE&#13;&#10;    [Access Trips (copy)_712131710750982148]*(44273/61852)&#13;&#10;  END&#13;&#10;ELSE&#13;&#10;  [Access Trips (copy)_712131710750982148]&#13;&#10;END' />
            </column>
            <column caption='Station' datatype='string' name='[Calculation_712131710760865799]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_712131710720942081] != &quot;N/A&quot;) then [Calculation_712131710720942081]&#13;&#10;ELSE [Origin Station (copy)_712131710721490946]&#13;&#10;END' />
            </column>
            <column caption='Approx Year' datatype='string' name='[Calculation_712131710763319304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (([year] == 2039) OR ([year]==2040)) then &quot;2039/2040&quot;&#13;&#10;ELSE str([year])&#13;&#10;END' />
            </column>
            <column caption='Egress Person Trips (scaled) / Access Person Trips' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_712131710782271498]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_712131710760386566]) / &#13;&#10;sum([Calculation_712131710731395075])' />
            </column>
            <column caption='Daily Access or Egress Person Trips' datatype='real' name='[Calculation_790100279623106561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ENDSWITH([mode],&quot;_VEH&quot;) then 0&#13;&#10;ELSE [trips]&#13;&#10;END' />
            </column>
            <column aggregation='Sum' caption='Dest Taz1454' datatype='integer' name='[DEST_TAZ1454]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Orig Taz1454' datatype='integer' name='[ORIG_TAZ1454]' role='dimension' type='ordinal' />
            <column caption='Destination Station' datatype='string' name='[Origin Station (copy)_712131710721490946]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF     ([DEST_TAZ1454]== 14) THEN &quot;San Francisco (STC)&quot;&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;)==0) AND ([DEST_TAZ1454]==109) THEN &quot;San Francisco (4TH)&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==240) THEN &quot;Millbrae/SFO&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==538) THEN &quot;San Jose&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==707) THEN &quot;Gilroy&quot;&#13;&#10;ELSE   &quot;N/A&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;tripsHsr_long.csv&quot;' value='RTP2025 Update' />
                <alias key='&quot;tripsHsr_RTP2021_long.csv&quot;' value='RTP2021' />
              </aliases>
            </column>
            <column datatype='string' name='[acc_egr]' role='dimension' type='nominal' />
            <column datatype='string' name='[mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_712131710760865799]' derivation='None' name='[none:Calculation_712131710760865799:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_712131710763319304]' derivation='None' name='[none:Calculation_712131710763319304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[acc_egr]' derivation='None' name='[none:acc_egr:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Access Trips (copy)_712131710750982148]' derivation='Sum' name='[sum:Access Trips (copy)_712131710750982148:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_712131710731395075]' derivation='Sum' name='[sum:Calculation_712131710731395075:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_712131710760386566]' derivation='Sum' name='[sum:Calculation_712131710760386566:qk]' pivot='key' type='quantitative' />
            <column caption='Timeperiod' datatype='string' name='[timeperiod]' role='dimension' type='nominal' />
            <column caption='Trips' datatype='real' name='[trips]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_712131710782271498]' derivation='User' name='[usr:Calculation_712131710782271498:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710731395075:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Access Trips (copy)_712131710750982148:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710760386566:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[usr:Calculation_712131710782271498:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_712131710763319304:nk]' />
              <groupfilter function='member' level='[none:Calculation_712131710763319304:nk]' member='&quot;2035&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk]'>
            <groupfilter function='member' level='[none:Table Name:nk]' member='&quot;tripsHsr_RTP2021_long.csv&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:acc_egr:nk]'>
            <groupfilter function='level-members' level='[none:acc_egr:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]</column>
            <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk]</column>
            <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:acc_egr:nk]</column>
            <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' value='63' />
            <format attr='text-format' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[usr:Calculation_712131710782271498:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' value='128' />
            <format attr='width' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk]' value='44' />
            <format attr='width' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' value='bottom' />
            <format attr='text-orientation' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk]' value='-90' />
            <format attr='wrap' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk]' value='on' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk] / ([federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk] / [federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710760865799:nk]))</rows>
        <cols>([federated.0mo7ce812m5sp719s7n8b1czznzn].[none:timeperiod:nk] / [federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names])</cols>
        <subtotals>
          <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk]</column>
          <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk]</column>
          <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:timeperiod:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{7C15BBF0-EFCE-4D3B-A86D-16C1937A627A}' />
    </worksheet>
    <worksheet name='Person Trip Modes'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>The overall trip tables show a pretty big increase in the forecasted trips to/from Bay Area HSR stations, and a pretty big change in access modes.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='tripsHsr_long' name='federated.0mo7ce812m5sp719s7n8b1czznzn' />
          </datasources>
          <datasource-dependencies datasource='federated.0mo7ce812m5sp719s7n8b1czznzn'>
            <column caption='Egress Person Trips' datatype='real' name='[Access Trips (copy)_712131710750982148]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Origin Station (copy)_712131710721490946]==&quot;N/A&quot;) then [Calculation_790100279623106561]&#13;&#10;// egress trips&#13;&#10;ELSEIF ([Calculation_712131710720942081]==&quot;N/A&quot;) then 0&#13;&#10;// could be either - for RTP2021, split the difference&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;) &gt; 0) then [Calculation_790100279623106561]/2.0&#13;&#10;// for RTP2025, we only have access trips&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Origin Station' datatype='string' name='[Calculation_712131710720942081]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF     ([ORIG_TAZ1454]== 14) THEN &quot;San Francisco (STC)&quot;&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;)==0) AND ([ORIG_TAZ1454]==109) THEN &quot;San Francisco (4TH)&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==240) THEN &quot;Millbrae/SFO&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==538) THEN &quot;San Jose&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==707) THEN &quot;Gilroy&quot;&#13;&#10;ELSE   &quot;N/A&quot;&#13;&#10;END' />
            </column>
            <column caption='Access Person Trips' datatype='real' name='[Calculation_712131710731395075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Calculation_712131710720942081]==&quot;N/A&quot;) then [Calculation_790100279623106561]&#13;&#10;// egress trips&#13;&#10;ELSEIF ([Origin Station (copy)_712131710721490946]==&quot;N/A&quot;) then 0&#13;&#10;// could be either - for RTP2021, split the difference&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;) &gt; 0) then [Calculation_790100279623106561]/2.0&#13;&#10;// for RTP2025, we only have access trips&#13;&#10;ELSE [Calculation_790100279623106561]&#13;&#10;END' />
            </column>
            <column caption='Approx Year' datatype='string' name='[Calculation_712131710763319304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (([year] == 2039) OR ([year]==2040)) then &quot;2039/2040&quot;&#13;&#10;ELSE str([year])&#13;&#10;END' />
            </column>
            <column caption='Daily Access or Egress Person Trips' datatype='real' name='[Calculation_790100279623106561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ENDSWITH([mode],&quot;_VEH&quot;) then 0&#13;&#10;ELSE [trips]&#13;&#10;END' />
            </column>
            <column aggregation='Sum' caption='Dest Taz1454' datatype='integer' name='[DEST_TAZ1454]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Orig Taz1454' datatype='integer' name='[ORIG_TAZ1454]' role='dimension' type='ordinal' />
            <column caption='Destination Station' datatype='string' name='[Origin Station (copy)_712131710721490946]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF     ([DEST_TAZ1454]== 14) THEN &quot;San Francisco (STC)&quot;&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;)==0) AND ([DEST_TAZ1454]==109) THEN &quot;San Francisco (4TH)&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==240) THEN &quot;Millbrae/SFO&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==538) THEN &quot;San Jose&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==707) THEN &quot;Gilroy&quot;&#13;&#10;ELSE   &quot;N/A&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;tripsHsr_long.csv&quot;' value='RTP2025 Update' />
                <alias key='&quot;tripsHsr_RTP2021_long.csv&quot;' value='RTP2021' />
              </aliases>
            </column>
            <column datatype='string' name='[mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_712131710763319304]' derivation='None' name='[none:Calculation_712131710763319304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Access Trips (copy)_712131710750982148]' derivation='Sum' name='[pcto:sum:Access Trips (copy)_712131710750982148:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:mode:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_712131710731395075]' derivation='Sum' name='[pcto:sum:Calculation_712131710731395075:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:mode:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Access Trips (copy)_712131710750982148]' derivation='Sum' name='[sum:Access Trips (copy)_712131710750982148:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_712131710731395075]' derivation='Sum' name='[sum:Calculation_712131710731395075:qk]' pivot='key' type='quantitative' />
            <column caption='Trips' datatype='real' name='[trips]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk]' value='97' />
            <format attr='text-format' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[pcto:sum:Calculation_712131710731395075:qk:3]' value='p0%' />
            <format attr='text-format' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[pcto:sum:Access Trips (copy)_712131710750982148:qk:3]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:mode:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710731395075:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:mode:nk]' />
              <text column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[pcto:sum:Calculation_712131710731395075:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Access Trips (copy)_712131710750982148:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:mode:nk]' />
              <text column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[pcto:sum:Access Trips (copy)_712131710750982148:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710731395075:qk] + [federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Access Trips (copy)_712131710750982148:qk])</rows>
        <cols>([federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk] / [federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk])</cols>
      </table>
      <simple-id uuid='{9E2BBA13-8044-4064-8401-C037B8CCCF73}' />
    </worksheet>
    <worksheet name='Station Access/Egress by Timeperiod'>
      <table>
        <view>
          <datasources>
            <datasource caption='tripsHsr_long' name='federated.0mo7ce812m5sp719s7n8b1czznzn' />
          </datasources>
          <datasource-dependencies datasource='federated.0mo7ce812m5sp719s7n8b1czznzn'>
            <column caption='Egress Person Trips' datatype='real' name='[Access Trips (copy)_712131710750982148]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Origin Station (copy)_712131710721490946]==&quot;N/A&quot;) then [Calculation_790100279623106561]&#13;&#10;// egress trips&#13;&#10;ELSEIF ([Calculation_712131710720942081]==&quot;N/A&quot;) then 0&#13;&#10;// could be either - for RTP2021, split the difference&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;) &gt; 0) then [Calculation_790100279623106561]/2.0&#13;&#10;// for RTP2025, we only have access trips&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Origin Station' datatype='string' name='[Calculation_712131710720942081]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF     ([ORIG_TAZ1454]== 14) THEN &quot;San Francisco (STC)&quot;&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;)==0) AND ([ORIG_TAZ1454]==109) THEN &quot;San Francisco (4TH)&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==240) THEN &quot;Millbrae/SFO&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==538) THEN &quot;San Jose&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==707) THEN &quot;Gilroy&quot;&#13;&#10;ELSE   &quot;N/A&quot;&#13;&#10;END' />
            </column>
            <column caption='Access Person Trips' datatype='real' name='[Calculation_712131710731395075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Calculation_712131710720942081]==&quot;N/A&quot;) then [Calculation_790100279623106561]&#13;&#10;// egress trips&#13;&#10;ELSEIF ([Origin Station (copy)_712131710721490946]==&quot;N/A&quot;) then 0&#13;&#10;// could be either - for RTP2021, split the difference&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;) &gt; 0) then [Calculation_790100279623106561]/2.0&#13;&#10;// for RTP2025, we only have access trips&#13;&#10;ELSE [Calculation_790100279623106561]&#13;&#10;END' />
            </column>
            <column caption='Egress Person Trips (RTP2021 egress scaled to access)' datatype='real' name='[Calculation_712131710760386566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF (FIND([Table Name],&quot;RTP2021&quot;)&gt;0) THEN&#13;&#10;  IF ([year]==2035) THEN&#13;&#10;    [Access Trips (copy)_712131710750982148]*(11167/16961)&#13;&#10;  ELSEIF ([year]==2039) THEN&#13;&#10;    [Access Trips (copy)_712131710750982148]*(38406/52804)&#13;&#10;  ELSE&#13;&#10;    [Access Trips (copy)_712131710750982148]*(44273/61852)&#13;&#10;  END&#13;&#10;ELSE&#13;&#10;  [Access Trips (copy)_712131710750982148]&#13;&#10;END' />
            </column>
            <column caption='Station' datatype='string' name='[Calculation_712131710760865799]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_712131710720942081] != &quot;N/A&quot;) then [Calculation_712131710720942081]&#13;&#10;ELSE [Origin Station (copy)_712131710721490946]&#13;&#10;END' />
            </column>
            <column caption='Approx Year' datatype='string' name='[Calculation_712131710763319304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (([year] == 2039) OR ([year]==2040)) then &quot;2039/2040&quot;&#13;&#10;ELSE str([year])&#13;&#10;END' />
            </column>
            <column caption='Daily Access or Egress Person Trips' datatype='real' name='[Calculation_790100279623106561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ENDSWITH([mode],&quot;_VEH&quot;) then 0&#13;&#10;ELSE [trips]&#13;&#10;END' />
            </column>
            <column aggregation='Sum' caption='Dest Taz1454' datatype='integer' name='[DEST_TAZ1454]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Orig Taz1454' datatype='integer' name='[ORIG_TAZ1454]' role='dimension' type='ordinal' />
            <column caption='Destination Station' datatype='string' name='[Origin Station (copy)_712131710721490946]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF     ([DEST_TAZ1454]== 14) THEN &quot;San Francisco (STC)&quot;&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;)==0) AND ([DEST_TAZ1454]==109) THEN &quot;San Francisco (4TH)&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==240) THEN &quot;Millbrae/SFO&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==538) THEN &quot;San Jose&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==707) THEN &quot;Gilroy&quot;&#13;&#10;ELSE   &quot;N/A&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;tripsHsr_long.csv&quot;' value='RTP2025 Update' />
                <alias key='&quot;tripsHsr_RTP2021_long.csv&quot;' value='RTP2021' />
              </aliases>
            </column>
            <column datatype='string' name='[mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_712131710760865799]' derivation='None' name='[none:Calculation_712131710760865799:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_712131710763319304]' derivation='None' name='[none:Calculation_712131710763319304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Access Trips (copy)_712131710750982148]' derivation='Sum' name='[sum:Access Trips (copy)_712131710750982148:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_712131710731395075]' derivation='Sum' name='[sum:Calculation_712131710731395075:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_712131710760386566]' derivation='Sum' name='[sum:Calculation_712131710760386566:qk]' pivot='key' type='quantitative' />
            <column caption='Timeperiod' datatype='string' name='[timeperiod]' role='dimension' type='nominal' />
            <column caption='Trips' datatype='real' name='[trips]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710731395075:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710760386566:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710731395075:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710760386566:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Access Trips (copy)_712131710750982148:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710760865799:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_712131710760865799:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_712131710763319304:nk]' />
              <groupfilter function='member' level='[none:Calculation_712131710763319304:nk]' member='&quot;2035&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]</column>
            <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710760865799:nk]</column>
            <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' value='92' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' value='74' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk]' value='-90' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' value='300' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk] / [federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk]) * [federated.0mo7ce812m5sp719s7n8b1czznzn].[Multiple Values])</rows>
        <cols>([federated.0mo7ce812m5sp719s7n8b1czznzn].[none:timeperiod:nk] / [federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{DE6DA480-2189-400B-933C-B337B8918B39}' />
    </worksheet>
    <worksheet name='Summary Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='tripsHsr_long' name='federated.0mo7ce812m5sp719s7n8b1czznzn' />
          </datasources>
          <datasource-dependencies datasource='federated.0mo7ce812m5sp719s7n8b1czznzn'>
            <column caption='Egress Person Trips' datatype='real' name='[Access Trips (copy)_712131710750982148]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Origin Station (copy)_712131710721490946]==&quot;N/A&quot;) then [Calculation_790100279623106561]&#13;&#10;// egress trips&#13;&#10;ELSEIF ([Calculation_712131710720942081]==&quot;N/A&quot;) then 0&#13;&#10;// could be either - for RTP2021, split the difference&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;) &gt; 0) then [Calculation_790100279623106561]/2.0&#13;&#10;// for RTP2025, we only have access trips&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Origin Station' datatype='string' name='[Calculation_712131710720942081]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF     ([ORIG_TAZ1454]== 14) THEN &quot;San Francisco (STC)&quot;&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;)==0) AND ([ORIG_TAZ1454]==109) THEN &quot;San Francisco (4TH)&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==240) THEN &quot;Millbrae/SFO&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==538) THEN &quot;San Jose&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==707) THEN &quot;Gilroy&quot;&#13;&#10;ELSE   &quot;N/A&quot;&#13;&#10;END' />
            </column>
            <column caption='Access Person Trips' datatype='real' name='[Calculation_712131710731395075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Calculation_712131710720942081]==&quot;N/A&quot;) then [Calculation_790100279623106561]&#13;&#10;// egress trips&#13;&#10;ELSEIF ([Origin Station (copy)_712131710721490946]==&quot;N/A&quot;) then 0&#13;&#10;// could be either - for RTP2021, split the difference&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;) &gt; 0) then [Calculation_790100279623106561]/2.0&#13;&#10;// for RTP2025, we only have access trips&#13;&#10;ELSE [Calculation_790100279623106561]&#13;&#10;END' />
            </column>
            <column caption='Approx Year' datatype='string' name='[Calculation_712131710763319304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (([year] == 2039) OR ([year]==2040)) then &quot;2039/2040&quot;&#13;&#10;ELSE str([year])&#13;&#10;END' />
            </column>
            <column caption='Daily Access or Egress Person Trips' datatype='real' name='[Calculation_790100279623106561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ENDSWITH([mode],&quot;_VEH&quot;) then 0&#13;&#10;ELSE [trips]&#13;&#10;END' />
            </column>
            <column aggregation='Sum' caption='Dest Taz1454' datatype='integer' name='[DEST_TAZ1454]' role='dimension' type='ordinal' />
            <column caption='Daily Access or Egress Vehicle Trips' datatype='real' name='[Daily Access or Egress Person Trips (copy)_790100279623671810]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ENDSWITH([mode],&quot;_VEH&quot;) then [trips]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Annual Access or Egress Person Trips' datatype='real' name='[Daily Access or Egress Trips (copy)_712131710752305157]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_790100279623106561]*365' />
            </column>
            <column aggregation='Sum' caption='Orig Taz1454' datatype='integer' name='[ORIG_TAZ1454]' role='dimension' type='ordinal' />
            <column caption='Destination Station' datatype='string' name='[Origin Station (copy)_712131710721490946]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF     ([DEST_TAZ1454]== 14) THEN &quot;San Francisco (STC)&quot;&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;)==0) AND ([DEST_TAZ1454]==109) THEN &quot;San Francisco (4TH)&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==240) THEN &quot;Millbrae/SFO&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==538) THEN &quot;San Jose&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==707) THEN &quot;Gilroy&quot;&#13;&#10;ELSE   &quot;N/A&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;tripsHsr_long.csv&quot;' value='RTP2025 Update' />
                <alias key='&quot;tripsHsr_RTP2021_long.csv&quot;' value='RTP2021' />
              </aliases>
            </column>
            <column datatype='string' name='[mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_712131710763319304]' derivation='None' name='[none:Calculation_712131710763319304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Access Trips (copy)_712131710750982148]' derivation='Sum' name='[sum:Access Trips (copy)_712131710750982148:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_712131710731395075]' derivation='Sum' name='[sum:Calculation_712131710731395075:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_790100279623106561]' derivation='Sum' name='[sum:Calculation_790100279623106561:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Daily Access or Egress Person Trips (copy)_790100279623671810]' derivation='Sum' name='[sum:Daily Access or Egress Person Trips (copy)_790100279623671810:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Daily Access or Egress Trips (copy)_712131710752305157]' derivation='Sum' name='[sum:Daily Access or Egress Trips (copy)_712131710752305157:qk]' pivot='key' type='quantitative' />
            <column caption='Trips' datatype='real' name='[trips]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710731395075:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Access Trips (copy)_712131710750982148:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_790100279623106561:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Daily Access or Egress Trips (copy)_712131710752305157:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Daily Access or Egress Person Trips (copy)_790100279623671810:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710731395075:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Access Trips (copy)_712131710750982148:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_790100279623106561:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Daily Access or Egress Trips (copy)_712131710752305157:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' value='95' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk] / [federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710763319304:nk])</rows>
        <cols total='true'>[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{EC9B0E8E-DE45-42C0-BFCA-9F4BC2212885}' />
    </worksheet>
    <worksheet name='Timeperiod Table'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>For the RTP2021 input, the Egress trips to HSR stations outnumbered Access trips to HSR stations by a lot: 131.6k/93.8k (~ 40% more).

For the RTP2025 update, the HSR consultants told us that the access and egress totals are roughly the same (see </run>
            <run bold='true' fontcolor='#4e79a7'>Access-Egress</run>
            <run> worksheet in </run>
            <run fontcolor='#4e79a7'>Box\Plan Bay Area 2050+\Federal and State Approvals\CARB Technical Methodology\Exogenous Forces\CHSR\230419_ETO MTC Summaries_v01.xlsx</run>
            <run>)

Therefore, the variable &quot;Egress Trips (RTP2023 egress scaled to access)&quot; variable scales the total egress trips to match the access trips by Year.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='tripsHsr_long' name='federated.0mo7ce812m5sp719s7n8b1czznzn' />
          </datasources>
          <datasource-dependencies datasource='federated.0mo7ce812m5sp719s7n8b1czznzn'>
            <column caption='Egress Person Trips' datatype='real' name='[Access Trips (copy)_712131710750982148]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Origin Station (copy)_712131710721490946]==&quot;N/A&quot;) then [Calculation_790100279623106561]&#13;&#10;// egress trips&#13;&#10;ELSEIF ([Calculation_712131710720942081]==&quot;N/A&quot;) then 0&#13;&#10;// could be either - for RTP2021, split the difference&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;) &gt; 0) then [Calculation_790100279623106561]/2.0&#13;&#10;// for RTP2025, we only have access trips&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Origin Station' datatype='string' name='[Calculation_712131710720942081]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF     ([ORIG_TAZ1454]== 14) THEN &quot;San Francisco (STC)&quot;&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;)==0) AND ([ORIG_TAZ1454]==109) THEN &quot;San Francisco (4TH)&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==240) THEN &quot;Millbrae/SFO&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==538) THEN &quot;San Jose&quot;&#13;&#10;ELSEIF ([ORIG_TAZ1454]==707) THEN &quot;Gilroy&quot;&#13;&#10;ELSE   &quot;N/A&quot;&#13;&#10;END' />
            </column>
            <column caption='Access Person Trips' datatype='real' name='[Calculation_712131710731395075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Calculation_712131710720942081]==&quot;N/A&quot;) then [Calculation_790100279623106561]&#13;&#10;// egress trips&#13;&#10;ELSEIF ([Origin Station (copy)_712131710721490946]==&quot;N/A&quot;) then 0&#13;&#10;// could be either - for RTP2021, split the difference&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;) &gt; 0) then [Calculation_790100279623106561]/2.0&#13;&#10;// for RTP2025, we only have access trips&#13;&#10;ELSE [Calculation_790100279623106561]&#13;&#10;END' />
            </column>
            <column caption='Egress Person Trips (RTP2021 egress scaled to access)' datatype='real' name='[Calculation_712131710760386566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF (FIND([Table Name],&quot;RTP2021&quot;)&gt;0) THEN&#13;&#10;  IF ([year]==2035) THEN&#13;&#10;    [Access Trips (copy)_712131710750982148]*(11167/16961)&#13;&#10;  ELSEIF ([year]==2039) THEN&#13;&#10;    [Access Trips (copy)_712131710750982148]*(38406/52804)&#13;&#10;  ELSE&#13;&#10;    [Access Trips (copy)_712131710750982148]*(44273/61852)&#13;&#10;  END&#13;&#10;ELSE&#13;&#10;  [Access Trips (copy)_712131710750982148]&#13;&#10;END' />
            </column>
            <column caption='Daily Access or Egress Person Trips' datatype='real' name='[Calculation_790100279623106561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ENDSWITH([mode],&quot;_VEH&quot;) then 0&#13;&#10;ELSE [trips]&#13;&#10;END' />
            </column>
            <column aggregation='Sum' caption='Dest Taz1454' datatype='integer' name='[DEST_TAZ1454]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Orig Taz1454' datatype='integer' name='[ORIG_TAZ1454]' role='dimension' type='ordinal' />
            <column caption='Destination Station' datatype='string' name='[Origin Station (copy)_712131710721490946]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF     ([DEST_TAZ1454]== 14) THEN &quot;San Francisco (STC)&quot;&#13;&#10;ELSEIF (find([Table Name], &quot;RTP2021&quot;)==0) AND ([DEST_TAZ1454]==109) THEN &quot;San Francisco (4TH)&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==240) THEN &quot;Millbrae/SFO&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==538) THEN &quot;San Jose&quot;&#13;&#10;ELSEIF ([DEST_TAZ1454]==707) THEN &quot;Gilroy&quot;&#13;&#10;ELSE   &quot;N/A&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;tripsHsr_long.csv&quot;' value='RTP2025 Update' />
                <alias key='&quot;tripsHsr_RTP2021_long.csv&quot;' value='RTP2021' />
              </aliases>
            </column>
            <column datatype='string' name='[mode]' role='dimension' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Access Trips (copy)_712131710750982148]' derivation='Sum' name='[sum:Access Trips (copy)_712131710750982148:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_712131710731395075]' derivation='Sum' name='[sum:Calculation_712131710731395075:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_712131710760386566]' derivation='Sum' name='[sum:Calculation_712131710760386566:qk]' pivot='key' type='quantitative' />
            <column caption='Timeperiod' datatype='string' name='[timeperiod]' role='dimension' type='nominal' />
            <column caption='Trips' datatype='real' name='[trips]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710731395075:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Access Trips (copy)_712131710750982148:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mo7ce812m5sp719s7n8b1czznzn].[sum:Calculation_712131710760386566:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' value='97' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' value='72' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='vertical-align' value='bottom' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0mo7ce812m5sp719s7n8b1czznzn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk] / ([federated.0mo7ce812m5sp719s7n8b1czznzn].[none:year:ok] / [federated.0mo7ce812m5sp719s7n8b1czznzn].[none:timeperiod:nk]))</rows>
        <cols>[federated.0mo7ce812m5sp719s7n8b1czznzn].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk]</column>
          <column>[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:year:ok]</column>
        </subtotals>
      </table>
      <simple-id uuid='{EC620488-1BB7-4B5F-95AF-38EBB4F904FB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='RTP2025 CHSR Input Update' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='background-color' id='story-description_6' value='#00000000' />
          <format attr='text-align' id='story-description_6' value='left' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='199' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1116' minheight='964' minwidth='1116' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98566' x='717' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98566' x='717' y='830' />
            <zone fixed-size='168' h='17427' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98566' x='717' y='4253' />
            <zone h='77490' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98566' x='717' y='21680'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='A high level view of the overal access/egress trips and how they changed from the RTP2021 to RTP2025.' captured-sheet='Summary Table' id='1' />
                  <story-point caption='The overall trip tables show a pretty big increase in the forecasted trips to/from Bay Area HSR stations, and a pretty big change in access modes.' captured-sheet='Person Trip Modes' id='2' />
                  <story-point caption='We need to generate egress matrices for RTP2025 update, since the consultants didn&apos;t give us those.  First, scale RTP2021 egress to match access by year.' captured-sheet='Timeperiod Table' id='3' />
                  <story-point caption='Estimate egress trips using RTP2021 egress (scaled) to access ratio, by timeperiod and station.' captured-sheet='Egress over Access' id='4' />
                  <story-point caption='The resulting access / egress preson trips by time period and station.' captured-sheet='Station Access/Egress by Timeperiod' id='5' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='31224' hidden='true' id='6' story-point-id='3' type-v2='text' w='37106' x='57480' y='34440'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>For the RTP2021 input, the Egress trips to HSR stations outnumbered Access trips to HSR stations by a lot: 95.4k/67.6k (~ 41% more).</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#666666' fontsize='10'>For the RTP2025 update, the HSR consultants told us that the access and egress totals are roughly the same (see </run>
            <run bold='true' fontcolor='#4e79a7' fontsize='10'>Access-Egress</run>
            <run fontcolor='#666666' fontsize='10'> worksheet in </run>
            <run fontcolor='#4e79a7' fontsize='10'>Box\Plan Bay Area 2050+\Federal and State Approvals\CARB Technical Methodology\Exogenous Forces\CHSR\230419_ETO MTC Summaries_v01.xlsx - </run>
            <run auto-url='true' fontcolor='#4e79a7' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/s/hdt8j1d790s1bqaaqselq7fmgd6neo7p&amp;quot;'>https://mtcdrive.box.com/s/hdt8j1d790s1bqaaqselq7fmgd6neo7p</run>
            <run fontcolor='#666666' fontsize='10'>)</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#666666' fontsize='10'>Therefore, the variable &quot;Egress Trips (RTP2023 egress scaled to access)&quot; variable scales the total egress trips to match the access trips by Year.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{978A2300-6C6B-4457-8734-6D83257CB97D}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='RTP2025 CHSR Input Update'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{BC1A0DC6-EF24-4673-BE19-0C04507E0B7A}' />
    </window>
    <window class='worksheet' name='Summary Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E2116AC8-C1E6-4C70-BC06-C4BC2EC53C62}' />
    </window>
    <window class='worksheet' name='Person Trip Modes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:mode:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='65'>
            <card type='caption' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5A1B0AC4-13A7-405F-9A30-A22E73BFECB3}' />
    </window>
    <window class='worksheet' name='Timeperiod Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='200'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{65177F54-441E-413A-BA93-263E36F4A41A}' />
    </window>
    <window class='worksheet' name='Egress over Access'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Table Name:nk]</field>
            <field>[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:acc_egr:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{630E9852-C66E-4E33-A4AD-D1E1D8DEE95C}' />
    </window>
    <window class='worksheet' name='Station Access/Egress by Timeperiod'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card mode='radiolist' param='[federated.0mo7ce812m5sp719s7n8b1czznzn].[none:Calculation_712131710760865799:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D0BC38EE-F28B-4DEB-BC9C-92932A656D8D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Egress over Access' width='192'>
      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
      fwOQd4p62MMgDgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Person Trip Modes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='RTP2025 CHSR Input Update' width='192'>
      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
      JrOzs4iiyOrqKseOHSOXy+Hz+Wi1WkxM7G3zys6S6uXlZY4cOUK9XieZTCLLMtlslnA4jNfr
      ZXFxkdHR0T0tid6ZAkWjUer1OoIgYBgG09PTVCoVvF4vqVSKZDJJvV4fBLceVNby8jLT09MD
      I7jRaNButwF27ZuRkRGazSYulwtBEA5trX4qlWJkZGTPjo2D4qmMdb5gBFejQ7deotTXKedy
      TM7MoGgmpqowOXW4c8DLly/jcDhIJpOsrKzgdruZn59HlmXS6TSKovDKK6/sudzl5eXB0ofb
      t29Tq9VIJpO88cYbzM3NDX7cRCJBo9HYkwB0XWdrawuv18vt27eRZZlPf/rTmKbJW2+9ha7r
      RCIRYrEY169ff6gAFEXhypUrNBoNut3uQOg3b95EUZRd+yYajSLLMpIkoes6X/jCF/bcP49C
      0zQymQzZbJaXXnrpwMt/HJ7qZK/RaNDuQyAgUSpkyFVlTs4e0pbBezh58iT5/HbCWVmW6Xa7
      uN1uqtUqrVaLkZERbt68uWdjrNlskk6nMQyDZrNJLpcjl8sRCoW4ffs24XAYwzBotVp89rOf
      3VPZiqJw/fp1SqUSsViMmZkZ5ufnOX36NKZpYpom1WqVbDY7WA79ICO43+/jdDpJpVLYbDY6
      nQ6XLl1idHQUv9+/a9/0etvZ2w4zbbnNZqNarT7TDTHPPBK8V540ErwzbTms8Hs+n2d09HA8
      W5qmUavVnniu/KA6HnbfPAwrEvyYWJHgjyfPVSS4mrrOu3e2GJ2cYv32TWKxKD0d5kZClFoK
      ertKKDFGq1JAdEs0VBc/+dqLOHcJq9ntdpRui/VUhngiTq3Vw+80UUwneq9BKDGBqXWpbVUJ
      x+Pk80WOnTpFLr1BwOuirQpMjY8MyttPJHh1dRWPx0OhUGBubg6Px8PCwgKf+MQnuH37NseO
      HWNjY2PfK0KvXbvG+Pg4y8vLvPrqq+RyOVqtFg6Hg4mJCZaXlzl37tyeyjQMg+XlZXw+H5VK
      ZbBaU5Ikbty4wdzcHDdu3GBycpJKpfLQSPBOH4yNjbG6usrZs2cHC+tEUcTpdNJqtQZ1vHHj
      xsD43hkN9hsJvnTpEtPT06yurvLJT36SfD5PPp8nGAxu5ymq1wmFQs/EAwQPiAT3O01yWzWi
      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
      nN5PkPCWiQoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Station Access/Egress by Timeperiod' width='192'>
      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
      ZkEfWQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Summary Table' width='192'>
      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
      ruUAfJj/C0fPjQ+quOdoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Timeperiod Table' width='192'>
      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
      e1QAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
