<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0520.1152                                -->
<workbook source-build='9.3.2 (9300.16.0520.1152)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='long-obs-est-vmt-per-capita' inline='true' name='textscan.1vueseq0zfohkx112y1iq18qdc24' version='9.3'>
      <connection class='textscan' directory='M:/Data/HomeInterview/Longitudinal VMT per Capita and per Worker' filename='long-obs-est-vmt-per-capita.csv' password='' server=''>
        <relation name='long-obs-est-vmt-per-capita.csv' table='[long-obs-est-vmt-per-capita#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='string' name='detail' ordinal='1' />
            <column datatype='integer' name='taz' ordinal='2' />
            <column datatype='integer' name='observed_persons' ordinal='3' />
            <column datatype='real' name='estimated_persons' ordinal='4' />
            <column datatype='real' name='mean_vmt' ordinal='5' />
            <column datatype='real' name='sd_vmt' ordinal='6' />
            <column datatype='real' name='sum_vmt' ordinal='7' />
            <column datatype='real' name='vmt_per_capita' ordinal='8' />
            <column datatype='real' name='latitude' ordinal='9' />
            <column datatype='real' name='longitude' ordinal='10' />
            <column datatype='string' name='super_district' ordinal='11' />
            <column datatype='string' name='county' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>detail</remote-name>
            <remote-type>129</remote-type>
            <local-name>[detail]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>detail</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed_persons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[observed_persons]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>observed_persons</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>estimated_persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[estimated_persons]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>estimated_persons</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>mean_vmt</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>sd_vmt</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sum_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>sum_vmt</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_per_capita]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>vmt_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>super_district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[super_district]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>super_district</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;' value='One Std Dev Above Mean' />
          <alias key='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;' value='One Std Dev Below Mean' />
        </aliases>
      </column>
      <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
      </column>
      <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
      </column>
      <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
      </column>
      <column caption='Upper Bound VMT per Capita' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
      </column>
      <column caption='Lower Bound VMT per Capita' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
      </column>
      <column caption='Weighted VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Vmt Per Capita Category' datatype='integer' name='[Vmt Per Capita (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[vmt_per_capita]' peg='0' size='1' />
      </column>
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
          <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
          <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
          <alias key='&quot;BATS&quot;' value='Observed (2000)' />
          <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
        </aliases>
      </column>
      <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
      <column caption='Super District' datatype='string' name='[super_district]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
      <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.436904' measure-ordering='alphabetic' measure-percentage='0.563097' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:detail:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;2005_05_003&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BATS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;2000_05_002&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CHTS&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;2010_05_003&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:detail:nk]' type='palette'>
            <map to='#02401b'>
              <bucket>&quot;CHTS&quot;</bucket>
            </map>
            <map to='#81a88d'>
              <bucket>&quot;2005_05_003&quot;</bucket>
            </map>
            <map to='#972d15'>
              <bucket>&quot;2010_05_003&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;2000_05_002&quot;</bucket>
            </map>
            <map to='#d8b70a'>
              <bucket>&quot;BATS&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Capita by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' />
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.813093900680542' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='county averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Capita by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='cumulative distributions'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Cumulative Share of Persons by VMT per Capita Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Vmt Per Capita Category' datatype='integer' name='[Vmt Per Capita (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[vmt_per_capita]' peg='0' size='1' />
            </column>
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[vmt_per_capita]' derivation='None' name='[none:vmt_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[pcto:cum:sum:estimated_persons:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Vmt Per Capita (bin)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='8' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='9' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='10' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='11' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='12' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='14' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='level-members' level='[none:detail:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>50.0</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='196' />
            <format attr='title' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='Share of Persons' />
            <format attr='subtitle' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' value='p0.0%' />
            <format attr='cell-w' value='18' />
            <format attr='cell-h' value='18' />
            <format attr='cell' value='18' />
            <format attr='cell-q' value='90' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='-90' />
            <format attr='display' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <shape column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3870'>&#10;Cumulative Share of Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3870'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3870'>&#10;Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3870'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>VMT per Capita by Travel Analysis Zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
            </column>
            <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
            </column>
            <column caption='Upper Bound VMT per Capita' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
            </column>
            <column caption='Lower Bound VMT per Capita' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
            </column>
            <column-instance column='[vmt_per_capita]' derivation='Avg' name='[avg:vmt_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='None' name='[none:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vmt_per_capita]' derivation='None' name='[none:vmt_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[sum:estimated_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='member' level='[none:detail:nk]' member='&quot;2000_05_002&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]' included-values='in-range-or-null'>
            <min>30</min>
            <max>99</max>
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>82.583562721195406</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]' field-type='quantitative' max='-13385662.761443404' min='-13868369.017206812' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]' field-type='quantitative' max='4717637.088082823' min='4371292.6295899199' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='14.0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' palette='tableau-orange-blue' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' />
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' />
              <size column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='900'>TAZ:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='900'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean less One Std Dev:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean VMT Per Capita:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean plus One Std Dev:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Observations:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Persons (est.):&#9;</run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='superdistrict averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Capita by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>Superdistrict</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[super_district]' derivation='None' name='[none:super_district:nk]' pivot='key' type='nominal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Super District' datatype='string' name='[super_district]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]' value='34' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]' value='344' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk])</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='taz averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Capita by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>travel analysis zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]'>
            <groupfilter function='level-members' level='[none:taz:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='88' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='Travel Analysis Zone'>
              <formatted-text>
                <run>Travel Analysis Zone</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok])</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='taz ranges'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Observed Average and plus/minus one standard deviation Vehicle Miles Traveled per Capita by</run>
            <run fontcolor='#000000' fontsize='20' italic='true'> County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>travel analysis zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
            </column>
            <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
            </column>
            <column caption='Upper Bound VMT per Capita' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
            </column>
            <column caption='Lower Bound VMT per Capita' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
            </column>
            <column caption='Weighted VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' />
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]'>
            <groupfilter function='level-members' level='[none:taz:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' direction='DESC' using='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]'>
            <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' value='125' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='64' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='88' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' value='136' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='Travel Analysis Zone' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok])</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' name='county averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='superdistrict averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='195'>
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='taz averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='195'>
            <card mode='typeinlist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' type='filter' />
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='74'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='taz ranges'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
          <strip size='195'>
            <card mode='typeinlist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' type='filter' />
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='113'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='cumulative distributions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='shape' />
          </strip>
          <strip size='200'>
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='83'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' type='size' />
          </strip>
          <strip size='212'>
            <card mode='radiolist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='county averages' width='192'>
      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
      ZtVtJbpTRgYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='superdistrict averages' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9Z4zk55ng9/tXzqm7OucwPTmQHFJiEEkFaoW1Vnfnu/MHw4BhGOcv9gcD
      PsMHw4A+2ICxMLB3e3d7e6eFd723WlHSSiSVGIeT80zn6lTV1VXdFbtyrvpHf+jhkJQoipSm
      e1gz9QMaje76h6fe+j/1vO8T3kfQNE2jQ4fHFN3DFqBDh4dJRwE6PNZ0FKDDY01HATo81nQU
      oMNjTUcBOjzWdBSgw2NNRwE6fGY0TUNVVTRNIxoOI/2BIaTEToS6qHxeKdBUFVXVQFPZ2tzi
      817ho3QUoMNnopqL82d/9q/53n/4t9xeifCjv/5rKrKCpmkfU4yP/v7gZ+/vD4/j3u+33niV
      RL7xueTYja7zr//83/MX//bfsBaJ83d//Xe07t3jA8X4VDk0DU1TUTUNNA3DPo1Xh0eMldkb
      TJ75Ci8dsvGXb1xGJ0i89v99D1P3IUrBq3RNneX4gJnL85t4ekYoBm9Q1XehiCX++Xe+ycVA
      GjkVRNQEvvbKN3jt9V/SKGX4yueU4871i5z92rcZ1mK8ff02kljhP//lnzMwc5bVG+9x+KmX
      8AkFlrdSDB06yfL5n2HrHadarfCt508QLhtJBZdQBCNff/FsxwJ0+Gx0+f2kkgmSiSTd3T2g
      6Xju+S8RTyR45kvPsj5/h+W1NeqihsdpB7XFf/0v/kdeemKG7//DW3zpySME1rbweLvJxrbo
      GjnCYLfrc8vh9/eQiCeIJ5L4/X70BgtfOnuK5G6eZ84+ydLcLIHVFRTBjN1iQjAY+W//+/+B
      k6Nd/OrSAsfH/YSiSXxeH7FIGP13v/vd7z744erwqOHrHUaopYkVNf7kW1/FajeTTGR55Zvf
      oJCO0z95lFe+9jK1QpbRqcP0dnsZHB5neKCHsmzkubNPMDncTVWC51/6KvXdCN6+cSYnJ7Ca
      9J9Zjv7RKUqJIA2Dj1defAaTSU+22ODrL7/AbiLG5NHTfPXF5ynmc0wfPkqX28Xw6BgDvV1o
      Zg9PP/UEvR4LqsnBi195AaGTDNfhcaYzBerwWNNRgA4PhPDyLcKpEtvhIKlMAU3TiITWKVYa
      qIrI2uoqTUmhUSmyHoqgKi3eP3/5c99H01TOn3ufZqPKysoaLUmhWSuzHgyjqBpSs8ZOPIWq
      yITWVymU64DGhfPnUTWV6FYERdNIxaJsRmIdL1CHB8PFa3P8V//NEWY3s7z/1z/gn/+zl7m8
      tEth913OjDioW7q5eHsNKRdiaMBPsvwcyfAq1Reex2EQPvN9WuU00d0Ko9tbZHZCXA9EEFIr
      +Pp7Ce+Wqa1fJKL08S/+8QtkcjlefeM9/tX//N+RKzdZm73MX/ztm/zp//N/Ek8kee/NX3Qs
      QIcHQ1NRsVqcHJ3oQef0kk+lmD5yErVWJrab5syXvkRuJ0ZVhpOHJkjEk7htOgoV6XPdp5pP
      Y/P4GT90nFoxz8hwH4WqxhMnDhFPpHj5qy8B4Orux28X8Pb0U0pt4+kZ5uiTz9DnsoFgoN/v
      QTNaOwrQ4cGgFwTEep4//dM/w+N10T1ylLkrb+EfP8zTT57lje//PSef+zKHB7v55ZV5njh9
      lHpLxW79fJMQq9NDs1pi4erb/OraCkqryfHDvbz+9nXOnjrC1au3SG6tEVha5M//0/exW/UE
      1raYnBolMHubbCHL/MIC127exWw2g9ahwwPgzvlfaGuJ0mc+XpGb2qs//Mnnvo+qSNqrr/5I
      U9TPfs6NKxe1pvzJJ3TcoB0eazpToA6PNR0F6PBY01GADo81HQXo8FhjAO7ndHfo8Lhx3wnb
      arUephwdOjwUOm7QDo81v7EGCMxe48b8KuVkkO+/8e7nulgpGeL7b7z3wIT7dWqFJNdu3GFu
      YRnlE/T28pUrv/G/m9cvI/1eRaN1rlyeBUBTW1y7fgc0jctXrzB7+Qr13+eSjzHVUo7NSIwP
      PrZ4NMzKyiqfuyT4D6SQTbEdT7NXEflrJZGapvLexau0VBOH/suXSO7m2FydZzYQ5sWvfYOl
      25ep1hq4vT4knY0XzkzzzrkLHDr5DFY5z42bN0k2nWws3WFxY4evvvJH+JzWByZ8vZRBMXso
      7oao1SfY3gxicngRWiUSuRrFYoFIcBVv3zDbW5tYnD6KxQJSq85qcAOHx4fUFBnstlHBRa9T
      x/JaEJPNg0mr0xRlzI5uHLom6VKebLECQGJ9geXgDmfOPkmhUETRZNZXAzgsbpwmhVgizczx
      02wsz6JhYLDfj97ZQ2k3xtT0NJ891esRRdO4euMOJ8b8LEVMnBz3s7KxyUsvv4zxs9fC/OGo
      LW7OrjLsNbBjcTDsNX/cArSKMZJ5kUY2RqIsAqAoKrvRVc5dvsO5C1fwO3Wk63punn+Pd371
      UzaiSV574w1++P1/4PSTp/bOUVVioUUu3lp+4O8hm05iMRmYu3GVZFkkFo0SCm1y9pmnKe/u
      cH0pTHp9jkxNJhaNogGBO9cpS7C9HSO2s8VCYAOXy4omCKDBwsI8kY0wIzNH2Vxf4vZCgBPH
      DqG/9211ZynElB9mV6J7/9D0TB0+ykZgAb1OQK5kWNrYIbGbx2tsUVKMLM3NEk+kOg8/gAA9
      XW4yhSKFQhmAqfERrrz3JvH8AdpSnRGf00S+kKNcbSHoDB9XgMD8PCeeOMuZU4fZiKRplAtc
      v3AO1WhFU1WMVjs2swmHw47ZZGJy5gg2i5mvffVlJsb7uHJzAbNBx9X330dntqEp6gOVXxB0
      aIqMJKsMjIyA1GJsYgKT0Yhep8PZNcDRQRey1YPSajI2MYHVaKCrfxCx2WR8fIITE/1sFxVs
      Rj25WIhksYXZbEKn1yMgoNfr8djNBFbD6M16UEXMnj5e/qPvUNheRQfozDo2A0vY3N3Mzy9g
      tdkQBAGDQY9Or8docaGWo/hHZh7o+29nPG4P5YbGkREnF6/NUipVUNFjOlATIODxuJANbrr0
      BW7NLj9ui2CN1dnrmHpnmBzs2re7NGslrt9a4IWXvsLnSHXv8BB4zBSgQ4eP0xYVYZqmIcvy
      wxajwyNI2yiAohywv6zDY0Fb5QJpqkqr1UIUJfZ73taslijX9qLjiqLAbyjh77ZKmqYhiiKy
      oiDL8r7L3OHz01YKkNtZ4d3Ls6QyWRRFQZIkVEVBlGRUde9vWVYQRXHPasgykiyjaSqyLCFJ
      MmI5zd3A5r38pz2FUjUNRZE/PE+RyUTXCKdKAFy4cGHv98WLe/cVRVQVgsHgvYf8g2t88Nre
      o762cJf1zTA78RShYJDcTpCNnT3ZNU1FecBesi8amiLyxg9/Qh3QVJmffv8H9wKIGrO3b3Dz
      +nXq0v5/LUjNKq//9GeIgCLW+fEPf4IEqHKrPaZAH0WSRAwGE2//7Kd0DU/QLJfQCypOh4Wc
      7CAfCzEx6MPaO0UsHMJh0hgZH+fGwiY2vczJ6QEi0RKnj0zQqBSIRrfINUyUEkHGh3pQvGOk
      gwE8FgXjyPhv3P+9t3/FxNQUyWyDWikFzQqiyUEhX6ZZ3mVicoLdksLzz5wktlvgG688BcCv
      3lxE9ZpI6Vpsry9ydKyLinmYmWHfQQ/hgSHoTXgdFhRNY/nuTTBY93Zy1qCYy9KUVJqSgs24
      v4+h0eLAYdajaRp3b93CZLGiATqDub0sAMDgyDgDvV0YzA7OnpohnSsxMDKOw6zH3zeEz+dj
      anyEYiaF3uZhyO8iX27g6fLjdlix2R10+/3oBNjeCiPrjNRKRQxmG9OTI5SLWRS9g8E+//0g
      lqZpqKqMoDOgCAampg4ht/asQypbYGZmBrFRQdUZ915r7gV79IJKS1YRxb2gosvlxt/Ty3CX
      levrGaaGHt2H/+NoKDojyDXy2Szp3SyS3sLEYDel6sEFwlS5hc5ip1ktkM1kyBer7bE36AeL
      YEGnw2y147SZ0esNeLp78dpN1CWVnh4/docLp82Cx+vB6urBZWxRw8bMxCAmkxWf10VXzwC1
      Qhav34/ZoKMhQl9fD91dPrxeHwaLG59do6nq8ff0YrcYcVpNRLbjHD52ErvFjNfrxaDX0+Xz
      cfToDMGNEBOHjuB2OvB6vegNBtxuN4MDvQSDIWpNGX+3l8GRUbLpDBMTQ6QyFabHhx/20O4r
      YqNCtlxF0Jk4MjOD2+3G3+1mN1ehv8tJTdEzPjyIQb+/wZJauUCpVsdodXJ4egqP243bYaJQ
      rrdHHEBVP/wWbXs0jchmkJ6RCWymtpuBPnJ0FKDDY01bKECHDvtF2y2CO3R4kLSVAlTzSSLJ
      AvXSLlux7B90rUuXL/3OY9ZnL5OqqoDG6tI8s7MLyJ9iLwOBlc8lQyQwy3a2+rnOaSc0TSWy
      uddML5dOEAxH7xfElPMZwtH4gQQHVVVmK7zXTK9SyLIZjd2vgW+rVVijnCGatWDyNYgXbNDI
      ki038LvtdA9PkNhaRxUsaK0yw1NTJJMFlGaJhqJjuNvOXGCTmSOHyGWLpDJ5AHLpOJGdOKPT
      J9jeWEBFYObEE0TXltgKBjk9+RyodWaXwvzTf/YnCK0q8+ubWB1eaBaRVRW7b4ixwW42w2GO
      HTuKpsqsLC8jmJ30eixEdxIMTx8htrGCisD0sZPEQqvshEOMOPq4OH+NntFJGuUSdk8XM5Oj
      D3mkHxCawp3LV/FNjKPqjGiFEJv2Lib9Vq7fmWfYa2LH4WWky7avYqiyxM1rNxiYGOH6rXlG
      /Fa2LG7Gu03tZQEAivksu5kcGnvu0Z3QBppeY252llRBZCe6SXInyPXL12hiRNM01laWyKa2
      8U+dYnVxgWMnjmM17b11QRDQyzXuBoLEUruMdVlYnLtLqmlmuL9n76Y6O998+Sle/9GrZGoy
      aBqLi4usb0Y5cvQYodXFj8mYjSwTSlVJxGNogoCm1FhYCrKTzDLmt7C0sky8qDI62IcqNamp
      VlqZLXrGjxLfWKH1iKzKBJ2RLp8bBIHuLh+hWI5+nw00FUGnx+dxkS/tvwU0mKx4XXZABgz4
      PHaKpRpqs9peCiDo9PQPDjM6MoRBp7C8soHdZsXpHyUZXGD6yGG67WAbOk0sGmG0y8DaVgKb
      1YpOb8BsNDLQ42VpOYAmmAAILC9htNgw6fUYjUZ0ej1WdzfNfIzdQgVBAKVZJhhJ0d/XS3Yn
      SK6uYrGYMBqNwF4hDIBekwgEAkhGD2ZBZHRsnJWle9c36vaur9NjtnmQq7ukckV0OgGL2czg
      yBibqwuoFgfGR6SGQKxXSOdyxGNJLr/9OprDTy0X5/KtADajxkokw8TA/tVlfECtlCeTy5FK
      V3BYVJbDWbpMFea3Co+GF6hSyDC/Gua5Lz+D7hF5eDocDI+EAnTo8PvSFovgTkFMh/2ibRSg
      UxDTYT9oq0WwqirI93LoJWn/i2I+SjqdBkCRJer1OpIsU8ikER/tlP5HnrZSgPzOKrNrMQA2
      Q5tIkgSahiTJyJJIS5SQZZlWq4UkSTSbDWRZotkS0dBoNRvIiopy7xhVVWg0mveCIhpiq0lL
      lFAVGVFsIUp7Ls9Go8Hdu3u7xC1df5fV6C7vvvs+a4t3qcp750mygqoo1OsNVE1DbLUQJQlF
      lu7fQxJFGs0WYqPCzTtzqKpGs9FAUdU9uZvN+wr+KKApIq+/+mNqaMQim1w+9xZbqSIAVy6+
      z9ra+oHsDCc1q7z2kzcQNYWVpQWuXLlKU9ob57aYAn0S4cgWu8kYJ08eYWkjTqtRA1XBbtTI
      KxZ0jRzj46OsRPJYdSJHJ4dJ1jSq+SxdZpV404jHrOKwmRHsQ5w6PER8J8p8IMipcR/bLQ/N
      QpJRvwPJ4qPW/DAZr9FoYDRbELQqtXyCufUosiTyzJkjRLeCNA097EYDnDr7LFZBIri6TPfU
      aRZvX6XHbWNwaoZoNIHXrFDW7JTyWUxiia7RKXazVV567qmHOLIPDkFvwue0oSIwODpBKLLD
      WJ8H2JvSVqtVNE1lv7+HjRYHTosBTdBz9MRJrp5/l6asYDHq2ssC/DqHJwZ45+JdJsd6Kddl
      pg4dwoiOJ545i8lkYnxiArfTjdthJZvO0D86jk6TUFWVM09/iWIuh8vXz8iAD+Q6a6EdRGmv
      LNLfN4BJD8lMkempCawfSV2enD7CN776FQSgXswhYuDwzCGCGxvoLWaqlRqnTx5nObDCxvo6
      ZpOeUqWOw+Wl3+8BgwWfz0elWGRkfBJZbCAIOobHxlHE5sMb0H1EkyvIqhlNaZFK53jm2Rdw
      G5psZw42FSQeXgNnPzaaZAuVdiuI0ZPPZqiLEr3dXQyMjKFpApOTk9gMCqKqo6fHj9PlxmY2
      4/Z4MZnM+Lwexqdn2N0J0z88SZfPg8PlZrivm3yhjLfLj9lkQm416Orpo7+vD5vDhctu4cjh
      SYKhCL19fXT5vOgNRhwuDyY92OxW7F2DWJQaOqMVv9eFpBnp6/VRq1boHxzB67Khtzjo6enF
      43LQ5fPhcHehk2uMzRwluR1mdHIGr8eFy+PFYjLhdjkf9pA/EMRGhXylhiAYcdvMGG1uXFY9
      6XyZYjaFZHAyPTaw77GbWrlApd5AbzSzm07jsFvR63Q0Ja094gCdeoAO+0VbT4E6dPhDaQsL
      0KHDftGxAB0ea9pKATRVZmlhjtnZeWot6f7/m8UUN+fXALh57RIN6VN86VKZC1fnfue9Ll26
      hHrPOAaXbhPP1QgtXCNW+DxrEZWLF3534c3jQCm/SzAcRb3XmSW+vcXWduLAd8srZtP35NDg
      1zvEfNGJrswiuEc53q3j/LVZjoz5SGZKzIz5qVSrLC4sUa5UkJo1Qqth9BYXZrVGQ1Yx2buw
      Cw3ypRzF8p7yxLfDxBIZTpw6ytzsCgajgSfPHGV+PsBmZIfnnwcEjWgiibrbYsBWRyerrC4v
      0FANDHlMxIsSrXoFvQ4OnzxDLLSGiInJQR/rWwkSu1ly6TjR7ThD08fo8dgf7iA+DDSVG7fn
      ODXRw2LYwqkJPxa7m+35G3h6B/CaD06UW3fmGPa7iXv99Bnr7WUBGvUmDocNo8WK2KijqSqF
      2CbxQoP5q+9S1zsQ7rnUFFVjeXmRreg249NHiWwEmFte4/iRQ+juvWtNVannY4R20uQqMrpK
      gcXFW1j7pvD73AA0CzFiWZmd7a29c1BRFI3lQIDCbhxr9xCFQoGxLjOLc3dZCKUopBNcvHqb
      w6dO4rSY9s5S6ywtbz6EUfsCIAj0+32kcwXK5QqCoMPjspKuKLhMByiHpqC06iyFdrCbDBis
      zvayAJPHTnDl1hxps8CJMydYuXsVu92OTqfj9HNfp5YOYzWbSESDZCoqNqsVo0mHIAiYTEac
      VgOBjQjme1vxrayu4rbb0et0mExGDAYZ/+AoK6sBas09K7ESCPLtf/IdkguXKEhAPsHG9i4O
      mw29wYim02GxWDAYjNi8LrzlKr3DYxhbeZYWllAEPSuBFdxdHszCQXZD+WLhdDqJx6scmXZy
      6doche0FusZOUG+KOK0HpQUaNqcHl1shFl5lS7B3vEAdHm/aagrUocODxgB7q/JGo/GwZfmt
      7G1O++hkSXb44tAWU6BOKkSH/eI3pkCKLFGpVO/7wH8fZEmkWq2xH7oltlr3G1D8Oq1W6xP9
      yrVSjnL9symQWCuRL+1t2V2vValU98ai1Wp98gmaRjKV+kzX7vDF42PZoIpY4y/+3V+QLxRw
      945gEhQkWUOHSqt1r+CkmeOHr51jZnocSZJQVA2x1UDRwGDQ0yxn+Iv/+P9SKJboHR4DuYWq
      CegFgVq1CoLKD/7uVSaPHEGVWrRkBdPvaJDwYUmkxtuv/wDR2ovPYaYlttAQWJ6/jcHuJb4T
      pbvLR61Ww2AwoqkqtXqDTDRAWrThtZsw6PWoqkKtWkNvNKFIEs1GA4PRiCJL7EbXiBR1DPW4
      +fnPX8fjsrESjNFsVIlsrOPs6ub2zZv09vUjNhsg6Lhy7RoDAwMYjUYkSUZTFTThnrJqAs1G
      DVFSMJmM+/tpfsEopONsbIZJ5yvkk1HCmyFMrl5sZj3rK0sEVlboHRrHuM8rUalZ5Y3Xfsnk
      sSPM37rG9nYMl78Ps/7XCmLSm8vouif5zj/6DtXMNv/m3/8Ugybx0vNP89r7dzGLRV555WXm
      lpY4PGjlh29e5dvf/jaFxCazgW3+9//jX7K5PEvP1BN859tfIb21zF///BKq1OK5p45w/tY6
      3/r689ydX+DMc8+T3Fjk8o05/qf/9V/R7fjd0RCpXsDSPUZsc41WXMbgHyWTTKLUsrgHJtna
      2qJZymL19pLOFNBLFfpGJlEVlWIhx/nQEt985Ws0qmV2tsOkynrqu2EOT4+S0TxUYkH6vCZw
      7G2IJUsilUoVp9PL1tY6SrXM0KEZYjsxpkf83FxN8uzZ0zRqVXaCizRMXWRjafpdIt7Rw7z3
      7lUOjXVhcHaTShf4kz96aV8+4C8q3t5BHE4b52+uoFOavHh2hmsbEXrOHmZkeIhgaOtAIsFG
      iwOXzYQGlAt5ai0VUVaRlfLHp0Bufx/5RJRUMkYsHsfo7MFr1ihWm/QNT9Dvs2D39ODu6sHn
      tDJ5/ClOjDhZ3ohQSMeoS9Dd109iO0witk08nsDdM4JJqWHrGqbXrrKda+D3eOnxWrg7F6BW
      zFOofrYFeHh9DYPFTqWQoSEJ9A8OI6gSDocLr3svcFUq1xgZG6VVL1NttBgbGcKgE/D39GPS
      gwZEQhtIOjPNagmDycr46CC1WglZNdLb/WHXFoe7ixOnnuTk0Ym9vx1uvF1deDweuvvHmBny
      srIWxGy1M9Tvp1JtIuhUJHkvhjA0McNor5dcvsKTZ04+gI+yvVBlkffPX+XLX34anSBQq9aw
      Wg0kUhk0g4WxXieZYu0ABRIRBRszoz1k0mlyldbHp0Amq5vJQS8rG1Gmjj+B3yzhGz/J6SPj
      uD1djA4PMjA+g8/YwuTuY3BggMGBfgTg1BNPMDI8hMvXQ7/LQCia4vhTX8IkFpg89WWGu+00
      FCPPnH2KiSEfpaaOQb+HmeOnGBsbwfIp06APpkAtWePI0RkG/R4MdjfdPi82q5mx4UEyhTJ9
      /i4OH5okHI4wc/QEw31dhKNxvP5eXG43LocVl8uF2WSk0VIZHOjD392F2+vDZHbQ67NQl/X0
      9PTgsJowmUx4PJ69sTGZmBgfYjdfY7DHTbXWpN6SGB0bx2nRU6hrnD5xBEFpYLR78Pt7sdut
      1EsFugYGWZyfY+bQ9H5/xF8oStkkTc0AGkwO9xHLNzg2NUS+VKWcS4PFy/hQLzph/zvEVJst
      9CY7vV4bNcnAYI+HhmrseIH2m2oxSyS+i7erh8G+7octTodfo6MAHR5r2kIBOnTYLzqpEB0e
      a9pKATRVJrA4z9z8IqL8+6ZGSFw4f+V3HrV4/QK5pgpylYtX76JpGleufPJ52UwWVaqxuhH5
      PWV6NNE0hY2VNSQ0dpM7rG6EUO4FMaPhDVZWVg9kYyxVllhf20AB6pUiKytrtOS9G7dVOvT2
      6hyaa5TTo37ERpm7CyGsDg82oUW5pWAwO+i2C8TSRcYnxwiHNjHZnHRbdSxuRJiaGqNSrZEv
      VQDIJGNEd2KMHT5FaOk2gs7EiSefZH1xnshmhN7TXwGlyc0bd3jq+CC3lzZ55okTrAS3MNt9
      KLUMu6Ua25shvvnHf4QiKczevoEg6BicPk4pEabSVBkfHWBjNYB//AQTA49Lc2xA01iZnaXv
      6AwWmwt2ZtlM93Co38naxibPvfAipgPIENc0laW5OcYOT3Ht+k1OP/HUfc9TW1mAer2J3W5F
      EARWZu/SN3mE9PYGkUiMvvFDxCJBbs8tc/rMKXY35nEPzZCLR0jFNxk9/gzrK2ucOHEE072K
      GE1VQKywvLFNJl+kxyazurxIRef9mMdmZryHN96+w9REP6qmoagQCCyxGd3hK8+/QFd3N90e
      M9vbKeLJDEdGu1haW+Hu/Dqtah7ZYKdQrDHU631YQ/dQEHQG3C4HIGA16YlnK5jvPfDHjh5h
      /voFtnP7HwfQG8047VZAJp8rsRNaIpwoAG1mASaPneTa7XkKDhvdg8NsriwhmN3YBQm9AGaz
      mV6vg7m5efz+IcIbS6gGKzarhtFooL/bzXJgA4NlL+q8vr6Ox+1A1OuxmC0YjCac3gF2V1eo
      15tMCICgw9M/xbRbz25ml/R2kKpkxm6zoUNCrxNw2S2kc2XMZhOq3oKgM2C1uun1O3F29VOM
      zCMZHZTKFfxe18MdxANErFfIFoskYknkXAKXy0mzkuFiKIjbrCFpehyW/U8PqZXy5IpFUuky
      E2P9NCQFWy3N3UCp4wXq8HjTVlOgDh0eNG0xBep0iOmwX7SNAnQ6xHTYD9pqCqTKEsVCkeZH
      NsX6bWiqQrMlkkgkyKRSiJ+j8UStmKF0r4BGbDYoVz69uKfZqFMoFpHkjpK2G22lAPn4OreW
      w9y5fpFsuUmtWqHRFJEkkXqtSrMl0Ww20TSVZr1CNJZifmGBYGCJuqTQqNdotvYebEWWKJZK
      96q9mpTL5XudXRpsBwPEcnVA4vz7l8ikkkiqRqVcoiXJtMQW9WoFUdp74K+cO0elXuP98xdR
      ZJFSae9azWaDcqVKs16jJe4VypRLZVR1756Vcvl+YOhRpJCOs7Awz3xgg8D8XW5cvUy6uJf6
      fun8uwfaIeYnP/opIipboQ3e/tXP2S3vydEWU6CP4vF1M+WxEdyK4bdrLK1sMNXvoGbtp5iK
      YRBUjk8NkSiJJPIfNpuoFxLcWtlGkVt84xtfo14pEd/aICB0k9laZGasH9k1TCy0Tpe5xd7+
      bQasJo2teIrhkUESyRQb4W08gkjfkeNsRxb52ovPgaaSSScxWh2UiwWioRUU5yiR9Xl6XWas
      fdPkd1O4TCrdA0MsrAQppiMcmRmnqPh46vjYQxrN/cXbO4jdYeXC7VV08gcFMVF6z84gCDoq
      5fLeZgf6/e8Q47ab0dAxNj5KNJHB77ICSntZgA9IpbI4rRqh7TTIMqoG/r5B9NWyo6wAACAA
      SURBVILGeJ+XSwsRDo/3AyAIIAgCzVoZ1WDh1MkT6AXYWFtBZ7ZSq1QwWe0MD/RQLxfQjA58
      nj1fvabKnHz6BUacCncXAiTzdRRJBFVH38gwqHvWRNCbGO7zYTTbWV0JYLJZqVZqWO1O+nu6
      8PUOoNMUKrUmQ4ODNGsVDGYrQ8P9tGr1hzaO+40qt3j/wjWevdfAvFqpYrMaiSV2OXP2y7gN
      LWK5g+0QU80nMTn8iPUSqXShvTrE6PQGCrldnN1DTI70I7Ua9A4M0dvbi9PpxGm3MjQygt5o
      oc/fhdlqpcfnYWCwH5t3ALuuhSIY8HhcWM1GWqqeof5eurt9eLw+LM4ufFYNxWCj19+DxSCw
      HQmDtYujM2M0azWGRobp6+3B5XZjNZtxOZ2YzRZ6BkdBbtDb040smBns66Wry0OXrwu7fU+2
      melxwpEdjhw/gdtpx+3xYbFYcditD3uI94VSLk1LM6KpGlOj/cQLLY5NDVIqN6gUdlHMHqZG
      +tjnehhq5QK1lojeYMZhteDweDEJMtWW3B6BsE49QIf9oi2nQB06PCjawgJ06LBfdCxAh8ea
      tlKASjbGpau3uHX7LvndONFk/v5rVy+do/n7ZEvUM5y7sfg7Dzv3/vsANPJxzl+5yfpmhNnL
      5yiKe4v0jZVF5udm7wfQfh1NVQisrFHI7vJpDWweJTRVYXUpgKRppGJRVjc273eI2d4KEdra
      OZB9gRRZZCWwhnKvY/16aOv+zodtFQdoVvMYXb3ockGyVRcGs4XA4hyC2UW9UmY9MI/N00c1
      E92L3JrsqIrGzFgvG1txHN5ulGoWVdBhdvZiEAvUKnlqjb306Hh0k514mhOnj3PnzjJGk5Gn
      nzjK7NwKkZ0kAGKtQEM1MdDXw1JoEUWDZn6bWFnHy8+cQVMlFudnwWjHqDVIZCt47XrqshGH
      zcLVc28x/sw30Nd2qTVlZo6dPJCU4IeDRnBxkcHjR7E43Bh2l9hM9zDVa8fl87N65ypdA8P7
      3yFGg9WlRSaPzeDu6mH79lV8fQP4Heb2sgAAO6EAmwURFzXi22HiRZmjM5Og13Po6CG21kMk
      EhmmR3upyUbKuSTXb89y+MQpIusBIvEE00cOs7WxTmAjzLGZyfvXlmWJeiHBVjxDqQH6SoHF
      pVs4hw/f7xgDoCgyykdSK6RmHZPVhiAIZCMrbO3WyWWzxMNRzr7wHDvJXZ59+jTbsThut4d+
      v5uteI6ZUR+zi49u1xhBZ8DptIMg4HbaWd/OMdRtRxB0OCwG0lXtQDrE6I0mHDYLIKDXZEq1
      FoIGzWq2vSyATm9k8sgpmskV6rIOu8ePlAixvLqB2bJXKWaxmNELFnQGIxazht5ipb+vm6WF
      eRy+XqRGAYG94xwWlZVwDId571MIhcI4HQ4MBj1WixmTTqZvZIzlwBKte/MWQW9EamZJpTO4
      3G6azSa+/mnYvMLCXBF/bw82fZHB4XGyYgODXofdZkcngNViwe91EU9mcZoFlte3mTh05mEO
      6b4i1ivkymUSsSSZ5RuYvH1UsnFuh7MUY0v4D6hDTK2Up1Auk0qmyCdiOBx2iqktoqK54wXq
      8HjTdlOgDh0eJG0xBeoUxHTYL9pGAToFMR32g7aaArWaDdR7/cxURaYlflgYk04lkD5L0Yum
      US4WqDd+S8eXe8TjMTqro0eftlKA1blbZAoF/v7Vn7K7s85GLE+5WKDREtlYDVBvtqhVq1Sq
      dSSxiaSoNJtNwss3WYlk0IDA/C1S+Qr5fJ5ms0mlUkVqNSmVq2gaVMtFmqLE0tIiiizSFH93
      9VmHT0ZTRH7yn39ADQitLrGwsEChulewFFic48L5i7QOqCDmx6/+w/2CmLd+8bP2LIgZGuhm
      cWGJHn8Xq1sZTj45SmY3wfLaTXx2PdXMNvOhHCalwmCXBePQU2wHbuK3tFAsYwAkMiW+fvoZ
      BAHe/sVP8Q1Nk49vYzEJeHoGyFZEpEYVTVM5/967nH3xG1gOspv5I4SgN+H3uVDRWF3fYHR0
      DFFSEAQdx06c5sI7v0JSub9Z1n5htDjwOq0fKYjJ4ndZ0VSpvSyAt3eQ4HqIp8/MsBFNI9R3
      iabKqIrMB0nlHm8XVosBvcGILImIkozNZsPhcABgM+ooNVpUKhUEo4UzJ2eoNyQOHT+DVa1j
      dXh44vQpxEoRUdN1pkEPCJvDzeSYn42NTbbjacJrC9j7p3EccBC8mktgcnYj1krsxJLtEQf4
      sB5AIxjcZGpylFA4xsRIHxubUcw2O167EUUwoGAEqY7X6yEUjmJ3OBnwuwnvZDg0NY4qt9gM
      hzHZPBh1Cv0DQ+TTcTKlBtNTY0Q2Q1icXQhKi74eH+lCk4Hex2g/zweI2KgQWA3i7R3E7zQS
      jWeZHB8inS1TysYxmO0Mj03g2O9AWLnAemiLvqFRfDYdVcWM0yCSr7dJOnSnIKbDfnG/U7wk
      fXEXe190+Tq0L4K2RyfQ1OGxpC2mQB067Bcf8wKp9Rx//eobaJrKaz/4G4rN3zxhZ32O87cC
      ByXfx6hkd7i1sI4mN7lw+TpbwTXi0TXuLEc59957AMzNzaEBS4uL9z04UjnFxdvLvPfeud/r
      vtXkBjeXo6BprAcWmJudpfI5qm/eO/cemfgW6UKV9G7m95KhHdFUmeX5RUT2CmAWF+ZI5coA
      bAXXDqxDjCK1WF4KoNyTYy0YRtU0NE35eBxAE2tcfOeXnDk6wpvnrnD2lX/KpV+9BQ4/xwbs
      3F4O4ff7sXr6eOMnP0SUFE49+3UOjfTs/7sAmtUCi8sRBhwKO6kMfT4HRj20RCONxt7+OtXc
      LpVahWSmhCcSYieZ4dj0II2WiNhoUMwkiMTSuDxu6i1wG1q4hg5hksoEw1sYHX7EYhK9QY+1
      axSxsEOtkKLpOLSnWEtLvPjN7+Aw61hdXqAigt+q4h0/TSy0gsUINVFgeryfjVAEs6OLeqOB
      IknUClkuXbnKd/74FTbDUcx2FyePHjqQsXs4CGytrjJy+iQj45PEL1/Yqw9AYz24ydPPvnAg
      HWIQBIIrK0yfOEqXv5+dm5fJ9w/SZTf+Zhxgcmaav//bHzEzM3av8EPh3Z/9gu1kBNHcjc/Y
      Ymsnyd25ZQ6N93Jz9mCtQa/Xxtxmhm63hd1UHFH++AzuyPQQVy5eYWjqMKLYoprZIp7/MO3h
      9u3bCAYThVKd5E6IzVgKp1mHIkvImo71lWV2kimOnphmc2WNzWiKQxMjwN4GW//Fn3yHpavv
      sBxO0BJl1tfXyaVjNGSNRCKJ2GxQLBZpiRKKqrK2tgpAOZempbPQ09vDzsYCvRPHyUU3aT7C
      E1BBp7+/55GmSlSaYL/3xJ8+c5qNuWtEswfQIcZgwmY1AwKCKlJpiGiqhiDoPm4BBJ2B3uFD
      fOtrg2yv3qFVyhDaTtPf043Zaqff2Y/DnMfR1OHr6sZms2O1HFySmt5gYvzQDCZBJZ3cxqzT
      sNqcCNUWVosVVYOu4Wl237vFV1/p4sq5W9gdbiw2O0ZKGK0Wxgd7yNRFxkbHcQtVtqpmdIJA
      ejuCJNhwOB3oVREEPVarHYuhTjSZw2IbRdNklhaXcXf3YtOJrKSLuF0u+of6Ca0sgcGEze6A
      7A5bW2Fa2HA67Bg1PZrejNlkwoiMr3+arbUFdE4v5n3eFOphItYr5CsVErEk0z49Zmc3SiPP
      lbkt3GaNpqrHZdv/MHutlKdYqdwviLE77JR3I2yF2mRjrH1Blbh14ybTp57Ga+/kOjyuPL4K
      0KEDbZIM1wmEddgv2kYBVPUx2Uynw4HSFgrwAYok0lLAbABZ1WE2tZX4Hb6AtFU6dCGxwauv
      v0tpN8JyKEmrUaNQqiC2GkiKSqNRp9VskMnmkaUW7777Lo2mSLlUoN789AqwDg8eTRH58d9+
      n+q9Hdnef+vnbKWKHxbEvH+e5gEVxPzoBz++XxDz5s/faM+CGICRPh9La2HsvlEuXg8z0m2j
      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
    </thumbnail>
    <thumbnail height='192' name='taz averages' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='taz ranges' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='cumulative distributions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
