; Implementation of BuildAirPaxMatrices for Scenario B-1 of the RASPA Study (http://mtc.ca.gov/planning/air_plan/RASPA-2011_update/Volume_2-Major_Reports.pdf)
; ----------------------------------------------------------------------------------------------------------------
;
; BuildAirPaxMatrices.job
;
; TP+ script that creates air passenger vehicle trip tables for the Bay Area's three major airports, namely SFO,
; OAK, and SJC.  Geoff Gosling, a consultant, created vehicle trip tables segmented by time of day, travel mode,
; and access/egress direction (i.e. to the airport or from the airport) for years 2007 and 2035.  The tables are
; based on a 2006 Air Passenger survey, which was conducted at SFO and OAK (but not SJC).  The five time
; periods correspond to the time periods used by the travel model and are as follows: (a) early AM, before 6 am; 
; (b) AM peak period, 6 am to 10 am; (c) midday, 10 am to 3 pm; (d) PM peak period, 3 pm to 7 pm; and, (e) evening, 
; after 7 pm.  The travel modes are as follows: (a) escort (drive alone, shared ride 2, and shared ride 3+); (b) 
; park (da, sr2, & sr3+); (c) rental car (da, sr2, & sr3+); (d) taxi ((da, sr2, & sr3+); (e) limo (da, sr2, & sr3+);
; (f) shared ride van (all assumed to be sr3); (g) hotel shuttle (all assumed to be sr3); and, (h) charter bus (all
; assumed to be sr3).  The shared ride van, hotel shuttle, and charter bus modes are assumed to have no deadhead travel. 
; The return escort trip is included, as are the deadhead limo and taxi trips. 
;
; The scripts reads in DBF files created from Mr. Gosling's Excel files, then creates a Cube matrix for each of the
; DBF file.  Next, a highway-assignment ready matrix file is creating for each time-of-day interval.  Here, we 
; assume that no air passengers use HOT lanes (probably not exactly true in certain future year scenarios, but the 
; assumption is made here as a simplification).  Simple linear interpolations are used to estimate vehicle demand in
; years other than 2007 and 2035, including 2015, 2020, 2025, 2030, and 2040.  The 2007 table is used for years 2000,
; 2005, and 2010.
;
; Transit travel to the airports is not included in these vehicle trip tables.
;
;
; Input:  (A)  Year-, access/egress-, and airport-specific database file with 90 columns of data for each TAZ.  There
;              are 18 columns for each time-of-day interval as follows:
;            (1)   Escort, drive alone
;            (2)   Escort, shared ride 2
;            (3)   Escort, shared ride 3+
;            (4)   Park, drive alone
;            (5)   Park, shared ride 2
;            (6)   Park, shared ride 3+
;            (7)   Rental car, drive alone
;            (8)   Rental car, shared ride 2
;            (9)   Rental car, shared ride 3+
;            (10)  Taxi, drive alone
;            (11)  Taxi, shared ride 2
;            (12)  Taxi, shared ride 3+
;            (13)  Limo, drive alone
;            (14)  Limo, shared ride 2
;            (15)  Limo, shared ride 3+
;            (16)  Shared ride van, shared ride 3+
;            (17)  Hotel shuttle, shared ride 3+
;            (18)  Charter bus, shared ride 3+
;
;
; Output: (A) For each forecast year (2007, 2015, 2020, 2025, 2030, 2035, and 2040), five time-of-day-specific
;             tables, each containing origin/destination vehicle matrices for the following modes:
;           (1) drive alone (DA)
;           (2) shared ride 2 (SR2)
;           (3) shared ride 3+ (SR3)
;           (4) drive alone and willing to pay a value toll (DATOLL)
;           (5) shared ride 2 and willing to pay a value toll (SR2TOLL)
;           (6) shared ride 3+ and willing to pay a value toll (SR3TOLL)
;
; Notes:  (1)
;
; See also: (1) HwyAssign.job, which performs highway assignments; 
;
; version:  Travel Model One (v 0.3)
; authors:  dto (2011 12 14)
;
;
; ----------------------------------------------------------------------------------------------------------------

/*

; step 1: read in each of the year 2007 and 2035 files from Geoff Gosling and convert to Cube matrices
loop year = 1,2

   if (year = 1) token_year = '2007'
   if (year = 2) token_year = '2035b'
   
   loop airport = 1,3
   
      if (airport = 1) token_airport = 'SFO'
      if (airport = 2) token_airport = 'OAK'
      if (airport = 3) token_airport = 'SJC'
   
      loop toFrom = 1,2
      
         if (toFrom = 1) token_toFrom = 'to'
         if (toFrom = 2) token_toFrom = 'from'
         
         
         run pgm = matrix
         
            filei mati[1] = .\GoslingSummaries\@token_year@_@token_toFrom@@token_airport@.DBF, pattern = IJM:V, fields = Orig,Dest,0,
             			        EA_Es_DA,EA_Es_S2,EA_Es_S3,EA_Pk_DA,EA_Pk_S2,EA_Pk_S3,EA_Rn_DA,EA_Rn_S2,EA_Rn_S3,EA_Tx_DA,EA_Tx_S2,EA_Tx_S3,EA_Li_DA,EA_Li_S2,EA_Li_S3,EA_Vn_S3,EA_Ht_S3,EA_Ch_S3,
                                        AM_Es_DA,AM_Es_S2,AM_Es_S3,AM_Pk_DA,AM_Pk_S2,AM_Pk_S3,AM_Rn_DA,AM_Rn_S2,AM_Rn_S3,AM_Tx_DA,AM_Tx_S2,AM_Tx_S3,AM_Li_DA,AM_Li_S2,AM_Li_S3,AM_Vn_S3,AM_Ht_S3,AM_Ch_S3,
                                        MD_Es_DA,MD_Es_S2,MD_Es_S3,MD_Pk_DA,MD_Pk_S2,MD_Pk_S3,MD_Rn_DA,MD_Rn_S2,MD_Rn_S3,MD_Tx_DA,MD_Tx_S2,MD_Tx_S3,MD_Li_DA,MD_Li_S2,MD_Li_S3,MD_Vn_S3,MD_Ht_S3,MD_Ch_S3,
                                        PM_Es_DA,PM_Es_S2,PM_Es_S3,PM_Pk_DA,PM_Pk_S2,PM_Pk_S3,PM_Rn_DA,PM_Rn_S2,PM_Rn_S3,PM_Tx_DA,PM_Tx_S2,PM_Tx_S3,PM_Li_DA,PM_Li_S2,PM_Li_S3,PM_Vn_S3,PM_Ht_S3,PM_Ch_S3,
                                        EV_Es_DA,EV_Es_S2,EV_Es_S3,EV_Pk_DA,EV_Pk_S2,EV_Pk_S3,EV_Rn_DA,EV_Rn_S2,EV_Rn_S3,EV_Tx_DA,EV_Tx_S2,EV_Tx_S3,EV_Li_DA,EV_Li_S2,EV_Li_S3,EV_Vn_S3,EV_Ht_S3,EV_Ch_S3
         
                          
            fileo mato = @token_year@_@token_toFrom@@token_airport@.mtx, mo = 1-90, name = 
            	         EA_Escort_DA,EA_Escort_S2,EA_Escort_S3,EA_Park_DA,EA_Park_S2,EA_Park_S3,EA_Rent_DA,EA_Rent_S2,EA_Rent_S3,EA_Taxi_DA,EA_Taxi_S2,EA_Taxi_S3,EA_Limo_DA,EA_Limo_S2,EA_Limo_S3,EA_Van_S3,EA_Hotel_S3,EA_Chart_S3,
                         AM_Escort_DA,AM_Escort_S2,AM_Escort_S3,AM_Park_DA,AM_Park_S2,AM_Park_S3,AM_Rent_DA,AM_Rent_S2,AM_Rent_S3,AM_Taxi_DA,AM_Taxi_S2,AM_Taxi_S3,AM_Limo_DA,AM_Limo_S2,AM_Limo_S3,AM_Van_S3,AM_Hotel_S3,AM_Chart_S3,
                         MD_Escort_DA,MD_Escort_S2,MD_Escort_S3,MD_Park_DA,MD_Park_S2,MD_Park_S3,MD_Rent_DA,MD_Rent_S2,MD_Rent_S3,MD_Taxi_DA,MD_Taxi_S2,MD_Taxi_S3,MD_Limo_DA,MD_Limo_S2,MD_Limo_S3,MD_Van_S3,MD_Hotel_S3,MD_Chart_S3,
                         PM_Escort_DA,PM_Escort_S2,PM_Escort_S3,PM_Park_DA,PM_Park_S2,PM_Park_S3,PM_Rent_DA,PM_Rent_S2,PM_Rent_S3,PM_Taxi_DA,PM_Taxi_S2,PM_Taxi_S3,PM_Limo_DA,PM_Limo_S2,PM_Limo_S3,PM_Van_S3,PM_Hotel_S3,PM_Chart_S3,
                         EV_Escort_DA,EV_Escort_S2,EV_Escort_S3,EV_Park_DA,EV_Park_S2,EV_Park_S3,EV_Rent_DA,EV_Rent_S2,EV_Rent_S3,EV_Taxi_DA,EV_Taxi_S2,EV_Taxi_S3,EV_Limo_DA,EV_Limo_S2,EV_Limo_S3,EV_Van_S3,EV_Hotel_S3,EV_Chart_S3
         
            zones = 1454
            
            mw[1]  = mi.1.1
            mw[2]  = mi.1.2
            mw[3]  = mi.1.3
            mw[4]  = mi.1.4
            mw[5]  = mi.1.5
            mw[6]  = mi.1.6
            mw[7]  = mi.1.7
            mw[8]  = mi.1.8
            mw[9]  = mi.1.9
            mw[10] = mi.1.10
            mw[11] = mi.1.11
            mw[12] = mi.1.12
            mw[13] = mi.1.13
            mw[14] = mi.1.14
            mw[15] = mi.1.15
            mw[16] = mi.1.16
            mw[17] = mi.1.17
            mw[18] = mi.1.18
            mw[19] = mi.1.19
            mw[20] = mi.1.20
            mw[21] = mi.1.21
            mw[22] = mi.1.22
            mw[23] = mi.1.23
            mw[24] = mi.1.24
            mw[25] = mi.1.25
            mw[26] = mi.1.26
            mw[27] = mi.1.27
            mw[28] = mi.1.28
            mw[29] = mi.1.29
            mw[30] = mi.1.30
            mw[31] = mi.1.31
            mw[32] = mi.1.32
            mw[33] = mi.1.33
            mw[34] = mi.1.34
            mw[35] = mi.1.35
            mw[36] = mi.1.36
            mw[37] = mi.1.37
            mw[38] = mi.1.38
            mw[39] = mi.1.39
            mw[40] = mi.1.40
            mw[41] = mi.1.41
            mw[42] = mi.1.42
            mw[43] = mi.1.43
            mw[44] = mi.1.44
            mw[45] = mi.1.45
            mw[46] = mi.1.46
            mw[47] = mi.1.47
            mw[48] = mi.1.48
            mw[49] = mi.1.49
            mw[50] = mi.1.50
            mw[51] = mi.1.51
            mw[52] = mi.1.52
            mw[53] = mi.1.53
            mw[54] = mi.1.54
            mw[55] = mi.1.55
            mw[56] = mi.1.56
            mw[57] = mi.1.57
            mw[58] = mi.1.58
            mw[59] = mi.1.59
            mw[60] = mi.1.60
            mw[61] = mi.1.61
            mw[62] = mi.1.62
            mw[63] = mi.1.63
            mw[64] = mi.1.64
            mw[65] = mi.1.65
            mw[66] = mi.1.66
            mw[67] = mi.1.67
            mw[68] = mi.1.68
            mw[69] = mi.1.69
            mw[70] = mi.1.70
            mw[71] = mi.1.71
            mw[72] = mi.1.72
            mw[73] = mi.1.73
            mw[74] = mi.1.74
            mw[75] = mi.1.75
            mw[76] = mi.1.76
            mw[77] = mi.1.77
            mw[78] = mi.1.78
            mw[79] = mi.1.79
            mw[80] = mi.1.80
            mw[81] = mi.1.81
            mw[82] = mi.1.82
            mw[83] = mi.1.83
            mw[84] = mi.1.84
            mw[85] = mi.1.85
            mw[86] = mi.1.86
            mw[87] = mi.1.87
            mw[88] = mi.1.88
            mw[89] = mi.1.89
            mw[90] = mi.1.90
            
         
         endrun
   
      
      endloop ; toFrom
      
   endloop ; airport
   
   
   ; step 2: build time-of-day- and vehicle-occupancy-specific year 2007 and 2035 trip tables for assignment
   run pgm = matrix
   
      filei mati[1] = @token_year@_toSFO.mtx
      filei mati[2] = @token_year@_fromSFO.mtx
      
      filei mati[3] = @token_year@_toOAK.mtx
      filei mati[4] = @token_year@_fromOAK.mtx
      
      filei mati[5] = @token_year@_toSJC.mtx
      filei mati[6] = @token_year@_fromSJC.mtx
      
      fileo mato[1] = @token_year@_tripsAirPaxEA.tpp, mo =  1- 6, name =  DA, SR2, SR3, DATOLL, SR2TOLL, SR3TOLL
      fileo mato[2] = @token_year@_tripsAirPaxAM.tpp, mo =  7-12, name =  DA, SR2, SR3, DATOLL, SR2TOLL, SR3TOLL
      fileo mato[3] = @token_year@_tripsAirPaxMD.tpp, mo = 13-18, name =  DA, SR2, SR3, DATOLL, SR2TOLL, SR3TOLL
      fileo mato[4] = @token_year@_tripsAirPaxPM.tpp, mo = 19-24, name =  DA, SR2, SR3, DATOLL, SR2TOLL, SR3TOLL
      fileo mato[5] = @token_year@_tripsAirPaxEV.tpp, mo = 25-30, name =  DA, SR2, SR3, DATOLL, SR2TOLL, SR3TOLL
         
      ; combine early AM trips by occupancy ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ;   - drive alone free
      mw[1] = mi.1.EA_Escort_DA + mi.1.EA_Park_DA + mi.1.EA_Rent_DA + mi.1.EA_Taxi_DA + mi.1.EA_Limo_DA +
              mi.2.EA_Escort_DA + mi.2.EA_Park_DA + mi.2.EA_Rent_DA + mi.2.EA_Taxi_DA + mi.2.EA_Limo_DA +
              mi.3.EA_Escort_DA + mi.3.EA_Park_DA + mi.3.EA_Rent_DA + mi.3.EA_Taxi_DA + mi.3.EA_Limo_DA + 
              mi.4.EA_Escort_DA + mi.4.EA_Park_DA + mi.4.EA_Rent_DA + mi.4.EA_Taxi_DA + mi.4.EA_Limo_DA +
              mi.5.EA_Escort_DA + mi.5.EA_Park_DA + mi.5.EA_Rent_DA + mi.5.EA_Taxi_DA + mi.5.EA_Limo_DA +
              mi.6.EA_Escort_DA + mi.6.EA_Park_DA + mi.6.EA_Rent_DA + mi.6.EA_Taxi_DA + mi.6.EA_Limo_DA
              
      ;   - shared ride 2 free
      mw[2] = mi.1.EA_Escort_S2 + mi.1.EA_Park_S2 + mi.1.EA_Rent_S2 + mi.1.EA_Taxi_S2 + mi.1.EA_Limo_S2 +
              mi.2.EA_Escort_S2 + mi.2.EA_Park_S2 + mi.2.EA_Rent_S2 + mi.2.EA_Taxi_S2 + mi.2.EA_Limo_S2 +
              mi.3.EA_Escort_S2 + mi.3.EA_Park_S2 + mi.3.EA_Rent_S2 + mi.3.EA_Taxi_S2 + mi.3.EA_Limo_S2 +
              mi.4.EA_Escort_S2 + mi.4.EA_Park_S2 + mi.4.EA_Rent_S2 + mi.4.EA_Taxi_S2 + mi.4.EA_Limo_S2 +
              mi.5.EA_Escort_S2 + mi.5.EA_Park_S2 + mi.5.EA_Rent_S2 + mi.5.EA_Taxi_S2 + mi.5.EA_Limo_S2 +
              mi.6.EA_Escort_S2 + mi.6.EA_Park_S2 + mi.6.EA_Rent_S2 + mi.6.EA_Taxi_S2 + mi.6.EA_Limo_S2
              
      ;   - shared ride 3 free
      mw[3] = mi.1.EA_Escort_S3 + mi.1.EA_Park_S3 + mi.1.EA_Rent_S3 + mi.1.EA_Taxi_S3 + mi.1.EA_Limo_S3 + mi.1.EA_Van_S3 + mi.1.EA_Hotel_S3 + mi.1.EA_Chart_S3 +
              mi.2.EA_Escort_S3 + mi.2.EA_Park_S3 + mi.2.EA_Rent_S3 + mi.2.EA_Taxi_S3 + mi.2.EA_Limo_S3 + mi.2.EA_Van_S3 + mi.2.EA_Hotel_S3 + mi.2.EA_Chart_S3 +
              mi.3.EA_Escort_S3 + mi.3.EA_Park_S3 + mi.3.EA_Rent_S3 + mi.3.EA_Taxi_S3 + mi.3.EA_Limo_S3 + mi.3.EA_Van_S3 + mi.3.EA_Hotel_S3 + mi.3.EA_Chart_S3 +
              mi.4.EA_Escort_S3 + mi.4.EA_Park_S3 + mi.4.EA_Rent_S3 + mi.4.EA_Taxi_S3 + mi.4.EA_Limo_S3 + mi.4.EA_Van_S3 + mi.4.EA_Hotel_S3 + mi.4.EA_Chart_S3 +
              mi.5.EA_Escort_S3 + mi.5.EA_Park_S3 + mi.5.EA_Rent_S3 + mi.5.EA_Taxi_S3 + mi.5.EA_Limo_S3 + mi.5.EA_Van_S3 + mi.5.EA_Hotel_S3 + mi.5.EA_Chart_S3 +
              mi.6.EA_Escort_S3 + mi.6.EA_Park_S3 + mi.6.EA_Rent_S3 + mi.6.EA_Taxi_S3 + mi.6.EA_Limo_S3 + mi.6.EA_Van_S3 + mi.6.EA_Hotel_S3 + mi.6.EA_Chart_S3
   
      ;   - drive alone toll (assume no trips pay HOT fee)
      mw[4] = 0
      
      ;   - shared ride 2 toll (assume no trips pay HOT fee)
      mw[5] = 0
      
      ;   - shared ride 3 toll (assume no trips pay HOT fee)
      mw[6] = 0
      
      ; combine AM peak trips by occupancy ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ;   - drive alone free
      mw[7] = mi.1.AM_Escort_DA + mi.1.AM_Park_DA + mi.1.AM_Rent_DA + mi.1.AM_Taxi_DA + mi.1.AM_Limo_DA +
              mi.2.AM_Escort_DA + mi.2.AM_Park_DA + mi.2.AM_Rent_DA + mi.2.AM_Taxi_DA + mi.2.AM_Limo_DA +
              mi.3.AM_Escort_DA + mi.3.AM_Park_DA + mi.3.AM_Rent_DA + mi.3.AM_Taxi_DA + mi.3.AM_Limo_DA + 
              mi.4.AM_Escort_DA + mi.4.AM_Park_DA + mi.4.AM_Rent_DA + mi.4.AM_Taxi_DA + mi.4.AM_Limo_DA +
              mi.5.AM_Escort_DA + mi.5.AM_Park_DA + mi.5.AM_Rent_DA + mi.5.AM_Taxi_DA + mi.5.AM_Limo_DA +
              mi.6.AM_Escort_DA + mi.6.AM_Park_DA + mi.6.AM_Rent_DA + mi.6.AM_Taxi_DA + mi.6.AM_Limo_DA
              
      ;   - shared ride 2 free
      mw[8] = mi.1.AM_Escort_S2 + mi.1.AM_Park_S2 + mi.1.AM_Rent_S2 + mi.1.AM_Taxi_S2 + mi.1.AM_Limo_S2 +
              mi.2.AM_Escort_S2 + mi.2.AM_Park_S2 + mi.2.AM_Rent_S2 + mi.2.AM_Taxi_S2 + mi.2.AM_Limo_S2 +
              mi.3.AM_Escort_S2 + mi.3.AM_Park_S2 + mi.3.AM_Rent_S2 + mi.3.AM_Taxi_S2 + mi.3.AM_Limo_S2 +
              mi.4.AM_Escort_S2 + mi.4.AM_Park_S2 + mi.4.AM_Rent_S2 + mi.4.AM_Taxi_S2 + mi.4.AM_Limo_S2 +
              mi.5.AM_Escort_S2 + mi.5.AM_Park_S2 + mi.5.AM_Rent_S2 + mi.5.AM_Taxi_S2 + mi.5.AM_Limo_S2 +
              mi.6.AM_Escort_S2 + mi.6.AM_Park_S2 + mi.6.AM_Rent_S2 + mi.6.AM_Taxi_S2 + mi.6.AM_Limo_S2
              
      ;   - shared ride 3 free
      mw[9] = mi.1.AM_Escort_S3 + mi.1.AM_Park_S3 + mi.1.AM_Rent_S3 + mi.1.AM_Taxi_S3 + mi.1.AM_Limo_S3 + mi.1.AM_Van_S3 + mi.1.AM_Hotel_S3 + mi.1.AM_Chart_S3 +
              mi.2.AM_Escort_S3 + mi.2.AM_Park_S3 + mi.2.AM_Rent_S3 + mi.2.AM_Taxi_S3 + mi.2.AM_Limo_S3 + mi.2.AM_Van_S3 + mi.2.AM_Hotel_S3 + mi.2.AM_Chart_S3 +
              mi.3.AM_Escort_S3 + mi.3.AM_Park_S3 + mi.3.AM_Rent_S3 + mi.3.AM_Taxi_S3 + mi.3.AM_Limo_S3 + mi.3.AM_Van_S3 + mi.3.AM_Hotel_S3 + mi.3.AM_Chart_S3 +
              mi.4.AM_Escort_S3 + mi.4.AM_Park_S3 + mi.4.AM_Rent_S3 + mi.4.AM_Taxi_S3 + mi.4.AM_Limo_S3 + mi.4.AM_Van_S3 + mi.4.AM_Hotel_S3 + mi.4.AM_Chart_S3 +
              mi.5.AM_Escort_S3 + mi.5.AM_Park_S3 + mi.5.AM_Rent_S3 + mi.5.AM_Taxi_S3 + mi.5.AM_Limo_S3 + mi.5.AM_Van_S3 + mi.5.AM_Hotel_S3 + mi.5.AM_Chart_S3 +
              mi.6.AM_Escort_S3 + mi.6.AM_Park_S3 + mi.6.AM_Rent_S3 + mi.6.AM_Taxi_S3 + mi.6.AM_Limo_S3 + mi.6.AM_Van_S3 + mi.6.AM_Hotel_S3 + mi.6.AM_Chart_S3
   
      ;   - drive alone toll (assume no trips pay HOT fee)
      mw[10] = 0
      
      ;   - shared ride 2 toll (assume no trips pay HOT fee)
      mw[11] = 0
      
      ;   - shared ride 3 toll (assume no trips pay HOT fee)
      mw[12] = 0
      
      ; combine midday trips by occupancy ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ;   - drive alone free
      mw[13] = mi.1.MD_Escort_DA + mi.1.MD_Park_DA + mi.1.MD_Rent_DA + mi.1.MD_Taxi_DA + mi.1.MD_Limo_DA +
               mi.2.MD_Escort_DA + mi.2.MD_Park_DA + mi.2.MD_Rent_DA + mi.2.MD_Taxi_DA + mi.2.MD_Limo_DA +
               mi.3.MD_Escort_DA + mi.3.MD_Park_DA + mi.3.MD_Rent_DA + mi.3.MD_Taxi_DA + mi.3.MD_Limo_DA + 
               mi.4.MD_Escort_DA + mi.4.MD_Park_DA + mi.4.MD_Rent_DA + mi.4.MD_Taxi_DA + mi.4.MD_Limo_DA +
               mi.5.MD_Escort_DA + mi.5.MD_Park_DA + mi.5.MD_Rent_DA + mi.5.MD_Taxi_DA + mi.5.MD_Limo_DA +
               mi.6.MD_Escort_DA + mi.6.MD_Park_DA + mi.6.MD_Rent_DA + mi.6.MD_Taxi_DA + mi.6.MD_Limo_DA
              
      ;   - shared ride 2 free
      mw[14] = mi.1.MD_Escort_S2 + mi.1.MD_Park_S2 + mi.1.MD_Rent_S2 + mi.1.MD_Taxi_S2 + mi.1.MD_Limo_S2 +
               mi.2.MD_Escort_S2 + mi.2.MD_Park_S2 + mi.2.MD_Rent_S2 + mi.2.MD_Taxi_S2 + mi.2.MD_Limo_S2 +
               mi.3.MD_Escort_S2 + mi.3.MD_Park_S2 + mi.3.MD_Rent_S2 + mi.3.MD_Taxi_S2 + mi.3.MD_Limo_S2 +
               mi.4.MD_Escort_S2 + mi.4.MD_Park_S2 + mi.4.MD_Rent_S2 + mi.4.MD_Taxi_S2 + mi.4.MD_Limo_S2 +
               mi.5.MD_Escort_S2 + mi.5.MD_Park_S2 + mi.5.MD_Rent_S2 + mi.5.MD_Taxi_S2 + mi.5.MD_Limo_S2 +
               mi.6.MD_Escort_S2 + mi.6.MD_Park_S2 + mi.6.MD_Rent_S2 + mi.6.MD_Taxi_S2 + mi.6.MD_Limo_S2
              
      ;   - shared ride 3 free
      mw[15] = mi.1.MD_Escort_S3 + mi.1.MD_Park_S3 + mi.1.MD_Rent_S3 + mi.1.MD_Taxi_S3 + mi.1.MD_Limo_S3 + mi.1.MD_Van_S3 + mi.1.MD_Hotel_S3 + mi.1.MD_Chart_S3 +
               mi.2.MD_Escort_S3 + mi.2.MD_Park_S3 + mi.2.MD_Rent_S3 + mi.2.MD_Taxi_S3 + mi.2.MD_Limo_S3 + mi.2.MD_Van_S3 + mi.2.MD_Hotel_S3 + mi.2.MD_Chart_S3 +
               mi.3.MD_Escort_S3 + mi.3.MD_Park_S3 + mi.3.MD_Rent_S3 + mi.3.MD_Taxi_S3 + mi.3.MD_Limo_S3 + mi.3.MD_Van_S3 + mi.3.MD_Hotel_S3 + mi.3.MD_Chart_S3 +
               mi.4.MD_Escort_S3 + mi.4.MD_Park_S3 + mi.4.MD_Rent_S3 + mi.4.MD_Taxi_S3 + mi.4.MD_Limo_S3 + mi.4.MD_Van_S3 + mi.4.MD_Hotel_S3 + mi.4.MD_Chart_S3 +
               mi.5.MD_Escort_S3 + mi.5.MD_Park_S3 + mi.5.MD_Rent_S3 + mi.5.MD_Taxi_S3 + mi.5.MD_Limo_S3 + mi.5.MD_Van_S3 + mi.5.MD_Hotel_S3 + mi.5.MD_Chart_S3 +
               mi.6.MD_Escort_S3 + mi.6.MD_Park_S3 + mi.6.MD_Rent_S3 + mi.6.MD_Taxi_S3 + mi.6.MD_Limo_S3 + mi.6.MD_Van_S3 + mi.6.MD_Hotel_S3 + mi.6.MD_Chart_S3
   
      ;   - drive alone toll (assume no trips pay HOT fee)
      mw[16] = 0
      
      ;   - shared ride 2 toll (assume no trips pay HOT fee)
      mw[17] = 0
      
      ;   - shared ride 3 toll (assume no trips pay HOT fee)
      mw[18] = 0
      
      ; combine PM peak trips by occupancy ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ;   - drive alone free
      mw[19] = mi.1.PM_Escort_DA + mi.1.PM_Park_DA + mi.1.PM_Rent_DA + mi.1.PM_Taxi_DA + mi.1.PM_Limo_DA +
               mi.2.PM_Escort_DA + mi.2.PM_Park_DA + mi.2.PM_Rent_DA + mi.2.PM_Taxi_DA + mi.2.PM_Limo_DA +
               mi.3.PM_Escort_DA + mi.3.PM_Park_DA + mi.3.PM_Rent_DA + mi.3.PM_Taxi_DA + mi.3.PM_Limo_DA + 
               mi.4.PM_Escort_DA + mi.4.PM_Park_DA + mi.4.PM_Rent_DA + mi.4.PM_Taxi_DA + mi.4.PM_Limo_DA +
               mi.5.PM_Escort_DA + mi.5.PM_Park_DA + mi.5.PM_Rent_DA + mi.5.PM_Taxi_DA + mi.5.PM_Limo_DA +
               mi.6.PM_Escort_DA + mi.6.PM_Park_DA + mi.6.PM_Rent_DA + mi.6.PM_Taxi_DA + mi.6.PM_Limo_DA
              
      ;   - shared ride 2 free
      mw[20] = mi.1.PM_Escort_S2 + mi.1.PM_Park_S2 + mi.1.PM_Rent_S2 + mi.1.PM_Taxi_S2 + mi.1.PM_Limo_S2 +
               mi.2.PM_Escort_S2 + mi.2.PM_Park_S2 + mi.2.PM_Rent_S2 + mi.2.PM_Taxi_S2 + mi.2.PM_Limo_S2 +
               mi.3.PM_Escort_S2 + mi.3.PM_Park_S2 + mi.3.PM_Rent_S2 + mi.3.PM_Taxi_S2 + mi.3.PM_Limo_S2 +
               mi.4.PM_Escort_S2 + mi.4.PM_Park_S2 + mi.4.PM_Rent_S2 + mi.4.PM_Taxi_S2 + mi.4.PM_Limo_S2 +
               mi.5.PM_Escort_S2 + mi.5.PM_Park_S2 + mi.5.PM_Rent_S2 + mi.5.PM_Taxi_S2 + mi.5.PM_Limo_S2 +
               mi.6.PM_Escort_S2 + mi.6.PM_Park_S2 + mi.6.PM_Rent_S2 + mi.6.PM_Taxi_S2 + mi.6.PM_Limo_S2
              
      ;   - shared ride 3 free
      mw[21] = mi.1.PM_Escort_S3 + mi.1.PM_Park_S3 + mi.1.PM_Rent_S3 + mi.1.PM_Taxi_S3 + mi.1.PM_Limo_S3 + mi.1.PM_Van_S3 + mi.1.PM_Hotel_S3 + mi.1.PM_Chart_S3 +
               mi.2.PM_Escort_S3 + mi.2.PM_Park_S3 + mi.2.PM_Rent_S3 + mi.2.PM_Taxi_S3 + mi.2.PM_Limo_S3 + mi.2.PM_Van_S3 + mi.2.PM_Hotel_S3 + mi.2.PM_Chart_S3 +
               mi.3.PM_Escort_S3 + mi.3.PM_Park_S3 + mi.3.PM_Rent_S3 + mi.3.PM_Taxi_S3 + mi.3.PM_Limo_S3 + mi.3.PM_Van_S3 + mi.3.PM_Hotel_S3 + mi.3.PM_Chart_S3 +
               mi.4.PM_Escort_S3 + mi.4.PM_Park_S3 + mi.4.PM_Rent_S3 + mi.4.PM_Taxi_S3 + mi.4.PM_Limo_S3 + mi.4.PM_Van_S3 + mi.4.PM_Hotel_S3 + mi.4.PM_Chart_S3 +
               mi.5.PM_Escort_S3 + mi.5.PM_Park_S3 + mi.5.PM_Rent_S3 + mi.5.PM_Taxi_S3 + mi.5.PM_Limo_S3 + mi.5.PM_Van_S3 + mi.5.PM_Hotel_S3 + mi.5.PM_Chart_S3 +
               mi.6.PM_Escort_S3 + mi.6.PM_Park_S3 + mi.6.PM_Rent_S3 + mi.6.PM_Taxi_S3 + mi.6.PM_Limo_S3 + mi.6.PM_Van_S3 + mi.6.PM_Hotel_S3 + mi.6.PM_Chart_S3
   
      ;   - drive alone toll (assume no trips pay HOT fee)
      mw[22] = 0
      
      ;   - shared ride 2 toll (assume no trips pay HOT fee)
      mw[23] = 0
      
      ;   - shared ride 3 toll (assume no trips pay HOT fee)
      mw[24] = 0
      
      ; combine evening trips by occupancy ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ;   - drive alone free
      mw[25] = mi.1.EV_Escort_DA + mi.1.EV_Park_DA + mi.1.EV_Rent_DA + mi.1.EV_Taxi_DA + mi.1.EV_Limo_DA +
               mi.2.EV_Escort_DA + mi.2.EV_Park_DA + mi.2.EV_Rent_DA + mi.2.EV_Taxi_DA + mi.2.EV_Limo_DA +
               mi.3.EV_Escort_DA + mi.3.EV_Park_DA + mi.3.EV_Rent_DA + mi.3.EV_Taxi_DA + mi.3.EV_Limo_DA + 
               mi.4.EV_Escort_DA + mi.4.EV_Park_DA + mi.4.EV_Rent_DA + mi.4.EV_Taxi_DA + mi.4.EV_Limo_DA +
               mi.5.EV_Escort_DA + mi.5.EV_Park_DA + mi.5.EV_Rent_DA + mi.5.EV_Taxi_DA + mi.5.EV_Limo_DA +
               mi.6.EV_Escort_DA + mi.6.EV_Park_DA + mi.6.EV_Rent_DA + mi.6.EV_Taxi_DA + mi.6.EV_Limo_DA
              
      ;   - shared ride 2 free
      mw[26] = mi.1.EV_Escort_S2 + mi.1.EV_Park_S2 + mi.1.EV_Rent_S2 + mi.1.EV_Taxi_S2 + mi.1.EV_Limo_S2 +
               mi.2.EV_Escort_S2 + mi.2.EV_Park_S2 + mi.2.EV_Rent_S2 + mi.2.EV_Taxi_S2 + mi.2.EV_Limo_S2 +
               mi.3.EV_Escort_S2 + mi.3.EV_Park_S2 + mi.3.EV_Rent_S2 + mi.3.EV_Taxi_S2 + mi.3.EV_Limo_S2 +
               mi.4.EV_Escort_S2 + mi.4.EV_Park_S2 + mi.4.EV_Rent_S2 + mi.4.EV_Taxi_S2 + mi.4.EV_Limo_S2 +
               mi.5.EV_Escort_S2 + mi.5.EV_Park_S2 + mi.5.EV_Rent_S2 + mi.5.EV_Taxi_S2 + mi.5.EV_Limo_S2 +
               mi.6.EV_Escort_S2 + mi.6.EV_Park_S2 + mi.6.EV_Rent_S2 + mi.6.EV_Taxi_S2 + mi.6.EV_Limo_S2
              
      ;   - shared ride 3 free
      mw[27] = mi.1.EV_Escort_S3 + mi.1.EV_Park_S3 + mi.1.EV_Rent_S3 + mi.1.EV_Taxi_S3 + mi.1.EV_Limo_S3 + mi.1.EV_Van_S3 + mi.1.EV_Hotel_S3 + mi.1.EV_Chart_S3 +
               mi.2.EV_Escort_S3 + mi.2.EV_Park_S3 + mi.2.EV_Rent_S3 + mi.2.EV_Taxi_S3 + mi.2.EV_Limo_S3 + mi.2.EV_Van_S3 + mi.2.EV_Hotel_S3 + mi.2.EV_Chart_S3 +
               mi.3.EV_Escort_S3 + mi.3.EV_Park_S3 + mi.3.EV_Rent_S3 + mi.3.EV_Taxi_S3 + mi.3.EV_Limo_S3 + mi.3.EV_Van_S3 + mi.3.EV_Hotel_S3 + mi.3.EV_Chart_S3 +
               mi.4.EV_Escort_S3 + mi.4.EV_Park_S3 + mi.4.EV_Rent_S3 + mi.4.EV_Taxi_S3 + mi.4.EV_Limo_S3 + mi.4.EV_Van_S3 + mi.4.EV_Hotel_S3 + mi.4.EV_Chart_S3 +
               mi.5.EV_Escort_S3 + mi.5.EV_Park_S3 + mi.5.EV_Rent_S3 + mi.5.EV_Taxi_S3 + mi.5.EV_Limo_S3 + mi.5.EV_Van_S3 + mi.5.EV_Hotel_S3 + mi.5.EV_Chart_S3 +
               mi.6.EV_Escort_S3 + mi.6.EV_Park_S3 + mi.6.EV_Rent_S3 + mi.6.EV_Taxi_S3 + mi.6.EV_Limo_S3 + mi.6.EV_Van_S3 + mi.6.EV_Hotel_S3 + mi.6.EV_Chart_S3
   
      ;   - drive alone toll (assume no trips pay HOT fee)
      mw[28] = 0
      
      ;   - shared ride 2 toll (assume no trips pay HOT fee)
      mw[29] = 0
      
      ;   - shared ride 3 toll (assume no trips pay HOT fee)
      mw[30] = 0
      
   
   endrun
   
endloop ; year

*/

; step 3: build matrices for five year intervals by interpolating between the year 2007 and the year 2035 trip tables
loop fYear = 1,7

   if (fYear = 1) 
   
      token_year  = '2015b'
      token_scale = '(2015 - 2007)/(2035 - 2007)'
      
   elseif (fYear = 2)
   
      token_year  = '2020b'
      token_scale = '(2020 - 2007)/(2035 - 2007)'
      
   elseif (fYear = 3)
   
      token_year  = '2025b'
      token_scale = '(2025 - 2007)/(2035 - 2007)'
      
   elseif (fYear = 4)
   
      token_year  = '2030b'
      token_scale = '(2030 - 2007)/(2035 - 2007)'
      
   elseif (fYear = 5)
   
      token_year  = '2040b'
      token_scale = '(2040 - 2007)/(2035 - 2007)'

   elseif (fYear = 6)
   
      token_year  = '2045b'
      token_scale = '(2045 - 2007)/(2035 - 2007)'

   elseif (fYear = 7)
   
      token_year  = '2050b'
      token_scale = '(2050 - 2007)/(2035 - 2007)'

   endif
   
   run pgm = matrix
   
      filei mati[1]  = 2007\2007_tripsAirPaxEA.tpp
      filei mati[2]  = 2007\2007_tripsAirPaxAM.tpp
      filei mati[3]  = 2007\2007_tripsAirPaxMD.tpp
      filei mati[4]  = 2007\2007_tripsAirPaxPM.tpp
      filei mati[5]  = 2007\2007_tripsAirPaxEV.tpp
      
      filei mati[6]  = 2035\2035b_tripsAirPaxEA.tpp
      filei mati[7]  = 2035\2035b_tripsAirPaxAM.tpp
      filei mati[8]  = 2035\2035b_tripsAirPaxMD.tpp
      filei mati[9]  = 2035\2035b_tripsAirPaxPM.tpp
      filei mati[10] = 2035\2035b_tripsAirPaxEV.tpp
   
      fileo mato[1] = @token_year@_tripsAirPaxEA.tpp, mo =  1- 6, name =  DA, SR2, SR3, DATOLL, SR2TOLL, SR3TOLL
      fileo mato[2] = @token_year@_tripsAirPaxAM.tpp, mo =  7-12, name =  DA, SR2, SR3, DATOLL, SR2TOLL, SR3TOLL
      fileo mato[3] = @token_year@_tripsAirPaxMD.tpp, mo = 13-18, name =  DA, SR2, SR3, DATOLL, SR2TOLL, SR3TOLL
      fileo mato[4] = @token_year@_tripsAirPaxPM.tpp, mo = 19-24, name =  DA, SR2, SR3, DATOLL, SR2TOLL, SR3TOLL
      fileo mato[5] = @token_year@_tripsAirPaxEV.tpp, mo = 25-30, name =  DA, SR2, SR3, DATOLL, SR2TOLL, SR3TOLL
      
      jloop
      
         ; early AM
         mw[1]  = mi.1.DA[j]      + @token_scale@ * (mi.6.DA[j]       - mi.1.DA[j]     )
         mw[2]  = mi.1.SR2[j]     + @token_scale@ * (mi.6.SR2[j]      - mi.1.SR2[j]    )
         mw[3]  = mi.1.SR3[j]     + @token_scale@ * (mi.6.SR3[j]      - mi.1.SR3[j]    )
         mw[4]  = mi.1.DATOLL[j]  + @token_scale@ * (mi.6.DATOLL[j]   - mi.1.DATOLL[j] )
         mw[5]  = mi.1.SR2TOLL[j] + @token_scale@ * (mi.6.SR2TOLL[j]  - mi.1.SR2TOLL[j])
         mw[6]  = mi.1.SR3TOLL[j] + @token_scale@ * (mi.6.SR3TOLL[j]  - mi.1.SR3TOLL[j])
         
         ; AM peak
         mw[7]  = mi.2.DA[j]      + @token_scale@ * (mi.7.DA[j]       - mi.2.DA[j]     )
         mw[8]  = mi.2.SR2[j]     + @token_scale@ * (mi.7.SR2[j]      - mi.2.SR2[j]    )
         mw[9]  = mi.2.SR3[j]     + @token_scale@ * (mi.7.SR3[j]      - mi.2.SR3[j]    )
         mw[10] = mi.2.DATOLL[j]  + @token_scale@ * (mi.7.DATOLL[j]   - mi.2.DATOLL[j] )
         mw[11] = mi.2.SR2TOLL[j] + @token_scale@ * (mi.7.SR2TOLL[j]  - mi.2.SR2TOLL[j])
         mw[12] = mi.2.SR3TOLL[j] + @token_scale@ * (mi.7.SR3TOLL[j]  - mi.2.SR3TOLL[j])
         							      
         ; midday
         mw[13] = mi.3.DA[j]      + @token_scale@ * (mi.8.DA[j]       - mi.3.DA[j]     )
         mw[14] = mi.3.SR2[j]     + @token_scale@ * (mi.8.SR2[j]      - mi.3.SR2[j]    )
         mw[15] = mi.3.SR3[j]     + @token_scale@ * (mi.8.SR3[j]      - mi.3.SR3[j]    )
         mw[16] = mi.3.DATOLL[j]  + @token_scale@ * (mi.8.DATOLL[j]   - mi.3.DATOLL[j] )
         mw[17] = mi.3.SR2TOLL[j] + @token_scale@ * (mi.8.SR2TOLL[j]  - mi.3.SR2TOLL[j])
         mw[18] = mi.3.SR3TOLL[j] + @token_scale@ * (mi.8.SR3TOLL[j]  - mi.3.SR3TOLL[j])
         							      
         ; PM peak
         mw[19] = mi.4.DA[j]      + @token_scale@ * (mi.9.DA[j]       - mi.4.DA[j]     )
         mw[20] = mi.4.SR2[j]     + @token_scale@ * (mi.9.SR2[j]      - mi.4.SR2[j]    )
         mw[21] = mi.4.SR3[j]     + @token_scale@ * (mi.9.SR3[j]      - mi.4.SR3[j]    )
         mw[22] = mi.4.DATOLL[j]  + @token_scale@ * (mi.9.DATOLL[j]   - mi.4.DATOLL[j] )
         mw[23] = mi.4.SR2TOLL[j] + @token_scale@ * (mi.9.SR2TOLL[j]  - mi.4.SR2TOLL[j])
         mw[24] = mi.4.SR3TOLL[j] + @token_scale@ * (mi.9.SR3TOLL[j]  - mi.4.SR3TOLL[j])
         
         ; evening
         mw[25] = mi.5.DA[j]      + @token_scale@ * (mi.10.DA[j]      - mi.5.DA[j]     )
         mw[26] = mi.5.SR2[j]     + @token_scale@ * (mi.10.SR2[j]     - mi.5.SR2[j]    )
         mw[27] = mi.5.SR3[j]     + @token_scale@ * (mi.10.SR3[j]     - mi.5.SR3[j]    )
         mw[28] = mi.5.DATOLL[j]  + @token_scale@ * (mi.10.DATOLL[j]  - mi.5.DATOLL[j] )
         mw[29] = mi.5.SR2TOLL[j] + @token_scale@ * (mi.10.SR2TOLL[j] - mi.5.SR2TOLL[j])
         mw[30] = mi.5.SR3TOLL[j] + @token_scale@ * (mi.10.SR3TOLL[j] - mi.5.SR3TOLL[j])
      
      endjloop
   
   endrun
   

endloop ; fYear



