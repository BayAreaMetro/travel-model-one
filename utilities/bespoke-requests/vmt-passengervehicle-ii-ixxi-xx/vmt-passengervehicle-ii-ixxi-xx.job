; As requested by CARB, this script summarizes:
;   - Total VMT per weekday for passenger vehicles (ARB vehicle classes LDA, LDT1, LDT2, and MDV)
;     (Per https://www.arb.ca.gov/msei/vehicle-categories.xlsx these are:
;       LDA = Passenger Cars,
;       LDT1 & LDT2 = Light Duty Trucks (not Light-Heavy Duty Trucks)
;       MDF = Medium Duty Trucks
;   - Total II VMT per weekday for passenger vehicles (miles)
;   - Total IX/XI VMT per weekday for passenger vehicles (miles)
;   - Total XX VMT per weekday for passenger vehicles (miles)
;
; lmz 2017.10.04

RUN PGM = MATRIX
  parameters zones = 1475
  FILEO MATO[1]="metrics\II_IXXI_XX.tpp",  MO=1-3, NAME=II,IXXI,XX

  MW[1] = 0
  MW[2] = 0
  MW[3] = 0

  JLOOP
    IF ((I=1-1454) && (J=1-1454))              ; II
      MW[1] = 1
    ELSEIF ((I=1-1454) && (J=1455-1475))       ; IX
      MW[2] = 1
    ELSEIF ((I=1455-1475) && (J=1-1454))       ; XI
      MW[2] = 1
    ELSEIF ((I=1455-1475) && (J=1455-1475))    ; XX
      MW[3] = 1
    ENDIF
  ENDJLOOP
ENDRUN

RUN PGM = MATRIX

  ; Read Highway Skims
  FILEI MATI[1] = "skims\HWYSKMEA.tpp"
  FILEI MATI[2] = "skims\HWYSKMAM.tpp"
  FILEI MATI[3] = "skims\HWYSKMMD.tpp"
  FILEI MATI[4] = "skims\HWYSKMPM.tpp"
  FILEI MATI[5] = "skims\HWYSKMEV.tpp"

  ; Read person trips
  FILEI MATI[11] = "main\tripsEA.tpp"
  FILEI MATI[12] = "main\tripsAM.tpp"
  FILEI MATI[13] = "main\tripsMD.tpp"
  FILEI MATI[14] = "main\tripsPM.tpp"
  FILEI MATI[15] = "main\tripsEV.tpp"

  FILEI MATI[20]  = "metrics\II_IXXI_XX.tpp"
  FILEO PRINTO[1] = "metrics\II_IXXI_XX.csv",APPEND=F

  ; Person Trip Vehicle Miles - occupancy factors consistent with HwyAssign.job
  MW[1] = (mi.1.DISTDA     * (mi.11.da                                  )) + 
          (mi.2.DISTDA     * (mi.12.da                                  )) +
          (mi.3.DISTDA     * (mi.13.da                                  )) +
          (mi.4.DISTDA     * (mi.14.da                                  )) +
          (mi.5.DISTDA     * (mi.15.da                                  )) +
          (mi.1.TOLLDISTDA * (mi.11.datoll  + mi.11.da_tnc + mi.11.da_av)) +
          (mi.2.TOLLDISTDA * (mi.12.datoll  + mi.12.da_tnc + mi.12.da_av)) +
          (mi.3.TOLLDISTDA * (mi.13.datoll  + mi.13.da_tnc + mi.13.da_av)) +
          (mi.4.TOLLDISTDA * (mi.14.datoll  + mi.14.da_tnc + mi.14.da_av)) +
          (mi.5.TOLLDISTDA * (mi.15.datoll  + mi.15.da_tnc + mi.15.da_av)) +
          (mi.1.DISTS2     * (mi.11.sr2                                 )/2.0) +
          (mi.2.DISTS2     * (mi.12.sr2                                 )/2.0) +
          (mi.3.DISTS2     * (mi.13.sr2                                 )/2.0) +
          (mi.4.DISTS2     * (mi.14.sr2                                 )/2.0) +
          (mi.5.DISTS2     * (mi.15.sr2                                 )/2.0) +
          (mi.1.TOLLDISTS2 * (mi.11.sr2toll + mi.11.s2_tnc + mi.11.s2_av)/2.0) +
          (mi.2.TOLLDISTS2 * (mi.12.sr2toll + mi.12.s2_tnc + mi.12.s2_av)/2.0) +
          (mi.3.TOLLDISTS2 * (mi.13.sr2toll + mi.13.s2_tnc + mi.13.s2_av)/2.0) +
          (mi.4.TOLLDISTS2 * (mi.14.sr2toll + mi.14.s2_tnc + mi.14.s2_av)/2.0) +
          (mi.5.TOLLDISTS2 * (mi.15.sr2toll + mi.15.s2_tnc + mi.15.s2_av)/2.0) +
          (mi.1.DISTS3     * (mi.11.sr3                                 )/3.25) +
          (mi.2.DISTS3     * (mi.12.sr3                                 )/3.25) +
          (mi.3.DISTS3     * (mi.13.sr3                                 )/3.25) +
          (mi.4.DISTS3     * (mi.14.sr3                                 )/3.25) +
          (mi.5.DISTS3     * (mi.15.sr3                                 )/3.25) +
          (mi.1.TOLLDISTS3 * (mi.11.sr3toll + mi.11.s3_tnc + mi.11.s3_av)/3.25) +
          (mi.2.TOLLDISTS3 * (mi.12.sr3toll + mi.12.s3_tnc + mi.12.s3_av)/3.25) +
          (mi.3.TOLLDISTS3 * (mi.13.sr3toll + mi.13.s3_tnc + mi.13.s3_av)/3.25) +
          (mi.4.TOLLDISTS3 * (mi.14.sr3toll + mi.14.s3_tnc + mi.14.s3_av)/3.25) +
          (mi.5.TOLLDISTS3 * (mi.15.sr3toll + mi.15.s3_tnc + mi.15.s3_av)/3.25)

  ; create II, IXXI, XX
  MW[4] = (MW[1])*mi.20.II
  MW[5] = (MW[1])*mi.20.IXXI
  MW[6] = (MW[1])*mi.20.XX

  VMT_II   = VMT_II   + ROWSUM(4)
  VMT_IXXI = VMT_IXXI + ROWSUM(5)
  VMT_XX   = VMT_XX   + ROWSUM(6)
  IF (I=1475)
    PRINT PRINTO=1 CSV=T, LIST="Category,VMT II,VMT IXXI,VMT XX"
    PRINT PRINTO=1 CSV=T, LIST="Residents",VMT_II(10.2L), VMT_IXXI(10.2L), VMT_XX(10.2L)
  ENDIF

ENDRUN

RUN PGM = MATRIX

  ; Read Highway Skims
  FILEI MATI[1] = "skims\HWYSKMEA.tpp"
  FILEI MATI[2] = "skims\HWYSKMAM.tpp"
  FILEI MATI[3] = "skims\HWYSKMMD.tpp"
  FILEI MATI[4] = "skims\HWYSKMPM.tpp"
  FILEI MATI[5] = "skims\HWYSKMEV.tpp"

  ; Read air passenger travel demand - vehicle trips
  FILEI MATI[6]  = "nonres\tripsAirPaxEA.tpp"
  FILEI MATI[7]  = "nonres\tripsAirPaxAM.tpp"
  FILEI MATI[8]  = "nonres\tripsAirPaxMD.tpp"
  FILEI MATI[9]  = "nonres\tripsAirPaxPM.tpp"
  FILEI MATI[10] = "nonres\tripsAirPaxEV.tpp"

  ; Read internal/external travel demand - vehicle trips
  FILEI MATI[11] = "nonres\tripsIxEA.tpp"
  FILEI MATI[12] = "nonres\tripsIxAM.tpp"
  FILEI MATI[13] = "nonres\tripsIxMD.tpp"
  FILEI MATI[14] = "nonres\tripsIxPM.tpp"
  FILEI MATI[15] = "nonres\tripsIxEV.tpp"


  FILEI MATI[20]  = "metrics\II_IXXI_XX.tpp"
  FILEO PRINTO[1] = "metrics\II_IXXI_XX.csv",APPEND=T

  ; Air passenger Vehicle Miles
  MW[2] = (mi.1.DISTDA     * (mi.6.da          )) + 
          (mi.2.DISTDA     * (mi.7.da          )) +
          (mi.3.DISTDA     * (mi.8.da          )) +
          (mi.4.DISTDA     * (mi.9.da          )) +
          (mi.5.DISTDA     * (mi.10.da         )) +
          (mi.1.TOLLDISTDA * (mi.6.datoll      )) +
          (mi.2.TOLLDISTDA * (mi.7.datoll      )) +
          (mi.3.TOLLDISTDA * (mi.8.datoll      )) +
          (mi.4.TOLLDISTDA * (mi.9.datoll      )) +
          (mi.5.TOLLDISTDA * (mi.10.datoll     )) +
          (mi.1.DISTS2     * (mi.6.sr2         )) +
          (mi.2.DISTS2     * (mi.7.sr2         )) +
          (mi.3.DISTS2     * (mi.8.sr2         )) +
          (mi.4.DISTS2     * (mi.9.sr2         )) +
          (mi.5.DISTS2     * (mi.10.sr2        )) +
          (mi.1.TOLLDISTS2 * (mi.6.sr2toll     )) +
          (mi.2.TOLLDISTS2 * (mi.7.sr2toll     )) +
          (mi.3.TOLLDISTS2 * (mi.8.sr2toll     )) +
          (mi.4.TOLLDISTS2 * (mi.9.sr2toll     )) +
          (mi.5.TOLLDISTS2 * (mi.10.sr2toll    )) +
          (mi.1.DISTS3     * (mi.6.sr3         )) +
          (mi.2.DISTS3     * (mi.7.sr3         )) +
          (mi.3.DISTS3     * (mi.8.sr3         )) +
          (mi.4.DISTS3     * (mi.9.sr3         )) +
          (mi.5.DISTS3     * (mi.10.sr3        )) +
          (mi.1.TOLLDISTS3 * (mi.6.sr3toll     )) +
          (mi.2.TOLLDISTS3 * (mi.7.sr3toll     )) +
          (mi.3.TOLLDISTS3 * (mi.8.sr3toll     )) +
          (mi.4.TOLLDISTS3 * (mi.9.sr3toll     )) +
          (mi.5.TOLLDISTS3 * (mi.10.sr3toll    ))

  ; IX/XI Person Trip Vehicle Miles
  MW[3] = (mi.1.DISTDA     * (mi.11.da         )) + 
          (mi.2.DISTDA     * (mi.12.da         )) +
          (mi.3.DISTDA     * (mi.13.da         )) +
          (mi.4.DISTDA     * (mi.14.da         )) +
          (mi.5.DISTDA     * (mi.15.da         )) +
          (mi.1.TOLLDISTDA * (mi.11.datoll     )) +
          (mi.2.TOLLDISTDA * (mi.12.datoll     )) +
          (mi.3.TOLLDISTDA * (mi.13.datoll     )) +
          (mi.4.TOLLDISTDA * (mi.14.datoll     )) +
          (mi.5.TOLLDISTDA * (mi.15.datoll     )) +
          (mi.1.DISTS2     * (mi.11.sr2        )) +
          (mi.2.DISTS2     * (mi.12.sr2        )) +
          (mi.3.DISTS2     * (mi.13.sr2        )) +
          (mi.4.DISTS2     * (mi.14.sr2        )) +
          (mi.5.DISTS2     * (mi.15.sr2        )) +
          (mi.1.TOLLDISTS2 * (mi.11.sr2toll    )) +
          (mi.2.TOLLDISTS2 * (mi.12.sr2toll    )) +
          (mi.3.TOLLDISTS2 * (mi.13.sr2toll    )) +
          (mi.4.TOLLDISTS2 * (mi.14.sr2toll    )) +
          (mi.5.TOLLDISTS2 * (mi.15.sr2toll    )) +
          (mi.1.DISTS3     * (mi.11.sr3        )) +
          (mi.2.DISTS3     * (mi.12.sr3        )) +
          (mi.3.DISTS3     * (mi.13.sr3        )) +
          (mi.4.DISTS3     * (mi.14.sr3        )) +
          (mi.5.DISTS3     * (mi.15.sr3        )) +
          (mi.1.TOLLDISTS3 * (mi.11.sr3toll    )) +
          (mi.2.TOLLDISTS3 * (mi.12.sr3toll    )) +
          (mi.3.TOLLDISTS3 * (mi.13.sr3toll    )) +
          (mi.4.TOLLDISTS3 * (mi.14.sr3toll    )) +
          (mi.5.TOLLDISTS3 * (mi.15.sr3toll    ))

  ; create II, IXXI, XX - Air Passenger
  MW[4] = MW[2]*mi.20.II
  MW[5] = MW[2]*mi.20.IXXI
  MW[6] = MW[2]*mi.20.XX

  VMT_AIR_II   = VMT_AIR_II   + ROWSUM(4)
  VMT_AIR_IXXI = VMT_AIR_IXXI + ROWSUM(5)
  VMT_AIR_XX   = VMT_AIR_XX   + ROWSUM(6)

  ; create II, IXXI, XX - IX/EX tables
  MW[7] = MW[3]*mi.20.II
  MW[8] = MW[3]*mi.20.IXXI
  MW[9] = MW[3]*mi.20.XX

  VMT_IXEX_II   = VMT_IXEX_II   + ROWSUM(7)
  VMT_IXEX_IXXI = VMT_IXEX_IXXI + ROWSUM(8)
  VMT_IXEX_XX   = VMT_IXEX_XX   + ROWSUM(9)

  IF (I=1475)
    PRINT PRINTO=1 CSV=T, LIST="AirPassenger", VMT_AIR_II(10.2L),  VMT_AIR_IXXI(10.2L),  VMT_AIR_XX(10.2L)
    PRINT PRINTO=1 CSV=T, LIST="IxExTripTable",VMT_IXEX_II(10.2L), VMT_IXEX_IXXI(10.2L), VMT_IXEX_XX(10.2L)
  ENDIF

ENDRUN

RUN PGM = MATRIX
  ; Read Truck Highway Skims
  FILEI MATI[1] = "skims\COM_HWYSKIMEA.tpp"
  FILEI MATI[2] = "skims\COM_HWYSKIMAM.tpp"
  FILEI MATI[3] = "skims\COM_HWYSKIMMD.tpp"
  FILEI MATI[4] = "skims\COM_HWYSKIMPM.tpp"
  FILEI MATI[5] = "skims\COM_HWYSKIMEV.tpp"

  ; Read truck trips for all time periods
  FILEI MATI[11] = "nonres\tripstrkEA.tpp"
  FILEI MATI[12] = "nonres\tripstrkAM.tpp"
  FILEI MATI[13] = "nonres\tripstrkMD.tpp"
  FILEI MATI[14] = "nonres\tripstrkPM.tpp"
  FILEI MATI[15] = "nonres\tripstrkEV.tpp"

  FILEI MATI[20]  = "metrics\II_IXXI_XX.tpp"
  FILEO PRINTO[1] = "metrics\II_IXXI_XX.csv",APPEND=T

  MW[1]   = (mi.1.distvsm  * (mi.11.vstruck + mi.11.vstrucktoll)) +
            (mi.2.distvsm  * (mi.12.vstruck + mi.12.vstrucktoll)) +
            (mi.3.distvsm  * (mi.13.vstruck + mi.13.vstrucktoll)) +
            (mi.4.distvsm  * (mi.14.vstruck + mi.14.vstrucktoll)) +
            (mi.5.distvsm  * (mi.15.vstruck + mi.15.vstrucktoll)) +
            (mi.1.distsml  * (mi.11.struck  + mi.11.strucktoll )) +
            (mi.2.distsml  * (mi.12.struck  + mi.12.strucktoll )) +
            (mi.3.distsml  * (mi.13.struck  + mi.13.strucktoll )) +
            (mi.4.distsml  * (mi.14.struck  + mi.14.strucktoll )) +
            (mi.5.distsml  * (mi.15.struck  + mi.15.strucktoll )) +
            (mi.1.distmed  * (mi.11.mtruck  + mi.11.mtrucktoll )) +
            (mi.2.distmed  * (mi.12.mtruck  + mi.12.mtrucktoll )) +
            (mi.3.distmed  * (mi.13.mtruck  + mi.13.mtrucktoll )) +
            (mi.4.distmed  * (mi.14.mtruck  + mi.14.mtrucktoll )) +
            (mi.5.distmed  * (mi.15.mtruck  + mi.15.mtrucktoll )) +
            (mi.1.distlrg  * (mi.11.ctruck  + mi.11.ctrucktoll )) +
            (mi.2.distlrg  * (mi.12.ctruck  + mi.12.ctrucktoll )) +
            (mi.3.distlrg  * (mi.13.ctruck  + mi.13.ctrucktoll )) +
            (mi.4.distlrg  * (mi.14.ctruck  + mi.14.ctrucktoll )) +
            (mi.5.distlrg  * (mi.15.ctruck  + mi.15.ctrucktoll ))

  ; create II, IXXI, XX
  MW[4] = (MW[1] + MW[2] + MW[3])*mi.20.II
  MW[5] = (MW[1] + MW[2] + MW[3])*mi.20.IXXI
  MW[6] = (MW[1] + MW[2] + MW[3])*mi.20.XX

  VMT_II   = VMT_II   + ROWSUM(4)
  VMT_IXXI = VMT_IXXI + ROWSUM(5)
  VMT_XX   = VMT_XX   + ROWSUM(6)
  IF (I=1475)
    PRINT PRINTO=1 CSV=T, LIST="Trucks",VMT_II(10.2L), VMT_IXXI(10.2L), VMT_XX(10.2L)
  ENDIF

ENDRUN