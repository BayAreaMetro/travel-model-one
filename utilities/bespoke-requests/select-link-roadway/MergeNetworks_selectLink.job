token_link_file = '%SELECT_LINK_FILE%'

; step one: create time-period-specific networks with readable variable names
loop period = 1, 5
   
   ; a two letter token is used for each time period
   if (period = 1)   
      token_period = 'EA'   
  
   elseif (period = 2)   
      token_period = 'AM'    
  
   elseif (period = 3)   
      token_period = 'MD'    
  
   elseif (period = 4)   
      token_period = 'PM'
  
   elseif (period = 5)   
      token_period = 'EV'
      
   endif
   
   ; disable distribution: process is faster without the distribution overhead
  ; DistributeMultistep processid = 'ctramp', processNum = @period@, commpath = 'X:\commpath'
   
   run pgm = network
   
      ; read in the time-period-specific assigned and averaged (over iterations) network (see CalculateSpeeds.job)
      neti[1] = "hwy\selectlink\load@token_period@_selectlink_@token_link_file@.net"
      
      ; write out the network that will be used to create level-of-service matrices for the next iteration (see HwySkims.job)
      neto = "hwy\selectlink\load@token_period@_selectlink_@token_link_file@_renamedvars.net", exclude=V_1,TIME_1,VC_1,CSPD_1,VDT_1,VHT_1,
                                                                                       V1_1,V2_1,V3_1,V4_1,V5_1,V6_1,V7_1,V8_1,V9_1,V10_1,
                                                                                       V11_1,V12_1,V13_1,V14_1,V15_1,V16_1,V17_1,V18_1,V19_1,V20_1,
                                                                                       VT_1,
                                                                                       V1T_1,V2T_1,V3T_1,V4T_1,V5T_1,V6T_1,V7T_1,V8T_1,V9T_1,V10T_1,
                                                                                       V11T_1,V12T_1,V13T_1,V14T_1,V15T_1,V16T_1,V17T_1,V18T_1,V19T_1,V20T_1
      
      ; congested time variable is stored in CTIM
      ctim@token_period@ = CTIM
      
      ; for non-fixed links, computed the congested speed from the DISTANCE variable
      if (TSIN = 0) cspd@token_period@ = DISTANCE / (CTIM/60.0)
      
      ; set the v/c ratio
      vc@token_period@ = VC
      
      ; keep track of USE code by time of day
      use@token_period@ = USE
      
      ; set the assignment-class-specific volumes: non-value-toll-paying classes
      vol@token_period@_da = V11_1
      vol@token_period@_s2 = V12_1
      vol@token_period@_s3 = V13_1
      vol@token_period@_sm = V14_1
      vol@token_period@_hv = V15_1
             
      ; set the assignment-class-specific volumes: value-toll-eligible classes
      vol@token_period@_daT = V16_1
      vol@token_period@_s2T = V17_1
      vol@token_period@_s3T = V18_1
      vol@token_period@_smT = V19_1
      vol@token_period@_hvT = V20_1
            
      ; set the assignment-class-specific volumes: total volume
      vol@token_period@_tot = vol@token_period@_da  + vol@token_period@_s2 +  vol@token_period@_s3  + vol@token_period@_sm  + vol@token_period@_hv + 
                              vol@token_period@_daT + vol@token_period@_s2T + vol@token_period@_s3T + vol@token_period@_smT + vol@token_period@_hvT
                              
      ; compute delay, vehicle-miles traveled, and vehicle-hours traveled (ignore centroid connectors and other dummy links)
      if (FT != 6)
      
         ; delay is the congested time minus the free-flow time, weighted by the link volume, and converted from minutes to hours
         delay@token_period@ = (CTIM - FFT) * vol@token_period@_tot / 60.0
         
         ; vehicle-miles traveled is the distance weighted by the volume
         vmt@token_period@ = DISTANCE * vol@token_period@_tot
         
         ; vehicle-hours traveled is the congested travel time (expressed here in minutes) weighted by the volume, and converted from minutes to hours
         vht@token_period@ = CTIM * vol@token_period@_tot / 60.0 
         
         
      endif ; facility type is not six check
      
   
   endrun
   
;   EndDistributeMultistep
   
endloop

; Wait4Files files = CTRAMP1.script.end, CTRAMP2.script.end, CTRAMP3.script.end, CTRAMP4.script.end, CTRAMP5.script.end, 
;           printfiles = merge, deldistribfiles = t, CheckReturnCode = t


; step two: build single network with all time-period-specific information included, as summarized in previous step
run pgm = hwynet

   ; read in the time-period-specific assigned and averaged (over iterations) networks (see CalculateSpeeds.job)
   neti[1] = "hwy\selectlink\loadEA_selectlink_@token_link_file@_renamedvars.net"
   neti[2] = "hwy\selectlink\loadAM_selectlink_@token_link_file@_renamedvars.net"
   neti[3] = "hwy\selectlink\loadMD_selectlink_@token_link_file@_renamedvars.net"
   neti[4] = "hwy\selectlink\loadPM_selectlink_@token_link_file@_renamedvars.net"
   neti[5] = "hwy\selectlink\loadEV_selectlink_@token_link_file@_renamedvars.net"
   
   ; output network includes time-period-specific and 24-hour volumes
   neto = "hwy\selectlink\load_selectlink_@token_link_file@.net", exclude = USE, VOL, CTIM, VC, CSPD, VDT, VHT,
                                                                        VOL_DA, VOL_S2, VOL_S3, VOL_SM, VOL_HV,
                                                                        VOL_DAT, VOL_S2T, VOL_S3T, VOL_SMT, VOL_HVT,
                                                                        VOLT, VOLT_DA, VOLT_S2, VOLT_S3, VOLT_SM, VOLT_HV,
                                                                        VOLT_DAT, VOLT_S2T, VOLT_S3T, VOLT_SMT, VOLT_HVT
     
   ; combine the records of the time-period-specific assignments
   merge record = t     
     
   ; linkmerge phase start
   phase = linkmerge
               
      ; combine the assignment results to build 24-hour volumes
      vol24hr_da  = volEA_da  + volAM_da  + volMD_da  + volPM_da  + volEV_da         
      vol24hr_s2  = volEA_s2  + volAM_s2  + volMD_s2  + volPM_s2  + volEV_s2         
      vol24hr_s3  = volEA_s3  + volAM_s3  + volMD_s3  + volPM_s3  + volEV_s3         
      vol24hr_sm  = volEA_sm  + volAM_sm  + volMD_sm  + volPM_sm  + volEV_sm         
      vol24hr_hv  = volEA_hv  + volAM_hv  + volMD_hv  + volPM_hv  + volEV_hv  
      
      vol24hr_daT = volEA_daT + volAM_daT + volMD_dat + volPM_daT + volEV_daT        
      vol24hr_s2T = volEA_s2T + volAM_s2T + volMD_s2t + volPM_s2T + volEV_s2T        
      vol24hr_s3T = volEA_s3T + volAM_s3T + volMD_s3t + volPM_s3T + volEV_s3T        
      vol24hr_smT = volEA_smT + volAM_smT + volMD_smt + volPM_smT + volEV_smT        
      vol24hr_hvT = volEA_hvT + volAM_hvT + volMD_hvt + volPM_hvt + volEV_hvT
      
      vol24hr_tot = volEA_tot + volAM_tot + volMD_tot + volPM_tot + volEV_tot
      
      ; compute delay, vehicle-miles traveled, and vehicle-hours traveled (ignore centroid connectors and other dummy links)
      if (FT != 6)
      
         ; vehicle delay is the difference between congested time and free flow time, times number of vehicles
         delay24hr = delayEA + delayAM + delayMD + delayPM + delayEV
         
         ; vehicle-miles traveled is the distance weighted by the volume
         vmt24hr = vmtEA + vmtAM + vmtMD + vmtPM + vmtEV
         
         ; vehicle-hours traveled is the congested travel time (expressed here in minutes) weighted by the volume
         vht24hr = vhtEA + vhtAM + vhtMD + vhtPM + vhtEV
      
      endif ; facility type check

   endphase

endrun

*del hwy\selectlink\loadEA_selectlink_@token_link_file@_renamedvars.net hwy\selectlink\loadAM_selectlink_@token_link_file@_renamedvars.net hwy\selectlink\loadMD_selectlink_@token_link_file@_renamedvars.net hwy\selectlink\loadPM_selectlink_@token_link_file@_renamedvars.net hwy\selectlink\loadEV_selectlink_@token_link_file@_renamedvars.net
