; ----------------------------------------------------------------------------------------------------------------
;
; BridgeSkimsDatabase.job - based on model-files/database/SkimsDataBase.JOB
;
; Outputs bridge tolls for O/Ds from skims.
;
;
; Input:  (1)  Time-period-specific highway skims (see HwySkims.job)
;         (2)  Highway parameters block, which contains SR2COSTSHARE (translates
;              carpool costs to individual costs), and SR3COSTSHARE.
;
; Output: (1)  Time-period-specific bridge toll cost database, containing the origin-to-destination bridge toll cost for the following
;              travel modes: drive alone no value toll, drive alone value toll, shared ride 2 no value toll, share
;              ride 2 value toll, shared ride 3+ no value toll, shared ride 3+ value toll.  Transit, walk and bicycle
;              are assumed to be free. Data are in year 2000 cents.
;
; Notes:  (1)  Output matrices are in cents ($2000) and are stored as real values;
;         (2)  Intrazonal distance/time is one half the distance/time to the nearest neighbor;
;         (3)  Intrazonal bridge and value tolls are assumed to be zero
;
; See also: (1) HwySkims.job, which does the highway skimming
;
; version:  Travel Model One
; authors:  lmz (2016 01 11)
;
;
; ----------------------------------------------------------------------------------------------------------------

; only print the data for internal to internal flows
token_internal_zones = 1454

; dump time-period-specific databases
loop period = 1, 5

   ; a two letter token is used for each time period
   if (period = 1)   
      token_period = 'EA'   
  
   elseif (period = 2)   
      token_period = 'AM'    
  
   elseif (period = 3)   
      token_period = 'MD'    
  
   elseif (period = 4)   
      token_period = 'PM'
  
   elseif (period = 5)   
      token_period = 'EV'
      
   endif
   
   ; do each time of day as a separate process
   DistributeMultistep processid = 'ctramp', processNum = period, commpath = 'm:\commpath'
     
   ; total travel time by mode
   run pgm = matrix
      
      ; highway skim
      filei mati[1] = skims\hwyskm@token_period@.tpp
      
      ; print header for time by mode for each of the three files 
      if (i==1) 
      
         list = "orig,dest,da,daToll,s2,s2Toll,s3,s3Toll",           file = database\BridgeTollCostSkimsDatabase@token_period@.csv
      
      endif
      
      if (i<=@token_internal_zones@)
      
         jloop
         
            if (j<=@token_internal_zones@)
      
               ; cost calculations (prices in year 2000 cents) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
               ; note the BTOLL variable includes additional cost from imperfect pavement (for both Repair & Maintenance and fuel)
               
               da_Cost     = mi.1.BTOLLDA      - mi.1.PVCOSTDA
               daToll_Cost = mi.1.TOLLBTOLLDA  - mi.1.TOLLPVCOSTDA
               
               s2_Cost     = (mi.1.BTOLLS2     - mi.1.PVCOSTS2    )/SR2COSTSHARE
               s2Toll_Cost = (mi.1.TOLLBTOLLS2 - mi.1.TOLLPVCOSTS2)/SR2COSTSHARE
               
               s3_Cost     = (mi.1.BTOLLS3     - mi.1.PVCOSTS3    )/SR3COSTSHARE
               s3Toll_Cost = (mi.1.TOLLBTOLLS3 - mi.1.TOLLPVCOSTS3)/SR3COSTSHARE
               
               ; bike is free
               ; walk is free
               ; transit is free

               list = i(8.0),",",j(8.0),",",da_Cost(10.2),",",daToll_Cost(10.2),",",s2_Cost(10.2),",",s2Toll_Cost(10.2),",",s3_Cost(10.2),",",s3Toll_Cost(10.2)
                      file = database\BridgeTollCostSkimsDatabase@token_period@.csv

            endif ; internal j zones only
         
         endjloop
      
      endif ; internal i zones only
      
   endrun
   
   EndDistributeMultistep

endloop ; token_period

Wait4Files files = CTRAMP1.script.end, CTRAMP2.script.end, CTRAMP3.script.end, CTRAMP4.script.end, CTRAMP5.script.end, 
          printfiles = merge, deldistribfiles = t, CheckReturnCode = t
