<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='TransitValidation_2015_TM152_NGF_05' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='muni_observed' inline='true' name='federated.0bz9m4m1b30e7p1h3s25i13yj3jk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='muni_observed' name='textscan.0t9bgx21w1gykl1fjesyl0hwgax9'>
            <connection class='textscan' directory='.' filename='muni_observed.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0t9bgx21w1gykl1fjesyl0hwgax9' name='muni_observed.csv' table='[muni_observed#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='route' ordinal='0' />
            <column datatype='integer' name='boardings' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0t9bgx21w1gykl1fjesyl0hwgax9' name='muni_observed.csv' table='[muni_observed#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='route' ordinal='0' />
            <column datatype='integer' name='boardings' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[muni_observed.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[muni_observed.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boardings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[boardings]</local-name>
            <parent-name>[muni_observed.csv]</parent-name>
            <remote-alias>boardings</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Muni Route' datatype='string' name='[Calculation_914793721626112003]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REGEXP_REPLACE([route],&quot;^0[0]?&quot;,&quot;&quot;)' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='Observed Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='./muni_observed.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/13/2023 11:36:38 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='muni_observed' increment-value='%null%' refresh-type='create' rows-inserted='66' timestamp-start='2023-02-13 23:36:38.013' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>129</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>0</ordinal>
              <family>muni_observed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>66</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>boardings</remote-name>
              <remote-type>20</remote-type>
              <local-name>[boardings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>boardings</remote-alias>
              <ordinal>1</ordinal>
              <family>muni_observed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>65</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.0t9bgx21w1gykl1fjesyl0hwgax9' name='muni_observed.csv' table='[muni_observed#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='route' ordinal='0' />
                  <column datatype='integer' name='boardings' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='ridership_observed_vs_modelled' inline='true' name='federated.0c4lhlr0eib8m91eknq2i1hz9d02' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ridership_observed_vs_modelled' name='textscan.0nr78lj0zpqupo1bini040v4ppw0'>
            <connection class='textscan' directory='.' filename='ridership_observed_vs_modelled.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0nr78lj0zpqupo1bini040v4ppw0' name='ridership_observed_vs_modelled.csv' table='[ridership_observed_vs_modelled#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator_group' ordinal='0' />
            <column datatype='string' name='technology_6groups' ordinal='1' />
            <column datatype='real' name='observed_boardings' ordinal='2' />
            <column datatype='integer' name='modelled_boardings' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0nr78lj0zpqupo1bini040v4ppw0' name='ridership_observed_vs_modelled.csv' table='[ridership_observed_vs_modelled#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator_group' ordinal='0' />
            <column datatype='string' name='technology_6groups' ordinal='1' />
            <column datatype='real' name='observed_boardings' ordinal='2' />
            <column datatype='integer' name='modelled_boardings' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ridership_observed_vs_modelled.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator_group]</local-name>
            <parent-name>[ridership_observed_vs_modelled.csv]</parent-name>
            <remote-alias>operator_group</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>technology_6groups</remote-name>
            <remote-type>129</remote-type>
            <local-name>[technology_6groups]</local-name>
            <parent-name>[ridership_observed_vs_modelled.csv]</parent-name>
            <remote-alias>technology_6groups</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed_boardings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[observed_boardings]</local-name>
            <parent-name>[ridership_observed_vs_modelled.csv]</parent-name>
            <remote-alias>observed_boardings</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>modelled_boardings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[modelled_boardings]</local-name>
            <parent-name>[ridership_observed_vs_modelled.csv]</parent-name>
            <remote-alias>modelled_boardings</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:estimated_boardings:qk]&quot;' value='Modeled Weekday Boardings' />
          <alias key='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;' value='Observed Weekday Boardings' />
        </aliases>
      </column>
      <column caption='Difference' datatype='real' name='[Calculation_706783718292918273]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([modelled_boardings])-sum([observed_boardings])' />
      </column>
      <column caption='Percent Difference' datatype='real' name='[Difference (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_706783718292918273]/sum([observed_boardings])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Technology (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[technology_6groups]' new-bin='true'>
          <bin default-name='false' value='&quot;all bus&quot;'>
            <value>&quot;express bus&quot;</value>
            <value>&quot;local bus&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='Modelled Boardings' datatype='integer' name='[modelled_boardings]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Observed Boardings' datatype='real' name='[observed_boardings]' role='measure' type='quantitative' />
      <column caption='Operator Group' datatype='string' name='[operator_group]' role='dimension' type='nominal' />
      <column caption='Technology' datatype='string' name='[technology_6groups]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[Migrated Data]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Migrated Data:qk]' pivot='key' type='quantitative' />
      <column-instance column='[observed_boardings]' derivation='CountD' name='[ctd:observed_boardings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[operator_group]' derivation='None' name='[none:operator_group:nk]' pivot='key' type='nominal' />
      <column-instance column='[technology_6groups]' derivation='None' name='[none:technology_6groups:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[modelled_boardings]' derivation='Sum' name='[sum:modelled_boardings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[observed_boardings]' derivation='Sum' name='[sum:observed_boardings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_706783718292918273]' derivation='User' name='[usr:Calculation_706783718292918273:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Difference (copy)]' derivation='User' name='[usr:Difference (copy):qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='./ridership_observed_vs_modelled.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/13/2023 11:36:05 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='ridership_observed_vs_modelled' increment-value='%null%' refresh-type='create' rows-inserted='17' timestamp-start='2023-02-13 23:36:04.914' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>operator_group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[operator_group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>operator_group</remote-alias>
              <ordinal>0</ordinal>
              <family>ridership_observed_vs_modelled.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>technology_6groups</remote-name>
              <remote-type>129</remote-type>
              <local-name>[technology_6groups]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>technology_6groups</remote-alias>
              <ordinal>1</ordinal>
              <family>ridership_observed_vs_modelled.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>observed_boardings</remote-name>
              <remote-type>5</remote-type>
              <local-name>[observed_boardings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>observed_boardings</remote-alias>
              <ordinal>2</ordinal>
              <family>ridership_observed_vs_modelled.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>modelled_boardings</remote-name>
              <remote-type>20</remote-type>
              <local-name>[modelled_boardings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>modelled_boardings</remote-alias>
              <ordinal>3</ordinal>
              <family>ridership_observed_vs_modelled.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[ctd:observed_boardings:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:modelled_boardings:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Calculation_706783718292918273:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[__tableau_internal_object_id__].[cnt:Migrated Data:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Difference (copy):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:operator_group:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;AC Transit&quot;</bucket>
            <bucket>&quot;BART&quot;</bucket>
            <bucket>&quot;Caltrain&quot;</bucket>
            <bucket>&quot;Golden Gate Transit&quot;</bucket>
            <bucket>&quot;SamTrans&quot;</bucket>
            <bucket>&quot;SF Muni&quot;</bucket>
            <bucket>&quot;VTA&quot;</bucket>
            <bucket>&quot;Smaller Operators&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:technology_6groups:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;heavy rail&quot;</bucket>
            <bucket>&quot;commuter rail&quot;</bucket>
            <bucket>&quot;express bus&quot;</bucket>
            <bucket>&quot;ferry&quot;</bucket>
            <bucket>&quot;light rail&quot;</bucket>
            <bucket>&quot;local bus&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.0nr78lj0zpqupo1bini040v4ppw0' name='ridership_observed_vs_modelled.csv' table='[ridership_observed_vs_modelled#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='operator_group' ordinal='0' />
                  <column datatype='string' name='technology_6groups' ordinal='1' />
                  <column datatype='real' name='observed_boardings' ordinal='2' />
                  <column datatype='integer' name='modelled_boardings' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='trnline' inline='true' name='federated.13p64310g9skkr121ymc80vk5pj5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='trnline' name='textscan.0irp40u0119v8i12tzbms1vgttyq'>
            <connection class='textscan' directory='.' filename='trnline.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0irp40u0119v8i12tzbms1vgttyq' name='trnline.csv' table='[trnline#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='integer' name='mode' ordinal='1' />
            <column datatype='integer' name='owner' ordinal='2' />
            <column datatype='real' name='frequency' ordinal='3' />
            <column datatype='real' name='line time' ordinal='4' />
            <column datatype='real' name='line dist' ordinal='5' />
            <column datatype='integer' name='total boardings' ordinal='6' />
            <column datatype='integer' name='passenger miles' ordinal='7' />
            <column datatype='integer' name='passenger hours' ordinal='8' />
            <column datatype='string' name='path id' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0irp40u0119v8i12tzbms1vgttyq' name='trnline.csv' table='[trnline#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='integer' name='mode' ordinal='1' />
            <column datatype='integer' name='owner' ordinal='2' />
            <column datatype='real' name='frequency' ordinal='3' />
            <column datatype='real' name='line time' ordinal='4' />
            <column datatype='real' name='line dist' ordinal='5' />
            <column datatype='integer' name='total boardings' ordinal='6' />
            <column datatype='integer' name='passenger miles' ordinal='7' />
            <column datatype='integer' name='passenger hours' ordinal='8' />
            <column datatype='string' name='path id' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[owner]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>owner</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequency</remote-name>
            <remote-type>5</remote-type>
            <local-name>[frequency]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>frequency</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line time]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>line time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line dist]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>line dist</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total boardings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total boardings]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>total boardings</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger miles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[passenger miles]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>passenger miles</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger hours</remote-name>
            <remote-type>20</remote-type>
            <local-name>[passenger hours]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>passenger hours</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[path id]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>path id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Muni Line Name3' datatype='string' name='[Calculation_914793721622020098]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REGEXP_REPLACE(&#13;&#10;    REGEXP_REPLACE(&#13;&#10;       REGEXP_REPLACE(&#13;&#10;          REGEXP_REPLACE([name],&quot;[-]$&quot;,&quot;&quot;),&#13;&#10;           &quot;^(20_|21_|110_)&quot;,&quot;&quot;),&#13;&#10;           &quot;_?(IN|OUT)[1-4,A-C]?$&quot;,&quot;&quot; ),&#13;&#10;           &quot;(EB[12]?|WB[12]?|NB|SB|PM|PH|EVE|I|O|OWL)$&quot;,&quot;&quot;)' />
      </column>
      <column caption='Muni Route' datatype='string' name='[Calculation_914793721632083973]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REGEXP_REPLACE([Calculation_914793721622020098],&quot;R(N|S)?$&quot;,&quot;L&quot;)' />
      </column>
      <column caption='Is_muni' datatype='boolean' name='[Muni Route (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if (find([Calculation_914793721622020098],&quot;_&quot;)==0) then&#13;&#10;  true&#13;&#10;ELSE&#13;&#10;  false&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='Frequency' datatype='real' name='[frequency]' role='measure' type='quantitative' />
      <column caption='Line Dist' datatype='real' name='[line dist]' role='measure' type='quantitative' />
      <column caption='Line Time' datatype='real' name='[line time]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Mode' datatype='integer' name='[mode]' role='dimension' type='ordinal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Owner' datatype='integer' name='[owner]' role='dimension' type='ordinal' />
      <column caption='Passenger Hours' datatype='integer' name='[passenger hours]' role='measure' type='quantitative' />
      <column caption='Passenger Miles' datatype='integer' name='[passenger miles]' role='measure' type='quantitative' />
      <column caption='Path Id' datatype='string' name='[path id]' role='dimension' type='nominal' />
      <column caption='Estimated Boardings' datatype='integer' name='[total boardings]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='./trnline.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/13/2023 11:36:50 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='trnline' increment-value='%null%' refresh-type='create' rows-inserted='62505' timestamp-start='2023-02-13 23:36:50.052' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>0</ordinal>
              <family>trnline.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4130</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mode</remote-name>
              <remote-type>20</remote-type>
              <local-name>[mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mode</remote-alias>
              <ordinal>1</ordinal>
              <family>trnline.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>owner</remote-name>
              <remote-type>20</remote-type>
              <local-name>[owner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>owner</remote-alias>
              <ordinal>2</ordinal>
              <family>trnline.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>frequency</remote-name>
              <remote-type>5</remote-type>
              <local-name>[frequency]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>frequency</remote-alias>
              <ordinal>3</ordinal>
              <family>trnline.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>99</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>line time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[line time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>line time</remote-alias>
              <ordinal>4</ordinal>
              <family>trnline.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5977</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>line dist</remote-name>
              <remote-type>5</remote-type>
              <local-name>[line dist]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>line dist</remote-alias>
              <ordinal>5</ordinal>
              <family>trnline.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2136</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total boardings</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total boardings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total boardings</remote-alias>
              <ordinal>6</ordinal>
              <family>trnline.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>565</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>passenger miles</remote-name>
              <remote-type>20</remote-type>
              <local-name>[passenger miles]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>passenger miles</remote-alias>
              <ordinal>7</ordinal>
              <family>trnline.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>977</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>passenger hours</remote-name>
              <remote-type>20</remote-type>
              <local-name>[passenger hours]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>passenger hours</remote-alias>
              <ordinal>8</ordinal>
              <family>trnline.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>231</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>path id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[path id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>path id</remote-alias>
              <ordinal>9</ordinal>
              <family>trnline.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>75</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.0irp40u0119v8i12tzbms1vgttyq' name='trnline.csv' table='[trnline#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='name' ordinal='0' />
                  <column datatype='integer' name='mode' ordinal='1' />
                  <column datatype='integer' name='owner' ordinal='2' />
                  <column datatype='real' name='frequency' ordinal='3' />
                  <column datatype='real' name='line time' ordinal='4' />
                  <column datatype='real' name='line dist' ordinal='5' />
                  <column datatype='integer' name='total boardings' ordinal='6' />
                  <column datatype='integer' name='passenger miles' ordinal='7' />
                  <column datatype='integer' name='passenger hours' ordinal='8' />
                  <column datatype='string' name='path id' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Ridership by Operator' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Ridership by Operator' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Muni Scatter'>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline' name='federated.13p64310g9skkr121ymc80vk5pj5' />
            <datasource caption='muni_observed' name='federated.0bz9m4m1b30e7p1h3s25i13yj3jk' />
          </datasources>
          <datasource-dependencies datasource='federated.0bz9m4m1b30e7p1h3s25i13yj3jk'>
            <column caption='Muni Route' datatype='string' name='[Calculation_914793721626112003]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_REPLACE([route],&quot;^0[0]?&quot;,&quot;&quot;)' />
            </column>
            <column caption='Observed Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_914793721626112003]' derivation='None' name='[none:Calculation_914793721626112003:nk]' pivot='key' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column-instance column='[boardings]' derivation='Sum' name='[sum:boardings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13p64310g9skkr121ymc80vk5pj5'>
            <column caption='Muni Line Name3' datatype='string' name='[Calculation_914793721622020098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_REPLACE(&#13;&#10;    REGEXP_REPLACE(&#13;&#10;       REGEXP_REPLACE(&#13;&#10;          REGEXP_REPLACE([name],&quot;[-]$&quot;,&quot;&quot;),&#13;&#10;           &quot;^(20_|21_|110_)&quot;,&quot;&quot;),&#13;&#10;           &quot;_?(IN|OUT)[1-4,A-C]?$&quot;,&quot;&quot; ),&#13;&#10;           &quot;(EB[12]?|WB[12]?|NB|SB|PM|PH|EVE|I|O|OWL)$&quot;,&quot;&quot;)' />
            </column>
            <column caption='Muni Route' datatype='string' name='[Calculation_914793721632083973]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_REPLACE([Calculation_914793721622020098],&quot;R(N|S)?$&quot;,&quot;L&quot;)' />
            </column>
            <column caption='Is_muni' datatype='boolean' name='[Muni Route (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (find([Calculation_914793721622020098],&quot;_&quot;)==0) then&#13;&#10;  true&#13;&#10;ELSE&#13;&#10;  false&#13;&#10;END' />
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_914793721632083973]' derivation='None' name='[none:Calculation_914793721632083973:nk]' pivot='key' type='nominal' />
            <column-instance column='[Muni Route (copy)]' derivation='None' name='[none:Muni Route (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Boardings' datatype='integer' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0bz9m4m1b30e7p1h3s25i13yj3jk].[sum:boardings:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.13p64310g9skkr121ymc80vk5pj5].[none:Muni Route (copy):nk]'>
            <groupfilter function='member' level='[none:Muni Route (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bz9m4m1b30e7p1h3s25i13yj3jk].[sum:boardings:qk]</column>
            <column>[federated.13p64310g9skkr121ymc80vk5pj5].[none:Muni Route (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bz9m4m1b30e7p1h3s25i13yj3jk].[none:Calculation_914793721626112003:nk]' />
              <lod column='[federated.13p64310g9skkr121ymc80vk5pj5].[none:Calculation_914793721632083973:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='false' exclude-intercept='true' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13p64310g9skkr121ymc80vk5pj5].[sum:total boardings:qk]</rows>
        <cols>[federated.0bz9m4m1b30e7p1h3s25i13yj3jk].[sum:boardings:qk]</cols>
      </table>
      <simple-id uuid='{208716FB-59D6-4EBF-ACFA-4D8209C3476B}' />
    </worksheet>
    <worksheet name='Muni Table'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Muni Observed Boardings from APC data</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline' name='federated.13p64310g9skkr121ymc80vk5pj5' />
            <datasource caption='muni_observed' name='federated.0bz9m4m1b30e7p1h3s25i13yj3jk' />
          </datasources>
          <datasource-dependencies datasource='federated.0bz9m4m1b30e7p1h3s25i13yj3jk'>
            <column caption='Observed Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column-instance column='[boardings]' derivation='Sum' name='[sum:boardings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13p64310g9skkr121ymc80vk5pj5'>
            <column caption='Muni Line Name3' datatype='string' name='[Calculation_914793721622020098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_REPLACE(&#13;&#10;    REGEXP_REPLACE(&#13;&#10;       REGEXP_REPLACE(&#13;&#10;          REGEXP_REPLACE([name],&quot;[-]$&quot;,&quot;&quot;),&#13;&#10;           &quot;^(20_|21_|110_)&quot;,&quot;&quot;),&#13;&#10;           &quot;_?(IN|OUT)[1-4,A-C]?$&quot;,&quot;&quot; ),&#13;&#10;           &quot;(EB[12]?|WB[12]?|NB|SB|PM|PH|EVE|I|O|OWL)$&quot;,&quot;&quot;)' />
            </column>
            <column caption='Muni Route' datatype='string' name='[Calculation_914793721632083973]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_REPLACE([Calculation_914793721622020098],&quot;R(N|S)?$&quot;,&quot;L&quot;)' />
            </column>
            <column caption='Is_muni' datatype='boolean' name='[Muni Route (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (find([Calculation_914793721622020098],&quot;_&quot;)==0) then&#13;&#10;  true&#13;&#10;ELSE&#13;&#10;  false&#13;&#10;END' />
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_914793721632083973]' derivation='None' name='[none:Calculation_914793721632083973:nk]' pivot='key' type='nominal' />
            <column-instance column='[Muni Route (copy)]' derivation='None' name='[none:Muni Route (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Boardings' datatype='integer' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13p64310g9skkr121ymc80vk5pj5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13p64310g9skkr121ymc80vk5pj5].[sum:total boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz9m4m1b30e7p1h3s25i13yj3jk].[sum:boardings:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13p64310g9skkr121ymc80vk5pj5].[none:Muni Route (copy):nk]'>
            <groupfilter function='member' level='[none:Muni Route (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13p64310g9skkr121ymc80vk5pj5].[:Measure Names]</column>
            <column>[federated.13p64310g9skkr121ymc80vk5pj5].[none:Muni Route (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.13p64310g9skkr121ymc80vk5pj5].[:Measure Names]' value='103' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.13p64310g9skkr121ymc80vk5pj5].[:Measure Names]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13p64310g9skkr121ymc80vk5pj5].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.13p64310g9skkr121ymc80vk5pj5].[none:Calculation_914793721632083973:nk]</rows>
        <cols>[federated.13p64310g9skkr121ymc80vk5pj5].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{0C5955E3-94B1-40F8-95FC-E59E3A0CDEF7}' />
    </worksheet>
    <worksheet name='Ridership by Operator'>
      <table>
        <view>
          <datasources>
            <datasource caption='ridership_observed_vs_modelled' name='federated.0c4lhlr0eib8m91eknq2i1hz9d02' />
          </datasources>
          <datasource-dependencies datasource='federated.0c4lhlr0eib8m91eknq2i1hz9d02'>
            <column caption='Modelled Boardings' datatype='integer' name='[modelled_boardings]' role='measure' type='quantitative' />
            <column-instance column='[operator_group]' derivation='None' name='[none:operator_group:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Observed Boardings' datatype='real' name='[observed_boardings]' role='measure' type='quantitative' />
            <column caption='Operator Group' datatype='string' name='[operator_group]' role='dimension' type='nominal' />
            <column-instance column='[modelled_boardings]' derivation='Sum' name='[sum:modelled_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_boardings]' derivation='Sum' name='[sum:observed_boardings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:modelled_boardings:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:estimated_boardings:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SF Muni&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;VTA&quot;</bucket>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;Golden Gate Transit&quot;</bucket>
              <bucket>&quot;Smaller Operators&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='Typical Weekday Boardings' />
            <format attr='subtitle' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='49' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='false' />
            <format attr='font-family' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' value='Arial' />
            <format attr='font-size' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1980'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]>]]></run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='2610'><![CDATA[
<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]>: ]]></run>
                <run bold='true' fontcolor='#000000' fontname='Source Sans Pro' fontsize='16' indent='2610'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]</rows>
        <cols>([federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk] / [federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{69BD05B6-4376-4BC1-AFCD-02C002066CB9}' />
    </worksheet>
    <worksheet name='Ridership by Operator &amp; Technology'>
      <table>
        <view>
          <datasources>
            <datasource caption='ridership_observed_vs_modelled' name='federated.0c4lhlr0eib8m91eknq2i1hz9d02' />
          </datasources>
          <datasource-dependencies datasource='federated.0c4lhlr0eib8m91eknq2i1hz9d02'>
            <column datatype='string' name='[Technology (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[technology_6groups]' new-bin='true'>
                <bin default-name='false' value='&quot;all bus&quot;'>
                  <value>&quot;express bus&quot;</value>
                  <value>&quot;local bus&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Modelled Boardings' datatype='integer' name='[modelled_boardings]' role='measure' type='quantitative' />
            <column-instance column='[operator_group]' derivation='None' name='[none:operator_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[technology_6groups]' derivation='None' name='[none:technology_6groups:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Observed Boardings' datatype='real' name='[observed_boardings]' role='measure' type='quantitative' />
            <column caption='Operator Group' datatype='string' name='[operator_group]' role='dimension' type='nominal' />
            <column-instance column='[modelled_boardings]' derivation='Sum' name='[sum:modelled_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_boardings]' derivation='Sum' name='[sum:observed_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Technology' datatype='string' name='[technology_6groups]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:modelled_boardings:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:estimated_boardings:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SF Muni&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;VTA&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;Golden Gate Transit&quot;</bucket>
              <bucket>&quot;Smaller Operators&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:technology_6groups:nk]' />
              <groupfilter function='member' level='[none:technology_6groups:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</column>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='Typical Weekday Boardings' />
            <format attr='subtitle' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='54' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='false' />
            <format attr='font-family' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' value='Arial' />
            <format attr='font-size' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' value='11' />
            <format attr='font-size' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Arial' fontsize='14' indent='1980'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]> <[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontname='Arial' fontsize='14' indent='2610'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]>: ]]></run>
                <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='14' indent='2610'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]</rows>
        <cols>([federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk] / ([federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)] / [federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{16BA0009-AB7A-4C59-8E43-5F8A02BA5E01}' />
    </worksheet>
    <worksheet name='Ridership by Technology'>
      <table>
        <view>
          <datasources>
            <datasource caption='ridership_observed_vs_modelled' name='federated.0c4lhlr0eib8m91eknq2i1hz9d02' />
          </datasources>
          <datasource-dependencies datasource='federated.0c4lhlr0eib8m91eknq2i1hz9d02'>
            <column datatype='string' name='[Technology (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[technology_6groups]' new-bin='true'>
                <bin default-name='false' value='&quot;all bus&quot;'>
                  <value>&quot;express bus&quot;</value>
                  <value>&quot;local bus&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Modelled Boardings' datatype='integer' name='[modelled_boardings]' role='measure' type='quantitative' />
            <column-instance column='[technology_6groups]' derivation='None' name='[none:technology_6groups:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Observed Boardings' datatype='real' name='[observed_boardings]' role='measure' type='quantitative' />
            <column-instance column='[modelled_boardings]' derivation='Sum' name='[sum:modelled_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_boardings]' derivation='Sum' name='[sum:observed_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Technology' datatype='string' name='[technology_6groups]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:modelled_boardings:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:estimated_boardings:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:technology_6groups:nk]' />
              <groupfilter function='member' level='[none:technology_6groups:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</column>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='Typical Weekday Boardings' />
            <format attr='subtitle' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='74' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='false' />
            <format attr='font-family' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' value='Arial' />
            <format attr='font-size' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1980'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]>]]></run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='2610'><![CDATA[
<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]>: ]]></run>
                <run bold='true' fontcolor='#000000' fontname='Source Sans Pro' fontsize='16' indent='2610'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]</rows>
        <cols>([federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)] / [federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{48B00DF4-0B8E-4DFC-BB72-0F69416829B9}' />
    </worksheet>
    <worksheet name='Table by Op and Tech'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Source: Observed Data for Operator Ridership from Operator&apos;s Transit Passenger Survey Data (</run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://bayareametro.github.io/transit-passenger-surveys/&amp;quot;'>https://bayareametro.github.io/transit-passenger-surveys/</run>
            <run>), weighted to 2015 boardings.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ridership_observed_vs_modelled' name='federated.0c4lhlr0eib8m91eknq2i1hz9d02' />
          </datasources>
          <datasource-dependencies datasource='federated.0c4lhlr0eib8m91eknq2i1hz9d02'>
            <column caption='Difference' datatype='real' name='[Calculation_706783718292918273]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([modelled_boardings])-sum([observed_boardings])' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Difference (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_706783718292918273]/sum([observed_boardings])' />
            </column>
            <column datatype='string' name='[Technology (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[technology_6groups]' new-bin='true'>
                <bin default-name='false' value='&quot;all bus&quot;'>
                  <value>&quot;express bus&quot;</value>
                  <value>&quot;local bus&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Modelled Boardings' datatype='integer' name='[modelled_boardings]' role='measure' type='quantitative' />
            <column-instance column='[operator_group]' derivation='None' name='[none:operator_group:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Observed Boardings' datatype='real' name='[observed_boardings]' role='measure' type='quantitative' />
            <column caption='Operator Group' datatype='string' name='[operator_group]' role='dimension' type='nominal' />
            <column-instance column='[modelled_boardings]' derivation='Sum' name='[sum:modelled_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_boardings]' derivation='Sum' name='[sum:observed_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Technology' datatype='string' name='[technology_6groups]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_706783718292918273]' derivation='User' name='[usr:Calculation_706783718292918273:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference (copy)]' derivation='User' name='[usr:Difference (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:modelled_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Calculation_706783718292918273:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Difference (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:estimated_boardings:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:operator_group:nk]' />
              <groupfilter function='member' level='[none:operator_group:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</column>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='109' />
            <format attr='text-format' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Difference (copy):qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk] / [federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)])</rows>
        <cols>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B9DE2746-AC11-42A0-A215-B0330D1C0E56}' />
    </worksheet>
    <worksheet name='Table by Op and Tech_express'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Source: Observed Data for Operator Ridership from Operator&apos;s Transit Passenger Survey Data (</run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://bayareametro.github.io/transit-passenger-surveys/&amp;quot;'>https://bayareametro.github.io/transit-passenger-surveys/</run>
            <run>), weighted to 2015 boardings.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ridership_observed_vs_modelled' name='federated.0c4lhlr0eib8m91eknq2i1hz9d02' />
          </datasources>
          <datasource-dependencies datasource='federated.0c4lhlr0eib8m91eknq2i1hz9d02'>
            <column caption='Difference' datatype='real' name='[Calculation_706783718292918273]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([modelled_boardings])-sum([observed_boardings])' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Difference (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_706783718292918273]/sum([observed_boardings])' />
            </column>
            <column caption='Modelled Boardings' datatype='integer' name='[modelled_boardings]' role='measure' type='quantitative' />
            <column-instance column='[operator_group]' derivation='None' name='[none:operator_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[technology_6groups]' derivation='None' name='[none:technology_6groups:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Observed Boardings' datatype='real' name='[observed_boardings]' role='measure' type='quantitative' />
            <column caption='Operator Group' datatype='string' name='[operator_group]' role='dimension' type='nominal' />
            <column-instance column='[modelled_boardings]' derivation='Sum' name='[sum:modelled_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_boardings]' derivation='Sum' name='[sum:observed_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Technology' datatype='string' name='[technology_6groups]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_706783718292918273]' derivation='User' name='[usr:Calculation_706783718292918273:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference (copy)]' derivation='User' name='[usr:Difference (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:modelled_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Calculation_706783718292918273:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Difference (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:estimated_boardings:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:operator_group:nk]' />
              <groupfilter function='member' level='[none:operator_group:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</column>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='109' />
            <format attr='text-format' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Difference (copy):qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk] / [federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk])</rows>
        <cols>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{3DF6AD6E-8E4A-42DC-B6B6-622D86C0D1F9}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' maximized='true' name='Table by Op and Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='88'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE766396-FEF8-44DD-A81E-E061F8272A36}' />
    </window>
    <window class='worksheet' name='Table by Op and Tech_express'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='91'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBCFC33F-5DA8-463F-966E-ABCB306C0E4E}' />
    </window>
    <window class='worksheet' name='Ridership by Technology'>
      <cards>
        <edge name='left'>
          <strip size='276'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F353D135-B559-4132-9718-4977A3D684DA}' />
    </window>
    <window class='worksheet' name='Ridership by Operator'>
      <cards>
        <edge name='left'>
          <strip size='261'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F7188C1-9E86-4C92-A749-CAA7424AA8C0}' />
    </window>
    <window class='worksheet' name='Ridership by Operator &amp; Technology'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15EEEFE7-FD27-4EB6-9ACF-39052416B4AC}' />
    </window>
    <window class='worksheet' name='Muni Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13p64310g9skkr121ymc80vk5pj5].[none:Calculation_914793721622020098:nk]</field>
            <field>[federated.13p64310g9skkr121ymc80vk5pj5].[none:Muni Route (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C739354-B416-4285-868E-396ACCF306A5}' />
    </window>
    <window class='worksheet' name='Muni Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13p64310g9skkr121ymc80vk5pj5].[none:Muni Route (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF952598-AE24-4749-8EEB-F5A9574D9DFB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Muni Scatter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Muni Table' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Ridership by Operator' width='192'>
      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
      fvhfhgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ridership by Operator &amp; Technology' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ridership by Technology' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQGUlEQVR4nO3dSWwcZ3rG8X9V9b43l+6mSJGUqMWUbGlGzsiyx8sYweSQQ65BLkGuuQXI
      JUAuQXLLOQhyCILkkmOAIDkEmGAmdryNPRrHtjZLsiiKW3PpZu9bbTlwRJtsWWr2sLtL+t7f
      RVCzq/pldT2s+qrqrdJc13URQlH6cc/Qa3lyXdeTNXmN12oa1vd27AGo1Wp9T1utVqlWqwCU
      y+Vjqcc0Tdrt9rHMC6DTamE/44uxO02KxV069pN//tsso1q5SKna6Hv6751vjzU9/n76+4wq
      lUqVXtZr13Wp1+s9z9tqNdktlTDtvZm3m3Xalg2uS6vV6np/s16nXKng6/kTBsV1uH/3Dm4g
      RnV3B4ArV67w/i9+xkuXrhIN+TBsm47uUi43uXDh/LGltrSTZzVfZHw8yc5OicnxBPmtAobf
      RzKZori9gwuEonGSsTCG63Dn9k3mFy9SKuwyN5Pj/mqBV185z73bNwhHE5QqZXLZDKsPv2H6
      4o/JRI+p2N/45MMPWLh4mZVHTbLjMYo7BWzDTzKVQXPaTE9PH+8HHvLVrz8jNp5l9kSGlbVN
      Ts7OsLayQjgcITl5gtL6fRK5U3TqFaanJ/ni+k1SkynK5Qbj4yk2N/JcvnIF45jrqu2s86Bs
      cWKsSX5jFd11qVg685kkXz3c4ffffZ1bX/6aWHKcUrnC+MQ4m/n1498CHJVrNVnNF7l37/6B
      13PTs5SLm2zkN9haXWO3VqFer2E7x/fZ9x484uLLF1hZWeX0iSSf/fIL0pNpbF+C9aVbNCwf
      lmVS291mbWODzY11AtEES/fv4ffDN3du4Y+OoWlQrrdo1cvYjSI3b9+lUDm+rc53JdMZvrl3
      B7tR5PbXy9iuTTJ3ivWlm+S3KwP5zO8KROKEafPhJ9fB7XDjq5vUm3Ueree5+av/pWoFuH39
      A0pNAAvT8VHcypN/8A33VldxnMHt1pQKm3xxZ4m5TJztUotTczOsbRZIJxMA1Ds2tdIOlZ1H
      3P56mabljH4L4Lou4XAIdIN4PL7/ertRJTY2RVAzKZTqTMfiWNUWlgP+Y4rt1GSamzdukUwk
      uLu8xZmzp4iEQtiuTiA1BsEYfi2IY5lYlklxt0kuO07HcTHNNuPZKdxoEIBUKoXPtdD8YZJ+
      Py4ageP+MwckkgnGJlNUKg1y2RjhkEE4YKDbJjMLp4//Aw9JplKEfXB2IUqj2WBsLEW70yYW
      iGCW2iycWeD6xhLzs1nAIpmK02maROIRwtE4MZ+BNoC6fMEwY6kUoUCQr+8vE01mCQeDJFIp
      mq29fdFUMoVrtQiGYgSCMaJRP5q759gKqVarB1bkUTNNE9u2CYVCoy5l3/EvI5ulB6vMn5pD
      63PtOq6aHKvNo/Vt5mdnfrv5OA6NRoNYLHak6TbXHlGoNDlz7iwB49l/KfcD8LRBUKdRZqdm
      09zdIJWZYWPlESdnp1nN75JORogFDQilSEQCNBoNIpHIkYoeJMuycByHQCAw6lL2eW0Zgfdq
      cl2Xdrs98D9cPgBN056a/u3qNs1aEy0QZmPpDuFUhttfPyKbSbK+uYFGkHfePI3jONi2TTgc
      HmjRR2GaJo7jEAwGR13KPq8tI/BeTY/3SgZdU09jgNTYOPndPJWdPPH0JJsbeSazGbaKNWLR
      MOlIgM3dOrmxGIZh4PONfGixz3EcNE3zVE1eW0bgvZocx0HX9YHX1NPc/aEkr1xMAuf3Xrg0
      wIqEGKKRHwYVYpQkAEJpEgChNAmAUJoEQChtYMeYTMvG7uO6j4DPQNcHcbJciG4DC8Df/dun
      /M//LR95ur/6k3f44bmpAVQkRDfZBRJKkwAIpUkAhNIkAEJpEgChNO9c/vc9HhTu848f//2R
      p3tl6gf80at/PICKxIvE8wFomU0eFh8cebpsXA6limeTXSChNAmAUFrPu0CuY3Pn1k3SmRz5
      tTVOnpxmdbPEWDJMLGigR8ZJRr3TdihEL44QAItiucTa8hITM6e5/vkdctkU9x6so2lBfvLm
      1P7t7FzXpd/7TLgcvE1f/zescA/W46Fb/3mtHvBeTcP63noOgGb4mUwnaUTiFLe2mJrKsFOs
      k4glSEf8bO7WyaQiuK6L4zj0mwDXdfam3/9/vzPa6yt9vBC/O89R81o94L2ahvW99R4ATefc
      hcvPfJ+u6xiG0ff9aXRtb/pv59fnjDQNwzCw7b2bIn13nqP2eBl5iddqetwUP+iaZBAslCYB
      EEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoE
      QCjtCAFwadRrmLZNrVbDcWzq9QadTgfHtjAte3BVCjEgvd8XyLH49OMPCcfiNJsdQpEoHdPB
      HzKIGhoLFy7j9/xdhoQ4qOdV1rFtgpEoZqNOPDlOqdwknY5SrhTp6EF8ho5t29i2vfd09j57
      eW3HwbKsb/9v99cT6roulmVh2zbOoXmO2uNl5CVeq+lxP/Cga+q9J9gXZHoqRyydobi9xeLi
      WTa2SszOzhAPB2g0mqQT0f0HLut9NgUbhx6ObBj9DVMePxxbHpTdG6/V5KkHZcPeCjV76gwA
      Y6kEAAvz8f2fyx2BxPNIjgIJpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITS
      JABCaRIAoTQJgFCaBEAoTQIglCYBEEo70oOyl765hxGK027UmZ7Osb5VIhUPEw36sHwREhFp
      ixHPl947wnSDSMCg1qxSqzf55NMvGUvHWc8/wsDPG69fHWSdQgzEkRout0pNzs5lWFlZJxZP
      UK418ft0YiGDYqVJOhaUpvgeeK0BHbxXk+ea4gEuXLyAYRhceyNJMBik3THxGTo+Q8dy9hqr
      pSn+2bzWgA7eq8lzTfHAfjHhcHjv39C3+/x+GU6L55CstkJpEgChNAmAUJoEQChNAiCUJgEQ
      SpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0npvirdNPv30M6ZyGe7e
      W2Iyl2Fnt0EiESIR0MnOv0QqKk3x4vnSFQC7XeGDD68THM9x7fLi/uuOZVJv1ll9uMxkNsfW
      VolcJslWYZuKEebMYkAelN0jr/XfgvdqGllPsOtY5HdrnE62cF143NqrB0LMzcwQiqcobG7x
      6pVF1vK7nD/3EqlogEK5TiYdk57gHnit/xa8V9PIeoKdTh3NCPL1rS9w/WGuXnoJAE3TWTi3
      t0WYnpoCYGxsYn+62EDLFGIwuv68+mIZKqs3GJs6zZlTs6OoSYih6QqAVd0kmDnL6VNzjMUj
      o6hJiKE5GADXZW27RiYZoN5sj6gkIYbn0BjAZW1liXKlTSBeGU1FQgzRwS2ApnPt2jUi0Tjh
      UGBEJQkxPF1jANc2aXZM4rH4KOoRYqi6AqDpBpXdIvnNrVHUI8RQdZ0H0IMxTp2YIByXLYB4
      8XVfCtEsUe4YmMWdUdQjxFB17QK1nDAxrcKJ2dOjqEeIoToYAMfmww/eo+VLUtpeHVFJQgzP
      ocOgGpFwCKwWvkB0RCUJMTwHxwCazptvvU255ZKWyyCEArqvNdV0/vvf/xUnMsG1a9eYOzE5
      grKEGI6uQbDTrmD5E8zPz3MyNz6KmoQYmiecCPORSiZomya6Li3D4sV2cBfIdfj444+oVtoE
      46lDb3VZX1kmFB+nVa+SyYyzXagQi4YIB3y0HYNoWK4fEs+XrkHwtdff4GfvXycSOtjg7joW
      9+4vsXjOZWVli7v3HxKJhDBdi6CmcfnK7wyzbiGOxaEtgMvdWze4e+cWs4uH7/Cgk8uOs/Rw
      jY4NkXAY0zSx7RZuOEK90SIeCUhTfA+81oAO3qtpZE3xZxYvcWO5xOJc9sDrmm5w/sKlZ85Q
      muKfzWsN6OC9mobVFN91IszQXRq1CpVmZ6AfLIQXdPcDODZNx4cPexT1CDFUXT3BrhFmIRsn
      0nUUSIgXT9cW4M7NG+iGTqlaH0U9QgzVoQC4rK08pNrRWDxzajQVCTFEXVuAqZk5piYSLK+s
      j6IeIYbq0DEmjXOLL2M7LobPP5qKxAvBdV1MxzzydDoaPmN4617XQdblB7d5771PmDr3A/7g
      p28OrRDxYlkpLfMX//FnR57uYu4Sf/l7fz2Aip6s6zzAwtwMwcQEfu+cExFiYJ54V4h3332X
      TluOAokXX/d5AMfi9s0v2a02R1SSEMPTtQVYXd2gsLlKMntyFPWIETMtG9s5+oWMfkPv+7qt
      UTp0ObTGdDZNZGyGwsYy7QsLBANyNEgl//xfX/CfH9098nR//oev8/bluQFUNFhdkdX1AJGw
      n+mpLOW67AaJF1vXGAB/mGZhjftLKzTlGQHiBdfVEvnzX/yc2XOXmMxmmc5KU7x4sXUNgoOR
      GIlYGJ9hdDXFu66D44BtW/j9PkzLxtB1dE3DYa+ZRYjnycEA6AZvv/XO97750d3P2SzrVMsF
      Euk01XqHSCxA3Kcxe+5l4tIUL54zPZ/vdawWDx6t4TgRxjITFIo1JsbjFEsFmnqQcwGfPCi7
      R17rv4Vva3Kd/pb34WVs2302VP3mextZT/D30X0h3vrJ71Iqd9jZzvPa1XnWN0tcPDFFMhKg
      Um0ynopKT3APvNZ/C9/WpPW5G3u4f9cwjP4K+c73NpIHZT/1zf4oExNRJibSAJz/TtdY6Hjr
      EmIoZNQqlCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJp
      EgChNAmAUJoEQCit54YY13VZXV4iOZmjsJlnaipLfrtEIhYmEvRhaiHiEekJFs+XI3SEuQQM
      h5uf/wp/MMrS8gbJZJSVtQY+zcfVqz8aXJVCDEjvAXBdHN2Pa1s0GnVCoRCNVgdch0DApdJo
      kwj7pSm+B9IU/xRebYrXNJ1oLMGPfvwOjXqNeCxKrdEiEPAR8PnoWC6GYUhTfA+kKf4pPNsU
      r2kkknvN8MlkEoBEPLb/41Cfv68QoyRHgYTSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAil
      SQCE0rx1Pl6IAWp0GlTb5QOvSQCEMj5aep9/+uU/HHhNAiA872/+5X2WNnaPPN3f/ulPmUhG
      nvoeCYDwvFKtRaFy9Ie2O86zL8mXQbBQmgRAKE0CIJTWe1O8Y3H39k2apsNuYZfsVJatYp1k
      IkQ8oDNx8iypaHCQtQpx7HpvidQNIuEQjtNkbHKS1bUiU9kkW4VtinqY0+cD8qDsHklP8FM8
      sSe4z3Xp0HJ2nvC7HeFJ8R02tkvMzs+xsbrODy+fZW2zxJmFs6QifnZKdTLpmPQE90B6gp/i
      iT3Bfa5Lh5az/oTf7QhPig9y9bXXAMhlcwBMZnJ9FSaEV8ggWChNAiCUJgEQSpMACKVJAITS
      JABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQ2pECYHVadCyb7e0d
      bNtkp7BLo9HANts02+agahRiYP4f8fpHVWRgJR4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Table by Op and Tech' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table by Op and Tech_express' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
