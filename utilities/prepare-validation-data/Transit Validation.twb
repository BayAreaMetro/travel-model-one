<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xml:base='https://10ay.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='TransitValidation_model_run_id' path='/t/metropolitantransportationcommission/workbooks' revision='1.0' site='metropolitantransportationcommission' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='ridership_observed_vs_modelled' inline='true' name='federated.0c4lhlr0eib8m91eknq2i1hz9d02' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ridership_observed_vs_modelled' name='textscan.0nr78lj0zpqupo1bini040v4ppw0'>
            <connection class='textscan' directory='.' filename='observed_and_estimated_ridership.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0nr78lj0zpqupo1bini040v4ppw0' name='ridership_observed_vs_modelled.csv' table='[ridership_observed_vs_modelled#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator' ordinal='0' />
            <column datatype='string' name='operator_group' ordinal='1' />
            <column datatype='string' name='technology_6groups' ordinal='2' />
            <column datatype='real' name='observed_boardings' ordinal='3' />
            <column datatype='integer' name='modelled_boardings' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0nr78lj0zpqupo1bini040v4ppw0' name='ridership_observed_vs_modelled.csv' table='[ridership_observed_vs_modelled#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator' ordinal='0' />
            <column datatype='string' name='operator_group' ordinal='1' />
            <column datatype='string' name='technology_6groups' ordinal='2' />
            <column datatype='real' name='observed_boardings' ordinal='3' />
            <column datatype='integer' name='modelled_boardings' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ridership_observed_vs_modelled.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[ridership_observed_vs_modelled.csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator_group]</local-name>
            <parent-name>[ridership_observed_vs_modelled.csv]</parent-name>
            <remote-alias>operator_group</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>technology_6groups</remote-name>
            <remote-type>129</remote-type>
            <local-name>[technology_6groups]</local-name>
            <parent-name>[ridership_observed_vs_modelled.csv]</parent-name>
            <remote-alias>technology_6groups</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed_boardings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[observed_boardings]</local-name>
            <parent-name>[ridership_observed_vs_modelled.csv]</parent-name>
            <remote-alias>observed_boardings</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>modelled_boardings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[modelled_boardings]</local-name>
            <parent-name>[ridership_observed_vs_modelled.csv]</parent-name>
            <remote-alias>modelled_boardings</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:estimated_boardings:qk]&quot;' value='Modeled Weekday Boardings' />
          <alias key='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;' value='Observed Weekday Boardings' />
        </aliases>
      </column>
      <column caption='Difference' datatype='real' name='[Calculation_706783718292918273]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([modelled_boardings])-sum([observed_boardings])' />
      </column>
      <column caption='Percent Difference' datatype='real' name='[Difference (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_706783718292918273]/sum([observed_boardings])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Technology (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[technology_6groups]' new-bin='true'>
          <bin default-name='false' value='&quot;all bus&quot;'>
            <value>&quot;express bus&quot;</value>
            <value>&quot;local bus&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='Modelled Boardings' datatype='integer' name='[modelled_boardings]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Observed Boardings' datatype='real' name='[observed_boardings]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column caption='Operator Group' datatype='string' name='[operator_group]' role='dimension' type='nominal' />
      <column caption='Technology' datatype='string' name='[technology_6groups]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[Migrated Data]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Migrated Data:qk]' pivot='key' type='quantitative' />
      <column-instance column='[observed_boardings]' derivation='CountD' name='[ctd:observed_boardings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[operator_group]' derivation='None' name='[none:operator_group:nk]' pivot='key' type='nominal' />
      <column-instance column='[technology_6groups]' derivation='None' name='[none:technology_6groups:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[modelled_boardings]' derivation='Sum' name='[sum:modelled_boardings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[observed_boardings]' derivation='Sum' name='[sum:observed_boardings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_706783718292918273]' derivation='User' name='[usr:Calculation_706783718292918273:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Difference (copy)]' derivation='User' name='[usr:Difference (copy):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[ctd:observed_boardings:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:modelled_boardings:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Calculation_706783718292918273:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[__tableau_internal_object_id__].[cnt:Migrated Data:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Difference (copy):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:operator_group:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;AC Transit&quot;</bucket>
            <bucket>&quot;BART&quot;</bucket>
            <bucket>&quot;Caltrain&quot;</bucket>
            <bucket>&quot;Golden Gate Transit&quot;</bucket>
            <bucket>&quot;SamTrans&quot;</bucket>
            <bucket>&quot;SF Muni&quot;</bucket>
            <bucket>&quot;VTA&quot;</bucket>
            <bucket>&quot;Smaller Operators&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:technology_6groups:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;heavy rail&quot;</bucket>
            <bucket>&quot;commuter rail&quot;</bucket>
            <bucket>&quot;express bus&quot;</bucket>
            <bucket>&quot;ferry&quot;</bucket>
            <bucket>&quot;light rail&quot;</bucket>
            <bucket>&quot;local bus&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.0nr78lj0zpqupo1bini040v4ppw0' name='ridership_observed_vs_modelled.csv' table='[ridership_observed_vs_modelled#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='operator' ordinal='0' />
                  <column datatype='string' name='operator_group' ordinal='1' />
                  <column datatype='string' name='technology_6groups' ordinal='2' />
                  <column datatype='real' name='observed_boardings' ordinal='3' />
                  <column datatype='integer' name='modelled_boardings' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='muni_observed' inline='true' name='federated.0bz9m4m1b30e7p1h3s25i13yj3jk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='muni_observed' name='textscan.0t9bgx21w1gykl1fjesyl0hwgax9'>
            <connection class='textscan' directory='.' filename='muni_observed.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0t9bgx21w1gykl1fjesyl0hwgax9' name='muni_observed.csv' table='[muni_observed#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='route' ordinal='0' />
            <column datatype='integer' name='boardings' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0t9bgx21w1gykl1fjesyl0hwgax9' name='muni_observed.csv' table='[muni_observed#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='route' ordinal='0' />
            <column datatype='integer' name='boardings' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[muni_observed.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[muni_observed.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boardings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[boardings]</local-name>
            <parent-name>[muni_observed.csv]</parent-name>
            <remote-alias>boardings</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Muni Route' datatype='string' name='[Calculation_914793721626112003]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REGEXP_REPLACE([route],&quot;^0[0]?&quot;,&quot;&quot;)' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='Observed Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.0t9bgx21w1gykl1fjesyl0hwgax9' name='muni_observed.csv' table='[muni_observed#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='route' ordinal='0' />
                  <column datatype='integer' name='boardings' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='trnline' inline='true' name='federated.13p64310g9skkr121ymc80vk5pj5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='trnline' name='textscan.0irp40u0119v8i12tzbms1vgttyq'>
            <connection class='textscan' directory='.' filename='trnline.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0irp40u0119v8i12tzbms1vgttyq' name='trnline.csv' table='[trnline#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='integer' name='mode' ordinal='1' />
            <column datatype='integer' name='owner' ordinal='2' />
            <column datatype='real' name='frequency' ordinal='3' />
            <column datatype='real' name='line time' ordinal='4' />
            <column datatype='real' name='line dist' ordinal='5' />
            <column datatype='integer' name='total boardings' ordinal='6' />
            <column datatype='integer' name='passenger miles' ordinal='7' />
            <column datatype='integer' name='passenger hours' ordinal='8' />
            <column datatype='string' name='path id' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0irp40u0119v8i12tzbms1vgttyq' name='trnline.csv' table='[trnline#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='integer' name='mode' ordinal='1' />
            <column datatype='integer' name='owner' ordinal='2' />
            <column datatype='real' name='frequency' ordinal='3' />
            <column datatype='real' name='line time' ordinal='4' />
            <column datatype='real' name='line dist' ordinal='5' />
            <column datatype='integer' name='total boardings' ordinal='6' />
            <column datatype='integer' name='passenger miles' ordinal='7' />
            <column datatype='integer' name='passenger hours' ordinal='8' />
            <column datatype='string' name='path id' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[owner]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>owner</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequency</remote-name>
            <remote-type>5</remote-type>
            <local-name>[frequency]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>frequency</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line time]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>line time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line dist]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>line dist</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total boardings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total boardings]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>total boardings</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger miles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[passenger miles]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>passenger miles</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger hours</remote-name>
            <remote-type>20</remote-type>
            <local-name>[passenger hours]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>passenger hours</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[path id]</local-name>
            <parent-name>[trnline.csv]</parent-name>
            <remote-alias>path id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Muni Line Name3' datatype='string' name='[Calculation_914793721622020098]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REGEXP_REPLACE(&#13;&#10;    REGEXP_REPLACE(&#13;&#10;       REGEXP_REPLACE(&#13;&#10;          REGEXP_REPLACE([name],&quot;[-]$&quot;,&quot;&quot;),&#13;&#10;           &quot;^(20_|21_|110_)&quot;,&quot;&quot;),&#13;&#10;           &quot;_?(IN|OUT)[1-4,A-C]?$&quot;,&quot;&quot; ),&#13;&#10;           &quot;(EB[12]?|WB[12]?|NB|SB|PM|PH|EVE|I|O|OWL)$&quot;,&quot;&quot;)' />
      </column>
      <column caption='Muni Route' datatype='string' name='[Calculation_914793721632083973]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REGEXP_REPLACE([Calculation_914793721622020098],&quot;R(N|S)?$&quot;,&quot;L&quot;)' />
      </column>
      <column caption='Is_muni' datatype='boolean' name='[Muni Route (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if (find([Calculation_914793721622020098],&quot;_&quot;)==0) then&#13;&#10;  true&#13;&#10;ELSE&#13;&#10;  false&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='Frequency' datatype='real' name='[frequency]' role='measure' type='quantitative' />
      <column caption='Line Dist' datatype='real' name='[line dist]' role='measure' type='quantitative' />
      <column caption='Line Time' datatype='real' name='[line time]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Mode' datatype='integer' name='[mode]' role='dimension' type='ordinal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Owner' datatype='integer' name='[owner]' role='dimension' type='ordinal' />
      <column caption='Passenger Hours' datatype='integer' name='[passenger hours]' role='measure' type='quantitative' />
      <column caption='Passenger Miles' datatype='integer' name='[passenger miles]' role='measure' type='quantitative' />
      <column caption='Path Id' datatype='string' name='[path id]' role='dimension' type='nominal' />
      <column caption='Estimated Boardings' datatype='integer' name='[total boardings]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.0irp40u0119v8i12tzbms1vgttyq' name='trnline.csv' table='[trnline#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='name' ordinal='0' />
                  <column datatype='integer' name='mode' ordinal='1' />
                  <column datatype='integer' name='owner' ordinal='2' />
                  <column datatype='real' name='frequency' ordinal='3' />
                  <column datatype='real' name='line time' ordinal='4' />
                  <column datatype='real' name='line dist' ordinal='5' />
                  <column datatype='integer' name='total boardings' ordinal='6' />
                  <column datatype='integer' name='passenger miles' ordinal='7' />
                  <column datatype='integer' name='passenger hours' ordinal='8' />
                  <column datatype='string' name='path id' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Ridership by Operator' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Ridership by Operator' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Muni Scatter'>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline' name='federated.13p64310g9skkr121ymc80vk5pj5' />
            <datasource caption='muni_observed' name='federated.0bz9m4m1b30e7p1h3s25i13yj3jk' />
          </datasources>
          <datasource-dependencies datasource='federated.0bz9m4m1b30e7p1h3s25i13yj3jk'>
            <column caption='Muni Route' datatype='string' name='[Calculation_914793721626112003]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_REPLACE([route],&quot;^0[0]?&quot;,&quot;&quot;)' />
            </column>
            <column caption='Observed Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_914793721626112003]' derivation='None' name='[none:Calculation_914793721626112003:nk]' pivot='key' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column-instance column='[boardings]' derivation='Sum' name='[sum:boardings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13p64310g9skkr121ymc80vk5pj5'>
            <column caption='Muni Line Name3' datatype='string' name='[Calculation_914793721622020098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_REPLACE(&#13;&#10;    REGEXP_REPLACE(&#13;&#10;       REGEXP_REPLACE(&#13;&#10;          REGEXP_REPLACE([name],&quot;[-]$&quot;,&quot;&quot;),&#13;&#10;           &quot;^(20_|21_|110_)&quot;,&quot;&quot;),&#13;&#10;           &quot;_?(IN|OUT)[1-4,A-C]?$&quot;,&quot;&quot; ),&#13;&#10;           &quot;(EB[12]?|WB[12]?|NB|SB|PM|PH|EVE|I|O|OWL)$&quot;,&quot;&quot;)' />
            </column>
            <column caption='Muni Route' datatype='string' name='[Calculation_914793721632083973]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_REPLACE([Calculation_914793721622020098],&quot;R(N|S)?$&quot;,&quot;L&quot;)' />
            </column>
            <column caption='Is_muni' datatype='boolean' name='[Muni Route (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (find([Calculation_914793721622020098],&quot;_&quot;)==0) then&#13;&#10;  true&#13;&#10;ELSE&#13;&#10;  false&#13;&#10;END' />
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_914793721632083973]' derivation='None' name='[none:Calculation_914793721632083973:nk]' pivot='key' type='nominal' />
            <column-instance column='[Muni Route (copy)]' derivation='None' name='[none:Muni Route (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Boardings' datatype='integer' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0bz9m4m1b30e7p1h3s25i13yj3jk].[sum:boardings:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.13p64310g9skkr121ymc80vk5pj5].[none:Muni Route (copy):nk]'>
            <groupfilter function='member' level='[none:Muni Route (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bz9m4m1b30e7p1h3s25i13yj3jk].[sum:boardings:qk]</column>
            <column>[federated.13p64310g9skkr121ymc80vk5pj5].[none:Muni Route (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bz9m4m1b30e7p1h3s25i13yj3jk].[none:Calculation_914793721626112003:nk]' />
              <lod column='[federated.13p64310g9skkr121ymc80vk5pj5].[none:Calculation_914793721632083973:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='false' exclude-intercept='true' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13p64310g9skkr121ymc80vk5pj5].[sum:total boardings:qk]</rows>
        <cols>[federated.0bz9m4m1b30e7p1h3s25i13yj3jk].[sum:boardings:qk]</cols>
      </table>
      <simple-id uuid='{208716FB-59D6-4EBF-ACFA-4D8209C3476B}' />
    </worksheet>
    <worksheet name='Muni Table'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Muni Observed Boardings from APC data</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline' name='federated.13p64310g9skkr121ymc80vk5pj5' />
            <datasource caption='muni_observed' name='federated.0bz9m4m1b30e7p1h3s25i13yj3jk' />
          </datasources>
          <datasource-dependencies datasource='federated.0bz9m4m1b30e7p1h3s25i13yj3jk'>
            <column caption='Observed Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column-instance column='[boardings]' derivation='Sum' name='[sum:boardings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13p64310g9skkr121ymc80vk5pj5'>
            <column caption='Muni Line Name3' datatype='string' name='[Calculation_914793721622020098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_REPLACE(&#13;&#10;    REGEXP_REPLACE(&#13;&#10;       REGEXP_REPLACE(&#13;&#10;          REGEXP_REPLACE([name],&quot;[-]$&quot;,&quot;&quot;),&#13;&#10;           &quot;^(20_|21_|110_)&quot;,&quot;&quot;),&#13;&#10;           &quot;_?(IN|OUT)[1-4,A-C]?$&quot;,&quot;&quot; ),&#13;&#10;           &quot;(EB[12]?|WB[12]?|NB|SB|PM|PH|EVE|I|O|OWL)$&quot;,&quot;&quot;)' />
            </column>
            <column caption='Muni Route' datatype='string' name='[Calculation_914793721632083973]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_REPLACE([Calculation_914793721622020098],&quot;R(N|S)?$&quot;,&quot;L&quot;)' />
            </column>
            <column caption='Is_muni' datatype='boolean' name='[Muni Route (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (find([Calculation_914793721622020098],&quot;_&quot;)==0) then&#13;&#10;  true&#13;&#10;ELSE&#13;&#10;  false&#13;&#10;END' />
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_914793721632083973]' derivation='None' name='[none:Calculation_914793721632083973:nk]' pivot='key' type='nominal' />
            <column-instance column='[Muni Route (copy)]' derivation='None' name='[none:Muni Route (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Boardings' datatype='integer' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13p64310g9skkr121ymc80vk5pj5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13p64310g9skkr121ymc80vk5pj5].[sum:total boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz9m4m1b30e7p1h3s25i13yj3jk].[sum:boardings:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13p64310g9skkr121ymc80vk5pj5].[none:Muni Route (copy):nk]'>
            <groupfilter function='member' level='[none:Muni Route (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13p64310g9skkr121ymc80vk5pj5].[:Measure Names]</column>
            <column>[federated.13p64310g9skkr121ymc80vk5pj5].[none:Muni Route (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.13p64310g9skkr121ymc80vk5pj5].[:Measure Names]' value='103' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.13p64310g9skkr121ymc80vk5pj5].[:Measure Names]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13p64310g9skkr121ymc80vk5pj5].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.13p64310g9skkr121ymc80vk5pj5].[none:Calculation_914793721632083973:nk]</rows>
        <cols>[federated.13p64310g9skkr121ymc80vk5pj5].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{0C5955E3-94B1-40F8-95FC-E59E3A0CDEF7}' />
    </worksheet>
    <worksheet name='Ridership by Operator'>
      <table>
        <view>
          <datasources>
            <datasource caption='ridership_observed_vs_modelled' name='federated.0c4lhlr0eib8m91eknq2i1hz9d02' />
          </datasources>
          <datasource-dependencies datasource='federated.0c4lhlr0eib8m91eknq2i1hz9d02'>
            <column caption='Modelled Boardings' datatype='integer' name='[modelled_boardings]' role='measure' type='quantitative' />
            <column-instance column='[operator_group]' derivation='None' name='[none:operator_group:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Observed Boardings' datatype='real' name='[observed_boardings]' role='measure' type='quantitative' />
            <column caption='Operator Group' datatype='string' name='[operator_group]' role='dimension' type='nominal' />
            <column-instance column='[modelled_boardings]' derivation='Sum' name='[sum:modelled_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_boardings]' derivation='Sum' name='[sum:observed_boardings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:modelled_boardings:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:estimated_boardings:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SF Muni&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;VTA&quot;</bucket>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;Golden Gate Transit&quot;</bucket>
              <bucket>&quot;Smaller Operators&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='Typical Weekday Boardings' />
            <format attr='subtitle' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='49' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='false' />
            <format attr='font-family' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' value='Arial' />
            <format attr='font-size' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1980'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]>]]></run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='2610'><![CDATA[
<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]>: ]]></run>
                <run bold='true' fontcolor='#000000' fontname='Source Sans Pro' fontsize='16' indent='2610'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]</rows>
        <cols>([federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk] / [federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{69BD05B6-4376-4BC1-AFCD-02C002066CB9}' />
    </worksheet>
    <worksheet name='Ridership by Operator &amp; Technology'>
      <table>
        <view>
          <datasources>
            <datasource caption='ridership_observed_vs_modelled' name='federated.0c4lhlr0eib8m91eknq2i1hz9d02' />
          </datasources>
          <datasource-dependencies datasource='federated.0c4lhlr0eib8m91eknq2i1hz9d02'>
            <column datatype='string' name='[Technology (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[technology_6groups]' new-bin='true'>
                <bin default-name='false' value='&quot;all bus&quot;'>
                  <value>&quot;express bus&quot;</value>
                  <value>&quot;local bus&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Modelled Boardings' datatype='integer' name='[modelled_boardings]' role='measure' type='quantitative' />
            <column-instance column='[operator_group]' derivation='None' name='[none:operator_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[technology_6groups]' derivation='None' name='[none:technology_6groups:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Observed Boardings' datatype='real' name='[observed_boardings]' role='measure' type='quantitative' />
            <column caption='Operator Group' datatype='string' name='[operator_group]' role='dimension' type='nominal' />
            <column-instance column='[modelled_boardings]' derivation='Sum' name='[sum:modelled_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_boardings]' derivation='Sum' name='[sum:observed_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Technology' datatype='string' name='[technology_6groups]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:modelled_boardings:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:estimated_boardings:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SF Muni&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;VTA&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;Golden Gate Transit&quot;</bucket>
              <bucket>&quot;Smaller Operators&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:technology_6groups:nk]' />
              <groupfilter function='member' level='[none:technology_6groups:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</column>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='Typical Weekday Boardings' />
            <format attr='subtitle' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='54' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='false' />
            <format attr='font-family' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' value='Arial' />
            <format attr='font-size' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' value='11' />
            <format attr='font-size' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Arial' fontsize='14' indent='1980'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]> <[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontname='Arial' fontsize='14' indent='2610'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]>: ]]></run>
                <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='14' indent='2610'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]</rows>
        <cols>([federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk] / ([federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)] / [federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{16BA0009-AB7A-4C59-8E43-5F8A02BA5E01}' />
    </worksheet>
    <worksheet name='Ridership by Technology'>
      <table>
        <view>
          <datasources>
            <datasource caption='ridership_observed_vs_modelled' name='federated.0c4lhlr0eib8m91eknq2i1hz9d02' />
          </datasources>
          <datasource-dependencies datasource='federated.0c4lhlr0eib8m91eknq2i1hz9d02'>
            <column datatype='string' name='[Technology (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[technology_6groups]' new-bin='true'>
                <bin default-name='false' value='&quot;all bus&quot;'>
                  <value>&quot;express bus&quot;</value>
                  <value>&quot;local bus&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Modelled Boardings' datatype='integer' name='[modelled_boardings]' role='measure' type='quantitative' />
            <column-instance column='[technology_6groups]' derivation='None' name='[none:technology_6groups:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Observed Boardings' datatype='real' name='[observed_boardings]' role='measure' type='quantitative' />
            <column-instance column='[modelled_boardings]' derivation='Sum' name='[sum:modelled_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_boardings]' derivation='Sum' name='[sum:observed_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Technology' datatype='string' name='[technology_6groups]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:modelled_boardings:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:estimated_boardings:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:technology_6groups:nk]' />
              <groupfilter function='member' level='[none:technology_6groups:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</column>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='Typical Weekday Boardings' />
            <format attr='subtitle' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='74' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='false' />
            <format attr='font-family' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' value='Arial' />
            <format attr='font-size' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1980'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]>]]></run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='2610'><![CDATA[
<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]>: ]]></run>
                <run bold='true' fontcolor='#000000' fontname='Source Sans Pro' fontsize='16' indent='2610'><![CDATA[<[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]</rows>
        <cols>([federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)] / [federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{48B00DF4-0B8E-4DFC-BB72-0F69416829B9}' />
    </worksheet>
    <worksheet name='Table by Op and Tech'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Source: Observed Data for Operator Ridership from Operator&apos;s Transit Passenger Survey Data (</run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://bayareametro.github.io/transit-passenger-surveys/&amp;quot;'>https://bayareametro.github.io/transit-passenger-surveys/</run>
            <run>), weighted to 2015 boardings.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ridership_observed_vs_modelled' name='federated.0c4lhlr0eib8m91eknq2i1hz9d02' />
          </datasources>
          <datasource-dependencies datasource='federated.0c4lhlr0eib8m91eknq2i1hz9d02'>
            <column caption='Difference' datatype='real' name='[Calculation_706783718292918273]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([modelled_boardings])-sum([observed_boardings])' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Difference (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_706783718292918273]/sum([observed_boardings])' />
            </column>
            <column datatype='string' name='[Technology (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[technology_6groups]' new-bin='true'>
                <bin default-name='false' value='&quot;all bus&quot;'>
                  <value>&quot;express bus&quot;</value>
                  <value>&quot;local bus&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Modelled Boardings' datatype='integer' name='[modelled_boardings]' role='measure' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator_group]' derivation='None' name='[none:operator_group:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Observed Boardings' datatype='real' name='[observed_boardings]' role='measure' type='quantitative' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Operator Group' datatype='string' name='[operator_group]' role='dimension' type='nominal' />
            <column-instance column='[modelled_boardings]' derivation='Sum' name='[sum:modelled_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_boardings]' derivation='Sum' name='[sum:observed_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Technology' datatype='string' name='[technology_6groups]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_706783718292918273]' derivation='User' name='[usr:Calculation_706783718292918273:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference (copy)]' derivation='User' name='[usr:Difference (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:modelled_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Calculation_706783718292918273:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Difference (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:estimated_boardings:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:operator:nk]' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</column>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='109' />
            <format attr='text-format' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Difference (copy):qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk] / [federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)])</rows>
        <cols>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B9DE2746-AC11-42A0-A215-B0330D1C0E56}' />
    </worksheet>
    <worksheet name='Table by Op and Tech_express'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Source: Observed Data for Operator Ridership from Operator&apos;s Transit Passenger Survey Data (</run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://bayareametro.github.io/transit-passenger-surveys/&amp;quot;'>https://bayareametro.github.io/transit-passenger-surveys/</run>
            <run>), weighted to 2015 boardings.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ridership_observed_vs_modelled' name='federated.0c4lhlr0eib8m91eknq2i1hz9d02' />
          </datasources>
          <datasource-dependencies datasource='federated.0c4lhlr0eib8m91eknq2i1hz9d02'>
            <column caption='Difference' datatype='real' name='[Calculation_706783718292918273]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([modelled_boardings])-sum([observed_boardings])' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Difference (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_706783718292918273]/sum([observed_boardings])' />
            </column>
            <column caption='Modelled Boardings' datatype='integer' name='[modelled_boardings]' role='measure' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator_group]' derivation='None' name='[none:operator_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[technology_6groups]' derivation='None' name='[none:technology_6groups:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Observed Boardings' datatype='real' name='[observed_boardings]' role='measure' type='quantitative' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Operator Group' datatype='string' name='[operator_group]' role='dimension' type='nominal' />
            <column-instance column='[modelled_boardings]' derivation='Sum' name='[sum:modelled_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_boardings]' derivation='Sum' name='[sum:observed_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Technology' datatype='string' name='[technology_6groups]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_706783718292918273]' derivation='User' name='[usr:Calculation_706783718292918273:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference (copy)]' derivation='User' name='[usr:Difference (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:modelled_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Calculation_706783718292918273:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Difference (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:observed_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[sum:estimated_boardings:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:operator:nk]' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</column>
            <column>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='109' />
            <format attr='text-format' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[usr:Difference (copy):qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk] / [federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk])</rows>
        <cols>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{3DF6AD6E-8E4A-42DC-B6B6-622D86C0D1F9}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' maximized='true' name='Table by Op and Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='88'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE766396-FEF8-44DD-A81E-E061F8272A36}' />
    </window>
    <window class='worksheet' name='Table by Op and Tech_express'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='91'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBCFC33F-5DA8-463F-966E-ABCB306C0E4E}' />
    </window>
    <window class='worksheet' name='Ridership by Technology'>
      <cards>
        <edge name='left'>
          <strip size='276'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F353D135-B559-4132-9718-4977A3D684DA}' />
    </window>
    <window class='worksheet' name='Ridership by Operator'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F7188C1-9E86-4C92-A749-CAA7424AA8C0}' />
    </window>
    <window class='worksheet' name='Ridership by Operator &amp; Technology'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[:Measure Names]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Operator (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[Technology (group)]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:operator_group:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology:nk]</field>
            <field>[federated.0c4lhlr0eib8m91eknq2i1hz9d02].[none:technology_6groups:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15EEEFE7-FD27-4EB6-9ACF-39052416B4AC}' />
    </window>
    <window class='worksheet' name='Muni Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13p64310g9skkr121ymc80vk5pj5].[none:Calculation_914793721622020098:nk]</field>
            <field>[federated.13p64310g9skkr121ymc80vk5pj5].[none:Muni Route (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C739354-B416-4285-868E-396ACCF306A5}' />
    </window>
    <window class='worksheet' name='Muni Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13p64310g9skkr121ymc80vk5pj5].[none:Muni Route (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF952598-AE24-4749-8EEB-F5A9574D9DFB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Muni Scatter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Muni Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ridership by Operator' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ridership by Operator &amp; Technology' width='192'>
      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
      IBxNAiAc7f8AajTxL8S5SyMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ridership by Technology' width='192'>
      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
      PQzkoqT5TsoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Table by Op and Tech' width='192'>
      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
      /wH7nA8+f5OgygAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table by Op and Tech_express' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
