<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0917.1648                               -->
<workbook source-build='2019.2.4 (20192.19.0917.1648)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CustomReferenceLineTooltips ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='RoadwaystoPeMS_2015_TM152_IPA_04' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='Wes Moonrise Kingdom 0' type='regular'>
      <color>#8d9876</color>
      <color>#cbb345</color>
      <color>#609f80</color>
      <color>#4b574d</color>
      <color>#af420a</color>
      <color>#483924</color>
    </color-palette>
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Model Run ID' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;2015_06_002&quot;'>
        <calculation class='tableau' formula='&quot;2015_06_002&quot;' />
      </column>
      <column caption='Coord Shift' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.0030000000000000001'>
        <calculation class='tableau' formula='0.0030000000000000001' />
        <range granularity='0.001' max='0.01' min='0.0' />
      </column>
    </datasource>
    <datasource caption='Roadways to PeMS Extract' inline='true' name='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Roadways to PeMS Extract' name='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tdeleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='M:/Development/Travel Model One/Calibration/Version 1.5.2/2015_TM152_IPA_04/OUTPUT/validation/Roadways to PeMS.tde' default-settings='yes' sslmode='' username='tableau_internal_user' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tdeleaf' name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>A_B</remote-name>
            <remote-type>129</remote-type>
            <local-name>[A_B]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>A_B</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1148</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>a</remote-name>
            <remote-type>5</remote-type>
            <local-name>[a]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>a</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1135</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>abs_pm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[abs_pm]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>abs_pm</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2153</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>at</remote-name>
            <remote-type>5</remote-type>
            <local-name>[at]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>at</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>b</remote-name>
            <remote-type>5</remote-type>
            <local-name>[b]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>b</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1133</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>5</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>direction</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distlink</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distlink]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distlink</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1749</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>5</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>district</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ft]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ft</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>lanes</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2486</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>link_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[link_count]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>link_count</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2489</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>5</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>27</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sep_HOV</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sep_HOV]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>sep_HOV</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>5</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2877</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stationsonlink</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stationsonlink]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>stationsonlink</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>time_period</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volume]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>volume</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>40663</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes match</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes match]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>lanes match</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>skip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[skip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>skip</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>skip_reason</remote-name>
            <remote-type>129</remote-type>
            <local-name>[skip_reason]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>skip_reason</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>170</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[M:\\Development\\Travel Model One\\Validation\\Version 05\\2005\\Roadways to PeMS.tde].[max:Calculation_590253082197737472:qk]&quot;' value='HOV in model' />
          <alias key='&quot;[M:\\Development\\Travel Model One\\Validation\\Version 05\\2005\\Roadways to PeMS.tde].[pcdf:sum:volume:qk:2]&quot;' value='% Diff from Modeled' />
          <alias key='&quot;[M:\\Development\\Travel Model One\\Validation\\Version 05\\2005\\Roadways to PeMS.tde].[usr:Calculation1:qk:4]&quot;' value='Percent Diff' />
        </aliases>
      </column>
      <column caption='Percent Difference' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-(ZN(SUM([volume])) - LOOKUP(ZN(SUM([volume])), FIRST())) / ABS(LOOKUP(ZN(SUM([volume])), FIRST()))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='Avg' caption='Latitude Offset' datatype='real' name='[Calculation_2300105162444606]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='CASE [direction] &#13;&#10;WHEN &apos;N&apos; THEN&#13;&#10;  [latitude]&#13;&#10;WHEN &apos;S&apos; THEN&#13;&#10;  [latitude]&#13;&#10;WHEN &apos;E&apos; THEN&#13;&#10;  [latitude]+[Parameters].[Parameter 2]&#13;&#10;WHEN &apos;W&apos; THEN&#13;&#10;  [latitude]-[Parameters].[Parameter 2]&#13;&#10;ELSE&#13;&#10;  [latitude]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='abs postmile San Francisco' datatype='real' name='[Calculation_2511601237635584000]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([county]==1) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
      </column>
      <column caption='HOV in model' datatype='integer' name='[Calculation_590253082197737472]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [sep_HOV]==&quot;True&quot; then&#13;&#10;1&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
      </column>
      <column caption='Route Direction' datatype='string' name='[Calculation_935341361301659649]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='str([route])+ &quot; &quot; + [direction]' />
      </column>
      <column aggregation='Avg' caption='Longitude Offset' datatype='real' name='[Longitude (copy)]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='CASE [direction] &#13;&#10;WHEN &apos;N&apos; THEN&#13;&#10;  [longitude]+[Parameters].[Parameter 2]&#13;&#10;WHEN &apos;S&apos; THEN&#13;&#10;  [longitude]-[Parameters].[Parameter 2]&#13;&#10;WHEN &apos;E&apos; THEN&#13;&#10;  [longitude]&#13;&#10;WHEN &apos;W&apos; THEN&#13;&#10;  [longitude]&#13;&#10;ELSE&#13;&#10;  [longitude]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='abs postmile Santa Clara' datatype='real' name='[SF abs postmile (copy 2)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([county]==3) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
      </column>
      <column aggregation='Sum' caption='abs postmile San Mateo' datatype='real' name='[SF abs postmile (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([county]==2) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
      </column>
      <column aggregation='Sum' caption='A' datatype='real' name='[a]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='abs postmile Contra Costa' datatype='real' name='[abs postmile Alameda (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([county]==5) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
      </column>
      <column aggregation='Sum' caption='abs postmile Alameda' datatype='real' name='[abs postmile Marin (copy 2)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([county]==4) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
      </column>
      <column aggregation='Sum' caption='abs postmile Sonoma' datatype='real' name='[abs postmile Marin (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([county]==8) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
      </column>
      <column aggregation='Sum' caption='abs postmile Marin' datatype='real' name='[abs postmile SF (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([county]==9) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
      </column>
      <column aggregation='Sum' caption='abs postmile Solano' datatype='real' name='[abs postmile Sonoma (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([county]==6) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
      </column>
      <column aggregation='Sum' datatype='real' name='[abs_pm]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='B' datatype='real' name='[b]' role='dimension' type='ordinal' />
      <column datatype='string' name='[category]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[county]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='San Francisco' />
          <alias key='2.0' value='San Mateo' />
          <alias key='3.0' value='Santa Clara' />
          <alias key='4.0' value='Alameda' />
          <alias key='5.0' value='Contra Costa' />
          <alias key='6.0' value='Solano' />
          <alias key='7.0' value='Napa' />
          <alias key='8.0' value='Sonoma' />
          <alias key='9.0' value='Marin' />
          <alias key='10.0' value='External to Bay Area' />
        </aliases>
      </column>
      <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='real' default-format='n#,##0;-#,##0' name='[lanes match]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' default-format='n#,##0;-#,##0' name='[lanes]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Sum' caption='Route' datatype='real' name='[route]' role='dimension' type='ordinal' />
      <column aggregation='CountD' datatype='string' name='[sep_HOV]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[skip]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Station' datatype='real' name='[station]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
      <column caption='Volume' datatype='real' name='[volume]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_2300105162444606]' derivation='None' name='[none:Calculation_2300105162444606:ok]' pivot='key' type='ordinal' />
      <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
      <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
      <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
      <group caption='Action (Station)' hidden='true' name='[Action (Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (latitude 2,longitude,route,station)' hidden='true' name='[Action (latitude 2,longitude,route,station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_2300105162444606:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
          <groupfilter function='level-members' level='[route]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (latitude,longitude,route)' hidden='true' name='[Action (latitude,longitude,route)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
          <groupfilter function='level-members' level='[route]' />
        </groupfilter>
      </group>
      <group caption='Action (station)' hidden='true' name='[Action (station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='M:/Development/Travel Model One/Calibration/Version 1.5.2/2015_TM152_IPA_04/OUTPUT/validation/Roadways to PeMS Extract.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/20/2020 05:58:17 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Roadways to PeMS Extract' increment-value='%null%' refresh-type='create' rows-inserted='46670' timestamp-start='2020-02-20 17:58:17.903' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>A_B</remote-name>
              <remote-type>129</remote-type>
              <local-name>[A_B]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>A_B</remote-alias>
              <ordinal>0</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3176</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>a</remote-name>
              <remote-type>5</remote-type>
              <local-name>[a]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>a</remote-alias>
              <ordinal>1</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3033</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>abs_pm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[abs_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>abs_pm</remote-alias>
              <ordinal>2</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4626</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>at</remote-name>
              <remote-type>5</remote-type>
              <local-name>[at]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>at</remote-alias>
              <ordinal>3</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>b</remote-name>
              <remote-type>5</remote-type>
              <local-name>[b]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>b</remote-alias>
              <ordinal>4</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3176</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>category</remote-alias>
              <ordinal>5</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>5</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>6</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction</remote-alias>
              <ordinal>7</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>distlink</remote-name>
              <remote-type>5</remote-type>
              <local-name>[distlink]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>distlink</remote-alias>
              <ordinal>8</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4507</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district</remote-name>
              <remote-type>5</remote-type>
              <local-name>[district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district</remote-alias>
              <ordinal>9</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ft</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ft]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ft</remote-alias>
              <ordinal>10</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lanes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes</remote-alias>
              <ordinal>11</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>12</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5264</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>link_count</remote-name>
              <remote-type>5</remote-type>
              <local-name>[link_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>link_count</remote-alias>
              <ordinal>13</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>14</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5303</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pemsonlink</remote-name>
              <remote-type>5</remote-type>
              <local-name>[pemsonlink]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pemsonlink</remote-alias>
              <ordinal>15</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>5</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>16</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sep_HOV</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sep_HOV]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sep_HOV</remote-alias>
              <ordinal>17</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station</remote-name>
              <remote-type>5</remote-type>
              <local-name>[station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station</remote-alias>
              <ordinal>18</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6191</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_period</remote-name>
              <remote-type>129</remote-type>
              <local-name>[time_period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_period</remote-alias>
              <ordinal>19</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>20</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>volume</remote-name>
              <remote-type>5</remote-type>
              <local-name>[volume]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>volume</remote-alias>
              <ordinal>21</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37413</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes match</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lanes match]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes match</remote-alias>
              <ordinal>22</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>skip</remote-name>
              <remote-type>5</remote-type>
              <local-name>[skip]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>skip</remote-alias>
              <ordinal>23</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>skip_reason</remote-name>
              <remote-type>129</remote-type>
              <local-name>[skip_reason]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>skip_reason</remote-alias>
              <ordinal>24</ordinal>
              <family>Extract (Extract.Extract)</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>391</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.556923' measure-ordering='alphabetic' measure-percentage='0.34' parameter-percentage='0.103077' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:lanes:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>1.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>3.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>6.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>5.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>4.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2.0</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:category:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>&quot;2015 Modeled&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;2015 Observed&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;2014 Observed&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;2016 Observed&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:category:nk]' palette='Wes Moonrise Kingdom 0' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2005 Modeled&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2006 Observed&quot;</bucket>
            </map>
            <map to='#609f80'>
              <bucket>&quot;2016 Observed&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2011 Observed&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2010 Modeled&quot;</bucket>
            </map>
            <map to='#8d9876'>
              <bucket>&quot;2014 Observed&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2009 Observed&quot;</bucket>
            </map>
            <map to='#af420a'>
              <bucket>&quot;2015 Modeled&quot;</bucket>
            </map>
            <map to='#cbb345'>
              <bucket>&quot;2015 Observed&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2007 Observed&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2010 Observed&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2005 Observed&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:route:ok]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>680.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>880.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>25.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>152.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>238.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>87.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>84.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>29.0</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>780.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>1.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>4.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>380.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>948.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>980.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>205.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>280.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>92.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>85.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>156.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>242.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>37.0</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>580.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>101.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>237.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>12.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>17.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>80.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>24.0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:category:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;2015 Modeled&quot;</bucket>
            <bucket>&quot;2014 Observed&quot;</bucket>
            <bucket>&quot;2015 Observed&quot;</bucket>
            <bucket>&quot;2016 Observed&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:direction:nk]' direction='ASC'>
          <dictionary>
            <bucket>%null%</bucket>
            <bucket>&quot;E&quot;</bucket>
            <bucket>&quot;W&quot;</bucket>
            <bucket>&quot;N&quot;</bucket>
            <bucket>&quot;S&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:time_period:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Daily&quot;</bucket>
            <bucket>&quot;EA&quot;</bucket>
            <bucket>&quot;AM&quot;</bucket>
            <bucket>&quot;MD&quot;</bucket>
            <bucket>&quot;PM&quot;</bucket>
            <bucket>&quot;EV&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Coord Shift' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.0030000000000000001'>
          <calculation class='tableau' formula='0.0030000000000000001' />
          <range granularity='0.001' max='0.01' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='auto_times' inline='true' name='federated.17bfib200lv0cu13tlrib1jwyhcu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='auto_times' name='textscan.002ygtv1jwtei5136in3q18icoyn'>
            <connection class='textscan' directory='M:/Development/Travel Model One/Calibration/Version 1.5.2/2015_TM152_IPA_04/OUTPUT/metrics' filename='auto_times.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.002ygtv1jwtei5136in3q18icoyn' name='auto_times.csv' table='[auto_times#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Income' ordinal='0' />
            <column datatype='string' name='Mode' ordinal='1' />
            <column datatype='real' name='Daily Person Trips' ordinal='2' />
            <column datatype='real' name='Daily Vehicle Trips' ordinal='3' />
            <column datatype='real' name='Person Minutes' ordinal='4' />
            <column datatype='real' name='Vehicle Minutes' ordinal='5' />
            <column datatype='real' name='Person Miles' ordinal='6' />
            <column datatype='real' name='Vehicle Miles' ordinal='7' />
            <column datatype='real' name='Total Cost' ordinal='8' />
            <column datatype='string' name='VTOLL nonzero AM' ordinal='9' />
            <column datatype='string' name='VTOLL nonzero MD' ordinal='10' />
            <column datatype='real' name='Bridge Tolls' ordinal='11' />
            <column datatype='real' name='Value Tolls' ordinal='12' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income]</local-name>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Mode]</local-name>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias>Mode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Daily Person Trips</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Daily Person Trips]</local-name>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias>Daily Person Trips</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Daily Vehicle Trips</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Daily Vehicle Trips]</local-name>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias>Daily Vehicle Trips</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person Minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Person Minutes]</local-name>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias>Person Minutes</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vehicle Minutes]</local-name>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias>Vehicle Minutes</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person Miles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Person Miles]</local-name>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias>Person Miles</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Miles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vehicle Miles]</local-name>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias>Vehicle Miles</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cost]</local-name>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias>Total Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VTOLL nonzero AM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VTOLL nonzero AM]</local-name>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias>VTOLL nonzero AM</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VTOLL nonzero MD</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VTOLL nonzero MD]</local-name>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias>VTOLL nonzero MD</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bridge Tolls</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bridge Tolls]</local-name>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias>Bridge Tolls</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value Tolls</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value Tolls]</local-name>
            <parent-name>[auto_times.csv]</parent-name>
            <remote-alias>Value Tolls</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
          <bin default-name='false' value='&quot;Airport travel&quot;'>
            <value>&quot;da_air&quot;</value>
            <value>&quot;datoll_air&quot;</value>
            <value>&quot;sr2_air&quot;</value>
            <value>&quot;sr2toll_air&quot;</value>
            <value>&quot;sr3_air&quot;</value>
            <value>&quot;sr3toll_air&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;AV travel&quot;'>
            <value>&quot;da_av_notoll&quot;</value>
            <value>&quot;da_av_toll&quot;</value>
            <value>&quot;owned_zpv&quot;</value>
            <value>&quot;s2_av_notoll&quot;</value>
            <value>&quot;s2_av_toll&quot;</value>
            <value>&quot;s3_av_notoll&quot;</value>
            <value>&quot;s3_av_toll&quot;</value>
            <value>&quot;zpv_tnc&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Bay Area Residents core model travel&quot;'>
            <value>&quot;da&quot;</value>
            <value>&quot;datoll&quot;</value>
            <value>&quot;sr2&quot;</value>
            <value>&quot;sr2toll&quot;</value>
            <value>&quot;sr3&quot;</value>
            <value>&quot;sr3toll&quot;</value>
            <value>&quot;taxi&quot;</value>
            <value>&quot;tnc_shared&quot;</value>
            <value>&quot;tnc_single&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;IX/EX travel&quot;'>
            <value>&quot;da_ix&quot;</value>
            <value>&quot;datoll_ix&quot;</value>
            <value>&quot;sr2_ix&quot;</value>
            <value>&quot;sr2toll_ix&quot;</value>
            <value>&quot;sr3_ix&quot;</value>
            <value>&quot;sr3toll_ix&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Mode]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='M:/Development/Travel Model One/Calibration/Version 1.5.2/2015_TM152_IPA_04/OUTPUT/validation/auto_times.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/20/2020 05:58:36 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='auto_times' increment-value='%null%' refresh-type='create' rows-inserted='78' timestamp-start='2020-02-20 17:58:36.349' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Income</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Income</remote-alias>
              <ordinal>0</ordinal>
              <family>auto_times.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mode</remote-alias>
              <ordinal>1</ordinal>
              <family>auto_times.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Daily Person Trips</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Daily Person Trips]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Daily Person Trips</remote-alias>
              <ordinal>2</ordinal>
              <family>auto_times.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Daily Vehicle Trips</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Daily Vehicle Trips]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Daily Vehicle Trips</remote-alias>
              <ordinal>3</ordinal>
              <family>auto_times.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Person Minutes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Person Minutes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Person Minutes</remote-alias>
              <ordinal>4</ordinal>
              <family>auto_times.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vehicle Minutes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Vehicle Minutes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Vehicle Minutes</remote-alias>
              <ordinal>5</ordinal>
              <family>auto_times.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Person Miles</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Person Miles]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Person Miles</remote-alias>
              <ordinal>6</ordinal>
              <family>auto_times.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vehicle Miles</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Vehicle Miles]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Vehicle Miles</remote-alias>
              <ordinal>7</ordinal>
              <family>auto_times.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Total Cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total Cost</remote-alias>
              <ordinal>8</ordinal>
              <family>auto_times.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VTOLL nonzero AM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VTOLL nonzero AM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VTOLL nonzero AM</remote-alias>
              <ordinal>9</ordinal>
              <family>auto_times.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VTOLL nonzero MD</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VTOLL nonzero MD]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VTOLL nonzero MD</remote-alias>
              <ordinal>10</ordinal>
              <family>auto_times.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Bridge Tolls</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Bridge Tolls]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Bridge Tolls</remote-alias>
              <ordinal>11</ordinal>
              <family>auto_times.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Value Tolls</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Value Tolls]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Value Tolls</remote-alias>
              <ordinal>12</ordinal>
              <family>auto_times.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.31713' measure-ordering='alphabetic' measure-percentage='0.560185' parameter-percentage='0.122685' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Roadways to PeMS_wide Extract' inline='true' name='federated.1j0pkjk1l5szkk1eav2xl1hetkqn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Roadways to PeMS_wide' name='hyper.1dc8o801nixxz81933end1vk8njc'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='M:/Development/Travel Model One/Calibration/Version 1.5.2/2015_TM152_IPA_04/OUTPUT/validation/Roadways to PeMS_wide.tde' default-settings='yes' sslmode='' username='tableau_internal_user' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='hyper.1dc8o801nixxz81933end1vk8njc' name='Extract' table='[Extract].[Extract]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>5</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1764</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>5</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>25</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>direction</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>abs_pm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[abs_pm]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>abs_pm</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1507</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1738</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1743</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>time_period</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>a</remote-name>
            <remote-type>5</remote-type>
            <local-name>[a]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>a</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1134</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>b</remote-name>
            <remote-type>5</remote-type>
            <local-name>[b]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>b</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1132</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>A_B</remote-name>
            <remote-type>129</remote-type>
            <local-name>[A_B]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>A_B</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1147</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ft]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ft</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>at</remote-name>
            <remote-type>5</remote-type>
            <local-name>[at]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>at</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>5</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sep_HOV</remote-name>
            <remote-type>11</remote-type>
            <local-name>[sep_HOV]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>sep_HOV</remote-alias>
            <ordinal>13</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>link_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[link_count]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>link_count</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stationsonlink</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stationsonlink]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>stationsonlink</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distlink</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distlink]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>distlink</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1748</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes modeled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes modeled]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>lanes modeled</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015 Modeled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015 Modeled]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>2015 Modeled</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6243</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10633</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes observed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes observed]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>lanes observed</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014 Observed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2014 Observed]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>2014 Observed</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6650</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015 Observed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015 Observed]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>2015 Observed</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6928</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016 Observed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016 Observed]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>2016 Observed</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8225</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Observed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Observed]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Average Observed</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10633</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes match</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes match]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>lanes match</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>skip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[skip]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>skip</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>skip_reason</remote-name>
            <remote-type>129</remote-type>
            <local-name>[skip_reason]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>skip_reason</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>169</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[2014 Observed]' role='measure' type='quantitative' />
      <column datatype='real' name='[2015 Modeled]' role='measure' type='quantitative' />
      <column datatype='real' name='[2015 Observed]' role='measure' type='quantitative' />
      <column datatype='real' name='[2016 Observed]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude Offset' datatype='real' name='[Calculation_1756685343653449728]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='CASE [direction] &#13;&#10;WHEN &apos;N&apos; THEN&#13;&#10;  [latitude]&#13;&#10;WHEN &apos;S&apos; THEN&#13;&#10;  [latitude]&#13;&#10;WHEN &apos;E&apos; THEN&#13;&#10;  [latitude]+[Parameters].[Parameter 2]&#13;&#10;WHEN &apos;W&apos; THEN&#13;&#10;  [latitude]-[Parameters].[Parameter 2]&#13;&#10;ELSE&#13;&#10;  [latitude]&#13;&#10;END' />
      </column>
      <column caption='Percent RMSE' datatype='real' default-format='p0%' name='[Calculation_2062648650363297793]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_971933150857908227]/Avg([Average Observed])' />
      </column>
      <column caption='Route Direction' datatype='string' name='[Calculation_935341361300013056]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='str([route]) + &quot; &quot; + [direction]' />
      </column>
      <column caption='Modeled - Observed' datatype='real' name='[Calculation_966303651074355200]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[2015 Modeled]-[Average Observed]' />
      </column>
      <column caption='RMSE' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_971933150857908227]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sqrt(Avg([Calculation_966303651074355200]*[Calculation_966303651074355200]))' />
      </column>
      <column aggregation='Avg' caption='Longitude Offset' datatype='real' name='[Longitude (copy)]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='CASE [direction] &#13;&#10;WHEN &apos;N&apos; THEN&#13;&#10;  [longitude]+[Parameters].[Parameter 2]&#13;&#10;WHEN &apos;S&apos; THEN&#13;&#10;  [longitude]-[Parameters].[Parameter 2]&#13;&#10;WHEN &apos;E&apos; THEN&#13;&#10;  [longitude]&#13;&#10;WHEN &apos;W&apos; THEN&#13;&#10;  [longitude]&#13;&#10;ELSE&#13;&#10;  [longitude]&#13;&#10;END' />
      </column>
      <column aggregation='None' datatype='integer' name='[Modeled - Observed (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[Calculation_966303651074355200]' peg='0' size='500' />
      </column>
      <column caption='Pct Diff' datatype='real' default-format='p0%' name='[Modeled - Observed (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_966303651074355200]/[Average Observed]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='A' datatype='real' name='[a]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='B' datatype='real' name='[b]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[county]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='San Francisco' />
          <alias key='2.0' value='San Mateo' />
          <alias key='3.0' value='Santa Clara' />
          <alias key='4.0' value='Alameda' />
          <alias key='5.0' value='Contra Costa' />
          <alias key='6.0' value='Solano' />
          <alias key='7.0' value='Napa' />
          <alias key='8.0' value='Sonoma' />
          <alias key='9.0' value='Marin' />
          <alias key='10.0' value='External to Bay Area' />
        </aliases>
      </column>
      <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[distlink]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Lanes Match' datatype='real' default-format='n#,##0;-#,##0' name='[lanes match]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Lanes Modeled' datatype='real' default-format='n#,##0;-#,##0' name='[lanes modeled]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Lanes Observed' datatype='real' default-format='n#,##0;-#,##0' name='[lanes observed]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Sum' caption='Route' datatype='real' default-format='n0;-0' name='[route]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[skip]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Station' datatype='real' default-format='n0;-0' name='[station]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[stationsonlink]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
      <column-instance column='[lanes observed]' derivation='None' name='[none:lanes observed:ok]' pivot='key' type='ordinal' />
      <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
      <column-instance column='[2014 Observed]' derivation='Sum' name='[sum:2014 Observed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2015 Modeled]' derivation='Sum' name='[sum:2015 Modeled:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2015 Observed]' derivation='Sum' name='[sum:2015 Observed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2016 Observed]' derivation='Sum' name='[sum:2016 Observed:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='M:/Development/Travel Model One/Calibration/Version 1.5.2/2015_TM152_IPA_04/OUTPUT/validation/Roadways to PeMS_wide Extract.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/20/2020 05:58:09 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Roadways to PeMS_wide Extract' increment-value='%null%' refresh-type='create' rows-inserted='11049' timestamp-start='2020-02-20 17:58:09.631' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>station</remote-name>
              <remote-type>5</remote-type>
              <local-name>[station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station</remote-alias>
              <ordinal>0</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2250</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>5</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>1</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction</remote-alias>
              <ordinal>2</ordinal>
              <family>Extract</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>abs_pm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[abs_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>abs_pm</remote-alias>
              <ordinal>3</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1956</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>4</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2235</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>5</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2238</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_period</remote-name>
              <remote-type>129</remote-type>
              <local-name>[time_period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_period</remote-alias>
              <ordinal>6</ordinal>
              <family>Extract</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>a</remote-name>
              <remote-type>5</remote-type>
              <local-name>[a]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>a</remote-alias>
              <ordinal>7</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1602</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>b</remote-name>
              <remote-type>5</remote-type>
              <local-name>[b]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>b</remote-alias>
              <ordinal>8</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1615</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>A_B</remote-name>
              <remote-type>129</remote-type>
              <local-name>[A_B]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>A_B</remote-alias>
              <ordinal>9</ordinal>
              <family>Extract</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1623</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ft</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ft]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ft</remote-alias>
              <ordinal>10</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>at</remote-name>
              <remote-type>5</remote-type>
              <local-name>[at]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>at</remote-alias>
              <ordinal>11</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>5</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>12</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sep_HOV</remote-name>
              <remote-type>11</remote-type>
              <local-name>[sep_HOV]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sep_HOV</remote-alias>
              <ordinal>13</ordinal>
              <family>Extract</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>link_count</remote-name>
              <remote-type>5</remote-type>
              <local-name>[link_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>link_count</remote-alias>
              <ordinal>14</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pemsonlink</remote-name>
              <remote-type>5</remote-type>
              <local-name>[pemsonlink]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pemsonlink</remote-alias>
              <ordinal>15</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>distlink</remote-name>
              <remote-type>5</remote-type>
              <local-name>[distlink]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>distlink</remote-alias>
              <ordinal>16</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2246</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes modeled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lanes modeled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes modeled</remote-alias>
              <ordinal>17</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2015 Modeled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2015 Modeled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2015 Modeled</remote-alias>
              <ordinal>18</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3890</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>index</remote-alias>
              <ordinal>19</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9247</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes observed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lanes observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes observed</remote-alias>
              <ordinal>20</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2014 Observed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2014 Observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2014 Observed</remote-alias>
              <ordinal>21</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6703</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2015 Observed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2015 Observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2015 Observed</remote-alias>
              <ordinal>22</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7007</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2016 Observed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2016 Observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2016 Observed</remote-alias>
              <ordinal>23</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8099</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Observed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Observed</remote-alias>
              <ordinal>24</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9247</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes match</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lanes match]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes match</remote-alias>
              <ordinal>25</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>skip</remote-name>
              <remote-type>5</remote-type>
              <local-name>[skip]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>skip</remote-alias>
              <ordinal>26</ordinal>
              <family>Extract</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>skip_reason</remote-name>
              <remote-type>129</remote-type>
              <local-name>[skip_reason]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>skip_reason</remote-alias>
              <ordinal>27</ordinal>
              <family>Extract</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>208</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.467692' measure-ordering='alphabetic' measure-percentage='0.452308' parameter-percentage='0.08' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:time_period:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Daily&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AM&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2014 Observed:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Observed:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2016 Observed:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:lanes observed:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>4.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>6.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>5.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>3.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:route:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>242.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>4.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>380.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>25.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>880.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>156.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>87.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>84.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>29.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>948.0</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>280.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>12.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>580.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>237.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>92.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>85.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>205.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>37.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>980.0</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>238.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>101.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>152.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>17.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>680.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>80.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>24.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>780.0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:time_period:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Daily&quot;</bucket>
            <bucket>&quot;EA&quot;</bucket>
            <bucket>&quot;AM&quot;</bucket>
            <bucket>&quot;MD&quot;</bucket>
            <bucket>&quot;PM&quot;</bucket>
            <bucket>&quot;EV&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Coord Shift' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.0030000000000000001'>
          <calculation class='tableau' formula='0.0030000000000000001' />
          <range granularity='0.001' max='0.01' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='avgload5period' inline='true' name='federated.02bx90j18mfrz513f4grn0lzorsm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='avgload5period' name='textscan.0oek21218h1ymb1eweh2y0oepqj9'>
            <connection class='textscan' directory='M:/Development/Travel Model One/Calibration/Version 1.5.2/2015_TM152_IPA_04/OUTPUT/validation' filename='avgload5period.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0oek21218h1ymb1eweh2y0oepqj9' name='avgload5period.csv' table='[avgload5period#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='a' ordinal='0' />
            <column datatype='integer' name='b' ordinal='1' />
            <column datatype='real' name='distance' ordinal='2' />
            <column datatype='real' name='lanes' ordinal='3' />
            <column datatype='integer' name='gl' ordinal='4' />
            <column datatype='integer' name='ft' ordinal='5' />
            <column datatype='integer' name='at' ordinal='6' />
            <column datatype='integer' name='cap' ordinal='7' />
            <column datatype='real' name='ffs' ordinal='8' />
            <column datatype='real' name='fft' ordinal='9' />
            <column datatype='integer' name='cspdEA' ordinal='10' />
            <column datatype='integer' name='cspdAM' ordinal='11' />
            <column datatype='integer' name='cspdMD' ordinal='12' />
            <column datatype='integer' name='cspdPM' ordinal='13' />
            <column datatype='integer' name='cspdEV' ordinal='14' />
            <column datatype='real' name='volEA_tot' ordinal='15' />
            <column datatype='real' name='volAM_tot' ordinal='16' />
            <column datatype='real' name='volMD_tot' ordinal='17' />
            <column datatype='real' name='volPM_tot' ordinal='18' />
            <column datatype='real' name='volEV_tot' ordinal='19' />
            <column datatype='real' name='ctimEA' ordinal='20' />
            <column datatype='real' name='ctimAM' ordinal='21' />
            <column datatype='real' name='ctimMD' ordinal='22' />
            <column datatype='real' name='ctimPM' ordinal='23' />
            <column datatype='real' name='ctimEV' ordinal='24' />
            <column datatype='integer' name='vcEA' ordinal='25' />
            <column datatype='integer' name='vcAM' ordinal='26' />
            <column datatype='integer' name='vcMD' ordinal='27' />
            <column datatype='integer' name='vcPM' ordinal='28' />
            <column datatype='integer' name='vcEV' ordinal='29' />
            <column datatype='integer' name='tollclass' ordinal='30' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>a</remote-name>
            <remote-type>20</remote-type>
            <local-name>[a]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>a</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>b</remote-name>
            <remote-type>20</remote-type>
            <local-name>[b]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>b</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>lanes</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gl]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>gl</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ft]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>ft</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>at</remote-name>
            <remote-type>20</remote-type>
            <local-name>[at]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>at</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cap</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cap]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>cap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ffs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ffs]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>ffs</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fft]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>fft</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cspdEA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cspdEA]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>cspdEA</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cspdAM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cspdAM]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>cspdAM</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cspdMD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cspdMD]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>cspdMD</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cspdPM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cspdPM]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>cspdPM</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cspdEV</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cspdEV]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>cspdEV</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volEA_tot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volEA_tot]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>volEA_tot</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volAM_tot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volAM_tot]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>volAM_tot</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volMD_tot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volMD_tot]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>volMD_tot</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volPM_tot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volPM_tot]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>volPM_tot</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volEV_tot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volEV_tot]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>volEV_tot</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctimEA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctimEA]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>ctimEA</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctimAM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctimAM]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>ctimAM</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctimMD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctimMD]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>ctimMD</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctimPM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctimPM]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>ctimPM</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctimEV</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctimEV]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>ctimEV</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vcEA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vcEA]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>vcEA</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vcAM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vcAM]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>vcAM</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vcMD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vcMD]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>vcMD</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vcPM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vcPM]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>vcPM</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vcEV</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vcEV]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>vcEV</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tollclass</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tollclass]</local-name>
            <parent-name>[avgload5period.csv]</parent-name>
            <remote-alias>tollclass</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Network Modeled VMT' datatype='real' name='[Calculation_1756685343679705090]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([volAM_tot]+[volMD_tot]+[volPM_tot]+[volEV_tot]+[volEA_tot])*[distance]' />
      </column>
      <column caption='County' datatype='string' name='[Calculation_1756685343680626691]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='CASE [gl]&#13;&#10;when 1 then &quot;San Francisco County&quot;&#13;&#10;when 2 then &quot;San Mateo County&quot;&#13;&#10;when 3 then &quot;Santa Clara County&quot;&#13;&#10;when 4 then &quot;Alameda County&quot;&#13;&#10;when 5 then &quot;Contra Costa County&quot;&#13;&#10;when 6 then &quot;Solano County&quot;&#13;&#10;when 7 then &quot;Napa County&quot;&#13;&#10;when 8 then &quot;Sonoma County&quot;&#13;&#10;when 9 then &quot;Marin County&quot;&#13;&#10;else &quot;External&quot;&#13;&#10;END' />
      </column>
      <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_1756685343681732612]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='2015' />
      </column>
      <column caption='VMT diff' datatype='real' name='[Calculation_1756685343682158597]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_1756685343679705090])-SUM([federated.1fxbhu50jcanpf1b1bc8v1fycprf].[VMT])' />
      </column>
      <column caption='VMT pct diff' datatype='real' default-format='p0%' name='[Calculation_1756685343682330630]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1756685343682158597]/SUM([federated.1fxbhu50jcanpf1b1bc8v1fycprf].[VMT])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='A' datatype='integer' name='[a]' role='measure' type='quantitative' />
      <column caption='At' datatype='integer' name='[at]' role='measure' type='quantitative' />
      <column caption='B' datatype='integer' name='[b]' role='measure' type='quantitative' />
      <column caption='Cap' datatype='integer' name='[cap]' role='measure' type='quantitative' />
      <column caption='Cspd AM' datatype='integer' name='[cspdAM]' role='measure' type='quantitative' />
      <column caption='Cspd EA' datatype='integer' name='[cspdEA]' role='measure' type='quantitative' />
      <column caption='Cspd EV' datatype='integer' name='[cspdEV]' role='measure' type='quantitative' />
      <column caption='Cspd MD' datatype='integer' name='[cspdMD]' role='measure' type='quantitative' />
      <column caption='Cspd PM' datatype='integer' name='[cspdPM]' role='measure' type='quantitative' />
      <column caption='Ctim AM' datatype='real' name='[ctimAM]' role='measure' type='quantitative' />
      <column caption='Ctim EA' datatype='real' name='[ctimEA]' role='measure' type='quantitative' />
      <column caption='Ctim EV' datatype='real' name='[ctimEV]' role='measure' type='quantitative' />
      <column caption='Ctim MD' datatype='real' name='[ctimMD]' role='measure' type='quantitative' />
      <column caption='Ctim PM' datatype='real' name='[ctimPM]' role='measure' type='quantitative' />
      <column caption='Distance' datatype='real' name='[distance]' role='measure' type='quantitative' />
      <column caption='Ffs' datatype='real' name='[ffs]' role='measure' type='quantitative' />
      <column caption='Fft' datatype='real' name='[fft]' role='measure' type='quantitative' />
      <column caption='Ft' datatype='integer' name='[ft]' role='measure' type='quantitative' />
      <column caption='GL' datatype='integer' name='[gl]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
        <aliases>
          <alias key='1' value='San Francisco' />
          <alias key='2' value='San Mateo' />
          <alias key='3' value='Santa Clara' />
          <alias key='4' value='Alameda' />
          <alias key='5' value='Contra Costa' />
          <alias key='6' value='Solano' />
          <alias key='7' value='Napa' />
          <alias key='8' value='Sonoma' />
          <alias key='9' value='Marin' />
          <alias key='10' value='External' />
        </aliases>
      </column>
      <column caption='Lanes' datatype='real' name='[lanes]' role='measure' type='quantitative' />
      <column caption='Tollclass' datatype='integer' name='[tollclass]' role='measure' type='quantitative' />
      <column caption='Vc AM' datatype='integer' name='[vcAM]' role='measure' type='quantitative' />
      <column caption='Vc EA' datatype='integer' name='[vcEA]' role='measure' type='quantitative' />
      <column caption='Vc EV' datatype='integer' name='[vcEV]' role='measure' type='quantitative' />
      <column caption='Vc MD' datatype='integer' name='[vcMD]' role='measure' type='quantitative' />
      <column caption='Vc PM' datatype='integer' name='[vcPM]' role='measure' type='quantitative' />
      <column caption='volAM tot' datatype='real' name='[volAM_tot]' role='measure' type='quantitative' />
      <column caption='volEA tot' datatype='real' name='[volEA_tot]' role='measure' type='quantitative' />
      <column caption='volEV tot' datatype='real' name='[volEV_tot]' role='measure' type='quantitative' />
      <column caption='volMD tot' datatype='real' name='[volMD_tot]' role='measure' type='quantitative' />
      <column caption='volPM tot' datatype='real' name='[volPM_tot]' role='measure' type='quantitative' />
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='M:/Development/Travel Model One/Calibration/Version 1.5.2/2015_TM152_IPA_04/OUTPUT/validation/avgload5period.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/20/2020 05:58:27 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='avgload5period' increment-value='%null%' refresh-type='create' rows-inserted='33789' timestamp-start='2020-02-20 17:58:27.049' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>a</remote-name>
              <remote-type>20</remote-type>
              <local-name>[a]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>a</remote-alias>
              <ordinal>0</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11115</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>b</remote-name>
              <remote-type>20</remote-type>
              <local-name>[b]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>b</remote-alias>
              <ordinal>1</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10178</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>distance</remote-name>
              <remote-type>5</remote-type>
              <local-name>[distance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>distance</remote-alias>
              <ordinal>2</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>340</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lanes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes</remote-alias>
              <ordinal>3</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gl</remote-name>
              <remote-type>20</remote-type>
              <local-name>[gl]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gl</remote-alias>
              <ordinal>4</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ft</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ft]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ft</remote-alias>
              <ordinal>5</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>at</remote-name>
              <remote-type>20</remote-type>
              <local-name>[at]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>at</remote-alias>
              <ordinal>6</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cap</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cap</remote-alias>
              <ordinal>7</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ffs</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ffs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ffs</remote-alias>
              <ordinal>8</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fft</remote-name>
              <remote-type>5</remote-type>
              <local-name>[fft]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fft</remote-alias>
              <ordinal>9</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>578</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cspdEA</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cspdEA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cspdEA</remote-alias>
              <ordinal>10</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cspdAM</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cspdAM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cspdAM</remote-alias>
              <ordinal>11</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cspdMD</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cspdMD]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cspdMD</remote-alias>
              <ordinal>12</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cspdPM</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cspdPM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cspdPM</remote-alias>
              <ordinal>13</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cspdEV</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cspdEV]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cspdEV</remote-alias>
              <ordinal>14</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>volEA_tot</remote-name>
              <remote-type>5</remote-type>
              <local-name>[volEA_tot]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>volEA_tot</remote-alias>
              <ordinal>15</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12109</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>volAM_tot</remote-name>
              <remote-type>5</remote-type>
              <local-name>[volAM_tot]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>volAM_tot</remote-alias>
              <ordinal>16</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14024</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>volMD_tot</remote-name>
              <remote-type>5</remote-type>
              <local-name>[volMD_tot]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>volMD_tot</remote-alias>
              <ordinal>17</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16132</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>volPM_tot</remote-name>
              <remote-type>5</remote-type>
              <local-name>[volPM_tot]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>volPM_tot</remote-alias>
              <ordinal>18</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15534</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>volEV_tot</remote-name>
              <remote-type>5</remote-type>
              <local-name>[volEV_tot]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>volEV_tot</remote-alias>
              <ordinal>19</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14781</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ctimEA</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ctimEA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ctimEA</remote-alias>
              <ordinal>20</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>552</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ctimAM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ctimAM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ctimAM</remote-alias>
              <ordinal>21</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>576</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ctimMD</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ctimMD]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ctimMD</remote-alias>
              <ordinal>22</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>598</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ctimPM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ctimPM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ctimPM</remote-alias>
              <ordinal>23</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>586</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ctimEV</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ctimEV]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ctimEV</remote-alias>
              <ordinal>24</ordinal>
              <family>avgload5period.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>595</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vcEA</remote-name>
              <remote-type>20</remote-type>
              <local-name>[vcEA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vcEA</remote-alias>
              <ordinal>25</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vcAM</remote-name>
              <remote-type>20</remote-type>
              <local-name>[vcAM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vcAM</remote-alias>
              <ordinal>26</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vcMD</remote-name>
              <remote-type>20</remote-type>
              <local-name>[vcMD]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vcMD</remote-alias>
              <ordinal>27</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vcPM</remote-name>
              <remote-type>20</remote-type>
              <local-name>[vcPM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vcPM</remote-alias>
              <ordinal>28</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vcEV</remote-name>
              <remote-type>20</remote-type>
              <local-name>[vcEV]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vcEV</remote-alias>
              <ordinal>29</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tollclass</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tollclass]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tollclass</remote-alias>
              <ordinal>30</ordinal>
              <family>avgload5period.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.132898' measure-ordering='alphabetic' measure-percentage='0.808279' parameter-percentage='0.0588235' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.1fxbhu50jcanpf1b1bc8v1fycprf'>
        <column caption='Vital Signs VMT' datatype='real' name='[VMT]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='VitalSigns_VMT' inline='true' name='federated.1fxbhu50jcanpf1b1bc8v1fycprf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vital_Signs__Daily_Miles_Traveled_-_by_county__total_' name='textscan.04oiw1e0qj9crp16okuu108u7eil'>
            <connection class='textscan' directory='M:/Data/Vital Signs/DailyVehicleMilesTraveled' filename='Vital_Signs__Daily_Miles_Traveled_-_by_county__total_.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.04oiw1e0qj9crp16okuu108u7eil' name='Vital_Signs__Daily_Miles_Traveled_-_by_county__total_.csv' table='[Vital_Signs__Daily_Miles_Traveled_-_by_county__total_#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='County' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='VMT' ordinal='2' />
            <column datatype='string' name='Source' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Vital_Signs__Daily_Miles_Traveled_-_by_county__total_.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Vital_Signs__Daily_Miles_Traveled_-_by_county__total_.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Vital_Signs__Daily_Miles_Traveled_-_by_county__total_.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VMT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VMT]</local-name>
            <parent-name>[Vital_Signs__Daily_Miles_Traveled_-_by_county__total_.csv]</parent-name>
            <remote-alias>VMT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[Vital_Signs__Daily_Miles_Traveled_-_by_county__total_.csv]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Vital Signs VMT' datatype='real' name='[VMT]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='M:/Development/Travel Model One/Calibration/Version 1.5.2/2015_TM152_IPA_04/OUTPUT/validation/VitalSigns_VMT.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/20/2020 05:58:42 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='VitalSigns_VMT' increment-value='%null%' refresh-type='create' rows-inserted='135' timestamp-start='2020-02-20 17:58:42.961' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>County</remote-name>
              <remote-type>129</remote-type>
              <local-name>[County]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>County</remote-alias>
              <ordinal>0</ordinal>
              <family>Vital_Signs__Daily_Miles_Traveled_-_by_county__total_.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>Vital_Signs__Daily_Miles_Traveled_-_by_county__total_.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VMT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[VMT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VMT</remote-alias>
              <ordinal>2</ordinal>
              <family>Vital_Signs__Daily_Miles_Traveled_-_by_county__total_.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>134</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Source</remote-alias>
              <ordinal>3</ordinal>
              <family>Vital_Signs__Daily_Miles_Traveled_-_by_county__total_.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.351852' measure-ordering='alphabetic' measure-percentage='0.398148' parameter-percentage='0.25' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Select station' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Station Dashboard' type='sheet' worksheet='Station Map' />
      <link caption='Select station' delimiter=',' escape='\' expression='tsl:Station%20Dashboard?%5BM%3A%5CApplication%5CModel%20One%5CRTP2021%5CIncrementalProgress%5C2015_TM151_IPA_00%5COUTPUT%5Cvalidation%5CRoadways%20to%20PeMS.tde%5D.%5Bstation%5D~s0=&lt;[station]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Station Dashboard' />
      </command>
    </action>
    <action caption='Go to PEMS Station URL' name='[Action2]'>
      <source type='all'>
        <exclude-sheet name='ScatterByRoute' />
        <exclude-sheet name='ScatterByTimePeriod' />
        <exclude-sheet name='Station Graph' />
        <exclude-sheet name='Station Info' />
        <exclude-sheet name='Station Table' />
      </source>
      <link caption='Go to PEMS Station URL' expression='http://pems.dot.ca.gov/?station_id=&lt;[station]&gt;&amp;dnode=VDS' />
    </action>
    <action caption='Go to PeMS Station URL' name='[Action3]'>
      <source datasource='federated.1j0pkjk1l5szkk1eav2xl1hetkqn' type='datasource'>
        <exclude-sheet name='All Stations Table' />
      </source>
      <link caption='Go to PeMS Station URL' expression='http://pems.dot.ca.gov/?station_id=&lt;[station]&gt;&amp;dnode=VDS' />
    </action>
    <datasources>
      <datasource caption='Roadways to PeMS Extract' name='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde' />
      <datasource caption='Roadways to PeMS_wide Extract' name='federated.1j0pkjk1l5szkk1eav2xl1hetkqn' />
    </datasources>
    <datasource-dependencies datasource='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde'>
      <column aggregation='Sum' caption='Station' datatype='real' name='[station]' role='dimension' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1j0pkjk1l5szkk1eav2xl1hetkqn'>
      <column aggregation='Sum' caption='Station' datatype='real' default-format='n0;-0' name='[station]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='All Stations Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Roadways to PeMS_wide Extract' name='federated.1j0pkjk1l5szkk1eav2xl1hetkqn' />
          </datasources>
          <datasource-dependencies datasource='federated.1j0pkjk1l5szkk1eav2xl1hetkqn'>
            <column datatype='real' name='[2014 Observed]' role='measure' type='quantitative' />
            <column datatype='real' name='[2015 Modeled]' role='measure' type='quantitative' />
            <column datatype='real' name='[2015 Observed]' role='measure' type='quantitative' />
            <column datatype='real' name='[2016 Observed]' role='measure' type='quantitative' />
            <column datatype='real' name='[Average Observed]' role='measure' type='quantitative' />
            <column caption='Modeled - Observed' datatype='real' name='[Calculation_966303651074355200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2015 Modeled]-[Average Observed]' />
            </column>
            <column caption='Pct Diff' datatype='real' default-format='p0%' name='[Modeled - Observed (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_966303651074355200]/[Average Observed]' />
            </column>
            <column aggregation='Sum' caption='A' datatype='real' name='[a]' role='dimension' type='ordinal' />
            <column datatype='real' name='[abs_pm]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='B' datatype='real' name='[b]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[county]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
                <alias key='10.0' value='External to Bay Area' />
              </aliases>
            </column>
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes Match' datatype='real' default-format='n#,##0;-#,##0' name='[lanes match]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes Modeled' datatype='real' default-format='n#,##0;-#,##0' name='[lanes modeled]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes Observed' datatype='real' default-format='n#,##0;-#,##0' name='[lanes observed]' role='dimension' type='ordinal' />
            <column-instance column='[a]' derivation='None' name='[none:a:ok]' pivot='key' type='ordinal' />
            <column-instance column='[abs_pm]' derivation='None' name='[none:abs_pm:ok]' pivot='key' type='ordinal' />
            <column-instance column='[b]' derivation='None' name='[none:b:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:ok]' pivot='key' type='ordinal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes match]' derivation='None' name='[none:lanes match:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lanes modeled]' derivation='None' name='[none:lanes modeled:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lanes observed]' derivation='None' name='[none:lanes observed:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Route' datatype='real' default-format='n0;-0' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='real' default-format='n0;-0' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[2014 Observed]' derivation='Sum' name='[sum:2014 Observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015 Modeled]' derivation='Sum' name='[sum:2015 Modeled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015 Observed]' derivation='Sum' name='[sum:2015 Observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2016 Observed]' derivation='Sum' name='[sum:2016 Observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Observed]' derivation='Sum' name='[sum:Average Observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_966303651074355200]' derivation='Sum' name='[sum:Calculation_966303651074355200:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Modeled - Observed (copy)]' derivation='Sum' name='[sum:Modeled - Observed (copy):qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2014 Observed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Observed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2016 Observed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Average Observed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Calculation_966303651074355200:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Modeled - Observed (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]&quot;</bucket>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2014 Observed:qk]&quot;</bucket>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Observed:qk]&quot;</bucket>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2016 Observed:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names]' value='32' />
            <format attr='width' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok]' value='52' />
            <format attr='width' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:station:ok]' value='64' />
            <format attr='width' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:direction:nk]' value='60' />
            <format attr='width' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes observed:ok]' value='60' />
            <format attr='width' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes modeled:ok]' value='56' />
            <format attr='width' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]' value='48' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='10' />
            <format attr='row-levels' value='10' />
            <format attr='row-horiz-levels' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:county:ok] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:direction:nk] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:abs_pm:ok] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:station:ok] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:a:ok] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:b:ok] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes observed:ok] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes modeled:ok] / [federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok])))))))))</rows>
        <cols>([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk] / [federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{A1613B12-C755-4C5B-9ABB-BEF174BDB97B}' />
    </worksheet>
    <worksheet name='Links with Multiple Stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='Roadways to PeMS_wide Extract' name='federated.1j0pkjk1l5szkk1eav2xl1hetkqn' />
          </datasources>
          <datasource-dependencies datasource='federated.1j0pkjk1l5szkk1eav2xl1hetkqn'>
            <column datatype='real' name='[2014 Observed]' role='measure' type='quantitative' />
            <column datatype='real' name='[2015 Modeled]' role='measure' type='quantitative' />
            <column datatype='real' name='[2015 Observed]' role='measure' type='quantitative' />
            <column datatype='real' name='[2016 Observed]' role='measure' type='quantitative' />
            <column datatype='string' name='[A_B]' role='dimension' type='nominal' />
            <column caption='Route Direction' datatype='string' name='[Calculation_935341361300013056]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([route]) + &quot; &quot; + [direction]' />
            </column>
            <column aggregation='Sum' datatype='real' name='[county]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
                <alias key='10.0' value='External to Bay Area' />
              </aliases>
            </column>
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='real' name='[distlink]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes Match' datatype='real' default-format='n#,##0;-#,##0' name='[lanes match]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes Modeled' datatype='real' default-format='n#,##0;-#,##0' name='[lanes modeled]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes Observed' datatype='real' default-format='n#,##0;-#,##0' name='[lanes observed]' role='dimension' type='ordinal' />
            <column-instance column='[A_B]' derivation='None' name='[none:A_B:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_935341361300013056]' derivation='None' name='[none:Calculation_935341361300013056:nk]' pivot='key' type='nominal' />
            <column-instance column='[county]' derivation='None' name='[none:county:ok]' pivot='key' type='ordinal' />
            <column-instance column='[distlink]' derivation='None' name='[none:distlink:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lanes match]' derivation='None' name='[none:lanes match:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lanes modeled]' derivation='None' name='[none:lanes modeled:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lanes observed]' derivation='None' name='[none:lanes observed:ok]' pivot='key' type='ordinal' />
            <column-instance column='[skip]' derivation='None' name='[none:skip:ok]' pivot='key' type='ordinal' />
            <column-instance column='[skip_reason]' derivation='None' name='[none:skip_reason:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[stationsonlink]' derivation='None' name='[none:stationsonlink:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Route' datatype='real' default-format='n0;-0' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[skip]' role='dimension' type='ordinal' />
            <column datatype='string' name='[skip_reason]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Station' datatype='real' default-format='n0;-0' name='[station]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[stationsonlink]' role='dimension' type='ordinal' />
            <column-instance column='[2014 Observed]' derivation='Sum' name='[sum:2014 Observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015 Modeled]' derivation='Sum' name='[sum:2015 Modeled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015 Observed]' derivation='Sum' name='[sum:2015 Observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2016 Observed]' derivation='Sum' name='[sum:2016 Observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[distlink]' derivation='Sum' name='[sum:distlink:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2014 Observed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Observed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2016 Observed:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]&quot;</bucket>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2014 Observed:qk]&quot;</bucket>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Observed:qk]&quot;</bucket>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2016 Observed:qk]&quot;</bucket>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:distlink:qk]&quot;</bucket>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:pemsonlink:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]'>
            <groupfilter function='member' level='[none:lanes match:ok]' member='1.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:stationsonlink:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:stationsonlink:ok]' />
              <groupfilter function='member' level='[none:stationsonlink:ok]' member='1.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names]</column>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]</column>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:stationsonlink:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names]' value='44' />
            <format attr='width' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes modeled:ok]' value='56' />
            <format attr='width' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes observed:ok]' value='60' />
            <format attr='width' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:distlink:ok]' value='56' />
            <format attr='width' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:station:ok]' value='56' />
            <format attr='width' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]' value='36' />
            <format attr='width' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip_reason:nk]' value='144' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='9' />
            <format attr='row-horiz-levels' value='9' />
            <format attr='col-levels' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:county:ok] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:Calculation_935341361300013056:nk] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:A_B:nk] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:stationsonlink:ok] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:station:ok] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes modeled:ok] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes observed:ok] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:distlink:ok] / ([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok] / [federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip_reason:nk])))))))))</rows>
        <cols>([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk] / [federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{56693703-AFC4-4414-B815-ABA8A0F4A450}' />
    </worksheet>
    <worksheet name='Pct Diff Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Roadways to PeMS_wide Extract' name='federated.1j0pkjk1l5szkk1eav2xl1hetkqn' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Coord Shift' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.0030000000000000001'>
              <calculation class='tableau' formula='0.0030000000000000001' />
              <range granularity='0.001' max='0.01' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1j0pkjk1l5szkk1eav2xl1hetkqn'>
            <column datatype='real' name='[2015 Modeled]' role='measure' type='quantitative' />
            <column datatype='string' name='[A_B]' role='dimension' type='nominal' />
            <column datatype='real' name='[Average Observed]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude Offset' datatype='real' name='[Calculation_1756685343653449728]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='CASE [direction] &#13;&#10;WHEN &apos;N&apos; THEN&#13;&#10;  [latitude]&#13;&#10;WHEN &apos;S&apos; THEN&#13;&#10;  [latitude]&#13;&#10;WHEN &apos;E&apos; THEN&#13;&#10;  [latitude]+[Parameters].[Parameter 2]&#13;&#10;WHEN &apos;W&apos; THEN&#13;&#10;  [latitude]-[Parameters].[Parameter 2]&#13;&#10;ELSE&#13;&#10;  [latitude]&#13;&#10;END' />
            </column>
            <column caption='Modeled - Observed' datatype='real' name='[Calculation_966303651074355200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2015 Modeled]-[Average Observed]' />
            </column>
            <column aggregation='Avg' caption='Longitude Offset' datatype='real' name='[Longitude (copy)]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='CASE [direction] &#13;&#10;WHEN &apos;N&apos; THEN&#13;&#10;  [longitude]+[Parameters].[Parameter 2]&#13;&#10;WHEN &apos;S&apos; THEN&#13;&#10;  [longitude]-[Parameters].[Parameter 2]&#13;&#10;WHEN &apos;E&apos; THEN&#13;&#10;  [longitude]&#13;&#10;WHEN &apos;W&apos; THEN&#13;&#10;  [longitude]&#13;&#10;ELSE&#13;&#10;  [longitude]&#13;&#10;END' />
            </column>
            <column caption='Pct Diff' datatype='real' default-format='p0%' name='[Modeled - Observed (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_966303651074355200]/[Average Observed]' />
            </column>
            <column datatype='real' name='[abs_pm]' role='measure' type='quantitative' />
            <column-instance column='[direction]' derivation='Attribute' name='[attr:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes match]' derivation='Attribute' name='[attr:lanes match:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lanes modeled]' derivation='Attribute' name='[attr:lanes modeled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lanes observed]' derivation='Attribute' name='[attr:lanes observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[route]' derivation='Attribute' name='[attr:route:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station]' derivation='Attribute' name='[attr:station:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1756685343653449728]' derivation='Avg' name='[avg:Calculation_1756685343653449728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude (copy)]' derivation='Avg' name='[avg:Longitude (copy):qk]' pivot='key' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes Match' datatype='real' default-format='n#,##0;-#,##0' name='[lanes match]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes Modeled' datatype='real' default-format='n#,##0;-#,##0' name='[lanes modeled]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes Observed' datatype='real' default-format='n#,##0;-#,##0' name='[lanes observed]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[A_B]' derivation='None' name='[none:A_B:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes match]' derivation='None' name='[none:lanes match:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sep_HOV]' derivation='None' name='[none:sep_HOV:nk]' pivot='key' type='nominal' />
            <column-instance column='[skip]' derivation='None' name='[none:skip:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Route' datatype='real' default-format='n0;-0' name='[route]' role='dimension' type='ordinal' />
            <column datatype='boolean' name='[sep_HOV]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='real' name='[skip]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='real' default-format='n0;-0' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[2015 Modeled]' derivation='Sum' name='[sum:2015 Modeled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Observed]' derivation='Sum' name='[sum:Average Observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_966303651074355200]' derivation='Sum' name='[sum:Calculation_966303651074355200:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Modeled - Observed (copy)]' derivation='Sum' name='[sum:Modeled - Observed (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[abs_pm]' derivation='Sum' name='[sum:abs_pm:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]'>
            <groupfilter function='member' level='[none:lanes match:ok]' member='1.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]'>
            <groupfilter function='member' level='[none:skip:ok]' member='0.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;Daily&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]</column>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]</column>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[avg:Calculation_1756685343653449728:qk]' field-type='quantitative' max='4585147.0927501833' min='4474111.9234890556' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[avg:Longitude (copy):qk]' field-type='quantitative' max='-13443491.341317767' min='-13667160.35207653' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Modeled - Observed (copy):qk]' max='1.0' min='-1.0' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Modeled - Observed (copy):qk]' />
              <size column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Average Observed:qk]' />
              <lod column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:abs_pm:qk]' />
              <lod column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:A_B:nk]' />
              <lod column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:sep_HOV:nk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:station:qk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Calculation_966303651074355200:qk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Average Observed:qk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:route:qk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:direction:nk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:lanes modeled:qk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:lanes observed:qk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:lanes match:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station:&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:station:qk]&gt; &lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:route:qk]&gt; &lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:direction:nk]&gt;  </run>
                <run fontcolor='#898989'>PM:</run>
                <run bold='true'> &lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:abs_pm:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Model Link:&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:A_B:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878' underline='true'>Volumes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Modeled&#9;Observed&#9;Diff&#9;Pct Diff</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]&gt;</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Average Observed:qk]&gt;</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Calculation_966303651074355200:qk]&gt;</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Modeled - Observed (copy):qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878' underline='true'>Lanes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Modeled&#9;Observed&#9;Match</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:lanes modeled:qk]&gt;</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:lanes observed:qk]&gt;</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:lanes match:qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#898989'>sep_HOV?</run>
                <run bold='true'> &lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:sep_HOV:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[avg:Calculation_1756685343653449728:qk]</rows>
        <cols>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[avg:Longitude (copy):qk]</cols>
      </table>
      <simple-id uuid='{C20CFBB2-E379-46F4-952A-B191B9A07F7A}' />
    </worksheet>
    <worksheet name='RMSE'>
      <table>
        <view>
          <datasources>
            <datasource caption='Roadways to PeMS_wide Extract' name='federated.1j0pkjk1l5szkk1eav2xl1hetkqn' />
          </datasources>
          <datasource-dependencies datasource='federated.1j0pkjk1l5szkk1eav2xl1hetkqn'>
            <column datatype='real' name='[2015 Modeled]' role='measure' type='quantitative' />
            <column datatype='real' name='[Average Observed]' role='measure' type='quantitative' />
            <column caption='Percent RMSE' datatype='real' default-format='p0%' name='[Calculation_2062648650363297793]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_971933150857908227]/Avg([Average Observed])' />
            </column>
            <column caption='Modeled - Observed' datatype='real' name='[Calculation_966303651074355200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2015 Modeled]-[Average Observed]' />
            </column>
            <column caption='RMSE' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_971933150857908227]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(Avg([Calculation_966303651074355200]*[Calculation_966303651074355200]))' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[skip]' derivation='None' name='[none:skip:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Route' datatype='real' default-format='n0;-0' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[skip]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2062648650363297793]' derivation='User' name='[usr:Calculation_2062648650363297793:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_971933150857908227]' derivation='User' name='[usr:Calculation_971933150857908227:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[usr:Calculation_2062648650363297793:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[usr:Calculation_971933150857908227:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[usr:Calculation_971933150857908227:qk]&quot;</bucket>
              <bucket>&quot;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Number of Records:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='4.0' function='range' level='[none:route:ok]' to='152.0' />
              <groupfilter from='237.0' function='range' level='[none:route:ok]' to='680.0' />
              <groupfilter function='member' level='[none:route:ok]' member='880.0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:skip:ok]' />
              <groupfilter function='member' level='[none:skip:ok]' member='1.0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;AM&quot;' />
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;Daily&quot;' />
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;PM&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok]</column>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]</column>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names]</column>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok]</rows>
        <cols>([federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk] / [federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names])</cols>
        <subtotals>
          <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:county:ok]</column>
          <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{E2D50453-F8EB-400B-97A9-3D64F611FA99}' />
    </worksheet>
    <worksheet name='RMSE Scatter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Roadways to PeMS_wide Extract' name='federated.1j0pkjk1l5szkk1eav2xl1hetkqn' />
          </datasources>
          <datasource-dependencies datasource='federated.1j0pkjk1l5szkk1eav2xl1hetkqn'>
            <column datatype='real' name='[2015 Modeled]' role='measure' type='quantitative' />
            <column datatype='real' name='[Average Observed]' role='measure' type='quantitative' />
            <column caption='Percent RMSE' datatype='real' default-format='p0%' name='[Calculation_2062648650363297793]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_971933150857908227]/Avg([Average Observed])' />
            </column>
            <column caption='Route Direction' datatype='string' name='[Calculation_935341361300013056]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([route]) + &quot; &quot; + [direction]' />
            </column>
            <column caption='Modeled - Observed' datatype='real' name='[Calculation_966303651074355200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2015 Modeled]-[Average Observed]' />
            </column>
            <column caption='RMSE' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_971933150857908227]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(Avg([Calculation_966303651074355200]*[Calculation_966303651074355200]))' />
            </column>
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_935341361300013056]' derivation='None' name='[none:Calculation_935341361300013056:nk]' pivot='key' type='nominal' />
            <column-instance column='[skip]' derivation='None' name='[none:skip:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Route' datatype='real' default-format='n0;-0' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[skip]' role='dimension' type='ordinal' />
            <column-instance column='[Average Observed]' derivation='Sum' name='[sum:Average Observed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2062648650363297793]' derivation='User' name='[usr:Calculation_2062648650363297793:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:skip:ok]' />
              <groupfilter function='member' level='[none:skip:ok]' member='1.0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;Daily&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]</column>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[usr:Calculation_2062648650363297793:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:Calculation_935341361300013056:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='log' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[usr:Calculation_2062648650363297793:qk]</rows>
        <cols>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Average Observed:qk]</cols>
      </table>
      <simple-id uuid='{814CAAEC-227F-4680-9970-87EDAEBBEAE2}' />
    </worksheet>
    <worksheet name='Route by Postmile'>
      <table>
        <view>
          <datasources>
            <datasource caption='Roadways to PeMS Extract' name='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde' />
          </datasources>
          <datasource-dependencies datasource='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde'>
            <column datatype='string' name='[A_B]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='abs postmile San Francisco' datatype='real' name='[Calculation_2511601237635584000]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([county]==1) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
            </column>
            <column caption='Route Direction' datatype='string' name='[Calculation_935341361301659649]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([route])+ &quot; &quot; + [direction]' />
            </column>
            <column aggregation='Sum' caption='abs postmile Santa Clara' datatype='real' name='[SF abs postmile (copy 2)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([county]==3) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
            </column>
            <column aggregation='Sum' caption='abs postmile San Mateo' datatype='real' name='[SF abs postmile (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([county]==2) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
            </column>
            <column aggregation='Sum' caption='abs postmile Contra Costa' datatype='real' name='[abs postmile Alameda (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([county]==5) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
            </column>
            <column aggregation='Sum' caption='abs postmile Alameda' datatype='real' name='[abs postmile Marin (copy 2)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([county]==4) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
            </column>
            <column aggregation='Sum' caption='abs postmile Sonoma' datatype='real' name='[abs postmile Marin (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([county]==8) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
            </column>
            <column aggregation='Sum' caption='abs postmile Marin' datatype='real' name='[abs postmile SF (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([county]==9) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
            </column>
            <column aggregation='Sum' caption='abs postmile Solano' datatype='real' name='[abs postmile Sonoma (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([county]==6) then&#13;&#10;  [abs_pm]&#13;&#10;ELSE&#13;&#10;  NULL&#13;&#10;end' />
            </column>
            <column aggregation='Sum' datatype='real' name='[abs_pm]' role='dimension' type='ordinal' />
            <column-instance column='[SF abs postmile (copy 2)]' derivation='Attribute' name='[attr:SF abs postmile (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[abs postmile Alameda (copy)]' derivation='Attribute' name='[attr:abs postmile Alameda (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[abs postmile Marin (copy 2)]' derivation='Attribute' name='[attr:abs postmile Marin (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[abs postmile Marin (copy)]' derivation='Attribute' name='[attr:abs postmile Marin (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[abs postmile SF (copy)]' derivation='Attribute' name='[attr:abs postmile SF (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[abs postmile Sonoma (copy)]' derivation='Attribute' name='[attr:abs postmile Sonoma (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[category]' derivation='Attribute' name='[attr:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes match]' derivation='Attribute' name='[attr:lanes match:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lanes]' derivation='Attribute' name='[attr:lanes:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[category]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='real' name='[county]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
                <alias key='10.0' value='External to Bay Area' />
              </aliases>
            </column>
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='real' default-format='n#,##0;-#,##0' name='[lanes match]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' default-format='n#,##0;-#,##0' name='[lanes]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2511601237635584000]' derivation='Min' name='[min:Calculation_2511601237635584000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[A_B]' derivation='None' name='[none:A_B:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_935341361301659649]' derivation='None' name='[none:Calculation_935341361301659649:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[county]' derivation='None' name='[none:county:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lanes match]' derivation='None' name='[none:lanes match:ok]' pivot='key' type='ordinal' />
            <column-instance column='[skip]' derivation='None' name='[none:skip:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Route' datatype='real' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[skip]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='real' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[SF abs postmile (copy)]' derivation='Sum' name='[sum:SF abs postmile (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[abs_pm]' derivation='Sum' name='[sum:abs_pm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[volume]' derivation='Sum' name='[sum:volume:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
            <column caption='Volume' datatype='real' name='[volume]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Calculation_935341361301659649:nk]'>
            <groupfilter function='member' level='[none:Calculation_935341361301659649:nk]' member='&quot;280 S&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:lanes match:ok]'>
            <groupfilter function='member' level='[none:lanes match:ok]' member='1.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:skip:ok]'>
            <groupfilter function='member' level='[none:skip:ok]' member='0.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;Daily&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Calculation_935341361301659649:nk]</column>
            <column>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:lanes match:ok]</column>
            <column>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk]</column>
            <column>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:skip:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#fefaf1' />
            <format attr='fill-color' id='refline2' value='#f7f1f6' />
            <format attr='fill-color' id='refline4' value='#f3faf9' />
            <format attr='fill-color' id='refline6' value='#faf5f0' />
            <format attr='fill-color' id='refline8' value='#f0f7fa' />
            <format attr='fill-color' id='refline10' value='#faf5f0' />
            <format attr='fill-color' id='refline12' value='#f2f9f9' />
            <format attr='fill-color' id='refline14' value='#f0f3fa' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Calculation_935341361301659649:nk]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:station:ok]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:station:ok]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:A_B:nk]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:county:ok]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[min:Calculation_2511601237635584000:qk]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:SF abs postmile (copy):qk]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:SF abs postmile (copy 2):qk]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile SF (copy):qk]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile Marin (copy):qk]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile Marin (copy 2):qk]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile Alameda (copy):qk]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile Marin (copy):qk]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile Sonoma (copy):qk]' />
              <tooltip column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:category:nk]' />
              <tooltip column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:lanes:qk]' />
              <tooltip column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:lanes match:qk]' />
            </encodings>
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='min' id='refline0' label='San Francisco' label-type='custom' paired-id='refline1' scope='per-pane' symmetric='false' tooltip='San Francisco' tooltip-type='custom' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[min:Calculation_2511601237635584000:qk]' z-order='1' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='max' id='refline1' label-type='none' paired-id='refline0' scope='per-pane' symmetric='false' tooltip-type='none' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[min:Calculation_2511601237635584000:qk]' z-order='1' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='min' id='refline10' label='Alameda' label-type='custom' paired-id='refline11' scope='per-pane' symmetric='false' tooltip='Alameda' tooltip-type='custom' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile Marin (copy 2):qk]' z-order='6' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='max' id='refline11' label-type='none' paired-id='refline10' scope='per-pane' symmetric='false' tooltip-type='none' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile Marin (copy 2):qk]' z-order='6' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='min' id='refline12' label='Contra Costa' label-type='custom' paired-id='refline13' scope='per-pane' symmetric='false' tooltip='Contra Costa' tooltip-type='custom' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile Alameda (copy):qk]' z-order='7' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='max' id='refline13' label-type='none' paired-id='refline12' scope='per-pane' symmetric='false' tooltip-type='none' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile Alameda (copy):qk]' z-order='7' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='min' id='refline14' label='Solano' label-type='custom' paired-id='refline15' scope='per-pane' symmetric='false' tooltip='Solano' tooltip-type='custom' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile Sonoma (copy):qk]' z-order='8' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='max' id='refline15' label-type='none' paired-id='refline14' scope='per-pane' symmetric='false' tooltip-type='none' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile Sonoma (copy):qk]' z-order='8' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='min' id='refline2' label='San Mateo' label-type='custom' paired-id='refline3' scope='per-pane' symmetric='false' tooltip='San Mateo' tooltip-type='custom' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:SF abs postmile (copy):qk]' z-order='2' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='max' id='refline3' label-type='none' paired-id='refline2' scope='per-pane' symmetric='false' tooltip-type='none' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:SF abs postmile (copy):qk]' z-order='2' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='min' id='refline4' label='Santa Clara' label-type='custom' paired-id='refline5' scope='per-pane' symmetric='false' tooltip='Santa Clara' tooltip-type='custom' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:SF abs postmile (copy 2):qk]' z-order='3' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='none' paired-id='refline4' scope='per-pane' symmetric='false' tooltip-type='none' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:SF abs postmile (copy 2):qk]' z-order='3' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='min' id='refline6' label='Marin' label-type='custom' paired-id='refline7' scope='per-pane' symmetric='false' tooltip='Marin' tooltip-type='custom' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile SF (copy):qk]' z-order='4' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='none' paired-id='refline6' scope='per-pane' symmetric='false' tooltip-type='none' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile SF (copy):qk]' z-order='4' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='min' id='refline8' label='Sonoma' label-type='custom' paired-id='refline9' scope='per-pane' symmetric='false' tooltip='Sonoma' tooltip-type='custom' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile Marin (copy):qk]' z-order='5' />
            <reference-line axis-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]' enable-instant-analytics='true' formula='max' id='refline9' label-type='none' paired-id='refline8' scope='per-pane' symmetric='false' tooltip-type='none' value-column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs postmile Marin (copy):qk]' z-order='5' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Route/Direction/Station:&#9;</run>
                <run bold='true'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Calculation_935341361301659649:nk]&gt; &lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:station:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>county:&#9;</run>
                <run bold='true'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:county:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>category:&#9;</run>
                <run bold='true'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>lanes:&#9;</run>
                <run bold='true'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:lanes:qk]&gt;   </run>
                <run fontcolor='#898989'>(match:</run>
                <run bold='true'>Æ </run>
                <run fontcolor='#898989'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:lanes match:qk]&gt;)</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>abs_pm:&#9;</run>
                <run bold='true'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>A_B:&#9;</run>
                <run bold='true'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:A_B:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Volume:&#9;</run>
                <run bold='true'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:volume:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.86756908893585205' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:volume:qk]</rows>
        <cols>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:abs_pm:qk]</cols>
      </table>
      <simple-id uuid='{014A89BF-681F-40A2-818B-3C7C1570C1FD}' />
    </worksheet>
    <worksheet name='ScatterByRoute'>
      <table>
        <view>
          <datasources>
            <datasource caption='Roadways to PeMS_wide Extract' name='federated.1j0pkjk1l5szkk1eav2xl1hetkqn' />
          </datasources>
          <datasource-dependencies datasource='federated.1j0pkjk1l5szkk1eav2xl1hetkqn'>
            <column datatype='real' name='[2015 Modeled]' role='measure' type='quantitative' />
            <column datatype='real' name='[Average Observed]' role='measure' type='quantitative' />
            <column-instance column='[direction]' derivation='Attribute' name='[attr:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='Attribute' name='[attr:route:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station]' derivation='Attribute' name='[attr:station:qk]' pivot='key' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes Modeled' datatype='real' default-format='n#,##0;-#,##0' name='[lanes modeled]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes Observed' datatype='real' default-format='n#,##0;-#,##0' name='[lanes observed]' role='dimension' type='ordinal' />
            <column-instance column='[lanes modeled]' derivation='None' name='[none:lanes modeled:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lanes observed]' derivation='None' name='[none:lanes observed:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[skip]' derivation='None' name='[none:skip:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Route' datatype='real' default-format='n0;-0' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[skip]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='real' default-format='n0;-0' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[2015 Modeled]' derivation='Sum' name='[sum:2015 Modeled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Observed]' derivation='Sum' name='[sum:Average Observed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:route:ok]' member='80.0' />
              <groupfilter function='member' level='[none:route:ok]' member='101.0' />
              <groupfilter function='member' level='[none:route:ok]' member='280.0' />
              <groupfilter function='member' level='[none:route:ok]' member='580.0' />
              <groupfilter function='member' level='[none:route:ok]' member='680.0' />
              <groupfilter function='member' level='[none:route:ok]' member='880.0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:skip:ok]' />
              <groupfilter function='member' level='[none:skip:ok]' member='1.0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;Daily&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok]</column>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]</column>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]' value='10' />
            <format attr='font-size' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Average Observed:qk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok]' />
              <lod column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes modeled:ok]' />
              <lod column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes observed:ok]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:route:qk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:direction:nk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:station:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='true' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station/Route/Direction:&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:station:qk]&gt; &lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:route:qk]&gt; &lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:direction:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Lanes Modeled:&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes modeled:ok]&gt;</run>
                <run fontcolor='#787878'>&#9;Lanes Observed:&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes observed:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>2015 Modeled:&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]&gt;</run>
                <run fontcolor='#787878'>&#9;Average Observed:&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Average Observed:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.58171272277832031' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='671' />
                <format attr='maxwidth' value='671' />
                <format attr='minheight' value='654' />
                <format attr='maxheight' value='654' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='524' />
                <format attr='maxwidth' value='524' />
                <format attr='minheight' value='414' />
                <format attr='maxheight' value='414' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Average Observed:qk]</rows>
        <cols>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]</cols>
      </table>
      <simple-id uuid='{531CB781-383A-4C88-8DDF-E059D16E8B4E}' />
    </worksheet>
    <worksheet name='ScatterByTimePeriod'>
      <table>
        <view>
          <datasources>
            <datasource caption='Roadways to PeMS_wide Extract' name='federated.1j0pkjk1l5szkk1eav2xl1hetkqn' />
          </datasources>
          <datasource-dependencies datasource='federated.1j0pkjk1l5szkk1eav2xl1hetkqn'>
            <column datatype='real' name='[2014 Observed]' role='measure' type='quantitative' />
            <column datatype='real' name='[2015 Modeled]' role='measure' type='quantitative' />
            <column datatype='real' name='[2015 Observed]' role='measure' type='quantitative' />
            <column datatype='real' name='[2016 Observed]' role='measure' type='quantitative' />
            <column datatype='real' name='[Average Observed]' role='measure' type='quantitative' />
            <column-instance column='[direction]' derivation='Attribute' name='[attr:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='Attribute' name='[attr:route:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station]' derivation='Attribute' name='[attr:station:qk]' pivot='key' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes Match' datatype='real' default-format='n#,##0;-#,##0' name='[lanes match]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes Modeled' datatype='real' default-format='n#,##0;-#,##0' name='[lanes modeled]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes Observed' datatype='real' default-format='n#,##0;-#,##0' name='[lanes observed]' role='dimension' type='ordinal' />
            <column-instance column='[lanes match]' derivation='None' name='[none:lanes match:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lanes modeled]' derivation='None' name='[none:lanes modeled:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lanes observed]' derivation='None' name='[none:lanes observed:ok]' pivot='key' type='ordinal' />
            <column-instance column='[skip]' derivation='None' name='[none:skip:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Route' datatype='real' default-format='n0;-0' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[skip]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='real' default-format='n0;-0' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[2014 Observed]' derivation='Sum' name='[sum:2014 Observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015 Modeled]' derivation='Sum' name='[sum:2015 Modeled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015 Observed]' derivation='Sum' name='[sum:2015 Observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2016 Observed]' derivation='Sum' name='[sum:2016 Observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Observed]' derivation='Sum' name='[sum:Average Observed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]'>
            <groupfilter function='member' level='[none:skip:ok]' member='0.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;Daily&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]</column>
            <column>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]' value='10' />
            <format attr='font-size' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2016 Observed:qk]' value='10' />
            <format attr='font-size' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Observed:qk]' value='10' />
            <format attr='font-size' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2014 Observed:qk]' value='10' />
            <format attr='font-size' field='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Average Observed:qk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]' />
              <lod column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes modeled:ok]' />
              <lod column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes observed:ok]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:route:qk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:direction:nk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:station:qk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2014 Observed:qk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Observed:qk]' />
              <tooltip column='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2016 Observed:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='true' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Time Period:&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Station:&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:station:qk]&gt; &lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:route:qk]&gt; &lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:direction:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>2015 Modeled:&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]&gt;</run>
                <run fontcolor='#787878'>&#9;Average Observed:&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Average Observed:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Lanes Modeled:&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes modeled:ok]&gt;</run>
                <run fontcolor='#787878'>&#9;Lanes Observed:&#9;</run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes observed:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Observed:&#9;2014: </run>
                <run bold='true'>&lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2014 Observed:qk]&gt;   </run>
                <run fontcolor='#787878'>2015:</run>
                <run bold='true'> &lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Observed:qk]&gt;  </run>
                <run fontcolor='#787878'>2016:</run>
                <run bold='true'> &lt;[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2016 Observed:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.58171272277832031' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='635' />
                <format attr='maxwidth' value='635' />
                <format attr='minheight' value='659' />
                <format attr='maxheight' value='659' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='539' />
                <format attr='maxwidth' value='539' />
                <format attr='minheight' value='408' />
                <format attr='maxheight' value='408' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Average Observed:qk]</rows>
        <cols>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]</cols>
      </table>
      <simple-id uuid='{8AB0B424-9BEA-4156-83C3-FEAB8AC61B2E}' />
    </worksheet>
    <worksheet name='Station Graph'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
            <run> for </run>
            <run>&lt;</run>
            <run>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[station]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Roadways to PeMS Extract' name='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde' />
          </datasources>
          <datasource-dependencies datasource='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde'>
            <column datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Station' datatype='real' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[volume]' derivation='Sum' name='[sum:volume:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
            <column caption='Volume' datatype='real' name='[volume]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[Action (Station)]'>
            <groupfilter function='level-members' level='[station]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;AM&quot;' />
              <groupfilter from='&quot;EA&quot;' function='range' level='[none:time_period:nk]' to='&quot;PM&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk]</column>
            <column>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[Action (Station)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:volume:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='14'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]&gt;&#10;&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk]&gt; </run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='14'>Volume: </run>
                <run bold='true' fontname='Source Sans Pro' fontsize='14'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:volume:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0214917659759521' />
                <format attr='mark-transparency' value='175' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:volume:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='14'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]&gt;&#10;&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk]&gt; </run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='14'>Volume: </run>
                <run bold='true' fontname='Source Sans Pro' fontsize='14'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:volume:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0214917659759521' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:volume:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='14'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]&gt;&#10;&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk]&gt; </run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='14'>Volume: </run>
                <run bold='true' fontname='Source Sans Pro' fontsize='14'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:volume:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0214917659759521' />
                <format attr='mark-transparency' value='52' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:volume:qk] + [M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[sum:volume:qk])</rows>
        <cols>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk]</cols>
      </table>
      <simple-id uuid='{B358DD6C-9106-4BF7-B99E-6FCE557A9309}' />
    </worksheet>
    <worksheet name='Station Info'>
      <table>
        <view>
          <datasources>
            <datasource caption='Roadways to PeMS Extract' name='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde' />
          </datasources>
          <datasource-dependencies datasource='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde'>
            <column caption='HOV in model' datatype='integer' name='[Calculation_590253082197737472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [sep_HOV]==&quot;True&quot; then&#13;&#10;1&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_590253082197737472]' derivation='Max' name='[max:Calculation_590253082197737472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[skip]' derivation='None' name='[none:skip:ok]' pivot='key' type='ordinal' />
            <column-instance column='[skip_reason]' derivation='None' name='[none:skip_reason:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Route' datatype='real' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='CountD' datatype='string' name='[sep_HOV]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='real' name='[skip]' role='dimension' type='ordinal' />
            <column datatype='string' name='[skip_reason]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Station' datatype='real' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[M:\\Application\\Model One\\RTP2021\\IncrementalProgress\\2015_TM151_IPA_00\\OUTPUT\\validation\\Roadways to PeMS.tde].[max:Calculation_590253082197737472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[M:\\Application\\Model One\\RTP2021\\IncrementalProgress\\2015_TM151_IPA_00\\OUTPUT\\validation\\Roadways to PeMS.tde].[sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[M:\\Application\\Model One\\RTP2021\\IncrementalProgress\\2015_TM151_IPA_00\\OUTPUT\\validation\\Roadways to PeMS.tde].[sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[Action (Station)]'>
            <groupfilter function='level-members' level='[station]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[:Measure Names]</column>
            <column>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[Action (Station)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:direction:nk]' value='100' />
            <format attr='height' field='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[:Measure Names]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:route:ok] / ([M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:direction:nk] / ([M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:skip:ok] / [M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:skip_reason:nk])))</rows>
        <cols>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{4EE41F0C-BB1A-4769-865E-5F2EB5346798}' />
    </worksheet>
    <worksheet name='Station Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Roadways to PeMS Extract' name='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde'>
            <column aggregation='Avg' caption='Latitude Offset' datatype='real' name='[Calculation_2300105162444606]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='CASE [direction] &#13;&#10;WHEN &apos;N&apos; THEN&#13;&#10;  [latitude]&#13;&#10;WHEN &apos;S&apos; THEN&#13;&#10;  [latitude]&#13;&#10;WHEN &apos;E&apos; THEN&#13;&#10;  [latitude]+[Parameters].[Parameter 2]&#13;&#10;WHEN &apos;W&apos; THEN&#13;&#10;  [latitude]-[Parameters].[Parameter 2]&#13;&#10;ELSE&#13;&#10;  [latitude]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column aggregation='Avg' caption='Longitude Offset' datatype='real' name='[Longitude (copy)]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='CASE [direction] &#13;&#10;WHEN &apos;N&apos; THEN&#13;&#10;  [longitude]+[Parameters].[Parameter 2]&#13;&#10;WHEN &apos;S&apos; THEN&#13;&#10;  [longitude]-[Parameters].[Parameter 2]&#13;&#10;WHEN &apos;E&apos; THEN&#13;&#10;  [longitude]&#13;&#10;WHEN &apos;W&apos; THEN&#13;&#10;  [longitude]&#13;&#10;ELSE&#13;&#10;  [longitude]&#13;&#10;END' />
            </column>
            <column aggregation='Sum' datatype='real' name='[abs_pm]' role='dimension' type='ordinal' />
            <column-instance column='[abs_pm]' derivation='Attribute' name='[attr:abs_pm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[direction]' derivation='Attribute' name='[attr:direction:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[category]' role='dimension' type='nominal' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_2300105162444606]' derivation='None' name='[none:Calculation_2300105162444606:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude (copy)]' derivation='None' name='[none:Longitude (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[skip]' derivation='None' name='[none:skip:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='real' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[skip]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='real' name='[station]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Coord Shift' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.0030000000000000001'>
              <calculation class='tableau' formula='0.0030000000000000001' />
              <range granularity='0.001' max='0.01' min='0.0' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;2015 Modeled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:route:ok]'>
            <groupfilter from='4.0' function='range' level='[none:route:ok]' to='980.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:skip:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:skip:ok]' />
              <groupfilter function='member' level='[none:skip:ok]' member='1.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]</column>
            <column>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:route:ok]</column>
            <column>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:skip:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Calculation_2300105162444606:qk]' field-type='quantitative' max='4611932.4339805571' min='4549398.8772043567' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Longitude (copy):qk]' field-type='quantitative' max='-13600065.655861737' min='-13648702.867331926' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:route:ok]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:station:ok]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:direction:nk]' />
              <lod column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs_pm:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='14' indent='1080'>Route:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='14' indent='1080'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:route:ok]&gt; (&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:direction:nk]&gt;)</run>
                <run indent='1080'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='14' indent='1080'>Station:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='14' indent='1080'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:station:ok]&gt;</run>
                <run indent='1080'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='14' indent='1080'>Absolute Postmile:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='14' indent='1080'>&lt;[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs_pm:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Calculation_2300105162444606:qk]</rows>
        <cols>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Longitude (copy):qk]</cols>
      </table>
      <simple-id uuid='{4094F12D-2DC5-4C87-9151-7DD66B4DA77F}' />
    </worksheet>
    <worksheet name='Station Table'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
            <run> for </run>
            <run>&lt;</run>
            <run>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[station]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Roadways to PeMS Extract' name='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde' />
          </datasources>
          <datasource-dependencies datasource='M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde'>
            <column datatype='string' name='[category]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='real' default-format='n#,##0;-#,##0' name='[lanes match]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' default-format='n#,##0;-#,##0' name='[lanes]' role='dimension' type='ordinal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes match]' derivation='None' name='[none:lanes match:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Station' datatype='real' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[volume]' derivation='Sum' name='[sum:volume:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal' />
            <column caption='Volume' datatype='real' name='[volume]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[M:\\Application\\Model One\\RTP2021\\IncrementalProgress\\2015_TM151_IPA_00\\OUTPUT\\validation\\Roadways to PeMS.tde].[sum:volume:qk]&quot;' user:op='manual' />
          </filter>
          <manual-sort column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[M:\\Development\\Travel Model One\\Validation\\Version 05\\2005\\Roadways to PeMS.tde].[sum:volume:qk]&quot;</bucket>
              <bucket>&quot;[M:\\Development\\Travel Model One\\Validation\\Version 05\\2005\\Roadways to PeMS.tde].[pcdf:sum:volume:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[Action (Station)]'>
            <groupfilter function='level-members' level='[station]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2015 Modeled&quot;</bucket>
              <bucket>&quot;2014 Observed&quot;</bucket>
              <bucket>&quot;2015 Observed&quot;</bucket>
              <bucket>&quot;2016 Observed&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[:Measure Names]</column>
            <column>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[Action (Station)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[:Measure Names]' value='37' />
            <format attr='width' field='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[:Measure Names]' value='74' />
            <format attr='height' field='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]' value='23' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:lanes:ok]' value='44' />
            <format attr='width' field='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:lanes match:ok]' value='44' />
            <format attr='height' field='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[:Measure Names]' value='28' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk] / ([M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:lanes:ok] / [M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:lanes match:ok]))</rows>
        <cols>([M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk] / [M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{39769DF5-1664-47DA-B1DC-65717256FFF5}' />
    </worksheet>
    <worksheet name='VMT'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Vital Signs VMT source: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Benton Sans Book' hyperlink='tabdoc:load-url url=&amp;quot;http://www.vitalsigns.mtc.ca.gov/daily-miles-traveled&amp;quot;' underline='true'>http://www.vitalsigns.mtc.ca.gov/daily-miles-traveled</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period' name='federated.02bx90j18mfrz513f4grn0lzorsm' />
            <datasource caption='VitalSigns_VMT' name='federated.1fxbhu50jcanpf1b1bc8v1fycprf' />
          </datasources>
          <datasource-dependencies datasource='federated.02bx90j18mfrz513f4grn0lzorsm'>
            <column caption='Network Modeled VMT' datatype='real' name='[Calculation_1756685343679705090]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([volAM_tot]+[volMD_tot]+[volPM_tot]+[volEV_tot]+[volEA_tot])*[distance]' />
            </column>
            <column caption='County' datatype='string' name='[Calculation_1756685343680626691]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='CASE [gl]&#13;&#10;when 1 then &quot;San Francisco County&quot;&#13;&#10;when 2 then &quot;San Mateo County&quot;&#13;&#10;when 3 then &quot;Santa Clara County&quot;&#13;&#10;when 4 then &quot;Alameda County&quot;&#13;&#10;when 5 then &quot;Contra Costa County&quot;&#13;&#10;when 6 then &quot;Solano County&quot;&#13;&#10;when 7 then &quot;Napa County&quot;&#13;&#10;when 8 then &quot;Sonoma County&quot;&#13;&#10;when 9 then &quot;Marin County&quot;&#13;&#10;else &quot;External&quot;&#13;&#10;END' />
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_1756685343681732612]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='2015' />
            </column>
            <column caption='VMT diff' datatype='real' name='[Calculation_1756685343682158597]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1756685343679705090])-SUM([federated.1fxbhu50jcanpf1b1bc8v1fycprf].[VMT])' />
            </column>
            <column caption='VMT pct diff' datatype='real' default-format='p0%' name='[Calculation_1756685343682330630]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1756685343682158597]/SUM([federated.1fxbhu50jcanpf1b1bc8v1fycprf].[VMT])' />
            </column>
            <column caption='Distance' datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column caption='GL' datatype='integer' name='[gl]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
              <aliases>
                <alias key='1' value='San Francisco' />
                <alias key='2' value='San Mateo' />
                <alias key='3' value='Santa Clara' />
                <alias key='4' value='Alameda' />
                <alias key='5' value='Contra Costa' />
                <alias key='6' value='Solano' />
                <alias key='7' value='Napa' />
                <alias key='8' value='Sonoma' />
                <alias key='9' value='Marin' />
                <alias key='10' value='External' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1756685343680626691]' derivation='None' name='[none:Calculation_1756685343680626691:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1756685343681732612]' derivation='None' name='[none:Calculation_1756685343681732612:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1756685343679705090]' derivation='Sum' name='[sum:Calculation_1756685343679705090:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1756685343682158597]' derivation='User' name='[usr:Calculation_1756685343682158597:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1756685343682330630]' derivation='User' name='[usr:Calculation_1756685343682330630:qk]' pivot='key' type='quantitative' />
            <column caption='volAM tot' datatype='real' name='[volAM_tot]' role='measure' type='quantitative' />
            <column caption='volEA tot' datatype='real' name='[volEA_tot]' role='measure' type='quantitative' />
            <column caption='volEV tot' datatype='real' name='[volEV_tot]' role='measure' type='quantitative' />
            <column caption='volMD tot' datatype='real' name='[volMD_tot]' role='measure' type='quantitative' />
            <column caption='volPM tot' datatype='real' name='[volPM_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fxbhu50jcanpf1b1bc8v1fycprf'>
            <column caption='Vital Signs VMT' datatype='real' name='[VMT]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[VMT]' derivation='Sum' name='[sum:VMT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02bx90j18mfrz513f4grn0lzorsm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1fxbhu50jcanpf1b1bc8v1fycprf].[sum:VMT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02bx90j18mfrz513f4grn0lzorsm].[sum:Calculation_1756685343679705090:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02bx90j18mfrz513f4grn0lzorsm].[usr:Calculation_1756685343682158597:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02bx90j18mfrz513f4grn0lzorsm].[usr:Calculation_1756685343682330630:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.02bx90j18mfrz513f4grn0lzorsm].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1fxbhu50jcanpf1b1bc8v1fycprf].[sum:VMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.02bx90j18mfrz513f4grn0lzorsm].[sum:Calculation_1756685343679705090:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.02bx90j18mfrz513f4grn0lzorsm].[none:Calculation_1756685343680626691:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1756685343680626691:nk]' />
              <groupfilter function='member' level='[none:Calculation_1756685343680626691:nk]' member='&quot;External&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.02bx90j18mfrz513f4grn0lzorsm].[none:Calculation_1756685343681732612:ok]'>
            <groupfilter function='member' level='[none:Calculation_1756685343681732612:ok]' member='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.02bx90j18mfrz513f4grn0lzorsm].[:Measure Names]</column>
            <column>[federated.02bx90j18mfrz513f4grn0lzorsm].[none:Calculation_1756685343681732612:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.02bx90j18mfrz513f4grn0lzorsm].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.02bx90j18mfrz513f4grn0lzorsm].[none:Calculation_1756685343680626691:nk]</rows>
        <cols>[federated.02bx90j18mfrz513f4grn0lzorsm].[:Measure Names]</cols>
        <join-lod-include-overrides>
          <column>[federated.1fxbhu50jcanpf1b1bc8v1fycprf].[Year]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{3B3440E7-C485-42F2-9C5E-7EFE4677FD7D}' />
    </worksheet>
    <worksheet name='VMT from matrices'>
      <table>
        <view>
          <datasources>
            <datasource caption='auto_times' name='federated.17bfib200lv0cu13tlrib1jwyhcu' />
          </datasources>
          <datasource-dependencies datasource='federated.17bfib200lv0cu13tlrib1jwyhcu'>
            <column datatype='string' name='[Income]' role='dimension' type='nominal' />
            <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Airport travel&quot;'>
                  <value>&quot;da_air&quot;</value>
                  <value>&quot;datoll_air&quot;</value>
                  <value>&quot;sr2_air&quot;</value>
                  <value>&quot;sr2toll_air&quot;</value>
                  <value>&quot;sr3_air&quot;</value>
                  <value>&quot;sr3toll_air&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;AV travel&quot;'>
                  <value>&quot;da_av_notoll&quot;</value>
                  <value>&quot;da_av_toll&quot;</value>
                  <value>&quot;owned_zpv&quot;</value>
                  <value>&quot;s2_av_notoll&quot;</value>
                  <value>&quot;s2_av_toll&quot;</value>
                  <value>&quot;s3_av_notoll&quot;</value>
                  <value>&quot;s3_av_toll&quot;</value>
                  <value>&quot;zpv_tnc&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Bay Area Residents core model travel&quot;'>
                  <value>&quot;da&quot;</value>
                  <value>&quot;datoll&quot;</value>
                  <value>&quot;sr2&quot;</value>
                  <value>&quot;sr2toll&quot;</value>
                  <value>&quot;sr3&quot;</value>
                  <value>&quot;sr3toll&quot;</value>
                  <value>&quot;taxi&quot;</value>
                  <value>&quot;tnc_shared&quot;</value>
                  <value>&quot;tnc_single&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;IX/EX travel&quot;'>
                  <value>&quot;da_ix&quot;</value>
                  <value>&quot;datoll_ix&quot;</value>
                  <value>&quot;sr2_ix&quot;</value>
                  <value>&quot;sr2toll_ix&quot;</value>
                  <value>&quot;sr3_ix&quot;</value>
                  <value>&quot;sr3toll_ix&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal' />
            <column datatype='real' name='[Vehicle Miles]' role='measure' type='quantitative' />
            <column-instance column='[Income]' derivation='None' name='[none:Income:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vehicle Miles]' derivation='Sum' name='[sum:Vehicle Miles:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17bfib200lv0cu13tlrib1jwyhcu].[sum:Vehicle Miles:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.17bfib200lv0cu13tlrib1jwyhcu].[Mode (group)] / [federated.17bfib200lv0cu13tlrib1jwyhcu].[none:Mode:nk])</rows>
        <cols total='true'>[federated.17bfib200lv0cu13tlrib1jwyhcu].[none:Income:nk]</cols>
      </table>
      <simple-id uuid='{336812A7-9F2A-41CB-866B-F6877330D239}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Station Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='13' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='11' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='74000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='74000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
                  <zone h='65736' id='1' name='Station Map' w='39008' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='margin-top' value='0' />
                      <format attr='margin-left' value='0' />
                    </zone-style>
                  </zone>
                  <zone h='74000' id='7' name='Station Graph' w='50090' x='49110' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='margin-top' value='0' />
                    </zone-style>
                  </zone>
                  <zone h='8264' id='10' name='Station Info' show-title='false' w='48310' x='800' y='66736'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='margin-left' value='0' />
                    </zone-style>
                  </zone>
                  <zone h='65736' id='6' name='Station Map' pane-specification-id='2' param='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:route:ok]' type='color' w='9302' x='39808' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='margin-top' value='0' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='24000' id='9' name='Station Table' w='98400' x='800' y='75000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-bottom' value='0' />
                  <format attr='margin-left' value='0' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
            <format attr='margin-top' value='8' />
            <format attr='margin-right' value='8' />
            <format attr='margin-bottom' value='8' />
            <format attr='margin-left' value='8' />
          </zone-style>
        </zone>
        <zone h='11875' id='8' name='Station Graph' pane-specification-id='1' param='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]' type='color' w='14000' x='69500' y='56250' />
      </zones>
      <simple-id uuid='{BCB389F9-AC84-4EEE-8EAB-BCBF5B48321A}' />
    </dashboard>
  </dashboards>
  <windows source-height='114'>
    <window class='dashboard' name='Station Dashboard'>
      <viewpoints>
        <viewpoint name='Station Graph'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]</field>
            </color-one-way>
          </highlight>
          <geo-search-visibility value='1' />
        </viewpoint>
        <viewpoint name='Station Info' />
        <viewpoint name='Station Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:route:ok]</field>
            </color-one-way>
          </highlight>
          <geo-search-visibility value='1' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Station Table' />
      </viewpoints>
      <active id='1' />
      <simple-id uuid='{A97C1756-998D-44A5-9BD2-2BDD922AF002}' />
    </window>
    <window class='worksheet' name='Station Map' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:route:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Longitude (copy):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Calculation_2300105162444606:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Calculation_2300105162444606:qk]</field>
                  <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Longitude (copy):qk]</field>
                  <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:route:ok]</field>
                  <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:station:ok]</field>
                  <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:abs_pm:qk]</field>
                  <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[attr:direction:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>37.445696000000005</value>
                <value>-122.122856</value>
                <value>101.0</value>
                <value>404561.0</value>
                <value>401.56300000000005</value>
                <value>&quot;S&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Calculation_2300105162444606:qk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Longitude (copy):qk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:abs_pm:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:direction:nk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:latitude:qk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:longitude:qk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:route:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:skip:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:station:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{896B07EB-202D-40FB-AEC5-0C3121F8E6C4}' />
    </window>
    <window class='worksheet' name='Station Graph' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:station:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{7DD4AEE6-EF50-4CB3-9F31-6B46DDAEC2F8}' />
    </window>
    <window class='worksheet' name='Station Table' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[:Measure Names]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:HOV:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:lanes match:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:lanes:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{B10CF66F-E453-4849-B32D-1B4B445A32ED}' />
    </window>
    <window class='worksheet' name='Station Info' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Calculation_590253082197737472:nk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:HOV:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:direction:nk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:lanes:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:route:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:sep_HOV:nk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:skip:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:skip_reason:nk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:station:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[usr:Calculation_5720105160617482:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{29F8E0C3-775C-4238-AEB8-F16A9543C20A}' />
    </window>
    <window class='worksheet' name='All Stations Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:Calculation_971933150891577348:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:Lanes Modeled:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:a:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:abs_pm:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:b:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:county:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:direction:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:station:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B2686BE8-C7FC-4B14-8344-5C8C4A783B77}' />
    </window>
    <window class='worksheet' name='ScatterByTimePeriod'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]' type='color' />
            <card param='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:Calculation_971933150891577348:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:direction:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes modeled:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes observed:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:station:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E48E1C6-42D0-4011-8E39-8196EA1177E8}' />
    </window>
    <window class='worksheet' name='ScatterByRoute'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='radiolist' param='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]' show-all='false' type='filter' />
            <card pane-specification-id='4' param='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:Average Observed:qk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:Calculation_971933150891577348:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:direction:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes modeled:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes observed:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:station:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{320918FB-E408-4692-B57B-2A95AC1BC21A}' />
    </window>
    <window class='worksheet' maximized='true' name='RMSE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[:Measure Names]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:Calculation_971933150891577348:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:county:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EE1AA99-78E5-48AC-BFE8-9A51C7B09AB8}' />
    </window>
    <window class='worksheet' name='RMSE Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:Calculation_935341361300013056:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7C78CE0-F6A9-452E-915E-0DB050E148D7}' />
    </window>
    <window class='worksheet' name='Pct Diff Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]' show-all='false' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Modeled - Observed (copy):qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Average Observed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[avg:Longitude (copy):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[avg:Calculation_1756685343653449728:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[avg:Calculation_1756685343653449728:qk]</field>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[avg:Longitude (copy):qk]</field>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:A_B:nk]</field>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:2015 Modeled:qk]</field>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Average Observed:qk]</field>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Calculation_966303651074355200:qk]</field>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:Modeled - Observed (copy):qk]</field>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[sum:abs_pm:qk]</field>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:direction:nk]</field>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:lanes match:qk]</field>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:lanes modeled:qk]</field>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:lanes observed:qk]</field>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:route:qk]</field>
                  <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[attr:station:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>37.520237000000002</value>
                <value>-122.357652</value>
                <value>&quot;6273_6274&quot;</value>
                <value>37195.169999999998</value>
                <value>54035.540807242622</value>
                <value>-16840.370807242623</value>
                <value>-0.31165359975420909</value>
                <value>34.616</value>
                <value>&quot;S&quot;</value>
                <value>1.0</value>
                <value>4.0</value>
                <value>4.0</value>
                <value>280.0</value>
                <value>404264.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:A_B:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:Calculation_971933150891577348:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:direction:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes modeled:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes observed:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:route:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:sep_HOV:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:station:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{157C0A8C-4C1F-4D3E-89D3-144FE5370707}' />
    </window>
    <window class='worksheet' name='Route by Postmile'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='93' type='filters' />
            <card size='381' type='marks' />
            <card mode='dropdown' param='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Calculation_935341361301659649:nk]' show-all='false' size='27' type='filter' />
            <card pane-specification-id='0' param='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]' size='0' type='color' />
            <card param='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:lanes match:ok]' size='79' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:A_B:nk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:Calculation_935341361301659649:nk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:SF abs postmile (copy 2):ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:abs postmile Alameda (copy):ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:abs postmile Marin (copy 2):ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:abs postmile Marin (copy):ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:abs postmile SF (copy):ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:abs postmile Sonoma (copy):ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:category:nk]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:county:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:lanes match:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:lanes:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:skip:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:station:ok]</field>
            <field>[M:\Application\Model One\RTP2021\IncrementalProgress\2015_TM151_IPA_00\OUTPUT\validation\Roadways to PeMS.tde].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D0D4AF29-2AB9-4DA3-BEA4-AE4D2B5F0256}' />
    </window>
    <window class='worksheet' name='VMT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.02bx90j18mfrz513f4grn0lzorsm].[none:Calculation_1756685343680626691:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;External&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.02bx90j18mfrz513f4grn0lzorsm].[none:Calculation_1756685343680626691:nk]</field>
            <field>[federated.02bx90j18mfrz513f4grn0lzorsm].[none:Calculation_1756685343681732612:ok]</field>
            <field>[federated.02bx90j18mfrz513f4grn0lzorsm].[none:gl:ok]</field>
            <field>[federated.1fxbhu50jcanpf1b1bc8v1fycprf].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D1F9005-9CAB-44D0-A760-ABC9D35DF292}' />
    </window>
    <window class='worksheet' name='VMT from matrices'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17bfib200lv0cu13tlrib1jwyhcu].[Mode (group)]</field>
            <field>[federated.17bfib200lv0cu13tlrib1jwyhcu].[none:Income:nk]</field>
            <field>[federated.17bfib200lv0cu13tlrib1jwyhcu].[none:Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BDCA4297-7A60-4D8B-B2F2-2237AD3062D2}' />
    </window>
    <window class='worksheet' name='Links with Multiple Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:A_B:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:Calculation_935341361300013056:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:county:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:distlink:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes match:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes modeled:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:lanes observed:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:pemsonlink:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:skip_reason:nk]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:station:ok]</field>
            <field>[federated.1j0pkjk1l5szkk1eav2xl1hetkqn].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C18B525B-D343-4E3C-A588-DB1446D95394}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='All Stations Table' width='192'>
      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
      EPi7yqP/P/cTjyZ5ltqaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Links with Multiple Stations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pct Diff Map' width='192'>
      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
      JBQM8n8Ad5ft/Xxl4YoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='RMSE' width='192'>
      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
      WRV4D0Kr2NWr7PMkQaVSndrYTxKeV4NKTaYf3GYjmKaYDHDn0RwDw6No1d1/Wn2dGjQUCpFK
      pYhEIuzv7+P1etnf32dmZobe3l5mZ2dRqVQ8fvyYUqnUtfLpzWaT69evy2mS7WJtbY3FxUU8
      Hg/T09NotVrm5+eRJEn2+j2sGrTZbPLo0SO8Xi+1Wo2bN2+iUqmYn5+nXq/LwrOWYrIbmJ2d
      JRKJdNRmi7Zt2RdFo1GWl5dRqVRtn/zHYjEePnwoF0O7e/cu8ORhvbW1xf7+PvF4/EixP0+D
      SiKbW1tsb28x5O+jjhGj9nhe1bFYjGg0SiAQIJFI0Gg0CIfDslpze3sbm82G2WyWXU26gRYL
      0ulBld/vR6fTyUrOYrFIIpFgdXW17X1WpVJhY2MDSZIol8uEQiGCwSDxeJxarUYwGOwKDfo0
      WsxaJ6jX62xvb1Mul5mdnSUajZLJZJienqZarbZFg9psNlkDFQqFZGZqbm5Ovi+OGvvzd3az
      SVNlRCVW2VyYZ+zKGyiPySm+r68PpVIpsyf1ep1isUhvby/NZhObzSZXdHg6ofuoUKlUXLt2
      jdXV1Y4+v7Ozg1arZWBgAKPRyODgIBMTE1QqFR4+fNhWWyaTCavVSrPZJJFIMDQ0RC6X4+rV
      q6ysrKDT6WTxWbdw4cIFYrFYRzSoVqvF7XZTKpWoVCpkMhk+/vhjdDodd+/ebYsGzeVy9Pb2
      EovFUCqVWCwWVldX5SoR3Yj9QDVoOhamrDBg1UioLXYM6u4fAx9GDNc6/Gnd5LlcjoGBAeLx
      OH6/n1wuh8VikVWG3Rzbzs4OHo+nI5YqGAxSLBYZGRlBEAS5Rk7Li9ntdrclhkulUmi1WnK5
      HPV6HY/HQyqVwmKxyDRoixvvBhKJBM1ms+OlRS6Xk9WpLaqydc4wODh46Dar1SrBYJCenh4E
      QaDRaOB2u2WjxFbbR4n9TA16TDhTg54MHKtR9qtWoJ4knObYTxKemQCvslhrS316WgvEnubY
      TxKeU4NKksjq/BRVrRMrAhEB3n37Khrl8TnFr6ysIIoily5dIhgMyuUQV1ZWGBwcJBgM4vF4
      mJiY6EpfY2NjCIJAtVqVUxnbwc7ODtFolLGxMTY2NpicnJRpXIfDcSj6s4VUKsXq6ipvvfUW
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='RMSE Scatter' width='192'>
      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
      RgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Route by Postmile' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ScatterByRoute' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ScatterByTimePeriod' width='192'>
      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
      rgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Station Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Station Graph' width='192'>
      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
    </thumbnail>
    <thumbnail height='56' name='Station Info' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA4CAYAAACrHfdzAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACaUlEQVR4nO3dT0iTcRzH8Y9NLMgOUYQwMowgRBqah7oldOnPqcJBNm9GB6VAGEgISRSB
      ghKjIJBOox12GHj01r/TRC+ZIyGJMfIQiOAWiLIOQawgDJ/haJ/36/jb8+z3vbx5Hp5nsIZy
      uVwWYGpfrQcAaokAYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYI0AYK1xpwNyudxezAHURAN/lA1n3ALBGgHAGgHAWuAAtvMZjfRFlcj+
      WlF+dlxD/VFF+4c0PpvXduUJG1klbkcVzxSCbv1/K2QUj/ZpbPbbH2sJZf9+FqosQADbWv+Y
      0ZOHKX3eqlheSWtiekkdw0klhzu0ND2h9MrPjza/vtfz0Sm9XQ80c135lE4p+73WU/jafQCF
      GT0aS+nLkZM6WrG8tpzTqiLqijSpKdKliFaVW16TlNWLe0/17kCrTgQeu16EdamnpJevPvx+
      lcSeCXAF2K/jF4f1ePCcDlaslopFSY0KhSSFQmqUVCyWJIV0uPOmHozeUGugkevLoZ6YLi8n
      NWN+R1gruw8gfEV375zXsX/+hrOK3b+m08273rFOhXV14IzeJF9ro9ajGKr6U6BwZ7daNK+5
      hU1tLsxpXi3q7gxXe5u6Ejp1S1OD0rORtLgQ7K3qPwZt61V8oF2LkzHFJhfVPhBXb1vVd6k/
      zRcUux7W1s5Hoor4KQSs8SIM1ggA1ggA1n4ArQWDE3i9mF0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Station Map' width='192'>
      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
      +f8FLSqqdi16byIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='152' name='Station Table' width='192'>
      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
      mgIgRvt/RJNoPj3j96EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='VMT' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VMT from matrices' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
