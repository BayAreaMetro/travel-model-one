;
; Calculates total PMT (miles) and total PHT (hours) for auto (driver) and auto (passenger) groups for ITHIM,
; for income quartiles Q1 and Q2.
;
; Reads trips[EA,AM,MD,PM,EV]inc[1,4].tpp and multiplies them by HWYSKMAM.tpp
;
; outputs metrics\ITHIM\PMT_PHT_inc[1,4].csv

loop inc=1,5

  if (inc=1)
    token_inc = 'inc1.'
    token_val = '1'
  elseif (inc=2)
    token_inc = 'inc2.'
    token_val = '2'
  elseif (inc=3)
    token_inc = 'inc3.'
    token_val = '3'
  elseif (inc=4)
    token_inc = 'inc4.'
    token_val = '4'
  elseif (inc=5)
    token_inc = '.'
    token_val = '-1'
  endif

  DistributeMultistep processid = 'ctramp', processNum = inc, commpath = 'm:\commpath'
  run pgm = MATRIX
     ; Read person trips for an income quartile for all time periods
     FILEI MATI[1] = "main\tripsEA@token_inc@tpp"
     FILEI MATI[2] = "main\tripsAM@token_inc@tpp"
     FILEI MATI[3] = "main\tripsMD@token_inc@tpp"
     FILEI MATI[4] = "main\tripsPM@token_inc@tpp"
     FILEI MATI[5] = "main\tripsEV@token_inc@tpp"

     ; Read Highway Skims
     FILEI MATI[6] = "skims\HWYSKMEA.tpp"
     FILEI MATI[7] = "skims\HWYSKMAM.tpp"
     FILEI MATI[8] = "skims\HWYSKMMD.tpp"
     FILEI MATI[9] = "skims\HWYSKMPM.tpp"
     FILEI MATI[10]= "skims\HWYSKMEV.tpp"

    fileo PRINTO[1] = "metrics\ITHIM\PMT_PHT@token_inc@csv"
    ; person minutes
    MW[1] = (MI.1.DA      * MI.6.TIMEDA    ) + (MI.2.DA      * MI.7.TIMEDA    ) + (MI.3.DA      * MI.8.TIMEDA    ) + (MI.4.DA      * MI.9.TIMEDA    ) + (MI.5.DA      * MI.10.TIMEDA    ) +
            (MI.1.DATOLL  * MI.6.TOLLTIMEDA) + (MI.2.DATOLL  * MI.7.TOLLTIMEDA) + (MI.3.DATOLL  * MI.8.TOLLTIMEDA) + (MI.4.DATOLL  * MI.9.TOLLTIMEDA) + (MI.5.DATOLL  * MI.10.TOLLTIMEDA)

    MW[2] = (MI.1.SR2     * MI.6.TIMES2    ) + (MI.2.SR2     * MI.7.TIMES2    ) + (MI.3.SR2     * MI.8.TIMES2    ) + (MI.4.SR2     * MI.9.TIMES2    ) + (MI.5.SR2     * MI.10.TIMES2    ) +
            (MI.1.SR2TOLL * MI.6.TOLLTIMES2) + (MI.2.SR2TOLL * MI.7.TOLLTIMES2) + (MI.3.SR2TOLL * MI.8.TOLLTIMES2) + (MI.4.SR2TOLL * MI.9.TOLLTIMES2) + (MI.5.SR2TOLL * MI.10.TOLLTIMES2)

    MW[3] = (MI.1.SR3     * MI.6.TIMES3    ) + (MI.2.SR3     * MI.7.TIMES3    ) + (MI.3.SR3     * MI.8.TIMES3    ) + (MI.4.SR3     * MI.9.TIMES3    ) + (MI.5.SR3     * MI.10.TIMES3    ) +
            (MI.1.SR3TOLL * MI.6.TOLLTIMES3) + (MI.2.SR3TOLL * MI.7.TOLLTIMES3) + (MI.3.SR3TOLL * MI.8.TOLLTIMES3) + (MI.4.SR3TOLL * MI.9.TOLLTIMES3) + (MI.5.SR3TOLL * MI.10.TOLLTIMES3)

    ; person miles
    MW[4] = (MI.1.DA      * MI.6.DISTDA    ) + (MI.2.DA      * MI.7.DISTDA    ) + (MI.3.DA      * MI.8.DISTDA    ) + (MI.4.DA      * MI.9.DISTDA    ) + (MI.5.DA      * MI.10.DISTDA    ) +
            (MI.1.DATOLL  * MI.6.TOLLDISTDA) + (MI.2.DATOLL  * MI.7.TOLLDISTDA) + (MI.3.DATOLL  * MI.8.TOLLDISTDA) + (MI.4.DATOLL  * MI.9.TOLLDISTDA) + (MI.5.DATOLL  * MI.10.TOLLDISTDA)

    MW[5] = (MI.1.SR2     * MI.6.DISTS2    ) + (MI.2.SR2     * MI.7.DISTS2    ) + (MI.3.SR2     * MI.8.DISTS2    ) + (MI.4.SR2     * MI.9.DISTS2    ) + (MI.5.SR2     * MI.10.DISTS2    ) +
            (MI.1.SR2TOLL * MI.6.TOLLDISTS2) + (MI.2.SR2TOLL * MI.7.TOLLDISTS2) + (MI.3.SR2TOLL * MI.8.TOLLDISTS2) + (MI.4.SR2TOLL * MI.9.TOLLDISTS2) + (MI.5.SR2TOLL * MI.10.TOLLDISTS2)

    MW[6] = (MI.1.SR3     * MI.6.DISTS3    ) + (MI.2.SR3     * MI.7.DISTS3    ) + (MI.3.SR3     * MI.8.DISTS3    ) + (MI.4.SR3     * MI.9.DISTS3    ) + (MI.5.SR3     * MI.10.DISTS3    ) +
            (MI.1.SR3TOLL * MI.6.TOLLDISTS3) + (MI.2.SR3TOLL * MI.7.TOLLDISTS3) + (MI.3.SR3TOLL * MI.8.TOLLDISTS3) + (MI.4.SR3TOLL * MI.9.TOLLDISTS3) + (MI.5.SR3TOLL * MI.10.TOLLDISTS3)

    ; all DA are drivers, 1/2 SR2 are drivers, 1/3.5 SR3 are drivers
    auto_drv_min   = auto_drv_min   + ROWSUM(1) + (ROWSUM(2)/2.0) + (ROWSUM(3)*(1.0/3.5))
    auto_drv_miles = auto_drv_miles + ROWSUM(4) + (ROWSUM(5)/2.0) + (ROWSUM(6)*(1.0/3.5))
    ; no DA are passengers, 1/2 SR2 are passengers, 2.5/3.5 SR3 are passengers
    auto_pax_min   = auto_pax_min   + (ROWSUM(2)/2.0) + (ROWSUM(3)*(2.5/3.5))
    auto_pax_miles = auto_pax_miles + (ROWSUM(5)/2.0) + (ROWSUM(6)*(2.5/3.5))

    if (I=1)    print PRINTO=1 LIST="incQ,mode,units,item_name,item_value"
    if (I=1454)
        print PRINTO=1 CSV=T LIST=@token_val@,"auto (driver)",   "hours","Total PHT",auto_drv_min/60.0
        print PRINTO=1 CSV=T LIST=@token_val@,"auto (driver)",   "miles","Total PMT",auto_drv_miles
        print PRINTO=1 CSV=T LIST=@token_val@,"auto (passenger)","hours","Total PHT",auto_pax_min/60.0
        print PRINTO=1 CSV=T LIST=@token_val@,"auto (passenger)","miles","Total PMT",auto_pax_miles
    endif
  endrun
  EndDistributeMultistep
endloop

Wait4Files files=CTRAMP1.script.end, CTRAMP2.script.end, CTRAMP3.script.end, CTRAMP4.script.end, CTRAMP5.script.end, printfiles = merge, deldistribfiles = t, CheckReturnCode = t