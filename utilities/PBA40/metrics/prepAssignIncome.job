; make time-period-specific copies of the individual trip data

  ; the iteration
  token_iter = '%ITER%'

  ; the number of zones is used throughout to size arrays to store data
  token_zones = '1454'

  ; do, more or less, the same procedure for each time period
  loop period = 1, 5

     ; a two letter token is used for each time period
     if (period = 1)
       token_period = 'EA'
     elseif (period = 2)
       token_period = 'AM'
     elseif (period = 3)
       token_period = 'MD'
     elseif (period = 4)
       token_period = 'PM'
     elseif (period = 5)
       token_period = 'EV'
     endif

  DistributeMultistep processid = 'ctramp', processNum = period, commpath = '%COMMPATH%'

  loop income = 1, 6

      if (income = 1)
        suffix = 'inc1'
      elseif (income = 2)
        suffix = 'inc2'
      elseif (income = 3)
        suffix = 'inc3'
      elseif (income = 4)
        suffix = 'inc4'
      elseif (income = 5)
        suffix  = '_2074'
      elseif (income = 6)
        suffix  = '_2064'
      endif

     ; convert the fixed format files to tp+ matrices
     run pgm = matrix

        ; read in the individual trips fixed format file from countTrips.py
        filei mati[1] = main\trips@token_period@@suffix@.dat, pattern = ijm:v, fields = #1,2,0,3-32

        ; write out a matrix that combines the individual and joint trips for assignment
        fileo mato[1] = main\trips@token_period@_no_zpv_@suffix@.tpp, mo = 1-29, name = da, datoll, sr2, sr2toll, sr3, sr3toll,
                                                                     walk, bike,
                                                                     wlk_loc_wlk, wlk_lrf_wlk, wlk_exp_wlk, wlk_hvy_wlk, wlk_com_wlk,
                                                                     drv_loc_wlk, drv_lrf_wlk, drv_exp_wlk, drv_hvy_wlk, drv_com_wlk,
                                                                     wlk_loc_drv, wlk_lrf_drv, wlk_exp_drv, wlk_hvy_drv, wlk_com_drv,
                                                                     taxi, tnc_single, tnc_shared, da_av, s2_av, s3_av
        zones = @token_zones@

        mw[1]  = mi.1.1  ; - drive alone, no value toll
        mw[2]  = mi.1.2  ; - drive alone, value toll
        mw[3]  = mi.1.3  ; - shared ride 2, no value toll
        mw[4]  = mi.1.4  ; - shared ride 2, value toll
        mw[5]  = mi.1.5  ; - shared ride 3+, no value toll
        mw[6]  = mi.1.6  ; shared ride 3+, value toll
        mw[7]  = mi.1.7  ; walk
        mw[8]  = mi.1.8  ; bicycle
        mw[9]  = mi.1.9  ; walk, local bus, walk
        mw[10] = mi.1.10 ; walk, light rail/ferry, walk
        mw[11] = mi.1.11 ; walk, express bus, walk
        mw[12] = mi.1.12 ; walk, heavy rail, walk
        mw[13] = mi.1.13 ; walk, commuter rail, walk
        mw[14] = mi.1.14 ; drive, local bus, walk
        mw[15] = mi.1.15 ; drive, light rail/ferry, walk
        mw[16] = mi.1.16 ; drive, express bus, walk
        mw[17] = mi.1.17 ; drive, heavy rail, walk
        mw[18] = mi.1.18 ; drive, commuter rail, walk
        mw[19] = mi.1.19 ; walk, local bus, drive
        mw[20] = mi.1.20 ; walk, light rail/ferry, drive
        mw[21] = mi.1.21 ; walk, express bus, drive
        mw[22] = mi.1.22 ; walk, heavy rail, drive
        mw[23] = mi.1.23 ; walk, commuter rail, drive
        mw[24] = mi.1.24 ; taxi
        mw[25] = mi.1.25 ; tnc, single-party
        mw[26] = mi.1.26 ; tnc, shared
        mw[27] = mi.1.27 ; drive alone, av
        mw[28] = mi.1.28 ; shared ride 2, av
        mw[29] = mi.1.29 ; shared ride 3+, av
     endrun


     ; create zero passenger trip matrices
     run pgm = matrix

     	 filei mati[1] = main\trips@token_period@_no_zpv_@suffix@.tpp

       ; write out a matrix that is a transpose and a fraction of the original trip matrix (for TNCs and AVs, 5 modes only)
       fileo mato[1] = main\trips@token_period@_zpv_@suffix@.tpp, mo = 1-5, name = tnc_single, tnc_shared,
                                                                        da_av, sr2_av, sr3_av

     	 zones = @token_zones@

       ; hwyParam.bock contains the values of the zero passenger vehicle factor (zpv)
       read file = ctramp\scripts\block\hwyparam.block

         mw[1] = mi.1.25.t * TNC_ZPV_factor ; tnc, single-party
         mw[2] = mi.1.26.t * TNC_ZPV_factor ; tnc, shared
         mw[3] = mi.1.27.t * OwnedAV_ZPV_factor ; drive alone, av
         mw[4] = mi.1.28.t * OwnedAV_ZPV_factor ; shared ride 2, av
         mw[5] = mi.1.29.t * OwnedAV_ZPV_factor ; shared ride 3+, av

     endrun


  endloop ; income loop

  ; step four: combine the income-specific matrices
     run pgm = matrix

  			filei mati[1] = main\trips@token_period@_no_zpv_inc1.tpp
  			filei mati[2] = main\trips@token_period@_no_zpv_inc2.tpp
  			filei mati[3] = main\trips@token_period@_no_zpv_inc3.tpp
  			filei mati[4] = main\trips@token_period@_no_zpv_inc4.tpp

  			 ; write out a matrix that combines the individual and joint trips for assignment
        fileo mato[1] = main\trips@token_period@allinc.tpp, mo = 1-29, name = da, datoll, sr2, sr2toll, sr3, sr3toll,
                                                                     walk, bike,
                                                                     wlk_loc_wlk, wlk_lrf_wlk, wlk_exp_wlk, wlk_hvy_wlk, wlk_com_wlk,
                                                                     drv_loc_wlk, drv_lrf_wlk, drv_exp_wlk, drv_hvy_wlk, drv_com_wlk,
                                                                     wlk_loc_drv, wlk_lrf_drv, wlk_exp_drv, wlk_hvy_drv, wlk_com_drv,
                                                                     taxi, tnc_single, tnc_shared,
                                                                     da_av, sr2_av, sr3_av


  	zones = @token_zones@

  			mw[1] = mi.1.1 + mi.2.1 + mi.3.1 + mi.4.1
  			mw[2] = mi.1.2 + mi.2.2 + mi.3.2 + mi.4.2
  			mw[3] = mi.1.3 + mi.2.3 + mi.3.3 + mi.4.3
  			mw[4] = mi.1.4 + mi.2.4 + mi.3.4 + mi.4.4
  			mw[5] = mi.1.5 + mi.2.5 + mi.3.5 + mi.4.5
  			mw[6] = mi.1.6 + mi.2.6 + mi.3.6 + mi.4.6
  			mw[7] = mi.1.7 + mi.2.7 + mi.3.7 + mi.4.7
  			mw[8] = mi.1.8 + mi.2.8 + mi.3.8 + mi.4.8
  			mw[9] = mi.1.9 + mi.2.9 + mi.3.9 + mi.4.9
  			mw[10] = mi.1.10 + mi.2.10 + mi.3.10 + mi.4.10
  			mw[11] = mi.1.11 + mi.2.11 + mi.3.11 + mi.4.11
  			mw[12] = mi.1.12 + mi.2.12 + mi.3.12 + mi.4.12
  			mw[13] = mi.1.13 + mi.2.13 + mi.3.13 + mi.4.13
  			mw[14] = mi.1.14 + mi.2.14 + mi.3.14 + mi.4.14
  			mw[15] = mi.1.15 + mi.2.15 + mi.3.15 + mi.4.15
  			mw[16] = mi.1.16 + mi.2.16 + mi.3.16 + mi.4.16
  			mw[17] = mi.1.17 + mi.2.17 + mi.3.17 + mi.4.17
  			mw[18] = mi.1.18 + mi.2.18 + mi.3.18 + mi.4.18
  			mw[19] = mi.1.19 + mi.2.19 + mi.3.19 + mi.4.19
  			mw[20] = mi.1.20 + mi.2.20 + mi.3.20 + mi.4.20
  			mw[21] = mi.1.21 + mi.2.21 + mi.3.21 + mi.4.21
  			mw[22] = mi.1.22 + mi.2.22 + mi.3.22 + mi.4.22
  			mw[23] = mi.1.23 + mi.2.23 + mi.3.23 + mi.4.23
    		mw[24] = mi.1.24 + mi.2.24 + mi.3.24 + mi.4.24
  			mw[25] = mi.1.25 + mi.2.25 + mi.3.25 + mi.4.25
  			mw[26] = mi.1.26 + mi.2.26 + mi.3.26 + mi.4.26
  			mw[27] = mi.1.27 + mi.2.27 + mi.3.27 + mi.4.27
  			mw[28] = mi.1.28 + mi.2.28 + mi.3.28 + mi.4.28
  			mw[29] = mi.1.29 + mi.2.29 + mi.3.29 + mi.4.29
  	endrun

    EndDistributeMultistep


  endloop ; time period loop

  Wait4Files files = CTRAMP1.script.end, CTRAMP2.script.end, CTRAMP3.script.end, CTRAMP4.script.end, CTRAMP5.script.end,
  		             printfiles = merge, deldistribfiles = t, CheckReturnCode = t
