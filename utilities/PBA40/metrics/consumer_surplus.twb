<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='TAZ and ConsumerSurplusdiff Joined' inline='true' name='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Travel Analysis Zones' name='ogrdirect.1efdtoc1ji58yc1e8ugyi0d6gs5f (copy)'>
            <connection class='ogrdirect' directory='M:/Data/GIS layers/Travel_Analysis_Zones_(TAZ1454)' filename='Travel Analysis Zones.shp' ogr-grid-shift-folder='C:\Program Files\Tableau\Tableau 2018.3\local\proj4' password='' server='' tablename='' />
          </named-connection>
          <named-connection caption='consumer_surplus' name='textscan.1e7qetk1ws4dz714nplef00kcg77'>
            <connection class='textscan' directory='.' filename='consumer_surplus.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='right' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Travel Analysis Zones.shp].[TAZ1454]' />
              <expression op='[consumer_surplus.csv].[taz]' />
            </expression>
          </clause>
          <relation connection='ogrdirect.1efdtoc1ji58yc1e8ugyi0d6gs5f (copy)' name='Travel Analysis Zones.shp' table='[Travel Analysis Zones.shp]' type='table'>
            <columns>
              <column datatype='integer' name='SUPERD' ordinal='0' />
              <column datatype='integer' name='TAZ1454' ordinal='1' />
              <column datatype='real' name='Shape__Are' ordinal='2' />
              <column datatype='real' name='Shape__Len' ordinal='3' />
              <column datatype='spatial' name='Geometry' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.1e7qetk1ws4dz714nplef00kcg77' name='consumer_surplus.csv' table='[consumer_surplus#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='real' name='CS diff min' ordinal='0' />
              <column datatype='real' name='autoSuff' ordinal='1' />
              <column datatype='string' name='autoSuff_label' ordinal='2' />
              <column datatype='real' name='base_dclogsum' ordinal='3' />
              <column datatype='real' name='base_num_persons' ordinal='4' />
              <column datatype='real' name='base_num_workers' ordinal='5' />
              <column datatype='real' name='base_num_workers_students' ordinal='6' />
              <column datatype='boolean' name='cem' ordinal='7' />
              <column datatype='real' name='diff_dclogsum' ordinal='8' />
              <column datatype='integer' name='hasAV' ordinal='9' />
              <column datatype='string' name='incQ_label' ordinal='10' />
              <column datatype='real' name='ldm_cem' ordinal='11' />
              <column datatype='real' name='ldm_mult' ordinal='12' />
              <column datatype='real' name='ldm_ratio' ordinal='13' />
              <column datatype='real' name='logsum_diff_minutes' ordinal='14' />
              <column datatype='boolean' name='mandatory' ordinal='15' />
              <column datatype='real' name='scen_dclogsum' ordinal='16' />
              <column datatype='real' name='scen_num_persons' ordinal='17' />
              <column datatype='real' name='scen_num_workers' ordinal='18' />
              <column datatype='real' name='scen_num_workers_students' ordinal='19' />
              <column datatype='integer' name='taz' ordinal='20' />
              <column datatype='integer' name='walk_subzone' ordinal='21' />
              <column datatype='real' name='CS diff hours' ordinal='22' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>SUPERD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUPERD]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>SUPERD</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAZ1454</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAZ1454]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>TAZ1454</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape__Are</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape__Are]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Shape__Are</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape__Len</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape__Len]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Shape__Len</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>4</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CS diff min</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CS diff min]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>CS diff min</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_dclogsum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_dclogsum]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>base_dclogsum</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_num_persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_num_persons]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>base_num_persons</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_num_workers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_num_workers]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>base_num_workers</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_num_workers_students</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_num_workers_students]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>base_num_workers_students</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cem</remote-name>
            <remote-type>11</remote-type>
            <local-name>[cem]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>cem</remote-alias>
            <ordinal>12</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diff_dclogsum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diff_dclogsum]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>diff_dclogsum</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hasAV</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hasAV]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>hasAV</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ldm_cem</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ldm_cem]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>ldm_cem</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ldm_mult</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ldm_mult]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>ldm_mult</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ldm_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ldm_ratio]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>ldm_ratio</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>logsum_diff_minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[logsum_diff_minutes]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>logsum_diff_minutes</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mandatory</remote-name>
            <remote-type>11</remote-type>
            <local-name>[mandatory]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>mandatory</remote-alias>
            <ordinal>20</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scen_dclogsum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scen_dclogsum]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>scen_dclogsum</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scen_num_persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scen_num_persons]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>scen_num_persons</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scen_num_workers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scen_num_workers]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>scen_num_workers</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scen_num_workers_students</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scen_num_workers_students]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>scen_num_workers_students</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[walk_subzone]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>walk_subzone</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CS diff hours</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CS diff hours]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>CS diff hours</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Superd' datatype='integer' name='[SUPERD]' role='measure' type='quantitative' />
      <column caption='Taz1454' datatype='integer' name='[TAZ1454]' role='measure' type='quantitative' />
      <column caption='Auto Suff' datatype='real' name='[autoSuff]' role='measure' type='quantitative' />
      <column caption='autoSuff label' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal' />
      <column caption='Base Dclogsum' datatype='real' name='[base_dclogsum]' role='measure' type='quantitative' />
      <column caption='Base Num Persons' datatype='real' name='[base_num_persons]' role='measure' type='quantitative' />
      <column caption='Base Num Workers' datatype='real' name='[base_num_workers]' role='measure' type='quantitative' />
      <column caption='Base Num Workers Students' datatype='real' name='[base_num_workers_students]' role='measure' type='quantitative' />
      <column caption='Cem' datatype='boolean' name='[cem]' role='dimension' type='nominal' />
      <column caption='Diff Dclogsum' datatype='real' name='[diff_dclogsum]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Has AV' datatype='integer' name='[hasAV]' role='dimension' type='ordinal' />
      <column caption='incQ label' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
      <column caption='Ldm Cem' datatype='real' name='[ldm_cem]' role='measure' type='quantitative' />
      <column caption='Ldm Mult' datatype='real' name='[ldm_mult]' role='measure' type='quantitative' />
      <column caption='Ldm Ratio' datatype='real' name='[ldm_ratio]' role='measure' type='quantitative' />
      <column caption='Logsum Diff Minutes' datatype='real' name='[logsum_diff_minutes]' role='measure' type='quantitative' />
      <column caption='Mandatory' datatype='boolean' name='[mandatory]' role='dimension' type='nominal' />
      <column caption='Scen Dclogsum' datatype='real' name='[scen_dclogsum]' role='measure' type='quantitative' />
      <column caption='Scen Num Persons' datatype='real' name='[scen_num_persons]' role='measure' type='quantitative' />
      <column caption='Scen Num Workers' datatype='real' name='[scen_num_workers]' role='measure' type='quantitative' />
      <column caption='Scen Num Workers Students' datatype='real' name='[scen_num_workers_students]' role='measure' type='quantitative' />
      <column caption='Taz' datatype='integer' name='[taz]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Walk Subzone' datatype='integer' name='[walk_subzone]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.196721' measure-ordering='alphabetic' measure-percentage='0.803279' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='CS Diff - All Tours'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Accessibility Benefits (household-based)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ and ConsumerSurplusdiff Joined' name='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)'>
            <column datatype='real' name='[CS diff hours]' role='measure' type='quantitative' />
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Superd' datatype='integer' name='[SUPERD]' role='measure' type='quantitative' />
            <column caption='autoSuff label' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal' />
            <column caption='Cem' datatype='boolean' name='[cem]' role='dimension' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Has AV' datatype='integer' name='[hasAV]' role='dimension' type='ordinal' />
            <column caption='incQ label' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
            <column caption='Mandatory' datatype='boolean' name='[mandatory]' role='dimension' type='nominal' />
            <column-instance column='[SUPERD]' derivation='None' name='[none:SUPERD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[cem]' derivation='None' name='[none:cem:nk]' pivot='key' type='nominal' />
            <column-instance column='[hasAV]' derivation='None' name='[none:hasAV:ok]' pivot='key' type='ordinal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[mandatory]' derivation='None' name='[none:mandatory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:qk]' pivot='key' type='quantitative' />
            <column-instance column='[walk_subzone]' derivation='None' name='[none:walk_subzone:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CS diff hours]' derivation='Sum' name='[sum:CS diff hours:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Taz' datatype='integer' name='[taz]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Walk Subzone' datatype='integer' name='[walk_subzone]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]'>
            <groupfilter function='level-members' level='[none:autoSuff_label:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]'>
            <groupfilter function='member' level='[none:cem:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]'>
            <groupfilter function='level-members' level='[none:hasAV:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]'>
            <groupfilter function='level-members' level='[none:incQ_label:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]'>
            <groupfilter function='member' level='[none:mandatory:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]'>
            <groupfilter function='level-members' level='[none:walk_subzone:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:CS diff hours:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:taz:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:SUPERD:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:Number of Records:qk]' />
              <geometry column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Latitude (generated)]</rows>
        <cols>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Logsum Diffs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Logsum Diff Minutes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ and ConsumerSurplusdiff Joined' name='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)'>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Superd' datatype='integer' name='[SUPERD]' role='measure' type='quantitative' />
            <column caption='autoSuff label' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal' />
            <column caption='Cem' datatype='boolean' name='[cem]' role='dimension' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='incQ label' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
            <column caption='Logsum Diff Minutes' datatype='real' name='[logsum_diff_minutes]' role='measure' type='quantitative' />
            <column caption='Mandatory' datatype='boolean' name='[mandatory]' role='dimension' type='nominal' />
            <column-instance column='[SUPERD]' derivation='None' name='[none:SUPERD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[cem]' derivation='None' name='[none:cem:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[mandatory]' derivation='None' name='[none:mandatory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:qk]' pivot='key' type='quantitative' />
            <column-instance column='[walk_subzone]' derivation='None' name='[none:walk_subzone:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[logsum_diff_minutes]' derivation='Sum' name='[sum:logsum_diff_minutes:qk]' pivot='key' type='quantitative' />
            <column caption='Taz' datatype='integer' name='[taz]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Walk Subzone' datatype='integer' name='[walk_subzone]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]'>
            <groupfilter function='level-members' level='[none:autoSuff_label:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]'>
            <groupfilter function='member' level='[none:cem:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]'>
            <groupfilter function='level-members' level='[none:incQ_label:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]'>
            <groupfilter function='member' level='[none:mandatory:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]'>
            <groupfilter function='level-members' level='[none:walk_subzone:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:logsum_diff_minutes:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:taz:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:SUPERD:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:Number of Records:qk]' />
              <geometry column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Latitude (generated)]</rows>
        <cols>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='CS Diff - All Tours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='83' type='filters' />
            <card size='166' type='marks' />
          </strip>
          <strip size='160'>
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]' show-all='false' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:CS diff hours:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:CS diff hours:qk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:CS diff sum:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CF40427A-32CE-4607-B72B-EEB15AB61A91}' />
    </window>
    <window class='worksheet' name='Logsum Diffs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='83' type='filters' />
            <card size='166' type='marks' />
          </strip>
          <strip size='160'>
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]' show-all='false' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:logsum_diff_minutes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:CS diff sum:qk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:logsum_diff_minutes:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5A325415-34E6-44E5-B2CE-4A43F0651A8D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CS Diff - All Tours' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Logsum Diffs' width='192'>
      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
      +f4/Pwfu/cmn45gAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
