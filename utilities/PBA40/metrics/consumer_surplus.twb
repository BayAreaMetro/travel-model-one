<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='TAZ and ConsumerSurplusdiff Joined' inline='true' name='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Travel Analysis Zones' name='ogrdirect.1efdtoc1ji58yc1e8ugyi0d6gs5f (copy)'>
            <connection class='ogrdirect' directory='M:/Data/GIS layers/Travel_Analysis_Zones_(TAZ1454)' filename='Travel Analysis Zones.shp' ogr-grid-shift-folder='C:\Program Files\Tableau\Tableau 2018.3\local\proj4' password='' server='' tablename='' />
          </named-connection>
          <named-connection caption='consumer_surplus' name='textscan.1e7qetk1ws4dz714nplef00kcg77'>
            <connection class='textscan' directory='.' filename='consumer_surplus.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='right' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Travel Analysis Zones.shp].[TAZ1454]' />
              <expression op='[consumer_surplus.csv].[taz]' />
            </expression>
          </clause>
          <relation connection='ogrdirect.1efdtoc1ji58yc1e8ugyi0d6gs5f (copy)' name='Travel Analysis Zones.shp' table='[Travel Analysis Zones.shp]' type='table'>
            <columns>
              <column datatype='integer' name='SUPERD' ordinal='0' />
              <column datatype='integer' name='TAZ1454' ordinal='1' />
              <column datatype='real' name='Shape__Are' ordinal='2' />
              <column datatype='real' name='Shape__Len' ordinal='3' />
              <column datatype='spatial' name='Geometry' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.1e7qetk1ws4dz714nplef00kcg77' name='consumer_surplus.csv' table='[consumer_surplus#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='real' name='CS diff min' ordinal='0' />
              <column datatype='real' name='autoSuff' ordinal='1' />
              <column datatype='string' name='autoSuff_label' ordinal='2' />
              <column datatype='real' name='base_dclogsum' ordinal='3' />
              <column datatype='real' name='base_num_persons' ordinal='4' />
              <column datatype='real' name='base_num_workers' ordinal='5' />
              <column datatype='real' name='base_num_workers_students' ordinal='6' />
              <column datatype='boolean' name='cem' ordinal='7' />
              <column datatype='real' name='diff_dclogsum' ordinal='8' />
              <column datatype='integer' name='hasAV' ordinal='9' />
              <column datatype='string' name='incQ_label' ordinal='10' />
              <column datatype='real' name='ldm_cem' ordinal='11' />
              <column datatype='real' name='ldm_mult' ordinal='12' />
              <column datatype='real' name='ldm_ratio' ordinal='13' />
              <column datatype='real' name='logsum_diff_minutes' ordinal='14' />
              <column datatype='boolean' name='mandatory' ordinal='15' />
              <column datatype='real' name='scen_dclogsum' ordinal='16' />
              <column datatype='real' name='scen_num_persons' ordinal='17' />
              <column datatype='real' name='scen_num_workers' ordinal='18' />
              <column datatype='real' name='scen_num_workers_students' ordinal='19' />
              <column datatype='integer' name='taz' ordinal='20' />
              <column datatype='integer' name='walk_subzone' ordinal='21' />
              <column datatype='real' name='CS diff hours' ordinal='22' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>SUPERD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUPERD]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>SUPERD</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAZ1454</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAZ1454]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>TAZ1454</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape__Are</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape__Are]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Shape__Are</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape__Len</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape__Len]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Shape__Len</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>4</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CS diff min</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CS diff min]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>CS diff min</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_dclogsum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_dclogsum]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>base_dclogsum</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_num_persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_num_persons]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>base_num_persons</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_num_workers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_num_workers]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>base_num_workers</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_num_workers_students</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_num_workers_students]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>base_num_workers_students</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cem</remote-name>
            <remote-type>11</remote-type>
            <local-name>[cem]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>cem</remote-alias>
            <ordinal>12</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diff_dclogsum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diff_dclogsum]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>diff_dclogsum</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hasAV</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hasAV]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>hasAV</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ldm_cem</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ldm_cem]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>ldm_cem</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ldm_mult</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ldm_mult]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>ldm_mult</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ldm_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ldm_ratio]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>ldm_ratio</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>logsum_diff_minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[logsum_diff_minutes]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>logsum_diff_minutes</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mandatory</remote-name>
            <remote-type>11</remote-type>
            <local-name>[mandatory]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>mandatory</remote-alias>
            <ordinal>20</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scen_dclogsum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scen_dclogsum]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>scen_dclogsum</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scen_num_persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scen_num_persons]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>scen_num_persons</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scen_num_workers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scen_num_workers]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>scen_num_workers</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scen_num_workers_students</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scen_num_workers_students]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>scen_num_workers_students</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[walk_subzone]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>walk_subzone</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CS diff hours</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CS diff hours]</local-name>
            <parent-name>[consumer_surplus.csv]</parent-name>
            <remote-alias>CS diff hours</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Superd' datatype='integer' name='[SUPERD]' role='measure' type='quantitative' />
      <column caption='Taz1454' datatype='integer' name='[TAZ1454]' role='measure' type='quantitative' />
      <column caption='Auto Suff' datatype='real' name='[autoSuff]' role='measure' type='quantitative' />
      <column caption='autoSuff label' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;0_autos&quot;' value='Zero Autos' />
          <alias key='&quot;autos_ge_workers&quot;' value='Autos &gt;= Workers' />
          <alias key='&quot;autos_lt_workers&quot;' value='Autos &lt; Workers' />
        </aliases>
      </column>
      <column caption='Base Dclogsum' datatype='real' name='[base_dclogsum]' role='measure' type='quantitative' />
      <column caption='Base Num Persons' datatype='real' name='[base_num_persons]' role='measure' type='quantitative' />
      <column caption='Base Num Workers' datatype='real' name='[base_num_workers]' role='measure' type='quantitative' />
      <column caption='Base Num Workers Students' datatype='real' name='[base_num_workers_students]' role='measure' type='quantitative' />
      <column caption='Cliff Effect Mitigation (CEM)' datatype='boolean' name='[cem]' role='dimension' type='nominal' />
      <column caption='Diff Dclogsum' datatype='real' name='[diff_dclogsum]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Has Autonomous Vehicle' datatype='integer' name='[hasAV]' role='dimension' type='ordinal' />
      <column caption='incQ label' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;highInc&quot;' value='High Income' />
          <alias key='&quot;lowInc&quot;' value='Low Income' />
          <alias key='&quot;medInc&quot;' value='Medium Income' />
          <alias key='&quot;veryHighInc&quot;' value='Very High Income' />
        </aliases>
      </column>
      <column caption='Ldm Cem' datatype='real' name='[ldm_cem]' role='measure' type='quantitative' />
      <column caption='Ldm Mult' datatype='real' name='[ldm_mult]' role='measure' type='quantitative' />
      <column caption='Ldm Ratio' datatype='real' name='[ldm_ratio]' role='measure' type='quantitative' />
      <column caption='Logsum Diff Minutes' datatype='real' name='[logsum_diff_minutes]' role='measure' type='quantitative' />
      <column caption='Mandatory' datatype='boolean' name='[mandatory]' role='dimension' type='nominal'>
        <aliases>
          <alias key='false' value='False (e.g. Shopping)' />
          <alias key='true' value='True (e.g. Work)' />
        </aliases>
      </column>
      <column caption='Scen Dclogsum' datatype='real' name='[scen_dclogsum]' role='measure' type='quantitative' />
      <column caption='Scen Num Persons' datatype='real' name='[scen_num_persons]' role='measure' type='quantitative' />
      <column caption='Scen Num Workers' datatype='real' name='[scen_num_workers]' role='measure' type='quantitative' />
      <column caption='Scen Num Workers Students' datatype='real' name='[scen_num_workers_students]' role='measure' type='quantitative' />
      <column caption='Taz' datatype='integer' name='[taz]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Walk Subzone' datatype='integer' name='[walk_subzone]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Cannot walk to transit' />
          <alias key='1' value='Short walk to transit' />
          <alias key='2' value='Long walk to transit' />
        </aliases>
      </column>
      <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
      <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.192308' measure-ordering='alphabetic' measure-percentage='0.807692' show-aliased-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:autoSuff_label:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;0_autos&quot;</bucket>
            <bucket>&quot;autos_lt_workers&quot;</bucket>
            <bucket>&quot;autos_ge_workers&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:incQ_label:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;lowInc&quot;</bucket>
            <bucket>&quot;medInc&quot;</bucket>
            <bucket>&quot;highInc&quot;</bucket>
            <bucket>&quot;veryHighInc&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='CS Diff - All Tours'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Accessibility Benefits (household-based)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ and ConsumerSurplusdiff Joined' name='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)'>
            <column datatype='real' name='[CS diff hours]' role='measure' type='quantitative' />
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Superd' datatype='integer' name='[SUPERD]' role='measure' type='quantitative' />
            <column caption='autoSuff label' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0_autos&quot;' value='Zero Autos' />
                <alias key='&quot;autos_ge_workers&quot;' value='Autos &gt;= Workers' />
                <alias key='&quot;autos_lt_workers&quot;' value='Autos &lt; Workers' />
              </aliases>
            </column>
            <column caption='Cliff Effect Mitigation (CEM)' datatype='boolean' name='[cem]' role='dimension' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Has Autonomous Vehicle' datatype='integer' name='[hasAV]' role='dimension' type='ordinal' />
            <column caption='incQ label' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;highInc&quot;' value='High Income' />
                <alias key='&quot;lowInc&quot;' value='Low Income' />
                <alias key='&quot;medInc&quot;' value='Medium Income' />
                <alias key='&quot;veryHighInc&quot;' value='Very High Income' />
              </aliases>
            </column>
            <column caption='Mandatory' datatype='boolean' name='[mandatory]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='False (e.g. Shopping)' />
                <alias key='true' value='True (e.g. Work)' />
              </aliases>
            </column>
            <column-instance column='[SUPERD]' derivation='None' name='[none:SUPERD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[cem]' derivation='None' name='[none:cem:nk]' pivot='key' type='nominal' />
            <column-instance column='[hasAV]' derivation='None' name='[none:hasAV:ok]' pivot='key' type='ordinal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[mandatory]' derivation='None' name='[none:mandatory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:qk]' pivot='key' type='quantitative' />
            <column-instance column='[walk_subzone]' derivation='None' name='[none:walk_subzone:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CS diff hours]' derivation='Sum' name='[sum:CS diff hours:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Taz' datatype='integer' name='[taz]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Walk Subzone' datatype='integer' name='[walk_subzone]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Cannot walk to transit' />
                <alias key='1' value='Short walk to transit' />
                <alias key='2' value='Long walk to transit' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]'>
            <groupfilter function='level-members' level='[none:autoSuff_label:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]'>
            <groupfilter function='member' level='[none:cem:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]'>
            <groupfilter function='level-members' level='[none:hasAV:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]'>
            <groupfilter function='level-members' level='[none:incQ_label:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]'>
            <groupfilter function='level-members' level='[none:mandatory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]'>
            <groupfilter function='level-members' level='[none:walk_subzone:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:CS diff hours:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:taz:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:SUPERD:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:Number of Records:qk]' />
              <geometry column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Latitude (generated)]</rows>
        <cols>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Logsum Diffs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Logsum Diff Minutes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ and ConsumerSurplusdiff Joined' name='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)'>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Superd' datatype='integer' name='[SUPERD]' role='measure' type='quantitative' />
            <column caption='autoSuff label' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0_autos&quot;' value='Zero Autos' />
                <alias key='&quot;autos_ge_workers&quot;' value='Autos &gt;= Workers' />
                <alias key='&quot;autos_lt_workers&quot;' value='Autos &lt; Workers' />
              </aliases>
            </column>
            <column caption='Cliff Effect Mitigation (CEM)' datatype='boolean' name='[cem]' role='dimension' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Has Autonomous Vehicle' datatype='integer' name='[hasAV]' role='dimension' type='ordinal' />
            <column caption='incQ label' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;highInc&quot;' value='High Income' />
                <alias key='&quot;lowInc&quot;' value='Low Income' />
                <alias key='&quot;medInc&quot;' value='Medium Income' />
                <alias key='&quot;veryHighInc&quot;' value='Very High Income' />
              </aliases>
            </column>
            <column caption='Logsum Diff Minutes' datatype='real' name='[logsum_diff_minutes]' role='measure' type='quantitative' />
            <column caption='Mandatory' datatype='boolean' name='[mandatory]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='False (e.g. Shopping)' />
                <alias key='true' value='True (e.g. Work)' />
              </aliases>
            </column>
            <column-instance column='[SUPERD]' derivation='None' name='[none:SUPERD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[cem]' derivation='None' name='[none:cem:nk]' pivot='key' type='nominal' />
            <column-instance column='[hasAV]' derivation='None' name='[none:hasAV:ok]' pivot='key' type='ordinal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[mandatory]' derivation='None' name='[none:mandatory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:qk]' pivot='key' type='quantitative' />
            <column-instance column='[walk_subzone]' derivation='None' name='[none:walk_subzone:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[logsum_diff_minutes]' derivation='Sum' name='[sum:logsum_diff_minutes:qk]' pivot='key' type='quantitative' />
            <column caption='Taz' datatype='integer' name='[taz]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Walk Subzone' datatype='integer' name='[walk_subzone]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Cannot walk to transit' />
                <alias key='1' value='Short walk to transit' />
                <alias key='2' value='Long walk to transit' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]'>
            <groupfilter function='member' level='[none:autoSuff_label:nk]' member='&quot;autos_ge_workers&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]'>
            <groupfilter function='member' level='[none:cem:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]'>
            <groupfilter function='level-members' level='[none:hasAV:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]'>
            <groupfilter function='level-members' level='[none:incQ_label:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]'>
            <groupfilter function='member' level='[none:mandatory:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]'>
            <groupfilter function='level-members' level='[none:walk_subzone:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]</column>
            <column>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:logsum_diff_minutes:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:taz:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:SUPERD:qk]' />
              <lod column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:Number of Records:qk]' />
              <geometry column='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[clct:Geometry:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Latitude (generated)]</rows>
        <cols>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='CS Diff - All Tours'>
      <cards>
        <edge name='left'>
          <strip size='129'>
            <card size='31' type='pages' />
            <card size='83' type='filters' />
            <card size='166' type='marks' />
          </strip>
          <strip size='189'>
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]' show-all='false' size='45' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]' size='64' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]' size='83' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]' size='83' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]' size='64' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]' size='102' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:CS diff hours:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:CS diff hours:qk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:CS diff sum:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CF40427A-32CE-4607-B72B-EEB15AB61A91}' />
    </window>
    <window class='worksheet' name='Logsum Diffs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='83' type='filters' />
            <card size='166' type='marks' />
          </strip>
          <strip size='160'>
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]' show-all='false' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]' type='filter' />
            <card mode='radiolist' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:logsum_diff_minutes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:autoSuff_label:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:cem:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:hasAV:ok]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:incQ_label:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:mandatory:nk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[none:walk_subzone:ok]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:CS diff sum:qk]</field>
            <field>[federated.13xmcuo07qhh3p12rnnsu199eot5 (copy)].[sum:logsum_diff_minutes:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5A325415-34E6-44E5-B2CE-4A43F0651A8D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CS Diff - All Tours' width='192'>
      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
      YG9Iwf8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Logsum Diffs' width='192'>
      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
      KjzgAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
