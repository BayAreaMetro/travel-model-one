<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0606.1812                                -->
<workbook source-build='9.3.3 (9300.16.0606.1812)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='long-obs-est-vmt-per-capita' inline='true' name='textscan.1vueseq0zfohkx112y1iq18qdc24' version='9.3'>
      <connection class='textscan' directory='C:/Users/dory/Box Sync/Share Data/observed-estimated-vmt' filename='long-obs-est-vmt-per-worker.csv' password='' server=''>
        <relation name='long-obs-est-vmt-per-worker.csv' table='[long-obs-est-vmt-per-worker#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='string' name='detail' ordinal='1' />
            <column datatype='integer' name='taz' ordinal='2' />
            <column datatype='integer' name='observed_persons' ordinal='3' />
            <column datatype='real' name='estimated_persons' ordinal='4' />
            <column datatype='real' name='mean_vmt' ordinal='5' />
            <column datatype='real' name='sd_vmt' ordinal='6' />
            <column datatype='real' name='sum_vmt' ordinal='7' />
            <column datatype='real' name='vmt_per_worker' ordinal='8' />
            <column datatype='real' name='latitude' ordinal='9' />
            <column datatype='real' name='longitude' ordinal='10' />
            <column datatype='string' name='super_district' ordinal='11' />
            <column datatype='string' name='county' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>detail</remote-name>
            <remote-type>129</remote-type>
            <local-name>[detail]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>detail</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed_persons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[observed_persons]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>observed_persons</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>estimated_persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[estimated_persons]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>estimated_persons</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>mean_vmt</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>sd_vmt</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sum_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>sum_vmt</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_per_worker</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_per_worker]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>vmt_per_worker</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>super_district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[super_district]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>super_district</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;' value='One Std Dev Above Mean' />
          <alias key='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;' value='One Std Dev Below Mean' />
        </aliases>
      </column>
      <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
      </column>
      <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
      </column>
      <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
      </column>
      <column caption='Upper Bound VMT per Worker' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
      </column>
      <column caption='Lower Bound VMT per Worker' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
      </column>
      <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Vmt Per Worker Category' datatype='integer' name='[Vmt Per Capita (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[vmt_per_worker]' peg='0' size='1' />
      </column>
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
          <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
          <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
          <alias key='&quot;BATS&quot;' value='Observed (2000)' />
          <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
        </aliases>
      </column>
      <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Mean Vmt' datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
      <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
      <column caption='Sd Vmt' datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
      <column caption='Sum Vmt' datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
      <column caption='Super District' datatype='string' name='[super_district]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
      <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.439471' measure-ordering='alphabetic' measure-percentage='0.560529' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:detail:nk]' type='palette'>
            <map to='#81a88d'>
              <bucket>&quot;2005_05_003&quot;</bucket>
            </map>
            <map to='#81a88d'>
              <bucket>&quot;CHTS&quot;</bucket>
            </map>
            <map to='#972d15'>
              <bucket>&quot;2010_05_003&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;2000_05_002&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;BATS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:detail:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;2005_05_003&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BATS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;2000_05_002&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CHTS&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;2010_05_003&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='county averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Worker by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='county averages.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Worker by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' />
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.5082871913909912' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='cumulative distributions'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Cumulative Share of Persons by VMT per Capita Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Vmt Per Worker Category' datatype='integer' name='[Vmt Per Capita (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[vmt_per_worker]' peg='0' size='1' />
            </column>
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[vmt_per_worker]' derivation='None' name='[none:vmt_per_worker:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[pcto:cum:sum:estimated_persons:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Vmt Per Capita (bin)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='8' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='9' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='10' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='11' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='12' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='14' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='level-members' level='[none:detail:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>40.0</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='196' />
            <format attr='title' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='Share of Persons' />
            <format attr='subtitle' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' value='p0.0%' />
            <format attr='cell-w' value='18' />
            <format attr='cell-h' value='18' />
            <format attr='cell' value='18' />
            <format attr='cell-q' value='90' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='-90' />
            <format attr='display' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <shape column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3870'>&#10;Cumulative Share of Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3870'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3870'>&#10;Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3870'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>VMT per Worker by Travel Analysis Zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
            </column>
            <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
            </column>
            <column caption='Upper Bound VMT per Worker' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
            </column>
            <column caption='Lower Bound VMT per Worker' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
            </column>
            <column-instance column='[vmt_per_worker]' derivation='Avg' name='[avg:vmt_per_worker:qk]' pivot='key' type='quantitative' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Mean Vmt' datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='None' name='[none:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vmt_per_worker]' derivation='None' name='[none:vmt_per_worker:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column caption='Sd Vmt' datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[sum:estimated_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Sum Vmt' datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]' included-values='in-range-or-null'>
            <min>30</min>
            <max>99</max>
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>82.583562721195406</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]' field-type='quantitative' max='-13385662.761443404' min='-13868369.017206812' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]' field-type='quantitative' max='4717637.088082823' min='4371292.6295899199' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='23.0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' palette='tableau-orange-blue' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' />
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' />
              <size column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='900'>TAZ:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='900'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean less One Std Dev:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean VMT Per Worker:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean plus One Std Dev:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Observations:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Workers (est.):&#9;</run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='superdistrict averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Worker by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>Superdistrict</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[super_district]' derivation='None' name='[none:super_district:nk]' pivot='key' type='nominal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Super District' datatype='string' name='[super_district]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]' value='34' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]' value='344' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk])</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='taz averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Worker by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>travel analysis zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]'>
            <groupfilter function='level-members' level='[none:taz:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='88' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='Travel Analysis Zone'>
              <formatted-text>
                <run>Travel Analysis Zone</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok])</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='taz ranges'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Observed Average with Plus/Minus one Standard Deviation Vehicle Miles Traveled per Worker by</run>
            <run fontcolor='#000000' fontsize='20' italic='true'> County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>travel analysis zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
            </column>
            <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
            </column>
            <column caption='Upper Bound VMT per Worker' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
            </column>
            <column caption='Lower Bound VMT per Worker' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
            </column>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column caption='Mean Vmt' datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column caption='Sd Vmt' datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Sum Vmt' datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' />
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]'>
            <groupfilter function='level-members' level='[none:taz:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' direction='DESC' using='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]'>
            <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' value='125' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='64' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='88' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' value='136' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='Travel Analysis Zone' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok])</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='county averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='county averages.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='superdistrict averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='195'>
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='taz averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='195'>
            <card mode='typeinlist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' type='filter' />
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='74'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='taz ranges'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
          <strip size='195'>
            <card mode='typeinlist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' type='filter' />
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='113'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='cumulative distributions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='shape' />
          </strip>
          <strip size='200'>
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='83'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' type='size' />
          </strip>
          <strip size='212'>
            <card mode='radiolist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='county averages' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='county averages.chart' width='192'>
      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
      ayIBhLz2/wGc29OHIkjQ9gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='superdistrict averages' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='taz averages' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='taz ranges' width='192'>
      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
      dCZLn+vt6/4fws6PfNg9kVoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='cumulative distributions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      AhDcav4/OHxmis/uv8cAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
