<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0606.1812                                -->
<workbook source-build='9.3.3 (9300.16.0606.1812)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.3'>
      <aliases enabled='yes' />
      <column caption='Threshold 2010' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='19.805'>
        <calculation class='tableau' formula='19.805' />
      </column>
    </datasource>
    <datasource caption='long-obs-est-vmt-per-capita' inline='true' name='textscan.1vueseq0zfohkx112y1iq18qdc24' version='9.3'>
      <connection class='textscan' directory='C:/Users/dory/Box Sync/Share Data/observed-estimated-vmt' filename='long-obs-est-vmt-per-worker.csv' password='' server=''>
        <relation name='long-obs-est-vmt-per-worker.csv' table='[long-obs-est-vmt-per-worker#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='string' name='detail' ordinal='1' />
            <column datatype='integer' name='taz' ordinal='2' />
            <column datatype='integer' name='observed_persons' ordinal='3' />
            <column datatype='real' name='estimated_persons' ordinal='4' />
            <column datatype='real' name='mean_vmt' ordinal='5' />
            <column datatype='real' name='sd_vmt' ordinal='6' />
            <column datatype='real' name='sum_vmt' ordinal='7' />
            <column datatype='real' name='vmt_per_worker' ordinal='8' />
            <column datatype='real' name='latitude' ordinal='9' />
            <column datatype='real' name='longitude' ordinal='10' />
            <column datatype='string' name='super_district' ordinal='11' />
            <column datatype='string' name='county' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>detail</remote-name>
            <remote-type>129</remote-type>
            <local-name>[detail]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>detail</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed_persons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[observed_persons]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>observed_persons</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>estimated_persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[estimated_persons]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>estimated_persons</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>mean_vmt</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>sd_vmt</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sum_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>sum_vmt</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_per_worker</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_per_worker]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>vmt_per_worker</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>super_district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[super_district]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>super_district</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;' value='One Std Dev Above Mean' />
          <alias key='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;' value='One Std Dev Below Mean' />
        </aliases>
      </column>
      <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
      </column>
      <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
      </column>
      <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
      </column>
      <column caption='Upper Bound VMT per Worker' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
      </column>
      <column caption='Lower Bound VMT per Worker' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
      </column>
      <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Vmt Per Worker Category' datatype='integer' name='[Vmt Per Capita (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[vmt_per_worker]' peg='0' size='1' />
      </column>
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
          <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
          <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
          <alias key='&quot;BATS&quot;' value='Observed (2000)' />
          <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
        </aliases>
      </column>
      <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Mean Vmt' datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
      <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
      <column caption='Sd Vmt' datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
      <column caption='Sum Vmt' datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
      <column caption='Super District' datatype='string' name='[super_district]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
      <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.339848' measure-ordering='alphabetic' measure-percentage='0.46797' parameter-percentage='0.192182' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:detail:nk]' type='palette'>
            <map to='#81a88d'>
              <bucket>&quot;2005_05_003&quot;</bucket>
            </map>
            <map to='#81a88d'>
              <bucket>&quot;CHTS&quot;</bucket>
            </map>
            <map to='#972d15'>
              <bucket>&quot;2010_05_003&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;2000_05_002&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;BATS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:detail:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;2005_05_003&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BATS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;2000_05_002&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CHTS&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;2010_05_003&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='county averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Worker by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='county averages.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Worker by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' />
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.5082871913909912' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='cumulative distributions'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Cumulative Share of Persons by VMT per Capita Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Vmt Per Worker Category' datatype='integer' name='[Vmt Per Capita (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[vmt_per_worker]' peg='0' size='1' />
            </column>
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[vmt_per_worker]' derivation='None' name='[none:vmt_per_worker:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[pcto:cum:sum:estimated_persons:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Vmt Per Capita (bin)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='8' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='9' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='10' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='11' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='12' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='14' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='level-members' level='[none:detail:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>40.0</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='196' />
            <format attr='title' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='Share of Persons' />
            <format attr='subtitle' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' value='p0.0%' />
            <format attr='cell-w' value='18' />
            <format attr='cell-h' value='18' />
            <format attr='cell' value='18' />
            <format attr='cell-q' value='90' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='-90' />
            <format attr='display' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <shape column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3870'>&#10;Cumulative Share of Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3870'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3870'>&#10;Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3870'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>VMT per Worker by Travel Analysis Zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
            </column>
            <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
            </column>
            <column caption='Upper Bound VMT per Worker' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
            </column>
            <column caption='Lower Bound VMT per Worker' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
            </column>
            <column-instance column='[vmt_per_worker]' derivation='Avg' name='[avg:vmt_per_worker:qk]' pivot='key' type='quantitative' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Mean Vmt' datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='None' name='[none:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vmt_per_worker]' derivation='None' name='[none:vmt_per_worker:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column caption='Sd Vmt' datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[sum:estimated_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Sum Vmt' datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]' included-values='in-range-or-null'>
            <min>30</min>
            <max>99</max>
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>82.583562721195406</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]' field-type='quantitative' max='-13385662.761443404' min='-13868369.017206812' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]' field-type='quantitative' max='4717637.088082823' min='4371292.6295899199' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='23.0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' palette='tableau-orange-blue' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' />
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' />
              <size column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='900'>TAZ:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='900'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean less One Std Dev:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean VMT Per Worker:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean plus One Std Dev:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Observations:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Workers (est.):&#9;</run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='superdistrict averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Worker by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>Superdistrict</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[super_district]' derivation='None' name='[none:super_district:nk]' pivot='key' type='nominal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Super District' datatype='string' name='[super_district]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]' value='34' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]' value='344' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk])</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='taz averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Worker by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>travel analysis zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]'>
            <groupfilter function='level-members' level='[none:taz:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='88' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='Travel Analysis Zone'>
              <formatted-text>
                <run>Travel Analysis Zone</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok])</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='taz ranges'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Observed Average with Plus/Minus one Standard Deviation Vehicle Miles Traveled per Worker by</run>
            <run fontcolor='#000000' fontsize='20' italic='true'> County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>travel analysis zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
            </column>
            <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
            </column>
            <column caption='Upper Bound VMT per Worker' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
            </column>
            <column caption='Lower Bound VMT per Worker' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
            </column>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column caption='Mean Vmt' datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column caption='Sd Vmt' datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Sum Vmt' datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' />
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]'>
            <groupfilter function='level-members' level='[none:taz:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' direction='DESC' using='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]'>
            <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' value='125' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='64' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='88' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' value='136' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='Travel Analysis Zone' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok])</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='threshold map.2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Simulated VMT per Worker by Travel Analysis Zone Using Threshold of 15 percent below 2010 Mean (</run>
            <run fontcolor='#000000' fontsize='20' italic='true'>&lt;[Parameters].[Parameter 1]&gt;</run>
            <run bold='false' fontsize='20' italic='true'>)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold 2010' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='19.805'>
              <calculation class='tableau' formula='19.805' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
            </column>
            <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
            </column>
            <column caption='Upper Bound VMT per Worker' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
            </column>
            <column caption='Lower Bound VMT per Worker' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
            </column>
            <column-instance column='[vmt_per_worker]' derivation='Avg' name='[avg:vmt_per_worker:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Mean Vmt' datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='None' name='[none:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vmt_per_worker]' derivation='None' name='[none:vmt_per_worker:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column caption='Sd Vmt' datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[sum:estimated_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Sum Vmt' datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]' included-values='in-range-or-null'>
            <min>30</min>
            <max>99</max>
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>82.583562721195406</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]' field-type='quantitative' max='-13324949.229901178' min='-13885694.301665744' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]' field-type='quantitative' max='4721551.0488901818' min='4400137.8490497842' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[Parameters].[Parameter 1]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[Parameters].[Parameter 1]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='19.805' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' num-steps='2' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' />
              <size column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' />
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' />
              <lod column='[Parameters].[Parameter 1]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='900'>TAZ:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='900'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean VMT Per Worker:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Workers (est.):&#9;</run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='county averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='county averages.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='superdistrict averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='172'>
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='taz averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='167'>
            <card mode='typeinlist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' type='filter' />
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='74'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='taz ranges'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
          <strip size='169'>
            <card mode='typeinlist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' type='filter' />
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='113'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='cumulative distributions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='200'>
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='filter' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='shape' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='83'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='212'>
            <card mode='radiolist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='threshold map.2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='county averages' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='county averages.chart' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='superdistrict averages' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9WXBcZ5qm9+S+75nYAWInARLctKu0SyWVSt2tHvfMeNzucYRjbId94Qtf
      TYQveiraHsfY3REeO9o9juiIdm9V3dW1qFZtFHcCBAgQO5AAckFmAolMIPd9z+MLiCAhiSpK
      RYBK4jw3DOKc/P/3HOSHfznn/T6JIAgCIiJHFOmjFiAi8igRA0DkSCMGgMiRRgwAkSONGAAi
      RxoxAESONGIAiBxpxAAQ+VoUMklCO/Hfqo16uYBvI/RIdch/q95FjhQf/uhvCeYFcgUJbz99
      jGvuIv/mX771tdurZkL89Y8v873/6d88Mh1iAIg8IBWuz7r59//+T/jLP/tjAok2fK4F/uR7
      4/zOO6/zwaUJ3v1nv8+Nj35FtQ4vv/g0/98Pf8mJrmZUbaco+m9z7tnnmJxdwWhtxVoLs5Wt
      AopHqkOcAok8IDL0ijqxdJZoVsCsk9PWfZwWA6BrodOiZNW5xNzKOiarjXq1SufgWf67/+G/
      J+6doqiwkQiskilUMRr1rK6u8/rrLz5yHbLvfe9733u4N0rk8UTCqeFBrl65ygtvvkuHw0g+
      ncDWc5rj7QZCsRxPP/8yZwdayZTg9OmTaLQGOtta0cjqDIw8yfknzpNLRujoGeTZJ0dYWAsw
      PNBHV0frI9MhEV+GEznKiFMgkSONGAAiD4kaly5doZTPsLLmpiYIFHMp3OsbCEAiGiYYjgIQ
      9HtJZPK4ZifYiOW+ck/5+CbjM6tEw0E2tnYA2AltsBNPARDb2SJTKFPMpVh1eakLUMvtcH1y
      mWoxS3A7ilCv4l5dEdcAIg+HZGCZuWAJZTWNf22OWV+Wax/8hHwiTLQk5b2f/pyN1VkEKXwy
      vsj49Wu8/tI53r+2wJmh3q/U142Pf07T8SfZdC/zya9+jLm5jR++9zGLk6P09ffwH/7XP6H9
      5LdIbnnwLk3hjNRQZYMIlm4++eFfsLBVZrjDhNvnE0cAkYdDKBSiuaWF4TPnySaitHe0kqsI
      nB3qx+ucR2ntoLvVwszsIv1DIygLWQS7g1w4/JX72gplaW428uQTZ8gUJZCL0dJ9nCa9QE7R
      xLNnTwAwcu5JUrEYHW0trPoiDHY7eP211wHQ29qQlDJiAIg8HMwmE6lUirGPfszFuSCVbIK+
      Nhu/vj7Ns698G00uyFIwwztvv8HSxCWU7d1oclnkBsPX6EtBOl3g//k//jekOgsSnY2YZ4ZI
      1YKuGGTJvcHk5CRXfvF9brpjFNMx8jUJOlmVGzdu4ludZ352mvXtjLgLJPKQqBX4/j+9z3/5
      X/zBA39k6eYnlJtGONfX/JW62lmfZ3YL3vzW6Qf7QL3E1evTvPzyc587JAaAyJFGnAKJHGnE
      ABA50ogBIHKkEQNA5EgjBoDIkWbPD5DLffVH0iIijY64DSpypPncFGh1fpJbcyvkIz5+8PML
      X6mxcjLIX//o/Ycm7nNUc9y4fpPp6Vkq9c8fHrs59rmfuWbHiOS/XndjY3fbm5qYoPZpH8mg
      i2Vf5Os1esSI7WztvbAW2vSRzBY+PSLg97jIFsqHoqNaLrAdiVPMpVhaWsLp8gJfYIn8+PIV
      chU5J/7VmwSC2/hdi0zNu3jpjbdYmR4llc5hsdnI15W8+swpLnx8gWMnn8SmKDJ+8ya+YHnf
      Zxwm7cO7ilqeeF6CRR4jmChSibgpS9SYlBLWfBskcxmS2wFyMgv5qJ+yRE0pFUVTFVhdXqSu
      0CGnxkDfMTy+bfp6O1hdXqBYV9LTpMeznUapUNLfaWdpzYdvI8TzQL2cZmVuCnXrINFYjEqT
      mlX3NpVcjIEOB651P5aWboqJIOVyBVvbMbLpHHadQF3fhk3/VW1/jwsCpSoEV6aoVwbZiAtk
      Fq7y9tvfIeabJ1yy4rk5ymuvvXrgSpLxba6Pr/LPf/8thgZkXBlfZGigd/8IUElvEYxWqMa3
      CKZ3I7NeF4hsrPLB5Qne//Ajms1KXJEyExc/4PJH7zHn2uQffvBDfvBXf82pJ8597jMPm0ho
      g7JUScQ9xe2VEJseLx7XIieeegFpKcOP3r+OhZ29Y2UgHXSysB7D5/ESDwdYmJulqjEBIJPK
      mJ6ZIR3ZpK6xE/R7uHr1BidPn8GgUQLgmr2Fufck85N3r6e1o5v0hpu8VAkSGdOTE6y4vZwa
      6WN+xsW628mC04NJd1S//AAS2lqbCSeKCNkIFnsTUqkEAEGuxb90ixKqQ1Fib2lBsds1y7cn
      OX7uCeAzU6CF6SkGTp7i5HA/C6sBMoko1z7+NWWpkkq5DHIlWpUcrVaHXCqls3cAjUrOd77z
      Jr297Vy5MYlCwv7PPGwkUKtVUZma0clrdPX3o0KCQiEHiZI3njvJSqi0d8yoVoPKiEpSpre/
      nyefPM/l8SUGW41QSTM170al3P2iSyQSkEjoaLYxO79AoVIDwBMp884br2CQl1BIBYoVgXDQ
      T7IiY3P+FgWJArlcjgQJSCUgQF+LkURdjVzy8G9BI/GLH/4NOkcbBnsn/uXbSBQaxq9eJpLI
      0tHbS71S+M2NPASCfh87OyFyxSqBWI5Wg4Lxq5eP3iI46FtjK1XlqTPDB9hLnZnRq9iOP0WX
      XX+A/Yj8thy5ABARuZeGyQtUrVYftQSRxxAxAESONOKrEPelSiyWetQiRA6YxgqAUpS/+f57
      OFfdfMFzsAdmbm7uAc4qMDExD8DFixf3/XuHDY+TTOn+SrKxIFduTDC7sMz2hodopvSAfT8u
      CCzPzzA6epNyKceN0ZvMLCzvHqqX+dWP3uOwXsBZXV5g9Pp18sU8N2+Oc3tuEWigKdAdJIBG
      q+XqR7+mojRh1UiQy0CrNzK1GkJRSTF8vJtkSUc1s4lBp0HdNIhz8iJ2k4GOU88yMzND3+Aw
      OnmVxRU3WztxlJUsTce62YllUddzGOwW6l+whemdu4GvYKSUjmKTFUFnYty5jlAu0N2sZrO4
      e+ztN19jYWaJJ159E4MMnLcuUquqmJlZJLGzzbkXX2J6/DavvvKtQ7+Hh4eE4dPnuHnxAzLl
      Gts7EbS5PIwMg1SJSaukdkhKuro68Xq8BN3LGNqPs+2aBk412AgA2Fva6e5so16T8vKrL+Dz
      +1HprThMGsy2JqxWKydPn6aYjlEo1zhz+jhbG1toDGYGupopo6a5uQm9RkE6FiaaKpDNZqjX
      pfQPnaReypLMlTg11I/0zv6YIFDn0+cEQGtnD0rZ7sHEdpCm7hMYFXXy1f3HLCY10USOWm33
      16w1mGhuauFbz53l4x//iM6hM4d9+w6daNBLQe2gGnZzbOgscpmURDxG/ZD3HpUaA93NRhL5
      CpVyBYBEPNY4eYH2FsFSBTaLEQCLzYbDbCBbLGFztKBUqbGa9FgsFkBKW5MFXzDBufOnUUgl
      2Kw2lFoDKkkZpc6CRiUnk83jaHLQ5LBjsdmQAp0tdjbDaRwtNmwWMy12E85VD22dPZgNetR6
      E1qVDIvFQnv/EOmgB529jXa7Zd8xe1sn4fVVtsIR7E3NGEx2ZLUMensXG8FNnn1ihMf9OdnC
      4gJ2qxlLazfZaAiT1U4pk0Sl0xJLJJFIlViMB/2spM7ywjwVmY6Rc+dJBd00tXeTjUca5zlA
      sVh81BIeGvGdEPm6go4W+6OWcuQRA0DkSNMwASAichA03CJYRORh0lgBUM2x6t4ESqyu+n6r
      pr7IPPNZyskgk8u7/WwFvMzNTBPL3H8qFg/52EmXvoKKPGNjs1/h/MbjriGmyurSEl5/cO/Y
      9laAcCRxKDoe2BDzjaaWZ9WzyfF+I2urfvSaOlvbcbo7mqlr7GRjW9TrAiY11LStFFLbSOsV
      oqki50/1cGV0imN9g6RiO7i8fp5/7nlK2QQrHh9GWwe17A6lShlTcy9Cdpv49gZxSQsAN8dv
      8d3f/+eoFTJWl+cp1pV02tRsxAoolCqGB3tJhPwUm6w0GVVs+jxEU3mGj/ewvOpBb7QhrWUp
      lSpoTM1oJXnCiSg7sRwrizPE8tBsVJItw+mRk0gfi+2hu4YYre5JNuJV3jjZDkAssEwga+BE
      5+F8BR/IENMIREIbLC2tUgUUcjn5qJ/NjMDc7dsEAgH86148wRDepVv4NqPI5TK2XNOEYmkS
      dR1p3wJN/SNYjToAZHIlEqTMTE+w7PIwPDLE0swsc0urnOjv3uv3O299m8vv/5Q5d3DPRJMI
      +ZGZ2thcd31GZZXR0XEq6W024iWkEpiemca97KJneIS1pRkmphc5fWoQmQAra+s8N9LBSjBD
      q6bArHvn0O7nwXLXEGPU6LDo6vzsVx8CsOkLUCykuD5261CUPJAhphFwtHZy8uRx5MDk5BRa
      jRpBpkFVDmJsGWCg1UgoKycWWKFj8CSTU1Oo1SoEARQKBc1tbawtzJHO705VPIuTpKpy5DI5
      SCRIkCCRgEJax+UPfnqDBNbWXLR3dSLk45830dyDz72KbyOC1WpEbWpFllonlKqikMvg07aR
      SDCoZSwtr4MCZHIFUpURWTGO0xehzWE8xDt6sNwxxITDEaRSKXL5rhGlZeA4pVwWlepwHGGP
      tSGmnM9wbXSSl19/DUXDhbTIo+SxCAARka9LwyyCRT+AyEEgBoDIkUacMT8giVjscx6EailH
      Kns4WQ1EDobGCoBSlPcv7m6brTmdHOaYMD1xiwpQinr5/nsfcf3ih7jda8y7Q1+rvaNijLlj
      RMlk0szMzjE5swBArZxjYmISj2/zEFTcNebkc/t1NMwU6LO4fT5SkS36n36R6dExNEoBqSBg
      MOm57QzSapBj7OrHv7KMw6Bg4NyzLM4vIRfKnDreyfs3ljne3YHOoKVUgWeeOE3Q72XVucTw
      E09y6fJtDEqBF19+golpD/FY8jMKJMikEkBg9OplEOoMnnmS8GaAcDSJoprF2t5Hf4cdjy9A
      PFsjF9ug+1gryaKOteUZWlvsTM86UUprHO/r4JYrjrSa4913vvMobumBcMeIgspIs0XL0vpu
      Skn3/BQVhZ36oezB3DXmlOT7dTTWCPAZzp4/xbVfvkfr4En8/iAmRyt6hZQTZ56mySSjo3sI
      m9XM8WMtbG34MTR102pUkMjXGDh5nnJ6B4lMQVvb7tPedZ8XmVAlkS1itjXRbNASCm3Q1n+S
      Jpt5r9+W9i5efP0tWkwqoITfH8ba3EYxvkU8WyGbzXDu/DkCa8t4vH4KgoxMOo5ErmT49DCF
      TJ7mpmaMsjJqawdddi2RTAl7czt69eOVSe6OEWUrkqSls5dSLkkiHkMqk9Da2UvAu3YoOu4Y
      c4zy2j4dDWeIiezskC2WcFgtOFq7yOYLjAwNYNarKZUFHK3NqDV6DDoVepMNlQwsFguG5m7I
      hhB0dvra7chUOoYGe4hEYpjMVvQ6DaVCHpXOgKO5FZ1ag81ioL3/BDs+Fyqdgda2FqSAVKHG
      YtShUKqpVCR0d9go1SS0tTrI5Ys4HA5q5SJqg5WOViuFUg2HvQm71YLNZgXkNNv01DR2lJUE
      JbmJ48eakal0mPTqTw09jwN3jSjtdg1rLh8t7V0UkjE6h8+wvb5Ka2cP5gM3xNw15tSqZbzr
      G3s6GuY5gOgHEDkIGnoKJCLy29IwI4CIyEEgjgAiR5qGC4B1l5PZmRnSn6kscqeai295kmDy
      y9Oy31v55X4EXbP4Pi0tk4lusezZgHyEsdnPvvr85cyOjfE1C9Q8Fty/QgxUClmiycyh6Lif
      IaahAqAYD+DeKXPmzEmuXb7MdjDA1OQk2VKVWCzK6vIy6VScYqWOc3GOheU14iEfc4tOlte8
      FNIxpmfm8Ae3AUhEQ8zcniKSyrMwe5vpqUmypRprzgVWnCvkSrs7TzPzTtbdTqiWiKYyBLwu
      JqdmqFZz3Lp1m6npaZYXZtjYThDe9DEzO0exWmNhdpoVp4tyKcvs3Bzu9cN46PNN4q4hxu93
      44lUuHn96t6xyxd/we2v+Afl65KMb3N9dBK1zsTQwDFCod2gbKgAyKcSGCx2JFIlQq2CUiGn
      no8yvRwg6FnCFYwj+/T9/F3TyvQ+08qV62OMnD2DTr37/E+pUCKVlpm4tYA3sEVfs4bFxUVW
      g1m6O1o/7bWO379ObMNH4tM0iHK5jKh/kcBOinCiTDocpufUaZZnp7gxOoqskmb8ykWyiiZa
      HVYkMvmeKeZocf8KMSuTVylJDexEo4ei5LEwxFi7TpAKLDB7+xZt3YPcmpxEq9UgCAL2jn50
      QpqaVEk2FmDa6f+caaXNYWZubpFSdXfdP3nrFnK1FrlEYLc4jASUOurZKMHt3SeF6a01us++
      yh+8+zq3FzwIpQKTU1No1Gp29w8kyORypBIZEurYrFZQmxg5PUw0sEYkmSbkWbzHFHO0uF+F
      mK7zr/C7rz2Dw344uZEea0OMiMjXpaFGABGRh03DVIqv13+bhOgiIl9Mw0yBxFchRA6CozEF
      qpaIpbIPeHKdWOyrJWuKxWJfXZPIN4J9ASDUSvzln/9H/v7v/p6N6H2+MPUcP/3ZR/dtUKjm
      +U//9//J3//d9wknv9gt9cufvkflawqeuPYBo5PL+34W33QRiOVxOp1fXDmmEGNi3v2APVS4
      NbG7XfmrX/yU5eUlPrl8A6fTSXp7HW84hWtubt/DrYlbD78g+OPCzqaby6O3KeXSOJ1OPvrk
      CgClTJSbE7dYWH7Q38tvw11DTKUOkcAaF2/OAJ8xxOx4FsjrOvlv//UfUEpv86d/+v8ikcB3
      X3+Bv//lVZSVNO+88yYXr12hyy7nB7+8yBtvfZdybJPZZT//8x//W8LOGST2Af7oD3+HXCzI
      n/7ZPyIB3nr9RX724VXeev0VPrl4EUv3ILWolxs3b/Nf/Y//lk6r5oEuJFWUU88H2HJmWYjK
      qOYStGmLxNQ1yrF1TIoa64kKhWyWVpOSskzNMbueRHSbn//81/zOu+8grRT2KsPoajmMnd1E
      I0n00jIaq43qPZNCCSCVyVj3rSOkFPgqTdQ3F6jZm3FPjTJ09hmEapmV5UXCiQKFVIS3XzzL
      RWeKpHeSrr7jRGIZErEd/rN/+a/QHLG8LU0dnUzO+VDpjLQaQxSlgwCszc/Re+41Fm9eguH+
      A1Zx1xCTzheYXttCLtktWrLvt6E320hGQhRyabYCfmSWLrrMUoKRNI72HvpbDWjNzVhbuznW
      YqFz8Cyvnu3GHQgRC3pJlcFotRELhyhkUwQDPrRN/TRpKhRlJnqb9bh38rQ5bJw708/SwirF
      fJJg6MGmEJmwi0xFTjYRI1mq09x+DLVCgtlkpr19N+Ve0B/kxJkz1CsFNrfjnDl9BqtRg8Xe
      jE2vpgr7KsNQldAzNIxQKRDLFBgZHtyr7i5VqBkaPslrLz0HgNlspq29HbPJRnt7C2dGTrGy
      6kYiV3Ji+CSFdAypVLq3YNcYHTx1foRKqchTz71w5L78n2Vh2c+JgTYS8RgKlYJy5fBMrXcM
      MbVEEEeTg9B2lPhnDTFKnYUOi4IbEzP0nHwSYy2O1D7A82cHUWgMdLY20dwzhLEapaa20tTU
      TFdHK8l4jMGTpxkY6MdottOsqzM6ucDxc8+gzIfRdZziZJeFzZ0kTz39FIPdzXg2kzSZlTR3
      DTDQP4BR9+UZwqrVKrFIgpHz5xnoaiJVEHA4HOjVCjqPdbMVCtHaZGdo5CSeFSdtXb0M9Xfg
      XHEjU+vR6QzYTHpMFgtyiWSvMkyzw47JZkMGdLc14d+KYW9yYLPuOsBsNtuehs7ubsJbIY6f
      OEZ4J0Uhm8He1ILDrCMcDtM7dBqrTsF2pkizzY7JqMWokbEVK5ANu1E4ejCqG9aF+rXY2ghQ
      KJawNbeCVEKzzcrmupdjQ6fZXFugs3cIo/5BRv/fjjuGGGtLN92dreh1WnLJhLgLdNDUK0Xm
      Fp3IlRpODp94TJLePj6IASBypGmYABAROQiO9qpM5MjTcAHg964xOz1NuvD1dxBuPoAhJh/x
      MevarWYyNTUFgHtxmi8qAJPPpKnUYWlp6Wtrely51xATWHeT/dTIVK+VWV1xki8dzk7QvTq2
      AuvE07tPchpqS6KY2MQVyvPG8+cQEFiamwG1gU6LGs92GqVCyUBXE0urHtq6ekmEfZRRM9zt
      4NrELN19gyRjEbz+IM89D/lUDNe6H0tLN/nYBpVylebeYfKRANEtLzn97p718q2rNPWd4taN
      T3ip6xxB1zxVqYZmo4LFNR/pyBbHnngFrVyOz7NGoVRGpbdhVgsEgjv09vezEfBRqEh48uzJ
      R3wXD5O7hph0tImKrhPntSu89dab5LNZ2ru6ufjJBX73nbcPTYdKeY5FXxJZZZ3XX3+tsUaA
      fDKG3uIAiYSYd46MoolCyIUnsEFdYyfo93DlyjWGT5/FKEQJZhRoCiFW/VsUFFY2lmfpHzmL
      UacGQK5QgkTG9OQELo+PkaFOZmYXWXR6Gezt2uu3pe8E7tFfobR0AHfNNpFNF20nnqLFYqCj
      s5211TX8Syu0DZ3CtTLP9RujKBR1Vj1ByMcxNbV+4XU9vtw1xHR2tpMK+4mldi2QepOVLfcC
      GnPToepQyyTEQy7Sxd2Rp6ECwNp1gvTGInMztykqLcQ31ojkBAwqya6ZRSLhWHsz0zMzxIty
      ivENfJEcDqMKuUJBW1sTC3Nze8Pu6swtChIFcrl87/MSZMgosb5xT85PiQJzSzfHj9mpF6L7
      zDYKhQKzxci613/nZO4UjWm2W6nUFHS3GRibX0dWPXqJdO8YYqp1OXqNgo6OLsavXsYXWCcv
      qKiXDscxfUdHIhrF3taNpF4TDTEiIg01AoiIPGwaZhEsFsgQOQjEABA50jz2U6BYLEYplyZb
      +AoOhHqFWCJ9cKJEvjE0VgCUovzN999j7OpFNiK/OaPYstPJxK0JYoEV3KHUg/dTSTExvQLA
      2LXLLMzPEUne3zO95bzFry6N88Gvfk1BtC7v434VYqiX+dWP3uOwnOh3dCTiMWZm55hdcAIN
      NAW6g6OlnedfGOSDTxap9JpZWvbw/FN9XFuIIq3msKilPP3iC4zenKOUv9faWOP65csIQo2z
      33odTT3DitvHTjxLLRejs/sYkWQVaTmO1WbkztaYSi5haydO73EV7tVlllZ9PHeqnVu+AkIp
      ze++/eZeD/W6QK2QZsG7224lF6WrzcHKZh5pvciLTx5nfj1BuZClWV2haOwkHY3w5msvHeo9
      PEzuVyEGqRKTVkntkHXI9TbOnTHz/oefcHZkqMFGgE/JxqLobCa83g2qmSwl2Kuucv5UL798
      7wMGT5/d/6FaHn8wgqO1HYVUIBbeIFUQyGbSVCVyhoZPUykkyBQqDA/2cuet5ZEnn+flp09w
      /foY674gxWyWKtDU2olWeTfRVXtHG4JCQ3bnbrt1iZzhs6cwaQzYdWo2g366T5xBUa9QpUpn
      zxAy4euaQxuD+1WIqR/y5vsdHdvxDONXP+HUE8+SiMcabASQaTFrwLNd5oUnhlieL2K1OjAY
      7HRJ5dSMoG/uobs3QadFQ7F/AKVUQGe1YMpLeP7pEfI1GSqFFIPFgT4bxdrfh+LT73FPTw9K
      aZ0VX5TjfbsOM++ak4og4bnnnsK/5sRqd2CwNNNe1VJS9QBgsLcjlVswSwoojWb02dg97Srp
      6WlHTonWrnacS066BobQy4polbt9Pr7UcS7OU1XaOKYpM7+wzODQKaLhEHKVCoXJRHQzjLGj
      5dB0tGtKbMmMFNJxSuVc4zwIE/0AIgdBQ06BREQeFg0zAoiIHATiCCBypGmsAKjmuHH9JtPT
      05QKGZbW/HuHXLNjRL7mi4VftWLMxNg1lpaWSITvmmZS0RCz8/P4gzv3bWNlaYlqrUQ6d3TW
      M/czooCA3+PaM8gcmg6hjmdthUx+19nUWLtAtTzxvISBFoGF9QgGpZKg38NOqkgtlSDqWiFh
      0CKv5ykVixTrCqrVGk+eHWJ+bhG1wYJFXWc7XUKh1NBp17LmC7PxabWQRDSEzx+ko3+Y8LqT
      SrXO4Mh5trzLbLhWaDnfC8BOLMkzz79EenOJVGbXW3Bj4jbvvPM7CILAps9DNJWnt8PO1JwT
      m72VWDSMra2dHdcsV9YKvPOtE3gCIdq6+mixGR/ZLT1Y7m9EifnmCZeseG6O8tprrx6aDon8
      WaytXVy/epnvvv2dBhsBgEhogwsTq5zuMbDq2WRmfplzp08ipUZH93HWXSu4l130nBwhtBFA
      kgwxNTWGoqmfkMtJYMONxt6D37PG1RsTnD5zGs2n+/kPVjEGktFtVt2+fbqkkt1bKZHUGB0d
      p5LeZmXNjcLaQy3houfMC/hdq+j1eto7Orlxc4pz584yc2v00O7d4XN/I4og1+JfukWJL88H
      9bB1NDusyIoRZFor0GhTIMDR2slgh43txO5DdI1SwszsAhXhbiWYXVOKDLlcilQmwdbaxcba
      PDlBhurTSjASCTTbDMwvLFH59HHkg1SMuUO1lKMqVVEq7A7pdrOO2bl5XN4trFYjalMrHXYd
      CoUCYO9fld5EJOinyW5iZmYGveUwHFGPjvsZUSKJLB29vdQrh2MSuqMjHt7kb/7x13S02kVD
      jIhIw40AIiIPk4ZZBIt+AJGDQAwAkSPNYzMFKmRTe4WtHwbZVIxDytkk8ghpqAAILN5kZSvD
      3/7VX1GtJLl0/fbesZBngUD0PjsKxThzqwEAkts+ro1NMre4wpet/j0LE9yvOZEH5W5llnIp
      x43Rm8ws7Fb3ySZjOJ1LXLp681B1fGmFmG867T29XJtewKRVMnV7GUfXCVzORZY9m4x06oES
      //SDDzAZlJx74jQLmyXIbDHSbWVxOcbJ413Mzq3x/LffRCmBuRsX8KaltDl0aBQypCoTkXAY
      oVZFrwLv8jQxs43Tx4896ktvUO5WZsmUa2zvRNDm8jAyjN5sQ73hoffk6UPV8aUVYr7pyHRN
      7KxOcua1t5m6OU1PswrvxjaZ7N16Zgazja5mA8WqDEEQEAQBs9lMS3s7csCiV1p9y08AAB1I
      SURBVBBNF6nVakCFp198nZDfj0Klx64TCEbStLa3IxXA63ZjMJke2fU+DtypzFINuzk2dBa5
      TLpniHGFknTbdYeq47MVYhpqBAAJg+dfoKvJxnMvPYdepaLFbsHqcNByrJloCfoHejBrQWVv
      xx6do+ZoQWnpwCpbpFyHM8+9yNLiMjt1KY7OAQxKeOnFb7EZSaG29vD0SIWaTE5H9wCDz/Sx
      HfBCi/lRX3jD4vFv0mp1oG5uR7m+TltHJ9FwCK3ZRm9v7+HrsHZyvlOFWa8hFg41zoMw0RAj
      chA01BRIRORhszcFyuUOK0GFiMg3h4aZAomIHAT7p0ClNL+6cA2A65/8+guroWx7F/n4xsxh
      aPs81RxTM7v7yNPT00SDXsKJKGNjs3tVX1ZXVxGAdZdrX8HrsbExxsa+/p7zHdNMYmeLubk5
      NsIPVtsYwLc8STCeZsnpIZ0+WhnnYjtb+DfDnzOiZJJRlpaWcPs2Dk3HF1Wq2b8LVErzj3/3
      twwNdvC3f/cP/PH517j5yQU09i4GmjU4vUH0ej12i5UbVy+SSWcYfuoljrVYD+UiqOW5cPEG
      p483c3lshv/6D15HKoNYNIVEspv5rRTdYKOpmzWvF4Negz8Yon/4LLFYFAEJQq3M4qITncVO
      rZSnp93OZrJOd6uRxfllpBoDFqVArFBCqdLTpJfhCycI7ex+4W+O3+TZV7+LRa8m4HWxHc9y
      eugYG4kqklKGNocZpztA98AJtv1rVKUapOkEagfIpfDzn/yEN955l1w8RLYMp0dOPtalU2vI
      Ca2Mg/yFfUYUg9lOHxVuu+P0dx+0ivtXqvncIrh/sJu//PO/pPf4AEglSIB/+Ku/Zt2/yoJ3
      G1kxzsySh08++JCONhsfXZk4aPX7ON5l5mcfTtHX10Ei5CfymWHq5LmzrM3cRK62oFDKkZZT
      3Fpw7R13Tl4nVpbg9XjZ9K0zO7eA3mwCdr0DM9PThPxLmNqGWHetcGNimjOnT6GU7Q4n337z
      O8zevMz1W3PI5TKi/kW8G9t4NiN4PB7S8W3C8QxymXSvkswuZdZWNzHbbbQa6qwEM7RqCsy6
      72+hfBwwaBRsJUqYzcZ9RhSAW1MLnD93GCWj7l+p5nMBoLZ28/qbr9FpVpEK+bg8PodeKacC
      tHb2YL5T1VumRKtWUK0ebmYzfXM/vV02tHtJ2RTUhRJSQaBSB5nWzs7aNH0jp7l1axK1VotE
      EKjX66jlEoxNbZRzOfr7+3nyTB/TngR2rZx8NIDTH0Wp3DWu3DHX2AxqFpaWqbH7c7drDUdL
      OzKJwOTUFBq1GoXeTCq0TjSZRaEx0WaWsjA7vVdJRq1Wkc/vbjLoVHI2k2VkxThOX4Q2x+Nq
      hwSos7LqwmbSsh0K7jOi5GuQLpbRyH5zKw+D+1WqOdKLYI9zhrzMxshg128+WeSx5EgHgIhI
      w7wKIfoBRA4CMQBEjjTiqxAiR5rGCoBSlP/4F3+HQIaLF2/9xtPn5uYOQZTIl3G/yizF1A5j
      E1MsrrgPQcVdQ0w+t79STcNMge7Q0WTi9sIaANcvX8BotSDUFcSyRXRCjmMnTrIwOYq6eYDA
      4gwOq4mFVR8GpUDv6WdpMWse8RUcLbq6Oll3e5DobJweUnHh2m0YGaKQjbMdOSzb6a4h5tqF
      X1OVG2mxGZhf2wQabQQALM1dkElSU0C2UKG3w0G6LEdZz1GWavAuzDJ49gnyiST2lmaa7Ebq
      UhUmtYRSVdzwOlzqJNJF+tqt7ETjfPTRJb710rdwLS/iC+zw1IsvUcw8+Cslvw3OmXHMXaeQ
      5KPobe1Ui1lcy4uNsw1aLBahXiGRLmHWy4lmypjUEjbCCXp7uihkElQkGtTSClvRNFaTHoW0
      TqpQRyOrkq/KaWu2PerLOHJEQpvkajJaLFrWA1tIFWqaLEZMVgt+jxtLcwdmg/bAday7VyhW
      hF1DTiiIrbUToVxosAAQEXnINMwa4G7eTxGRh0fDjAAiIgdBwy2CRUQeJo0VALUSY6Oj3J5d
      5MsKsl+7fIHFhTmmF1b2/fzXv/gpyezn1xKliIePxpceslgRgNWleaZnFqgLRSZGJ/D6dyvq
      ZBM7TM/M4N+KHoIKAefCLDPzywjs19FQAVAv51j1BOju6aaSTTA3N8Pt+RXGR6+ytHCb+ZXd
      7G+pbIHhE8fZDPgIbfoYu3aZze0o0USGSj7F7PQ4S+4gzsVZpiZuEs0eTpmeo8jA0CnyOx7i
      sQTuUByTeTfPktZkZ2RogMX52UNQIWFg6BS1qI+dz+hoqACQaqz80X/+e1z65Y/ZimcoVSUE
      /F52EmlOjpwiHFgHoFrK8/7PfszQE8+TTqWQVnNsRou0trZSyWcQZArW3W4WFhZQq5XksmJC
      gIOilEtTRUFJoufdt1/m+uWLAEilUjYDftTaw0mMVS/nCGQlNFkc+3Q0zC4QQDEdZWbFT1vP
      CSTFFBK5ArvdjkyoAhIslt2obm7r4rlnnuD6+CxqSRmd0YJMp0JmsZBMJlEoNdjtcrQONXWp
      grauNqKPuTPr0VBnZXUNpVZPNZ/AtZGgqW3XiNLS002qUMVkNByKkksff8Sx7iE2NzeJxlN7
      OsRdIJEjTUNNgUREHjYNkxhL9AOIHAQNMwUSX4UQOQj2T4GqJdzrG1RLub3i0d8o6hV2Igmg
      SiJxtBJMiRwM+wMgH+Hf/bs/YW11mR+/f4VCNoVzZZVKTWBzI4DX7aJUrZOMbrPm9X9phZUD
      oZLir//mh5RrBaanV8gko3h8m0CVSCjEeiAIQp1Nv5doInPY6kQ+x64R5cIH75OtwOrsOD95
      /xIAufAaP/v4BpvhyG9o4+HqSCQifHzxGhev3gC+YBE8cKKfTy7sigxurHP1w/f42Sfj/MX/
      9WesLd7m79+7gNe1wj/91Z8z8wi2Dk8N9zF2azc1Y7UOgYUxvJE4V2/MUYt6Wd1KIpEquHDh
      40PXJvJZdo0oUqFGMRVmp6TBpNx9hl+XqnCYtWyFtg9VRzS4TufxswiV3Sn15xNjmdtpt6qR
      AFfe/yWxXIl0Ko2ABKijVMr5+XvvUanVyaQP/6+syuBAL1SoKWD0+g1sdiulchWpVEalVqea
      2mLOE0KnVh66NpHP45wZx9F3GqVMht2oJLwTY3V5kayg5okzw0TDW4eqo63ZQSK6+4fbtbz4
      mQdhWgd/+O63aTKpiWRKGJWvkMoVUaj1/Pn8VQZOPc0bvX1En+inXJdgtDgORfweChPnR9SY
      9SeIZsrIKp0UqwImmxZnrYS+4wydLXa0Ki8688DhahP5QtQGM1TyoGxhaMhBS0sL1OvoDDp8
      635eee21Q9VR0/bS69hG0/8t6qX8g+8Ceb3eQy1p81m+fBeoSiyWxWYTSxmJfDUaZhu0VPqC
      XO0iIr8lDRMAIiIHgfgqhMiRprEC4B5DTDkbIxjd3YVanhwjWQbX7BiR/N3Txz/+BRFx5vQI
      uceIIlSZn5nG7dvNx0O9zJULlzis5/vbG25ml93wGR0NFQD3GmI2XAuM3d51caUTOywvL7G0
      vESpXGJifJybk7uFKYRKnvHxW0zcnuX2+ChLSwtMz6/sGWW2U+IrFgfHXSNKOBYnnKnjc3/q
      0pMqoZDlsP4+NXd24Hd5qOX262ioALjXEFNTGens6LhzhIGhk3S1N5PYWGUzUUao1agB294l
      dnI1atUasZ0E/SdHiIYDe0aZ9c3DsOQdXe4YUVSFOKV8ikdtvksl9utoqAAopqNMza3Q1nOC
      9o4OcrEQdcBosaOQgMFkp6V7EIcWbHYHra1tWFv7MCmq2B12LHYrEsBisZBKpdEZLRh1qkd9
      WY81lz7+iGNdHVTleqxmIxaTnvGrl0llM+SqVUIboUPREfQHqNVKoDbt0yHuAokcaRpqBBAR
      ediIhhiRI03DTIFEQ4zIQfC5KVA0HMTrD37pu/6FTJKlpSWcLu8Dd5QI+5lZfvDz70cxl2Z1
      zUW5+mWpsb6cVGyHlZVVCuWDG1WEehX32hqpbOFLzqricjpxOl08qJJI5DDenz86yL73ve99
      785/ivEA//t/+gfaHCaaWtrY9LkpI6eSSxFLpMgUyhj1WgJLE3xwy0V/dwf1Yo5UJo1EKmXd
      40FrtLAT3iKTilGXqlFIa6y5PKiUcnJlUApFthM5zAYtXvcaUrWefDJCNF3AZLh/jphqtUqt
      mOLS2DxPnD5OoVynkImTzBQo55Jky3VUMgG3Zx29Uc9Pf/wTHK2dVAopEtkykmqZWCKOWmdg
      +uo1+p4+z5UPL9B3vJ8t/zooNOSyaRSSOulCjUI+S7lUJBwMotVp+fFPfkJzexelbIJUvky9
      XECmVhOPxaiXS2SLZVLxHaooUasU3Lp8gdahs9RLeeqVAoFQBItFRzS8QySRxmwyADkmJr08
      //w5MqkUiXgcCTX8m2GsViOx7W3CsSQWs5HodpBUoUoyFsOoV+PxBTFbzGwH/ZTqMoRyjlAk
      hdmoP4SvzVcnFfZyc9ZFYGOT7q4OEjtB1tzruP1bdHW0Hnj/O5trfHhlhv52Axev38a3sUFv
      d9f+16GVBjvHTBIuXLlJ/+AAi0tLfDL2j/yz53tZSWtYX13gP/wv3wMgth1kO5rk9swFUso2
      3njpGabGLnLptgs2x2kffoa10Di6lJuTL79DObnJVKDKL2Y/4tSLv8vq+Psk1d08I5T5259+
      QpOqzEt/8N8w3HX/HP7JkA9H1wA74SAlDNy68TFPP3GG6ytbCOU873z32yjIc+n6HAaDAbu2
      xj/+8iZqoUxLi5GK9hiO1jYApDIlTRoJ05NjGNqGWbh2BZ1SjtFiIlkCSjnSiSivv/IMozMe
      jAYDZnmBywubOGQpBKUGVHpmlgIMtOpR1bI0n32FhfFRvv3tNzh17iyXL35IW99JetssbK9O
      UVE+w+LoAsccMswtbZgVEN8J4fUH2XJOozp2gkGNmmRggXmJgrWpKQbatHiEMpuRIk+dsjA7
      6SES9OHoGWJjZZKU4hgDVoErl6c4P+hg2i1wvv/gv1BflVq1Qk2QENneff/f0tSOWinjxnzg
      UPpv6jiGei5AZGPXEBNc2S2xtW8KVM5n6Tv9LBZZjvmZ29yYWiSd2X3doLv/BJL63acYx08/
      zSvPnQcEXvnOu6xMXMAfTpFOpwGBU6dOkcvnqdVrSIQa5aoA1Hj+xVe4fuEChVoNgErlwSvN
      m1uPsRNYw9FsYXNjG6PVTmuTFVtzO+/+3jvMTdxEorMgqZWQSCQICFhszXz33d9DJ6vTf2Jo
      L+Lr1TKRIpgVd9sf6rEzH0ijLG6j1LegUGnRaTXUK5Xd9vaWSwKt/cOMXx3jbJ+dnCBHghS9
      Xo9UupvGPZkt8ebb32V7w8vo9RtYHTZKpTI6vQ6VQsqdGZy1qZXeY+1Ql3NiaICx0etYbXZK
      pTJ6vR6VUkqlUkcQoF7b/dCpJ54m7Z/HH8kjSCTU67W7F/ENXdGZm7p49olT2CwWXMuL5ApZ
      Lly7zcsvPHW4Ouz7DTH7F8FCHf+6B5nWTHuTGZfbj1KtwqxVUlfqSUa36e3tpZBJki5Bs93M
      djCA3t6GpJxhJ5FBJlMhreWwOlrZjiZpbzLhWd+ktcVOvgyU0tQVetqaLHjcLprae6jm4uRq
      Mjpbm+4r/M4iuJBNsRGK0tvXSyoRx2azEdveIluV0mLR7VWHkVEjW5GglpSJZ6s0mdUodDZU
      8t01QCiS4FhvHxqljE3/OkZ7G0atjO1IGo28jkxnoZhNYbMYSaRLyIUihboCeT1PCRWtDivb
      29vYTHoShRoqKmhMNrKpBBaLhXIhy3ogSGd3H6VMjEK5htFioZQvoZILqAwWFNK7PoZULIbO
      ZiMX3yFXrKI3WagUi6gVINdaSEc2qcq0KGUCKjmE43n6ejoJBdZRGu1opBWi6RLHDmE68XWo
      1yp4POt09vRRSCeRSgW2whFUWgO9xzp+cwO/JVsb66SyRbp6B8hEt9CYHF/NEPOoEXeBRA6C
      hskNKlaIETkIGmYEEBE5CMRXIUSONI0VAF+hQszS0hLR5IOlbdkOuIhkfvOb6VNXP8QfzbPt
      W2Z8zsXS4uerygjlLEtr/i9t5/1f/JTJ8VHCiRxLS3fbqBdSBMKJvf/fewzA5/P9Ro3fNO5n
      RMkkoywtLe1VbD80HYDLucDymgdooDUA3DXE/N67v0slm2DF46Mq0VDJbGMw6qkpHJw+0UUq
      W+ClV09CPsIPfvgxTz15nnw2RbmuoJaP7p0rLe5QRoVRUUQhM3B1dp2B48cJ+1aQ62w06aVs
      RLMoNXrODA+QLEuouJaQESdfdiAoiqwszFKoybAbFWwlChzv6yCVyjF3e4JKtUb7wBmWJq+g
      UakZfuYVLBoZNYmcp55+il99cAmrxcjy/DRlQYVFnmbUU2KwWU40U8OkVRALenGHUjTbrVy6
      eJF/8Yf/GoOmcXIeNXd2MP7zq4x0GQln6khjK/R3d2Aw22lJ77BRPJzazXd09FvruMN5zo90
      Ag02AnyVCjFLS0sUCgX0LT20mFUUygKBwPq+c33BMOfPjlDKJCihoFbKEk+E2NoucvrkcaYW
      V3nqiXNs+Xb/ctQFCXJJEVBSBaLRGDqdhshOCEGuJh2PkE6niMbTbIQiPHn+ODPTixTKNY45
      dGzFPvvCoYRYNIZOo2ZnewuFRk97Ryfx7SSvvvEysViUiRknTz55ju7uYziaHA315b+XzxpR
      AKaXA4wMth2qjmw6jdZs5/atMaDBRoCvUiHm5MndEcBuMpDPJBFkChx2O3JJfe9clVTNzMwc
      Gp0FuVDFYm+iVlXQbFcwu7DME6eOM3l7hrbuPgAsFivD/Z1UpHJc63EqChtIpJj1GvKlOk02
      M5WaBLvViE4qYWp6lXPnT7O+UkOlM6JT7d5umVDl1sQkT7/wIu6lWZDKMWhVqMytVPwuDLZd
      447VZmegs5nJqWm6urqxGLSkckVMOvWj+QV8DfYbUTJUazXGr17m9AuvojeZkB2yDkP7EIrZ
      OaxNraIhRkSkoaZAIiIPm4aZApXLYilTkYdPwwRAvf713/8XEbkfDTcFioSDBLa+PKf8ztYG
      TqeTWCr7QG3mUnHypdpvPC8RCeN0rpDOFYlHI9TuWT25XK4H6uuzZCJBwondbF4+9yq+jRAC
      X258iUYi39SXPhuOhgqAem6HSWcQnVJGrVbB41ojV6yQSiUJ+DwUyrtf4ttzCwwNDWHTKQiF
      QsRTabzuNTL50r5zy8UcLvc62XSSYqVOwOsmlS2QzyTx+DYRhBpet4tiZbfd6ckZek8McuPq
      JZKxOHUgtOkjmszgdq3i8foQhDqR7RC+jS22tzbI5EvUKkVcbi81QSCZiOFxe6gJAplEFNfK
      4l4ALLs8mBRFro3PEY/FKRezrLnXiW04+eHPL5JIpQhtbbETjwMCgXU30WiUH/7wh7/Befbo
      2Nlc4ye/+ATYXyEmm9hhdm6OKzduHaqOejnLxUtXWXHtbpk3VABItXbMkhQ3p+Ypl8solTI+
      /uQy169exuqwMjo6Cew+B3A6nRTSET64OolQraJQKvj4wqV95168dIX21maioXW2Q35urwaR
      SipcvjpBa5OVsSuXsDS3ceXS5V0B9Qq3x0fR29pZ93gJrN5ip6hBq5STyxdRlnZY3oxy7foU
      odVpigojN0dvcOniZdparFy+Osbli5exqspMLrq5enMOk16z7xotLT3kk1t4vR5ujY4iSGVo
      1CrsrW24pm6wHs3g9XqYH7uKxNSMVqfDYDR8rp1vCk0dx1DLIJ/YXyFGb2lCL6sgyBS/oYWH
      q2PHt0pJqiEW202I1lABUMom6Rl5BoeqxOztSWJlJQqZgFShQq/TIqnvmmvkKi1DQ0NoFFJa
      2rtIbzkJZSUoFZJ95wp1AahTE0CqtvD8uX5ujN1CEATq9frnpxlSBSOnhsh/mkFDqAt7hhSt
      TotGpaJSqaLVatGqNeiMJmT33mEBVFodWo2KSqUMEsmnGu4S2/Kit7YDd40vm6kq9erus47B
      48eRsrsmkrBrkpFwr1nnm0mV/RViQtthOgZPU0gcRomku5hsDkxGE8Vc6gsMMd9gisUiCHUC
      Pi9KvRWHWcv6Rhi7zUKtWsVms5BIpLFYzMRiMWw2G1RLxLIVLHoFXv8WNpuVeu3uuTq1DH8w
      SovDjEylZSvgo7WrF8oZwvE8vcdaWfd4aTvWi1ohIxGLYbLZiEcjyCRSTDYb4U8NKZJaGaNW
      RQkFpXwelRxUBgvZVAKjXoPXv0VvXw/JeByLUUu6BEIxTbFSx2C2o9coWHevIlEb6e5oJRaL
      3WN86WBj3YveaMZgsZFOxLBZrfjXPZib2qnlk0jUJixG7aP+NX2Oe40oOpWcRCJxT4UYH+3H
      +tCpD34UuFdHPh5GqjUjrZYaLABERB4yDbMNKhpiRA6ChhkBREQOgoZaBIuIPGwaKwAesSHG
      71pmbn4OX/ArFAivZPEFd7fcfMuTXL81y9jENOVslDV/eO+0e80utUISp2dz7//ZWIjoA+j7
      JnKvEWXyxkXiuU9z4Al1luZnca0fTl6gu8acOotzM3vGnIZZA8CjN8SENgNU9e2MtDkYGxvj
      7EAbvpyOrdVbaFRqTpw5x8LCCv2Dg8S31skXK7TZ1FyZj/BH/+ItcukEbX0vU3BdxbdjIVUU
      GL16hZbuPsauXETx9rvMj1+iua2TosLO7NQ4qEzUYy4i6n7eenb4Uf8KvjJ3jChnh/vRyqrE
      c1WsOjn+xQkSNQvDtsM1xHSos5S0bQRXZ+nv7misEeBRG2KeffU79P3/7Z3vTxtlHMA/tNCC
      uFZoBzPt5qZGZFGji/6HxkSjLou8WuIyY/xBYjJfbCjSDDcIAVyAtpRS2tof9K4/uGt7d7Tj
      uOudL+oY5YWZG2MS+3l59+S5J5d8n+9zee7zfEfc/DwVQq7WMPUGakM/EF6KioltNJCrIpFo
      GrfLgaNvgFfPBztmGtsG29yjqjbpddiUKlW8/hECo35MRz9Xxs4jKTWEUp333x3H6/ESDD7/
      s3NOElVVGT57jsX5+yf6XMPYp8/1WCo6VRngRQsxiVgY3YK33nyDpiyQLyt4fCNYPj/uQQ/u
      HhOvbwSr1cfYWBBnv5fRQJDNzCr7Fgx6htjOxHG6zvLhiAfVaOLSvTy0LF4PnCMnVvD5/NDr
      xu8dwt1vsBqOcSl4kUguD8F3XtzLf0oeiSiNRoMdVWegLCLFc4xf+Yj19QSjgQsnOo4zgXFS
      q2F8o4GuENOly6laAnXpctx0K8R0+V9zapZA3V8hujwPnrpCjFCSgBap1LNXfXliLINEPE6x
      Indc1rUdcocOlHqEXCmSLRSfWHg5ymHJRcj9SVmq/2P77WyKRDJNyzoVc0oXjgTAXjXP1evf
      URJy6EaLbHqLSlWhLpURBAGh3N7QEZNhPp24gZRZ5+NrX2O1DJKJTWpak9Ctb/jxzhy2ZZJM
      JNBNi72GwlYqyzPnGkMhLWrs7aQJJ0WkskChWGFfk8hui9S1tsyimzaldJSsbOB9yc2uVkeu
      ykxOTlIotU2rWq0dMHWpTLZQBFOnVCqx/bdtJuQzhGNxACrpNYSmCycmht5kayuJ0eqUWwCi
      G0kujvZzbyGKUpMRiyVkuUZDraHrnf2L+Qx17b8psRwfNhuRVWZ+mUJVJO5Mz/L7/OLB3T/m
      ppiZWzvRcewanWJORwAcrhCjKlXWYzE++ewa4YUZbs8u8tXExEHbwZbKt1PLvBYYYre2w0b0
      AV9O3KShaVi2ze0frjN99y43vr/F1c+/ILk2x0+/LXIcXLr8NmI6AzhYCIV4CDh6e3mwvMzK
      yhpOZw+pdJHx8QsMDQ9TFTMYfQN4zvjRCgm2KxUi8XbmsoDoQoidqsz9tTSpWIRMfAnJGKTH
      an93+C+MoWTDRDYz7O8bOM06swuRx3LLRntXsanVWI9n8bwyQGj6V0zbYHlphfzmCpJ8pH/z
      ZZbm7/Hv89JpoofL732Aw27h6HOhSEW0RjvopUIKx2D7/KOTHMee0inm/AVGi/52QVVBGQAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='taz averages' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9WZBk53Xn97u571mZte97dXV39YZGowEQIEFSpCRKouQY2Z7w2DEPDjns
      GC+PfnE4+GL7wbbkiZmxbGliKEWMRhTFnSAJEEsDjd737tr3ysp9X+/NvDfz3s8PhdWUKDTZ
      t1Cpzt9LA5nZ/f3z3jz3+875zjmfJIQQdOjwlGL5rAV06PBZ0jGADk81HQPo8FTTMYAOTzUd
      A+jwVNMxgA5PNR0D6PBU0zGAx0AIgWEYCCFIxfaRG81f69/LpWKU5cavpSOyvUPz19zKiUf3
      qGv6Y4xvYBgGWr1GKlv4pZ9NxSPUPsV1MpoNdiKxx9Dw0TXIJGM0msYv+zTRvW3+rq/YMYBP
      SatR4d/8yz/hL//dn/Gzy/d444d/SyRbQQjxiZvxwZ/COPiR/P9f//j7Ny69yvJe7rF01PJx
      /uRP/i/+7E//FbdXInz7m9+kput/rw7jF3R89Dne//On3/9rUuVPZ4hqLc+f/B9/zN985wcU
      igViqdwvfs+P/ffbP/4Wkax88BkhqOVjvHbpxievhRC0ajn+8m9//Kmvw+L1N/g3f/ZN3rl+
      j1QsgtxofqTj77gG3/urf0ep8dFrya1HXL2/ge2xrv5TTGJrCVv/HP/s9z/H//onf850SOLd
      n32PNyw+Bi05yrZ+Pn9+htcv3cAd6KFLT7Oe0nBaVL729d/n7av36bHUKNWbPPf5L/PWqz/C
      0Cp8/vTj6Vi5d4Ppc5/nlVkP/8+P3sNi0fj+X/w5jt5jFNev0Dt3gRMDDq483CbUP0F+/Tp1
      ew8trcwf/u6XubqeR01s0BQWvvyVL/GDH76GXMo/loZyMcfA1HHkfJybD7O8+/1v4gn3UWm5
      CAW99FpKjD/7m7z287eYcIPRrPPqD37O/bUIX3xmineur9PnE1y9/RBvoJdRr8JOVkE3Hm8m
      S8QTPP+5l7l/+efILfjh65dxNstMTk2geccQ8dt88Xf/kJ9eXUHiwHi/88OfsZNtcKK7yVLO
      2pkBPi2BcA+lTIpCJoEv2AdC4pnnnqeQSbJw7gL5/XUWFxcpVBuEggGEaPE7/8l/wX/01Zf4
      7re/y5lnzrG8soEnEEItp8E7wOz4wGPr6O7tJZVMkEwk6O3tBcPC515+nlg8wcUXXmTt/l2W
      1tZQNAj6PWCo/LM/+hd8/swMf/29N3nu7DFW1iN0hbvJxHbpnTzJYLf/U49vc3r5r/7Ff09l
      5w6rkSwAwmrjcxefpW90hlDAiyRJKHINXRdYJAtKOc/WboxsPEZ4aISxqeMo2QilmkpXV4Ct
      jT1e+vyLWCTpU+sYnjnN//Bf/2d8+1vf/vC1nqFJJgeDfO7zXySXPzDqWrUGgGSRKKTiRFM5
      oru7DE9MMHv8NNZvfOMb3/jUoz7FuHxhej2CR5tJ/uAPfhevx0U2k+ELX/oNmrUC7vAwX/nK
      b2Bp1ugdnmRssI/ewRGGh4ZQGk1efOF5TsyOU6rWefaFl/EYZSzeHmampwl4nZ9aR7h/FElO
      E6sIfu+3voTb6ySZyPHV3/oKxVSMwekTfPXLr1Ar5piYnae/J8Tw2CQjQ33UdAefu/AMkyNh
      lJaVl175ItXULt3DU0xPTeFyWP/B8ZsNmdu3btIzdZqLZ47h8QUZHuhldHwSX7CLwd4w8/PH
      2YsmOD43x6lTJ2kKK26bxLETC5w++wxyNsLc+S/gNBQGxqZ48eJZVjb3OTE3x9jI4Ke6DoV0
      lJv3lvmt3/06vaEAA8NjBINdjA31MzA8htfr5ezCPPFcmfmpaY4fm8Lm9mMRglOnFnjm/Hli
      OxtInWS4Dk8znSVQh6eajgE8IfLxTe6vRkjFIuzH0wghSOzvksmXEYbO1sY61bpKsyGztr5J
      S9d5+623MX6FCfjypbepq3VWlpeR1SYtrc7q6jotQ2DoGruRGEIY7G2tkylUAMG7ly6hC0F0
      b5emIcil46xv7aI3G7z9zpUnezGEwaW33qZRl1lZWUVt6qhKlfXNbXRDUMqn2Y0mEEIQj+yQ
      LVTYW7nHVuKXh1QfF0PXePvSe8iVIqvrm+iGoFbKsbUbPQifJqKdKNCT4sa165z6wtfZ217h
      xrvv8JXf+23efO8BQilx4cwMewWd7JvX6XXW8If7WNrL4S7HSJTqjIQ8n3ocoSusbsWYmYxS
      LST50798xLglj2dwhHtbKYaMCG+syXzjv/2nxDJF3vyr7/I//c//I9lCkfjGA/63//Pf8r/8
      q39NPBbnyqXXUf7gj0hsryC/9Dm8tk/vhP4ylGKcaL7OZHSPTGyL6492sRTWCff1sxVLs3rn
      Or0BB4nTz3B3cZtmNc8f/fN/wvfeus7Mf/o7T0QDQGb7ERXhYm93h931JTbjRXbuv8tgT4B0
      7jzXr97qzABPikJZJhTq4vSJGRTDiiGXGBifw2c32Nrd58Qz51HzOTKVGufOniITj9Md9JAp
      1B5rnFYlj8UXZmh8FlEvMzoySiov88KFBRKJOK988UsAOLxdzA4FcHX1YshZbJ5exo6dYXoo
      DJLE6FA/9ZYFp91CwG2hVGs9sWtRyWfwhXoYnz2BWikwPDZCWW5w5tQ80a118IaZGe1leXGF
      4cljeI0mmjdAvfB44dh/iFQqTV9fHydOnaWQzzHU301TcjA/NcLW6gqBgfGOATwpvG4HtWqF
      P/2Xf4zV48ceHCK9eQfN1cMXXnqRy69+n9FTpzk/P8sPXn2Dc8+eo6aoBHzuxxrH5g2gKxV2
      l2/xF9+/hF3SePaZOf79t37GxQvnuXLlCuX0PsvLy/zvf/yvCQXcLD5aZXx2ju2VByTzRe7e
      vc/Va9dwulzouo6iGnjd/3AE6NPi8XfRqJVZuvEGP7q8hKHKnJid4Mevv8fFz3+RXqvCnc0s
      v/XbXyW+chMjNEhA17B5fU9MA0BXV5ByucKlV/8D9/ZKqPUao2E3l+9v8/KXfoNWZgtEhyfC
      3vJNcfXB1qf/C4Yu/vZv/kZoLeOxx/rOt/5aqI/x9+5duywq2t/9eb2piG99+/uPreGXomvi
      W9/6W/E4X23z/hVxayXyRGW0GhXxN9/58S/9TCcM2uGpprME6vBU0zGADk81HQPo8FTTMYAO
      TzU24MOc7A4dnjY+3AlWVfWz1NGhw2fCL4RBs4koqsVN2KFxdzvHyxc+fcVGLR/nwW6Bl549
      9cSFAhi6TkvXkSwWbFYLhiGwWiw0m02wWLDbjlZmhxCCVquF1WpFkiRarRY2mw1Jkj5874P/
      PxQdNhuSELQM48NrZRg6hgE225PbCPv7MHQdXQhsViutVhOwYLPbkPigzBKsVrNX5QK9pSOQ
      sNmsn8wFEkLwve9+C1kK8c9/51luPVzn7MwQu/EM88fmiMf2UesNukJBGrqVscEeNjfWGRyb
      xtpSWFl8yO0dhYXJPqKpIvPzc9if4BeSK0Uiu5tEK1aemQly+U6UP/zNM/zg5/e4eOEsY0P9
      T2ysJ4GmVFjfjhBP5xkMWGlKDpxdw5yeG+Xh7etY3H7Gpuboeox6gF+FaiFNJJ4mW27gEjKS
      MBiYf47Jfh9vv/FzHHYbp174EqEnuBv8d7G7vUF0d5vZ889x/Z2bPHvxPOOjQ4Dg7tXXSdRD
      fP0rz5uqQQjB5voquzs7vPybX/+kAeiNAvmGC6cWp6ydByAZ3+fyaz9lJ/Vlbvz8OzyzMEfO
      CJLa2+GV8xPc285jcdzEVo4zd/oEAIlohDd/9hNStX/KVy4ef2Li/aEe5KUlXn7xZXyOBq77
      cQxhpb+ni729CKOD/Zj8MH0snN4gXR4r+1ixSgZr27ucen4CgO29PcbHxylVZNMNIBDux7a/
      i2R3US1XeOXiMa6tx5nom0dVqmTqBuefUCLcL2NkZITFh4u4rDZ6+8Ps7u4yNjJIPr5Nw+LF
      JgmEwNR7KEkWRoYHebS0Rjm1/cko0ObDu1hsNqw2ieXNGEqtxts/fZVyo0WtUsPqDjI12s/Y
      1Cxuq4RktYHFztkzC0gSNFQNCYM3Xv0xNU2nWq0+8S9QqNbxOqy0mi30lk6toXNq4QTVYo6j
      5sZXi1k8PaPQqJIpa3z1yy+RjOxw/9EK3d29DPaGyBUrpuvIpZMMz5xELmSwWwTxWIpw0MHi
      8gY2b5izM4Mkck/+Xn0Sg0yuxOnj42zspjhxcoF6pcjG8hINq5f+Li+lctn0e2joGsWaxtRg
      kJLm+KQPUMpnsLqDWPU6chNURcbvdSLXNRwuL3WlSijgpYmDerXMwNAA8f0I/nAfTotOoSJj
      tzlxWFooaguXN0A4+GQTnEqlEl1dXaQTUSpyg6GRMXKpOOH+Yfwec5+kj4uhN9nfjxLuHcRt
      h2g8xcjYKHJNxu9xEE8XGB0Zeqxa2F+FllYnEk0wNDKOTagk81VGBrqp1FQsRoOS3GR0ZBCz
      54BSPkOlrjMy1Edsf59Adz9WQ8PtD2DDoFRr0BV4sr+XX0AIMqkELYuTof6e9iiJFB+08ejQ
      4QlztMImfw9CiINIT4cOT5i22gkuF7Ksrq6yux9HrddIpvOAIJdOEE2kOXJzmRCkEzEUrUWt
      XGBja4eWfjCTRfe2WVlZJl+WTZfR0upsrK+jqE1qpTy7+/EPr1W5kGUvmjiUa1fIptjei6Lr
      LXa3NymUD4qB9KbK5sY6VcX8vSghBKn4/vtlq0Z7GUAw3MtAl4tqQ6euFLl9e5F6McnafoGg
      3/tZy/s7MFi/f4d0tU7LgIBN4f5aFIDRiWka1RI2h8N0FYqsMDI6zLWr17hx5wGORobVaA4w
      uH33IXJ6h6z85CrC/l6sDtTMNtuJAqG+Ie7evI4AGnWFodExbly7ar4GBA6Pn/3Vu2ysr7SX
      AQAsb+wxPz1KV3cYu0WimE3S0Fpcv3ETcdTiQJKVnu4wAAG/j53dBAGfCwChNyjWIei2my4j
      0BUmE9kgPDRBXzhArliiXK4hDEGrUWV1L43HYX4Y1Oe2E8tVCfi8WLUSkiuIBHgDIaqpXXw9
      w6ZrkCQLDotBSdGRy6X2M4BG08BulUhGY+TzGby949h0GZfr8UoLDwO9qZJIZ0gmkuxsbeLx
      B6jXily+egu1WsLuDRyKjnxyl0u31wl57ASCAWTVwsygi+t3lnD7Agz2BClV6yarMNjc3CIY
      8FEuZvnOD15noD/Mg5vXiMYi/PTdu/QEPYcSBt3aieD3uugZHGmPKJBhGGia9lnL6PCPkLaI
      AkmShO2I5fl0+MdBW8wAHTqYRVs9Vsv5DLFkmnrLwmi3i1hJ5+TUANt7UUpVhRcvXjhSuUAf
      JxWLkM5mcQYHmJ8aoZDeZz1a5gWTMmc/TimTYDeeondwAg8yG/Eiz58/jTAMtjfXyGbzHDt3
      kbDX3IjU9voyxarKwpkzrN55j/5jzzEU9iBXCuxFk1Rkleefe8bUHWkhDFaXFmm0JE4tzLWX
      Exzs7sNrbRHqH6J/dIDEXgyXN8DEQACbu+vI/vgBBkbG0RSZwcGDjNVw/yDZRPRQxvZ393Pm
      1AkWH94n3DtAJnlwEotksTA9e4y6phMy+ccPMDFzDOQMmYpGyGsjWz5wvL2BMINBO65Ar+np
      GJIkMTd/nGJyl5VHD9rLAAC2o1nGB7o+8dri4gbz85OfkaJPidDJVzWCLhut1iHE3D+GxWLh
      1nvvcPzs+Y/kCINWS6deimP19Zn+w4ODqJhhsaPWlY9ea7UQQrC4tsf8tPlhUCFAbShYbA5k
      pdF+BhAMh7FJEon9OAgNWW3hDATx2s0v6Pi10DW6+wbBULl+6z7peBwwfqUzwh6XfGKbtGJB
      b8ikk3EQBoVcitsP12jUNYZHHv+gjsfHYGNtHexuQl47mXKdaiHD0v3blBstfF0hHDbzf47C
      aLKxsYXLF+Tk6TMdJ7jD001bOMGGYXSS4TqYQlsYANDpWtHBFNrGAOAgczEWj5GtCk6MB3i0
      XeSLzx3j2p1lvH4/584sHIoz92lp1svcvLuM2xdgtMdLNFtmZGyK/u4AQtf47ne/z9f+4D/G
      4zB37VtIx4imclhdAfRaDrWpc+z0swRcVna3N9ja3ObCF75ieiRoe2OFdDrL8XNnuX3lDtPz
      x5iaGEECdlbvEq86efm5BVM1CGGwtrxErlDiwuc+315OcDDci9AaLJw6Sd/wIM2aAgiyuSyZ
      7OOdt3s4CLLZHJlslkeLSzisEi1dBwSL925hdXowHvNo0F+FcP8IJ2bHSSaSpPMlhkIOlrfi
      SBYLE5OTOH2hQwmDjo6OIlcrtFSNlgQ1WQYBjWqe/XQBtWF+OrQkWRgdHaZcLlOv5NrLAADS
      hRph30elj5noDlMnz+OwiCNXD5CLRZg4cQanJLA53UzPjLO+tk4qlcKwuDDUKoWy2bW4HxwV
      dJWLzz/HCxefpVxVCPjspLNF5Nw+jq5PdzLjr4fAkOzMTQ4QyzX4ypdfIRffJZ1Ok84W6A4F
      yeZymP08EMLA5vQxFPawvZ9qryUQwPTsLBYJktE04W4P/uF5Sns7jE1OH6nlD0D/5Dyl9U1G
      p2YY6QuwvR3j/LkF0uksZ88/S/9AP93d5meElrJpQgPD5LNZbIaCNTDMzHCQSLKCLxhkZtzk
      Otz3ie/vUte9TA/7WV9bZfLYKVr1Gr0jU4xbmwS7y1jMvonCYG9nE1d4lGPHZtsjDNrJBu1g
      Fm1hAB06mEVb+QCtpoYsy9QbKsLQ0ZpNQNCo19H1o9g1QqA26jRbOsIwqNfrnwjnapr2VIV3
      W03t4N6Jg7W4ph3s7QhhoCjKId1DgaY2UFXtwB84hBGfGI26TGxvi2jZwpkpH+/ejvGl88Os
      JFX0hswXXn7xSCXE1SsZLt9ax263EHKBsNqQfIOcmx9HU0r83//vX/Bf/jf/HX7XEU/jeEJE
      I3vEdjeZPP8l5Ogjbm/l+M//ye9QrxaJJLLsx9P85pe/YKoGIQR7u7vsbm1y7vnPtdcM4AuE
      KJVqvHjxLH3DI7isEharlaamkc2kOGpzgMViI5+OUlVUMiWZc6dPkEkc5OK8d/kKU9OTh54Y
      91kyNDRIoSxjyBl2shoBh8AQAk+gG6ehgNVpekmkJFkYGuilomgEusLtZQAAxVoDj8OK2mig
      qRre0BCn5ifp6ek7cl+mmEowd+4F7LqK3+1gNxKlKxTk7oMljp08jaHVqTeeFufeIJXJc2J2
      lFRR4/jMKDVZYX3xIfuxGP7+CZpy0XwVukaurDDeH2BrZ6/9nOBKpUIgECCXSVJTVPoHBsln
      M/QNDh9KNuFjIQSZdBKHJ0jA4yCVyTEw0E+1JhMM+JFrVVweH1bTY39Hg0oxT03VGezvRZIk
      KtUqVgR2l5N0Mk133wAel8kbckKQz6XRJSfdXd72MIBOa8QOZtEWTnCnNWIHs2gLA/iAciFL
      Ip3D4fbhcwgU3cbEyCCxyC7url56uvyftcRPoDdVdnZ36R4YpVnLky9VCXYPMNzfTaWQJVtp
      MDk+Ynp36I8QRPd2qMh1+ocn6Al6yaUTKLqN0eF+03fSc+k4RbnF9OQoyf09rJ4QA70hlGqR
      SCyFZHNybHbK5JpgQTIWQcPB+MjQkfMbfynBcC/9AQdKC+wuP8XIOjs7q2TqNh7dvWV6Hsnj
      0mpqDI6Mc+fmdfqHxrC26kj2gzym2/ce4mwWWI8cZhKfxOjEFPVKEZfbhaFrPFzbphzfIF02
      PxHN7vKi5XbZiydZ28+zufIIXYDHH2JiKES5ph5COovAEwgRW39ARdXbywAAVjb3OTY5QlfA
      S6rcwKbJ+AJdWCwcuWQ4p8dPPR/D0zUAGMSyFQbDB3k3/T0h0rnCQUbkIWLoGhUVfE4bktVG
      yOukWCoh1803ALfDSrIgI+lNqvkkBVlFej/wubi4xvETs6ZrkCQLNlqUGwb7K7fbzwA0A+xW
      ePMn38ff3YevZ5Tk1iJ2d9D8RKrHRCln+cnbN+jp8mG0GmBzI+kNLl+9hc/vQ9VtzE4OHaom
      vVHE5g7TVPJcv7uKz+dFcoUY7TV7+XjQGtHv99JoqIR6+vE4bNy/eZ1SvUld0/E4zF+Rf9ga
      0eNi+Ngz7REF6iTDdTCLtnCCO60RO5hFW8wAHTqYRVv5AOV8huWlRW7df8Tq0kPu3n+Ebhjc
      uPQ6udrRy6mpVwrcu3ePjZ0oILh//Qp5WQUEG6uL3Ll7H7Vl/gaf0FXe+OnPaQD72+vcvXsP
      WT3IUN1aX+Hq5XcpyOYvMbfWl7l9+w71ps69a28Tzx8EAFqqzJ07d9jcNb9TnhAGK4sPuHP3
      Aa1Wq70MINjdh0fS6B0aY+74AkY5TaGh43MJKo2jt1Ps9HVx9uwZNteWycV2WFreoKo2AYnp
      uRP4jQrRgvIP/ju/LpLVibXVoAnsRSK4RJ29dOn91ohzqC1xKDXBk9NzGLUsuapG2OcgVzlo
      Ctao5inXYW9703QNkiQxe2yeYipC3bC1lwEA7MTzjPYFadTyZFQb3e6j6xtYJInVe9cZm1tg
      fWuX7i4vuVwBVdNoNaqsp+tM9Bzi0U7CQKmrVGQFu6SjaU3qxRhWv/mbYAB6q4nN6UL5WOi3
      qWnk0llsNgMdm+nZoEIcjOlwOKg3Gu3hBH+cUE8PNgneu3GLwYFxKpUKpTqomQSiZ+JI1QXL
      5SxbyQrzQY0XXvkNkltr2HsD3Lm3iFTPMjA4SKWqEA6aawSqUqFlsZBOZJgYH0OpN3AKhfvL
      eeb6nYweVmvE9TUMq5sev5OdiEqzlWGtsEX38CieRgqPs+sf/md+TYTRZH19A6c/hNvS7DjB
      HZ5u2mIG6LRG7GAWbWEA0GmN2MEc2sYA4P3WiLF9MjXBQMBOvlDlxMI8+9EELcPCs+fMbavX
      /hxkg25vrjNx5nOM9/hYXlqkUKrx/EsvYW6HRsH6yhK5fJG548fY2NjD7nRx4Zkz6GqV2/dX
      6BkYZGZyzNxsUKPF8uIShXKN+dmx9ooCBcO9GJrG6dOnOb5wBktLweLp4vTCMXKZ9Gctrw2Q
      GBmfBLuX8b4gksXKwqkziEYFTTd/7GMnTuGxNMlmMuAMkonvohkQ3ViiITkOpzWixcbC6TMY
      jQqZdKq9DAAgXawR8jpI7K5CcJigU+LqO+9w7rnnP2tpbYGuVdAlN6JZJ5HOs7f+CHf/ND7z
      z+smE9umLHUxP3+CmeEgTo+fYiaB5HDQ2z9CNrFvfkavEOyuPcQ7OMPxhbPtZwBz8/NYJEG+
      JNPlsZDNZHAGeigXskcuHfooImHj2LEZhDBQVZWirOJ3CGqHUJyfK5Tp7fJQLJXJ5wucPvcs
      RlOjf+o0rmaeuYUzpmf0CmFQkjV8NoNKpdoeYdBONmgHs2gLA+jQwSzaagmkqXVKpRI1WUFt
      KMjKQavBaqWM1jTdi/uVUBt1WoaBobeoVmsfhnMbdYVSqUTrkFs6amqDak1+P+VA0KjLKHXz
      D+o7GLt+MLYQ1KoVtOZHCYwHOsx3gkHQUA7GEkK0lwG0mk1y8R1uPVwnur/P7SuXyZWKpDI5
      3rr0zmct7xcROm//6HtECjWuX7lMdGeNxa2DM3qvX36XsiyjH2ohsyCZiLN0+z32czLCMNiP
      7HPt3beRD2GfMZmIs3jzMtuxNPFkhkuX3kUASjHBzfur5AsF83OBDJ39/SjX3n2LjZWH7WUA
      Hl+AbL7MxQunD7IYNQ2vrwu3RcWQHEfPCZasjI4clDzabVZ0wyAWSwDQPzhAfHudVKF2mIIY
      HOgjU6jgcdqQLFZm5+ZQ1Sa2Q2hPOtDfT7ZUo6srxORI74eh19j2Jk0sbG3vYrYFSBYbs3Mz
      NNQmbrezvTbCAEq1Bh67hdvvvk5weIZ6MQ3ubqTWPgKOVDKcYejIsoKQFWaOHaeQjjE+EuL2
      3Yf0hoLQUqjKdSB4KHqEMIgnMpyYHiGyt0MUK7XkGgPTJ7AYOljMtAKDeDLD3OQQ8USSS/ev
      c/GVr7D+8B6e7j48RZALRdPvoRAGl9/4CUMzJ+nu7W0/J7hWq+HzecmmUzRbBl3hbqrlIv6u
      bvPb6j0mht4knc5gsbsIeBzUGi16wkFkuQ5Gk3pT0BMOHWJHa0GtUkbRDHrDAeS6hlIt0dSh
      u68Pl93c52GtUkLRDEIBD9lcASw2gj4PLo+XaimPwxMw/R4KYZBJp2jpEA6H2sMAOq0RO5hF
      WyyBOq0RO5hFWznB5UKW1dVVNnciJKJ7bO/FEELQatSIxI92LlBDrrC2tk6jeXBMajoRZWN7
      D+MQJmCtXmV1ZYVStU6tnGd9cwfdEAghiO1ts7ufMD36ApBJRFnfOhg7HtmiJL8f9hSCeGSH
      /UT6ECrCDKJ72+xGExgtrb0MIBjupddnQxM2PP4Q5dgm+UaTG9evsbK6/lnL+6UsP7yH3+vg
      4eoOcNA1jnKcSM78znCGsDA+PsLNWze5decBYbvCo+0UIPCFeklvL1E5hI12t7+LVj5CtFCn
      GN8m+v53L8Q32C82CfoOozxU4A/1ktpa4sGDu+1lAACr2zHmJobwe52kKiqNxAYV3UYhXziU
      p+mvjuDhw0V8Ph8gEfB72U2VGehymz6yy+0hsbeF2xdAIBEIBqhVqkiSBa/LSr4O/kNIhnPa
      IF2u45AMAoGPjoctZLMISeLmzZumh7IlyYrXaaFQh5mpyfbwAT6OLlmwWeHNn/yI4MAsgYFZ
      vjZ9jCtX7h1il+XHx+HyMjzsR63muXw1ikVOYQ/006g3cNvNffKl43sohh2b1CIY9HB3eZep
      6Rmu3V6kEFmkZ3IBRdXwmRqBOWiN6PN6aWkq8XSOuhLgQXqNgYlpklv7eP1B08PYwtB57dUf
      0Te1QNOQ2iMK1EmG62AWbTEDdFojdjCLtpgBOnQwi7Z6rJbzGWLJFFVVEHRCTRWcOzXDtRsP
      GZmYZGrscFuNd3g8ttaXKZRkFs6dR8g57m0kefniWZRKnrWtCO5AN8dnxk3VIITB6tIjag2D
      43Pj7RUFCnb34UJjcHSSYydOQTVLrlggU6njsNsPJZbd4VdnYmqGVi1HoVrn2ufkeJMAAB5U
      SURBVK0HlAsHezduf5jJ0UEie3uma5AkienZOUqZKLjb8Jzg3USekV4/SilDtumgt2eI3/vq
      F3h079bRywbt8AmEYeDxetjfXMbu7SKXySIrCoYhEOIgQnMYrRGFYeB2Oqgpbdgasad/AKsE
      d+/eY7B/lGQiQa5QZHhi5hCTyjo8Pgbra2u0LG6OnzhLyOfkUdBDZH0ZT7iXYrHM8Mio6SqE
      0WR1dQ2nvxshZztOcIenm7aYATqtETuYRVsYAHRaI3Ywh7YxADjIBo1GI6RrgqGgg2y+zLPP
      nefh/UeE+weZm5o4sn7A1vJ9iopGeHCK6ZFeHt65gdrSGZ8/R3+X55BUCBbv30FW6kwuXKA/
      4OTOzRvUtSbPPP8yXnN7I7K9sUIymWJq/hTpZBxF1Xnx4nkkYGPxBvGqmy++eMZUDUIYrC0v
      kc7kOHNmob2iQB+0Rjx39gzHF85gbdWJ7a5RadqoK+aftPLr0FQVMuks8vsNqOq1CplMFrV5
      mIU+gnS+yrkTE2xsRTH0JuWGznR/gP10yfTRR0dHqVWqOLxBzp46QbmQB0AupUmX6ugt84+5
      kiQLo6PDVKo1onvb7WUAAJmSTJfHQXRrCVt4jP5QgHBPH+V86khngyYLCi88d4ZKPkMkGqeq
      CZ45OUuhUDxEFRIWCaqVKh63jXgqD8KgKtfxeV0mjy1oNOHEzDCJVI7rl9/l9LMXycSj5Msy
      oYCXbC6H2U0yhKEjLC5Ge7yohqU9okAfT4aLx+MMDw+x/PA+ksPNyNgkpXQMq6eLoYGeI1UU
      /3GqpRzRRIbh0VGKxTJ+l4V0rszk9Cxu5+GtRCuFLLFsmdmJIZK5Gh5rk6LSYmZq3ORrJ9jf
      3UZWBWMjfaytb+MNBAm47IQHhnFZWiSyVYYGesxVYejsbG2iW5xMT462nwF06PAkaQsD6NDB
      LNrKB2goMplMhlK5Sl2uUq7KtDSVbCZDrlA8cqkQQhgUC3nUZgshDKrVj5pgGUaLWu1wHPeD
      VoRVDEBvahRLlQ9fL+SzZDJZtJb5rSUbikyxVEGIg1aIH4ypqXUymQz5YvkQ8rkEcrVCpSoj
      DL29DAAESjHFw/VdkskUD29eoaS2MFoNbt568FmL+wXq1SLFSo13371CvVriuz989cP3yrkk
      P/rZm4cjxND4/n/4G2QEV967TGzzIeuxwsF7QnDn5jU03fyfXjabYeP+NaIFhTuXfsxq9KPI
      U6tR4dbdJdM1CCHIZnPceu8tEpl8exmAy+Mjkcpx4dwCk9PTKHUVr9tNORXj1IWLR24PwBPo
      pj/oxLDY8QTChAMfxftDfQP4Dsn5laxOhgf7OIjECOZmx0nE00iSRMDnwN01eCha+np7SBeq
      uB0WRkZGPnzd4XSTicd59uKzpgcxJMlCTzhASdYI9/S0lwEAlGUVt13i+ls/xT84hWQY7Ocq
      DATNDuM9PqpS5gc/eZOTJ46hyDVqtRpyrcKN2w+oVcrUajUamvmx75amUq3VqFRk3HaJ9c0I
      /d0u7jxap5Tcx909aLoGMIjGkkyNDZDJFimVq1QqFVYe3KHcaJEu1eg6hNPqDV0jkSky2O0j
      mUi0nxOs1BU8bjfFfJ6WIQgEQxi6hsvlOXIzQEtrUCxXkSw2vG47NbmO1+cHITB0jXpDwx8M
      4XKY+/RtNVWKpQoOpxuf20FFbtAV8NJQW9itYEg2HHbzu+MqcpVG0yAU8JEvFN6/Li7sThda
      o47L4zE/jC0E1WoZQ7LhtlvbwwCEEOj60ez/36G9aYtcICEErUPYJu/w9NEWBvAB5UKWRDqH
      xe7CaxPUDSszEyPsbm/hDvYy2Bf+rCV+AqOlsrK6jq+rl4ATUvkyU9OzuBxWUrEIRbnJ7Ow0
      NpNOhssmI2iWAEO9flaX1pg9fZLU3g7lSo2+kSn6wn5K2SQlzcLEcL8pGj5OMhahJDeZmRpl
      Z2sbb6iXkYFelGqRSCyFjpWTx+dMbo8u2N/dQsPB6ECblUQGw730eK3oVhfB7l5qiR1S2STR
      gsbm2tKRqwnW5BKpgkxfbzcuX4CQs8nyVhwAf6gHUYmzb2JrRKeusLgdAyQiG+uoSIxOTCFX
      y/j8BxEpi9VgbXXLNA0fJxDqQS9FiRUajE5Msnj/LgLw+EOM9QeoN6VDSWXp6R8mtbNMVbO0
      lwEArO3EmB0fwOO0kaxoOEWLaiFBTRWmny7yuNg9QY7PjPHOpUs4HHZiyRwu54GzabcIsuU6
      dszzbbzeg45zksWKx3PQgtFoqchNC573nV63x2v60aQfYLcIchUVu9VCtZAGq/PD5LfF5Q2O
      H5syXYMkSYhWHUUDh9PRXksgAGG1Y7PAm6//hNDgDI2mQbi7F61RP3InxMiVEtlcHl8wzN7W
      JnaXF8locPnqTXr8TjxeE1siCsF+PEGtoCDLVUq1GslEmokguPw9NJU8t1eSDHdBpVKioem4
      HOaeELO5uYnH60Up55CrVdxuB49uXWPy9AV0rCaP/74KXWNrJ4LX66GcjbdHFKiTDNfBLNrC
      ADonxHQwi7YwgA4dzKKtfIByPkMskaTcEIRcUG0YnDo+xdLaFoGuXo6Z3FbvsRE6V956i7mL
      LyMntig1JCYmpwgFPGysLFJWNBZOn8Vt8tpX6Cqvvfomr/z+18jubJGIxxmcO8dYn5+lhw9Q
      DSvnzp3BarIDtbW2TL5U5eTZU9y7fpehiQmmJ8do1SvcW1wjEOrl+OykqRo+aI1YUZqcv3Ch
      vaJAwe4+aNWZmpnl2MnT1Isp4rFdNIuP5Uf3TC+ne2wkK10eO1W1iSzLaA2Z2vunoe9F9nGL
      Go82Yocgw4lT0mkhMTo5Tb1pMNIXQBgtookUaj7CXqZquo7RsVHy6QSKXEdpNsnnCwhxcIRT
      JBInsn8I10KSGB0ZJhWPUcol28sAAGKpEn1dXvY3HuHsnWRq5iRzo934AuYfrvDrMDo1z6mZ
      YdY3NtnZ3eeFF18EyUqoy3+oOnS1RBMPNBX2EwVefP4iks1F4BBqguuqwcnZEXbjJT7/+Zcp
      pmNEI3vsbO5w+oWXoFnHbE9PGDq6xclor5f9dKn9DGDh9CkskkBWDfwOg3L1oEjmuYsvHLlk
      OL3ZQHiCaKUCar3KbrrKS8+dwWq1Uq2UcHWPMTscMl2HqlToGh4mH08hWZycOjUPkoTVaqFU
      zDEyd4Zen/lnJFXLeRRLF6dnB4nsbLJw/iIuu5XpMxeQqhlOnjl7CA8xiXw6gX9wlnML8+3h
      BAshOo2xOphCWzjBQojOPkAHU2irJVBdrpJKpSiUKii1yof1pZVSgbp6NHuHGnqLqqwghEG5
      UvnE65WP1QibidBbZDIZWvrBCrtWqXy41lbr8oc1wmZTl6vki6UPW6FXqgd5UMLQyWYyh1KX
      DIJapUSpUmu/mmCr1UZLLrC2E6dYLLFy9wbR+C6LWwmuX7t25IriQfDw1ju8feUu9WqZV3/6
      8w/fqRTTvP7m5UNRUSrkaLU0rt64Q6Oa45t//pcclOMbXLlyjd3V++QV89PNi8Uie8t3iBbq
      rDy4xWuXrgBQKxfQWi2uXL1uugYhBMVSmQc3LpPMFtrLABwuN7FElnOnjhEOBclXFeR8ip6h
      cSy0OIS67sciF9siXRMYWgOXP0ToYzXBXT19eA+pJjjUO4CtJWN3+3n77cuMjQ2hKA2EgGaj
      xlY0i8tu/k+hpztEulBDr8TZydSx6XV04+Dgap+1icXhM12DJFkIBX2UZI1QuLu9DACgoqi4
      bIJYPM1wbwDJ00M6somwOEzfyHlcAr0jXDx3EpvNRr1WoVKpUKuWuXnnAdVyiUqlcihLt0ou
      wc+vLjIzPsBLX/jiwXnAWoW7D1dxeAJMD3eTLZp9Yr3BfjTB6FAPsu7mpYvnsNtsrD+6RyqT
      4tW3rjM3PWp6Qq+hayRSefpCXlKpNqkJ/ngyXENt4HK6aCgyTSHh83ioKzVsDhcO+xH06YWB
      qrVA6Cj1Bm6PF4RAGE0aahOvL2B6Pa6m1lHqKlabHb/Pi6aq2Bx2mloLSeg0mgZ+v9f0EGSj
      rqC1BH6fB0mSUFX1/TEFSr2BxWrD7/eZq0MIFEXGkKw4bW3SG7RTEtnBLNrCADp0MIsjuGb4
      +ynnM8RSWbC58NsNak2J+bkpNpceMDh7hoDL/IKKDr86scg2JbnF/PwcNGU293Mcn51AU6qs
      b+/SMzDKYK+5O+NCGOxsrtOyepgZ628vJzjY3Ue3x4Lk8NI7OEIltkVeaVHJ7JOrddqmHHW6
      +wYxSvtE8wrXr15jdX0NAIvNwezMDHdv3zoUHf3DY+R2l7lz9057GQDA6naM2fF+0FWqWgvR
      MnB7jl5XuA6/iEXo5KpNyrFVCg0rlXyOpm5gczhJRXdwePymR4EkyYKdJnnVxsn5ufYzAIvD
      iU0y2NjYxuPxgq6SzlfJJONHrSa+wycw2NjYwOP10DMyx+9/7cvMTE+wdPsa27s7FBUdt9P8
      1ojC0HntJ6/SPzBAo2l0nOAOTzdt4QQLITrnBHcwhbYxgE5RfAczaAsD+IByIUsimaLcEHR7
      rRQrdeZmJ4nsx3F4/KbXkz4u9UqB9Z19HJ4gPluTXKHM+LFTdPudbK4tU6o2WDhzzvSaYIDI
      xkOqUjcnZ4Z4+2ev87mv/TYuILK1RklpMnfiJG6buS7hzsYq+VKV46dOsbmygsXp5fTCPBKQ
      iqwTr1g5f2rGVA3C0FlZWkRpwunjU+3lBAfDvdgMldHJKcYnJpCLWXAFOH36JPs7h9Pe73Fw
      +UOcOb3A/u4WIxMzjPS42YtlAYnpuRP4pTrpcsN0HZpcZH1nj3y+zObiXdL5Ki1A6E0WVzew
      2ezYDqGcbnR8ArVaILq3ieHuo5JLoLUELbXG0sYmxULZdA2SZOH4whm0UopSrdZeBgAQTZcY
      CHmRLDZCQTelqsrDW1eYOXnus5b2C0jAw1tXmT5xFl1TuLMSZ2F2iFpNpl7Ns1fUGe0x/5T4
      /b0I3d1hsrkcubKC09KkkC8iK3WsDjddVoXNRMF0HZLFSk84QKUiI4QBCOqKTCwSIRTuJps3
      /5xgJIlCchfN3Us9l2ivJRDAwNAQVgzW1tYQjiABq8yWLPCoNYToOVJ1wUolR04ReDWZrfU9
      egYGKBVyxJM5DCXHwEAvlapCKGBii0Rg5uRZdLVMIKEwOznI7toaPR6Jrd0sx2fGyFYbHJ82
      uzbZYHN9lYZwcfzUCSIbq3iHJslGdxiYOcGEVcMbyJnep1QYOivrO/QNjBDo726PMGinNWIH
      s2gLA2gDiR3alLZYAklHaV3T4R8VbeUEl/MZHt69zmvv3GR95RFvvv4auWKBe/fvc+my+fWk
      j43Qee0732IvX+XBjXe5fX+RYuWgGreQjvDt7//skGSo/NW//SY1oJCK8Lc/fH9cYXD18iXe
      fvMNqqr5yYRba0u888bPiCYz3L13j0uXryEApZzj3r17vHPV/GQ4IQyWHz3g56/9DFlttZcB
      BLv7aKlNnr/4DGNjY1SrMi5vkL6gi3rzCGaDSlZGhvrRhcDucGFoChW5DkC4fwiX9XCWdpLV
      yWBfNwII9w7hfH9co6UhNyWODYeJpIqm6xgdG6dalXH7uzh3+iTVykHY0xPsocttQWuZv9kp
      SRbGx0aoVhWsNlt7GQBAtqwQcFlRVMHxiR629hKEh6YR9dLR6w36MQYnZlmYHmJze5uNrd3P
      Wg66WmM3lgFDp1iV6fKbG4kCQa2ucXp+jGg8w7tvvcmFF18ivrtNJpdncOo4aiVvekKj0Fuo
      ho3JAT/ZsoL1G9/4xjdMHvOJ4vV7Cfj8FDIJWs4QM6M9RHZ2mZ4/ic/jOlL9QfVmg1xZBgEe
      myBekDm7cJym1qJeLWOxWfEEzD8nWFUqyE0dYUiotRIWqx2PPwBYGR/qoeUIMj7Ybfq1K+XT
      yIab6ZEQckOn2Wzi83pwu13sR/Y4dvI0XrfTXBESZJIx7MEBRsLu9okCtYHMDm1IW0SBOq0R
      O5hFW/kAcrVMNBolkytSKxfJ5t9vs6c3KVUOp83g4yCEQTqZQGloqHWZZCqD8f5MplTLZHKF
      QyniMZoq0WiUfKlCU62TTOc+HLehVMkdQg4OHNy/dDaPEAbJeOxDHcLQSSbiNLTD6PwhKBfz
      5ItlDL3ZXgbgcLqwGwq78QxVWWHr0S3y9Sb3bl7hvRt3P2t5v0CzIWNINi5fvkyhUEAtxVna
      SgKCQqlManuRWEExXUc5uU2iouN1u7h69SqNfISNeBFh6Fy7cYfI2n0yVfNn2Eq1RnLzAfuZ
      DEvr+wTfd7wbchWLzcG775rfKlIIQU1psHTnKplsvL0MwO5wsruf4szJWboCPnKVOpXEBilZ
      oNZqR85PcLj96HIebG4GhkfI5wuEQn5AYmRklHxJJuAxvy+/wxfG3ixz484DrIbG3aVtgj43
      Qm+B1cZQTxfZovkNcrtDARK5Kh67k+4uF+9dvY5hCNz+LpRCAqv7cGqCgz4XRbmJ2+lrLwMA
      qCoqTqtgPxpnIOwD7xBfeOEcXvfRK4yvFtLIhh2ppbL58Cb7ZfBZNa7fusety6/TcndjMczf
      v5AbTYJ+D3qribA6OTk3Rmxng7vL21gNje1EnqGeLpNVGOxFogz1h4kns3j9ATB0lu/fYW9/
      n5bdh6Ga3Z7xoDViNJ6mJ+Amma+2RxTo48lwzWYTu92OpjbQhYTL6USSBM1mC7vd/Kfp4yCE
      QV2pY3e6MFoazZaO3eFEksBoNWnpBk6XG7vN3IIYw9Cp1xu43B4wWjS0Fh63k1bLwCIJmrrA
      dQgF6U1NpakL3C4njbqCzeFCEgYWq4V6vYHT5cZmNfmZLASq2kBIVpx2W3sYQKc1YgezaAsD
      6NDBLNpiH+ADPmiNaFgc+Ow6siZxfG6cBw+WCfUNMjU29FlL/ASqUmFja5dw/wgBh8HOfpLp
      ueP43Hbkcp7tvRgTs8cJeMxdfjRrRR5sRBgaGsFv14lkKpw6PosQBlvrqzQtLo7PTZu+E7y/
      s0lJaXJsdpLN9U08XT1MjQ2hN6rcX96id2CQ8eEBUzUcfOc1NOwcPzbbXk5wsLuPsAtsngBD
      o5PUkjvkchn2szV6us0/bfFxsdqdHDt+gof3brOxskRX0MOjtW0Abt66TTDUjfsQDskopSOU
      VIlwKIjb52d7c+PD90bGpyntr1NSTZdB//AYohwnXmoxe2yO5Yf3EYBcTJOpqHSHD+MeSoxN
      TpPdW6XSaLN9AIC13QQzo30YzTq1poGwB3n5uVNcvvT2kUuGs9mdJLeXCA9NoTabrK2s4fMd
      xL5LpQpWrcS9FfMT47qGZjg3N8ybb13CbrNjeb/uUJIsWIw6OdVGl/k+MOgaRaWFFZ1SNonF
      7sQwwNs9zHOnZ3n7zbcOIQwq0axXaegWthdvt9cSCMDucmOTDFbeb42o1EpUSiW6evqPVCIc
      gFzKcOXeBuefvYAu9eD2txBajUuXr3NifpZ4tszwzKjpOvK5LKl8if7BYdLJGPW6Qj4bZ2U7
      Sym2wuDUAnJDw+c20woOWiO6PF40uUiuVMLn9fDg5hW6BoaplMv0DJi/hDV0jY2tXbxeHzOn
      nus4wR2ebtpiBui0RuxgFm1jAJ3WiB3MoC0M4AMOWiMmKSqCXr+VQknhzPmzrC8t4gp0Mzc1
      caT6AgHkEtusxxVGwk5yxRLjc6foCbjZ3VwlW6gyf/ocAbe5O9hCV3nt1Td55etfI7q2TKki
      s/DMBTx2C7dvXMUf6mFq5hhmd2jc2VghV6gwd+IEkZ0dWpKNZ84sUK/k2diNYXV4OXXc5NaI
      wmBtZYlyrcHc9Hh7RYGC4V6susrkzCxjYxPUijkSu2ukqwZWi5Wj5gXrmsLD5Q2UWo2xqVlG
      uj3sJ3IAbEfiHJ/sY3Vz33QdktWJxy6hSzA7fxK/RSVTrgOCUqlEs2lglcx3BUfHJ2hUC6jC
      wehQH9nMwbVw+8P0h3xk8znTNUiSxPj4OOV8Fmegr70MACCWKdPX5cZqd9AX9lAoK4R7B4nv
      bWIcsThoLpUgEAqTzWVR6zXurMZZmBmiXKlisVjQ9RZW22FOwhJKKcNeGcbCTipVhVe+/FUc
      Wp5I1vx6CsliZ7AvTDZfwhsIIekNKuUKTV2nq7sPTa6ZXxMswO5wE/I5qSj19loCAQyNjmLF
      YHl1Fd0RYmHhBDtrq/jHprAcsfVP/9gM/SNjBLsSRLbW6R8cpFjIkUwXOD47yU6qwsLCguk6
      VKWK1eslm0hTiGwwPNhzEBrN1ZCaMk0pwEKv2ae0H7RGVA0nwwELq+ubjExMk03s4/QHKRRL
      TM3OmawBhNFibWUZR6APh1ZsjzBopzViB7NoCwNoA4kd2pS2WAJ1WiN2MIu2MIAPKOcz7O1u
      kahamOr3sB+Jcfq558klY6xs7vOHf/C7RyoMqv5/7Z3bcxr3FYC/3QWEECAuAkmWMBgsW5bt
      pko6TVLbbSYzmb60f7Fbu23quq5dVZKrSJYQ4n5fcRHLwl77gKJmpk/OzFIx0ffEsA97WPbA
      nN+e33eULgcfcsi9IVGvjuld4m4mQzjo49Wf/4iNwMYnX7AccnZGgFwvUag2GdseVLnM8lqS
      VGaDBa+b4skue3mF33/zxNEYYKJGLBWLZB59Rqteodsf8vVXT1F7bY5Oi3QVja+ffeFoDLZt
      8d37fUrlCtuf/ny2VoEWo3H0sc6vvvzFRI04GOIPLhKUdD75/Om1uvkB5hZCxIJeNMPCO+/H
      1hQ6F5Ntf8pQxe8VOc1XHY8jupLgfmqFi4FKMBhk0JVRRpMn66uJJJI9Ha1k4naSfl9hYTHM
      9s+2UAaTlaeJGlFgCmbEKzXiYKBSK+VmKwEA2v0hgTmBi6HB1p0YlZbCSblNMh78f4f2Pyj9
      DqFbaaxRn6W1FA/Sq5ydnXH4IcuXT54x5/awvLzkeBz66II/fLvDr598RjJzn2TMx2m+wHGu
      7Pi5/4tFbzBi+2GSYrnBi+fP+fzpM0qnx9SbTVbubE1FjWiZOqohkl5dRMczG0XwD2k2m8Rj
      MarlAkNDJJ1KILdbRJdi124Z1NBUTnN5IstruEyVhtwnk0khtzsI1oiR5eb22orjNU63XadY
      a7EQDON32/RUk/TtFeTuEG0g0xmM2bj/wOFhfTaNSomeapJYjXJymsc15yMWCuDz+ygVS8Rv
      JYksOusotW2LcuEMQ/SSSqzORgLcqBFvcIqZKIJv1Ig3OMVM1QCD3jm5XI5qo02/06bWlLFt
      aDWq9BXnx43+GPodmbFhYlsmrbZ89b5l6hQLRTTjGs41cIhB75xKrTnRWVoG8nn36lhHbtKa
      iqLRptNu0Gh3sK0ZG5Ax7w8S9NhUW13UsUHxux3qjRIHuRZ7O++m4tn8KGyTt395SbU3RFX6
      PH/xp6tD/3j9NxYCAQzzp9Pmraga54UDCvKQ/XevefnqDQAXzTzHpS5ukSn0AtmMDZvj3ddU
      W93ZSgBJcnGcK/F4M03QP0+zN0QUJORajr5qOH/1PhZBYnU5DoAvECbkn7861Gg2KJwcUKg6
      3wF5XQgvLlBu9dHPC2TrQ4zhBYZl0SiXGI6HvN3ZxelSTxBE/PNuzgc64Uh4thIAYKBqeCSb
      s3yRWGiBRqPJSiKDhHHt7n/T0Kg3WzQaLfqdNrIs0+nIvPr7O9Zu3UKUJARx5r6CH4lFLpcn
      Fl3E8kb53W+/IhwKcLjzlvnldSTTwCVJjne0W6ZGvlghHPBSr5ZmYxXoh81wpmkiSRKGoWPb
      Ai7X5LUgSrgkh3d0fCS2baFrOogikihgGCauy/ZnURQmqkSX6yfT6mEaxmRe2uVnNs1J/SOK
      IqZhIEgSktM/CJeWQVsQkARhNhLgRo14g1PMRALccINTzMRzgO/5Xo1o4MLvNhloAg/vpzk8
      PCIcX2N9xfm2go/B0lR29g+IxFeZs0e0Ogr3trbwXQ7F29/9J5uPtvG4nP3bH3RbZPMV4mtJ
      tF6TrqKx9egRHkmgXszS0ed4kHHeT3SWPaKnGNy7mySbPSUQWeZOYhWlf06+VGOkWXy6/djR
      OsC2LY4PD9BsD1ubd2erCF6Mxgl5LLzBCMn0BsN6nr3dN7iX0hzu71w7M9x42KXS6BAJh4mt
      rJOIunh/VAKgmjvgr292GRvOBz3vD7O5kWJvd4/1VBpx2KQsTxrRQtEQZ1Ma25pIZRAGNeoX
      Ng8ePubo/USNuBCMsL40j+VemMK2boH0xibt0hEDQ5ytBAD4kK+RWVtCHymolk08sYlSy14N
      oL5OzPmj/ObpL/n25Qskt8Tb3RM2N9bBNvjXv7NE/G7Ou85PZpEkiUqxiNfnw9JHXKgG1mVN
      JUnTkwmY2ojeyEKwTZqFIwLx21en3j84Zete0vEYBEFgrPTQLReGrvMfQfGHYhl7DgMAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='taz ranges' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='cumulative distributions' width='192'>
      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
      0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC0EoMwIvbVcwvr6EV80yOT5DJ
      Znj66AHx7Syrq2uVqVKICiltSqSuMTw2jddSZHHawonTfdz9/hsCLSfov3+fmlAQjz+I02qq
      yDQ9IcqttBFAMdHZFmZ9c5OtdBGvtwazK4BDL+D0uTFRYGpiClVVJQDiSCh5UrymaQRbuult
      q2P46QA9p8/jNWXImj0vJsSEG7Db7ajq3ndvE+KwKDEACh0ne+l4+erDq+GXSzW4gdCl98tX
      mRBVIEeBhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkA
      hKFJAIShSQCEoZUcgPXIMpPTcxQLWUZHRkilUzx+cI+NRJrl5dVK1ChExZQ8I2xiYpJiXmUj
      skTnqdPcu/EtgeZO+u8/wFsbxOML4LKbZUqkOBJKGwF0jXxBxWyGVKqAy+XE6gnhsUBNsAaL
      SWX62bR8+MWRUfKUyNbmRuLbGU51tDI2METfmQu4lTR1Fg8r02P4Gxux2WwUi8XKVCxEGZUW
      AEWhq+/Mq5eh2oaXS27cQODC5fJVJkQVyFEgYWgSAGFoEgBhaBIAYWgSAGFoEgBhaBIAYWgS
      AGFoEgBhaBIAYWgSAGFoEgBhaBIAYWgSAGFoEgBhaCXOCNOJrq2wuLhEvlAkshZBVYuMjwyT
      zhd5/nyjQmUKURklzwl2e2oYuneP7fUVqAkyOTaIp76Z/vsPqamto8bnx2aRgUUcDSU+J1jB
      bi5ir6knmczS0dGKarJCOolqVsgkY4yMTpJOp9E0rUIlC1E+JY8A2cQm/vpGmuxenjx8QtvJ
      MzS4VLZUOyvTI3i8XlwuF+l0uhL1ClFWJQfA03CCsy+XP27qfPVzN9BU90mZyhKiOmRjXRia
      BEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRA
      GNquAcjmcns+6bGYzzA7v4imqSwuLFBUC4wM9rOdLRCLrVe0WCHKbdcAPB0c43989X/RdoRA
      5+6dewR8Xsb7H5JX4NZ331CwOOi//4DlyDrZglqFsoUojx0BuP94kC//9y9ob24kl8u//qau
      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
      OYGcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      ywAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='threshold map.2010' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
