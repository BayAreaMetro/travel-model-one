<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0606.1812                                -->
<workbook source-build='9.3.3 (9300.16.0606.1812)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='long-obs-est-vmt-per-capita' inline='true' name='textscan.1vueseq0zfohkx112y1iq18qdc24' version='9.3'>
      <connection class='textscan' directory='M:/Data/HomeInterview/Longitudinal VMT per Capita and per Worker' filename='long-obs-est-vmt-per-worker.csv' password='' server=''>
        <relation name='long-obs-est-vmt-per-worker.csv' table='[long-obs-est-vmt-per-worker#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='string' name='detail' ordinal='1' />
            <column datatype='integer' name='taz' ordinal='2' />
            <column datatype='integer' name='observed_persons' ordinal='3' />
            <column datatype='real' name='estimated_persons' ordinal='4' />
            <column datatype='real' name='mean_vmt' ordinal='5' />
            <column datatype='real' name='sd_vmt' ordinal='6' />
            <column datatype='real' name='sum_vmt' ordinal='7' />
            <column datatype='real' name='vmt_per_worker' ordinal='8' />
            <column datatype='real' name='latitude' ordinal='9' />
            <column datatype='real' name='longitude' ordinal='10' />
            <column datatype='string' name='super_district' ordinal='11' />
            <column datatype='string' name='county' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>detail</remote-name>
            <remote-type>129</remote-type>
            <local-name>[detail]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>detail</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed_persons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[observed_persons]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>observed_persons</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>estimated_persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[estimated_persons]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>estimated_persons</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>mean_vmt</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>sd_vmt</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sum_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>sum_vmt</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_per_worker</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_per_worker]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>vmt_per_worker</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>super_district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[super_district]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>super_district</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[long-obs-est-vmt-per-worker.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;' value='One Std Dev Above Mean' />
          <alias key='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;' value='One Std Dev Below Mean' />
        </aliases>
      </column>
      <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
      </column>
      <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
      </column>
      <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
      </column>
      <column caption='Upper Bound VMT per Worker' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
      </column>
      <column caption='Lower Bound VMT per Worker' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
      </column>
      <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Vmt Per Worker Category' datatype='integer' name='[Vmt Per Capita (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[vmt_per_worker]' peg='0' size='1' />
      </column>
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
          <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
          <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
          <alias key='&quot;BATS&quot;' value='Observed (2000)' />
          <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
        </aliases>
      </column>
      <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Mean Vmt' datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
      <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
      <column caption='Sd Vmt' datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
      <column caption='Sum Vmt' datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
      <column caption='Super District' datatype='string' name='[super_district]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
      <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.436904' measure-ordering='alphabetic' measure-percentage='0.563097' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:detail:nk]' type='palette'>
            <map to='#81a88d'>
              <bucket>&quot;2005_05_003&quot;</bucket>
            </map>
            <map to='#81a88d'>
              <bucket>&quot;CHTS&quot;</bucket>
            </map>
            <map to='#972d15'>
              <bucket>&quot;2010_05_003&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;2000_05_002&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;BATS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:detail:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;2005_05_003&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BATS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;2000_05_002&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CHTS&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;2010_05_003&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='county averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Worker by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='county averages.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Worker by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' />
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.5082871913909912' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='cumulative distributions'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Cumulative Share of Persons by VMT per Capita Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Vmt Per Worker Category' datatype='integer' name='[Vmt Per Capita (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[vmt_per_worker]' peg='0' size='1' />
            </column>
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[vmt_per_worker]' derivation='None' name='[none:vmt_per_worker:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[pcto:cum:sum:estimated_persons:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Vmt Per Capita (bin)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='8' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='9' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='10' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='11' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='12' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='14' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='level-members' level='[none:detail:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>40.0</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='196' />
            <format attr='title' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='Share of Persons' />
            <format attr='subtitle' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' value='p0.0%' />
            <format attr='cell-w' value='18' />
            <format attr='cell-h' value='18' />
            <format attr='cell' value='18' />
            <format attr='cell-q' value='90' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='-90' />
            <format attr='display' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <shape column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3870'>&#10;Cumulative Share of Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3870'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3870'>&#10;Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3870'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>VMT per Capita by Travel Analysis Zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
            </column>
            <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
            </column>
            <column caption='Upper Bound VMT per Worker' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
            </column>
            <column caption='Lower Bound VMT per Worker' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
            </column>
            <column-instance column='[vmt_per_worker]' derivation='Avg' name='[avg:vmt_per_worker:qk]' pivot='key' type='quantitative' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Mean Vmt' datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='None' name='[none:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vmt_per_worker]' derivation='None' name='[none:vmt_per_worker:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column caption='Sd Vmt' datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[sum:estimated_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Sum Vmt' datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='member' level='[none:detail:nk]' member='&quot;2010_05_003&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]' included-values='in-range-or-null'>
            <min>30</min>
            <max>99</max>
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>82.583562721195406</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_worker:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]' field-type='quantitative' max='-13385662.761443404' min='-13868369.017206812' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]' field-type='quantitative' max='4717637.088082823' min='4371292.6295899199' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='23.0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' palette='tableau-orange-blue' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' />
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' />
              <size column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='900'>TAZ:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='900'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean less One Std Dev:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean VMT Per Worker:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean plus One Std Dev:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Observations:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Workers (est.):&#9;</run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='superdistrict averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Worker by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>Superdistrict</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[super_district]' derivation='None' name='[none:super_district:nk]' pivot='key' type='nominal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Super District' datatype='string' name='[super_district]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]' value='34' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]' value='344' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk])</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='taz averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Worker by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>travel analysis zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]'>
            <groupfilter function='level-members' level='[none:taz:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='88' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='Travel Analysis Zone'>
              <formatted-text>
                <run>Travel Analysis Zone</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Workers:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok])</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='taz ranges'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Observed Average with Plus/Minus one Standard Deviation Vehicle Miles Traveled per Worker by</run>
            <run fontcolor='#000000' fontsize='20' italic='true'> County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>travel analysis zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
            </column>
            <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
            </column>
            <column caption='Upper Bound VMT per Worker' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
            </column>
            <column caption='Lower Bound VMT per Worker' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
            </column>
            <column caption='Weighted Mean VMT per Worker' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_worker])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Workers' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column caption='Mean Vmt' datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column caption='Observed Workers' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column caption='Sd Vmt' datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Sum Vmt' datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column caption='Vmt Per Worker' datatype='real' name='[vmt_per_worker]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' />
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]'>
            <groupfilter function='level-members' level='[none:taz:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' direction='DESC' using='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]'>
            <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' value='125' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='64' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='88' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' value='136' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='Travel Analysis Zone' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok])</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='county averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='county averages.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='superdistrict averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='195'>
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='taz averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='195'>
            <card mode='typeinlist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' type='filter' />
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='74'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='taz ranges'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
          <strip size='195'>
            <card mode='typeinlist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' type='filter' />
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='113'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='cumulative distributions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='shape' />
          </strip>
          <strip size='200'>
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='83'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' type='size' />
          </strip>
          <strip size='212'>
            <card mode='radiolist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_worker:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='county averages' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='county averages.chart' width='192'>
      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
      AhDkNP8fZe9ISmofStcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='superdistrict averages' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='taz averages' width='192'>
      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
      iPMgGCBe1lMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='taz ranges' width='192'>
      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
      SOui1QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='cumulative distributions' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAXR0lEQVR4nO3dSXAcV57f8W9m7QWgsBT2HQQIgiDARaSkprql7vGM1GE7psMOR4dvPvji
      k312hMN3e+xjhx3R47A9hwnbh3GMQzNhT6unRUotiis2YgcJFNYCUNhqQe2ZzwdIlDgEIBRY
      C4D8fyIYrAJevvoXUD+8zFf5sjSllEIIi9JLXYAQpSQBEBeAYndn51RbSgBEwY2PPCORMRga
      GsI0zVf/lFLMzsyilGJp+hlfPX3Oo2cjKKVeff/gf5OhoWHGHt5jfS/O6POJgz6U+qaNwdjT
      IdSr++Zr/89OjjE6Osp2JP7qay9mZzGUwl7qH464+Bqrvcy8nGc/BZ/+5V+g6zZam+qJ26tZ
      efGc5o4uErEwqWwt8USUR1/dx8hmcLvdhDU/H713lUgkjFtPMzfyAEdFA7/97edoGnhsJlWd
      vexsrvF4dIrM3jqGAqddw1bZxu2BNhaDe3z8hx9hZtM8+v3nbKfsmJFNbHYlI4AovNq2Hqa+
      vkdnby+e8koaGurp673EfipDXV09XqcNgO4r/Xz8Bx8S2tzE66vF49Rpam3Drmm49Cw2XzPB
      hTlaWmuxeatw6wZZU9Ha2obTCWYmyeZmCF+1H4dNp7WtFZtmRzdTxGJRVgKzJPRq7CpLjd+P
      1wlaoWaBlFJomlbwNt+Wf1baHLVdrtuUul/I/XkeZ3srRLW/lvDeHna7Da/HTTSewUxFcJTV
      YDcTaO5K3HaNTDLO4uomLY1+lN2L12UjHg2jHF6S0TDVdbXsbgZRjjJcuomnopL9SBgFuB06
      wVCYOn8lTk85TrtONp0gsLRGW3s7G8E1yiur8dhNoqkCBiAej+P1egvexjRNUqkUHo/nyDbZ
      bBbDMHC5XEe2SaVS2Gw27Paj9woTiQQulwtdz23gPMnzPI1C9WsYBpnMwS5IvhWq5tMqyi6Q
      MrPMTk8RT2WObqMUS4EAWfPoPKb2I4xPzmAc0yYe2WF8cpqMYR5TkGJhbppY8uh6QusrjIyM
      EE2kj+7nVXcGc1MT7MUSP9j2OKuL84yMjBAM7b5VP9+nlGIxEMBQiqX5OVbWQ/nqmehuiNBu
      lJ3NNUZGRtiLJfPSs2lmCSwuo5RidXGe1Y3tvPSrTINAYJFUIsroyAjjkzPFCcDzB58xPD7N
      //rLvzmyzc7aS/7kP/6KxDEv3PXgGsvTT/j82cyRbba2tnj+8G/5+vnCkW02Fif50z/9byxv
      xY5s8/B3/4+RmQVOMjwO3/9rfvv1MKvrb/eLcrpcjD76kt149q36+b7t1Rf8+//wK1JGlq3t
      HX796/+Sn46NNH/261/xbGqRod//LU/GZznmT05ORr7+jP/6Pz4lvDbLn//FX/FyYTkv/b4Y
      f8yvfv3nKN2Glonw5aPR4gRgb2+Xnit97MciR7bxt/Rwtavx2H7aOrtYC+5w9VLrkW0amxtJ
      JTPox+y+/vWnn+JyO1hZWT2yzZ0P/4iqbIihyaVjawLY2NigtbGGrx4N/2Db4/j91cRMD1c7
      6t6qn++rbb3M1c4G0GxUljnxuj2k8vFKtbn48O57AAy+/1NaXHEejc7loWN458c/oQyN3a1N
      KmqbePr4QV76vXz9HRp9XuwuL3sba9z96c+KE4Bbd3/K5LNHfPThT45sEwzMoJxOJqdeHNlm
      /OlXJHQ368HgkW2mxkax+/w01FQc2eaf/8t/zT/+h5/Q19N5ZJulhTliqpxrl1uObPOt9z/6
      mL3NDd579+YPtj1OJp2ko7ObfB7Wri1MoblcTIyNMzI+TXvXJex5+K0b6TjTgTVCywssLs6z
      k3Jw42rn23cMDD98gsdrovu78TvSDNy8k5d+Z8ZGcHptzC+uY9rLaa2vzP9B8LdvRhTzIDid
      Th97wJbNZjFNE6fTeWSbdDqNruvHHgQnk0mcTueFPwg+yc/0tM7aQXDe3whTSpFKpchkMqRS
      qWPb5qONUopMJnPslJ1hGK+CeZRsNoumaRiGcWwtkPv04Eme52kUqt+T/ExPq1A1n9bJAqAU
      62vLVNW3ko5us5c0aamrYj6wTFtbE5MT0/T2DxCLhGlsqMfj8aCUOnZq8qDbt29jmiaaphVl
      GhQ41TToSZ7naRSqX8Mw0HW9ICNAoWo+rRP+JhWB6TF29tMMP59me2mGBw8e4y1388XnX2B3
      uxh68oz1zS0S6fzNYAhRaCcLgKbj99cAJppuw+O0sxtLU11VgdtXg57N4HZpYKaYmQ0UtGAh
      8ulEu0CmkWEnEie1tUNDTRmRJPzk3XbGRqfp6x/AZURRrgoWpsep76gtdM1C5M2JAqDbHLz/
      0R99c++7Ofgf1X97uwyAW+++n8/ahCg4ORtUWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoE
      QFiaBEBYmgRAWJoEQFiaBEBYWo4BUGysLhFYCZJJxZmammZ/P8LTx48J78dZC24UpkohCiS3
      JZFmlumXy3i1FIsv7fT1X+b397+ksa2N4SfD+Kp9+Kqqcdm1Y5cfCnFW5DYC6Ha62xvZCUdJ
      pk3KvB681fW4dI3yMhs2zWTuxaK8+MW5kfOi+EwmTWPnFbqaqpicmKX/2iCOTATcPgIz4zR1
      dOF0OslmZWmkOPtyDIBG1+Wrr+695//2QlYHi5yvv/NunsoSojhkFkhYmgRAWJoEQFiaBEBY
      mgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFhazgGIx8KEtvdQ
      pkEwuE42m2ZyfIJkJsv29k4hahSiYHJeETY0NIINWPa4KK+qZnpiHH9T48Ga4Fo/vqoqHDYZ
      WMT5kOPnfRqkEnG2I/tEokna2prB6SYbj6NIEQ+HmJheIB6PY5pmgUoWIn9yXhLp9/vZT6Zp
      bqpnaOg5PVcG8Olx0jYPC9MTVFZV4vV6icfjhalYiDzKLQCazs07772629Xd+82tKgDqPvhJ
      vuoSoihkZ11YmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFia
      BEBYmgRAWJoEQFhajivCTBbmZpiYnCKZSjM/v0AmnWR0eJh4Ks3m5laByhSiMHILgKbT2XOZ
      8O4OM6NPsDt17v3uHrrbxbPHQwRD26SyhnxMqjg3ct4FSoXX0b21JFIGdbXVOMsrMRMJHA4D
      M7PP5NQ8iURC1gSLcyHnq0Ik40nqmxqoUm5GhifovTqA14xiOCtYmH5OXUenrAkW50bOAahq
      vvTNCuAq7jZ1fPPVCgBq3v8gb4UJUQwyCyQsTQIgLE0CICxNAiAsTQIgLE0CICxNAiAsTQIg
      LE0CICxNAiAsTQIgLE0CICxNAiAsTQIgLE0CICzt0ADE9uNks9lDN4hHdpmenSeTTjI7M0si
      EePZ06dE40mC65sFLVaIfHsjAMlUigdPRvjv//P/kM0ar39TmTx6MkR9XQ3jQ0+pqCzjy3tf
      4HC7GHoyxPpmiHgqQzablXXB4lx4IwCj4zP81W/u88G7N1Hq767rNdnfjzM1+oTgXhqfrxx3
      ZS12ZeLxaGgqw8xsAMMw/m63QpxJbyyJrK+t4V/8s1/Sf6X7zdaanat93exGkrzbV8/482mu
      9g/gzEZR7goC0xM0dHThcrkkBOJceCMAXR2tx27Q3dv/6nZd47dtywBe+wxhIc6DNw+Clcna
      2hqPv7rPysZOCUoSongOnQWamxjCW9NEJBIpdj1CFNUhAdCoqKgkuLKIx1tW/IqEKKJDrguk
      MG1ubty4QnmFr/gVCVFEh44Adf4qQqEQyXSm+BUJUUSHHgNsrgfZ3d4iEk8Wux4hiuqQAChS
      WYOKijISEgBxwR06ArS0tLIYWKS8zFPseoQoqkMDsLwwS/fV68RisWLXI0RRHXp16I7e67S2
      NKNpWrHrEaKoDp0FCq3Mc/+LL1kL7RW/IiGK6NCDYFNpVNb4icfknWBxsR06Auia4uXcDN7y
      yuJXJEQRvXEMsPRyinBK4xf/6J/gtssxgLjY3hgBwkmT9/tbWArFMGVVl7jg3ghApdfJ7Mou
      4dU5QrvRNzaI7u2wvhHCNA22trYxshlmpqZJZQ12dneLUrQQ+fLaLpAyszS2ddPSoWGzHX7B
      iEcPv+ZS3w1mx55huMqYGBulqr6O4WfDVPrr8PkqsR+xrRBnzWsBMFNRPv9yiFQqQV2tn46e
      Pprrqr/XQnHrzrtMjg6TxM0Hd68QCu2Rjh3sLoVDK0xkTC53NMjnBIuSS2XSxFMJAJx2B2Vu
      7xttXguAzVPNzz/+e4wNPWInksRmd7zWWJkmoY0NyvzN3GhvYHJilhu3bmNLR9A8PgIzE9Q3
      1MrnBIszYXplDlMpylwelrfW+MMbH77R5pB3gk3iWY2B/h7WNjZpqC5/9R1Nt9F3bfDV/Xdr
      6r+55QZg8NbtvD4BId6Gpml01rXg81awEd46tM2bAdBsXO5oYTG4x+Bg/yGbCHE+2G12hubH
      cdodGObhVyk5fEWYUjS1NGFkMjhsrgKXKURh9LX00Nt8CeDI89reDIAyWVoJ4nC72d72MtDX
      U9AihSgUXdfRf+Dyt4d8V8frsrG6tk5bW1uBShPibDh0Fyi8n6S3pxt1xH6TEPmUNbJkv7mS
      oM1mw2E79Cz9gjjkkTQudXYQjiXkAreiKJ6+GMMws2iahlKKH18t3hUGDx0BJsceE8mU0WHY
      qfZ1Fa0YYVWK2903sOk6T16MFPWRDx8B+m4xPzuN1ytrgkXhmcpkYnkGXdNe7QoVy6EjQHA5
      QAY7Dnvx9sWEdd3qGiCRSQHgdhR32v31k+GyKebmA8TS0NHRga9cRgBReB6XB4+rNK+116dB
      NR2Xy0X/1Stsrq+j6baSFCXOHqUUK9tBApvLBDaXSWXSpS4pL14LgGZzEA5HSG6t4PU3sLq6
      Vqq6xBljmAbji9MArG6vsxW5GJfOP2RBjJ0X21mutftxe+Tq0OI75Z4yOuvbqK+sLXUpefPG
      UW5HTz8dPQdDXne5rAkWBzQ0ovEYX0w8JJbc507PjVKXlBdHTvPIRbHE9+m6zs9v/ezV/Yvy
      +sh57aIyDUbHnpPaDzMyMsru7jZfP3jA9l6EpRU5ZrioNE07OLnsm38XJQA5T/S/nBphbHqF
      bHSXSwPXePjlAxpaWxkeGqGyspyKyircdk1OoxDnQk4jgDIyvFzawG4kiKcNbLqOr76V6jIP
      tVUe3G4ngcAqLpesIRDnQ04jgGZz8PO//w9YWFig0V/J5Ow8g4ODaIkwDe3dLM5O0Nx+6UIN
      keJiO9W5Dl1dByfI3b5dc/AFTx0AVwdv5qcqIYpELuAjLE0CICxNAiAsTQIgLE1O+L9gdmJ7
      TCzNYNN1HDYHd3puyIzcMWQEuGAi+1Gaqxu403OT/VQchbwheRwJwAUkL/mTk12gC8ZXVsHk
      0gyb4S3KXF40rLP7Ew5vsBAYobq6ifa2wRPt+kkALpia8ip+0v9+qcsoOtM0mF8Y5uaNT1gI
      jLC7F6SmuvkHt5NdIHGhmEqhlHnikU8CIIouFAowMvo3rAVn83bWsK7b6L50m/Hx3+FweKiu
      bjrZdnl5dCFOKJNNsxac48b1T9jdDZJMxvLWt89Xx43rH9Pedu3E20gARFFpHCy3Vco82FUp
      8XsUEgBRVHa7k7bWfp6P/4662g7c7vIf3qiQ9ZT00YUl+f2t+P2tpS4DyDkAivnZaSJJRW9n
      A1OzAdo7WpmZnqW3f4D9/Thd7S2FqVSIAshxF0ijoaGBteVlRscmuNx3iaePHuF0uxkdGSO0
      ESS0FyMej8vHpIpzIbc1wUrh9FZQ5YVkBrJZg6rGTlrqa2jwV+DxullZCeL1etF1Obw4z0zT
      ZGb2a0bHPmN/f6/U5RRMjq9SReDlLJVN3dx97yZLgVWuD/ZTWVlF77XruHWNrk75WKWLYGV1
      kprqZgau/Yy5F49KXU7B5LYoXtO53PfdHOvNm99cHczlB+Dy1ZPPv4qzzWazk8kkyWbTJZ+q
      LCTZTxGHam66Qiod58XLp1y58uNSl1MwMg0qDqVpGl2dt0pdRsHJCCAsTQIgLE0CICxNAnAB
      GGYWpeSNx9OQg+Bzbn39BRub85imSX//R7ic3lKXdK7ICHDOrW+85Prgx3R332F5ebLU5Zw7
      MgKcc253OaurU4QjmzQ3XSl1OeeOjADn3JXeuzidXtrbBk+8DFB8R0aAc07TdOrrO0tdxrkl
      I4CwNAmAsDQJgLA0CYA4l9L7MV5+9ilGOs2L//u/MTKZU/WTWwCUyczkOMNjE0R3Nnjy5Alr
      qyvcv3ePtY0QLwMrpypCiFw5vGWgFJ//23+Fx1+Pbj/dfE5uAdA0evv6iYTWeT4xw9X+y4yN
      DGN3OpgcnyS0sUpwOyxrgkXBKdNgfyNI9aVeYsEVyOEKc1vby69enznGRmNlfoKy+jbs+5vE
      E0mqmi7R3eRjY2sHE431YIimgR7i8XhuXQuRAzOToenOXWr7BtkcH0KZJtoPrENXyiQW22Vx
      cRS7zUFFRW2OAVAm4f00HoedjoEbLC4uc3OwDyMR5XJdM2uBl9S2tL/N87KMwOYye/sRQNFY
      VU9jdX2pSzpX7G4PdVevA9AwePtE2yil2N0LEo+H2dldw+Px5RgATWfgxjuv7l671n9ww1EF
      QFdPb07dWdlSaJX+tl5SmTQr22sSgCLQdRvtbQMoZdLWeg1dt8k7waWiazoVnnIc9hTsXtxF
      5/lkmAYa2ltfcqej/fqr2xKAEilze3k0O4RSiib56/8GpRRbW0vU1XUAsBXZYSuyjcPuoLqs
      kpqK6rw8jgSgRG5dGih1CWeWaRpEo9ssBIZxOj1UVBxcdufz5w+w2+z88sd/nLfHkgCIM8dU
      JnvhdZLJGHvhDcrLq4kl97nR1Y/dZieW3KeqzJeXx5IAiILaXZjDXVWD3e1hL/CCso6eH9zG
      bnPQ3jaIUiYd7YMAdNa30VBZh65ruByuvNUnAXhLqUyK+xMP8TjdJNJJPur/EW5n/n5B552z
      vIKxP/tPB2+i/vEvT7ydpml0dtx87Wselzvf5cm5QG8raxhUeX180PcuVWU+DNModUlnirPc
      h1KKdCyKu7q21OW8QUaAPEikk4T3IyTSyVKXcubszE3R+4t/iqvCx9bkKP5bPyp1Sa+RALwl
      p8NJdXkVK9trVJdV4nQ4S11SUe3H94hGt2ls6D70+w3Xv3uXtqy+6cydIiMBOIZSinQ2AyhA
      47DTrRw2O9c7rxa5srMhHN5gZWWK2P4uKEVjYw/JdIrJ5VmutV/BYbeja2d7L/tsV1diqWya
      3wzfY2h+nN+M3Ccaj5a6pIJQShEceohpGOy+nCGxs3Wi7TyeSmpqWvD56qisbEApxfDCcx7N
      DnF/4msM4+wfD0kAjqMU9VW13L1ym/baZsw8fahzKcTjYcxjDtCNVJKn//lPePnZpzjLK07U
      p9Ppxu9vpaWlD4/nYBulFLW+GtwO17n4eUkAjqWxFdlhfGma4O4G5/VzIrLZDIHFURLJ6JHr
      NDz+OvY31nGWV6DbHSfu2+n04Ks4mN3RNI27V+7wfu87fNj/Ps4c+ikVyx4DfLt/r179lXrz
      r5XT4eDulduYStFUVY/bfrr5faUU8/PPiES3qKlpob2tuKdBLC6Nsbm5QDaTorPzJj5fHUop
      MkYGp/3goH0v8JIP/82/Y2PsKfGtDZynnLLUNI32uvPzSaGWDUDGyPKbkXvU+fxsR3e51TlA
      fdXrv3Rd01876SqRSJzqseLxMJlsihvXP2Fi8h7pdBKnM/9v6hyl+9JtQNHWeg2n00M0ESOR
      TjK1PMelxg7aapvp/uQXALS89yGGYZA55Rrb8ybnXaCt4CKB1RDpRJTnY88Jh3d59PVDdiMx
      lleDhagxZ0opUpk0yXSKZDp15LDvr6jhR1duc6mhvaBLOB0ON/F4hP34Hul0Aput+H93ujrf
      weE4CJ3b4eLe+AMezw2TNbJFr+Us+f82JX27NIUiqgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
