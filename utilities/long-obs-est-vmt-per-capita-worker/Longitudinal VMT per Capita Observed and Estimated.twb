<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0606.1812                                -->
<workbook source-build='9.3.3 (9300.16.0606.1812)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.3'>
      <aliases enabled='yes' />
      <column caption='Threshold 2010' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='13.26'>
        <calculation class='tableau' formula='13.26' />
      </column>
    </datasource>
    <datasource caption='long-obs-est-vmt-per-capita' inline='true' name='textscan.1vueseq0zfohkx112y1iq18qdc24' version='9.3'>
      <connection class='textscan' directory='C:/Users/dory/Box Sync/Share Data/observed-estimated-vmt' filename='long-obs-est-vmt-per-capita.csv' password='' server=''>
        <relation name='long-obs-est-vmt-per-capita.csv' table='[long-obs-est-vmt-per-capita#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='string' name='detail' ordinal='1' />
            <column datatype='integer' name='taz' ordinal='2' />
            <column datatype='integer' name='observed_persons' ordinal='3' />
            <column datatype='real' name='estimated_persons' ordinal='4' />
            <column datatype='real' name='mean_vmt' ordinal='5' />
            <column datatype='real' name='sd_vmt' ordinal='6' />
            <column datatype='real' name='sum_vmt' ordinal='7' />
            <column datatype='real' name='vmt_per_capita' ordinal='8' />
            <column datatype='real' name='latitude' ordinal='9' />
            <column datatype='real' name='longitude' ordinal='10' />
            <column datatype='string' name='super_district' ordinal='11' />
            <column datatype='string' name='county' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>detail</remote-name>
            <remote-type>129</remote-type>
            <local-name>[detail]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>detail</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed_persons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[observed_persons]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>observed_persons</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>estimated_persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[estimated_persons]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>estimated_persons</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>mean_vmt</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>sd_vmt</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sum_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>sum_vmt</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_per_capita]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>vmt_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>super_district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[super_district]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>super_district</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;' value='One Std Dev Above Mean' />
          <alias key='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;' value='One Std Dev Below Mean' />
        </aliases>
      </column>
      <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
      </column>
      <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
      </column>
      <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
      </column>
      <column caption='Upper Bound VMT per Capita' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
      </column>
      <column caption='Lower Bound VMT per Capita' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
      </column>
      <column caption='Weighted Mean VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Vmt Per Capita Category' datatype='integer' name='[Vmt Per Capita (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[vmt_per_capita]' peg='0' size='1' />
      </column>
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
          <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
          <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
          <alias key='&quot;BATS&quot;' value='Observed (2000)' />
          <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
        </aliases>
      </column>
      <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
      <column caption='Super District' datatype='string' name='[super_district]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
      <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.339848' measure-ordering='alphabetic' measure-percentage='0.46797' parameter-percentage='0.192182' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:detail:nk]' type='palette'>
            <map to='#81a88d'>
              <bucket>&quot;2005_05_003&quot;</bucket>
            </map>
            <map to='#81a88d'>
              <bucket>&quot;CHTS&quot;</bucket>
            </map>
            <map to='#972d15'>
              <bucket>&quot;2010_05_003&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;2000_05_002&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;BATS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:detail:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;2005_05_003&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BATS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;2000_05_002&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CHTS&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;2010_05_003&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='county averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Capita by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='county averages.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Capita by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' />
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.5082871913909912' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='cumulative distributions'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Cumulative Share of Persons by VMT per Capita Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Vmt Per Capita Category' datatype='integer' name='[Vmt Per Capita (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[vmt_per_capita]' peg='0' size='1' />
            </column>
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[vmt_per_capita]' derivation='None' name='[none:vmt_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[pcto:cum:sum:estimated_persons:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Vmt Per Capita (bin)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='8' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='9' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='10' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='11' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='12' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='14' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='level-members' level='[none:detail:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>40.0</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='196' />
            <format attr='title' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='Share of Persons' />
            <format attr='subtitle' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' value='p0.0%' />
            <format attr='cell-w' value='18' />
            <format attr='cell-h' value='18' />
            <format attr='cell' value='18' />
            <format attr='cell-q' value='90' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='-90' />
            <format attr='display' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <shape column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3870'>&#10;Cumulative Share of Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3870'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3870'>&#10;Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3870'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>VMT per Capita by Travel Analysis Zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
            </column>
            <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
            </column>
            <column caption='Upper Bound VMT per Capita' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
            </column>
            <column caption='Lower Bound VMT per Capita' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
            </column>
            <column-instance column='[vmt_per_capita]' derivation='Avg' name='[avg:vmt_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='None' name='[none:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vmt_per_capita]' derivation='None' name='[none:vmt_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[sum:estimated_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]' included-values='in-range-or-null'>
            <min>30</min>
            <max>99</max>
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>82.583562721195406</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]' field-type='quantitative' max='-13385662.761443404' min='-13868369.017206812' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]' field-type='quantitative' max='4717637.088082823' min='4371292.6295899199' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='14.0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' palette='tableau-orange-blue' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' />
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' />
              <size column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='900'>TAZ:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='900'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean less One Std Dev:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean VMT Per Capita:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean plus One Std Dev:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Observations:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Persons (est.):&#9;</run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='superdistrict averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Capita by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>Superdistrict</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[super_district]' derivation='None' name='[none:super_district:nk]' pivot='key' type='nominal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Super District' datatype='string' name='[super_district]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]' value='34' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]' value='344' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk])</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='taz averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Capita by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>travel analysis zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]'>
            <groupfilter function='level-members' level='[none:taz:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='88' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='Travel Analysis Zone'>
              <formatted-text>
                <run>Travel Analysis Zone</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok])</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='taz ranges'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Observed Average with Plus/Minus one Standard Deviation Vehicle Miles Traveled per Capita by</run>
            <run fontcolor='#000000' fontsize='20' italic='true'> County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>travel analysis zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
            </column>
            <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
            </column>
            <column caption='Upper Bound VMT per Capita' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
            </column>
            <column caption='Lower Bound VMT per Capita' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
            </column>
            <column caption='Weighted Mean VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' />
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]'>
            <groupfilter function='level-members' level='[none:taz:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' direction='DESC' using='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]'>
            <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' value='125' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='64' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='88' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' value='136' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='Travel Analysis Zone' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok])</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='threshold map.2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Simulated VMT per Capita by Travel Analysis Zone Using Threshold of 15 percent below 2010 Mean (</run>
            <run fontcolor='#000000' fontsize='20' italic='true'>&lt;[Parameters].[Parameter 1]&gt;</run>
            <run bold='false' fontsize='20' italic='true'>)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold 2010' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='13.26'>
              <calculation class='tableau' formula='13.26' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column-instance column='[vmt_per_capita]' derivation='Avg' name='[avg:vmt_per_capita:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='None' name='[none:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vmt_per_capita]' derivation='None' name='[none:vmt_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[sum:estimated_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]' included-values='in-range-or-null'>
            <min>30</min>
            <max>99</max>
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>82.583562721195406</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]' field-type='quantitative' max='-13359619.194396004' min='-13832442.922110276' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]' field-type='quantitative' max='4695376.7832769537' min='4424012.582279468' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='13.26' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' num-steps='2' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' />
              <size column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' />
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' />
              <lod column='[Parameters].[Parameter 1]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='900'>TAZ:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='900'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean VMT Per Capita:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Persons (est.):&#9;</run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='county averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='county averages.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='superdistrict averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='taz averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='174'>
            <card mode='typeinlist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' type='filter' />
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='74'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='taz ranges'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
          <strip size='181'>
            <card mode='typeinlist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' type='filter' />
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='113'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='cumulative distributions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='200'>
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='filter' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='shape' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='83'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='212'>
            <card mode='radiolist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='threshold map.2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' type='size' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='74'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='county averages' width='192'>
      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
      ZtVtJbpTRgYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='county averages.chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='superdistrict averages' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='taz averages' width='192'>
      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
      GoY6tFcDp78AuTHZk1sEKlEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='taz ranges' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='cumulative distributions' width='192'>
      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
      A4xQKzN0C0hCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      bdv/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='threshold map.2010' width='192'>
      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
      j6qqUBSFtZofiedBdcvDsZcAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
