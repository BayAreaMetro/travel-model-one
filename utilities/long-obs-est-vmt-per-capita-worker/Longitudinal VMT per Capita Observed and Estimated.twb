<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0606.1812                                -->
<workbook source-build='9.3.3 (9300.16.0606.1812)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='long-obs-est-vmt-per-capita' inline='true' name='textscan.1vueseq0zfohkx112y1iq18qdc24' version='9.3'>
      <connection class='textscan' directory='C:/Users/dory/Box Sync/Share Data/observed-estimated-vmt' filename='long-obs-est-vmt-per-capita.csv' password='' server=''>
        <relation name='long-obs-est-vmt-per-capita.csv' table='[long-obs-est-vmt-per-capita#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='string' name='detail' ordinal='1' />
            <column datatype='integer' name='taz' ordinal='2' />
            <column datatype='integer' name='observed_persons' ordinal='3' />
            <column datatype='real' name='estimated_persons' ordinal='4' />
            <column datatype='real' name='mean_vmt' ordinal='5' />
            <column datatype='real' name='sd_vmt' ordinal='6' />
            <column datatype='real' name='sum_vmt' ordinal='7' />
            <column datatype='real' name='vmt_per_capita' ordinal='8' />
            <column datatype='real' name='latitude' ordinal='9' />
            <column datatype='real' name='longitude' ordinal='10' />
            <column datatype='string' name='super_district' ordinal='11' />
            <column datatype='string' name='county' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>detail</remote-name>
            <remote-type>129</remote-type>
            <local-name>[detail]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>detail</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed_persons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[observed_persons]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>observed_persons</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>estimated_persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[estimated_persons]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>estimated_persons</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>mean_vmt</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>sd_vmt</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sum_vmt]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>sum_vmt</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_per_capita]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>vmt_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>super_district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[super_district]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>super_district</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[long-obs-est-vmt-per-capita.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;' value='One Std Dev Above Mean' />
          <alias key='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;' value='One Std Dev Below Mean' />
        </aliases>
      </column>
      <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
      </column>
      <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
      </column>
      <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
      </column>
      <column caption='Upper Bound VMT per Capita' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
      </column>
      <column caption='Lower Bound VMT per Capita' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
      </column>
      <column caption='Weighted Mean VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Vmt Per Capita Category' datatype='integer' name='[Vmt Per Capita (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[vmt_per_capita]' peg='0' size='1' />
      </column>
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
          <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
          <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
          <alias key='&quot;BATS&quot;' value='Observed (2000)' />
          <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
        </aliases>
      </column>
      <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
      <column caption='Super District' datatype='string' name='[super_district]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
      <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.439471' measure-ordering='alphabetic' measure-percentage='0.560529' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:detail:nk]' type='palette'>
            <map to='#81a88d'>
              <bucket>&quot;2005_05_003&quot;</bucket>
            </map>
            <map to='#81a88d'>
              <bucket>&quot;CHTS&quot;</bucket>
            </map>
            <map to='#972d15'>
              <bucket>&quot;2010_05_003&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;2000_05_002&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;BATS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:detail:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;2005_05_003&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BATS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;2000_05_002&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CHTS&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;2010_05_003&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='county averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Capita by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='county averages.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Capita by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' />
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.5082871913909912' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='cumulative distributions'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Cumulative Share of Persons by VMT per Capita Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Vmt Per Capita Category' datatype='integer' name='[Vmt Per Capita (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[vmt_per_capita]' peg='0' size='1' />
            </column>
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[vmt_per_capita]' derivation='None' name='[none:vmt_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[pcto:cum:sum:estimated_persons:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Vmt Per Capita (bin)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='8' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='9' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='10' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='11' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='12' />
                <groupfilter function='member' level='[Vmt Per Capita (bin)]' member='14' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='level-members' level='[none:detail:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>40.0</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='196' />
            <format attr='title' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='Share of Persons' />
            <format attr='subtitle' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]' value='p0.0%' />
            <format attr='cell-w' value='18' />
            <format attr='cell-h' value='18' />
            <format attr='cell' value='18' />
            <format attr='cell-q' value='90' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)]' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='-90' />
            <format attr='display' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <shape column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3870'>&#10;Cumulative Share of Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3870'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3870'>&#10;Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3870'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[pcto:cum:sum:estimated_persons:qk]</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[Vmt Per Capita (bin)] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>VMT per Capita by Travel Analysis Zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
            </column>
            <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
            </column>
            <column caption='Upper Bound VMT per Capita' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
            </column>
            <column caption='Lower Bound VMT per Capita' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
            </column>
            <column-instance column='[vmt_per_capita]' derivation='Avg' name='[avg:vmt_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='None' name='[none:observed_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vmt_per_capita]' derivation='None' name='[none:vmt_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
            <column-instance column='[estimated_persons]' derivation='Sum' name='[sum:estimated_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]' included-values='in-range-or-null'>
            <min>30</min>
            <max>99</max>
          </filter>
          <filter class='quantitative' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>82.583562721195406</max>
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]' field-type='quantitative' max='-13385662.761443404' min='-13868369.017206812' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]' field-type='quantitative' max='4717637.088082823' min='4371292.6295899199' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='14.0' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' palette='tableau-orange-blue' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' />
              <lod column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' />
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' />
              <size column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='900'>TAZ:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='900'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean less One Std Dev:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean VMT Per Capita:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='3240'>&#10;Mean plus One Std Dev:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='3240'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Observations:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1980'>&#10;Persons (est.):&#9;</run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Source Sans Pro' fontsize='16' indent='1980'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='superdistrict averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Capita by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>Superdistrict</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[super_district]' derivation='None' name='[none:super_district:nk]' pivot='key' type='nominal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column caption='Super District' datatype='string' name='[super_district]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]' value='34' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]' value='344' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk])</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='taz averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Average Vehicle Miles Traveled per Capita by </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>travel analysis zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='Weighted Mean VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]'>
            <groupfilter function='level-members' level='[none:taz:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='96' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='88' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='Travel Analysis Zone'>
              <formatted-text>
                <run>Travel Analysis Zone</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' />
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Observed Persons:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok])</rows>
        <cols>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='taz ranges'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Observed Average with Plus/Minus one Standard Deviation Vehicle Miles Traveled per Capita by</run>
            <run fontcolor='#000000' fontsize='20' italic='true'> County</run>
            <run bold='false' fontsize='20' italic='true'>, </run>
            <run fontcolor='#000000' fontsize='20' italic='true'>travel analysis zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='long-obs-est-vmt-per-capita' name='textscan.1vueseq0zfohkx112y1iq18qdc24' />
          </datasources>
          <datasource-dependencies datasource='textscan.1vueseq0zfohkx112y1iq18qdc24'>
            <column caption='mean_to_sum' datatype='real' name='[Calculation_520447255603851266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if(mean_vmt&gt;0) then&#13;&#10;[sum_vmt]/[mean_vmt]&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END' />
            </column>
            <column caption='Upper Bound VMT Sum' datatype='real' name='[Calculation_520447255605907459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([mean_vmt]+[sd_vmt])*[Calculation_520447255603851266]' />
            </column>
            <column caption='Lower Bound VMT Sum' datatype='real' name='[Calculation_520447255619665925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(([mean_vmt]-[sd_vmt])*[Calculation_520447255603851266],0)' />
            </column>
            <column caption='Upper Bound VMT per Capita' datatype='real' name='[Calculation_520447255620231174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255605907459]/[estimated_persons]' />
            </column>
            <column caption='Lower Bound VMT per Capita' datatype='real' name='[Calculation_520447255620440071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_520447255619665925]/[estimated_persons]' />
            </column>
            <column caption='Weighted Mean VMT per Capita' datatype='real' name='[Calculation_546624428018933761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([estimated_persons]*[vmt_per_capita])/sum([estimated_persons])' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Detail' datatype='string' name='[detail]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2000_05_002&quot;' value='Simulated (2000)' />
                <alias key='&quot;2005_05_003&quot;' value='Simulated (2005)' />
                <alias key='&quot;2010_05_003&quot;' value='Simulated (2010)' />
                <alias key='&quot;BATS&quot;' value='Observed (2000)' />
                <alias key='&quot;CHTS&quot;' value='Observed (2012/13)' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Estimated Persons' datatype='real' name='[estimated_persons]' role='measure' type='quantitative' />
            <column datatype='real' name='[mean_vmt]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[detail]' derivation='None' name='[none:detail:nk]' pivot='key' type='nominal' />
            <column-instance column='[taz]' derivation='None' name='[none:taz:ok]' pivot='key' type='ordinal' />
            <column caption='Observed Persons' datatype='integer' name='[observed_persons]' role='measure' type='quantitative' />
            <column datatype='real' name='[sd_vmt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_520447255620231174]' derivation='Sum' name='[sum:Calculation_520447255620231174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520447255620440071]' derivation='Sum' name='[sum:Calculation_520447255620440071:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_persons]' derivation='Sum' name='[sum:observed_persons:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[sum_vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Travel Analysis Zone' datatype='integer' name='[taz]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_546624428018933761]' derivation='User' name='[usr:Calculation_546624428018933761:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Vmt Per Capita' datatype='real' name='[vmt_per_capita]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]'>
            <groupfilter function='level-members' level='[none:county:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' />
              <groupfilter function='member' level='[none:detail:nk]' member='&quot;CHTS&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]'>
            <groupfilter function='level-members' level='[none:taz:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' direction='DESC' using='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]'>
            <groupfilter function='member' level='[none:detail:nk]' member='&quot;BATS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</column>
            <column>[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='136' />
            <format attr='height' value='52' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='41' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' value='125' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[usr:Calculation_546624428018933761:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620231174:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:Calculation_520447255620440071:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:observed_persons:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' value='64' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' value='160' />
            <format attr='width' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='88' />
            <format attr='height' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names]' value='136' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' value='Travel Analysis Zone' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1vueseq0zfohkx112y1iq18qdc24].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok])</rows>
        <cols>([textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk] / [textscan.1vueseq0zfohkx112y1iq18qdc24].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='county averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='county averages.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='superdistrict averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='195'>
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='taz averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='195'>
            <card mode='typeinlist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' type='filter' />
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='74'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='taz ranges'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
          <strip size='195'>
            <card mode='typeinlist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]' type='filter' />
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='113'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:county:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:super_district:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='cumulative distributions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='shape' />
          </strip>
          <strip size='200'>
            <card param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='83'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:nk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]' type='color' />
            <card pane-specification-id='0' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[sum:estimated_persons:qk]' type='size' />
          </strip>
          <strip size='212'>
            <card mode='radiolist' param='[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:detail:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[avg:vmt_per_capita:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:latitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:longitude:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:observed_persons:qk]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:taz:ok]</field>
            <field>[textscan.1vueseq0zfohkx112y1iq18qdc24].[none:vmt_per_capita:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='county averages' width='192'>
      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
      ZtVtJbpTRgYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='county averages.chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAeeUlEQVR4nO3dZ3NcV37n8e/t293oHIFGzgABkAQJZokUqUBKGoUJGo8n2B57Xfa6vFu7
      ntoXsE/2mWu3tlzr3fKOaz32SDPSKMwohxGpQFIEMwmCIAiQyDk0Qud87z6gRA7VoIjUaAJ9
      PlVSseP5A+hfn5vOOZKqqiqCkKM0K30DVVXJVoay3Xa2iLZXz4oDoCgKsVhsNWpZsng8TiqV
      ykrbkUgkK+2KtleXdtXfURD+wJ1vbQlJymopC1pxDyAI96ImI/yv//Hf+fXLr+KLJG5vsv7h
      f9kmegAhg1QCvllsJbXISpS33niPqzfGeOZQE203xwknLfzsb36U1QrXpAdYTtoflG+ITNvQ
      P6ecx1/+h78jL9DP51+cpXdonOnhPvxxiT0HDzI3NpbtCjMXAFVN8eLP/4Fz1/o5/fEbvHfi
      ypJef+b3b/D+Il6TioV4/ZVf8cqrvyMUX3iHODg7zvXekXu+Ryw0x69f+iWv/u49kkr6h1FV
      45w/v7T6ARKxOf7hf/5f4qkUv/znf2R8Ppr2nKmBTo6dalvyey9G67G3OXa6naNvvcroXDgj
      bXwTJR6jq6MNZ+1uDh/cR1N9Hc+/8AI1NfUUud08/vjDy37vVCLC679+kZd/8wbBWPKezxu9
      cZkXf/shMf80//v//AuJP3hseqQ3c5tA4dlRJv1x5lvPsLtCCygc//g9ugYmef7Zx3nrnWPI
      JHA47Zg9tVTbk1zo6GXvwcN0n/+coeEhavfU8skHb9M7OstPfvpTrIb0cq+c/gTJXcdPnnoI
      39Qwv/zgKGZXGfUFMpd7J1GlPIr1Pk73hHj+sc2cudDJth17GBvoxlK8iecPP8zJ379NUePD
      HN7TwNTQDd4/dpL88gbKzVHaeqZpbijmxdc+xlVg59KZViIaCz94/sh9fweqkqD/+iVOtbZy
      7nIXjzwX5K2jbzEX07K/uZSPT1ygoqIcrc3DS//vn5G0MvW7HmNfc+2q/A1mp6Y43XeTGodE
      ZdDHm8fewZ/Uc2BrCZ9fuAmSzPe+9QhHj32O0VPDd596hNXcT5XzTBx++tnbt5/7znfuerzo
      Ufey3zsemuXClW5+/Bf/Dl0iwBtvfkBM52BLSR5XeiZRZRN//icvEA3Oc/bUKcqsKQZGxpmd
      GOCTo8exlzYw3308cz3A9baLBKMKPdevEEmqqEqKYCjMxMB1uvuGCSb02OUkTS076ero4OhH
      H6BKEl1XL9ExNMee5npUJUkwHGGkp52BKf+C7SiKgoSEqqq0nT1B0aZ99LW3MjI2jqdqK6M9
      lykqLWNzy06UwBylTXtpLHeRTMY5efwUKqAoKnz5Hq2fH2Xzw89w9sSH6PLymJuZpiDfg7us
      lmK7kVgixdkvvrjrm+SblNU2cfSdd2lorCUZjxKJx7l24SSjk7O4q7bTXOFkwjvL6NAoO1ua
      aOvoWq0/AZBid3M9lzoHScRjRONJLp4/jXd6GpOnksRkL0NeH6lUnFMnTqGsYsuZZrCX8F/+
      81/x8eu/4Pz1QWLJBJdOnWJ8egpPbRNjXR1Ev9wg2FRVxPFLPRTZDUSjURKJGCdbT1NRUZGp
      AKh4AzH+9j/9Hc8/ugOjswQ1FmTe56eipg6H3UFleTGFJeVYzGYqy0t46lvPodXqaNm1jy3l
      Dvqnw7htRnz+AJW19Zj1C3dWLQeOoMz08PIrr1Gz/QCTN89Rt+Mg5aWluO0WKqtqKKtuwDdy
      A8wuigqcREJ+kpKRhroKAA49/R0mu87y8mtvsvvQU3Sd/Yj9jz9PJJrA6bQhWwupsiTp7h8m
      HEvQ1LBpUb8FjUZPdX0Tf/k3/57mTTXoSBAMx6lrbMDhdFNS6MZodVDiyaeqpgaz1U6Jx7Vq
      f4X8olJ27DvEnub6W21H4myqb0DWSPR2XMJStRWnnCCu5tFQX7nsds6dPMZrr71Oe/fAop6v
      JMO8/Moby24PIBqY4dhnJymtb6HcbSQSU6lvrMXtLsJtt1JZXYkGMFqdtOx7hJ/+8LtUV1YQ
      DfpRtEbqqyqoa9qGtNJLIVKpFIlEAoPBsKIfaDlisRiyLKPVrv3BrHA4jMlkWvN2V6PtgWvn
      6AsYeOKhbavS9j/9/X/jBz/7r+Rrw3zyaSt6qwt9fIbpsJbHH9rMF2evEE0oPPOtJzl34hiy
      JZ9IKExTtYczbTd47MgTdJw9idZZToVDw/mrPRx64ghum+m+ba+UOA+Qg6q27F3Wh//ekrz/
      5uuMjE/w/u9PUl1ZBkic+eQtrnTe5MLNcYKjHXzy8Ud0TCTYta2W4ydOceNaGxPeeXraTtHl
      VdnbXMe/vfgaW+sLefnN369iffcmAiCsmEaj57kX/piyAhsWRz5lHjMffPgZZouFVDKF0WBE
      q9Xi8JTiH+mm9VwbGo2E2VFAZG6UlN7B3NB1vrjQQWNtCUc/P8fmxvo1qV1sAi3Tet4EEm3f
      sSqfnGydzMnmKfVsX4kq2l4dqxKAWCyWlV9KIpFAlmUSicUelFw98XgcKUtXd4m2V8+qBMBg
      MOTcJhCQtU0B0fbqETvBQk4TARBymgiAkNNEAIScJgIg5DQRACGniQAIOW3RAVBVhUTi1sBm
      RUmRzNJ0JIKwmhZ9Bml8eADvrJeE7CI4PYCSStFy4DC2vAdwrgtBWKRF9wAlFdW4TFoUFeJo
      aaosYGDMm9WJkgRhpRYdgPmpES72zNPSVAFKivEZP8UeJ0ajMZP1CUJGLXoTSJF0bK4vxzsX
      4JGHdjMfSlJky8va1ISCsBoWHQBXQRGugqLbt42WjNQjCGtKHAYVcpoIgJDTRACEnCYCIOQ0
      EQAhp4kACDlNBEDIaSIAQk4TARBymgiAkNNEAIScJgIg5DQRACGniQAIOW3RAYhH/Pzmt2+B
      qnDu9Be0nmolltqgy3sKOWPR4wH0RhumPBmAWe80sSRE4im0qWjWJqcVhJVa8iaQkowj5dmp
      KnYSiibEkEhhXVv0V3dgfoZ8l5vJuTANtWX4wwk8NgOsq8U1BeFuiw6A1eFm//79t278wVKe
      YkiwsJ6Jo0BCThMBEHKaOHyzAjOTXSR1bgrsNiYm+jGY3bgcBYQCUwSCcygaIyWFFdkuU/gG
      ogdYAafVxqxvjqnRqyRlA3l5ZgDMVg8kI1jthVmuULgfEYBVkEhEsdo8DA9dIZVKgqoyHw5j
      NeRluzThPkQAlktVmfPPQjKEp3QrgZl+nK5yhoavAgpms+u+byFkn1gp/h7auk9RXL4XOeZl
      NhIl31GIy2RCVVN8dukELU37cG2gFdNztW3RA9yD02Qhoaj0Tg6hlVRSqgqqSt9IN7LW+I2n
      /1RVvbUpJDzwRADuQ5bzqPCUMDQxhDcwh6rRoipR/OHQPV8zMdnHW2//PW1XPiYavffzhOwT
      h0EXoiSIa0xoo/M0V9QxOD1JU0UdMz4vdaWbcJqdaPXme748Gg0SjYVo7/iUq12nKCqqp65m
      J2VFdeh0+lUv1z83iC8GZYWlTE70otFb8bhLSCVCjE8OYLIW47KLfZKFiH2AZfqm7VFVVYlG
      g4QjAfoHr9I33IEvOIc+z0J5aSN1lc2UFFSg1epWp+1EgGv9Nyh3WZgKpShwl2K32BkbuojV
      s5WxoUs0bHp4WW3dt+01lIm2RQ9wD+FYhEgsisvqQJKWtgyUJEkYjVaMRituVwk7th1mYnqY
      nsGr9I9209nfhtFgZ1NVM/UVWyhwepA18oprTiZiGMxFTIx2YK7bi6KCZom15xrRA3xJVVUi
      sQhjM+MMTo9wZbCLcCzCz57/K6wma9rzl/ttlEwmGJnsp2ugg77xXqKJOHZbPvXljWyu3ILb
      5r5v4L7etm+mj1HvFDVVW5meGkTWmVASflzuCqa9wxgthXhcq3NSbqP1ADkbgFsf+DDj3hGG
      p4YY8Y4x5fMSS6XQ6wy47AVoJA1/8uj30S2wqbIaf4xoLEL/eC+dg50MTg2TUFSKXMVUFlXh
      MNvZXr1lwTBstA9hNtte/BJJqQS9/cPU19UQ8s0yND5D/aY61ksHqygKkWiQSe8Io1MDjE4P
      4fXPkFRUdHojha5S9m/eT7mnggJHAfoM7Kx+nSHPSFPVVpqqthKKhOga7qZjqIuTnefQyVo2
      ldRiMixtwNFXy9jKsti6XYwlBCDJuQsXqKup5PS5i+zatfuB/vAnkwn6B9qQNDJT3mEmpgeZ
      9XtJqaA3WPC4K9hUtZ2SggrcDs+C3/JryWw0s2vTTnbW76B9oBNFUTDmLb1XHRxs58Kl93ho
      7/cpK2vKQKUby6IDoNUbsVqMqKkkc/Nz3Gg/T+Hmh8k3SQ/kmOCJiR7OnH0d0KAz2MgvqGRT
      3R6KCqpw2AvQPqDfkJIksb16y7JfH4kGiER8TEz2iQAswpKGRM7NzjE5F6SsuJBEMoXNnIfR
      IJNIJDJZ47K43eXU1e6ltKSR0tLGnNkkaGw4wPBoFyNj3exoeTpnfu7lytmd4JXK1M6gqqQ4
      c/00W+ofJuQbJZBIUewuxarXMjA5iC8Spjy/Epf13st0Dg518PnJl3jyib+mpLh+VevbaDvB
      4lKIB4ykkbEbTaRU6JsaQYNy6zokSUNVURWyEiee+uaJCEpLGjCZXFzvPs0Kv982vHUfAP/M
      Tbr7O0klggwMtDM9Mw5AJDDOwGA7oxODWa5w+fL0Jkocdoanx/EGfHhnR0jpndj039zjabU6
      6mt3MzrRQzA4t0bVrk/rPgA2m4dkMs7c1E0SkpZkMo4KTE4PU1yymaB/LNslLkkqGUXWWwmF
      fWwuq2YiEKG+sIh4Ms58JIotTyYUv/8+V23NTlTgZv+lzBe9RpRUnGnvCACqmmJm9su/rari
      mx9l3j+75PfcMHtIWq0eq6kY/3QXJoMBnawlloyBtL4yLmsNNJTd2W6vMdoBKNEbwFkA3NoW
      vh+rxUl5WRPdvRdp3nwInTbz5zUyTVUVhkevU5BfxvR4J30T47hdJahKlInpCXRSCot1L9ol
      HJ9fX5+OBfgC81gMeszuTciJWQqLG0kmYxSWbiE8P0JZ+bZsl5g1DXV7CUX8DI92Z7uUVSFr
      DeTpdCTjPkanJ5HVGLFEAkVJEovOEYhG0LC0fZ513wPYXZW4vzwKVOCp/fJeJwBFxQ1ZqurB
      UOypwmEv5HrPeaorti75or4HTTQ8SyQSIJLQsGP7EXp6z5MIDuONS5hMLpRUlKSiopcX/3Ou
      +wAI96bRyDTW7eX0pfeZ903jdHiyXdKKGEwudu/69u3bdbV7ALAAFFYv6z3X/SaQ8M1qK5vR
      avO4dvN8tkvJKFVVl3XIVwRggzMazNRUNNM71E4sHs12ORmhKAqnWl/l5BcvoyhLm6xWBCAH
      NNXtJhqP0jvYke1SMkJRkkxM9jI41M7o2I0lvVYEIAcUuErwuMvp7LmIomy86ey1Wj3feuo/
      4nKX88WZ15n3TS36tSIAOUCSJJrqdjM1N8bUzGi2y8kIi8XJowf/DFnO45MTvyYSDS7qdSIA
      OaK6rBGjwcLVm+c27PVBFrODRx/5MaGIn89bXye5iLmZRAByRJ7eQEN1C30j3UQ28FxFhQWV
      HNj7AmOT/bReeP++YV8wALeG1Sl3bS+qqko4HPnqBpFIZPWqFtZEY00LKVWha6A926VkVE1l
      Mzu2PkFX70Xau1q/MQQLBqCz7RyvvPIb3vrg2O37osF5XvvtWwBMDd/kX371u1UuW8g0l72A
      Uk8113ovk9rAa1tJkkTLlkPUVbdwpu0YA6P3PjK0cA+gs7CzuQGt7s5cNUark3yHmVQ8ROvl
      G5QWWIjG4qInWGe21O1iLjDD0ERftkvJKI1Gw8E938aTX84nZ95kenZi4ectdKfHU0Dj1u00
      1lbdvi8WjRCORIgmVPbu2UkyEQdJI5ZJXWeqSuqwmp1c7bm0YXeGv6LT6njywB+Rpzfy4anX
      CIUDac9JC8D85DDvvvcub7/zHn3Dk7fvTyUTPPLIQRRkSkpKePbZZzHcZ2CG8ODRylo217Qw
      ONGHP+TLdjkZZzHZeebgj4nEonxw6g3iifhdj6cFYNof5bED+ygoKMBuvTP+0mSxUVJSgtV8
      6xvfbL735LDCg21z9TaQJK72XM52KWsi31nIkw99l4nZcT49/8FdB3fSAlBVVUV5ZQ0uh4OG
      Tas7oFp4MFjNdmpKG+gcuEoi+eDN6JEJNWUNHNh+mOuDnZy/fmesdFoAdDodV6+0oTeZuXTx
      4poXKqyN5rodBKNBekdvZruUNbOjYQ/NdTs41XGS7qHrwD12giU1xfjYKIH5GU5fuLKmRQpr
      o9xTidvuoS0Hdoa/IkkaHttxhDJPJR+d/5DR6dGFA9C8Yw+1NdU8tP8R9u7YutZ1CmtAkiSa
      a1sY9Y4wNTd5/xdsEFqtjm/v/x5Wk523W99eOADtbRdoPX2WK1evIcsrn7deeDA1VW5Bp82j
      vTe3enljnpHvHXiBpKIsHACXp5Q92zYRTWzcs4XCrQ9CQ0UT14euE92gg2XuxW138/xDz6UH
      YHhoiKrqairqNrO1vjIbtQlraHttC9FknM6BzmyXsuZqiqvTAzA7N89XM0uEQou7alBJxZmY
      GkBVFWa9g8zOT99+LOAbJfANKyoK2VXoLKTUXcqVvvYNOVjmftICUFHs4oP33+Odd98jzuIn
      UxofvwmoGC35zE12E//yd5mKzjA1t/QZu4S1IUkS22tbmJifYmxmfc2itxrSrmVwesp45tkS
      NJrFDxXQyHr0Oh2SJKPTpIiqMrovX27IM4NYM/qB1lC+iU+vHOfCzcuU5peu+/mDlmLBT3nr
      ieOEojFi8fhCD6eJReaIRkP4A7Ncu/Y5Vms+vplexryTzPm9hENelNw41Lwu6bQ6mqu3cGOs
      l0BkcUMJN4oF1wcY7utieNKH1mC+73kAsT7A2stE27OBOX7+0b9xaMt+Dmzet6ZtL9aarQ+g
      KCoJZIrz7avamPDgclmd1BRW0dbfsaEHy3zdggGYD0TIkxUGhkZW9ObxeJTjJ17ixs0zK3of
      YW3sqN3GbHCey30dOXN5xIIBqK+p4PqVyzgKy27fF4/4eemV11GVFFevXOLTTz8jdp8vikBg
      hqHhq1y4+B69fZdz5pe6XhU6CpAkmZOdZ3LmkOiCAbjedYPHn36GqZGB2/fpjTbsVgOSRqZ5
      2w6IBYklk984JNLlKuHJI39LfkEVJ0+/Ruu5t0kkFrdjLaw9m8nKt3Y8xpHth5Z0FHA9W3Dv
      UYPC8PAw/jkvrefb2L+n5c6Dqkpv5yWspQ3Y8rSktMZ7rhIpSRJFhTUU5Fdw5drnXLl2nOm5
      MR57+I9x2Asy8gMJyydJErvrW+7/xA1kwaNAiqL8weaKhCxrCMzP0HWzj7KKaqZG+9Hmmams
      qcOolxd1FEhVVUbHe/j87O9IplIc2P1t6ipXNme9OAok2l6ptAAEg0Eslnsvwfl1Sz0MGgjO
      89mZNxmdHmRr/T4ebjmCdpmrtIsArJySivPZtXMc3LKfselB5kJBmqq2YJA1TE33MhSW2V1Z
      lZG2lyoTbad9cq61XyLPZANA0hvZvnl1V1mxWhw89/hPOd9xnEvXW5mYHefJh7+Hw+pa1XaE
      xdHIeuwGIypQVVSN7+ZFEqqKAfDYXPQEvNkuMaPSh0QaTHg8HjweDwXuzHwoZVnLvm1P8MzB
      HzEfnOXVo/9K73C3OEqUZZPeAWSTBxNxpgL+bJezJtIC4Ml3Ew6HCYfDRCKZu0ZckiSqSzfx
      w6f+Gqc1n3dP/Y6TVz7LmUHaD4p4PITN7GA+5CecSGHRcXsZ1slQGLdBR3wDX8eStgkUD/vp
      6OrH5nBTXVuX8QLsFgfff+JPOdV+nPPd5xidGeeZfc/hsDgy3rYAer2ZTaVfLi5ou/M7t335
      /8JsFLWG0i+Hrm2keXMjJMJE4mtzSlwraznU8gTfOfB9vP4ZXjr2K26O9IhNIiHj0gJw9UIr
      bde6iSVSDA0NrlkhkiRRX7aJnz755zgsTn7b+jaftZ8kGBGDaYTMSQuAxebAYbdTv3kbRw49
      vOYFOSwOfvzYj9hdv4vW7gv84/u/YNo3s+Z1CLkhLQD1W3ZwYN9Ohrou8U//+pts1IROq+Vw
      y6PsrmvBbDCilcUcpEJmpJ0I62q/wODEPFW1dVRXlqPXfvO0KJkcD6CqKslUCt09TnSJE2Gi
      7ZVK++Q0bttN47ZVbWPZJEm654dfEFbDgp+uG51XUbV5aHQG6qsr1rqm22bmx5gMp2jwFNAz
      MYLBYKMy30MoPMfI3CxGvY0SpzNr9Qnr34LXvMZisVv/yPJRSLfFznw4wJR3GLO9GO/8OCow
      Mj1CobuUvone7BYorHsLBqCsrJSg348/+GAMkP7qelFVVYklYlSX1OHze9FIYtpGYWUWDEBf
      Xx8jY+PMzWb38KM3MI9OUrE5Swn5xih0lzE6PUI4FiWejFNXkvkz1cLGtuA+gLuwlMJ8Fxdv
      jt++Lx7x88qbH/IXP/khZ09/QSSaYPeBxzBmcB8131lKvrMUgIayrxbryAfAYXHe2VQThGVa
      sAewGGTGAwqP7Nl++z690YbTZkJJJfBHUzSUOugZmRarRArr2oIBGJmYwZinYWhoKO0xSaMB
      VcEXDONyWMUqkcK6tmAAqkoL6e2+jqq/MzIsMD9DaXEJE14/O5sbkZ0VlLuzc0JEEFZL2hb8
      hS+O0jU8T3lpIeHgnXVVrQ43u3a5b992e9amQEHIpLQeYNf+JzhycC+x4Dw2p3uh1wjChpHW
      A3RdOc/Z9i7MFgeO8INxHkAQMiUtAOW1TbhKqgGQ5OXN1iAI60VaACw2OxabmBRXyA13B0BV
      Ofnph/QMTeJ0OgklZf70B9/OUmmCkHl3B0CSOHj4WSznz1BQWkVPb0+WyhKEtbHw7ND11Zw+
      dYqyiuq1rkcQ1tSCAejpG6Gmvp5IYG6t6xGENbVgAPKdVm50tuP15dbiyULuSQtAPBphYjbA
      408cwWzIjTnihdyVdhg0EQ3hnZ4mEY9jzy/ORk2CsGbSvuLNjnwaqkuZnZ1lcHhla4QJwoMu
      7TxALBbFH0nx2OOPo5HEJpCwsaVtAvX3dOPz+ei8do1INMaW5u24HdZs1CbkgFtzPyUJRkLc
      HO+nvriSgalhJI2e5qomZEmls+cCea5NFBtW/9KctBNhjVtbmDj6PrOKlnyrjmvXOjh04A+m
      SFRVOq5cIpLUsGPnDpa/wJGwLqkK01O9aA1OnDYXqppieqofg9mDzWK7+6mqSiIRJxqPEI2F
      CUdD+ELzBCMh5kLzBCNhfJEgoXiUWEohoSjMBbdj0ueRkvRfvotEgc3JnJqZVSsXHNFb4Cmk
      u38UKWFElfVfe1RlbGwcWSPhj23DSHxF63wJ64uS8DEbjKLx9+Cw7sU3dQ01r5rxsQ6mtXqu
      dR7HYs0nHIsQCPuIJuIkkkkSqooiaUCS0elNGAwWLCYH5QVlmI1WzEYLM0EfzWUVjAcVDGqA
      iflprKbMXpeWFoBIJEJ94xbKqjYhyxo0X5uXU0nFSaLFYpCJx+NYjHLOrCkrQDyRIhGdA40W
      UInHI+isJkDF6x3G55sESYPJ4sbhKMJotGEy2jCbHZiNNowGEzqtDq2sW/CLU1VVdLop4ood
      e54eUImoWnRKFJW8Vf950gIwPjGBXkrSOzSBxe5m1/bNdz0uyXqqy4sIxRLYjHpkGRGAHKLR
      aDGZHSSTcYYHLpJfVM/YxFWM5gJqa/ZQX7cXp7MIaZkHUCRJosBx97IclsIq4NbcoKstLQA1
      1dV0tF1A0egx6dMTKkkamprvrCWbSq3NIhrCg0FvdFDjLrnrvrrqO2vJuVwlX3/JA23BmOq0
      WiZH+xkc39grBApCWg8w0NOFbHJy+PCTOBxinS5hY0vrAYrLKlBjfj796F1+/uLr2ahJENZM
      Wg/QfeUcX1y+wY49D/Hd5qZs1CQIayatB2jYtofDhx6ir+Miv/j1G9moSRDWTFoPMDE2gqI1
      890f/AizSUx7KGxsaQGorG3IRh2CkBXick8hp4kACDlNBEDIaSIAQk4TARBymgiAkNNEAISc
      tqwAzE6OcfXqNeJKllfSFoQVWnIAVCXJhbZ2nG43WjESUljnlrzKr6qk8Ici+Ea6iUhGiq0y
      Wm0GFwsWhAxacg8gyXpqy4vxxWUKnWaxTKqwri35q1uSJHbseej2bTEkUljPxFEgIaeJAAg5
      TQRAyGkiAEJOEwEQcpoIgJDTRACEnCYCIOQ0EQAhp4kACDlNBEDIaSIAQk4TARBymgiAkNOW
      FwBVxeudWeVSBGHtLSsAwzev8to7H692LYKw5pY8ICYZ8XHiYhf2PJVAKIqkJsWQSGHdWnIP
      IOdZ+aMXvoPT6cBkzBNDIoV1beljgjUaDAYDTz/9NLJGTAshrG/LPgoky/Jq1iEIWSEOgwo5
      TQRAyGkiAEJOEwEQcpoIgJDTRACEnCYCIOS0/w9rZakz+F+BqAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='superdistrict averages' width='192'>
      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
      LpVahWSmhCcSYieZ4dj0II2WiNhoUMwkiMTSuDxu6i1wG1q4hg5hksoEw1sYHX7EYhK9QY+1
      axSxsEOtkKLpOLSnWEtLvPjN7+Aw61hdXqAigt+q4h0/TSy0gsUINVFgeryfjVAEs6OLeqOB
      IknUClkuXbnKd/74FTbDUcx2FyePHjqQsXs4CGytrjJy+iQj45PEL1/Yqw9AYz24ydPPvnAg
      HWIQBIIrK0yfOEqXv5+dm5fJ9w/SZTf+Zhxgcmaav//bHzEzM3av8EPh3Z/9gu1kBNHcjc/Y
      Ymsnyd25ZQ6N93Jz9mCtQa/Xxtxmhm63hd1UHFH++AzuyPQQVy5eYWjqMKLYoprZIp7/MO3h
      9u3bCAYThVKd5E6IzVgKp1mHIkvImo71lWV2kimOnphmc2WNzWiKQxMjwN4GW//Fn3yHpavv
      sBxO0BJl1tfXyaVjNGSNRCKJ2GxQLBZpiRKKqrK2tgpAOZempbPQ09vDzsYCvRPHyUU3aT7C
      E1BBp7+/55GmSlSaYL/3xJ8+c5qNuWtEswfQIcZgwmY1AwKCKlJpiGiqhiDoPm4BBJ2B3uFD
      fOtrg2yv3qFVyhDaTtPf043Zaqff2Y/DnMfR1OHr6sZms2O1HFySmt5gYvzQDCZBJZ3cxqzT
      sNqcCNUWVosVVYOu4Wl237vFV1/p4sq5W9gdbiw2O0ZKGK0Wxgd7yNRFxkbHcQtVtqpmdIJA
      ejuCJNhwOB3oVREEPVarHYuhTjSZw2IbRdNklhaXcXf3YtOJrKSLuF0u+of6Ca0sgcGEze6A
      7A5bW2Fa2HA67Bg1PZrejNlkwoiMr3+arbUFdE4v5n3eFOphItYr5CsVErEk0z49Zmc3SiPP
      lbkt3GaNpqrHZdv/MHutlKdYqdwviLE77JR3I2yF2mRjrH1Blbh14ybTp57Ga+/kOjyuPL4K
      0KEDbZIM1wmEddgv2kYBVPUx2Uynw4HSFgrwAYok0lLAbABZ1WE2tZX4Hb6AtFU6dCGxwauv
      v0tpN8JyKEmrUaNQqiC2GkiKSqNRp9VskMnmkaUW7777Lo2mSLlUoN789AqwDg8eTRH58d9+
      n+q9Hdnef+vnbKWKHxbEvH+e5gEVxPzoBz++XxDz5s/faM+CGICRPh9La2HsvlEuXg8z0m2j
      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
    </thumbnail>
    <thumbnail height='192' name='taz averages' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='taz ranges' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cumulative distributions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
