<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xml:base='https://10ay.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='NTD-transit-recovery' path='/t/metropolitantransportationcommission/workbooks' revision='1.9' site='metropolitantransportationcommission' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Today' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2023-11-14#'>
        <calculation class='tableau' formula='#2023-11-14#' />
      </column>
      <column caption='bus max UPT per VRH (Oct 2019)' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='33.6087382816335'>
        <calculation class='tableau' formula='33.6087382816335' />
      </column>
      <column caption='rail max UPT per VRH (Oct 2019)' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='63.5359336580623'>
        <calculation class='tableau' formula='63.5359336580623' />
      </column>
      <column caption='bus k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='0.0032669356572285401'>
        <calculation class='tableau' formula='0.0032669356572285401' />
      </column>
      <column caption='bus x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='44590'>
        <calculation class='tableau' formula='44590' />
      </column>
      <column caption='rail k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='0.0019984439512772899'>
        <calculation class='tableau' formula='0.0019984439512772899' />
      </column>
      <column caption='rail x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='45161'>
        <calculation class='tableau' formula='45161' />
      </column>
      <column caption='rail max - high' datatype='real' default-format='p0%' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='bus min UPT per VRH (April 2020)' datatype='real' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='11.96'>
        <calculation class='tableau' formula='11.96' />
      </column>
      <column caption='bus max - high' datatype='real' default-format='p0%' name='[bus k - high (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.'>
        <calculation class='tableau' formula='1.' />
      </column>
      <column caption='bus k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k - low (copy)_605734172523401226]' param-domain-type='any' role='measure' type='quantitative' value='0.0028033789333171601'>
        <calculation class='tableau' formula='0.0028033789333171601' />
      </column>
      <column caption='bus k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k estimate (copy)_605734172509597701]' param-domain-type='any' role='measure' type='quantitative' value='0.00382167947208232'>
        <calculation class='tableau' formula='0.00382167947208232' />
      </column>
      <column caption='bus max - med' datatype='real' default-format='p0%' name='[bus max - high (copy)_1075234433896251394]' param-domain-type='any' role='measure' type='quantitative' value='0.89'>
        <calculation class='tableau' formula='0.89' />
      </column>
      <column caption='bus max - low' datatype='real' default-format='p0%' name='[bus max - med (copy)_1075234433896361987]' param-domain-type='any' role='measure' type='quantitative' value='0.77'>
        <calculation class='tableau' formula='0.77' />
      </column>
      <column caption='bus x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 - low (copy)_605734172523446283]' param-domain-type='any' role='measure' type='quantitative' value='44690'>
        <calculation class='tableau' formula='44690' />
      </column>
      <column caption='bus x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 estimate (copy)_605734172522225673]' param-domain-type='any' role='measure' type='quantitative' value='44516'>
        <calculation class='tableau' formula='44516' />
      </column>
      <column caption='rail k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k - low (copy)_605734172527276047]' param-domain-type='any' role='measure' type='quantitative' value='0.0018861585980505099'>
        <calculation class='tableau' formula='0.0018861585980505099' />
      </column>
      <column caption='rail k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k estimate (copy)_605734172525633548]' param-domain-type='any' role='measure' type='quantitative' value='0.0021842743388504602'>
        <calculation class='tableau' formula='0.0021842743388504602' />
      </column>
      <column caption='rail max - med' datatype='real' default-format='p0%' name='[rail max - high (copy)_1075234433901314052]' param-domain-type='any' role='measure' type='quantitative' value='0.85'>
        <calculation class='tableau' formula='0.85' />
      </column>
      <column caption='rail max - low' datatype='real' default-format='p0%' name='[rail max - med (copy)_1075234433901854725]' param-domain-type='any' role='measure' type='quantitative' value='0.7'>
        <calculation class='tableau' formula='0.7' />
      </column>
      <column caption='rail min UPT per VRH (Apr 2020)' datatype='real' name='[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]' param-domain-type='any' role='measure' type='quantitative' value='5.61'>
        <calculation class='tableau' formula='5.61' />
      </column>
      <column caption='rail x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 - low (copy)_605734172527190030]' param-domain-type='any' role='measure' type='quantitative' value='45311'>
        <calculation class='tableau' formula='45311' />
      </column>
      <column caption='rail x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 estimate (copy)_605734172526239757]' param-domain-type='any' role='measure' type='quantitative' value='44982'>
        <calculation class='tableau' formula='44982' />
      </column>
    </datasource>
    <datasource caption='TransitHesitance' inline='true' name='federated.0y3qo5u07y662o17w9ljm040hec7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NTD_long_VRH_UPT' name='textscan.08tlf0g1hquvb71auf1lz0s7aysv'>
            <connection class='textscan' directory='E:/Box/Plan Bay Area 2050+/Federal and State Approvals/CARB Technical Methodology/Exogenous Forces/Transit_hesitance' filename='NTD_long_VRH_UPT.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='NTD_long_VRH_UPT.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='NTD.ID' />
            <column datatype='integer' name='Legacy.NTD.ID' />
            <column datatype='string' name='Agency' />
            <column datatype='string' name='Status' />
            <column datatype='string' name='Reporter.Type' />
            <column datatype='integer' name='UACE.CD' />
            <column datatype='string' name='UZA.Name' />
            <column datatype='string' name='Mode' />
            <column datatype='string' name='TOS' />
            <column datatype='string' name='X3.Mode' />
            <column datatype='string' name='Common.Agency.Name' />
            <column datatype='string' name='month' />
            <column datatype='integer' name='year' />
            <column datatype='integer' name='Monthly.Vehicle.Revenue.Hours' />
            <column datatype='integer' name='month_int' />
            <column datatype='integer' name='days_in_month' />
            <column datatype='real' name='average.daily.Vehicle.Revenue.Hours' />
            <column datatype='integer' name='NTD ID' />
            <column datatype='integer' name='Legacy NTD ID' />
            <column datatype='string' name='Reporter Type' />
            <column datatype='integer' name='UACE CD' />
            <column datatype='string' name='UZA Name' />
            <column datatype='string' name='3 Mode' />
            <column datatype='integer' name='Monthly.Unlinked.Passenger.Trips' />
            <column datatype='real' name='Monthly_To_Typical_Weekday' />
            <column datatype='real' name='average.daily.Unlinked.Passenger.Trips' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.08tlf0g1hquvb71auf1lz0s7aysv' name='NTD_long_VRH_UPT.csv' table='[NTD_long_VRH_UPT#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='NTD.ID' ordinal='0' />
              <column datatype='integer' name='Legacy.NTD.ID' ordinal='1' />
              <column datatype='string' name='Agency' ordinal='2' />
              <column datatype='string' name='Status' ordinal='3' />
              <column datatype='string' name='Reporter.Type' ordinal='4' />
              <column datatype='integer' name='UACE.CD' ordinal='5' />
              <column datatype='string' name='UZA.Name' ordinal='6' />
              <column datatype='string' name='Mode' ordinal='7' />
              <column datatype='string' name='TOS' ordinal='8' />
              <column datatype='string' name='X3.Mode' ordinal='9' />
              <column datatype='string' name='Common.Agency.Name' ordinal='10' />
              <column datatype='string' name='month' ordinal='11' />
              <column datatype='integer' name='year' ordinal='12' />
              <column datatype='integer' name='Monthly.Vehicle.Revenue.Hours' ordinal='13' />
              <column datatype='integer' name='month_int' ordinal='14' />
              <column datatype='integer' name='days_in_month' ordinal='15' />
              <column datatype='real' name='average.daily.Vehicle.Revenue.Hours' ordinal='16' />
              <column datatype='integer' name='NTD ID' ordinal='17' />
              <column datatype='integer' name='Legacy NTD ID' ordinal='18' />
              <column datatype='string' name='Reporter Type' ordinal='19' />
              <column datatype='integer' name='UACE CD' ordinal='20' />
              <column datatype='string' name='UZA Name' ordinal='21' />
              <column datatype='string' name='3 Mode' ordinal='22' />
              <column datatype='integer' name='Monthly.Unlinked.Passenger.Trips' ordinal='23' />
              <column datatype='real' name='Monthly_To_Typical_Weekday' ordinal='24' />
              <column datatype='real' name='average.daily.Unlinked.Passenger.Trips' ordinal='25' />
            </columns>
          </relation>
          <relation connection='textscan.08tlf0g1hquvb71auf1lz0s7aysv' name='future-stub.csv' table='[future-stub#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Mode' ordinal='0' />
              <column datatype='string' name='month' ordinal='1' />
              <column datatype='integer' name='month_int' ordinal='2' />
              <column datatype='integer' name='year' ordinal='3' />
              <column datatype='string' name='type' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='NTD_long_VRH_UPT.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='NTD.ID' />
            <column datatype='integer' name='Legacy.NTD.ID' />
            <column datatype='string' name='Agency' />
            <column datatype='string' name='Status' />
            <column datatype='string' name='Reporter.Type' />
            <column datatype='integer' name='UACE.CD' />
            <column datatype='string' name='UZA.Name' />
            <column datatype='string' name='Mode' />
            <column datatype='string' name='TOS' />
            <column datatype='string' name='X3.Mode' />
            <column datatype='string' name='Common.Agency.Name' />
            <column datatype='string' name='month' />
            <column datatype='integer' name='year' />
            <column datatype='integer' name='Monthly.Vehicle.Revenue.Hours' />
            <column datatype='integer' name='month_int' />
            <column datatype='integer' name='days_in_month' />
            <column datatype='real' name='average.daily.Vehicle.Revenue.Hours' />
            <column datatype='integer' name='NTD ID' />
            <column datatype='integer' name='Legacy NTD ID' />
            <column datatype='string' name='Reporter Type' />
            <column datatype='integer' name='UACE CD' />
            <column datatype='string' name='UZA Name' />
            <column datatype='string' name='3 Mode' />
            <column datatype='integer' name='Monthly.Unlinked.Passenger.Trips' />
            <column datatype='real' name='Monthly_To_Typical_Weekday' />
            <column datatype='real' name='average.daily.Unlinked.Passenger.Trips' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.08tlf0g1hquvb71auf1lz0s7aysv' name='NTD_long_VRH_UPT.csv' table='[NTD_long_VRH_UPT#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='NTD.ID' ordinal='0' />
              <column datatype='integer' name='Legacy.NTD.ID' ordinal='1' />
              <column datatype='string' name='Agency' ordinal='2' />
              <column datatype='string' name='Status' ordinal='3' />
              <column datatype='string' name='Reporter.Type' ordinal='4' />
              <column datatype='integer' name='UACE.CD' ordinal='5' />
              <column datatype='string' name='UZA.Name' ordinal='6' />
              <column datatype='string' name='Mode' ordinal='7' />
              <column datatype='string' name='TOS' ordinal='8' />
              <column datatype='string' name='X3.Mode' ordinal='9' />
              <column datatype='string' name='Common.Agency.Name' ordinal='10' />
              <column datatype='string' name='month' ordinal='11' />
              <column datatype='integer' name='year' ordinal='12' />
              <column datatype='integer' name='Monthly.Vehicle.Revenue.Hours' ordinal='13' />
              <column datatype='integer' name='month_int' ordinal='14' />
              <column datatype='integer' name='days_in_month' ordinal='15' />
              <column datatype='real' name='average.daily.Vehicle.Revenue.Hours' ordinal='16' />
              <column datatype='integer' name='NTD ID' ordinal='17' />
              <column datatype='integer' name='Legacy NTD ID' ordinal='18' />
              <column datatype='string' name='Reporter Type' ordinal='19' />
              <column datatype='integer' name='UACE CD' ordinal='20' />
              <column datatype='string' name='UZA Name' ordinal='21' />
              <column datatype='string' name='3 Mode' ordinal='22' />
              <column datatype='integer' name='Monthly.Unlinked.Passenger.Trips' ordinal='23' />
              <column datatype='real' name='Monthly_To_Typical_Weekday' ordinal='24' />
              <column datatype='real' name='average.daily.Unlinked.Passenger.Trips' ordinal='25' />
            </columns>
          </relation>
          <relation connection='textscan.08tlf0g1hquvb71auf1lz0s7aysv' name='future-stub.csv' table='[future-stub#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Mode' ordinal='0' />
              <column datatype='string' name='month' ordinal='1' />
              <column datatype='integer' name='month_int' ordinal='2' />
              <column datatype='integer' name='year' ordinal='3' />
              <column datatype='string' name='type' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NTD.ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NTD.ID]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>NTD.ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legacy.NTD.ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legacy.NTD.ID]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Legacy.NTD.ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Agency]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Agency</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reporter.Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Reporter.Type]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Reporter.Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UACE.CD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UACE.CD]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>UACE.CD</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UZA.Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UZA.Name]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>UZA.Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Mode]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Mode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TOS]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>TOS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X3.Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X3.Mode]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>X3.Mode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Common.Agency.Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Common.Agency.Name]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Common.Agency.Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly.Vehicle.Revenue.Hours</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly.Vehicle.Revenue.Hours]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Monthly.Vehicle.Revenue.Hours</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_int</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month_int]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>month_int</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_in_month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_in_month]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>days_in_month</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average.daily.Vehicle.Revenue.Hours</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average.daily.Vehicle.Revenue.Hours]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>average.daily.Vehicle.Revenue.Hours</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NTD ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NTD ID]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>NTD ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legacy NTD ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legacy NTD ID]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Legacy NTD ID</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reporter Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Reporter Type]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Reporter Type</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UACE CD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UACE CD]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>UACE CD</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UZA Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UZA Name]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>UZA Name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3 Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[3 Mode]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>3 Mode</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly.Unlinked.Passenger.Trips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly.Unlinked.Passenger.Trips]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Monthly.Unlinked.Passenger.Trips</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly_To_Typical_Weekday</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Monthly_To_Typical_Weekday]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Monthly_To_Typical_Weekday</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average.daily.Unlinked.Passenger.Trips</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average.daily.Unlinked.Passenger.Trips]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>average.daily.Unlinked.Passenger.Trips</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[3 Mode]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Agency]' role='dimension' type='nominal' />
      <column caption='Percent recovered - estimated' datatype='real' default-format='p0%' name='[Calculation_1268326267935092736]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF STARTSWITH([Calculation_605734172513480712], &quot;Buses&quot;) then&#13;&#10;  ([Calculation_605734172506800129]-[Parameters].[Parameter 9])/&#13;&#10;  ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])&#13;&#10;ELSEIF STARTSWITH([Calculation_605734172513480712], &quot;Rail and Ferry&quot;) THEN&#13;&#10;  ([Calculation_605734172506800129]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])/&#13;&#10;  ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])&#13;&#10;end' />
      </column>
      <column caption='Estimated UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_605734172506800129]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; MAKEDATE(2020,04,01) then&#13;&#10;  NULL&#13;&#10;// middle = estimated&#13;&#10;ELSEIF ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 9]+&#13;&#10; ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])*[Parameters].[bus max - high (copy)_1075234433896251394]/&#13;&#10;  (1+EXP([Parameters].[Parameter 4]*([Parameters].[Parameter 5]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 9]+&#13;&#10; ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])*[Parameters].[bus max - med (copy)_1075234433896361987]/&#13;&#10;  (1+EXP([Parameters].[bus k estimate (copy)_605734172509597701]*([Parameters].[bus x0 estimate (copy)_605734172522225673]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 9]+&#13;&#10; ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])*[Parameters].[bus k - high (copy)]/&#13;&#10;  (1+EXP([Parameters].[bus k - low (copy)_605734172523401226]*([Parameters].[bus x0 - low (copy)_605734172523446283]-[Calculation_605734172507439106])))&#13;&#10;// middle = estimated&#13;&#10;ELSEIF  ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]+&#13;&#10; ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])*[Parameters].[rail max - high (copy)_1075234433901314052]/&#13;&#10;  (1+EXP([Parameters].[Parameter 6]*([Parameters].[Parameter 7]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF  ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]+&#13;&#10; ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])*[Parameters].[rail max - med (copy)_1075234433901854725]/&#13;&#10;  (1+EXP([Parameters].[rail k estimate (copy)_605734172525633548]*([Parameters].[rail x0 estimate (copy)_605734172526239757]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF  ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]+&#13;&#10; ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])*[Parameters].[Parameter 8]/&#13;&#10;  (1+EXP([Parameters].[rail k - low (copy)_605734172527276047]*([Parameters].[rail x0 - low (copy)_605734172527190030]-[Calculation_605734172507439106])))&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
      </column>
      <column aggregation='Sum' caption='Date Num' datatype='integer' name='[Calculation_605734172507439106]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='int([Calculation_776026533391114247])' />
      </column>
      <column caption='Mode &amp; Type' datatype='string' name='[Calculation_605734172513480712]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Mode (group)] + &quot; - &quot; + IFNULL([type],&quot;historic&quot;)' />
      </column>
      <column caption='Historic or Estimated Monthly VRH' datatype='integer' name='[Calculation_605734172528365584]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; [Parameters].[Parameter 1] then&#13;&#10;  [Monthly.Vehicle.Revenue.Hours]&#13;&#10;ELSEIF (([Mode (group)]==&quot;Buses&quot;) AND ([type]==&quot;middle&quot;)) then&#13;&#10; // October 2019 sum&#13;&#10; 723117&#13;&#10;ELSEIF ([Mode (group)]==&quot;Rail and Ferry&quot;) AND ([type]==&quot;middle&quot;) then&#13;&#10; // October 2019 sum&#13;&#10; 320883&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
      </column>
      <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
      </column>
      <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
      </column>
      <column datatype='string' name='[Common.Agency.Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Legacy NTD ID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Legacy.NTD.ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
          <bin default-name='false' value='&quot;Buses&quot;'>
            <value>&quot;CB&quot;</value>
            <value>&quot;MB&quot;</value>
            <value>&quot;RB&quot;</value>
            <value>&quot;TB&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Demand Response&quot;'>
            <value>&quot;DR&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
            <value>&quot;CC&quot;</value>
            <value>&quot;CR&quot;</value>
            <value>&quot;FB&quot;</value>
            <value>&quot;HR&quot;</value>
            <value>&quot;LR&quot;</value>
            <value>&quot;MG&quot;</value>
            <value>&quot;SR&quot;</value>
            <value>&quot;YR&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;CB&quot;' value='Commuter Bus' />
          <alias key='&quot;CC&quot;' value='Cable Car' />
          <alias key='&quot;CR&quot;' value='Commuter Rail' />
          <alias key='&quot;DR&quot;' value='Demand Response' />
          <alias key='&quot;FB&quot;' value='Ferryboat' />
          <alias key='&quot;HR&quot;' value='Heavy Rail' />
          <alias key='&quot;LR&quot;' value='Light Rail' />
          <alias key='&quot;MB&quot;' value='Bus' />
          <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
          <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
          <alias key='&quot;SR&quot;' value='Streetcar Rail' />
          <alias key='&quot;TB&quot;' value='Trolleybus' />
          <alias key='&quot;YR&quot;' value='Hybrid Rail' />
        </aliases>
      </column>
      <column caption='Monthly To Typical Weekday' datatype='real' hidden='true' name='[Monthly_To_Typical_Weekday]' role='measure' type='quantitative' />
      <column caption='Ntd Id' datatype='integer' hidden='true' name='[NTD ID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[NTD.ID]' role='dimension' type='ordinal' />
      <column caption='Percent recovered - historic' datatype='real' default-format='p0%' name='[Percent recovered - estimated (copy)_1141381053927026693]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if (ATTR([Mode (group)])==&quot;Buses&quot;) then&#13;&#10;  ([Calculation_776026533391941640]-[Parameters].[Parameter 9])/&#13;&#10;  ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])&#13;&#10;ELSEIF (ATTR([Mode (group)])== &quot;Rail and Ferry&quot;) THEN&#13;&#10;  ([Calculation_776026533391941640]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])/&#13;&#10;  ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])&#13;&#10;end' />
      </column>
      <column datatype='string' hidden='true' name='[Reporter Type]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Reporter.Type]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Status]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[TOS]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Table Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Uace Cd' datatype='integer' hidden='true' name='[UACE CD]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[UACE.CD]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[UZA Name]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[UZA.Name]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[X3.Mode]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='NTD_long_VRH_UPT.csv' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[average.daily.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[average.daily.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
      <column caption='Days In Month' datatype='integer' hidden='true' name='[days_in_month]' role='dimension' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Month Int' datatype='integer' hidden='true' name='[month_int]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_605734172506800129]' derivation='Attribute' name='[attr:Calculation_605734172506800129:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_605734172513480712]' derivation='None' name='[none:Calculation_605734172513480712:nk]' pivot='key' type='nominal' />
      <column-instance column='[Common.Agency.Name]' derivation='None' name='[none:Common.Agency.Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_605734172506800129]' derivation='Sum' name='[sum:Calculation_605734172506800129:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
      <group caption='Future' name='[Future]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='[Calculation_776026533391114247]&gt;[Parameters].[Parameter 1]' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Calculation_776026533391114247]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Historic' name='[Historic]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='[Calculation_776026533391114247] &lt; [Parameters].[Parameter 1]' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Calculation_776026533391114247]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Recent Past' name='[Recent Past]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='([Calculation_776026533391114247] &lt; [Parameters].[Parameter 1]) AND (YEAR([Calculation_776026533391114247]) &gt;= 2019)' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Calculation_776026533391114247]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.684307' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.315693' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Common.Agency.Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Marin Transit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AC Transit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VTA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;County Connection&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Napa Vine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FAST&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Union City Transit*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ACE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WestCAT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sonoma County Transit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GGBHTD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SFMTA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tri Delta Transit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vacaville City Coach*&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Petaluma Transit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LAVTA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WETA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SolTrans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SamTrans&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Caltrain&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Mode:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;YR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CB&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Mode (group)]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Buses&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Rail and Ferry&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Mode (group)]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Buses&quot;</bucket>
                <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Buses&quot;</bucket>
                <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Buses&quot;</bucket>
                <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Calculation_605734172506800129:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Rail and Ferry&quot;</bucket>
                <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Rail and Ferry&quot;</bucket>
                <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Rail and Ferry&quot;</bucket>
                <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Calculation_605734172506800129:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_605734172513480712:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Buses - historic&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Buses - high&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Buses - middle&quot;</bucket>
            </map>
            <map to='#7c4d79'>
              <bucket>&quot;Rail and Ferry - historic&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Rail and Ferry - Historical&quot;</bucket>
            </map>
            <map to='#a27099'>
              <bucket>&quot;Rail and Ferry - high&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Buses - low&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Buses - Historic&quot;</bucket>
            </map>
            <map to='#cf9dbe'>
              <bucket>&quot;Rail and Ferry - middle&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;Rail and Ferry - low&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Buses - Historical&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Rail and Ferry - Historic&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[:Measure Names]' direction='ASC'>
          <dictionary>
            <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk]&quot;</bucket>
            <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk]&quot;</bucket>
            <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]&quot;</bucket>
            <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Calculation_605734172506800129:qk]&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:Calculation_605734172513480712:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Buses - historic&quot;</bucket>
            <bucket>&quot;Buses - low&quot;</bucket>
            <bucket>&quot;Buses - middle&quot;</bucket>
            <bucket>&quot;Buses - high&quot;</bucket>
            <bucket>&quot;Demand Response - historic&quot;</bucket>
            <bucket>&quot;Rail and Ferry - historic&quot;</bucket>
            <bucket>&quot;Rail and Ferry - low&quot;</bucket>
            <bucket>&quot;Rail and Ferry - middle&quot;</bucket>
            <bucket>&quot;Rail and Ferry - high&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='NTD.ID' />
        <field-sort-custom-order field='Legacy.NTD.ID' />
        <field-sort-custom-order field='Agency' />
        <field-sort-custom-order field='Status' />
        <field-sort-custom-order field='Reporter.Type' />
        <field-sort-custom-order field='UACE.CD' />
        <field-sort-custom-order field='UZA.Name' />
        <field-sort-custom-order field='Mode' />
        <field-sort-custom-order field='TOS' />
        <field-sort-custom-order field='X3.Mode' />
        <field-sort-custom-order field='Common.Agency.Name' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='Calculation_776026533391114247' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Monthly.Vehicle.Revenue.Hours' />
        <field-sort-custom-order field='month_int' />
        <field-sort-custom-order field='days_in_month' />
        <field-sort-custom-order field='average.daily.Vehicle.Revenue.Hours' />
        <field-sort-custom-order field='NTD ID' />
        <field-sort-custom-order field='Legacy NTD ID' />
        <field-sort-custom-order field='Reporter Type' />
        <field-sort-custom-order field='UACE CD' />
        <field-sort-custom-order field='UZA Name' />
        <field-sort-custom-order field='3 Mode' />
        <field-sort-custom-order field='Monthly.Unlinked.Passenger.Trips' />
        <field-sort-custom-order field='Calculation_776026533391941640' />
        <field-sort-custom-order field='Monthly_To_Typical_Weekday' />
        <field-sort-custom-order field='average.daily.Unlinked.Passenger.Trips' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Today' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2023-11-14#'>
          <calculation class='tableau' formula='#2023-11-14#' />
        </column>
        <column caption='bus max UPT per VRH (Oct 2019)' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='33.6087382816335'>
          <calculation class='tableau' formula='33.6087382816335' />
        </column>
        <column caption='rail max UPT per VRH (Oct 2019)' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='63.5359336580623'>
          <calculation class='tableau' formula='63.5359336580623' />
        </column>
        <column caption='bus k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='0.0032669356572285401'>
          <calculation class='tableau' formula='0.0032669356572285401' />
        </column>
        <column caption='bus x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='44590'>
          <calculation class='tableau' formula='44590' />
        </column>
        <column caption='rail k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='0.0019984439512772899'>
          <calculation class='tableau' formula='0.0019984439512772899' />
        </column>
        <column caption='rail x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='45161'>
          <calculation class='tableau' formula='45161' />
        </column>
        <column caption='rail max - high' datatype='real' default-format='p0%' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
        <column caption='bus min UPT per VRH (April 2020)' datatype='real' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='11.96'>
          <calculation class='tableau' formula='11.96' />
        </column>
        <column caption='bus max - high' datatype='real' default-format='p0%' name='[bus k - high (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.'>
          <calculation class='tableau' formula='1.' />
        </column>
        <column caption='bus k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k - low (copy)_605734172523401226]' param-domain-type='any' role='measure' type='quantitative' value='0.0028033789333171601'>
          <calculation class='tableau' formula='0.0028033789333171601' />
        </column>
        <column caption='bus k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k estimate (copy)_605734172509597701]' param-domain-type='any' role='measure' type='quantitative' value='0.00382167947208232'>
          <calculation class='tableau' formula='0.00382167947208232' />
        </column>
        <column caption='bus max - med' datatype='real' default-format='p0%' name='[bus max - high (copy)_1075234433896251394]' param-domain-type='any' role='measure' type='quantitative' value='0.89'>
          <calculation class='tableau' formula='0.89' />
        </column>
        <column caption='bus max - low' datatype='real' default-format='p0%' name='[bus max - med (copy)_1075234433896361987]' param-domain-type='any' role='measure' type='quantitative' value='0.77'>
          <calculation class='tableau' formula='0.77' />
        </column>
        <column caption='bus x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 - low (copy)_605734172523446283]' param-domain-type='any' role='measure' type='quantitative' value='44690'>
          <calculation class='tableau' formula='44690' />
        </column>
        <column caption='bus x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 estimate (copy)_605734172522225673]' param-domain-type='any' role='measure' type='quantitative' value='44516'>
          <calculation class='tableau' formula='44516' />
        </column>
        <column caption='rail k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k - low (copy)_605734172527276047]' param-domain-type='any' role='measure' type='quantitative' value='0.0018861585980505099'>
          <calculation class='tableau' formula='0.0018861585980505099' />
        </column>
        <column caption='rail k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k estimate (copy)_605734172525633548]' param-domain-type='any' role='measure' type='quantitative' value='0.0021842743388504602'>
          <calculation class='tableau' formula='0.0021842743388504602' />
        </column>
        <column caption='rail max - med' datatype='real' default-format='p0%' name='[rail max - high (copy)_1075234433901314052]' param-domain-type='any' role='measure' type='quantitative' value='0.85'>
          <calculation class='tableau' formula='0.85' />
        </column>
        <column caption='rail max - low' datatype='real' default-format='p0%' name='[rail max - med (copy)_1075234433901854725]' param-domain-type='any' role='measure' type='quantitative' value='0.7'>
          <calculation class='tableau' formula='0.7' />
        </column>
        <column caption='rail min UPT per VRH (Apr 2020)' datatype='real' name='[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]' param-domain-type='any' role='measure' type='quantitative' value='5.61'>
          <calculation class='tableau' formula='5.61' />
        </column>
        <column caption='rail x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 - low (copy)_605734172527190030]' param-domain-type='any' role='measure' type='quantitative' value='45311'>
          <calculation class='tableau' formula='45311' />
        </column>
        <column caption='rail x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 estimate (copy)_605734172526239757]' param-domain-type='any' role='measure' type='quantitative' value='44982'>
          <calculation class='tableau' formula='44982' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='NTD_long_VRH_UPT.csv' id='NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0'>
            <properties context=''>
              <relation all='true' name='NTD_long_VRH_UPT.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='NTD.ID' />
                  <column datatype='integer' name='Legacy.NTD.ID' />
                  <column datatype='string' name='Agency' />
                  <column datatype='string' name='Status' />
                  <column datatype='string' name='Reporter.Type' />
                  <column datatype='integer' name='UACE.CD' />
                  <column datatype='string' name='UZA.Name' />
                  <column datatype='string' name='Mode' />
                  <column datatype='string' name='TOS' />
                  <column datatype='string' name='X3.Mode' />
                  <column datatype='string' name='Common.Agency.Name' />
                  <column datatype='string' name='month' />
                  <column datatype='integer' name='year' />
                  <column datatype='integer' name='Monthly.Vehicle.Revenue.Hours' />
                  <column datatype='integer' name='month_int' />
                  <column datatype='integer' name='days_in_month' />
                  <column datatype='real' name='average.daily.Vehicle.Revenue.Hours' />
                  <column datatype='integer' name='NTD ID' />
                  <column datatype='integer' name='Legacy NTD ID' />
                  <column datatype='string' name='Reporter Type' />
                  <column datatype='integer' name='UACE CD' />
                  <column datatype='string' name='UZA Name' />
                  <column datatype='string' name='3 Mode' />
                  <column datatype='integer' name='Monthly.Unlinked.Passenger.Trips' />
                  <column datatype='real' name='Monthly_To_Typical_Weekday' />
                  <column datatype='real' name='average.daily.Unlinked.Passenger.Trips' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.08tlf0g1hquvb71auf1lz0s7aysv' name='NTD_long_VRH_UPT.csv' table='[NTD_long_VRH_UPT#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='NTD.ID' ordinal='0' />
                    <column datatype='integer' name='Legacy.NTD.ID' ordinal='1' />
                    <column datatype='string' name='Agency' ordinal='2' />
                    <column datatype='string' name='Status' ordinal='3' />
                    <column datatype='string' name='Reporter.Type' ordinal='4' />
                    <column datatype='integer' name='UACE.CD' ordinal='5' />
                    <column datatype='string' name='UZA.Name' ordinal='6' />
                    <column datatype='string' name='Mode' ordinal='7' />
                    <column datatype='string' name='TOS' ordinal='8' />
                    <column datatype='string' name='X3.Mode' ordinal='9' />
                    <column datatype='string' name='Common.Agency.Name' ordinal='10' />
                    <column datatype='string' name='month' ordinal='11' />
                    <column datatype='integer' name='year' ordinal='12' />
                    <column datatype='integer' name='Monthly.Vehicle.Revenue.Hours' ordinal='13' />
                    <column datatype='integer' name='month_int' ordinal='14' />
                    <column datatype='integer' name='days_in_month' ordinal='15' />
                    <column datatype='real' name='average.daily.Vehicle.Revenue.Hours' ordinal='16' />
                    <column datatype='integer' name='NTD ID' ordinal='17' />
                    <column datatype='integer' name='Legacy NTD ID' ordinal='18' />
                    <column datatype='string' name='Reporter Type' ordinal='19' />
                    <column datatype='integer' name='UACE CD' ordinal='20' />
                    <column datatype='string' name='UZA Name' ordinal='21' />
                    <column datatype='string' name='3 Mode' ordinal='22' />
                    <column datatype='integer' name='Monthly.Unlinked.Passenger.Trips' ordinal='23' />
                    <column datatype='real' name='Monthly_To_Typical_Weekday' ordinal='24' />
                    <column datatype='real' name='average.daily.Unlinked.Passenger.Trips' ordinal='25' />
                  </columns>
                </relation>
                <relation connection='textscan.08tlf0g1hquvb71auf1lz0s7aysv' name='future-stub.csv' table='[future-stub#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='Mode' ordinal='0' />
                    <column datatype='string' name='month' ordinal='1' />
                    <column datatype='integer' name='month_int' ordinal='2' />
                    <column datatype='integer' name='year' ordinal='3' />
                    <column datatype='string' name='type' ordinal='4' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='NTD-mode-lookup' inline='true' name='federated.0silwm80l9lceo15tfv8s03t3l5k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NTD-mode-lookup' name='textscan.0kbiplr0861xos1d2tqld089sik3'>
            <connection class='textscan' directory='E:/GitHub/travel-model-one/utilities/transit-recovery' filename='NTD-mode-lookup.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0kbiplr0861xos1d2tqld089sik3' name='NTD-mode-lookup.csv' table='[NTD-mode-lookup#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Mode' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0kbiplr0861xos1d2tqld089sik3' name='NTD-mode-lookup.csv' table='[NTD-mode-lookup#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Mode' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NTD-mode-lookup.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Mode]</local-name>
            <parent-name>[NTD-mode-lookup.csv]</parent-name>
            <remote-alias>Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD-mode-lookup.csv_F725A08DAD8E493A9E6F718D6D8EFDE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[NTD-mode-lookup.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD-mode-lookup.csv_F725A08DAD8E493A9E6F718D6D8EFDE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='NTD-mode-lookup.csv' datatype='table' name='[__tableau_internal_object_id__].[NTD-mode-lookup.csv_F725A08DAD8E493A9E6F718D6D8EFDE2]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='NTD-mode-lookup.csv' id='NTD-mode-lookup.csv_F725A08DAD8E493A9E6F718D6D8EFDE2'>
            <properties context=''>
              <relation connection='textscan.0kbiplr0861xos1d2tqld089sik3' name='NTD-mode-lookup.csv' table='[NTD-mode-lookup#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Mode' ordinal='0' />
                  <column datatype='string' name='Description' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0y3qo5u07y662o17w9ljm040hec7'>
      <datasources>
        <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
      </datasources>
      <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
        <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;CB&quot;' value='Commuter Bus' />
            <alias key='&quot;CC&quot;' value='Cable Car' />
            <alias key='&quot;CR&quot;' value='Commuter Rail' />
            <alias key='&quot;DR&quot;' value='Demand Response' />
            <alias key='&quot;FB&quot;' value='Ferryboat' />
            <alias key='&quot;HR&quot;' value='Heavy Rail' />
            <alias key='&quot;LR&quot;' value='Light Rail' />
            <alias key='&quot;MB&quot;' value='Bus' />
            <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
            <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
            <alias key='&quot;SR&quot;' value='Streetcar Rail' />
            <alias key='&quot;TB&quot;' value='Trolleybus' />
            <alias key='&quot;YR&quot;' value='Hybrid Rail' />
          </aliases>
        </column>
        <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Mode:nk]' />
          <groupfilter function='member' level='[none:Mode:nk]' member='&quot;DR&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Debug table'>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Today' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2023-11-14#'>
              <calculation class='tableau' formula='#2023-11-14#' />
            </column>
            <column caption='bus max UPT per VRH (Oct 2019)' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='33.6087382816335'>
              <calculation class='tableau' formula='33.6087382816335' />
            </column>
            <column caption='rail max UPT per VRH (Oct 2019)' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='63.5359336580623'>
              <calculation class='tableau' formula='63.5359336580623' />
            </column>
            <column caption='bus k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='0.0032669356572285401'>
              <calculation class='tableau' formula='0.0032669356572285401' />
            </column>
            <column caption='bus x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='44590'>
              <calculation class='tableau' formula='44590' />
            </column>
            <column caption='rail k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='0.0019984439512772899'>
              <calculation class='tableau' formula='0.0019984439512772899' />
            </column>
            <column caption='rail x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='45161'>
              <calculation class='tableau' formula='45161' />
            </column>
            <column caption='rail max - high' datatype='real' default-format='p0%' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
            <column caption='bus min UPT per VRH (April 2020)' datatype='real' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='11.96'>
              <calculation class='tableau' formula='11.96' />
            </column>
            <column caption='bus max - high' datatype='real' default-format='p0%' name='[bus k - high (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
            </column>
            <column caption='bus k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k - low (copy)_605734172523401226]' param-domain-type='any' role='measure' type='quantitative' value='0.0028033789333171601'>
              <calculation class='tableau' formula='0.0028033789333171601' />
            </column>
            <column caption='bus k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k estimate (copy)_605734172509597701]' param-domain-type='any' role='measure' type='quantitative' value='0.00382167947208232'>
              <calculation class='tableau' formula='0.00382167947208232' />
            </column>
            <column caption='bus max - med' datatype='real' default-format='p0%' name='[bus max - high (copy)_1075234433896251394]' param-domain-type='any' role='measure' type='quantitative' value='0.89'>
              <calculation class='tableau' formula='0.89' />
            </column>
            <column caption='bus max - low' datatype='real' default-format='p0%' name='[bus max - med (copy)_1075234433896361987]' param-domain-type='any' role='measure' type='quantitative' value='0.77'>
              <calculation class='tableau' formula='0.77' />
            </column>
            <column caption='bus x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 - low (copy)_605734172523446283]' param-domain-type='any' role='measure' type='quantitative' value='44690'>
              <calculation class='tableau' formula='44690' />
            </column>
            <column caption='bus x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 estimate (copy)_605734172522225673]' param-domain-type='any' role='measure' type='quantitative' value='44516'>
              <calculation class='tableau' formula='44516' />
            </column>
            <column caption='rail k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k - low (copy)_605734172527276047]' param-domain-type='any' role='measure' type='quantitative' value='0.0018861585980505099'>
              <calculation class='tableau' formula='0.0018861585980505099' />
            </column>
            <column caption='rail k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k estimate (copy)_605734172525633548]' param-domain-type='any' role='measure' type='quantitative' value='0.0021842743388504602'>
              <calculation class='tableau' formula='0.0021842743388504602' />
            </column>
            <column caption='rail max - med' datatype='real' default-format='p0%' name='[rail max - high (copy)_1075234433901314052]' param-domain-type='any' role='measure' type='quantitative' value='0.85'>
              <calculation class='tableau' formula='0.85' />
            </column>
            <column caption='rail max - low' datatype='real' default-format='p0%' name='[rail max - med (copy)_1075234433901854725]' param-domain-type='any' role='measure' type='quantitative' value='0.7'>
              <calculation class='tableau' formula='0.7' />
            </column>
            <column caption='rail min UPT per VRH (Apr 2020)' datatype='real' name='[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]' param-domain-type='any' role='measure' type='quantitative' value='5.61'>
              <calculation class='tableau' formula='5.61' />
            </column>
            <column caption='rail x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 - low (copy)_605734172527190030]' param-domain-type='any' role='measure' type='quantitative' value='45311'>
              <calculation class='tableau' formula='45311' />
            </column>
            <column caption='rail x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 estimate (copy)_605734172526239757]' param-domain-type='any' role='measure' type='quantitative' value='44982'>
              <calculation class='tableau' formula='44982' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Percent recovered - estimated' datatype='real' default-format='p0%' name='[Calculation_1268326267935092736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF STARTSWITH([Calculation_605734172513480712], &quot;Buses&quot;) then&#13;&#10;  ([Calculation_605734172506800129]-[Parameters].[Parameter 9])/&#13;&#10;  ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])&#13;&#10;ELSEIF STARTSWITH([Calculation_605734172513480712], &quot;Rail and Ferry&quot;) THEN&#13;&#10;  ([Calculation_605734172506800129]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])/&#13;&#10;  ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])&#13;&#10;end' />
            </column>
            <column caption='Estimated UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_605734172506800129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; MAKEDATE(2020,04,01) then&#13;&#10;  NULL&#13;&#10;// middle = estimated&#13;&#10;ELSEIF ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 9]+&#13;&#10; ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])*[Parameters].[bus max - high (copy)_1075234433896251394]/&#13;&#10;  (1+EXP([Parameters].[Parameter 4]*([Parameters].[Parameter 5]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 9]+&#13;&#10; ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])*[Parameters].[bus max - med (copy)_1075234433896361987]/&#13;&#10;  (1+EXP([Parameters].[bus k estimate (copy)_605734172509597701]*([Parameters].[bus x0 estimate (copy)_605734172522225673]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 9]+&#13;&#10; ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])*[Parameters].[bus k - high (copy)]/&#13;&#10;  (1+EXP([Parameters].[bus k - low (copy)_605734172523401226]*([Parameters].[bus x0 - low (copy)_605734172523446283]-[Calculation_605734172507439106])))&#13;&#10;// middle = estimated&#13;&#10;ELSEIF  ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]+&#13;&#10; ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])*[Parameters].[rail max - high (copy)_1075234433901314052]/&#13;&#10;  (1+EXP([Parameters].[Parameter 6]*([Parameters].[Parameter 7]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF  ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]+&#13;&#10; ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])*[Parameters].[rail max - med (copy)_1075234433901854725]/&#13;&#10;  (1+EXP([Parameters].[rail k estimate (copy)_605734172525633548]*([Parameters].[rail x0 estimate (copy)_605734172526239757]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF  ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]+&#13;&#10; ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])*[Parameters].[Parameter 8]/&#13;&#10;  (1+EXP([Parameters].[rail k - low (copy)_605734172527276047]*([Parameters].[rail x0 - low (copy)_605734172527190030]-[Calculation_605734172507439106])))&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
            </column>
            <column aggregation='Sum' caption='Date Num' datatype='integer' name='[Calculation_605734172507439106]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='int([Calculation_776026533391114247])' />
            </column>
            <column caption='Mode &amp; Type' datatype='string' name='[Calculation_605734172513480712]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Mode (group)] + &quot; - &quot; + IFNULL([type],&quot;historic&quot;)' />
            </column>
            <column caption='Historic or Estimated Monthly VRH' datatype='integer' name='[Calculation_605734172528365584]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; [Parameters].[Parameter 1] then&#13;&#10;  [Monthly.Vehicle.Revenue.Hours]&#13;&#10;ELSEIF (([Mode (group)]==&quot;Buses&quot;) AND ([type]==&quot;middle&quot;)) then&#13;&#10; // October 2019 sum&#13;&#10; 723117&#13;&#10;ELSEIF ([Mode (group)]==&quot;Rail and Ferry&quot;) AND ([type]==&quot;middle&quot;) then&#13;&#10; // October 2019 sum&#13;&#10; 320883&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
            </column>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Buses&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;MB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;TB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Demand Response&quot;'>
                  <value>&quot;DR&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
                  <value>&quot;CC&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;FB&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;LR&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;SR&quot;</value>
                  <value>&quot;YR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Percent recovered - historic' datatype='real' default-format='p0%' name='[Percent recovered - estimated (copy)_1141381053927026693]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if (ATTR([Mode (group)])==&quot;Buses&quot;) then&#13;&#10;  ([Calculation_776026533391941640]-[Parameters].[Parameter 9])/&#13;&#10;  ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])&#13;&#10;ELSEIF (ATTR([Mode (group)])== &quot;Rail and Ferry&quot;) THEN&#13;&#10;  ([Calculation_776026533391941640]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])/&#13;&#10;  ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])&#13;&#10;end' />
            </column>
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_605734172507439106]' derivation='None' name='[none:Calculation_605734172507439106:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1268326267935092736]' derivation='Sum' name='[sum:Calculation_1268326267935092736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_605734172506800129]' derivation='Sum' name='[sum:Calculation_605734172506800129:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_605734172528365584]' derivation='Sum' name='[sum:Calculation_605734172528365584:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monthly.Unlinked.Passenger.Trips]' derivation='Sum' name='[sum:Monthly.Unlinked.Passenger.Trips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monthly.Vehicle.Revenue.Hours]' derivation='Sum' name='[sum:Monthly.Vehicle.Revenue.Hours:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent recovered - estimated (copy)_1141381053927026693]' derivation='User' name='[usr:Percent recovered - estimated (copy)_1141381053927026693:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='93' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='68' />
            <format attr='width' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:ok]' value='104' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='on' />
            <format attr='vertical-align' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:ok] / [federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172507439106:ok])</rows>
        <cols>([federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)] / [federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{84A18936-031C-4E16-B433-4617C4B019A0}' />
    </worksheet>
    <worksheet name='UPT per VRH'>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Today' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2023-11-14#'>
              <calculation class='tableau' formula='#2023-11-14#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column aggregation='Sum' caption='Date Num' datatype='integer' name='[Calculation_605734172507439106]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='int([Calculation_776026533391114247])' />
            </column>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Buses&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;MB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;TB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Demand Response&quot;'>
                  <value>&quot;DR&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
                  <value>&quot;CC&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;FB&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;LR&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;SR&quot;</value>
                  <value>&quot;YR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_605734172507439106]' derivation='None' name='[none:Calculation_605734172507439106:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly.Unlinked.Passenger.Trips]' derivation='Sum' name='[sum:Monthly.Unlinked.Passenger.Trips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monthly.Vehicle.Revenue.Hours]' derivation='Sum' name='[sum:Monthly.Vehicle.Revenue.Hours:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Recent Past]' />
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[Recent Past]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='93' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='72' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='on' />
            <format attr='vertical-align' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:ok] / [federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172507439106:ok])</rows>
        <cols>([federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)] / [federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{66D629F7-213A-44BB-8A00-4CD293166767}' />
    </worksheet>
    <worksheet name='UPT per VRH - Buses'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;</run>
            <run fontsize='12'>Potential assumptions</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>High: </run>
            <run><![CDATA[k=<[Parameters].[bus k - low (copy)_605734172523401226]>; x0=<[Parameters].[bus x0 - low (copy)_605734172523446283]>; max=<[Parameters].[bus k - high (copy)]>
]]></run>
            <run bold='true'>Med: </run>
            <run><![CDATA[k=<[Parameters].[Parameter 4]>; x0=<[Parameters].[Parameter 5]>; max=<[Parameters].[bus max - high (copy)_1075234433896251394]>
]]></run>
            <run bold='true'>Low: </run>
            <run><![CDATA[k=<[Parameters].[bus k estimate (copy)_605734172509597701]>; x0=<[Parameters].[bus x0 estimate (copy)_605734172522225673]>; max=<[Parameters].[bus max - med (copy)_1075234433896361987]>

]]></run>
            <run bold='true'>Parameters from Solver: </run>
            <run auto-url='true' bold='true' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/s/njwe9dfol8rai8zqwpnoec8ifi62ers1&amp;quot;'>https://mtcdrive.box.com/s/njwe9dfol8rai8zqwpnoec8ifi62ers1</run>
            <run>Æ&#10;</run>
            <run bold='true'>Max numbers asserted; best fit=low</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='bus max UPT per VRH (Oct 2019)' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='33.6087382816335'>
              <calculation class='tableau' formula='33.6087382816335' />
            </column>
            <column caption='rail max UPT per VRH (Oct 2019)' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='63.5359336580623'>
              <calculation class='tableau' formula='63.5359336580623' />
            </column>
            <column caption='bus k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='0.0032669356572285401'>
              <calculation class='tableau' formula='0.0032669356572285401' />
            </column>
            <column caption='bus x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='44590'>
              <calculation class='tableau' formula='44590' />
            </column>
            <column caption='rail k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='0.0019984439512772899'>
              <calculation class='tableau' formula='0.0019984439512772899' />
            </column>
            <column caption='rail x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='45161'>
              <calculation class='tableau' formula='45161' />
            </column>
            <column caption='rail max - high' datatype='real' default-format='p0%' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
            <column caption='bus min UPT per VRH (April 2020)' datatype='real' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='11.96'>
              <calculation class='tableau' formula='11.96' />
            </column>
            <column caption='bus max - high' datatype='real' default-format='p0%' name='[bus k - high (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
            </column>
            <column caption='bus k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k - low (copy)_605734172523401226]' param-domain-type='any' role='measure' type='quantitative' value='0.0028033789333171601'>
              <calculation class='tableau' formula='0.0028033789333171601' />
            </column>
            <column caption='bus k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k estimate (copy)_605734172509597701]' param-domain-type='any' role='measure' type='quantitative' value='0.00382167947208232'>
              <calculation class='tableau' formula='0.00382167947208232' />
            </column>
            <column caption='bus max - med' datatype='real' default-format='p0%' name='[bus max - high (copy)_1075234433896251394]' param-domain-type='any' role='measure' type='quantitative' value='0.89'>
              <calculation class='tableau' formula='0.89' />
            </column>
            <column caption='bus max - low' datatype='real' default-format='p0%' name='[bus max - med (copy)_1075234433896361987]' param-domain-type='any' role='measure' type='quantitative' value='0.77'>
              <calculation class='tableau' formula='0.77' />
            </column>
            <column caption='bus x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 - low (copy)_605734172523446283]' param-domain-type='any' role='measure' type='quantitative' value='44690'>
              <calculation class='tableau' formula='44690' />
            </column>
            <column caption='bus x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 estimate (copy)_605734172522225673]' param-domain-type='any' role='measure' type='quantitative' value='44516'>
              <calculation class='tableau' formula='44516' />
            </column>
            <column caption='rail k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k - low (copy)_605734172527276047]' param-domain-type='any' role='measure' type='quantitative' value='0.0018861585980505099'>
              <calculation class='tableau' formula='0.0018861585980505099' />
            </column>
            <column caption='rail k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k estimate (copy)_605734172525633548]' param-domain-type='any' role='measure' type='quantitative' value='0.0021842743388504602'>
              <calculation class='tableau' formula='0.0021842743388504602' />
            </column>
            <column caption='rail max - med' datatype='real' default-format='p0%' name='[rail max - high (copy)_1075234433901314052]' param-domain-type='any' role='measure' type='quantitative' value='0.85'>
              <calculation class='tableau' formula='0.85' />
            </column>
            <column caption='rail max - low' datatype='real' default-format='p0%' name='[rail max - med (copy)_1075234433901854725]' param-domain-type='any' role='measure' type='quantitative' value='0.7'>
              <calculation class='tableau' formula='0.7' />
            </column>
            <column caption='rail min UPT per VRH (Apr 2020)' datatype='real' name='[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]' param-domain-type='any' role='measure' type='quantitative' value='5.61'>
              <calculation class='tableau' formula='5.61' />
            </column>
            <column caption='rail x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 - low (copy)_605734172527190030]' param-domain-type='any' role='measure' type='quantitative' value='45311'>
              <calculation class='tableau' formula='45311' />
            </column>
            <column caption='rail x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 estimate (copy)_605734172526239757]' param-domain-type='any' role='measure' type='quantitative' value='44982'>
              <calculation class='tableau' formula='44982' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Percent recovered - estimated' datatype='real' default-format='p0%' name='[Calculation_1268326267935092736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF STARTSWITH([Calculation_605734172513480712], &quot;Buses&quot;) then&#13;&#10;  ([Calculation_605734172506800129]-[Parameters].[Parameter 9])/&#13;&#10;  ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])&#13;&#10;ELSEIF STARTSWITH([Calculation_605734172513480712], &quot;Rail and Ferry&quot;) THEN&#13;&#10;  ([Calculation_605734172506800129]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])/&#13;&#10;  ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])&#13;&#10;end' />
            </column>
            <column caption='Estimated UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_605734172506800129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; MAKEDATE(2020,04,01) then&#13;&#10;  NULL&#13;&#10;// middle = estimated&#13;&#10;ELSEIF ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 9]+&#13;&#10; ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])*[Parameters].[bus max - high (copy)_1075234433896251394]/&#13;&#10;  (1+EXP([Parameters].[Parameter 4]*([Parameters].[Parameter 5]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 9]+&#13;&#10; ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])*[Parameters].[bus max - med (copy)_1075234433896361987]/&#13;&#10;  (1+EXP([Parameters].[bus k estimate (copy)_605734172509597701]*([Parameters].[bus x0 estimate (copy)_605734172522225673]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 9]+&#13;&#10; ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])*[Parameters].[bus k - high (copy)]/&#13;&#10;  (1+EXP([Parameters].[bus k - low (copy)_605734172523401226]*([Parameters].[bus x0 - low (copy)_605734172523446283]-[Calculation_605734172507439106])))&#13;&#10;// middle = estimated&#13;&#10;ELSEIF  ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]+&#13;&#10; ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])*[Parameters].[rail max - high (copy)_1075234433901314052]/&#13;&#10;  (1+EXP([Parameters].[Parameter 6]*([Parameters].[Parameter 7]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF  ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]+&#13;&#10; ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])*[Parameters].[rail max - med (copy)_1075234433901854725]/&#13;&#10;  (1+EXP([Parameters].[rail k estimate (copy)_605734172525633548]*([Parameters].[rail x0 estimate (copy)_605734172526239757]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF  ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]+&#13;&#10; ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])*[Parameters].[Parameter 8]/&#13;&#10;  (1+EXP([Parameters].[rail k - low (copy)_605734172527276047]*([Parameters].[rail x0 - low (copy)_605734172527190030]-[Calculation_605734172507439106])))&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
            </column>
            <column aggregation='Sum' caption='Date Num' datatype='integer' name='[Calculation_605734172507439106]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='int([Calculation_776026533391114247])' />
            </column>
            <column caption='Mode &amp; Type' datatype='string' name='[Calculation_605734172513480712]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Mode (group)] + &quot; - &quot; + IFNULL([type],&quot;historic&quot;)' />
            </column>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Buses&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;MB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;TB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Demand Response&quot;'>
                  <value>&quot;DR&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
                  <value>&quot;CC&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;FB&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;LR&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;SR&quot;</value>
                  <value>&quot;YR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Percent recovered - historic' datatype='real' default-format='p0%' name='[Percent recovered - estimated (copy)_1141381053927026693]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if (ATTR([Mode (group)])==&quot;Buses&quot;) then&#13;&#10;  ([Calculation_776026533391941640]-[Parameters].[Parameter 9])/&#13;&#10;  ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])&#13;&#10;ELSEIF (ATTR([Mode (group)])== &quot;Rail and Ferry&quot;) THEN&#13;&#10;  ([Calculation_776026533391941640]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])/&#13;&#10;  ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])&#13;&#10;end' />
            </column>
            <column-instance column='[Calculation_1268326267935092736]' derivation='Attribute' name='[attr:Calculation_1268326267935092736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_605734172506800129]' derivation='Attribute' name='[attr:Calculation_605734172506800129:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Max' name='[max:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_605734172513480712]' derivation='None' name='[none:Calculation_605734172513480712:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_776026533391114247]' derivation='None' name='[none:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1268326267935092736]' derivation='Sum' name='[sum:Calculation_1268326267935092736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent recovered - estimated (copy)_1141381053927026693]' derivation='User' name='[usr:Percent recovered - estimated (copy)_1141381053927026693:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]'>
            <groupfilter function='member' level='[Mode (group)]' member='&quot;Buses&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' filter-group='4' included-values='in-range'>
            <min>#2018-01-29#</min>
            <max>#2031-05-17#</max>
          </filter>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' />
              <path column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='100% recovery (Oct 2019 value)' label-type='custom' probability='95' scope='per-pane' value-column='[Parameters].[Parameter 2]' z-order='1' />
            <reference-line axis-column='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]' enable-instant-analytics='true' formula='average' id='refline1' label='0% recovery (April 2020 value)' label-type='custom' probability='95' scope='per-pane' value-column='[Parameters].[Parameter 9]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' />
              <text column='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Percent recovered - estimated (copy)_1141381053927026693:qk]' />
              <path column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]' />
              <tooltip column='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Percent recovered - estimated (copy)_1141381053927026693:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Mode &amp; Type:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Month of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>UPT per VRH:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent recovered - historic:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Percent recovered - estimated (copy)_1141381053927026693:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' />
              <text column='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Calculation_1268326267935092736:qk]' />
              <lod column='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_1268326267935092736:qk]' />
              <path column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]' />
            </encodings>
            <label-data column='[federated.0y3qo5u07y662o17w9ljm040hec7].[max:Calculation_776026533391114247:qk]' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Mode &amp; Type:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Month of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Estimated UPT per VRH:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent recovered - estimated:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_1268326267935092736:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='most-recent' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk] + [federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk])</rows>
        <cols>[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]</cols>
      </table>
      <simple-id uuid='{4AAB92F9-2295-4A6E-802C-6CB0BBB4A98D}' />
    </worksheet>
    <worksheet name='UPT per VRH - Rail &amp; Ferry'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;</run>
            <run fontsize='12'>Potential assumptions</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>High:  </run>
            <run><![CDATA[k=<[Parameters].[rail k - low (copy)_605734172527276047]>;  x0=<[Parameters].[rail x0 - low (copy)_605734172527190030]>;  max=<[Parameters].[Parameter 8]>
]]></run>
            <run bold='true'>Med:  </run>
            <run><![CDATA[k=<[Parameters].[Parameter 6]>; x0=<[Parameters].[Parameter 7]>; max=<[Parameters].[rail max - high (copy)_1075234433901314052]>
]]></run>
            <run bold='true'>Low: k</run>
            <run><![CDATA[=<[Parameters].[rail k estimate (copy)_605734172525633548]>; x0=<[Parameters].[rail x0 estimate (copy)_605734172526239757]>; max=<[Parameters].[rail max - med (copy)_1075234433901854725]>

]]></run>
            <run bold='true'>Parameters from Solver: </run>
            <run auto-url='true' bold='true' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/s/njwe9dfol8rai8zqwpnoec8ifi62ers1&amp;quot;'>https://mtcdrive.box.com/s/njwe9dfol8rai8zqwpnoec8ifi62ers1</run>
            <run>Æ&#10;</run>
            <run bold='true'>Max numbers asserted; best fit=high</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='bus max UPT per VRH (Oct 2019)' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='33.6087382816335'>
              <calculation class='tableau' formula='33.6087382816335' />
            </column>
            <column caption='rail max UPT per VRH (Oct 2019)' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='63.5359336580623'>
              <calculation class='tableau' formula='63.5359336580623' />
            </column>
            <column caption='bus k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='0.0032669356572285401'>
              <calculation class='tableau' formula='0.0032669356572285401' />
            </column>
            <column caption='bus x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='44590'>
              <calculation class='tableau' formula='44590' />
            </column>
            <column caption='rail k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='0.0019984439512772899'>
              <calculation class='tableau' formula='0.0019984439512772899' />
            </column>
            <column caption='rail x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='45161'>
              <calculation class='tableau' formula='45161' />
            </column>
            <column caption='rail max - high' datatype='real' default-format='p0%' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
            <column caption='bus min UPT per VRH (April 2020)' datatype='real' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='11.96'>
              <calculation class='tableau' formula='11.96' />
            </column>
            <column caption='bus max - high' datatype='real' default-format='p0%' name='[bus k - high (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
            </column>
            <column caption='bus k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k - low (copy)_605734172523401226]' param-domain-type='any' role='measure' type='quantitative' value='0.0028033789333171601'>
              <calculation class='tableau' formula='0.0028033789333171601' />
            </column>
            <column caption='bus k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k estimate (copy)_605734172509597701]' param-domain-type='any' role='measure' type='quantitative' value='0.00382167947208232'>
              <calculation class='tableau' formula='0.00382167947208232' />
            </column>
            <column caption='bus max - med' datatype='real' default-format='p0%' name='[bus max - high (copy)_1075234433896251394]' param-domain-type='any' role='measure' type='quantitative' value='0.89'>
              <calculation class='tableau' formula='0.89' />
            </column>
            <column caption='bus max - low' datatype='real' default-format='p0%' name='[bus max - med (copy)_1075234433896361987]' param-domain-type='any' role='measure' type='quantitative' value='0.77'>
              <calculation class='tableau' formula='0.77' />
            </column>
            <column caption='bus x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 - low (copy)_605734172523446283]' param-domain-type='any' role='measure' type='quantitative' value='44690'>
              <calculation class='tableau' formula='44690' />
            </column>
            <column caption='bus x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 estimate (copy)_605734172522225673]' param-domain-type='any' role='measure' type='quantitative' value='44516'>
              <calculation class='tableau' formula='44516' />
            </column>
            <column caption='rail k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k - low (copy)_605734172527276047]' param-domain-type='any' role='measure' type='quantitative' value='0.0018861585980505099'>
              <calculation class='tableau' formula='0.0018861585980505099' />
            </column>
            <column caption='rail k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k estimate (copy)_605734172525633548]' param-domain-type='any' role='measure' type='quantitative' value='0.0021842743388504602'>
              <calculation class='tableau' formula='0.0021842743388504602' />
            </column>
            <column caption='rail max - med' datatype='real' default-format='p0%' name='[rail max - high (copy)_1075234433901314052]' param-domain-type='any' role='measure' type='quantitative' value='0.85'>
              <calculation class='tableau' formula='0.85' />
            </column>
            <column caption='rail max - low' datatype='real' default-format='p0%' name='[rail max - med (copy)_1075234433901854725]' param-domain-type='any' role='measure' type='quantitative' value='0.7'>
              <calculation class='tableau' formula='0.7' />
            </column>
            <column caption='rail min UPT per VRH (Apr 2020)' datatype='real' name='[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]' param-domain-type='any' role='measure' type='quantitative' value='5.61'>
              <calculation class='tableau' formula='5.61' />
            </column>
            <column caption='rail x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 - low (copy)_605734172527190030]' param-domain-type='any' role='measure' type='quantitative' value='45311'>
              <calculation class='tableau' formula='45311' />
            </column>
            <column caption='rail x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 estimate (copy)_605734172526239757]' param-domain-type='any' role='measure' type='quantitative' value='44982'>
              <calculation class='tableau' formula='44982' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Percent recovered - estimated' datatype='real' default-format='p0%' name='[Calculation_1268326267935092736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF STARTSWITH([Calculation_605734172513480712], &quot;Buses&quot;) then&#13;&#10;  ([Calculation_605734172506800129]-[Parameters].[Parameter 9])/&#13;&#10;  ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])&#13;&#10;ELSEIF STARTSWITH([Calculation_605734172513480712], &quot;Rail and Ferry&quot;) THEN&#13;&#10;  ([Calculation_605734172506800129]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])/&#13;&#10;  ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])&#13;&#10;end' />
            </column>
            <column caption='Estimated UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_605734172506800129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; MAKEDATE(2020,04,01) then&#13;&#10;  NULL&#13;&#10;// middle = estimated&#13;&#10;ELSEIF ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 9]+&#13;&#10; ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])*[Parameters].[bus max - high (copy)_1075234433896251394]/&#13;&#10;  (1+EXP([Parameters].[Parameter 4]*([Parameters].[Parameter 5]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 9]+&#13;&#10; ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])*[Parameters].[bus max - med (copy)_1075234433896361987]/&#13;&#10;  (1+EXP([Parameters].[bus k estimate (copy)_605734172509597701]*([Parameters].[bus x0 estimate (copy)_605734172522225673]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 9]+&#13;&#10; ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])*[Parameters].[bus k - high (copy)]/&#13;&#10;  (1+EXP([Parameters].[bus k - low (copy)_605734172523401226]*([Parameters].[bus x0 - low (copy)_605734172523446283]-[Calculation_605734172507439106])))&#13;&#10;// middle = estimated&#13;&#10;ELSEIF  ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]+&#13;&#10; ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])*[Parameters].[rail max - high (copy)_1075234433901314052]/&#13;&#10;  (1+EXP([Parameters].[Parameter 6]*([Parameters].[Parameter 7]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF  ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]+&#13;&#10; ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])*[Parameters].[rail max - med (copy)_1075234433901854725]/&#13;&#10;  (1+EXP([Parameters].[rail k estimate (copy)_605734172525633548]*([Parameters].[rail x0 estimate (copy)_605734172526239757]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF  ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]+&#13;&#10; ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])*[Parameters].[Parameter 8]/&#13;&#10;  (1+EXP([Parameters].[rail k - low (copy)_605734172527276047]*([Parameters].[rail x0 - low (copy)_605734172527190030]-[Calculation_605734172507439106])))&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
            </column>
            <column aggregation='Sum' caption='Date Num' datatype='integer' name='[Calculation_605734172507439106]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='int([Calculation_776026533391114247])' />
            </column>
            <column caption='Mode &amp; Type' datatype='string' name='[Calculation_605734172513480712]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Mode (group)] + &quot; - &quot; + IFNULL([type],&quot;historic&quot;)' />
            </column>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Buses&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;MB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;TB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Demand Response&quot;'>
                  <value>&quot;DR&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
                  <value>&quot;CC&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;FB&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;LR&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;SR&quot;</value>
                  <value>&quot;YR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Percent recovered - historic' datatype='real' default-format='p0%' name='[Percent recovered - estimated (copy)_1141381053927026693]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if (ATTR([Mode (group)])==&quot;Buses&quot;) then&#13;&#10;  ([Calculation_776026533391941640]-[Parameters].[Parameter 9])/&#13;&#10;  ([Parameters].[Parameter 2]-[Parameters].[Parameter 9])&#13;&#10;ELSEIF (ATTR([Mode (group)])== &quot;Rail and Ferry&quot;) THEN&#13;&#10;  ([Calculation_776026533391941640]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])/&#13;&#10;  ([Parameters].[Parameter 3]-[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636])&#13;&#10;end' />
            </column>
            <column-instance column='[Calculation_1268326267935092736]' derivation='Attribute' name='[attr:Calculation_1268326267935092736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_605734172506800129]' derivation='Attribute' name='[attr:Calculation_605734172506800129:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Max' name='[max:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_605734172513480712]' derivation='None' name='[none:Calculation_605734172513480712:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_776026533391114247]' derivation='None' name='[none:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1268326267935092736]' derivation='Sum' name='[sum:Calculation_1268326267935092736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent recovered - estimated (copy)_1141381053927026693]' derivation='User' name='[usr:Percent recovered - estimated (copy)_1141381053927026693:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]'>
            <groupfilter function='member' level='[Mode (group)]' member='&quot;Rail and Ferry&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' filter-group='4' included-values='in-range'>
            <min>#2018-01-29#</min>
            <max>#2031-05-17#</max>
          </filter>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' />
              <path column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='0% recovery (April 2020 value)' label-type='custom' probability='95' scope='per-pane' value-column='[Parameters].[rail max UPT per VRH (Oct 2019) (copy)_1141381053925445636]' z-order='1' />
            <reference-line axis-column='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]' enable-instant-analytics='true' formula='average' id='refline1' label='100% recovery (Oct 2019 value)' label-type='custom' probability='95' scope='per-pane' value-column='[Parameters].[Parameter 3]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' />
              <text column='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Percent recovered - estimated (copy)_1141381053927026693:qk]' />
              <lod column='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Percent recovered - estimated (copy)_1141381053927026693:qk]' />
              <path column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Mode &amp; Type:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Month of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>UPT per VRH:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent recovered - historic:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Percent recovered - estimated (copy)_1141381053927026693:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' />
              <text column='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Calculation_1268326267935092736:qk]' />
              <lod column='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_1268326267935092736:qk]' />
              <path column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]' />
            </encodings>
            <label-data column='[federated.0y3qo5u07y662o17w9ljm040hec7].[max:Calculation_776026533391114247:qk]' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Mode &amp; Type:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Month of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Estimated UPT per VRH:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent recovered - estimated:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_1268326267935092736:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='most-recent' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk] + [federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk])</rows>
        <cols>[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]</cols>
      </table>
      <simple-id uuid='{5941335F-5C10-4251-A261-81EE8D69AAF5}' />
    </worksheet>
    <worksheet name='VRH'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;</run>
            <run fontsize='12'>Potential Assumption</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Today' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2023-11-14#'>
              <calculation class='tableau' formula='#2023-11-14#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Historic or Estimated Monthly VRH' datatype='integer' name='[Calculation_605734172528365584]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; [Parameters].[Parameter 1] then&#13;&#10;  [Monthly.Vehicle.Revenue.Hours]&#13;&#10;ELSEIF (([Mode (group)]==&quot;Buses&quot;) AND ([type]==&quot;middle&quot;)) then&#13;&#10; // October 2019 sum&#13;&#10; 723117&#13;&#10;ELSEIF ([Mode (group)]==&quot;Rail and Ferry&quot;) AND ([type]==&quot;middle&quot;) then&#13;&#10; // October 2019 sum&#13;&#10; 320883&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
            </column>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Buses&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;MB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;TB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Demand Response&quot;'>
                  <value>&quot;DR&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
                  <value>&quot;CC&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;FB&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;LR&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;SR&quot;</value>
                  <value>&quot;YR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_605734172528365584]' derivation='Sum' name='[sum:Calculation_605734172528365584:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Calculation_605734172528365584:qk]</rows>
        <cols>[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]</cols>
      </table>
      <simple-id uuid='{8FC9FD55-5488-4B7B-8B2A-796573AFAC6A}' />
    </worksheet>
    <worksheet name='VRH+UPT by Agency'>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
          </datasources>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Common.Agency.Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_776026533391114247]' derivation='None' name='[none:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Common.Agency.Name]' derivation='None' name='[none:Common.Agency.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly.Unlinked.Passenger.Trips]' derivation='Sum' name='[sum:Monthly.Unlinked.Passenger.Trips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monthly.Vehicle.Revenue.Hours]' derivation='Sum' name='[sum:Monthly.Vehicle.Revenue.Hours:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' filter-group='3' included-values='in-range'>
            <min>#2002-01-01#</min>
            <max>#2023-11-03#</max>
          </filter>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Common.Agency.Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Common.Agency.Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Common.Agency.Name:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Common.Agency.Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk] + ([federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk] + [federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]))</rows>
        <cols>[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]</cols>
      </table>
      <simple-id uuid='{EA197B52-9CB3-4B3A-9583-04F613EA290A}' />
    </worksheet>
    <worksheet name='VRH+UPT by Group'>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
          </datasources>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Buses&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;MB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;TB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Demand Response&quot;'>
                  <value>&quot;DR&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
                  <value>&quot;CC&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;FB&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;LR&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;SR&quot;</value>
                  <value>&quot;YR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_776026533391114247]' derivation='None' name='[none:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly.Unlinked.Passenger.Trips]' derivation='Sum' name='[sum:Monthly.Unlinked.Passenger.Trips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monthly.Vehicle.Revenue.Hours]' derivation='Sum' name='[sum:Monthly.Vehicle.Revenue.Hours:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' filter-group='3' included-values='in-range'>
            <min>#2002-01-01#</min>
            <max>#2023-11-03#</max>
          </filter>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' />
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk] + ([federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk] + [federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]))</rows>
        <cols>[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]</cols>
      </table>
      <simple-id uuid='{45BE8EFA-2DD3-49B4-97A3-C9E83C752F8F}' />
    </worksheet>
    <worksheet name='VRH+UPT by Mode'>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
          </datasources>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_776026533391114247]' derivation='None' name='[none:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly.Unlinked.Passenger.Trips]' derivation='Sum' name='[sum:Monthly.Unlinked.Passenger.Trips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monthly.Vehicle.Revenue.Hours]' derivation='Sum' name='[sum:Monthly.Vehicle.Revenue.Hours:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' filter-group='3' included-values='in-range'>
            <min>#2002-01-01#</min>
            <max>#2023-11-03#</max>
          </filter>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk] + ([federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk] + [federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]))</rows>
        <cols>[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]</cols>
      </table>
      <simple-id uuid='{E3AEB1FC-6AF6-435A-B8B5-A31F832B5518}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='VRH+UPT by Agency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Common.Agency.Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Common.Agency.Name:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13C974C5-524D-4B77-9B62-53985763A070}' />
    </window>
    <window class='worksheet' name='VRH+UPT by Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8BC5205-10BB-46D4-8B74-D79E431B0A47}' />
    </window>
    <window class='worksheet' name='VRH+UPT by Group'>
      <cards>
        <edge name='left'>
          <strip size='215'>
            <card size='26' type='filters' />
            <card size='350' type='marks' />
            <card pane-specification-id='1' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' size='41' type='color' />
            <card pane-specification-id='3' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]&#10;[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' size='81' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7AB9142-9B1D-4544-8186-D9F1CA719D42}' />
    </window>
    <window class='worksheet' maximized='true' name='UPT per VRH - Buses'>
      <cards>
        <edge name='left'>
          <strip size='215'>
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='156'>
            <card type='caption' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Recent Past]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E067D9F-7895-4F46-9ECE-0B5E1DECFA4B}' />
    </window>
    <window class='worksheet' name='UPT per VRH - Rail &amp; Ferry'>
      <cards>
        <edge name='left'>
          <strip size='215'>
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='153'>
            <card type='caption' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Recent Past]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8D4B879-1769-4F53-87BD-32B812975288}' />
    </window>
    <window class='worksheet' name='VRH'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5DFD4842-0886-445C-B7A4-92F0BC79C78A}' />
    </window>
    <window class='worksheet' name='Debug table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0silwm80l9lceo15tfv8s03t3l5k].[none:Description:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Recent Past]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172507439106:ok]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:X3.Mode:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60EDCBC2-4985-4BDD-B530-73E9E0618332}' />
    </window>
    <window class='worksheet' name='UPT per VRH'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Recent Past]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172507439106:ok]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62BC1A37-5B40-45C0-BCB3-439D3D22A4A2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Debug table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UPT per VRH' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UPT per VRH - Buses' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UPT per VRH - Rail &amp; Ferry' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d3CceXrn93lT50ajGzkHIpMECeYhOZwZTtyJu6u4kk5Zd1e2VOc6l8uu
      0um8Vbb/0NW5yi6ffCfJ0pXXklZhpV1N3AnkBOYAgCSInDPQEd3o3G/wHyAxw+VwlpxFIvB+
      qlAkun+Nft7u3/d9nucXnp9gGIaBickORdxsA0xMNhNTACY7GlMAJjsa+ScfmJ+fR9f1zbDl
      PrLZLIIgoCjKZptisk0RtnISvLS0hCzLuFyuzTbFZJtihkAmOxpTACY7mvtygJ8FLZdmbKif
      eBZE2U5jaxPJhXFmowYtrQ1Y78hNz8YZ6B8lr7yeikI3y8FpJhbi1DU14rauqUkmJl/JmnoA
      QZTI8xZQ4HWzMDtPNrnAraFF7HqQrt7p1XZ93dfQ7S4GbnSSSIXoujWOTU7TdWMYdctmJCbb
      kTW93YqSQkl5NYnQOMU1TVii8/iaD9FQYhDuvAVUAZDCRkdDPb5UhIB/CmtNO40NeaSuXiGt
      gl3UANB1HU3TUFV1Lc00MVllzXMAQ88yOeanZlf5yu+rg0zC523u/muAIAgr/7nbSrjzGCv/
      3v3/WpHL5FBzpqBMVljzgDsdDZJ2FOOzCGR9FYQvXaUvICK4asnGQ2QtBbiFDD19AwSDCY43
      tzN54Sa9KQdRwYdNAlFY0aUgCIiiiCyvnZlv/5e3UCwyL/7WN5AVM9/Y6ay5B5BtThrrV0Id
      xVHMgT01yO4qDrRWYOgaugHNHYdxy7D34CEcNi8HDzQj2wo5uK8BaW1v+PdgGAa9F29z67Nb
      pJPp9Xsjk8eGNb8FKnYPd+dtBUHEW1qN9+6TecVYAXDS0NK6+hqXr4wW31pbcj/J5SSGrpNK
      pkktJ3F5zAm2nc6OmgeIh5exOe043A4CM4HNNsdkC7CjgmBBEjn4/CEMw0BWZAzDWPMk2+Tx
      4rHwAIZhkE4uE09lAdC1HJFQgFgyAxjkUnECwRAZVUfPpQkGQmQ1A0PPks5qq6NO6UQawzCw
      2q0klhLo2vot+ksGx5kMpjG0HOFQgHA0jv5Tll3pWo6lcJBQJIZmGKjZFMFAkFRWxTAMsqk4
      y4mV3EVXMwQDAWKJDA+znCuTTvJVl5uOh5mY8bPTpmEeCw+QXJrj5rVO4r7dvHConuney9yY
      imOoEqdeOMHtz86SRELMr6VBDtIXXKagooN6i594YRv1BRIAqXgKi82Ct8RLeCGMmlORZGkd
      LNbpGZil/VgNA9c+YiwqQHqZ6o7T7KnOXx0QjgYXyCluCj1OAPwjt7gxFUHNpGhoP0pitJPF
      tEHOWsxLx2u4+tktEo58Xjq5n/7r55mNC6QTGk+9+hyen3IZfV3nqNj3IsXOL3/eaney1NON
      p6QIr7JzvKL03e9+97ubbcSDSKfTiKKIy1NIVbGLQEqgstBCf3+Iky88TbESYDwgINs8nDpx
      kJmxUQRDoKa1kSX/IlnsVBa6USwKoiDQc62T0MIEMUcxkbFb3J6axllShTUT4MwHHzKzLOIk
      xJmPPiWQVnDKaSJxsAtppgNL5MLjfHDmElm7D6+2QO/oLAOTfnKpJD6vh5GRUXwFPoT0NEML
      DhprbPQPLvH0s0/R0lBE341JykosnPvwQwan5xnsvk5XTx9ifgVlXifOgjJ21dZgE9KoWYiK
      Dp578gnUqTEs9W00VZcRjUaoKCmif2CUPYcOU6ZNMaLXUuWRGB7qJy+/kPnpcQQ9zacffUjP
      RIjyynIi8+PkefKZ8Mcpdur0jgbwWNJ8duZDRvwZKivLsYthZsM2Sny2zf7qN4zHIgS6Fx1d
      tqAAosWCms2gyFYQBBRdpHFfE+O9U3icNpLLc3x29l1uTSUwDIPA3ARSUR0n2mz0zc4SD89y
      /txNbt7qYe/Tr3CivZS+WzOc/MZreLJTBCNZxmZmCAXGSSUznPn4AsnMMuc+vUwiMstgSOHE
      wVZic9MsZZdYDKRW7u4RPzmPF4E0Bg5EAZCtyFqGvtu3qOo4zbMnj3Ps+AlefOV1OuqLADC0
      FAM3ukhYy6kv96AoMiBilTWyX5y7EyWOHtpNz9XL9E/Mk8vdmTlfChNIxpmbDSCKIogCoaEe
      BhaXVl6XWWYmEAUtxcx8iKFrZxhaTDDRf5nh+SSKwwfZ5Y37KrcAj4UAdF0jk8mSy2XJqgp5
      eoDhhSDjg/MUVxQRWJwkElwkrIHTWczxw3VoNh+6rnDqRCvxcBJN1cioVpqqy8jz2CgorKGj
      7Tgvn2pDz+ZIxGJkshqCqJNOp8nmNKy+YorUBW5OaFRXuPGUNvDyGz/Hd145gSxbaGlrQZFk
      9uwu4uN/OIuvuWXFYJsdKZPFwIeYHWM6EGOmrxu1sAKnLKNm02SyWchlicYTZO904NnhHijc
      RX1pPoJVIbkwjz+8yHAUCmSNbCZDLpclk1PRlTyOnzqJJnhorVwZXG5sLafv04tIFc0EJyco
      3/sEJw/swrgb/IsCajZNJBRgKZlCtuZz7PRL/NIv/iJ1PgVNSwM7a/PRYxECZWJzfHbhFstL
      fgJZGx176xm8fhXHroO0VRXhVVJcvDnBkePHcVpEloLLlNdWUO6Gj68vcOyJNrREivnROaob
      a/BW1JANTnPtRi/O0mqy81FuX79CzlXGvtZSui9fw1HZTnN1ATYrGLYCKkoKKbBnuXSxk5Ti
      obKkAMXmxqkYINkZnlvg5P7mFQ9gz2N+eIDyqkqqK4vpuXqRkFjO8Y5dFBcXMHbrKpMhlfpd
      lUz0dpKyFlHssRNdnOJ2Xz8jI5PIvipaKuxcvdJH65FjuLUgZz++SGx5mfk4lFrifHyhi7qD
      T1Htta8sIbHmk4wv0bCrhgKvg77Oa6iOMqqrS/HYrbiLKhEDgwwspqmrq6epsZbxG5cY8ycp
      r6xgaWwQa00z+dbH4r64JmyrHWGGYRANLKHrOr7SgtXH1azK9OAU47fH2f/MfnylBcyOzDJ0
      fZDq1mqm+qdw+9zse3o/iuUR74C6Ss+1c+Q1HqfGZ119eLbvKsnCvTQU23kcUsp0bJGboxGO
      dLQ8FvauFVteAAsLC0jSw43UGIbBzU9uMD0wRcuRVkRJZGF8nvBCGF3XsTlsPPVLz2Bz2IgF
      o5z/0Tm0nIau6zjcDk5+60nsbsfPZHMsHGO0e5j2p/av0wiTyVqy5YdBNU17pPaNB5sY7hri
      7T97EwBPkYemg83UtNVSVF2MoihomoY9z45/2k94PoTFZkHXddqf3o/F8fldXFM1YqEYnkIP
      ovTTwwLDMPjwe+8z2TeBpzifmrbaR7LdZOPZ8gKoqal5pE3xhmHQ+MeNdJ3ppLKpisrGypVV
      n19YZn2XQ8cO0fVRJ0dePsb1969S6iuhoaVx9fnB6wN8+J9+TPupfbz02y9jcz54eNAwDCZ6
      x0nMxCl0F5Kn5NHS0vLoF2yyoWx5ATwqgiDg9Dh58tunfmrbA88eRLEqtB5to+ezm4TmQjR0
      fC6AsZuj5DI5uj7qBAG++fvf/tK/YxgGobkQ7/zpW7jz3aRTafyTixi6gSDupIj68WPbCeBR
      qG6roaqlingkjsVuJTQfWn0ul8kyMzxDVXMVLq+b8VtjpJaT9+UIhmHQe+E2b/3nf0ZVNV7/
      b97g6ntX8E8tomkasrijP+Itz84Z7/oSBEFAlCSc+U5sDivhhdBqUbBoMEpkIUzd3noaDzaR
      iCa+dAWpltO49OYFLHYLv/fH/5K9T7ZTWluGf9qPpj5a/mKy8ay5ANTMMre7r9EzOodh6Pgn
      B7jW3U/6Cwux9EyMm9euMbEQxTAgujDB9c5bRNObs1VRlCTyi70kluJk7yy4C84EScaSVLfU
      UNlYiabpzI3O3ffa5cgysyOzdDx7gNLaMkRRpLS2lHQyTTS4tNGXYvKIrK0A9Cy3r11DzC+n
      wG0jF5/n9niMIkeCzp7J1Wa3u65jKypl7HYX8WSQrr5ZCvNFursHN6UqhCAIFJQVkIgmSN9Z
      bTnRN47T46KwshC3L4+CMh+TveP3vM4wDEZuDK8k3h1Nq4+X1JQgCiIL4wsbeh0mj87a1gXK
      JAllDYpiAVKWStTMAr7GDqpLDOY7bwI1AGQkO7urK8mL+gn6p7HX7KFml5tY+PJqVQjDMFar
      QuRyubU080vxlOSTiCZIxOJYnVam+qfwFHtwel2IokhhVRFzI3MkYgksdgsAuqYz3DWEy+um
      qLZ41U5vmQ9REpkbm6P1ibZ1t93k67O2GZoBoqyQn5/PwmAXRmUhul0DBIQvVoXQDQxA0w1E
      SUDP6YCBoQurVSG++COK65+q+Ep8qDmV8EKYXFYlMO3n6CtPrM4M17bVMdw5xOLkIlXNVYze
      HCGyEGayd4LWo233FPB1uB3kF+cTmPJj6IY5IbaFWVMBSDYHJQ6F4NIyORQcRZVMXr/EjTkR
      ydNEJuYnYy3GI+founGLSDjJydZ9TJ6/TnfMRkIu+dKqEA87E/yzUFpbRn6xl+6PunDkOZAV
      mT0n966+d01bDYZucPFH56lpq+Hjvz1LLpNDlESaj7TcZ2N5QwVT/ZMrAtgA+02+Hmu7GE6Q
      8Bb40LIZCmsaKfN6KfBYMawFtNSXg5pGlx2UlpWgZTLUNLbgcbgoLnSjik6aG6uxfGHG9e5i
      OIvFsmYmPgirw4qaVek+08ni5AK7T+7h4HOHVsfx7S47kiLT/VEXw91D1O2p55u//y12H9/D
      rv0N93Xy5XCM2+d72P9MB868B+xCMdl01nyQWrY6qa7btfq7p7AcT+GdX1wFrHRlOzX1n7dx
      eIqo96y1JY+GIAjsP93Brc9uEFmMcODZg/csf5AVmeOvn8BqtzI9OM0Lv/4CeQUPNrqisRJR
      FJkemKKosmgjLsHka2DO0nwBt9fNC7/xDUJzQSoaK+97XlZkjnzjKEe+cfSnbqYvqS3FYrMw
      PTjF/tMdG5LHmDw6pgB+gsYDjTQeaHzg8w9bRcJitVBWX8782DzpRJrwfIie8z1UNlSy58m9
      ZjWKLYIpgHWkurWaCz88z7t//jb9l/vIprM0HWym9Yk2syzjFsH0y+tIRWMlmqZx+0IP7af2
      UVhZhKqqW+YMNhNTAOtKdUs1tXvq+MZvv8Kr//p18ovy0XIahr5l9yDtOEw/vI448pz81v/y
      O6u/yxaZdCJleoAthOkBNhDFqqCaHmBLYQpgA1EsCpqqYZgeYMtgCmADUSwKWk5FNz3AlsEU
      wAaiWE0PsNUwBbCByBYFVdVMD7CFMAWwgSjWlRDI9ABbB1MAG8jdJNj0AFsHUwAbiGKV70yE
      mR5gq2AKYAORFWVlm6dqCmCrYApgA5EUCUEUULPrv8fZ5OFY46UQOoMXPuBWMIPLU8kzJ1ro
      PPMR/qTBnpMv0Fi8UlQqMHaDCzcnsBRU8/yJvfSeP8N4KEntvpPs31W8basTy4qMIAjkMqYA
      tgpr6wGMHHGhmNffeINvPH0QIzSGVHeS115+Gv/40Gqz0fkYL732OrusWULBUaKe3bz++kuo
      ixP31A/abkiKhCiK5EwPsGVY86oQghrkx//8Js6CGg5XZXHme5EUDZHMajPFYkWRRLwOhehy
      HEd+JZLswGbJoaqQE3IYhoGmrZRHyWQyX/Gmjw+GsVIrNJVIbZtretxZUwHoukjN3sPsczu5
      8elnRC1VLM3PkLFL5IzPKzyrqQSJbI7ZSIKq8iqmh2fIlBQTTVmxyKCIKyVGJElClmWsVuuD
      3vKxwuawIYgChm5sm2t63FnTEEgQIDozyLvvvU+2sJ7y4lryk8N8eGGAlt1NLM8NMLcMu1tq
      ufD+e6TyK/F6q6mxhXj/7FXKm5qxbOO0XFJkREFENXOALcOWPyHmUY5I2uosjM/zl3/4/3D6
      V57j2KtPbLY5JpjDoBuKpMgIomAmwVsIUwAbiKxICKIZAm0lTAFsIJIsI5oeYEthCmADkRXJ
      nAjbYpgC2EBWcgBzImyroGu6KYCNRL4TAqkZlS08+LZjiMyFzLIoG4koiytLITbgwA+TB6Pr
      Orqq4S7IezgPoGsqmXSa9OpPBtVc0/7ICIKAvLopxvz8NgMtp9L/SQ8X/+YTZKvycB5gceQq
      f/+jc8RSSTTRgt3q4YVf/mU6agp/+otN7uHzTTEGmOdmbDjjnSPcePcatQcaEETh4QRQ1nyc
      f/M/Hmfo/Af4Pa2c3Fu13nZuW1Y9gKaD8tPbm6wNd3Mup8/N3hcO0Pb0SoXuhxJAKhZgctrP
      +NQsEZdCr5ikrLYWn9Nc0PWoKBaFTCpjbovcQNSsyvClfmwuO3UHGyhrqgBWzqp7qBwgFQsy
      cPs2UcmBkg3Rc72LsUBkXY3ertytDWRujN8YDN2g58MuOt+8TNT/eZ81DIPQ0NzDCcCqwMTE
      KBNjY4ieEnLLQUTRvPt/HVYqQ5gl0jcKXdPJprK0Pd3O3ucP3Puk8ZD7ASZvD3Pg1d/kyWaZ
      /+OP/m+e+N3fp6Mqfz3s3fbIVmUlCdZMAawnalZlpneS4rpSjvzcidXHl2fDLHSPU3ZoFwUt
      5Q/nAUQ5w0ff/3P+w//+p4wEgnz0g7/lxnRo3Yzfzpi1gdYfNaty7YcXuPDXHxOc8q+eN53w
      Rxk704OW01AclodPgqsPPsd/3/EyVsvdcbuV8WyTR0exynfKI5oeYL1IRhP4RxfY8+x+Ktqq
      0bIqgihgcdkp7ajDt6sE2b5yXulDCSDhH+ef3vqErMVNZW0jR48cosz2gBzAUOm7cIZhSnj1
      aAPnP/iQUFqn7cSLtJSubGxZHO7k4u0pZE8lLz21j1uffshkJEVV+0kONZZu26oQsOIBdLNA
      7rqg5VSWgzHcRR5e/rffQlJkEv4oM5eGcRbnUX2yheI9VfccUPhQIVBR/QF+7/f/gN/61V+g
      rVjn//r3f8iPb05/adtEaIaIXEKRTSMbHMPW9Ayvv/o84cmR1Tbj/gQvv/YGLS6dYGCERGEH
      3/zmqwiBSdLaz/gpbHFkq4KaU9E1MwRaS7ScRudbVzjzZ+8RD8VQbBa0rMrclREwdHwNpcD9
      p3w+lAdYDk5y/rMrTPuDYMnj9X/539LeUnZfOz2XYmQiQltrHQPDoxjZDI68PCRZQ/iJqhCy
      JOKxy0TjSex51YiSDatFRdUgp2/PqhAAgiigqRqZTHpbXdfPhJbh/EfvMDQbo77jaZ5s8/Lx
      e+8SVKr49ssn6f/0hwTde3nmQANzMxOUlNegSPd2ZP/YAqNXh9h1rBlBEghP+XEUuik9Uo9k
      U1Cc1vs+b0PVH04Aui6wq/0ox0oK8TgdiOKXBynZdISZiVHGJkZYWIpT/MwRIrNTZKwSWcO9
      2k5NxYlnckyH49TurWF6YIpMcTFLKRvWbVwVAsDutKOpGrK0va7rZyEXizIb13nppRdw5hex
      OHKDwrZjVM6f55MeD+GFYpTgbZK7LIz5NWp3WZF+4k5eUlvKU7/5HC63k/kLwxiaQf2L7XjK
      C770PQ3DILUYe7gQyFNcTVNDDV6384GdH8DmLueVn/95Xnv1FZ595inqaxspzI3z4ZVR9uz9
      vCrE3t0NXPrwx6hFteR7q6l3x/jgky5qWptRtvkCbdkio2s6mjkMuko2k8Q/Pkx3zzC6bKG2
      4wSHGouJxN001hSTCQ6xENcYHJ7FEh/j5vAidwfRgpN+PvveGXRNp7ylisTCErqmU3aoHsVx
      7w1GV3Uy/gTJiSXQDKxFjkepCpHgs3cu0/7CafKVjUlTt1tVCIDeC7f5u//wfX7vP/wrqpqr
      N9ucLYGmppkcGSG6FODqRIrfeXkfb3/ay6EnnqCy0E1wdpSF+Tmy6WWuB/Jw5WZ59fVfwG0V
      uPz3nxHzRzn6zeM4fC4kRUZXNWS75Z543zAMUpNRMoEkcp4V5y7vyvL0hzdTIhMe4Hv/39/y
      /vsfMx2Or8NHsf25WyA3l1U325QtQzoyRXfPKJMzCyhWG51v/YjZRJIblz9laDFBYWkpc8Ec
      rQ1lZMLzJLMCd/u2y+um+VAzsxeGCA3NI1lkFIcVQRAwNJ1sKEV6Pg66geKz46z3rnZ+eKTK
      cBJtx5+nLJUFZJzmPMDXQpRW6oNqOVMAd3H46jiyP8tiHE63tpDzV8F8GBBwWCQQ4NDRY9i8
      Nt44KaHnVROfWkDwudj97H5G3unC4rbh21Wy+jcNwyA5FSMbSiG7LViKHCh59+dcjySAyFwP
      n/ZZOHE0n8WlMnwuM4l7VERJBGFlJMhkBUFSqGrcw+oi++pGCn4iOvR57zzV3M5Y5zCf/uAC
      u59pp/XUHqpOtiDbFGS7hdxSGkMzULw2ZLcF2amgeG2rd/yf5BFCoGUGBxZRsiqZRILFQPSR
      L9QEJElcHQo1+RoYMHi+F0+RBzGeY/HmJHafC8VhJbOYID4SIRNMgmFgLXRgLXYiKg/eefQI
      HsDJiReepb9vBou3isbqkp/+EpP7kGQJURBQzRwAgEwqwyd/9zENHQ3s2tfwwHa6pjPdM4G3
      ooAnfukplicCqIkM+bXFqIkckl1GdllwNXiR7AqC9HD39kcQgMHojSuMhAy0uXkKymrwPfyL
      Te4g3vEAqpkDYBgG/Vf6uPzWRYoqi76y7eD5XrrevsKeJ9tpPd1O3qFdIAhkgyniA0FcLYXI
      Lssj2/AIIVCSQNDKG7/yqzzZ6GVkbB7dLO3xyIiSiGDmAAAkogku/PA8xdXFtB3f/eCGBoxe
      G6Kw0IsRSrA04UeUpZUqe0tprKUuJPvXK3DyCK+SUZPj/Nc/+RPUeBBVGsNX+B32mxvjHwlT
      ACsYhkHPuVsEZwN8+9/8PDaH7UvbZBJpFJuFU7/xLDOfDGDzOsmvLiIbTqHk23DWexFk4b41
      Pg/LI+UAP/8H/9PXehOTzxFFyUyCgUwyQ8+5W5TUlNJ6tPW+5w3DIDIX5sJfnWXPM/uoPdRA
      /QvtiIJIejKGntPJ22NBtPxspTUeKgQKz0ywsJT8md7IZAXTA6wQXgizMD5P2/HdX7q3xNCN
      ldo9GkT75khHEtjyHBgZHQNw1ucjrMG6mYfyAPODt1nwNGKpv5uoiDjcbmxfMbxk8uWY8wAr
      d/fhzkEkWfrSkR/DMBAEgZq9tWjzy3gqCjASOqo1i7XQjqXAjvAVa9IehYcMgZJc+/h9Jm/d
      XZNj5/g3vkFLmbkv+FExPQBk01mGu4cpKC+ktLb08ycMyGWyDJzrpaa9jt3P7Sc2FUJIQmYx
      gWRXkF0Wvma4/6U8lAAc+VW89p3n2F1pDnz+rNwdBtVyO1cAkYUw86NzPPlzp5Dkz6MITdO4
      /qPLxMb8SLEMrd86gqemkPhIBFupC0uBfc1teaggqrbjINnRy3z/B+8wt5TCHPz8+kirHmDn
      zgMEZ4NomkZFQ+U9j2s5lXQgRklpAU6Xm+RUDEEScTcXYC10fO2Rnq/ioQQw2/0xnYsie2sV
      /ukHH5NdczN2DqIk7fgQKB6NY7FZcXlXQmrDMEgtp5CtCkd++RSlTdXkeb2wAdtGHyoEii6l
      KSkqx+GTUQKdDI5NUltWRp790WfedjqiaK4FSizFkRUZq8OGYRhMdo8xcuYWzaf2UHmkAUVc
      KRxgLXauuy0PJYCSXXX0nLvJhRmwV1i4eeEatuefv08Ahpqm+8o5poMJsJXywundXHrvfZYy
      Bs3HX2J3xcq2yPmBK1zqm0Nwl/LK6YPcOPtjppfSVOx9kqMtZdu6KoSZBK/MAMuKjM1hIxVL
      Mn1piJr6auyGHS2eQ/GtTIqtR8jzkzyUANRskpDfTxqQZBvVrY1UFubd31Cysv+JZ9mTjnHl
      ch+pwBju3S/wVJXI1e5hqOgAYDKc5bU3vsl01zWC/mEyZUf49rM+uq90k9LKcGzj0dWdLgDD
      MIgvxZEtMlaHFXSDXQebsAk2lDwrok3akI5/l4cSQFH9AX7zX+25k/wadJ99i67BWk7uvrcy
      hCAIJP2jnLk6SHFNC5ZcGJvLhShp8IXMQVEsiKKAyyYRTaSwuVwIogVFUdG2eVWIlR2oBrls
      bltd18Oi5lRS8SSCYdDz1lWqjzTi21uOkVARXAo5XYXMxg0QPJQAtGya6FIMHcDQWIqn8H2J
      SjU1R85WxCsvV9Pz6acEiusIT4+TtshkjM89hppcJpbOMhFaZte+eqZ6J0gXFRNO2mhWQBG2
      b1UIwzCQZBkMsCiWNZvQeVzQczpo0FhdTVFeAfKyga3CDusf7n8pD5cEL45x9mznnco+IhUt
      hzjYVHxfO8HQmR3sZmwhTnHdbqqKKsnOXOLMNTh56gTLcwMsu1vYt6+Fz858gK+xA29+GU0F
      nXz02S06jh1ng/bbbxqCICAp0so5VYaOtMOOiVGzOQxNp751F458N9bCTer5d3iEqhAbz3as
      CgHwp//Df8Zqt/Jrf/TryMrOOacwm8wwc3uSH/6XH3Ls+WMceeUYstuyoTH/T7JzPv0thCxL
      GLq+o45KzaWyzF0bw6Yr+Lz5SHmWL92kvtFs8zJUWxNJltA1feWgvB1CbjmDQ7KjYbAUjuHM
      29zQ5y6mADYBUZbQdWNHCEBTNdKxJLZ8B65aH3ElSzQaw+Za+3U9XwdTAJuALEvomoZubO/y
      iFpWJdK/yNLtRbKpDI7KPFKZNLJFxmbf/PAHTAFsCpIs7wgPEJ+JIiR0bHl2FNvKqoHEUhzZ
      oqxMgm0BzCR4E5CUOznANk2C716XxWHB8Ki46nxI1pWuFo8mUBQZ6xbxAKYANgFJXpkH2I4e
      QM9qxCcjqJqKp6EIe6n7nucTq8sg7t8EvxmYAtgEtusokGEYxMfC5CIZVOv9+Y2hGyRjCRSr
      BYtta6wkNnOATUCSJQxNx9iGSbChG+QUDW9LyT27vQzDIBlPkowlcbgdK3ujtwCmB9gEHvcQ
      SNd11JyKYlEQBAE1mSM5GwWnRF5rEXl8vpQ5tZzk4psXWfJHiPgjLEwssO/p/Zt7AV9ga8hw
      h7EqgMcgCdY0jUQ0fo+tQ9cH+Zv/7a+YHZ5BTeVIjITJ+BNEZ8PAvev4+6/0ccBrkQIAABlt
      SURBVO4fP2X0xgiZZIZjrx3n5Lef3PDreBCmB9gE7uYAW/2wbMMw6D7Txfl//Ix/8T//BgXl
      hRiGwZW3LzF6Y4T5sTle/c1XKXP7WM4lqTq4C0EQyGayBKcD5Jd46T7TRXF1Mb/2738Dd757
      y61+NQWwCUiyvGWHQQ3DwD/lJzgboLy+nE/+9iyxUIzpwWkKyguJL8WZ6Jtg94E2rJLM+bfP
      82t/9OvUeisRRRHDMLj05gXO/PVH1LTVMjsyy7O/+jx5vi/ZQLUFMAWwCUiyuGVzADWb48d/
      +S5jN0fJL84nFooB4J9cxDAMBq700dTSwHMvPkUyFuf7/+8/MjMyQ8uRlfKG82PzXHrzIrIi
      M9k7QV5B3peWPtwqmALYBFY9wBY8LT7iX2Kyb4LCqiIiC2Han9pHcDbA7MgMALcv3KaxppZU
      IknGpiNaZK7/+BoNHY2IoshHf/UBgiDwW//r79B7sRe314W3ZOvWk1pjARgYhoGu6SCKiIKA
      YejoBkiitFrRa6WNhiDe2f9p6GiGgSSKm7o2fKOQFAlDN7ZcCGQYBn2XehElkW/9wbexOW24
      vG7e+4t3Gbo6QHI2RsIfI1GfxdNeQmWRh47pOc7/02f4p/zk0lkmeyc4/sYJKpuqHotTMNdW
      AGqGG9cuMBtMogoennuhg8vvvU9cNdh15EX2Vq3EgXP9l7k65MewF/Lqc4fo/OjHLMazFLce
      54m2im1dFQK27kRYJplh8NoARZXFlDdUIIorg4TVzdU0lFWRmY3TvreFlucOkle8Uhbz4PMH
      ufruZS6/dRFJlpAVmY7TBx6bG9naDoNKVvYfO80rr7xEfYGNVGCU/PaXeP2NV0nMjaw2m45q
      vPb66xwotBJYHEKtOs4b3/4W9ug0qR1QLOHuMOh6HTASXgiTjCUe+XXB2QBzo3PsPdW+2vkB
      alpqKCjwMjk4RjibuOc0l/xiLx2nD9Bz7hZdZzppPNiEp+jxqRm7th5AEFDTUfpu9VHQvB/n
      8m2sDgeCoGGQW22myCsTKA6LQDSZweawIwgysqJt+6oQALqho2s62Uxmza/NMAy+993/CsB3
      /vDXyC9++M443D2MYlEob6wgk8mQi2XIRlOILpnv/fnfkkln+M6/+zWy2XtrAx544SBdZzpJ
      J9LsPdWOqqmo2uNR+nFtBaCl6e8do37/EdwWiTQ+QiOjpBSZjOFZbaYmY0TTWcYCUZoONDJ5
      a5RUQQmhpH3bV4UAsNpWrkcSpTW/tmgwSiKaIJ1I8+Z/+hG/+u/+BQ6346e+TlM15kZmcXtd
      VO6qRFvKkJuMk15OoHpFCquLScaTNO5vum8sv7iqhOOvn2BhYp6attrH6vtaUwHomk48OsvZ
      96aQLR5OnD5JpXKZj7sEnjz1xGpViI4De/n07AcUNh8i31NCW2mAsxf6OPjE9q8KAetbHjE8
      H0LNqdTtrWeyb4KJ2+O0PfEV52/dIRlLEJj2U9VSjaRIpBNZYqElMopG/Z5WvlP/qxgYXzqR
      JQgCp37haQzdQHrMzoxYUwGIFgfHT796z2P5HSdZPQKhvIWVxbGlPP/K5+3Kmw5Q3rSWlmxt
      1rM6XGg+hJbTOPbqcRYnFliYWHgoAUSDUQQN9rS0sDwTwVWdj1JkR7EpiLKE7PnqrvLFhW+P
      E+Y8wCYgruNh2cGZAHa3ncqmSmxOG4FpP7qmI0oiyeUkw52DBGaC5BXksf+ZjtVlycuLMV7/
      +ZdxuRzM356iucqH1bU11uyvJ6YANoH19AD+KT/eEh9Wh5WiyiIiixEyqQzZdJY3/+SHDHcP
      Aythy3jPGC//7qs48hxM9I1TVVCKJmlUHXvwgdXbDVMAm4B4Z8JvrU+JMXSDwIyfquZqZItM
      SV0pMx9cZzkc472/eJeZoWle/r1XadjfwM1PbtD7yS0Wr08hKxID1/rJ7Vd5+bVXkK33H1q3
      XTEFsAmshEDimnuA5cgyyeUkBeWFiKJIcVUJqXiKvst9TPatzNAefukIkiRx8punaK1rQDEk
      hvuGyaSytJ3YvaM6P5gC2BTWKwQKzYfQVI3i6mIEQcBb6kOxKFx55xJWh5X9pw8gaJCOJlBc
      VpQ8C5f++QK3bw3gqyigurVmTe15HDA3xGwCoigiimt/TlhoNoiu6hRXrRQu9pZ4sdgtxCNx
      alprcdkcLA+GWLq9yPLiEq5aH7OhAKlUmt0n9m6ZfbobiSmATWC9PMDsyCx2tx13wcqaK5fH
      hc25UoGt7fhusoEk6aUEqqJj97qwOW0cfukI1a01tB5rW1NbHhfMEGgTuDsMqq6hADRVY/Tm
      CFUt1V+4kxvsPbgb24F2ysqLcVR4kAtsWPJsyJaVr77j9AFaj7U91GzxdsQUwCawOgq0hgJY
      GJ8nFoxy/PUTq5NSGX+SfbvbUNUcgiAi2xVk+71JriRLW6ZQ7WZgCmATuBsC6WsogLvj+3Vt
      tUQnQtgKnCALqIqOozofR8nW3JK42ZgC2ATWeibYMAyGrg9SXVeJEMih6RrReJqSvZXYNvkE
      lq2OmQRvAmsVAhmGgZrOERhbxD+xSE1DNYqiIBVYKGwuXSNrtzemB9gEVj3AzzATbBgGqVCc
      2EgISRWob6hhz8sH8JQXIsoiPCY7sjYb0wNsAl93GNTQDTLxNP6hOXRVh5SOqAkM9o9Q2FhK
      UVURoiKZnf8RMAWwCYh3igE8zESYYRirP5HxAIuXJzAWs0RnQlhLXZz9+DyffHSewy8fvWcb
      o8nDYYZAm4AoCT91HsAwDHLpLIHhebS0SkVHLYou4c73oBTYcFR7GL05Qu/VXp76xWceaeuj
      yees7S3DMEguLXD1QhcJwNBVxm5e5J0PzrOc+7wGTi6+yEfvvM2NkQV0w2B+5AbvvHeWhVia
      rVUnYX140DCooRtoORVd1VDTOeYujaHEwImNXCqLq96LZ18xrjovak7lvb94F2+Jjye/feqx
      qcKw1VhjAagEw0nyZJ0UkIlOMZku5JmDZVzvHFpt1t15i45nnic11Uc0NkvvLJw+2Up/dx/q
      DlCAKEmrq0HvhjfZZIax8/0MvNnNxLlBJFnCW1pAIBCib2gY0SKDKCAqEoZhcOOTbgLTfp7/
      9Rew2HfeGp61Ym1DIFGhur6eqUgEAD0WorD2IPZ8DZvQtdpMcuSRb7eyq8hDMLCAp6YFu9tF
      oXOMdA4QtndVCMMwEEUBNZ5l6EwPRbsrMLIaHtmFtyofMU8mp6vMLgf4wV//M2pWpevCDb71
      3/0cJbUlqDmVq+9cprCqiMbDTfdVaTB5eNY1BxBkhUwyhWGICHw+BZ9TVzp4MmvgKLCysJTC
      wIamSkgSyOKKWXerQlgs2+8O983ffYM8txtZkQkHlxgbnKCuuZbyxmJEq0QylmRpcYkXf+sb
      VDZWMt4zzuLEAhW7KlgOxmg7voeWIy2PVQWGrciaV4a71XWZvp4RbJEYTxw6yFLn+7zTI1C7
      /zTxhWHirkYq80TefedddJuXl/ftYarnA94e0SjcdQS7yH3x7NaMbw2W5mYRiyvIk7+GfaII
      ooDkshAajaDmVEb7x0hl08gWhfnRWTRVZ++T7eQX56NYFfou9dJ3qZdELIHFZqGkpvRn+GwM
      IguzKAUVuHZCKY4HIBhrWaDSMMipuTt17wUUi4Khqag6WBQFQ1cxBBlR0Mllc4iygiSKGLpK
      TtNRFAXxC1/o0tISsiyjaHE++PAssZzC0aeexn/7IpNLOk+++BLJ8T4KWg9QYN3YL1FNR7l6
      c4xjR/ajxYb4s+/38zv/+pt81TbyqYlhisq9XPtsBisaVi2OPx3gZtcI3spW9tb5uHTuHElN
      ZO+Bo5Q5k4wtxdBFB8+89CJX/uGvuD3mp6CsmVeeP0plU+WD3yzYz0dzHp5rL39AA4PlhXGG
      IjIHW7d+Dc/1Ys0rwynKT4QrssLdghmCdPftRCxfcN2CJGP9iqoai4uzNB3+BjWOKJ1jo2ie
      ep5qyrEwOoHdW4nvTuc3NJXFwCKBySkq9x9gqvMCEbmUk4dbiU730zkwR+uhk1iWhrg1Fqbt
      4FEsmSAuXwVaIoKmWPCP9jITVzh0aC/pcIhwaBHBkUdhURUei0pgOUlpYQHx+QHsJXsQBZjo
      X+DUsUL65rMcKMvSc6mH+eU0+46fwJaOkkgECWXzybesDH9qmo4gC+iig/r6A8hJJ6rdiq/W
      yemK36bSscztYIZ9e5s4IEtMdp8jEo/jbe7g3/5iI+eu3KC8oQItNse8XkRlvs7c7DJCepZb
      IwvU7TlKo0VH0w0Ci3M4PcXkEiGw5qNHp+jqn6Fh/yGqi8vQh3pItlTj2KFO4LGYOTEwsNvt
      WG1WspKbGmeCrqFlJDnHwuAlfvBP7xHJgq7m6L74CVLpLlJ957g8FmC2+wOujc1y5XaAg4c6
      8OizXBtJ07Gvgf7rVwkH/MyEYkyPDzE/McSlG4PMDd3gct8YA9evEJPyKXZKDI6Os7Q4RCi+
      otTIQpS8QieGmmUiLdLa1kxkoA+IMhe2cXhfHTeu3mBhop+eqTjVFQXMTY2SvjP3JYgCugGB
      iQkWYhF2nziMQzBw5XvwFuaj6SAJGv23rpP2tlLtVnE4PNicDpyiSFYUEO02Rnp6SU72Mada
      yWVSJOMxLl28QPrOCOv01BjxZI7g/BTBwAxnzlwiGJ7j4w+vkBFt+Jw5YttrjOGReCwmwiyS
      zEzAj90exWJ1UrOnDadniKWsjeWCWk6WL7EYhzwneGtaaa0pYmIqQ/OhE+zxgiDrXLPk4fF4
      0JeCYHPj8XiRyVJWXUHPzZvgqqBajlDRsJ/2xiIMxc5sKkFLSw02criGPuVqyM3Jp1dKPEqy
      QE6DbGKWkZ5eAguz+JMKTz1ThNtbgNvtQDTmQHKx/0AbHoflnqrXoigSDwcZm/dz5KnjlBe6
      CCQtTPsXyM+lkWWJ8d4eXNV7qfY5UJNLhMNDZNKFhLMaVgDZi5NeuuZEDhx2cv1smKPHj3Hl
      SifaHQEIhr6yOjQSxWl1IuVXcPxYO4JqIAGaarCTJ5Cl7373u9/dbCMeRDqdRhRFvL4C5gev
      0b9ocOjAHmxijsVwlpractLzQ/QtuTjYUoEkGORUDV9+Pu7iAkaunGdwNkLlrnY8uQnOnu/E
      UbUPX2qET6/0UbfvGBXFRSQWpvDUNVJVUsDCyC1uj8yTX1aJyyLjKchHEiQELUww66O1ugAA
      Sc4y69fxiQlKDzzLyUPtVNs1sh47V978iFF/lI7jx3BKBnaPB6skkU4nyS8oQk0bGNksywE/
      M6EZltJLTPsTNLS1sTTWye2ZDAcPtDI90MPt3l4GhkbJr2qhWAjz4YVb7Dl8nAK3FUEAr5xk
      KuOhodxHNjJN12CAkvISKksKyYoOar0iF89fIi27qdnVTKEY4sr12+QsXioLJEZmU+yqKUXa
      oSHQ2ibBa8zdJNjlcm2qHenYApeuDrL/5Am8thWnqedSdHX20Hb4MI57ek+Y4WGDxsaCr/yb
      vRduszi1SFFlEbuP79mEc3MNFsd6ichltFR/ta3bmS0vgFgstkXnAQyyyRSCzY7yNU4+vP7B
      NRYnFzn0/CFKajdj7b5BNpVCsH49+7cLWz4HWFxc3GwT1oVgOEAg5CeWWSY7nfvpLzBZF7a8
      B9gKIdB6oGZzqDkNq8O6RSf6dgZb3gNsV2SLgmzZWWUItyI7eADMxMQUgMkOZ10FYBgG8UiA
      mTn/Pev8DTXN/MwMkeU0hgHp5Qgzswuk17hcuInJT2NdBaCmQly5eoOZ0VvcGPavPj566xqj
      M3NcunSVVDbGtcvXmZno59rtCbbY0bkm25z1FUB4Cm/rSY48cRI1MrX6eCgrcezIYfYWOQj6
      x5GqD3L0xCnysv4dcU6wydZhfUMgXUeSZUDE+MJuX0kUEQBZWtkYLikrbQTRYOsOyppsR9ZV
      AFJ+CaGRHham+lGVQrRsiqwGci7B1KKfQX+MwqJKEhO9LEwPEc65sZkDsyYbyLoKwOKuoLXC
      wnhI4si+OjLRRaIZ2HvoIMGxYap2H8DtLKajpYix2QQdHS18nc1VJiZfF3Mm2GRHc58A5ufn
      0XX9Qe03lLvLobfmYjiT7cC28QCGYaCqKoqyNssLstnsmglPVdU754KtTcS5lrZpd3bOSNLa
      nPS+lrat5Xeq6zq6riPL9yaZ2yblFARhzTr/WvOTH/pWYq06/nqwEd+puRTiAWzljmHa9ugI
      gvClHnjr3po2ma36RYJp29dBEIQvXXZuegCTHc22E0Am4ie6ThustGyS3s6LXLh6i6RqkFle
      5OKn55jwL2MYBlH/JH0jcxgGaKkIl89/Rs/oPPrWHWdYJRH2k1jbc7tXyaWW6L5ynqs3Bslo
      BvHgFBfOXWJ+KYmh5Rjv7eSzC1cIJ3PEFic498nHXOud2JBK4dtOAEn/NOF1qhW7HJzHWtpA
      bZHA4OAk3V191LY1M9LdRcZYZno+R3xpHoDbPbepat6LHBxj+jEovBNbmCa2TjeO8OIivtoW
      vHKCyYlJbvRNU99YQX/3beLxAGlLCW11JQwMDJI1LOzefwB3pJ/hpfWx54tszxzA0BnqOsfA
      TJTi+nZ2CUEuz/lJhzI88corBPqv03bwOMO3LlJR08iN61eJZawcPnWcWP9VpuI6RaUFOPPK
      qcrTGA9ptO2qwFNWjyuXZHggTUFhOYu5AsoLi1C9w4TUPHa3u7lxoxsAq6AxPNCLNeUnsJCk
      xvNVRRO3CFqam5cuMhFIUrP7IAVLI3SHlsksqTz9+iuM37rOkSNHuXr1Iu2N1Xx8sZus4eLU
      8yeZunaW+biF0nIPvvImvDk/80Y+TeU+imuayCWXGFiAIotEvLiMspJK4pMzpJ1lNNfnmBga
      oLioHG+hhRuXulnSfBxzr/8lbzsPcLekejKZAgyGhodQcyJ7Tz7LS0d2Ec8Z5DIZDCCXzZBJ
      pcjpBpnIHFOBGDkN2p84wb6mepYX55ifn8PlKwJAzUTp6xmmqG4vlQU2NG1lwjCrCcg/kfs1
      dTxBe1sLZYU+nI6tP5GnaRqappHOZCCXZHhsGgwrh555kWf3lhHNGmQyK641m8mQTiTRgcTC
      GLPRLBlN5tjTT9LeVMPC5DQzgTA+z8rZxOl4gIGhOaob91CYZ0HVdMBA1URELctw7y2Uojrq
      KwsRRTv1zS2UO7L44+sUk32BbeMBtFyCgVu3mVlMcqxRZzaVo7y8ktxiGBBRFAlRWFmFamSX
      6b5+hbn5ZfLzEygOD6XFIiIGVpsbl9OKiIWyvCRdM1ZebFnpwAuDnUxFHWQG+kjV1OJWlzh3
      6RLLGZkXtBg3uwYZnZgAu4+6fBib9uMP6pxo27p3/0wywmBvP4tRkcO1OdKaSFl5GYsZQJBW
      PjdRREBAiwe5fu0K06EMtb4YDl8RDnUlbnK48nHYZER8eMUbTMUraHKsdK/xnussqj4yvX1U
      7apGCk9x/sIcGclHaXCQvskolZkBkvFKxPgckZROZmmJ0vXv/9tnJljXc4T9ASSnl3yXjWQ0
      RCwj4HRasUsS2GxIuQw5yYKejLKUyGF32HHZrUTCYQTZhtPtRNRUFLsdPR3n9o0ubOVttFQX
      Ais710KxJCDgyi/ApegEQku4vIU4FZ3FhSAaIFmdFDhlgpEY9jwfHqdtyx7cqOXShEIRbHk+
      3HaF5UiIlCbicDiwiSDY7QiZFJpsIxcPEUuDw2HDbZPxByNYrHYceXmQy2C128nFw3R13aKs
      7RA1hSvfW2IpyFIiA4h4CgqxkiEUSZBXUIBFT+MPRTEAq9ODS1YJx5LINhdFvjzW+2PbNgJY
      a7RcmvBSHG9BAfIOLhz1qKiZBJF4Fp8vH2mrqv4LmAIw2dFsuyTYxORRMAVgsqMxBWCyozEF
      YLKjMQVgskFoBOdmCMVSACSX/EwtRh761YlIiGTuwTsVDT3H4uwUoeU0oBNZnGF0dIz5YPQr
      a02ZAjDZIJb50f/5H/nL9zsxjCyX/umv+OO/eecrX2Hocd595yMMA7rf/Bt6gg9e5BUZv8bf
      v3WW0HIGyPDB9/+cizf6efP73+PK8L0l9rV0jLc++gTYRjPBJlsfV0k1ejxIMBrCby2m1iOT
      XQ7w47ffIqDm8dJrLzHx6RkWjTj+ZQ+nmnT+4R/ewq9ZqNNVes++SWcafulXvkWBXWFpupe3
      z3ay59QpRt98l2G/jcPxDGDB4vJy+PQr5IUu8XdXuthFAW9+0oWrfC8HSyL84O/eJhhWTQ9g
      soFIbmoqdLp7JiksLEEExrs+JFtzmleO+Hj3natMDYyz9/lvkzc9hPPwSdrbD/Prr51CEkWa
      n3iRdmuQgcWVMOrsmbO0P9HOhTcv03LsIKde+gWONRXf85ayxU5OTZJMJNC1LJ0/fge9+hh7
      Dx3jt37hKVMAJhtLSXktQ9fOUVBVB4DFurJsJRKOYXHaEQQFu11GlmRARs3EiMQSGIaI3W5F
      liXubhSwKRKhQBhs9vtOujQ0lWh4kSuXrlDX0ED3hW72PPMKLeX5CIKIlE6wsJR4PE6JNMui
      bAcELDYnVfV12Kz5NLdU43G5ad5zgOxcD5NJH6+8cASXy0FRWSkuu52i8moq7Bm6pxO0NdXh
      Kykl3+Ugv7gEt1WipraK8bF5nnzhNEVuB+78Qnx5dkBAz6boHxikoOk4pw+3UlRoZ2Boirrm
      Nmp31VHrUukaiphLIUx2NmYIZLKjMQVgsqP5/wFz/nFYoieVXgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='VRH' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VRH+UPT by Agency' width='192'>
      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
      XjsQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='VRH+UPT by Group' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VRH+UPT by Mode' width='192'>
      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
      cAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
