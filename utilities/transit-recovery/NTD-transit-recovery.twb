<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.1012.1128                               -->
<workbook original-version='18.1' source-build='2023.2.3 (20232.23.1012.1128)' source-platform='win' version='18.1' xml:base='https://10ay.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='NTD-transit-recovery' path='/t/metropolitantransportationcommission/workbooks' revision='1.7' site='metropolitantransportationcommission' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Today' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2023-11-14#'>
        <calculation class='tableau' formula='#2023-11-14#' />
      </column>
      <column caption='bus max UPT per VRH' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='33.6087382816335'>
        <calculation class='tableau' formula='33.6087382816335' />
      </column>
      <column caption='rail max UPT per VRH' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='63.5359336580623'>
        <calculation class='tableau' formula='63.5359336580623' />
      </column>
      <column caption='bus k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='0.0021279033348324599'>
        <calculation class='tableau' formula='0.0021279033348324599' />
      </column>
      <column caption='bus x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='44117'>
        <calculation class='tableau' formula='44117' />
      </column>
      <column caption='rail k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='0.0014962607980112199'>
        <calculation class='tableau' formula='0.0014962607980112199' />
      </column>
      <column caption='rail x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='45111'>
        <calculation class='tableau' formula='45111' />
      </column>
      <column caption='rail max - high' datatype='real' default-format='p0%' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='bus max - high' datatype='real' default-format='p0%' name='[bus k - high (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.'>
        <calculation class='tableau' formula='1.' />
      </column>
      <column caption='bus k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k - low (copy)_605734172523401226]' param-domain-type='any' role='measure' type='quantitative' value='0.0017321400378388901'>
        <calculation class='tableau' formula='0.0017321400378388901' />
      </column>
      <column caption='bus k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k estimate (copy)_605734172509597701]' param-domain-type='any' role='measure' type='quantitative' value='0.00281859033905704'>
        <calculation class='tableau' formula='0.00281859033905704' />
      </column>
      <column caption='bus max - med' datatype='real' default-format='p0%' name='[bus max - high (copy)_1075234433896251394]' param-domain-type='any' role='measure' type='quantitative' value='0.9'>
        <calculation class='tableau' formula='0.9' />
      </column>
      <column caption='bus max - low' datatype='real' default-format='p0%' name='[bus max - med (copy)_1075234433896361987]' param-domain-type='any' role='measure' type='quantitative' value='0.8'>
        <calculation class='tableau' formula='0.8' />
      </column>
      <column caption='bus x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 - low (copy)_605734172523446283]' param-domain-type='any' role='measure' type='quantitative' value='44229'>
        <calculation class='tableau' formula='44229' />
      </column>
      <column caption='bus x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 estimate (copy)_605734172522225673]' param-domain-type='any' role='measure' type='quantitative' value='44025'>
        <calculation class='tableau' formula='44025' />
      </column>
      <column caption='rail k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k - low (copy)_605734172527276047]' param-domain-type='any' role='measure' type='quantitative' value='0.00142497783914183'>
        <calculation class='tableau' formula='0.00142497783914183' />
      </column>
      <column caption='rail k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k estimate (copy)_605734172525633548]' param-domain-type='any' role='measure' type='quantitative' value='0.00159570178958894'>
        <calculation class='tableau' formula='0.00159570178958894' />
      </column>
      <column caption='rail max - med' datatype='real' default-format='p0%' name='[rail max - high (copy)_1075234433901314052]' param-domain-type='any' role='measure' type='quantitative' value='0.90'>
        <calculation class='tableau' formula='0.90' />
      </column>
      <column caption='rail max - low' datatype='real' default-format='p0%' name='[rail max - med (copy)_1075234433901854725]' param-domain-type='any' role='measure' type='quantitative' value='0.80'>
        <calculation class='tableau' formula='0.80' />
      </column>
      <column caption='rail x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 - low (copy)_605734172527190030]' param-domain-type='any' role='measure' type='quantitative' value='45246'>
        <calculation class='tableau' formula='45246' />
      </column>
      <column caption='rail x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 estimate (copy)_605734172526239757]' param-domain-type='any' role='measure' type='quantitative' value='44962'>
        <calculation class='tableau' formula='44962' />
      </column>
    </datasource>
    <datasource caption='TransitHesitance' inline='true' name='federated.0y3qo5u07y662o17w9ljm040hec7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NTD_long_VRH_UPT' name='textscan.08tlf0g1hquvb71auf1lz0s7aysv'>
            <connection class='textscan' directory='E:/Box/Plan Bay Area 2050+/Federal and State Approvals/CARB Technical Methodology/Exogenous Forces/Transit_hesitance' filename='NTD_long_VRH_UPT.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='NTD_long_VRH_UPT.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='NTD.ID' />
            <column datatype='integer' name='Legacy.NTD.ID' />
            <column datatype='string' name='Agency' />
            <column datatype='string' name='Status' />
            <column datatype='string' name='Reporter.Type' />
            <column datatype='integer' name='UACE.CD' />
            <column datatype='string' name='UZA.Name' />
            <column datatype='string' name='Mode' />
            <column datatype='string' name='TOS' />
            <column datatype='string' name='X3.Mode' />
            <column datatype='string' name='Common.Agency.Name' />
            <column datatype='string' name='month' />
            <column datatype='integer' name='year' />
            <column datatype='integer' name='Monthly.Vehicle.Revenue.Hours' />
            <column datatype='integer' name='month_int' />
            <column datatype='integer' name='days_in_month' />
            <column datatype='real' name='average.daily.Vehicle.Revenue.Hours' />
            <column datatype='integer' name='NTD ID' />
            <column datatype='integer' name='Legacy NTD ID' />
            <column datatype='string' name='Reporter Type' />
            <column datatype='integer' name='UACE CD' />
            <column datatype='string' name='UZA Name' />
            <column datatype='string' name='3 Mode' />
            <column datatype='integer' name='Monthly.Unlinked.Passenger.Trips' />
            <column datatype='real' name='Monthly_To_Typical_Weekday' />
            <column datatype='real' name='average.daily.Unlinked.Passenger.Trips' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.08tlf0g1hquvb71auf1lz0s7aysv' name='NTD_long_VRH_UPT.csv' table='[NTD_long_VRH_UPT#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='NTD.ID' ordinal='0' />
              <column datatype='integer' name='Legacy.NTD.ID' ordinal='1' />
              <column datatype='string' name='Agency' ordinal='2' />
              <column datatype='string' name='Status' ordinal='3' />
              <column datatype='string' name='Reporter.Type' ordinal='4' />
              <column datatype='integer' name='UACE.CD' ordinal='5' />
              <column datatype='string' name='UZA.Name' ordinal='6' />
              <column datatype='string' name='Mode' ordinal='7' />
              <column datatype='string' name='TOS' ordinal='8' />
              <column datatype='string' name='X3.Mode' ordinal='9' />
              <column datatype='string' name='Common.Agency.Name' ordinal='10' />
              <column datatype='string' name='month' ordinal='11' />
              <column datatype='integer' name='year' ordinal='12' />
              <column datatype='integer' name='Monthly.Vehicle.Revenue.Hours' ordinal='13' />
              <column datatype='integer' name='month_int' ordinal='14' />
              <column datatype='integer' name='days_in_month' ordinal='15' />
              <column datatype='real' name='average.daily.Vehicle.Revenue.Hours' ordinal='16' />
              <column datatype='integer' name='NTD ID' ordinal='17' />
              <column datatype='integer' name='Legacy NTD ID' ordinal='18' />
              <column datatype='string' name='Reporter Type' ordinal='19' />
              <column datatype='integer' name='UACE CD' ordinal='20' />
              <column datatype='string' name='UZA Name' ordinal='21' />
              <column datatype='string' name='3 Mode' ordinal='22' />
              <column datatype='integer' name='Monthly.Unlinked.Passenger.Trips' ordinal='23' />
              <column datatype='real' name='Monthly_To_Typical_Weekday' ordinal='24' />
              <column datatype='real' name='average.daily.Unlinked.Passenger.Trips' ordinal='25' />
            </columns>
          </relation>
          <relation connection='textscan.08tlf0g1hquvb71auf1lz0s7aysv' name='future-stub.csv' table='[future-stub#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Mode' ordinal='0' />
              <column datatype='string' name='month' ordinal='1' />
              <column datatype='integer' name='month_int' ordinal='2' />
              <column datatype='integer' name='year' ordinal='3' />
              <column datatype='string' name='type' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='NTD_long_VRH_UPT.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='NTD.ID' />
            <column datatype='integer' name='Legacy.NTD.ID' />
            <column datatype='string' name='Agency' />
            <column datatype='string' name='Status' />
            <column datatype='string' name='Reporter.Type' />
            <column datatype='integer' name='UACE.CD' />
            <column datatype='string' name='UZA.Name' />
            <column datatype='string' name='Mode' />
            <column datatype='string' name='TOS' />
            <column datatype='string' name='X3.Mode' />
            <column datatype='string' name='Common.Agency.Name' />
            <column datatype='string' name='month' />
            <column datatype='integer' name='year' />
            <column datatype='integer' name='Monthly.Vehicle.Revenue.Hours' />
            <column datatype='integer' name='month_int' />
            <column datatype='integer' name='days_in_month' />
            <column datatype='real' name='average.daily.Vehicle.Revenue.Hours' />
            <column datatype='integer' name='NTD ID' />
            <column datatype='integer' name='Legacy NTD ID' />
            <column datatype='string' name='Reporter Type' />
            <column datatype='integer' name='UACE CD' />
            <column datatype='string' name='UZA Name' />
            <column datatype='string' name='3 Mode' />
            <column datatype='integer' name='Monthly.Unlinked.Passenger.Trips' />
            <column datatype='real' name='Monthly_To_Typical_Weekday' />
            <column datatype='real' name='average.daily.Unlinked.Passenger.Trips' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.08tlf0g1hquvb71auf1lz0s7aysv' name='NTD_long_VRH_UPT.csv' table='[NTD_long_VRH_UPT#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='NTD.ID' ordinal='0' />
              <column datatype='integer' name='Legacy.NTD.ID' ordinal='1' />
              <column datatype='string' name='Agency' ordinal='2' />
              <column datatype='string' name='Status' ordinal='3' />
              <column datatype='string' name='Reporter.Type' ordinal='4' />
              <column datatype='integer' name='UACE.CD' ordinal='5' />
              <column datatype='string' name='UZA.Name' ordinal='6' />
              <column datatype='string' name='Mode' ordinal='7' />
              <column datatype='string' name='TOS' ordinal='8' />
              <column datatype='string' name='X3.Mode' ordinal='9' />
              <column datatype='string' name='Common.Agency.Name' ordinal='10' />
              <column datatype='string' name='month' ordinal='11' />
              <column datatype='integer' name='year' ordinal='12' />
              <column datatype='integer' name='Monthly.Vehicle.Revenue.Hours' ordinal='13' />
              <column datatype='integer' name='month_int' ordinal='14' />
              <column datatype='integer' name='days_in_month' ordinal='15' />
              <column datatype='real' name='average.daily.Vehicle.Revenue.Hours' ordinal='16' />
              <column datatype='integer' name='NTD ID' ordinal='17' />
              <column datatype='integer' name='Legacy NTD ID' ordinal='18' />
              <column datatype='string' name='Reporter Type' ordinal='19' />
              <column datatype='integer' name='UACE CD' ordinal='20' />
              <column datatype='string' name='UZA Name' ordinal='21' />
              <column datatype='string' name='3 Mode' ordinal='22' />
              <column datatype='integer' name='Monthly.Unlinked.Passenger.Trips' ordinal='23' />
              <column datatype='real' name='Monthly_To_Typical_Weekday' ordinal='24' />
              <column datatype='real' name='average.daily.Unlinked.Passenger.Trips' ordinal='25' />
            </columns>
          </relation>
          <relation connection='textscan.08tlf0g1hquvb71auf1lz0s7aysv' name='future-stub.csv' table='[future-stub#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Mode' ordinal='0' />
              <column datatype='string' name='month' ordinal='1' />
              <column datatype='integer' name='month_int' ordinal='2' />
              <column datatype='integer' name='year' ordinal='3' />
              <column datatype='string' name='type' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NTD.ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NTD.ID]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>NTD.ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legacy.NTD.ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legacy.NTD.ID]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Legacy.NTD.ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Agency]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Agency</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reporter.Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Reporter.Type]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Reporter.Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UACE.CD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UACE.CD]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>UACE.CD</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UZA.Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UZA.Name]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>UZA.Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Mode]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Mode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TOS]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>TOS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X3.Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X3.Mode]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>X3.Mode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Common.Agency.Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Common.Agency.Name]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Common.Agency.Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly.Vehicle.Revenue.Hours</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly.Vehicle.Revenue.Hours]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Monthly.Vehicle.Revenue.Hours</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_int</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month_int]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>month_int</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_in_month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_in_month]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>days_in_month</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average.daily.Vehicle.Revenue.Hours</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average.daily.Vehicle.Revenue.Hours]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>average.daily.Vehicle.Revenue.Hours</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NTD ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NTD ID]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>NTD ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legacy NTD ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legacy NTD ID]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Legacy NTD ID</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reporter Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Reporter Type]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Reporter Type</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UACE CD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UACE CD]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>UACE CD</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UZA Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UZA Name]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>UZA Name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3 Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[3 Mode]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>3 Mode</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly.Unlinked.Passenger.Trips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly.Unlinked.Passenger.Trips]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Monthly.Unlinked.Passenger.Trips</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly_To_Typical_Weekday</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Monthly_To_Typical_Weekday]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Monthly_To_Typical_Weekday</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average.daily.Unlinked.Passenger.Trips</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average.daily.Unlinked.Passenger.Trips]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>average.daily.Unlinked.Passenger.Trips</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[NTD_long_VRH_UPT.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[3 Mode]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Agency]' role='dimension' type='nominal' />
      <column caption='Percent recovered' datatype='real' default-format='p0%' name='[Calculation_1268326267935092736]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF STARTSWITH([Calculation_605734172513480712], &quot;Buses&quot;) then&#13;&#10;  [Calculation_605734172506800129]/[Parameters].[Parameter 2]&#13;&#10;ELSEIF STARTSWITH([Calculation_605734172513480712], &quot;Rail and Ferry&quot;) THEN&#13;&#10;  [Calculation_605734172506800129]/[Parameters].[Parameter 3]&#13;&#10;end' />
      </column>
      <column caption='Estimated UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_605734172506800129]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; MAKEDATE(2020,04,01) then&#13;&#10;  NULL&#13;&#10;// middle = estimated&#13;&#10;ELSEIF ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 2]*[Parameters].[bus max - high (copy)_1075234433896251394]/(1+&#13;&#10;    EXP([Parameters].[Parameter 4]*([Parameters].[Parameter 5]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 2]*[Parameters].[bus max - med (copy)_1075234433896361987]/(1+&#13;&#10;    EXP([Parameters].[bus k estimate (copy)_605734172509597701]*([Parameters].[bus x0 estimate (copy)_605734172522225673]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 2]*[Parameters].[bus k - high (copy)]/(1+&#13;&#10;    EXP([Parameters].[bus k - low (copy)_605734172523401226]*([Parameters].[bus x0 - low (copy)_605734172523446283]-[Calculation_605734172507439106])))&#13;&#10;// middle = estimated&#13;&#10;ELSEIF  ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[Parameter 3]*[Parameters].[rail max - high (copy)_1075234433901314052]/(1+&#13;&#10;    EXP([Parameters].[Parameter 6]*([Parameters].[Parameter 7]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF  ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[Parameter 3]*[Parameters].[rail max - med (copy)_1075234433901854725]/(1+&#13;&#10;    EXP([Parameters].[rail k estimate (copy)_605734172525633548]*([Parameters].[rail x0 estimate (copy)_605734172526239757]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF  ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[Parameter 3]*[Parameters].[Parameter 8]/(1+&#13;&#10;    EXP([Parameters].[rail k - low (copy)_605734172527276047]*([Parameters].[rail x0 - low (copy)_605734172527190030]-[Calculation_605734172507439106])))&#13;&#10;&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
      </column>
      <column aggregation='Sum' caption='Date Num' datatype='integer' name='[Calculation_605734172507439106]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='int([Calculation_776026533391114247])' />
      </column>
      <column caption='Mode &amp; Type' datatype='string' name='[Calculation_605734172513480712]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Mode (group)] + &quot; - &quot; + IFNULL([type],&quot;historic&quot;)' />
      </column>
      <column caption='Historic or Estimated Monthly VRH' datatype='integer' name='[Calculation_605734172528365584]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; [Parameters].[Parameter 1] then&#13;&#10;  [Monthly.Vehicle.Revenue.Hours]&#13;&#10;ELSEIF (([Mode (group)]==&quot;Buses&quot;) AND ([type]==&quot;middle&quot;)) then&#13;&#10; // October 2019 sum&#13;&#10; 723117&#13;&#10;ELSEIF ([Mode (group)]==&quot;Rail and Ferry&quot;) AND ([type]==&quot;middle&quot;) then&#13;&#10; // October 2019 sum&#13;&#10; 320883&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
      </column>
      <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
      </column>
      <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
      </column>
      <column datatype='string' name='[Common.Agency.Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Legacy NTD ID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Legacy.NTD.ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
          <bin default-name='false' value='&quot;Buses&quot;'>
            <value>&quot;CB&quot;</value>
            <value>&quot;MB&quot;</value>
            <value>&quot;RB&quot;</value>
            <value>&quot;TB&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Demand Response&quot;'>
            <value>&quot;DR&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
            <value>&quot;CC&quot;</value>
            <value>&quot;CR&quot;</value>
            <value>&quot;FB&quot;</value>
            <value>&quot;HR&quot;</value>
            <value>&quot;LR&quot;</value>
            <value>&quot;MG&quot;</value>
            <value>&quot;SR&quot;</value>
            <value>&quot;YR&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;CB&quot;' value='Commuter Bus' />
          <alias key='&quot;CC&quot;' value='Cable Car' />
          <alias key='&quot;CR&quot;' value='Commuter Rail' />
          <alias key='&quot;DR&quot;' value='Demand Response' />
          <alias key='&quot;FB&quot;' value='Ferryboat' />
          <alias key='&quot;HR&quot;' value='Heavy Rail' />
          <alias key='&quot;LR&quot;' value='Light Rail' />
          <alias key='&quot;MB&quot;' value='Bus' />
          <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
          <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
          <alias key='&quot;SR&quot;' value='Streetcar Rail' />
          <alias key='&quot;TB&quot;' value='Trolleybus' />
          <alias key='&quot;YR&quot;' value='Hybrid Rail' />
        </aliases>
      </column>
      <column caption='Monthly To Typical Weekday' datatype='real' hidden='true' name='[Monthly_To_Typical_Weekday]' role='measure' type='quantitative' />
      <column caption='Ntd Id' datatype='integer' hidden='true' name='[NTD ID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[NTD.ID]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[Reporter Type]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Reporter.Type]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Status]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[TOS]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Table Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Uace Cd' datatype='integer' hidden='true' name='[UACE CD]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[UACE.CD]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[UZA Name]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[UZA.Name]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[X3.Mode]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='NTD_long_VRH_UPT.csv' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[average.daily.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[average.daily.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
      <column caption='Days In Month' datatype='integer' hidden='true' name='[days_in_month]' role='dimension' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Month Int' datatype='integer' hidden='true' name='[month_int]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_605734172506800129]' derivation='Attribute' name='[attr:Calculation_605734172506800129:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_605734172513480712]' derivation='None' name='[none:Calculation_605734172513480712:nk]' pivot='key' type='nominal' />
      <column-instance column='[Common.Agency.Name]' derivation='None' name='[none:Common.Agency.Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_605734172506800129]' derivation='Sum' name='[sum:Calculation_605734172506800129:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
      <group caption='Future' name='[Future]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='[Calculation_776026533391114247]&gt;[Parameters].[Parameter 1]' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Calculation_776026533391114247]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Historic' name='[Historic]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='[Calculation_776026533391114247] &lt; [Parameters].[Parameter 1]' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Calculation_776026533391114247]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Recent Past' name='[Recent Past]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='([Calculation_776026533391114247] &lt; [Parameters].[Parameter 1]) AND (YEAR([Calculation_776026533391114247]) &gt;= 2019)' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Calculation_776026533391114247]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.510567' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.489433' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Common.Agency.Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Marin Transit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AC Transit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VTA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;County Connection&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Napa Vine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FAST&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Union City Transit*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ACE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WestCAT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sonoma County Transit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GGBHTD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SFMTA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tri Delta Transit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vacaville City Coach*&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Petaluma Transit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LAVTA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WETA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SolTrans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SamTrans&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Caltrain&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Mode:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;YR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CB&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Mode (group)]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Buses&quot;</bucket>
                <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Buses&quot;</bucket>
                <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Buses&quot;</bucket>
                <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Calculation_605734172506800129:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Rail and Ferry&quot;</bucket>
                <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Rail and Ferry&quot;</bucket>
                <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Rail and Ferry&quot;</bucket>
                <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Calculation_605734172506800129:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Mode (group)]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Buses&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Rail and Ferry&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_605734172513480712:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Buses - historic&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Buses - high&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Buses - middle&quot;</bucket>
            </map>
            <map to='#7c4d79'>
              <bucket>&quot;Rail and Ferry - historic&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Rail and Ferry - Historical&quot;</bucket>
            </map>
            <map to='#a27099'>
              <bucket>&quot;Rail and Ferry - high&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Buses - low&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Buses - Historic&quot;</bucket>
            </map>
            <map to='#cf9dbe'>
              <bucket>&quot;Rail and Ferry - middle&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;Rail and Ferry - low&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Buses - Historical&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Rail and Ferry - Historic&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[:Measure Names]' direction='ASC'>
          <dictionary>
            <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk]&quot;</bucket>
            <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk]&quot;</bucket>
            <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]&quot;</bucket>
            <bucket>&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Calculation_605734172506800129:qk]&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:Calculation_605734172513480712:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Buses - historic&quot;</bucket>
            <bucket>&quot;Buses - low&quot;</bucket>
            <bucket>&quot;Buses - middle&quot;</bucket>
            <bucket>&quot;Buses - high&quot;</bucket>
            <bucket>&quot;Demand Response - historic&quot;</bucket>
            <bucket>&quot;Rail and Ferry - historic&quot;</bucket>
            <bucket>&quot;Rail and Ferry - low&quot;</bucket>
            <bucket>&quot;Rail and Ferry - middle&quot;</bucket>
            <bucket>&quot;Rail and Ferry - high&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='NTD.ID' />
        <field-sort-custom-order field='Legacy.NTD.ID' />
        <field-sort-custom-order field='Agency' />
        <field-sort-custom-order field='Status' />
        <field-sort-custom-order field='Reporter.Type' />
        <field-sort-custom-order field='UACE.CD' />
        <field-sort-custom-order field='UZA.Name' />
        <field-sort-custom-order field='Mode' />
        <field-sort-custom-order field='TOS' />
        <field-sort-custom-order field='X3.Mode' />
        <field-sort-custom-order field='Common.Agency.Name' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='Calculation_776026533391114247' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Monthly.Vehicle.Revenue.Hours' />
        <field-sort-custom-order field='month_int' />
        <field-sort-custom-order field='days_in_month' />
        <field-sort-custom-order field='average.daily.Vehicle.Revenue.Hours' />
        <field-sort-custom-order field='NTD ID' />
        <field-sort-custom-order field='Legacy NTD ID' />
        <field-sort-custom-order field='Reporter Type' />
        <field-sort-custom-order field='UACE CD' />
        <field-sort-custom-order field='UZA Name' />
        <field-sort-custom-order field='3 Mode' />
        <field-sort-custom-order field='Monthly.Unlinked.Passenger.Trips' />
        <field-sort-custom-order field='Calculation_776026533391941640' />
        <field-sort-custom-order field='Monthly_To_Typical_Weekday' />
        <field-sort-custom-order field='average.daily.Unlinked.Passenger.Trips' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Today' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2023-11-14#'>
          <calculation class='tableau' formula='#2023-11-14#' />
        </column>
        <column caption='bus max UPT per VRH' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='33.6087382816335'>
          <calculation class='tableau' formula='33.6087382816335' />
        </column>
        <column caption='rail max UPT per VRH' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='63.5359336580623'>
          <calculation class='tableau' formula='63.5359336580623' />
        </column>
        <column caption='bus k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='0.0021279033348324599'>
          <calculation class='tableau' formula='0.0021279033348324599' />
        </column>
        <column caption='bus x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='44117'>
          <calculation class='tableau' formula='44117' />
        </column>
        <column caption='rail k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='0.0014962607980112199'>
          <calculation class='tableau' formula='0.0014962607980112199' />
        </column>
        <column caption='rail x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='45111'>
          <calculation class='tableau' formula='45111' />
        </column>
        <column caption='rail max - high' datatype='real' default-format='p0%' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
        <column caption='bus max - high' datatype='real' default-format='p0%' name='[bus k - high (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.'>
          <calculation class='tableau' formula='1.' />
        </column>
        <column caption='bus k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k - low (copy)_605734172523401226]' param-domain-type='any' role='measure' type='quantitative' value='0.0017321400378388901'>
          <calculation class='tableau' formula='0.0017321400378388901' />
        </column>
        <column caption='bus k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k estimate (copy)_605734172509597701]' param-domain-type='any' role='measure' type='quantitative' value='0.00281859033905704'>
          <calculation class='tableau' formula='0.00281859033905704' />
        </column>
        <column caption='bus max - med' datatype='real' default-format='p0%' name='[bus max - high (copy)_1075234433896251394]' param-domain-type='any' role='measure' type='quantitative' value='0.9'>
          <calculation class='tableau' formula='0.9' />
        </column>
        <column caption='bus max - low' datatype='real' default-format='p0%' name='[bus max - med (copy)_1075234433896361987]' param-domain-type='any' role='measure' type='quantitative' value='0.8'>
          <calculation class='tableau' formula='0.8' />
        </column>
        <column caption='bus x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 - low (copy)_605734172523446283]' param-domain-type='any' role='measure' type='quantitative' value='44229'>
          <calculation class='tableau' formula='44229' />
        </column>
        <column caption='bus x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 estimate (copy)_605734172522225673]' param-domain-type='any' role='measure' type='quantitative' value='44025'>
          <calculation class='tableau' formula='44025' />
        </column>
        <column caption='rail k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k - low (copy)_605734172527276047]' param-domain-type='any' role='measure' type='quantitative' value='0.00142497783914183'>
          <calculation class='tableau' formula='0.00142497783914183' />
        </column>
        <column caption='rail k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k estimate (copy)_605734172525633548]' param-domain-type='any' role='measure' type='quantitative' value='0.00159570178958894'>
          <calculation class='tableau' formula='0.00159570178958894' />
        </column>
        <column caption='rail max - med' datatype='real' default-format='p0%' name='[rail max - high (copy)_1075234433901314052]' param-domain-type='any' role='measure' type='quantitative' value='0.90'>
          <calculation class='tableau' formula='0.90' />
        </column>
        <column caption='rail max - low' datatype='real' default-format='p0%' name='[rail max - med (copy)_1075234433901854725]' param-domain-type='any' role='measure' type='quantitative' value='0.80'>
          <calculation class='tableau' formula='0.80' />
        </column>
        <column caption='rail x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 - low (copy)_605734172527190030]' param-domain-type='any' role='measure' type='quantitative' value='45246'>
          <calculation class='tableau' formula='45246' />
        </column>
        <column caption='rail x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 estimate (copy)_605734172526239757]' param-domain-type='any' role='measure' type='quantitative' value='44962'>
          <calculation class='tableau' formula='44962' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='NTD_long_VRH_UPT.csv' id='NTD_long_VRH_UPT.csv_66D45EA878D74D70A1A127C8891DC9C0'>
            <properties context=''>
              <relation all='true' name='NTD_long_VRH_UPT.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='NTD.ID' />
                  <column datatype='integer' name='Legacy.NTD.ID' />
                  <column datatype='string' name='Agency' />
                  <column datatype='string' name='Status' />
                  <column datatype='string' name='Reporter.Type' />
                  <column datatype='integer' name='UACE.CD' />
                  <column datatype='string' name='UZA.Name' />
                  <column datatype='string' name='Mode' />
                  <column datatype='string' name='TOS' />
                  <column datatype='string' name='X3.Mode' />
                  <column datatype='string' name='Common.Agency.Name' />
                  <column datatype='string' name='month' />
                  <column datatype='integer' name='year' />
                  <column datatype='integer' name='Monthly.Vehicle.Revenue.Hours' />
                  <column datatype='integer' name='month_int' />
                  <column datatype='integer' name='days_in_month' />
                  <column datatype='real' name='average.daily.Vehicle.Revenue.Hours' />
                  <column datatype='integer' name='NTD ID' />
                  <column datatype='integer' name='Legacy NTD ID' />
                  <column datatype='string' name='Reporter Type' />
                  <column datatype='integer' name='UACE CD' />
                  <column datatype='string' name='UZA Name' />
                  <column datatype='string' name='3 Mode' />
                  <column datatype='integer' name='Monthly.Unlinked.Passenger.Trips' />
                  <column datatype='real' name='Monthly_To_Typical_Weekday' />
                  <column datatype='real' name='average.daily.Unlinked.Passenger.Trips' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.08tlf0g1hquvb71auf1lz0s7aysv' name='NTD_long_VRH_UPT.csv' table='[NTD_long_VRH_UPT#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='NTD.ID' ordinal='0' />
                    <column datatype='integer' name='Legacy.NTD.ID' ordinal='1' />
                    <column datatype='string' name='Agency' ordinal='2' />
                    <column datatype='string' name='Status' ordinal='3' />
                    <column datatype='string' name='Reporter.Type' ordinal='4' />
                    <column datatype='integer' name='UACE.CD' ordinal='5' />
                    <column datatype='string' name='UZA.Name' ordinal='6' />
                    <column datatype='string' name='Mode' ordinal='7' />
                    <column datatype='string' name='TOS' ordinal='8' />
                    <column datatype='string' name='X3.Mode' ordinal='9' />
                    <column datatype='string' name='Common.Agency.Name' ordinal='10' />
                    <column datatype='string' name='month' ordinal='11' />
                    <column datatype='integer' name='year' ordinal='12' />
                    <column datatype='integer' name='Monthly.Vehicle.Revenue.Hours' ordinal='13' />
                    <column datatype='integer' name='month_int' ordinal='14' />
                    <column datatype='integer' name='days_in_month' ordinal='15' />
                    <column datatype='real' name='average.daily.Vehicle.Revenue.Hours' ordinal='16' />
                    <column datatype='integer' name='NTD ID' ordinal='17' />
                    <column datatype='integer' name='Legacy NTD ID' ordinal='18' />
                    <column datatype='string' name='Reporter Type' ordinal='19' />
                    <column datatype='integer' name='UACE CD' ordinal='20' />
                    <column datatype='string' name='UZA Name' ordinal='21' />
                    <column datatype='string' name='3 Mode' ordinal='22' />
                    <column datatype='integer' name='Monthly.Unlinked.Passenger.Trips' ordinal='23' />
                    <column datatype='real' name='Monthly_To_Typical_Weekday' ordinal='24' />
                    <column datatype='real' name='average.daily.Unlinked.Passenger.Trips' ordinal='25' />
                  </columns>
                </relation>
                <relation connection='textscan.08tlf0g1hquvb71auf1lz0s7aysv' name='future-stub.csv' table='[future-stub#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='Mode' ordinal='0' />
                    <column datatype='string' name='month' ordinal='1' />
                    <column datatype='integer' name='month_int' ordinal='2' />
                    <column datatype='integer' name='year' ordinal='3' />
                    <column datatype='string' name='type' ordinal='4' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='NTD-mode-lookup' inline='true' name='federated.0silwm80l9lceo15tfv8s03t3l5k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NTD-mode-lookup' name='textscan.0kbiplr0861xos1d2tqld089sik3'>
            <connection class='textscan' directory='E:/GitHub/travel-model-one/utilities/transit-recovery' filename='NTD-mode-lookup.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0kbiplr0861xos1d2tqld089sik3' name='NTD-mode-lookup.csv' table='[NTD-mode-lookup#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Mode' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0kbiplr0861xos1d2tqld089sik3' name='NTD-mode-lookup.csv' table='[NTD-mode-lookup#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Mode' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NTD-mode-lookup.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Mode]</local-name>
            <parent-name>[NTD-mode-lookup.csv]</parent-name>
            <remote-alias>Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD-mode-lookup.csv_F725A08DAD8E493A9E6F718D6D8EFDE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[NTD-mode-lookup.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NTD-mode-lookup.csv_F725A08DAD8E493A9E6F718D6D8EFDE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='NTD-mode-lookup.csv' datatype='table' name='[__tableau_internal_object_id__].[NTD-mode-lookup.csv_F725A08DAD8E493A9E6F718D6D8EFDE2]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='NTD-mode-lookup.csv' id='NTD-mode-lookup.csv_F725A08DAD8E493A9E6F718D6D8EFDE2'>
            <properties context=''>
              <relation connection='textscan.0kbiplr0861xos1d2tqld089sik3' name='NTD-mode-lookup.csv' table='[NTD-mode-lookup#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Mode' ordinal='0' />
                  <column datatype='string' name='Description' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0y3qo5u07y662o17w9ljm040hec7'>
      <datasources>
        <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
      </datasources>
      <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
        <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;CB&quot;' value='Commuter Bus' />
            <alias key='&quot;CC&quot;' value='Cable Car' />
            <alias key='&quot;CR&quot;' value='Commuter Rail' />
            <alias key='&quot;DR&quot;' value='Demand Response' />
            <alias key='&quot;FB&quot;' value='Ferryboat' />
            <alias key='&quot;HR&quot;' value='Heavy Rail' />
            <alias key='&quot;LR&quot;' value='Light Rail' />
            <alias key='&quot;MB&quot;' value='Bus' />
            <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
            <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
            <alias key='&quot;SR&quot;' value='Streetcar Rail' />
            <alias key='&quot;TB&quot;' value='Trolleybus' />
            <alias key='&quot;YR&quot;' value='Hybrid Rail' />
          </aliases>
        </column>
        <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Mode:nk]' />
          <groupfilter function='member' level='[none:Mode:nk]' member='&quot;DR&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Debug table'>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Today' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2023-11-14#'>
              <calculation class='tableau' formula='#2023-11-14#' />
            </column>
            <column caption='bus max UPT per VRH' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='33.6087382816335'>
              <calculation class='tableau' formula='33.6087382816335' />
            </column>
            <column caption='rail max UPT per VRH' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='63.5359336580623'>
              <calculation class='tableau' formula='63.5359336580623' />
            </column>
            <column caption='bus k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='0.0021279033348324599'>
              <calculation class='tableau' formula='0.0021279033348324599' />
            </column>
            <column caption='bus x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='44117'>
              <calculation class='tableau' formula='44117' />
            </column>
            <column caption='rail k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='0.0014962607980112199'>
              <calculation class='tableau' formula='0.0014962607980112199' />
            </column>
            <column caption='rail x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='45111'>
              <calculation class='tableau' formula='45111' />
            </column>
            <column caption='rail max - high' datatype='real' default-format='p0%' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
            <column caption='bus max - high' datatype='real' default-format='p0%' name='[bus k - high (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
            </column>
            <column caption='bus k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k - low (copy)_605734172523401226]' param-domain-type='any' role='measure' type='quantitative' value='0.0017321400378388901'>
              <calculation class='tableau' formula='0.0017321400378388901' />
            </column>
            <column caption='bus k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k estimate (copy)_605734172509597701]' param-domain-type='any' role='measure' type='quantitative' value='0.00281859033905704'>
              <calculation class='tableau' formula='0.00281859033905704' />
            </column>
            <column caption='bus max - med' datatype='real' default-format='p0%' name='[bus max - high (copy)_1075234433896251394]' param-domain-type='any' role='measure' type='quantitative' value='0.9'>
              <calculation class='tableau' formula='0.9' />
            </column>
            <column caption='bus max - low' datatype='real' default-format='p0%' name='[bus max - med (copy)_1075234433896361987]' param-domain-type='any' role='measure' type='quantitative' value='0.8'>
              <calculation class='tableau' formula='0.8' />
            </column>
            <column caption='bus x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 - low (copy)_605734172523446283]' param-domain-type='any' role='measure' type='quantitative' value='44229'>
              <calculation class='tableau' formula='44229' />
            </column>
            <column caption='bus x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 estimate (copy)_605734172522225673]' param-domain-type='any' role='measure' type='quantitative' value='44025'>
              <calculation class='tableau' formula='44025' />
            </column>
            <column caption='rail k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k - low (copy)_605734172527276047]' param-domain-type='any' role='measure' type='quantitative' value='0.00142497783914183'>
              <calculation class='tableau' formula='0.00142497783914183' />
            </column>
            <column caption='rail k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k estimate (copy)_605734172525633548]' param-domain-type='any' role='measure' type='quantitative' value='0.00159570178958894'>
              <calculation class='tableau' formula='0.00159570178958894' />
            </column>
            <column caption='rail max - med' datatype='real' default-format='p0%' name='[rail max - high (copy)_1075234433901314052]' param-domain-type='any' role='measure' type='quantitative' value='0.90'>
              <calculation class='tableau' formula='0.90' />
            </column>
            <column caption='rail max - low' datatype='real' default-format='p0%' name='[rail max - med (copy)_1075234433901854725]' param-domain-type='any' role='measure' type='quantitative' value='0.80'>
              <calculation class='tableau' formula='0.80' />
            </column>
            <column caption='rail x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 - low (copy)_605734172527190030]' param-domain-type='any' role='measure' type='quantitative' value='45246'>
              <calculation class='tableau' formula='45246' />
            </column>
            <column caption='rail x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 estimate (copy)_605734172526239757]' param-domain-type='any' role='measure' type='quantitative' value='44962'>
              <calculation class='tableau' formula='44962' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Percent recovered' datatype='real' default-format='p0%' name='[Calculation_1268326267935092736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF STARTSWITH([Calculation_605734172513480712], &quot;Buses&quot;) then&#13;&#10;  [Calculation_605734172506800129]/[Parameters].[Parameter 2]&#13;&#10;ELSEIF STARTSWITH([Calculation_605734172513480712], &quot;Rail and Ferry&quot;) THEN&#13;&#10;  [Calculation_605734172506800129]/[Parameters].[Parameter 3]&#13;&#10;end' />
            </column>
            <column caption='Estimated UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_605734172506800129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; MAKEDATE(2020,04,01) then&#13;&#10;  NULL&#13;&#10;// middle = estimated&#13;&#10;ELSEIF ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 2]*[Parameters].[bus max - high (copy)_1075234433896251394]/(1+&#13;&#10;    EXP([Parameters].[Parameter 4]*([Parameters].[Parameter 5]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 2]*[Parameters].[bus max - med (copy)_1075234433896361987]/(1+&#13;&#10;    EXP([Parameters].[bus k estimate (copy)_605734172509597701]*([Parameters].[bus x0 estimate (copy)_605734172522225673]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 2]*[Parameters].[bus k - high (copy)]/(1+&#13;&#10;    EXP([Parameters].[bus k - low (copy)_605734172523401226]*([Parameters].[bus x0 - low (copy)_605734172523446283]-[Calculation_605734172507439106])))&#13;&#10;// middle = estimated&#13;&#10;ELSEIF  ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[Parameter 3]*[Parameters].[rail max - high (copy)_1075234433901314052]/(1+&#13;&#10;    EXP([Parameters].[Parameter 6]*([Parameters].[Parameter 7]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF  ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[Parameter 3]*[Parameters].[rail max - med (copy)_1075234433901854725]/(1+&#13;&#10;    EXP([Parameters].[rail k estimate (copy)_605734172525633548]*([Parameters].[rail x0 estimate (copy)_605734172526239757]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF  ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[Parameter 3]*[Parameters].[Parameter 8]/(1+&#13;&#10;    EXP([Parameters].[rail k - low (copy)_605734172527276047]*([Parameters].[rail x0 - low (copy)_605734172527190030]-[Calculation_605734172507439106])))&#13;&#10;&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
            </column>
            <column aggregation='Sum' caption='Date Num' datatype='integer' name='[Calculation_605734172507439106]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='int([Calculation_776026533391114247])' />
            </column>
            <column caption='Mode &amp; Type' datatype='string' name='[Calculation_605734172513480712]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Mode (group)] + &quot; - &quot; + IFNULL([type],&quot;historic&quot;)' />
            </column>
            <column caption='Historic or Estimated Monthly VRH' datatype='integer' name='[Calculation_605734172528365584]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; [Parameters].[Parameter 1] then&#13;&#10;  [Monthly.Vehicle.Revenue.Hours]&#13;&#10;ELSEIF (([Mode (group)]==&quot;Buses&quot;) AND ([type]==&quot;middle&quot;)) then&#13;&#10; // October 2019 sum&#13;&#10; 723117&#13;&#10;ELSEIF ([Mode (group)]==&quot;Rail and Ferry&quot;) AND ([type]==&quot;middle&quot;) then&#13;&#10; // October 2019 sum&#13;&#10; 320883&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
            </column>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Buses&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;MB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;TB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Demand Response&quot;'>
                  <value>&quot;DR&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
                  <value>&quot;CC&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;FB&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;LR&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;SR&quot;</value>
                  <value>&quot;YR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_605734172507439106]' derivation='None' name='[none:Calculation_605734172507439106:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1268326267935092736]' derivation='Sum' name='[sum:Calculation_1268326267935092736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_605734172506800129]' derivation='Sum' name='[sum:Calculation_605734172506800129:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_605734172528365584]' derivation='Sum' name='[sum:Calculation_605734172528365584:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monthly.Unlinked.Passenger.Trips]' derivation='Sum' name='[sum:Monthly.Unlinked.Passenger.Trips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monthly.Vehicle.Revenue.Hours]' derivation='Sum' name='[sum:Monthly.Vehicle.Revenue.Hours:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='93' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='68' />
            <format attr='width' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:ok]' value='104' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='on' />
            <format attr='vertical-align' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:ok] / [federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172507439106:ok])</rows>
        <cols>([federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)] / [federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{84A18936-031C-4E16-B433-4617C4B019A0}' />
    </worksheet>
    <worksheet name='UPT per VRH'>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Today' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2023-11-14#'>
              <calculation class='tableau' formula='#2023-11-14#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column aggregation='Sum' caption='Date Num' datatype='integer' name='[Calculation_605734172507439106]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='int([Calculation_776026533391114247])' />
            </column>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Buses&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;MB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;TB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Demand Response&quot;'>
                  <value>&quot;DR&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
                  <value>&quot;CC&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;FB&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;LR&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;SR&quot;</value>
                  <value>&quot;YR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_605734172507439106]' derivation='None' name='[none:Calculation_605734172507439106:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly.Unlinked.Passenger.Trips]' derivation='Sum' name='[sum:Monthly.Unlinked.Passenger.Trips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monthly.Vehicle.Revenue.Hours]' derivation='Sum' name='[sum:Monthly.Vehicle.Revenue.Hours:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Recent Past]' />
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[Recent Past]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='93' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='72' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='on' />
            <format attr='vertical-align' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:ok] / [federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172507439106:ok])</rows>
        <cols>([federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)] / [federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{66D629F7-213A-44BB-8A00-4CD293166767}' />
    </worksheet>
    <worksheet name='UPT per VRH - Buses'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;</run>
            <run fontsize='12'>Potential assumptions</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>High: </run>
            <run><![CDATA[k=<[Parameters].[bus k - low (copy)_605734172523401226]>; x0=<[Parameters].[bus x0 - low (copy)_605734172523446283]>; max=<[Parameters].[bus k - high (copy)]>
]]></run>
            <run bold='true'>Med: </run>
            <run><![CDATA[k=<[Parameters].[Parameter 4]>; x0=<[Parameters].[Parameter 5]>; max=<[Parameters].[bus max - high (copy)_1075234433896251394]>
]]></run>
            <run bold='true'>Low: </run>
            <run><![CDATA[k=<[Parameters].[bus k estimate (copy)_605734172509597701]>; x0=<[Parameters].[bus x0 estimate (copy)_605734172522225673]>; max=<[Parameters].[bus max - med (copy)_1075234433896361987]>

]]></run>
            <run bold='true'>Parameters from Solver: </run>
            <run auto-url='true' bold='true' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/s/njwe9dfol8rai8zqwpnoec8ifi62ers1&amp;quot;'>https://mtcdrive.box.com/s/njwe9dfol8rai8zqwpnoec8ifi62ers1</run>
            <run>Æ&#10;</run>
            <run bold='true'>Max numbers asserted; best fit=high</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='bus max UPT per VRH' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='33.6087382816335'>
              <calculation class='tableau' formula='33.6087382816335' />
            </column>
            <column caption='rail max UPT per VRH' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='63.5359336580623'>
              <calculation class='tableau' formula='63.5359336580623' />
            </column>
            <column caption='bus k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='0.0021279033348324599'>
              <calculation class='tableau' formula='0.0021279033348324599' />
            </column>
            <column caption='bus x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='44117'>
              <calculation class='tableau' formula='44117' />
            </column>
            <column caption='rail k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='0.0014962607980112199'>
              <calculation class='tableau' formula='0.0014962607980112199' />
            </column>
            <column caption='rail x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='45111'>
              <calculation class='tableau' formula='45111' />
            </column>
            <column caption='rail max - high' datatype='real' default-format='p0%' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
            <column caption='bus max - high' datatype='real' default-format='p0%' name='[bus k - high (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
            </column>
            <column caption='bus k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k - low (copy)_605734172523401226]' param-domain-type='any' role='measure' type='quantitative' value='0.0017321400378388901'>
              <calculation class='tableau' formula='0.0017321400378388901' />
            </column>
            <column caption='bus k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k estimate (copy)_605734172509597701]' param-domain-type='any' role='measure' type='quantitative' value='0.00281859033905704'>
              <calculation class='tableau' formula='0.00281859033905704' />
            </column>
            <column caption='bus max - med' datatype='real' default-format='p0%' name='[bus max - high (copy)_1075234433896251394]' param-domain-type='any' role='measure' type='quantitative' value='0.9'>
              <calculation class='tableau' formula='0.9' />
            </column>
            <column caption='bus max - low' datatype='real' default-format='p0%' name='[bus max - med (copy)_1075234433896361987]' param-domain-type='any' role='measure' type='quantitative' value='0.8'>
              <calculation class='tableau' formula='0.8' />
            </column>
            <column caption='bus x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 - low (copy)_605734172523446283]' param-domain-type='any' role='measure' type='quantitative' value='44229'>
              <calculation class='tableau' formula='44229' />
            </column>
            <column caption='bus x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 estimate (copy)_605734172522225673]' param-domain-type='any' role='measure' type='quantitative' value='44025'>
              <calculation class='tableau' formula='44025' />
            </column>
            <column caption='rail k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k - low (copy)_605734172527276047]' param-domain-type='any' role='measure' type='quantitative' value='0.00142497783914183'>
              <calculation class='tableau' formula='0.00142497783914183' />
            </column>
            <column caption='rail k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k estimate (copy)_605734172525633548]' param-domain-type='any' role='measure' type='quantitative' value='0.00159570178958894'>
              <calculation class='tableau' formula='0.00159570178958894' />
            </column>
            <column caption='rail max - med' datatype='real' default-format='p0%' name='[rail max - high (copy)_1075234433901314052]' param-domain-type='any' role='measure' type='quantitative' value='0.90'>
              <calculation class='tableau' formula='0.90' />
            </column>
            <column caption='rail max - low' datatype='real' default-format='p0%' name='[rail max - med (copy)_1075234433901854725]' param-domain-type='any' role='measure' type='quantitative' value='0.80'>
              <calculation class='tableau' formula='0.80' />
            </column>
            <column caption='rail x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 - low (copy)_605734172527190030]' param-domain-type='any' role='measure' type='quantitative' value='45246'>
              <calculation class='tableau' formula='45246' />
            </column>
            <column caption='rail x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 estimate (copy)_605734172526239757]' param-domain-type='any' role='measure' type='quantitative' value='44962'>
              <calculation class='tableau' formula='44962' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Percent recovered' datatype='real' default-format='p0%' name='[Calculation_1268326267935092736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF STARTSWITH([Calculation_605734172513480712], &quot;Buses&quot;) then&#13;&#10;  [Calculation_605734172506800129]/[Parameters].[Parameter 2]&#13;&#10;ELSEIF STARTSWITH([Calculation_605734172513480712], &quot;Rail and Ferry&quot;) THEN&#13;&#10;  [Calculation_605734172506800129]/[Parameters].[Parameter 3]&#13;&#10;end' />
            </column>
            <column caption='Estimated UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_605734172506800129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; MAKEDATE(2020,04,01) then&#13;&#10;  NULL&#13;&#10;// middle = estimated&#13;&#10;ELSEIF ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 2]*[Parameters].[bus max - high (copy)_1075234433896251394]/(1+&#13;&#10;    EXP([Parameters].[Parameter 4]*([Parameters].[Parameter 5]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 2]*[Parameters].[bus max - med (copy)_1075234433896361987]/(1+&#13;&#10;    EXP([Parameters].[bus k estimate (copy)_605734172509597701]*([Parameters].[bus x0 estimate (copy)_605734172522225673]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 2]*[Parameters].[bus k - high (copy)]/(1+&#13;&#10;    EXP([Parameters].[bus k - low (copy)_605734172523401226]*([Parameters].[bus x0 - low (copy)_605734172523446283]-[Calculation_605734172507439106])))&#13;&#10;// middle = estimated&#13;&#10;ELSEIF  ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[Parameter 3]*[Parameters].[rail max - high (copy)_1075234433901314052]/(1+&#13;&#10;    EXP([Parameters].[Parameter 6]*([Parameters].[Parameter 7]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF  ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[Parameter 3]*[Parameters].[rail max - med (copy)_1075234433901854725]/(1+&#13;&#10;    EXP([Parameters].[rail k estimate (copy)_605734172525633548]*([Parameters].[rail x0 estimate (copy)_605734172526239757]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF  ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[Parameter 3]*[Parameters].[Parameter 8]/(1+&#13;&#10;    EXP([Parameters].[rail k - low (copy)_605734172527276047]*([Parameters].[rail x0 - low (copy)_605734172527190030]-[Calculation_605734172507439106])))&#13;&#10;&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
            </column>
            <column aggregation='Sum' caption='Date Num' datatype='integer' name='[Calculation_605734172507439106]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='int([Calculation_776026533391114247])' />
            </column>
            <column caption='Mode &amp; Type' datatype='string' name='[Calculation_605734172513480712]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Mode (group)] + &quot; - &quot; + IFNULL([type],&quot;historic&quot;)' />
            </column>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Buses&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;MB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;TB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Demand Response&quot;'>
                  <value>&quot;DR&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
                  <value>&quot;CC&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;FB&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;LR&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;SR&quot;</value>
                  <value>&quot;YR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_605734172506800129]' derivation='Attribute' name='[attr:Calculation_605734172506800129:qk]' pivot='key' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_605734172513480712]' derivation='None' name='[none:Calculation_605734172513480712:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_776026533391114247]' derivation='None' name='[none:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1268326267935092736]' derivation='Sum' name='[sum:Calculation_1268326267935092736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]'>
            <groupfilter function='member' level='[Mode (group)]' member='&quot;Buses&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' included-values='in-range'>
            <min>#2018-01-29#</min>
            <max>#2036-02-28#</max>
          </filter>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' />
              <path column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' />
              <path column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' />
              <lod column='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Calculation_1268326267935092736:qk]' />
              <path column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk] + [federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk])</rows>
        <cols>[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]</cols>
      </table>
      <simple-id uuid='{4AAB92F9-2295-4A6E-802C-6CB0BBB4A98D}' />
    </worksheet>
    <worksheet name='UPT per VRH - Rail &amp; Ferry'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;</run>
            <run fontsize='12'>Potential assumptions</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>High:  </run>
            <run><![CDATA[k=<[Parameters].[rail k - low (copy)_605734172527276047]>;  x0=<[Parameters].[rail x0 - low (copy)_605734172527190030]>;  max=<[Parameters].[Parameter 8]>
]]></run>
            <run bold='true'>Med:  </run>
            <run><![CDATA[k=<[Parameters].[Parameter 6]>; x0=<[Parameters].[Parameter 7]>; max=<[Parameters].[rail max - high (copy)_1075234433901314052]>
]]></run>
            <run bold='true'>Low: k</run>
            <run><![CDATA[=<[Parameters].[rail k estimate (copy)_605734172525633548]>; x0=<[Parameters].[rail x0 estimate (copy)_605734172526239757]>; max=<[Parameters].[rail max - med (copy)_1075234433901854725]>

]]></run>
            <run bold='true'>Parameters from Solver: </run>
            <run auto-url='true' bold='true' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/s/njwe9dfol8rai8zqwpnoec8ifi62ers1&amp;quot;'>https://mtcdrive.box.com/s/njwe9dfol8rai8zqwpnoec8ifi62ers1</run>
            <run>Æ&#10;</run>
            <run bold='true'>Max numbers asserted; best fit=high</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='bus max UPT per VRH' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='33.6087382816335'>
              <calculation class='tableau' formula='33.6087382816335' />
            </column>
            <column caption='rail max UPT per VRH' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='63.5359336580623'>
              <calculation class='tableau' formula='63.5359336580623' />
            </column>
            <column caption='bus k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='0.0021279033348324599'>
              <calculation class='tableau' formula='0.0021279033348324599' />
            </column>
            <column caption='bus x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='44117'>
              <calculation class='tableau' formula='44117' />
            </column>
            <column caption='rail k - med' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='0.0014962607980112199'>
              <calculation class='tableau' formula='0.0014962607980112199' />
            </column>
            <column caption='rail x0 - med' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='45111'>
              <calculation class='tableau' formula='45111' />
            </column>
            <column caption='rail max - high' datatype='real' default-format='p0%' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
            <column caption='bus max - high' datatype='real' default-format='p0%' name='[bus k - high (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
            </column>
            <column caption='bus k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k - low (copy)_605734172523401226]' param-domain-type='any' role='measure' type='quantitative' value='0.0017321400378388901'>
              <calculation class='tableau' formula='0.0017321400378388901' />
            </column>
            <column caption='bus k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[bus k estimate (copy)_605734172509597701]' param-domain-type='any' role='measure' type='quantitative' value='0.00281859033905704'>
              <calculation class='tableau' formula='0.00281859033905704' />
            </column>
            <column caption='bus max - med' datatype='real' default-format='p0%' name='[bus max - high (copy)_1075234433896251394]' param-domain-type='any' role='measure' type='quantitative' value='0.9'>
              <calculation class='tableau' formula='0.9' />
            </column>
            <column caption='bus max - low' datatype='real' default-format='p0%' name='[bus max - med (copy)_1075234433896361987]' param-domain-type='any' role='measure' type='quantitative' value='0.8'>
              <calculation class='tableau' formula='0.8' />
            </column>
            <column caption='bus x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 - low (copy)_605734172523446283]' param-domain-type='any' role='measure' type='quantitative' value='44229'>
              <calculation class='tableau' formula='44229' />
            </column>
            <column caption='bus x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[bus x0 estimate (copy)_605734172522225673]' param-domain-type='any' role='measure' type='quantitative' value='44025'>
              <calculation class='tableau' formula='44025' />
            </column>
            <column caption='rail k - high' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k - low (copy)_605734172527276047]' param-domain-type='any' role='measure' type='quantitative' value='0.00142497783914183'>
              <calculation class='tableau' formula='0.00142497783914183' />
            </column>
            <column caption='rail k - low' datatype='real' default-format='n#,##0.0000000;-#,##0.0000000' name='[rail k estimate (copy)_605734172525633548]' param-domain-type='any' role='measure' type='quantitative' value='0.00159570178958894'>
              <calculation class='tableau' formula='0.00159570178958894' />
            </column>
            <column caption='rail max - med' datatype='real' default-format='p0%' name='[rail max - high (copy)_1075234433901314052]' param-domain-type='any' role='measure' type='quantitative' value='0.90'>
              <calculation class='tableau' formula='0.90' />
            </column>
            <column caption='rail max - low' datatype='real' default-format='p0%' name='[rail max - med (copy)_1075234433901854725]' param-domain-type='any' role='measure' type='quantitative' value='0.80'>
              <calculation class='tableau' formula='0.80' />
            </column>
            <column caption='rail x0 - high' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 - low (copy)_605734172527190030]' param-domain-type='any' role='measure' type='quantitative' value='45246'>
              <calculation class='tableau' formula='45246' />
            </column>
            <column caption='rail x0 - low' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[rail x0 estimate (copy)_605734172526239757]' param-domain-type='any' role='measure' type='quantitative' value='44962'>
              <calculation class='tableau' formula='44962' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Percent recovered' datatype='real' default-format='p0%' name='[Calculation_1268326267935092736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF STARTSWITH([Calculation_605734172513480712], &quot;Buses&quot;) then&#13;&#10;  [Calculation_605734172506800129]/[Parameters].[Parameter 2]&#13;&#10;ELSEIF STARTSWITH([Calculation_605734172513480712], &quot;Rail and Ferry&quot;) THEN&#13;&#10;  [Calculation_605734172506800129]/[Parameters].[Parameter 3]&#13;&#10;end' />
            </column>
            <column caption='Estimated UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_605734172506800129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; MAKEDATE(2020,04,01) then&#13;&#10;  NULL&#13;&#10;// middle = estimated&#13;&#10;ELSEIF ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 2]*[Parameters].[bus max - high (copy)_1075234433896251394]/(1+&#13;&#10;    EXP([Parameters].[Parameter 4]*([Parameters].[Parameter 5]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 2]*[Parameters].[bus max - med (copy)_1075234433896361987]/(1+&#13;&#10;    EXP([Parameters].[bus k estimate (copy)_605734172509597701]*([Parameters].[bus x0 estimate (copy)_605734172522225673]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Buses&quot;) then&#13;&#10; [Parameters].[Parameter 2]*[Parameters].[bus k - high (copy)]/(1+&#13;&#10;    EXP([Parameters].[bus k - low (copy)_605734172523401226]*([Parameters].[bus x0 - low (copy)_605734172523446283]-[Calculation_605734172507439106])))&#13;&#10;// middle = estimated&#13;&#10;ELSEIF  ([type]==&quot;middle&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[Parameter 3]*[Parameters].[rail max - high (copy)_1075234433901314052]/(1+&#13;&#10;    EXP([Parameters].[Parameter 6]*([Parameters].[Parameter 7]-[Calculation_605734172507439106])))&#13;&#10;// low&#13;&#10;ELSEIF  ([type]==&quot;low&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[Parameter 3]*[Parameters].[rail max - med (copy)_1075234433901854725]/(1+&#13;&#10;    EXP([Parameters].[rail k estimate (copy)_605734172525633548]*([Parameters].[rail x0 estimate (copy)_605734172526239757]-[Calculation_605734172507439106])))&#13;&#10;// high&#13;&#10;ELSEIF  ([type]==&quot;high&quot;) and ([Mode (group)]==&quot;Rail and Ferry&quot;) then&#13;&#10; [Parameters].[Parameter 3]*[Parameters].[Parameter 8]/(1+&#13;&#10;    EXP([Parameters].[rail k - low (copy)_605734172527276047]*([Parameters].[rail x0 - low (copy)_605734172527190030]-[Calculation_605734172507439106])))&#13;&#10;&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
            </column>
            <column aggregation='Sum' caption='Date Num' datatype='integer' name='[Calculation_605734172507439106]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='int([Calculation_776026533391114247])' />
            </column>
            <column caption='Mode &amp; Type' datatype='string' name='[Calculation_605734172513480712]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Mode (group)] + &quot; - &quot; + IFNULL([type],&quot;historic&quot;)' />
            </column>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Buses&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;MB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;TB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Demand Response&quot;'>
                  <value>&quot;DR&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
                  <value>&quot;CC&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;FB&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;LR&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;SR&quot;</value>
                  <value>&quot;YR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_605734172506800129]' derivation='Attribute' name='[attr:Calculation_605734172506800129:qk]' pivot='key' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_605734172513480712]' derivation='None' name='[none:Calculation_605734172513480712:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_776026533391114247]' derivation='None' name='[none:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1268326267935092736]' derivation='Sum' name='[sum:Calculation_1268326267935092736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]'>
            <groupfilter function='member' level='[Mode (group)]' member='&quot;Rail and Ferry&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' included-values='in-range'>
            <min>#2018-01-29#</min>
            <max>#2044-10-11#</max>
          </filter>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' />
              <path column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' />
              <path column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' />
              <lod column='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Calculation_1268326267935092736:qk]' />
              <path column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk] + [federated.0y3qo5u07y662o17w9ljm040hec7].[attr:Calculation_605734172506800129:qk])</rows>
        <cols>[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]</cols>
      </table>
      <simple-id uuid='{5941335F-5C10-4251-A261-81EE8D69AAF5}' />
    </worksheet>
    <worksheet name='VRH'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;</run>
            <run fontsize='12'>Potential Assumption</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Today' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2023-11-14#'>
              <calculation class='tableau' formula='#2023-11-14#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Historic or Estimated Monthly VRH' datatype='integer' name='[Calculation_605734172528365584]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_776026533391114247] &lt; [Parameters].[Parameter 1] then&#13;&#10;  [Monthly.Vehicle.Revenue.Hours]&#13;&#10;ELSEIF (([Mode (group)]==&quot;Buses&quot;) AND ([type]==&quot;middle&quot;)) then&#13;&#10; // October 2019 sum&#13;&#10; 723117&#13;&#10;ELSEIF ([Mode (group)]==&quot;Rail and Ferry&quot;) AND ([type]==&quot;middle&quot;) then&#13;&#10; // October 2019 sum&#13;&#10; 320883&#13;&#10;ELSE&#13;&#10; NULL&#13;&#10;end' />
            </column>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Buses&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;MB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;TB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Demand Response&quot;'>
                  <value>&quot;DR&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
                  <value>&quot;CC&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;FB&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;LR&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;SR&quot;</value>
                  <value>&quot;YR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_605734172528365584]' derivation='Sum' name='[sum:Calculation_605734172528365584:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Calculation_605734172528365584:qk]</rows>
        <cols>[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]</cols>
      </table>
      <simple-id uuid='{8FC9FD55-5488-4B7B-8B2A-796573AFAC6A}' />
    </worksheet>
    <worksheet name='VRH+UPT by Agency'>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
          </datasources>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Common.Agency.Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_776026533391114247]' derivation='None' name='[none:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Common.Agency.Name]' derivation='None' name='[none:Common.Agency.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly.Unlinked.Passenger.Trips]' derivation='Sum' name='[sum:Monthly.Unlinked.Passenger.Trips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monthly.Vehicle.Revenue.Hours]' derivation='Sum' name='[sum:Monthly.Vehicle.Revenue.Hours:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' filter-group='3' included-values='in-range'>
            <min>#2002-01-01#</min>
            <max>#2023-11-03#</max>
          </filter>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Common.Agency.Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Common.Agency.Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Common.Agency.Name:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Common.Agency.Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk] + ([federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk] + [federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]))</rows>
        <cols>[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]</cols>
      </table>
      <simple-id uuid='{EA197B52-9CB3-4B3A-9583-04F613EA290A}' />
    </worksheet>
    <worksheet name='VRH+UPT by Group'>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
          </datasources>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Buses&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;MB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;TB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Demand Response&quot;'>
                  <value>&quot;DR&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rail and Ferry&quot;'>
                  <value>&quot;CC&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;FB&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;LR&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;SR&quot;</value>
                  <value>&quot;YR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_776026533391114247]' derivation='None' name='[none:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly.Unlinked.Passenger.Trips]' derivation='Sum' name='[sum:Monthly.Unlinked.Passenger.Trips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monthly.Vehicle.Revenue.Hours]' derivation='Sum' name='[sum:Monthly.Vehicle.Revenue.Hours:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' filter-group='3' included-values='in-range'>
            <min>#2002-01-01#</min>
            <max>#2023-11-03#</max>
          </filter>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' />
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk] + ([federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk] + [federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]))</rows>
        <cols>[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]</cols>
      </table>
      <simple-id uuid='{45BE8EFA-2DD3-49B4-97A3-C9E83C752F8F}' />
    </worksheet>
    <worksheet name='VRH+UPT by Mode'>
      <table>
        <view>
          <datasources>
            <datasource caption='TransitHesitance' name='federated.0y3qo5u07y662o17w9ljm040hec7' />
          </datasources>
          <datasource-dependencies datasource='federated.0y3qo5u07y662o17w9ljm040hec7'>
            <column caption='Date' datatype='date' datatype-customized='true' default-format='*mmmm yyyy' name='[Calculation_776026533391114247]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy-MMM&quot;, str([year])+&quot;-&quot;+[month] ))' />
            </column>
            <column caption='UPT per VRH' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_776026533391941640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Monthly.Unlinked.Passenger.Trips])/sum([Monthly.Vehicle.Revenue.Hours])' />
            </column>
            <column datatype='string' name='[Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;CB&quot;' value='Commuter Bus' />
                <alias key='&quot;CC&quot;' value='Cable Car' />
                <alias key='&quot;CR&quot;' value='Commuter Rail' />
                <alias key='&quot;DR&quot;' value='Demand Response' />
                <alias key='&quot;FB&quot;' value='Ferryboat' />
                <alias key='&quot;HR&quot;' value='Heavy Rail' />
                <alias key='&quot;LR&quot;' value='Light Rail' />
                <alias key='&quot;MB&quot;' value='Bus' />
                <alias key='&quot;MG&quot;' value='Monorail and Automated Guideway modes' />
                <alias key='&quot;RB&quot;' value='Bus Rapid Transit' />
                <alias key='&quot;SR&quot;' value='Streetcar Rail' />
                <alias key='&quot;TB&quot;' value='Trolleybus' />
                <alias key='&quot;YR&quot;' value='Hybrid Rail' />
              </aliases>
            </column>
            <column datatype='integer' name='[Monthly.Unlinked.Passenger.Trips]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Monthly.Vehicle.Revenue.Hours]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_776026533391114247]' derivation='None' name='[none:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mode]' derivation='None' name='[none:Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly.Unlinked.Passenger.Trips]' derivation='Sum' name='[sum:Monthly.Unlinked.Passenger.Trips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monthly.Vehicle.Revenue.Hours]' derivation='Sum' name='[sum:Monthly.Vehicle.Revenue.Hours:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391114247]' derivation='Month-Trunc' name='[tmn:Calculation_776026533391114247:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_776026533391941640]' derivation='User' name='[usr:Calculation_776026533391941640:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' filter-group='3' included-values='in-range'>
            <min>#2002-01-01#</min>
            <max>#2023-11-03#</max>
          </filter>
          <slices>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</column>
            <column>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Vehicle.Revenue.Hours:qk] + ([federated.0y3qo5u07y662o17w9ljm040hec7].[sum:Monthly.Unlinked.Passenger.Trips:qk] + [federated.0y3qo5u07y662o17w9ljm040hec7].[usr:Calculation_776026533391941640:qk]))</rows>
        <cols>[federated.0y3qo5u07y662o17w9ljm040hec7].[tmn:Calculation_776026533391114247:qk]</cols>
      </table>
      <simple-id uuid='{E3AEB1FC-6AF6-435A-B8B5-A31F832B5518}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='VRH+UPT by Agency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Common.Agency.Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Common.Agency.Name:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13C974C5-524D-4B77-9B62-53985763A070}' />
    </window>
    <window class='worksheet' name='VRH+UPT by Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8BC5205-10BB-46D4-8B74-D79E431B0A47}' />
    </window>
    <window class='worksheet' name='VRH+UPT by Group'>
      <cards>
        <edge name='left'>
          <strip size='215'>
            <card size='26' type='filters' />
            <card size='350' type='marks' />
            <card pane-specification-id='1' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' size='41' type='color' />
            <card pane-specification-id='3' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]&#10;[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]' size='81' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7AB9142-9B1D-4544-8186-D9F1CA719D42}' />
    </window>
    <window class='worksheet' name='UPT per VRH - Buses'>
      <cards>
        <edge name='left'>
          <strip size='215'>
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='156'>
            <card type='caption' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Recent Past]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E067D9F-7895-4F46-9ECE-0B5E1DECFA4B}' />
    </window>
    <window class='worksheet' maximized='true' name='UPT per VRH - Rail &amp; Ferry'>
      <cards>
        <edge name='left'>
          <strip size='215'>
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='153'>
            <card type='caption' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Recent Past]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:type:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8D4B879-1769-4F53-87BD-32B812975288}' />
    </window>
    <window class='worksheet' name='VRH'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5DFD4842-0886-445C-B7A4-92F0BC79C78A}' />
    </window>
    <window class='worksheet' name='Debug table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0silwm80l9lceo15tfv8s03t3l5k].[none:Description:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[:Measure Names]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Recent Past]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172507439106:ok]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172513480712:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_776026533391114247:qk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Mode:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:X3.Mode:nk]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60EDCBC2-4985-4BDD-B530-73E9E0618332}' />
    </window>
    <window class='worksheet' name='UPT per VRH'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Mode (group)]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[Recent Past]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[none:Calculation_605734172507439106:ok]</field>
            <field>[federated.0y3qo5u07y662o17w9ljm040hec7].[yr:Calculation_776026533391114247:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62BC1A37-5B40-45C0-BCB3-439D3D22A4A2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Debug table' width='192'>
      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
      aO2jWkhS7+iwmF7P/amWilhcPg72ojgtOsJ7aUw6CUknUm+0iEfDCAYz+VScTLmFTlTRiV3q
      rS574SA6ixOjXnrN2Tp+NJMhvlgOIYh6XA4rAOl0BqvVRCFfwWw+jDKikE4XsFqfpl63iETS
      OExdduJZzEKFeLbE44UV4tkcxeQmDx5HCYyMYNR9dd8/yQK9JCLba/g9XsRijuh+CqEzTrFc
      p5hNky9VkbZXiOXqNDoiOoMOqV0gWpQZckosLy5TkZs0MNGq5rl4cfD1B9Jts/RoCd/YDKvL
      j6l1JHTIdFUVlCahvSz+agu9xYpeKBOr5pkadLC9ESfVaFPpGrkwN3l8E3NkfOWBf/6bv6N/
      +m32d4PMX3ibWr7GzuYi1YaCzmhmamKI659fYfLC++T395mdneDWzTu8f/ltsvkqRluAUaz0
      nHoV0OsN6PR6Zs+cxewEu+nZxX/iAr0MdAbOnX+bt+ZPASqOPhdmixVRVRD1JvRCF0ufF5vF
      jMvpwOtx43Q4MIgKG8FdnP0DWA1GXE4HY2NjCHKNQu31DgN0RhvvffABTgN4fP1Y7X30Dw5Q
      q7UZGRnGZTPjcrvwedz0ORw4DALLm1FcgUGcJj0up518oXi883MkCBhNZvQ6HUMjo2QLFUYG
      fOh0Eqqq4g2McmpigpnTE1TLBcZOnULSWfC5HQiojEzOYpB06ExmdKKAqDdSTu+zth7FaDUw
      PD7FO+fPfL31kyD4uwuCM/EIB0WZ+blTh+vVnAC1q9BstZF0euh2ECQ9Il26CIiCyDMfi6oi
      dzrodHq6iowg6VBkGZ1eT0eWkfR6dJJER26jqAIGvYSqCoiigKp26XZBkp69558sgJMs0BuN
      kxjgmKEqMmvLjyg2BN56+yJ2s45KpYLdbv9O7XaaTWqdDlK7gmoNYDe+/rVajQaS0YjSatFu
      1Uhmywz0e0glUogGC2Njw0hfe79QqdcbWCxmarU6pVyarsHOoMeKLJjptOrPBa/HiZ5tE7Va
      g2Iujfottk+yQC+TBXoFCKKEw2oGgwNjt0ZkP4XS7dCultjeCqIzGthY28DkcGM2Ht/9R65X
      2dwJkk8foLe52FlfRRH11BpNqpUyzVqJvYMMxfQ+hSa4nbavvVYytotgdZJPxKk1atgcNuKJ
      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
    </thumbnail>
    <thumbnail height='192' name='UPT per VRH' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UPT per VRH - Buses' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eZQc53mf+9TW+949+2AW7CAAEgQXkDQlkZS4aKHl6Eo3Pook24lkJ7nO
      ieM4sWzHceI4J/fGSWwdO5ajxHbuvZYtW1bkyJYZUxQpkiYpUhRBggCxzmD2tfelqrrW/NEz
      A4IYET3ALD3T9ZzDg2FVddVb3d/vW9/3/QTXdV08PNoUcasN8PDYSuTlPyqVCuvRGGiaRjAY
      vOn7eHhsBisCiEaj63bTWCy2bvfy8NhIvC6QR1vjCcCjrfEE4NHWeALwaGs8AXi0NZ4APNqa
      lhZAtljld/7sua02w2MHI1//kgb5xVnGJhdJpUK4YoihgV5Gzp3BkgJgqMihBHuHd62rcTOL
      JZ5/Y4R/8H+8B0EQ1vXeHh6wBgFEwmFEMUu5XMEVDVy3B18oimIZCIkMrmXgOA6O42BZ1roY
      VyjXqNR0TNNCFD0BeKw/TQugXC4TCAbpSEXIleuoqooiOFjBGOhllEgaURQRRRFZbvq270qh
      qlGsaCAI63ZPD4+303SpynT3k+lu/J3uaPwbCYeXznaus1kNssUapZqGZTv4lA15hEeb09KD
      4Hy5RjwcpFBRt9oUjx1KawugpLJvVwe5Ym2rTfHYobS2AMo19g10ki1Vt9oUjx1KywrAcV3K
      qs7uvgy5ktcCeGwMLSsA07SRRZGORISs1wXy2CBaVgCGZaEoEul4mHzZE4DHxtCyAtDrJkG/
      j2Qs5M0CeWwYLSuA+XyFzmSEVDREvuQJwGNjaFoAhq5SKldxXRdN0wCoazW0uoFWq1A318f9
      YZnZbImeTJxIyI9WN7Bs+6rzpmX/gE96eDRP0yvBdV3j0sgku4d7uDS+wF23H2ViYgJnSUOi
      7GPv7iFc112X7BIz2RI96UZwfcCnoOkmkVDjWYZl89l/+2V+++f+T2LhwE0/y6N9aVoAgiji
      VyTGJ2eoVlUcx0VSfIi2haAEcG1rpfA7jnPThs0sljg01I3jOAT9ClVNJxRo+EMs5iucG5vn
      z54+yY9/+MRNP8ujfWlaAI5tE0t3MtDXhaZp6LpKRzKOJYdw9TJKpGfFGU6SpJs2LFuq0Z2O
      IUkSnako+bJKTyYBwGKxygfuOsC3Xj7H3338Xs9V2uOGaXoMEEtmGOjrAiAYDBIKhYkmMySj
      IVId3USDvnU1LF+ukYyFAOhKxZjLVVbOTS0UOTjUvdQy1FeOu67Lf/ufL1JR69fcz2Pn47ou
      lu3gui6qbmCYFlrdZLFYxbIdRqdzaHWTifkCk/NFilWtNWeBDNPGMCwiQT8AXakoC/krAphc
      KNDfmSAVD181Q1Sq6vzeN15kYi6/6TZ73Dx1w8K0bFTdYKFQpW5YvHxmnFJV55nXLvHCqTHe
      HJnlP/zRdyhVdT7/xW/y8plx/r8nXuXXv/wdLk5l+en/+D+YyZb5jT95jidfucBLp8f5g7/8
      HsWKxle+/TrTiyW+d3aS1y/NkC3Wmu8CbQTLg+V3dmEqqk4kFFg53pWK8spb4yvnp+aLfOCu
      A3QmIywUKgz2pAB45cwYoiAwMZfn8O6eTXoLj+vRGBuCIDS6tiG/j4tTiywUquzuTfO7X3+R
      f/Z3HuS3/uxvuP/WYQRB4OzYPJ969A5Ojcwy0JUk5PcRjwTozcT42PuOEg37+fynHiIS8nHH
      wUYkoiyJ/O4//zgAv/RjH1h5/kN37AXgFz/zfgD29mdWzm2pAN4cmeH8+DyfeP/xq44XqxqJ
      6JX8op2pKAuFKy3AXL5MVypGbybObLa0cvzbr57nRx+5k8szuY033mNVXBemFoskIkGef30U
      y3HoSUX58pOv8cs/8TC/9dW/4UfeewQXyMTDDHYn+aUf/wCJSJBf+8kPrtzn0RMHAPjcD98D
      QE/mSrrN5Zm/t5eRG2VLBdCbifOFrzzDo/fcwhsXp9jT30FvJs7c0hrAMul4mLGZPLphEvAp
      S6vECj0dcS5NLgKg6QbTC0U++9H7+NLXX9iqV2o7VN1A1U3mCxW+9syb/P2/dS+/942X+eSj
      x9ndlyYa8tOTjnH7gX4kUeBXP/fYNfdIRkNbYHmDLRVAOh5BEAR+4T//TwRRIBUN8a9/8sPM
      ZssrawDQ+IIePnGQL37teX7swycI+hUUWaI3E+f5k5cAOD06y8GhLvo7Eszny7iu680OrTOu
      C1WtjiQK/OFfv8a9Rwb5mzcuk4wGefju/fz4h++kIxHmX3320Ws+K9Kav8WWDoIFAU4cHsKv
      yPw//9ePcGmqUZvP5q5uAQRB4FOP3cWrZyd46pXz3HloEEEQ6ErFmF8aHD//+gj3H9uLzydj
      2Q6O4+37sV7M5yv8wTdfYbFY5V/8lyeoagbH9vWyuy/NP/jYffzow7eTjocZ6Epuu0pnyyPN
      P/XYXTiuSyigEAsHWChUmM2Weezeq1Os+xSZB+/Yz29/9Vm+8LONgU4ooKDqJgBvXprmJx6/
      B0kUSUZDZEs1ulLrl/K9Hfn++SlOnp/mPbcNs7c/Q0cizBf+yY8A0JmMbLF168OWT4MGAz7C
      QT+CIHDXLYN8763xxhrAKv3CD/3QYSzL5sieXgD8ioJhWVi2g25YxEKNwVF3OsZ8rryp77FT
      cF2XP3nqdb72zCkUSeSD9x7kwGAn77lt97ar3ZthDb5AKpphE/bLqIZDLBqmrtVwBQXXqiP5
      gvh9N9eg3H14iD9+8lWqWp1IyH/N+Z50jD/9d59Flpb8j0SBTDzCxckFoiE/0tLxjqXpUWg4
      zUmSiLgDf7z1wnFcTNvm3//hMzxy934O7+5mT1+aoH/np+JousQausboyCQDw/0szGWJHjrI
      5OQEjrvsDKewd/fwTfkCHRrq4uzlOXyKhE+WVr1PbyZ2lcNdTybG6+en6ExGV65fFoDjOPyn
      P/o2H7z3MEf2eOsC78S0bHIllV/7f5/iFz/zfj716HF2dSVWKov18OlqddbkDOdTJDRNp6d/
      FwIuktxwhkMOgHPFGe5GvUEF4MjuHnKlWtP36OuI8+rZcYZ60yuf6YhHeO38JLbj8MKpUe49
      MrwuHqo7Bdd1+e6ZCf706Tf4N597jH/zucdIRAJXnW8XmhaAa9vEM50EBJN8PodPgo5kHFsO
      4dbLyOH1cYZ76M4DfPf05abvsasrxe//xXe5/9jelc90pmNkSzVyJZXJ+QJ101oXB72dwMkL
      03z16Tf4V3/vEe49MrTSbWxXmhZANJkhmmz83bF8cDkz3DouZLzv+D7uP7an6ev7OhLkSjV6
      O65MmzYC6aucHpkh5Peh1c11s2+7ouoGT3z3HPcdGeLzn34In7LlE4AtQct9C6IoIIrN19Z9
      nY2C3/u2dYNkNESxqvHymTHuPTrc1gJwXZdSVefybB5ZEulOR3fkbM6Nsu3bv6DfRzjoIx0P
      rxwTRQHHcTl5foq7Dw+hGe0rgAsTi/zi7/4Vh4e7+Oh7jniF/x1sewFIosAXfvYTBN6RPVeR
      JO44NEA6HkZvwxZA1Q3+01eeJZMI8xv/+KNel+cHsO2/FUEQuPfo8DXH9w928tH3HKVY1dqu
      C3RpKossidx5cBepWMir9d+Fbd8C/CB+6Sce49BwI2qsXQTgOC6LxSpf/PqLJKMh3ntsZ67e
      ric7VgCyJCIIAgG/0hZdIN0w+eUvPUG5VufXf/px4hEvW0YzbPsu0PVohxbg++eniIX8fOqx
      O9jTl95qc7YVO7YFWGanC8B1XZ58+TyZRJhDQ11bbU7L4iyn7HFdbKfxt2k7a3CG01RUwyYS
      kNEtiIaD6GoVR/SBpSP6QgRu0hluI/Ar8rpnrdtIqlqdsZncisfruzGfr/BXL53l859+qGX6
      +nXTRpFEKpqBCyiSyEyhxlBHlLemCnQnQpRUg3xF50BfkmdOT/HAkT6ePzNLZzxIJKjwysUF
      /vYP7eXLz13goVv7uDhTwrBsbhvK8I1XLvPpBw/w1RdGuHUojWk5nJ0q8In79vClb73FJ9+z
      j+ffmiEW8jPUGeWJ1yb4qUdu4Q+ePscDR/qYLdRYLOs8dLSPP3ruIoLbpONHpZjj4sgk0XgY
      23bZv38/oxfPYbsCCAKiJLN39zDlcplotHX88KtqnZ/5za/x337xk1ttSlOcPD/Fky+f5ec/
      8/C7XucCr56dJOCTOboJjn6241KoGSTDPt6cyLO/J86L5+fIRIM4rsP3Rxb52/fv5b8++RYf
      u2c356aL+BWJvT1xXr20wGO3D/DKxXn2dMexHRe1brGnO8bYQoXhrhhl1SDgk1AkEdWwSIT9
      VFSDUEDBthtOeT5Zom7ZBBQJy3aQxEYHxnFdJFHAcV1EQcCFpuPPmneGEwR8ioQtSPjkRu4V
      UVYQbAtk/7o4w20EggDOUq6Y7UCuVCURDb6rvY7r8htfeY6PP3grg93JdX03x3FBgNdGs/Sl
      wrx8YR7DsrlzbxfPvTXDx+/dTVk1cFyXfT0J4iGFkF/mUH+SgCLxsz98GwBDnVcqwV3pxjT1
      +w5f26rt722s4KejV9zffbIPXJdosLG2I8nLPXUXvyziLhX4RjUAotDoCgpcceRr9htp3hnO
      dYhnuuiI+6nUBeq6RkcqgS0FcesVlHByXTPDrReKLDdqiBay6d0oVnXS8ci72lvXTU4cHmS4
      N31TXZ+abqLIIm+O51HrJomwnydfn+SzDx+ipJrs6ZZ5/O5hlKUZtX29jcx8DxzpAyC2SszG
      dqN5Z7hEhmjj/Qksex2ElpzgtjCq/3qIooC9jeKD8+Uae/s7fuD5l06P8cKpMX7ukw/c0P1z
      FZ2n35zi/bf28+VnL/DB44NEAjK9qRBdiRCHd6UQRYFHju26wTfYXrTeqHWdkURxWwV25Msq
      qVj4B57rScf4yY/e0/T9lpNSnRrPcX66wPuO9HFkIE0y7OcfffjWaz/QGmPpTWPHT4MuO8Zt
      lzFAoaKu5ER9O5bt8Atf/CbhgK+plPC242DZDl99cYSnTk3RnQjx2PFBuhMhDvVvv+wNG8WO
      bwEag3cZw7RvOmZ5M6hpBuHA1YmGTcvm4mSW//sffvhdk0i5QKlWR5FF/vNfnebxu4Z45Ngu
      4iGfV+B/AK1fItaBgF9GM8xtIQBNNwgGrvZs/eaLZ6mbFrcMr77QZVg244tVAorEn714ib/3
      gVv4px89hihcm3fV42pav0SsA8vpFIncfC7JjcR1XTTDJOS/0gI8/8Yo9986TCp+bc3fuN7i
      rckCM/kaH7lziJ95/Dav0K+BHT8GgCUBbIOgGK1u4pPllTjdumHx9PcvEQ76Vk3rcmGmyH9/
      +jzHd3fww3cPI4qCV/jXSHsIYJt4hFbVOtGlufXZbJlvvniWX/m7j1yTn8cwbf7y1TF6kmE+
      +/AhRNEr9DdKe3SBFJm60fr+QI19ERoCeHNklkNDnddeoxmUVIN0NEA0qHg1/k3SdAtQLea4
      ODJOfnGOsclZXBeyc1PMLRaYmxoj+7b8/a2GKInbYjGsVNWJBP38hz/6DscP9l/j3VlS6/zO
      E6eJh3zce6DbK/zrQNMtgC8YRqFENp9HNWCgv4da3cKxFhF8YdxillQ8jOM4WFZr1bYCLqZl
      tZxd7yRfrhHwy9wy1Ek87F+x13Fdvv3mDId3JfnpDx7Gr4gt/y7bhaYFMHn5IjXbh4yFaTrU
      ajX0aglLCkJtEfltvkCy3Fo9K0mSEASh5ey6OLHA1EKRB+7YhyAIVHWDhaLOP7vvlpVranUT
      w3QI+xV6U5GVvKge60PTJWLPwaPXHDtw+LZ1NWajEIWGq2yr8dLpy/zeN17kX7of4v13HaBc
      1bnv6ODKedd1+a9PvsXjdw3x3lU8KT1untaqEjeIZXeIVqNY0fjQfUc4dXEaRVH4k2+f5Oc/
      9f5G7s4L84iCwD/68FEvs/UG0hbtacMhbmsE8OzJi7w5MrOqL1KhrHJoqIv5fBnLdjg00Eko
      4GOuqOKTJW4bSiOJojfY3UDaQgBb2QX665fO8k+/8D8YX2Xv4kJFZbgvwytnp+jriCEI8MpI
      lgvTRe7Y09GSIaY7jbb4hhtdoK1xiS5VNd53+14uTCww1HN1xgatbpKKhkjHw+zpS+MoQT5x
      /wEyq7g9eGwMbSOArVgHcF2XYlXjfcf3sVioXnNeN0z++KmTaLpOoVpnoaQR8Mkt0eV5e2ih
      Ybv4JQHNclBEAcNuhCSKAmimQ9QvUdQswj6Juu1gOxBWRHKaRUdYIadahJRGZ6Nm2GTCCnNV
      g0xIoVy3kQQIyCJ5zaIn6mO2YpAIyJi2Q912SQVlZisGvTEf2ZpFQBaQRYGibtMT9TFTqZMJ
      KdQMBweXmF9ioWrSF/MzWzGI+SVcoGrYdEUUpssG3REfBd1qly6QuCVdIGspFrmvI87iOxYK
      XdelUqvTkYiwb7ify/MVBL287tOcyzHahuVQrtvULYfzWQ3NdDi7qDJRqjNXMXh1uopuOrw4
      USFbMzm7qHFmQaOo25yaq2HYLheyOlnVYrJksFAzKddtJksGpu0yVzXRTIdK3aZctzEdl0rd
      xnFdVNPGsB1M20G3Gt9J3bqSosR2GkKzl34ix238v0tja9arEGgEegvC8j8IgrByWERAQEBc
      Oi+KK5cjCY1z0tI5SWijFmArBsF1w8KvyGQSEbKl2lXnVN1A8fn4O4/ewdxXXyKkgGk5KPLa
      BWA5LqIANcPBsB18kshoQWd/OsgbczX6Yz5cGud3p/zE/BKKJDAQ9yOLjdo0GZTxSQIn+iOI
      AmTCV/yP7u5vBLgf62lEqvW8LelHJtS47pbORrctEbxSpPZnGt63w8krATyppev3pBrHQsqV
      2OeIr/H3YGI51vjKuaGle/RGr3jKxvyN8wPxxvUh35XrB5bu0R+7ErecCFx9LhDxtZMANn8M
      UDct/D6ZdCJMtnh1F2g2VyEeCfLlZy+AqZHNlxq1kticABzXZbFmkQhIvDpTZV86SN1yEGgU
      jMGEH7/cKNDv7FL1LBUi+W0FRlpyqJO2vve1qbSPALagC1SqasTCwZUNO5bz1piWzdefPUXQ
      L3FoVxK/VePS1CLRUOC6/f+ibrFQNemMKCzWTNIhmR8aiF1zXcJbMW6KpgVQKeaYy1XpzkTI
      lQ0Gd/WQnZvCkkJQLyOH03QkWych1tuRhK3pAuXLNdLxMJIoIksipmnh9ym8fGac0+M57j9+
      gLv3dWHrKn/wFy8RWyVgZ3nwfiGnoYgiqaBMR1gh7pdIdHmzRTdL0wLwLznDjVweI5bqBreR
      3cu1suALUy9lSbeoMxyAZdmbbtdioUIyGsCyLHyyhKobmJbNN184w4XxOR64bRDLsji2r5ep
      hQJ3Z+JYloXrQslwCMkCr81p7E/56IvIBGSRZdd/27Y39V12Kk0LYOryRaqOj2gkSj6bpSOV
      QK+WsaUAbm3xqsRYreZ0JksSCGy6XcWqTiYRRZZlouEAWt3ktQszXMzW6UyGSYT9yLKMLMt8
      /KHjFKoaWc3BJ4tMlU2OdIW4byDquUJsIE2XiN2rOsOtklemBdmqWaBcqcbRpSS3HYkok/NF
      dnUlONiX4CMn7uD4gUbyKdd1+fjDdzJb0qgaNnsiCqme1XMDeawvrVVVbxBbtRCWK9VWNu9L
      x8P88VMnsQMxJK1ETzq+sm/XdLkxr357T7Qxv73plrYvq0wVuNR1HV3Xsayd0c8Uxa1ZCKuq
      9ZUQx3gkwNE9vXz2sduoqjqJaJCqYXNytkZP1MftPeGVBR2PzWMVAVicfv1lvv61v2I2W9x8
      izYAUdiadQCtbhJc2r1SkH2UbYVbB9NU1TquJOM4LruTfiQvm8OWsepksaEbyLKAptU3254N
      YavGALphEvAruK5LJh4mIttYtkMoHOLsok7YJxEPtEUvtGVZ5du3yeVq4OqIsnLt6W2ItEUL
      YVrdJOhXePr1cZ55Y4KwaDBRMohGgtyz69oVWo/NZ5UWwEGWFXzBEDtlMVEUNj8gxrIdHMdB
      kSUi4QAfPrGHmm5SVuvoquoV/hZhlRZAIZ2Oozk2bguGEd4IW9EF0g2TgE/h5QtzlGs6+4e6
      OHb7ITr8XJX60GNrWbWOdwGfP0S0xXNpNosoCtju5g6C9Xqj/1+oGRwa7MAnwrPPv7aU/nxn
      fK87gVVbgNvvuhNXUvDJ22NboeshboEvkG5YjeANCUbKNnf1+ClVVApl9V1TnHtsLqvPAlWz
      /OVfPsHEbG7lWCE7x+nT5zBMjdNvXQBgfPQCI2NTjFw4y/j0/OZYfANsVhfIdeFrT59E1Q1U
      3cAfipCKh7lnV5SQX8ZyHHKlqieAFmLVOTjZFySTTmEbxsqxcCRGNGYxPjqGZduNXSKVAIql
      QzgJto7jOK3pDOe6WPbGO8NZtsOX/vwFgn4FfyjMYG+SUCSEjINtg1+WGZ3Ocstwd+t9R23K
      qgKwTZOL586Q6LyyUdrczBSaJZJOpTGyeWpqDcfQseQQ1Aoo4VTLOsMpS/ZstF25cgW/IvO/
      XnqLQ7ce4VBvgr3p4MqMTyCgcHpklo89eHvLfUftyqq/gqlV2XPoEJVSeWXT4YHd+1fOd3Q0
      shZH9uxf7eMtx2b5Ap0ZmeGRew4xntMoqzpdyasD3AM+mZGpRQa7kxtui0dzrDoGCCQ7CMky
      imCxE7yBxE1KjHV2fJ6DQ90M7RnipRdfw/+O+N5oKMDe/g7EJsMePTaeVVqAKq+9OsLQvkEi
      seSOcBdthERu/DTopclFhgb7MOplRqfmiYWu3s0xGgrQkYhsuB0ezbNK+XbRdR1VVfGHWjPE
      ca1sxjSoZdvM5iucm1eJWDqyLBF9x3amvZk4PZlr43c9to5VBBDEsQtkS3H27NkZtdVmTIPm
      Sir+SJQT+7u4Z89hvvXd09fs5/vpD929oTZ4rJ1VOqM6lZLJ5XNvcnl6cfMt2gCkTYgHmCtU
      iSRSvPjqWWRJ5J9/5hF6M/ENfabHzbNKC+CnqztB3XUwzJ0xV70Z8QCG5Ofj9+/n2K7GDM/d
      twxe5xMercAPnI5wbIu6bvyg09uKje4C6ZbDC6enePKF0yRj3irvdmJVX6B7H3hg0w3ZSDZ6
      HeBiVmN0YobPPbo9dszxuEJbTEhvZHJc03Z48+IM9ZrG4eHuDXmGx8bR9DR/ITvH6OVZevo7
      mJsvcOy2o1w8ewpLDIChIoeTHNjTmv3ejcwNei6r8fJb4zx0fNjbsHob0rQAZNlH39AAAdFm
      18AAggCBcAzXMiDcAbbRss5wrutg2+tj1ytnxrj78BDQSONdKlSYmpzlsU/e13Lv7XF9mhaA
      WqtSqhnUfSJ1WyXolwn5ZOxQHFcvocQzLe0M53LzznA1zeDnfuvPeeZ3fga/T+Z8VmMspyIC
      wYCv5d7b4/o0/Yt19Q3Q9Y5jkfBy9rLWdu5ar03yxudylKo68/kyA90psC1SioPkmig7JHio
      3WiLKmu9xgCj01lSsRBnx+YRgmGePzvHE9/+Homgzwty36a0ySzQ+qRFGZ3O8ciJQ5wbm8N2
      XO7dneZXfuwBYmEvxne70h4CWKd1gLHZHA/ffZALs0VOj+f45d9/irHZ/DU+Px7bh7YRwM2O
      ARzHYTZb5o5DAwzu6kKvlPmVT72HzmSYaMh//Rt4tCTtIYB1WAjTDQtFlnAFgffdvp8/fe4c
      +XKNSk1fdWcXj+1BewhgHQbBhmnj98ksVE0Un0LArbO3L02pphP3ukDbljYSwM21ADWtTjjo
      I6yIPPvaCHMLeUzLplzTvTHANqYtBLAeyXHLNR1kH6dmqxj1Oh2JMLlSjXJV8wSwjWl6HcDQ
      aywWaqRjAaoGZJIxqsU8lhQAo4ocShAJtmbOy/VIjluu6fQkw5g1lfsOdNMRhMVClZI3BtjW
      NC8Ay0YvF5nQJCTHJZWIsZDL4zg2guSHYpXQ8BCO47TgDoYu9k3apRom+w4f4JmTowwmZLqT
      YeYLZUpVjWjQ14Lv7NEMze8TXMihROK4WhnLdrEsE8e2cBDAMhAlpbHFj9B6u50su0LcjF2V
      mk7NMvn0gwfZ3ZPktXOTnB+fp1zTiUeCLffOHs3RtABiiRRVzaAr3U/dBtdx6O/rx5F8uKaG
      5A+vFP5Wy3sjSY1p0Bu1y3Vdgqk0f/HtN/neG5f4zX/8OJ2pKAvF6tI+YIGWe2eP5mhaAOFo
      nPBSlpSVZR//0l+B1uz7LyOKAq7r4ro31gq4wNRCkR+5a5Db9/UgCgLxSJBzY/N0p2PIO2Un
      kTakTX65m+ueFDSLckXnv//1G3QmG6lign6FUlXjYw/c5nV/tjFtIoCbY6psMLeQ5RPvPdjY
      dR7w+2QeOL6PB+/YHvlRPVanrQRwIxOhluMSEhwuz5U5vr9v5bgkivzqT32EgH9nbCTYrrSF
      AFY6KDeggKlyncs5Fduok/JSnuw42kIAsCyCtSugI6RQypfQqhVvxXcH0jYCQBDWXPx1y+H5
      kQJPnxzFcV1vtmcH4v2i1yEdEPiHH7qN7tTOyJTtcTVtERO8MghYQxPgui6jeZ2vPPMWhdkp
      fIoX9L4TaboFsMw65aqKWikyny0AUCnmKFZUitl5qlrr5xFdSxfIBeqWw8dPDKKqGr/29x/f
      KLM8tpCmW4B63aBULFOvlVBNgY50ksVcAcfJIsh+KFUJDQ+3pDPcsiu0Y9vYTcqgbDi8cX6a
      J597jUNDXSSjwZZ7L4+bp2kBSJJIrVoB18W2LUzzbc5wpoHQws5wwvJ/a7BtomhwoD+JdmQX
      4LTcO3msD00LwLFtkqk00UgIw3YRcOjv78cRfWDqiP5QyzrD4TjLCmjKNsd1ES2Dp14+z96O
      ID5Far138lgXmhZAKBIjtLRj0spykG97OMOtlcWaycWsxsH+FLPzixzb37/VJnlsEG1SrS13
      gpojKItUC0U+dGIfC4UKnd4U6I6lTQTQKP5uE3HBjuPyykSJ06Pz+BSJbLFKJh6+7uc8tidt
      I4BmsV0QbYuf/8QJFFlCr5sEPYe3HUt7CGANEziLNZMnXr5ErlzDdV3qpo1PaeZ31bAAAAuS
      SURBVI/1wnakfX5ZobmFsJlync8+fAv7ehPohoUsiZ4P0A6mLX7ZlSHwdRRg2i5nRmYZmcoi
      CAKz2RJdqai3BrCDaZ8WALieAmarBl3pKPcONzb8OD0yw+E9PZthmMcW0RYtwDLvVvxd16VW
      1cgtFlZyfb52forb9+/aHOM8toTm8wIVc6imgF80Kag2Q7t6mZ8aw5TCCPUycjhFd0crb5V0
      ZRAwmyvhk2XS8TCWbWPbLrIscT5vcGhXGgDbcbgwMc+hIW/r051M0wKIxFNUZmaYys4TiGXA
      dTEcAdcogj+CrZZxnHhL7hLZwMWybSxL4Pe/8RJ+ReJnfvRB/v8nvkepqvFTH7ufarHE0YPD
      WJZFoaLh98lIIi36Ph7rQdMCKObmmZyaprMjTbFSoVpTMdQKlhTELS6ihJMtu0vkcj4gSZKQ
      JIlLk4vohontwNeffYN9uzoZK5m4toMsSwiCwMh0lkND3S33Lh7rS9O/bjLTzYnM1d2B6MEj
      627QxuKi6iambZOIhvj1P3yKY/v7mZwvMr5Q4eP37VmZ8Tk/vsDBwXfui+mx02irQTAuzCwW
      6etI8MH7DmNaNp//zCPYLpy8OIv8tp3eL04usG9X5xYa67EZtE37LggCjgunR2c4sruHx+8/
      wuP3H0EQBN5z92Huv33/yl6/rusyPptnqDe1xVZ7bDRt0QI0YhQEHNdhfK7AcG/mquAYwxHR
      KpWV66tqHUkSCfp3lpu3x7W0hQBgaa9gx2XxHe7Npu0SScQYnZhbOTabK9Odjm2FmR6bTNt0
      gZb3CChWNeJv29Hlu29NMjkxi99UV46NTC2yt79jK8z02GTapwVY2ifsnZvaGbKfB24dZHwu
      t3Ls0lSWvf2ZrTDTY5NpHwEIAlrdxHVcAr5GwzefrzCbr3LrUIZSVV+5dmw2x1BPeqtM9dhE
      2kcAokCxohILB1YGvxdmCoT8CpGgD9txMC0b1712nOCxc2krARQq6kr/33FcNBtu292JKAj0
      ZuJMLxapqHVkSfJmgNqEpgVQKeaYX8zjOhajl8cAmJ0aY3J2gcmxS8wuFjbKxnVBFETmchU6
      ko2a/fzEAn/9/XH6oo1wx4HuFONzeaYXi3RnYnghAO3Bmp3h5qbL1JcypJmOiGuUwB/BaHFn
      OEGAmcUCHYkwlmWRjAZ49P7DiLhYlsVAV4LL01nmc2UODXa15Dt4rD9rdobLpJNkF/NUu7sw
      1DKWFGp5ZzhoZLabz1e5ZXcvhuXwC7//LD/3yfeuxPvesruHL/35i0SCPj72wLGWfAeP9eeG
      nOH27G0c27uNnOEkQWChUCETDyOKAh954DbSb9vxZW9/B9MLRRzXYbDHc4FoF9poECySLVZJ
      xkL8xz/5GxRJIh1Srjp/4sgQrou3E0wb0TbtvCgKlKo6Ib+PeDxGOh5Eka4e6X7k/iMko96u
      7+1E+whAEDBtm+dPXWbfQCfdyWuzve3t72BPn+cC0U60URdIIOT3cXYix4W5MsNJ/6rXeZV/
      e9E+LYAoYjkOf+u9h5m3vUUujwbt0wIIAmXV5Iv/6zTHe8OIXlXvQRsJQBJFHjy+h4++7whV
      w9lqczxahLYRgM+nMFNx6AgrdIa9bM8eDdpGAK7r0JEM40oyPrltXtvjOqwpM1zNFJBslULN
      Zt/uQeamxrDkEOhl5EiKno7WXUENBgPc0RMnHvRqf48rrNkZLpNJUzMa0VOmK+JqJQR/BEOt
      4DiJlnWGi8VjRKMR+iJSS9rnsTWszRlueoZcbhFfOEFNra04w1FcRA6nWtoZ7vG79/Bm1kCU
      JC/fv8cKgtvMxllroFwuE4u1XkYF23ExbJeg4hV+jyu0TWmYKNWZrxpbbYZHi9F6fZUNoiOk
      4Je9xS+Pq2kbAUT80lab4NGCtE0XyMNjNTwBeLQ1ngA82hpPAB5tjScAj7bGE4BHW7MyDVqp
      VFiPRWFVVa9/EeA4DqK4Nv2t9TOt+IxWtGmtn1kuJ2tJHrBWmzbjGY7jXBFANLp+yWCbcYVY
      3rlxLdi2jSQ1P5/fis9Y6/1b8Rmu6+K67poL9FoL89t38dmIZ9i2vXULYTeSemStP2orPmOt
      92/FZ6y1YK71/sCaW7AbeYYkSa2xEuyYdSqGTTwcuv7FgGPVuXhphFgiTW5hnp5dg5TLFZJh
      hZlsmf0H9vFOrwdLLaPJYaK+5gqHVa9xYeQyyVQH2WyO3u4OZmcX6Onrpm449HZfmz6lWCyS
      SCSauj9Abn6G+aJGIiyhWTJ+wcBAQTQ1xFCcgd5rt2ld6zPmpscp6xAQDVxfBFevIgZjqIU5
      Mn27ySSubvkdy6Cim8Qj16aNWQ2tUmR0YoZMOsl8vkJ/R5T5XIVo2Ee2qHHs6KFrPlMpFQnF
      EkhNltdKYZGxmRxd6Si5Sp10RCFfswiKJkLg5r6nlhCAa1lUSzmeffL7HLr1GLVqhUQqhSJC
      LT9LzgwRkwwC8TThgI+uri7SyThqpUjv3oPUcln8ioBpGtjVBXK1PXRFrq5BnLpGvljhO6+d
      4uDBvai6RWYpU3R2ehQn0oeoF0l0deOXpMYzEjEqlQoDfT1ojks0EiKaSKPPTa/6HqpaY37i
      InkrRFRU8YeTxBIxTLXMydfPcvjILdiSSNTvR1DCpBJJKnUHy3XwCTaJVIpSzcSnuBTqqzvu
      qWqNsfOncIKdSE6VsD9EvDNDraLyxhtnuPW2Q7iOSzAQIhBNkEikMItVXEdAsAySqSSqJVDQ
      DWzLvva3sG1q5SzPfetbHDh6K2q1SjydwieBmp9nQfeRzsSI+HzIokhXZ4ZYNEy5pjMQC+BE
      EoRUi+7ebmwWVn0HXa2RXZhhdL5Kf9KPEEgQDki4tsmFs2/Rv2sfVlAh7vMhKQE60wkiRRW1
      bpH2S/hjSYJ2BbOmki/NrSoAVa2xODXCYt1HTKrjj6SIxiJYaok3Tp3j4C2HsGW5FWaBHMYn
      xsFyGBjowZHDDO3qwaxrzC7kEeQg8bCfrt5+epN+clUTWy9xeXIBJRxh4sIZJEVmamoKR/Th
      +hKkwle/luvajE7OI9oW/X0dyMEEfd0Z9FqZxUIJXzBByCfSNzBIRDTRbJl6eZ6JuRLBoJ/L
      45NUcwuUNZ3C4jxTM/OY9tWB9bVSjnLNQFQa9nb3DREL+5mbnqJcVunf1Ycr+hgcGmJhdpZU
      Ks7E2Cj1uolt6tQMh8sjI5iGTrmmsVrlWMzNoxku/lCMkE9i19BeQkGZyfEJaqrOQF8n+KMM
      797N/OwMsUiQscsjGIaFoVYxbJeR0TEs0yAYjlI36tf8FhPj47imy67BXlwpxPBAD5ahMzOf
      Q5ADJCIBBoYGcbQiYiBCbm6SfEkl4BO5nKuQnxxDqxtUi0XSndcWTEOrMF+ogiCRTkRJd/aS
      jIUoZucpVVXSXf0Ijs3g0BBqKUcoGmV6/DKqXkcSHOYrOrPjoxiGQTgcJpW4NgpRLecp1eoI
      sp94OEB33yDxsJ+FmSlKFY3e/j4QFAaHBrdXPEAxnyUUT+Nrtu28AfLZReKpDJK4Mc9wHZtc
      oUQmvXHho7apU6wZpBMbF5exuLhIpqNjVaFul2e4jrO9BODhsd60QBfIw2Pr8ATgAcDM9BSW
      bTE5ObPq+WKpxNu7CqZWYXo+z8LMBBfHpjbHyA2gJWaBPLaeky99m94Dd3Lq9EXuO7YbAilq
      uQkkUeTV8wt0J0W6+/dydN8uTp25yNzl8+w+8SCLo+OkwgKva3V0tUp29Az777iPUi7L4dtu
      J9TktPNW4bUAHgBEugcZP3eGno4Yk1OLjF2+RFkzKBazdHemCYTiVAtZ8vNT5CYuYYW7Gerv
      xLbq1DSDydELfOfF79LR1UN14TInz1ykorV+DLY3CPYAQNO0FRcKq66BEkIWXcBFraoEImFE
      IBDwk8uXiIQC+IJBasU8mi0SD8nkK3VSUT+66aJWq2S6ulBaPAWNJwCPtuZ/A0pLr0ZeinSi
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='UPT per VRH - Rail &amp; Ferry' width='192'>
      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
      DjT/H3G/ogusbms1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='VRH' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='VRH+UPT by Agency' width='192'>
      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
      XjsQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='VRH+UPT by Group' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='VRH+UPT by Mode' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
