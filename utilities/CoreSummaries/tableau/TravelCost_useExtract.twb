<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='TravelCost Extract' inline='true' name='TravelCost.tde' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TravelCost Extract' name='TravelCost.tdeleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='TravelCost.tde' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='TravelCost.tdeleaf' name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>people</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autos</remote-name>
            <remote-type>5</remote-type>
            <local-name>[autos]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autos</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1900</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>total_cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6356</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_cost_indiv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_cost_indiv]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trip_cost_indiv</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6353</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_cost_joint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_cost_joint]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trip_cost_joint</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4795</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_fail</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost_fail</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pcost_indiv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pcost_indiv]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>pcost_indiv</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5058</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pcost_joint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pcost_joint]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>pcost_joint</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2708</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>129</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:1]&quot;' value='Change in Average Household Out-of-Pocket Travel Cost' />
          <alias key='&quot;[TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk]&quot;' value='% Difference in Average Out-of-Pocket Travel Cost from Base' />
          <alias key='&quot;[TravelCost.tde].[sum:freq:qk]&quot;' value='Number of Households' />
          <alias key='&quot;[TravelCost.tde].[usr:Calculation_4070915162654650:qk]&quot;' value='Average out-of-pocket cost per Household' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[COUNTY]' role='dimension' type='ordinal' />
      <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Automobile Ownership Category' datatype='real' name='[autos]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0.0' value='Zero automobiles' />
          <alias key='1.0' value='One automobile' />
          <alias key='2.0' value='Two automobiles' />
          <alias key='3.0' value='Three automobiles' />
          <alias key='4.0' value='Four or more automobiles' />
        </aliases>
      </column>
      <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='real' name='[freq]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='real' name='[incQ]' role='dimension' type='ordinal' />
      <column caption='Household Income Category' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
      <column datatype='string' name='[src]' role='dimension' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[TravelCost.tde].[none:src:nk]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.403077' measure-ordering='alphabetic' measure-percentage='0.596923' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:county_name:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;CG 07 Baseline&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No Parking Fees&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CG 07 ShortTrips &quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across.Chart.Change'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Change in Average Household Out-of-Pocket Transportation Expenditures On a Typical Weekday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk:4]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='ColumnInPane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='real' name='[total_cost]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[TravelCost.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:4]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[TravelCost.tde].[none:Scenario:nk]' value='224' />
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[TravelCost.tde].[none:county_name:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[TravelCost.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:4]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[TravelCost.tde].[none:Scenario:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([TravelCost.tde].[none:county_name:nk] / [TravelCost.tde].[none:Scenario:nk])</rows>
        <cols>[TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:4]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.County'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Average Household Out-of-Pocket Transportation Expenditures On a Typical Weekday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[total_cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[TravelCost.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[TravelCost.tde].[none:Scenario:nk]' value='26' />
            <format attr='text-format' field='[TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[TravelCost.tde].[none:county_name:nk]' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[TravelCost.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
            <format attr='font-family' field='[TravelCost.tde].[none:county_name:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[TravelCost.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14'>Scenario:  </run>
                <run bold='true' fontname='Arial Narrow' fontsize='14'>&lt;[TravelCost.tde].[none:Scenario:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14'>Average Household Cost:  </run>
                <run bold='true' fontname='Arial Narrow' fontsize='14'>&lt;[TravelCost.tde].[usr:Calculation_4070915162654650:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[TravelCost.tde].[usr:Calculation_4070915162654650:qk]</rows>
        <cols>([TravelCost.tde].[none:county_name:nk] / [TravelCost.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.County'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Average Household Out-of-Pocket Transportation Expenditures On a Typical Weekday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[TravelCost.tde].[none:src:nk]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[src]' role='dimension' type='nominal' />
            <column datatype='real' name='[total_cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[TravelCost.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TravelCost.tde].[usr:Calculation_4070915162654650:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[TravelCost.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[TravelCost.tde].[usr:Calculation_4070915162654650:qk]&quot;</bucket>
              <bucket>&quot;[TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[TravelCost.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[TravelCost.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[TravelCost.tde].[none:Scenario:nk]' value='49' />
            <format attr='width' field='[TravelCost.tde].[none:county_name:nk]' value='78' />
            <format attr='text-format' field='[TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
            <format attr='text-format' field='[TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:1]' value='p0.0%' />
            <format attr='text-format' field='[TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[TravelCost.tde].[none:county_name:nk]' value='76' />
            <format attr='width' field='[TravelCost.tde].[none:Scenario:nk]' value='220' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[TravelCost.tde].[:Measure Names]' value='124' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[TravelCost.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[TravelCost.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[TravelCost.tde].[none:county_name:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[TravelCost.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([TravelCost.tde].[:Measure Names] / [TravelCost.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[TravelCost.tde].[none:county_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.County, Inc, Auto'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Typical Weekday Out-of-Pocket Household Average by County, Income Quartile and Automobile Ownership Category for &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Automobile Ownership Category' datatype='real' name='[autos]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='Zero automobiles' />
                <alias key='1.0' value='One automobile' />
                <alias key='2.0' value='Two automobiles' />
                <alias key='3.0' value='Three automobiles' />
                <alias key='4.0' value='Four or more automobiles' />
              </aliases>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='Household Income Category' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autos]' derivation='None' name='[none:autos:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[TravelCost.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TravelCost.tde].[usr:Calculation_4070915162654650:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TravelCost.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[TravelCost.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[TravelCost.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[TravelCost.tde].[none:county_name:nk]' value='52' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[TravelCost.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[TravelCost.tde].[none:autos:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[TravelCost.tde].[none:incQ_label:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[TravelCost.tde].[none:county_name:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='10' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[TravelCost.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([TravelCost.tde].[:Measure Names] / ([TravelCost.tde].[none:autos:ok] / [TravelCost.tde].[none:incQ_label:nk]))</rows>
        <cols total='true'>[TravelCost.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[TravelCost.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Inc, Auto'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Average Household Out-of-Pocket Transportation Expenditures On a Typical Weekday for &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Automobile Ownership Category' datatype='real' name='[autos]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='Zero automobiles' />
                <alias key='1.0' value='One automobile' />
                <alias key='2.0' value='Two automobiles' />
                <alias key='3.0' value='Three automobiles' />
                <alias key='4.0' value='Four or more automobiles' />
              </aliases>
            </column>
            <column datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='Household Income Category' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autos]' derivation='None' name='[none:autos:ok]' pivot='key' type='ordinal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[total_cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[TravelCost.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[TravelCost.tde].[none:incQ_label:nk]' value='42' />
            <format attr='width' field='[TravelCost.tde].[none:autos:ok]' value='111' />
            <format attr='text-format' field='[TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[TravelCost.tde].[none:incQ_label:nk]' value='128' />
            <format attr='height' field='[TravelCost.tde].[none:autos:ok]' value='68' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[TravelCost.tde].[none:incQ_label:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[TravelCost.tde].[none:autos:ok]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[TravelCost.tde].[usr:Calculation_4070915162654650:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[TravelCost.tde].[none:incQ_label:nk]</rows>
        <cols total='true'>[TravelCost.tde].[none:autos:ok]</cols>
        <pages>
          <column>[TravelCost.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Indiv.Table.County, Inc, Auto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='104'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TravelCost.tde].[:Measure Names]</field>
            <field>[TravelCost.tde].[none:COUNTY:ok]</field>
            <field>[TravelCost.tde].[none:Scenario:nk]</field>
            <field>[TravelCost.tde].[none:autos:ok]</field>
            <field>[TravelCost.tde].[none:county_name:nk]</field>
            <field>[TravelCost.tde].[none:incQ:ok]</field>
            <field>[TravelCost.tde].[none:incQ_label:nk]</field>
            <field>[TravelCost.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{E53E43CF-DE83-4B51-BA69-8BC991AD95CD}' />
    </window>
    <window class='worksheet' name='Indiv.Table.Inc, Auto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='88'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TravelCost.tde].[none:Scenario:nk]</field>
            <field>[TravelCost.tde].[none:autos:ok]</field>
            <field>[TravelCost.tde].[none:incQ_label:nk]</field>
            <field>[TravelCost.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{9CAB3F3D-ABD2-48F7-8B87-2630301C332C}' />
    </window>
    <window class='worksheet' name='Across.Table.County' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='87'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TravelCost.tde].[:Measure Names]</field>
            <field>[TravelCost.tde].[none:Scenario:nk]</field>
            <field>[TravelCost.tde].[none:county_name:nk]</field>
            <field>[TravelCost.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{B8EFE4BB-CC57-4252-8D1E-311C370B0F4C}' />
    </window>
    <window class='worksheet' name='Across.Chart.County' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[TravelCost.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='80'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TravelCost.tde].[:Measure Names]</field>
            <field>[TravelCost.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{AA356CBF-7FFE-4BBD-9A89-42C63572AA7D}' />
    </window>
    <window class='worksheet' maximized='true' name='Across.Chart.Change' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[TravelCost.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TravelCost.tde].[:Measure Names]</field>
            <field>[TravelCost.tde].[none:Scenario:nk]</field>
            <field>[TravelCost.tde].[none:county_name:nk]</field>
            <field>[TravelCost.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{494A9844-5853-4552-A627-149F5F95C3EB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Across.Chart.Change' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.County' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dV3Bc2Xng8f/t2zkBjZwDQQIgAeYchpODNJIla2SPVJa9O165LHltb3kf
      vFvlp33aLe+6rCpbtstJZclja1cjjTVDTSaHcZgDAomcc2igc/e9fcM+kOYMh40RQYIgpvv8
      nho8jYNzm/frc+6JkmmaJoKQgyRJkiyPuhCC8CiJABBymgiAh0BTU8zPz5NUtHv7BdNEVVV+
      WWNUScaIxBIAhEIh5ubmCEViLNmKNTQSKfXmnzB0EonkvV5CzhABsMJ0NcLbb3/A7Ow07779
      DnFVR00lSSkqpmmQTusYuoam6SiKQiKRQNfTvPnmEVKKgm6aaFoaw7h5U2tplUQiiWHovPfG
      T5lYiAPw1ulOgsEgp959k4lI+ub7kilM0yStpG6+1tNE4in0tEo4OM3bx07fDIR4At0w0dIq
      yWQCNa1hmibJRAIlrd0KlgSabjzKj3JVWB91AbLNTM9VAo272bSxlIZ1DSSCQ7x7qR+3GWfD
      lk109StsLQszohRx/cI5mtcXYbirGR8fp/2jo1jr9hLpPs22p75Enqxw5I23KCnykXaUMT0f
      otXlBMCTV0RTUyOhkeskY2GOHD1NIM+Ns7iKse7rlBQXs2VTHeevz2GPTuD2WAkn7Zw5+haS
      t5BwAqzhfqTCembmohxqzKd7AXwuF7bUDAmLj0gizZeefyKrvyWz+doeCcki3W7KpGJRhvoG
      adi2h0NbG+gamLzjvWU169m1q5VYWKGsrJxd+/cw0naaMH4CThk1NYfVU8OBxw8zMzZKWUkp
      xQEfAIszoxx966e0B12UMM90OIFkkYnHFErzXcyHwiRSKkZsnqSrjAP7DlLgMugeHMPUDdLJ
      KBZnHjv37EPWEvT0TnHgiQMc3Ludvp4+TEyMeJxUlvcRigBYYSUbthPqPU9nRztHT52jpLqa
      4c6rXLw+TGPjekJTffT0j2BIcLsTTpKQTYVQ2oMcGqF0fTMANkcR6fgYV86fp6S28Y6/Eyir
      5Zkvfp11rgVGE3ZK83y4HFbcbheuvGLKvBLTiwks3kKcyRkuX7lEKGWhoaYSj9eLzeHGJoOE
      BMC6+iIunbvK+UvXqK2vx+V2Y3W7cUir+vGtOkmMA6w8TU0Rjsbx+PJw2mTisQi6ZMPncZGI
      RdBNCw6nE0M3cDhkFMUAQyGt6Xx0+jQHnnkBv+Nm61RNJYgl0+Tn+1GSSRwuNxYJkkoal8OG
      nlZQdAnZTBNXNPL9flKJKCkNAn43KdXAKunEEioOpwOnTSYUjuLNy8PUVGwOJ6lkEpfLSSQU
      Qna4cTtkwuEoLq8fpz17W8mSJEmrHgCGYWCxPHjFs9byMU0T0zQfKC81GSOmQL7fvaaubS3m
      I0kSkvRg1dMjGQiLRqNZmU86nUZRlAfKw+7yUpDvXXPXttbyURSFdDq9InmJZwAhpz2SALh2
      +h3+8q/+lsHp8JLv0UJjfO973+N73/s+46HUPeWbCk/zj3/zl7z+/ll0Y/ktOy0V4Sc//Dt+
      9NrbpLRMv2/QfbWN1RpOGu+5wvf/4i84eaU34yCZGpvnet/YKpUmOz2CJ5wUp05dpXnXFq5e
      u0HYE6ZjMs2zB5u4ePE6pqeULz93ADMVJibn8+ITe5HmevjhW320NlZyraOP57/6a3gzhO5w
      xwVSnmoWh7qYmi7n+HvHaDnwNJHRHuZmZ9n7wktUF7iWLFlwrJvRiI1qaYbhqWl6Tr+Pu3Yb
      ZdYI/aNjlNU38varr/IV13fpu3CKqi2PcXDbBh5GR4mpRnnjg/O8/Bvf4Nz5NhYmLRx57zTb
      Dz+HMtbJaByKjSk+HJYJDvtY1AMUyouMxVy89JXnsIu6/Z6s/sdkWNl/eA9jA/0EQ4sMjo7T
      f+kUvaOjBFUHEx1XSdx6azy8yOTsPKHZUayFtcTnxlmYHORq92jGrEvXb6bcmWR0YpLxkWEW
      w4ucPneJ7rYblBTYaesZ/8yi+Ypraa72MTQyyuLMOFOLMY4f/5ChGx34S0q53jdOdWUtedY4
      i/EYx4+e4WGNlWqqiuzJpzBQxBOP7efYe++zY/9uPnz7A7q72hnvvYo1UE1tXQP9/YO0bqxj
      ZHKOGxeOMht/SIXKQqsfAKbKlUvXsHv8oCXpud5FWjfQNcgrLMb9iW632uZtvPj0Y9hkiYKi
      Qkb6eomlVDRNz5j13Eg3I8EUXpeDyeEBZhYi6LqOxe6htCiPXzbZJjY/RvfQLD6vm/DsBANj
      0ximAaadkrIirLKMVUrSdqWNkalFTFOHT2Vp6ArHjh5HM0x6O9sIJe/vYc3q9pGvB3n1X/+Z
      f/jxEQrzPZz/6Bz2vHxssoP8PDdOp5uJsRGwOvA7JHp7+9EMHV3/uFCGpnD2w3c59tEVtE80
      CxcnB+ifWLiPkqmcO3mGeErh4tW2+7o20zTpunKGI+9+SOxe50stlZehc+r9N5gMKVw4/lbG
      ZnX7tSso6cz3zOo3gWQ333rlFSZmF6msriE6v4uUJuHP82NgRW+pwQVIBev46pPVAFS3HKRE
      cmGp+zaLMQVPXgFw9wVt2P0cL5UMI3sCFHqtbN+3gMPjRdZ1/D4HJabjM4tW0rCDb329mBQO
      qsoCNDVtxury4rGC0+eltLAaWduOaXWybWcUl8d11zfIwtA1XvvJzyhr3cNA2xWsxZXcuNBO
      Ud1GkouTxEIR8grzMZ1FVPsNrnSNsWf/frwO+Y58JIudl771CsNjU5RW1OC2GdSPTlJcWU0q
      PI8hgS8vQKC4CrfTSqComN/93e+gSTLFHhNuNcyCo52c6ZigzNlPd3Ut5nQ3irOUvFQ/fVo9
      yckuUs5Sqv06Y7Nh/CV1lLlVLnX0s33Pfgq8n/7M0nzw+v8lJLvpu36NpsoA59oG2bd3Gzdu
      dJE2rOzeuZlr58+QV9NCc11ZhiZihNdfP8GWLZWcutJPU16CiajMnpZK2ruGSFvc7Gqp5dL5
      CxSva2VDdcmS/2emoXHpzAfEvHVc+8Uv2OlvJjLSjuGrotSRoG8qgaaGCYwNMrOwiDNQSWtD
      5cef82qPA4TDYfLy8rIuH1VV0XWNEz/7Ia6q9QxF3BRGeqja3Mq5E2dZMD344lNU1BQzpfpQ
      F6L45TlmwgotT77Mrx5uXfEyhcNh3DaT1378Kp2Dc3zphUNc6JrHlRhl3caNxC3FhIav0DMY
      5ZmDFUwqHmYmVYrkCcrrGxkJ2/idl1/4VHnifP9P/5a01UBxBnh8fQGnL19h055nuXTpMk3F
      NgLrNjNwo535pJM/+a/fxiLdeV2maXD0317l5OUb7D78DAM9A1T7NQLVDZxsG8ephdjXWM60
      pYjpvl6+/V9+H+8nvh+SySSyLGO32zE0hb/5u+9T5HAxMhOk+cDzBHsu0DWh8Ow2H3Oe7Sij
      l2mo8NOzILMQTfHH3/0tYA0uiIkGp5gLL7ePRaO3o4PFeJKhnuvMLH7cANZSSRKKuqzcdDVJ
      Z9tVJufDROaXVx5djdLeN8L581foa7+AopnMjQ0yNDmLmk4j+UvY0VhLQ/NW8u2AzUXr9l2s
      q/QzPDzFyPDQXb1XuhLn2pXLzIYyN+x1JUZcyVy9A8wOdRI0i9jWUMxsKI6ha+gGWCwQD8/Q
      3TuCmlLRJAuNW7fiMk2QQNO0JQetrK4Ah3fVMzoVout6J+FognRaQ9c1NM1gcWqYwfEZ1HT6
      0y3Em5KzXOxd4PDerczMzGEaOppuYJEslNc0UBrwgiSha2lMJOYnRwjOzzIxt0SvocVDaHaY
      0qpKYguTdPeNoSppdCy0tLRwc7zMZMPGVlz2O2vaRzTObTA9OU1KSVJSWUciOEnCdGKJjBNy
      yMTnRnEXVlDgtjAwPEltQwPx+QnCqpX6mvJPVakKr//LD9n5ld/k2i/+kZYv/wE7KiykLG66
      Pvw59tan2V7uJKRaqasoYLB/gEBZLQX+TL1BJm+/9k/EnWWMfXiBJ7eWEC7cQ5M/Ae4i3FKK
      hWiKgN/NbChF4/raO5pApm7w4je/Q0tTLb2dHeiyleLiAB5/Ja5AEXbJpKjES6vhZZ3vMKVl
      Pjp7p9hQVcDI4BwSiTseU0xD4yc/+gGu8lqOnW3nu7/9MuOjY5TV1LM4M4ndV8DVd36Ac/PX
      aSlMkzBd1FaV3vH5VGzcx5PKJSLGJnZt30h/xxVU5yHqCmVCqp315UVIdjelRT6cBcV4ntxN
      TYWHq9cH+fpTuzN8RnYOP3mAhsYqfts/QJlfZnQ2QmnATW+/nw079tHaXEVF5Q08BUVIfNwc
      u81Vyre+9jQD01G+8ewugqNdTMVkdjSVUzqbwqKUUltbQ/vVKxzY+w2sqTnSskzKlO8qjWSx
      8sThwziMA9h8bkyrj3WlhVjsPkoKHXjzbTgPHsbvtmG6Cin02u/8/UfTBHLz93/2v9EdDmq2
      HqTj9CkKKyporXQwGrfz0fETlDbuYEcgybhipbq2gY4rl3HJOge/+gpbags+US3H+av/9dcE
      GmuYu9HJhqe+yuDZY0wn09R5LPg37WP00jFCsTR79m9nPKiQSqh89zu/jVP+dHMjyT98/1/5
      jd97BYuapu/cL5iQK+k8d4K45mZnnYNJowSXOkVfbz/f/KP/SVPxrTk7qoqu67hcS3ezLu8z
      ykNX4vzdj37Cd779H1FVhdNHfsxwxCRpONDDI0St5TTIwzian2P2+jkmgwn+8L//CYXOO/NZ
      qfJ8JjXGlb5JdrQ0LvmWlSrPJ5tAD+KRNoHs9gIOH9qGEg0h51WwtakBEwOby0/rxkbCc7ME
      owrbd+/CLaVwBSporCoiEr+7SSK7fcRG+/GVVKAnIoSSKolEitKycgJ5TnRrHrt2bkWNRmja
      uhOnkSCdsf/Sgcsao69vgJ//2xFSBiQjiyRVjUQihmZxsv/gbhLRCGk1dXu11cNisVqxpMIM
      jAzx+hvvMBdOsGXbVtRUktraOiLzc5RWVpLndhJJpEilIqQfrFPl/tm9n3nzr1WPqAlkoXlr
      KwXFJazz+ShzXGQ8kmZXfRM+SwBrZIqa1n3srHXzi2MXefy5LyDrHzGRKOCLG8o/lZeN1m3b
      cNgSON35WDwB1LkJTG8RTeuKGAwaPLV/E2MJL194rpEjR95l51Mv4rVlLtcXvvJl3v3gNJWb
      9lDhV3AZbpKLQTyFpdQW+ynwe2lu3EB+WS0B18OdKyzJDr721S/w9rGTNO98nPUFm3nn2Fme
      /+IXmOq5wpPPPk1TqcS1sShN6+pocPhxyjpwd1NByEz0Aq1oL9DKNoFEPpllRRNIENaCVW8C
      KYpCOLz0JLh7lUyuzJS0lcpH13UMw0BVH/y5YK1d21rLJ51OY7FYkOUHb+qtegA4HI4VqQaB
      NZXPSjaBYG1d21rLZ6WaQCDWAwg5TgSAkNNEAAg5TQSAkNNEAAg5TQSAkNNEAAg5LXu3/RKy
      mm6YzMcy78MkSxIBz72NEYgAED6XRoJxXviLsxnTqgIuTv+3p+4pH9EEEnKaCAAhpy0rAHQ1
      zjs/+ylXe0cxTZO+G50omk7H5XNcud4PgKklufDRKXpHZghODnHy1Dmin7FmVRAepWUFQGx6
      gOmkC6tFZX68j3eOfkQyEWIyJhEcGyANzPR34KxqYaLvOle6+tnSXELn9eGHU3pBeEDLegj2
      VTRR7uyiq2+UTc8/Scu6brBYic+NoOICE2KRBK5CJ3ZDY1E3cLs9pFNTJBIJ0un00ge6CcJK
      M02Iz33mW5YVAPH5UXR3OU45wb/v3qHEF8kr24AzNklY1SkoDtAzO0PSYqdQVpmensGdX4zb
      7QZYkbUAgnBPjDT8nw2f+ZZlBYC3ZB2VgWn89XuxyRKbd+4mUFxGYyyFYt+FNTyLvXozJf3X
      8e/ei9+q0DM0w/aWyl+euSA8AssKAMkis3XfY7d/Li67uUC9uqH5jvc1NG++9crFltb8Byuh
      IDxEohtUyGkiAIScJgJAyGkiAIScJgJAyGkiAIScJgJAyGkiAIScJgJAyGkiAIScJgJAyGki
      AIScJgJAyGkiAISctuwA0NJa5rNfBeFzaFkBkE4E+emr/8KJS50YhsbZ4x+SSKe5fPYk7x4/
      hwkYqRBHP3iPS50DjPa08d57HzAbfbinKQrC/VpWACQWplhMu6mrLmZxcoTOvhFii7PMx1Ty
      PG40YKL3BpWtB0lMD9M5NsvhfRvpuzHwkIovCA9mWQHgr9zEnkY/x0+dI69iHQ0VBaTVKJqU
      jx4cI5YGRUkjyxIWU0fRdCTZiqGnSSQShMNhsSheWFOWuS1KP13jUfK87tv/5skrw22NE0lb
      0GKLFFRVMHijjZTdT5XXztVrXRRWVuF2u8nLy0OSHu7ZuoKwHMtbFF+2gacO2XAXV2C1SOx/
      8hkcLhf7dm0njQ2nbGLJW89+VyF2tx+bpBOOJskPPJx1we9en6Z9PJQx7emNpeyoCTyUvytk
      j+Utipckymvrb//surXVicvr55NnI/rzC25nX1DgeNAyLul4zyz/emEsY1qJz/m5DoC5qIJm
      GBnTirwObLLowV4JYnfoNeo3/v4cvTOxjGlH/uAQrZUrc2xprhNfI0JOEwEg5DQRAEJOEwEg
      5DQRAEJOy/5eoKk2GL+UOa2sFfzNmdPWunQCfvS1zGmyDf7Dm6tbns+p7A+A/qNw9H9kTtv/
      +7DvcxoAhg6jmQ+JQ354Yy/ZRjSBhJyW/TXAPXi7c4o/fq09Y9ozG0v585e3rXKJhNUiAgDQ
      dJNoSsuYllTFAX/ZTDSBhJwmaoAs98oPLixZu/3tb+2iwGNf5RKtLSIAsty1sRCLiXTGtLSe
      ebZpLllWAJiGTuel8wQaNlNV6CO8EMSTX4gs6QSDYYqKCgCDod5u/GX1eGWF/tF5mpvXI4t1
      MJ9rPzgzxNXRzGsvfmt/LbvqCjKmrXXLCoDoZBdtA2GqzW48WjE/+vHbvPJ73yU1foOfnxvl
      2998kdDIdaYUNwMXL+CwpKmqKqSte5IdGyse1jWsjsmr8E9fzpxW2grfemN1y7PKLg0v8ouO
      qYxpTzWXsKtudcuzUpYVAK6CSozwGXS5Ck9+Oc31FehKlOHZBEV5TgDmZ4IU1zcwOzXAjGqw
      t6KCsbZp0ulidP1z3KNi6KBEM6ep8dUty0p79ddhpjNz2jdeBc+6e8vn1J/BxX/InHbgD2Hj
      N++vfA/RsgJATSVp2rqXmeAYyK1YZYlULEQ4EmJ0eJSo+jQen4v5pIJqseKxaCSTCWwOD4BY
      D7xWxWchMpE5TVPuPZ9UeOl8lMjyy7UKlhUATreP+ckzlDZtwyZLVNXWk19czTNPlVJSMYS2
      MIGvbjMjVy5Rvn4jRdYE125MsX3vXmw2GYBUKvVQLkQQ7seyAkB2+njxpV+7/XNj678fiG1n
      S0vT7X/fd/Dw7dePVzU8WAkF4SESA2FCThMBIOQ0EQBCThMjwSsolEjzK399IWOa12Hl9f98
      cJVLJPwydweAaWKaJrFEAo/bTSIexe70Yr/ViyMsTTdM+mYz7+Xjd4rvmrUo4//KcPc1jp5v
      Z11NNaop89jhx8jtKVPCSjnWPcs/fTScMe1wYxH/6dA9DrqtkLsDQJKo37iNDcE44clBNHcJ
      S+zQJwjLNhlKcqJ3LmNaqX/1l3IuWS/btCi2/GpcsokYwBWy1RIBIOH3eAjGIhjOfGxW0Vkk
      rCIlCgtDmdPsHnCv3MTKJQLAYDaicvDQY3R1XCae0nF4xEPcijn956BnXqTCgT9Y3bKsRWPn
      4Z9fypxW9xi8/JMV+1MZ72oTC9tam7jR2U5hVTMBt7j5V9SJP725r08me34HEG3O1XJ328Y0
      6Lh4hokotKyvYWJ0hLQhjjUSstPdAaCrhDQnmzfUECivozxPIrLEkjpB+Ly7u20jO6gJWPjg
      6IfIFgObp4SNXtsjKJogPHwZxwHqNm6ntsnAMCUsskW0SIWsdXcAGBrtVy+yGLt1uLXNzZ5d
      O3DZZQwtxYl336O4ZTcttWWMDfZTWlvP0I1rxPCzc0sj6CrXLl8mv6qRAmuS6wPTbN+1A5dN
      dKUKa8/dd6Uk07J1N9taNhAoLGLD+gYct27e6GQP41EH6WSI+fE+Xj9ylGQqieQtwZgZIKjC
      /EA7UvF6hm60cbGji6Z6P+3XR1f7ugThnmQIAAlZlrh87Qazc7P0d14mnLy5mN1X3ojfmGVo
      fI6Cyg1sXl+B7PCxrszHWNQk3w6hUAyP14PD0IioOj5/PkoiJA7KFtakJdolFor9DkaGBonp
      dtz2mzNB4wuTuEs2YCeBfus+NrUk777zIU88/wxWoKDQT2hxkaTFRr5NYiE4j9NXKA7KFtak
      JUa4TOwuD81Nzbj8BUiYgIS3qAa/dZD89TuwWSSaN2/FaqoUFBXS3XaN+tpK8mq24L3RRtX2
      XeRbUzefAbZVrepFCcK9WnIukNVqwWq1YprS7W9tSbax94lnb7+roqYWgAOHH7/jtzdu3Xnr
      lY9dO4pXvNCCsFKW7Jpxuz2YpkEqmUAX86GFLJW5BjANOrsHsEgGadNKSjNxirEwIQtlrgEk
      CwVeG6Xl1aQ0sImdbYUslTkATIP+3j7mo3HKy0rFzs5C1rq7CaSnGZsJ8isv/ya6YYIkYRcL
      YoQslWEqRJoLZ09RVnZr1Y3Vxc4dW3GKXSGELJThIViiqLyalk23zs+VLNhlUQMI2enuALA6
      2LtzO06HOGxZyH4ZvtolJEOjt3+AWCzGYH8v0eQS61cF4XMuw3oAmJ8apb9vhMXgPHZPPjUO
      0f4XslPGGqCyvpnyfCcT0zOEgkE0sSZYyFJLPN0aRJIaFosE6RgpVUyFELLTkpPhSkuLcEai
      zEfS2EULSMhSGbZFMYlFo6jxMOcutFFaVSN2hhayVsZ9gabGR1BwsHfPDpKxKPqtE8VN0yQc
      DKLc+tnQdUzTRNfSaLePQDXR0ml0w8Q0DNR0GrEITFir7g4Ai8yGjS3EQkEamjaRCs+S0m7e
      wcngMK/99AhvHzuFkgjxox/8kEgixvvvv887759EB1ILo7x99DgfnrlE2/mTnPzwA/qnwqt8
      WYJwb5ZcEpnv83C9ow3T6r69KF6yyCipFBuam1GSCnn5fuKhKfylTdS6dOYVmBwcoXnnQZyp
      ECMRhccObmd6eGQVL0kQ7t2ScxxssoVQKIT+iRVhsivA4YN7udF2Hmd+CX6XDYvFChjopoRs
      AdlqwTBMDElCliRMw0CyWMWieGFNWrIbdDaicPDQIbxyioRys31vKBGutbfj8ZUgW8Dj9eIN
      lJNeHGJO8mIJTpBf18jQtdNYCyppLsvnxEcd1DfVi0XxwpqUoRvUREkmqa+rYbC/n4p1reS7
      br7NmV/Jr3/z17E6nViAvY8/BcDjTz93Rw4vPP/87dfrtzy0sgvCA8u4HuDkqdPkO8Hf+BgN
      5Z47ku1O52qVTRAeurubQIZGOBIiHotw+vgxjp+5QFLVM/yqIHz+ZZgO7eJXv/ZrmKZJ7egQ
      xeW1OMW+nkKWynBOsEE8kcRms2KxWJBlecUfXH/lL08zupD5hJSfffcA64q9K/r3BGEpGR6C
      Da6e/ZDukWlqqqq40T/B448dwO1YuWOSwsk0oSUO3dDFzFNhFWUYCbbx+LMvsm/zBgzTxOF0
      YRNzgYQstcS2KCbBhMkzzzxDnhwnkhArwoTslDkALBY2N1bz5s//DcNbRcAjtoUTstOS6wGK
      q9azaWOMmvV1WMTgrZClMq4HmBkb4N33PyCtS1y+cJawOCVSyFIZTogBrz+AnowwPT2NJtlu
      zwYVhGyTcWMsjz/Art27SShpzp89R1Ldufo7wx35Ixi7mDnti38K+S2rWx4hKy15Qsz0xChz
      4RRFlfW4HsW2KAtDMNOROU2Jrm5ZhKyVsW2TCM0yPR9GUdPUNWzAKTbHFbJUhs1xVc5f7eHJ
      517AClw4c5yiwsfJc4rBMCH7ZNwYS7aAppuAgUnmk+KnR3r4yWs/IxiJ03bpIy519AE3T408
      d+YkPcNTzI8PcOLkR0QVMZtUWJvurgEsNnZubeLimRNohoX65s34Mnz7d13vobSsiGhwium4
      jGV+kPTmDQT7OvBUb2ay9yojks7erevp7Bxi/871q3E9grAsGR+CPYEyDj1WSDKlYnc4M9YA
      23dt54033sLpLyIxN4oqucCEWDSBs8iB3dBY1A1cLjdpZZpEIkE6nRZrgoU1ZclD8i6cPsF0
      NIXP7WXfocN47He2lgaHxlnfUMnc9Di+0nU4Y9OEU2kKSgronpoiKTsosipMTE7hDZTgdrsB
      CIfFFinC2rHkHGdFTROLRpHNzFOUN25q4nJ7L08f2k1wfADVXo0tvoCtqpWKwW58u/fgs6r0
      jcyxtbnioV6EINyvJecCHTj8OKNjExSWVt717Q/g8hVw6OA+ACrrG+9Iq2vc9O/vomVj3kqW
      VxBW1JKnRL575A1CkRjvv/H/eP3Nt1gUU6KFLJS5BpAkAoEAiqLgyStAlyTEQi0hGy0xxCvh
      tktcuXSesWCSQ48/TaFn5ZZECsJasWQvUCht48DePcQUFUMSUyGE7JT5zpYk3DaTkqpanO4A
      fpf49hey05J3dmRuhmDSxOn0oGkGNnFMjJCFlnwG2LxjJwG/j/KycrEgRshaS3aDdg9OoagK
      0dlB0QUqZK0lngEs5Dt1hgYGieETzwBC1lryzi6pqGUTdhK6Lp4BhKy15JLIaCSE1eGlprBE
      PAMIWWvJh+DyigoS4Xmud3WRFAtahCyV8YCMN1/7Z1KeWnwuG1967vDNE+MFIQtl2BzXylNf
      /FU2VflJhIOcOneZVFrUAEJ2ursGkCQ8vnxatu2iZdtOYtEo1gw1gKamGJucoaamhnQyhmpa
      8XtdgEkktIjd7ccm6YSjSfID+WJ7RWFN+iX9mxJenz9jyqUzJxifmyeS3ENoZpJYXOXZF59F
      mxngXPccFiTy5CS6BP6qrWyqLXgIxReEB3Pf3Tsep0woYSHg1JiaDuLw+pBNmGZvg9QAAAIL
      SURBVBqdoH7TVpxqhPGYyvZtmwhOjGOaplgPLKw59z3CVdawhT1c42J7L7VNm3GHhplPg91h
      Ja6bGJKMQzYwdQ2LbCOZTKJpmggCYU257xpgcXqE9v5ptu3ch5yYZFbyYl2YIL9+ExMdZ3CX
      1dFaXczJc11s2NSA2+3G7/eLg7KFNeW+a4DGLbup37gNm81GQ1XpHWlPP/vxwdk1zfdfOEF4
      2B5oiNdmEyfHCJ9vYo6DkNNEAAg5TQSAkNNEAAg5TQSAkNNEAAg5TQSAkNNEAAg5TQSAkNNE
      AAg5TQSAkNNEAAg5TQSAkNNEAAg57b4DIBmZ5+TpsyiagWnqzM4Fb6UYDHR1MBdOosQXae/s
      QReLwIQ16r4D4PzZCxhKiMHxOeaGOnnjg3MAhIY7mTN9tF08z7nzl8h3pbjWNbFiBRaElXTf
      AVBXVUzv4BR2SWVkLkVRnhOA+dkFCotLcBkqQUWnrKyMeGgeVVVJJpMrVnBBWAn3HQCGPZ89
      rdW0d1wnEgkxOjxIVAWvz00ykUS1WPHaLCQScWxOLxaLBVkWG+wKa8t9rwl2202uTkZ57OkX
      KPFZKa0cRluYwFvfyuiVy1RuaKHQlqC9Z4btu3djtd68+UUtIKwl978tSm0jL9V+fEB266aP
      X+858Njt14cr6u/3TwjCQye6QYWcJgJAyGkiAIScJgJAyGn/HzdGK6xg0P8hAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Across.Table.County' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.County, Inc, Auto' width='192'>
      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
      Tvh/HUcMwLVuxQAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Inc, Auto' width='192'>
      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
      QBHW/j8HJgh46pum9AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
