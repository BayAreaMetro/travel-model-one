<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='TravelCost Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\TravelCost.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>4</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>34.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people</remote-name>
            <remote-type>4</remote-type>
            <local-name>[people]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>people</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>6.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>4</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>4.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;$30k to $60k&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;More than $100k&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autos</remote-name>
            <remote-type>4</remote-type>
            <local-name>[autos]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autos</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>4.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2072</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>20968.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>total_cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11854</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>8254.8989090714294</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_cost_indiv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_cost_indiv]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trip_cost_indiv</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11850</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>6584.1111111111113</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_cost_joint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_cost_joint]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trip_cost_joint</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8454</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>325.25</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_fail</remote-name>
            <remote-type>4</remote-type>
            <local-name>[cost_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost_fail</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>17</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>16.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pcost_indiv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pcost_indiv]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>pcost_indiv</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9539</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>6666.3139090714285</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pcost_joint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pcost_joint]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>pcost_joint</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4404</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>582.81512954545451</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010 Base (v0.4)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040 Holy Moly!&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:1]&quot;' value='Change in Average Household Out-of-Pocket Travel Cost' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk]&quot;' value='% Difference in Average Out-of-Pocket Travel Cost from Base' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[sum:freq:qk]&quot;' value='Number of Households' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[usr:Calculation_4070915162654650:qk]&quot;' value='Average out-of-pocket cost per Household' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[COUNTY]' role='dimension' type='ordinal'>
      </column>
      <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Automobile Ownership Category' datatype='real' name='[autos]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0.0' value='Zero automobiles' />
          <alias key='1.0' value='One automobile' />
          <alias key='2.0' value='Two automobiles' />
          <alias key='3.0' value='Three automobiles' />
          <alias key='4.0' value='Four or more automobiles' />
        </aliases>
      </column>
      <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='real' name='[incQ]' role='dimension' type='ordinal'>
      </column>
      <column caption='Household Income Category' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:src:nk]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:county_name:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across County' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:src:nk]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[usr:Calculation_4070915162654650:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[usr:Calculation_4070915162654650:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:1]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across County Change Chart' tab-color='#eaeed3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Change in Average Household Out-of-Pocket Cost</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk:4]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='ColumnInPane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:4]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk])</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk] + [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:4])</cols>
      </table>
    </worksheet>
    <worksheet name='Across County Chart' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' value='26' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='County, Auto, Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Typical day out-of-pocket household average by county, income quartile and automobile ownership category for </run>
            <run>&lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde'>
            <column aggregation='Sum' datatype='real' name='[COUNTY]' role='dimension' type='ordinal'>
            </column>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Automobile Ownership Category' datatype='real' name='[autos]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='Zero automobiles' />
                <alias key='1.0' value='One automobile' />
                <alias key='2.0' value='Two automobiles' />
                <alias key='3.0' value='Three automobiles' />
                <alias key='4.0' value='Four or more automobiles' />
              </aliases>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Household Income Category' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autos]' derivation='None' name='[none:autos:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[usr:Calculation_4070915162654650:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names] / ([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:autos:ok] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]))</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:COUNTY:ok] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Income,Auto'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average out-of-pocket household expenditures for transportation on a typical travel day for </run>
            <run>&lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Automobile Ownership Category' datatype='real' name='[autos]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='Zero automobiles' />
                <alias key='1.0' value='One automobile' />
                <alias key='2.0' value='Two automobiles' />
                <alias key='3.0' value='Three automobiles' />
                <alias key='4.0' value='Four or more automobiles' />
              </aliases>
            </column>
            <column caption='Household Income Category' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autos]' derivation='None' name='[none:autos:ok]' pivot='key' type='ordinal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:autos:ok]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='County, Auto, Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='67'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:autos:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Income,Auto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:autos:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across County Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across County Change Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='County, Auto, Income' width='192'>
      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
      rX7AgAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='Income,Auto' width='192'>
      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
      7XkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='184' name='Across County' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across County Chart' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across County Change Chart' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
