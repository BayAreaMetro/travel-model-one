<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='TravelCost Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde' version='8.3'>
      <connection class='dataengine' dbname='M:\Application\Model One\Value Parking Pricing Pilot\Scenarios\AcrossScenarios\TravelCost.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>4</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>34.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people</remote-name>
            <remote-type>4</remote-type>
            <local-name>[people]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>people</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>6.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>4</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>4.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;$30k to $60k&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;More than $100k&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autos</remote-name>
            <remote-type>4</remote-type>
            <local-name>[autos]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autos</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>4.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2720</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>21014.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>total_cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19539</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>7283.1300000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_cost_indiv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_cost_indiv]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trip_cost_indiv</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19538</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>7283.1300000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_cost_joint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_cost_joint]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trip_cost_joint</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12124</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>427.58000000000004</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_fail</remote-name>
            <remote-type>4</remote-type>
            <local-name>[cost_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost_fail</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>23</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>28.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pcost_indiv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pcost_indiv]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>pcost_indiv</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>15376</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>4474.1768924642856</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pcost_joint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pcost_joint]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>pcost_joint</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5937</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>562.14999999999998</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2015_04_137&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2015_04_141&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2015 (v 0.4), Baseline&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:1]&quot;' value='Change in Average Household Out-of-Pocket Travel Cost' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk]&quot;' value='% Difference in Average Out-of-Pocket Travel Cost from Base' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[sum:freq:qk]&quot;' value='Number of Households' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[usr:Calculation_4070915162654650:qk]&quot;' value='Average out-of-pocket cost per Household' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[COUNTY]' role='dimension' type='ordinal'>
      </column>
      <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Automobile Ownership Category' datatype='real' name='[autos]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0.0' value='Zero automobiles' />
          <alias key='1.0' value='One automobile' />
          <alias key='2.0' value='Two automobiles' />
          <alias key='3.0' value='Three automobiles' />
          <alias key='4.0' value='Four or more automobiles' />
        </aliases>
      </column>
      <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='real' name='[incQ]' role='dimension' type='ordinal'>
      </column>
      <column caption='Household Income Category' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:src:nk]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:county_name:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#98df8a'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No Parking Fees&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across.Chart.Change' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Change in Average Household Out-of-Pocket Transportation Expenditures On a Typical Weekday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk:4]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='ColumnInPane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:4]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' value='380' />
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk])</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:4]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.County' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Household Out-of-Pocket Transportation Expenditures On a Typical Weekday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' value='26' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:  </run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14'>&#10;Average Household Cost:  </run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.County' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Household Out-of-Pocket Transportation Expenditures On a Typical Weekday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:src:nk]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[pcdf:usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[usr:Calculation_4070915162654650:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[usr:Calculation_4070915162654650:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' value='49' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]' value='78' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk:1]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[pcdf:usr:Calculation_4070915162654650:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]' value='76' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' value='220' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.County, Inc, Auto'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Typical Weekday Out-of-Pocket Household Average by County, Income Quartile and Automobile Ownership Category for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Automobile Ownership Category' datatype='real' name='[autos]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='Zero automobiles' />
                <alias key='1.0' value='One automobile' />
                <alias key='2.0' value='Two automobiles' />
                <alias key='3.0' value='Three automobiles' />
                <alias key='4.0' value='Four or more automobiles' />
              </aliases>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Household Income Category' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autos]' derivation='None' name='[none:autos:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[usr:Calculation_4070915162654650:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TravelCost.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]' value='52' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names] / ([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:autos:ok] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]))</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Inc, Auto'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Household Out-of-Pocket Transportation Expenditures On a Typical Weekday for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TravelCost Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde'>
            <column caption='Average Out-of-Pocket Travel Cost' datatype='real' name='[Calculation_4070915162654650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*sum([total_cost]*[freq])/sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Automobile Ownership Category' datatype='real' name='[autos]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='Zero automobiles' />
                <alias key='1.0' value='One automobile' />
                <alias key='2.0' value='Two automobiles' />
                <alias key='3.0' value='Three automobiles' />
                <alias key='4.0' value='Four or more automobiles' />
              </aliases>
            </column>
            <column caption='Household Income Category' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autos]' derivation='None' name='[none:autos:ok]' pivot='key' type='ordinal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4070915162654650]' derivation='User' name='[usr:Calculation_4070915162654650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]' value='42' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:autos:ok]' value='111' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]' value='C1033%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]' value='128' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:autos:ok]' value='68' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[usr:Calculation_4070915162654650:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:autos:ok]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.County, Inc, Auto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='95'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:autos:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.Inc, Auto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='79'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:autos:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across.Table.County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='71'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.Change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='60'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TravelCost.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Indiv.Table.County, Inc, Auto' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy92ZMk2XWn9/nuse9b7pm1d1X13miwOSA5w6FIgiNRksnmRWb6O/SgB5ie
      xmR6l8z0JDOJo+GAI5BgowEQS+9dW2ZlVmVW7ntm7PvmEb7qIauqu4EqVmSjNECh8jMLS7MI
      jxPX0/36veee8ztX8DzP44wzXlLE33YDzjjjt4n8227AGWf8Jnx1AiMIwhM//9X3v/qdsw5w
      xgtN5Wibg2qPUDhKQHaJxJOIkki/06M3NMkf7nD11beRJfDrGnv7B3QqB4jJi9T27p9Ngc54
      sWk1uly+dp2g0KXRt/j8579g72Cfzz9foFHL03dVjnZWOC7WKextYNsme9UBU2NpAIQzJ/iM
      Fxl72GN1bYtYKkOzUiCWSlMqFAiEEsRjOs22gdlpMHHpNfyCwfKDLRKpFJncGJVi/qwDnPH7
      T6PRIBaLPfGzsw5wxkvNmQ9wxkvNWQc446XmrAP8nrP5YIn5+Xka3QGu6+J5Hq7r0iznafVN
      XNd9/P7vI8NenZ/+5J8o1TtfO/9H53sWB/gdwPO8rwVsnhTQeXgkrgui+LTPf52N3WO++93v
      srl0k5vFGka7Rcf0kPAIR/xosUnyy59z7t2/5DtvXBi1xbiuhyCAh4D4sL2Pbqqnt/+fsfjw
      ux48tvc8ECWF/ME20ViYf//Jp0xMzzAYmPzZX/83ZEI60ve+973vPbdfO+MbUdq5z//x/Z+T
      Etoc9aDbbmMOOpTLFTqGiTPo0DOhUT3gFx/eJqgJCKofTX3280t0B+wdHKHqPgamRSIWJZ3J
      EgiG0TSFiYkJBkafSDLLeDo+YotN/qf/8X9GNMvcP+yBZSDicrz7gO1Cm16nRTASRT5FRz1Y
      /owffLzM4cEefgUcT+Dw4BDV5+Nwb5dgJIZ0CnuPsIcGtgvmYICm+whGU0zmUkTTWQKqfLYK
      9NvH44O/+/cUmgMunZsh3+zSrtVRQiECkoCkSAzbLULRKJ6i0W+2kUULPXmOv/yX7478G67r
      giA+p6frkP/93/0vCPEkouxDdAb4AnHeevMyd+7cJxKJkL30Nm9fzI5scf/+DX58Yxk5GCWp
      mpgW6NEcRu2AwdDi1T/+L3n9XOZr33FdB88DUZJ48lmdjFSi+PSZ/lkH+G3juaytbzKRDrN9
      WEWUoNnqEo0n0KSTyypjYYk6Zq+BK2hY/RbB1BSXz02O9BPNwjbzmxUmJ3JENAElGKdXLyLJ
      ErulDuNRndTELAFdGbHRNhsrD7BcgaFt0e10iUQSTE2mOD4u4w/40cMpxpKhkf8NrfIxPVTK
      xRJOvwWCzepukz945xrF/DGzV15nLBn+2ne+/7d/w2tvvodP85BkHcN08SselicR1iW6tsP+
      1hFj2SipsUkKx0eMjWUpFGvMzk4hCsJZB3gZ2Fn6DDN5lYtJeP/DRbCaDOo1wukcguqnWdgn
      ce5t/vTbV3/bTX2MYw3oGC7RsP+px3z/b/+G19/5DveX7jCZinFv/ZBgPIRPlPAkgffefYPP
      PrpNp10mEAwz8cq3qO7eJ5OMoY1f4+pk/KwDvAy4tsmDBw9QgzGcXhM1FKPfrBCMJOh0Ohjd
      FomJ85yfGn3K8rvAxuYmFy9cYHNzA12Cg2KTWCKGKoAkefRsD8X1MPodoqkMlWKRZCpFrd7i
      2mvX0WXprAOc8XJzFgc446VGBn5vgyBnnPEsHi8kG4YBgOu6/+yy0TfC8/B4eoDkSaqdJx/n
      4jgukiw/ZdnrtM169u8+7ZiT4BWAhyCIeJ6DIIjfKAh0xm8P6Xvf+973BEFAURRkWeB/+1//
      HXOvfwvP9RgOelQrdXy6TK3Zo1UvEwyFODo8Qvf7qVQbpFNJTKNNtWXguTa2OWTh7gIT0+cQ
      3QGFSov7N37KMDBBVHU5LlaJRILkCxWiYR/HxSoLN28QSaUwe20c22JhZZOL52ZRFOVrr0Gv
      zacff0gsPU6n08MzewxMm/7QJh6Lov7K8c963VtcYHxqln6rxtCVaFWL+AMBStUGqWSMGzdu
      cnSwTTI7QaVwhCipVOt1Uqk0S3c+5LBoIblt9o7yHO7ucrjzAMefJZWIoKvqqdryqy+73+Dn
      n9wgGgqyvrnN+PQsCkOWVtaoV8o4gko6GR/ZXr9R4uMbCwT9Opvbu0xOTbOzsYIj6nidApWh
      TjYRHtleq3TIZ/PLBHwqGzsHnJuZYuX+XertLvXCHg1TYyKbGNle9XiX2/c38CyD/XyF2akx
      Vu7dwxgYHB4co4djxCKhke0V9jdZWttHFW328xVmpsa5f3ceXyjG8tI9ps6fQ1eUr6dC1Pcf
      EB6bYf7uA4zDBZRgmp7lEfFJTJy7xIOFG/RtgfMz03z6xecEw3EiqRw3P/mcoAKHXYGE4mGI
      0Koc89mNBaYyIapDmWnZYf7GLTzNxwc/+5DvvHWJ//PjT/gv/uIv6NSOuXl7kW69yFg2hyk/
      eenLtQZMX3mTg/UluraIImsEdBlZEEinUyjfcOC6desW/ngCod/luNSg3e8zNTWOpiq4WoTt
      +7exBIGbny5x/e1Zir1ZcrksNxfLvPPaOxRrC8STU5R3bzO/eJ/L03/6zRryFWTVh+iYSP4w
      qrvLwLQp7u5hOxaqLLO7t8vs1NjI9jRfANfs44+m0CoVBAHMoUmjUcWqH6OMPTlf/mn4AiFs
      o004NYZSqgLgCipYFgIq185PnMqePxBk2G1R9fsJqyIuIIgCe3t7xMIR9g6OySYiI9sLBIN0
      2/ukc69Sa2+DZzE0XZrNFkG/j0eT/q91AMPV+bf//f/A8e4WXuY7TJ6bY/neCplMEl8wwuD8
      JXRNYX1tnVfffg930CPsk3n9+ivUujbTGpSafeIhnUhqjD9+T+Cw0ubd8WkyuTEGx2scDXT+
      u//qzykUq/z1X/4rDvJ5XvuDP0WSPOxhBl8kRafdOZky/cpJ1RstPBtyU3O0e0MSsQiSO6TR
      d5G/wc2fTSdZW9vg0pUrOKLKsNPEH4wQ6BkIQCqdxh8I4BptSq0+r76ZYXwyjqxCR9KYnByj
      UCgwM3edZvmQC6+9y3lRxbBd/N+0Nz7ENgcMTItmpYToCzM0eoRCQaodA79PI5wa/eYHMIcG
      pmWztXIXtAjdTodoNIphgxaNYXr2qewNjB6WbfPg7i3UUIpOt4uMjeSPIQvOqR9GhtHHsh0i
      fo2h7dHv9fH7NM5duEyvWSc7fboOZRg9bNth4dZNEhNzdDo9orEwsqoRjUYer/6MtAz61Xmw
      bRrsH5eZnZnmJDXDo1yuokoe/mgaVXqaEYe9vX2yE9PoigSuTbneIhkNUW/3SMZP9wQCcBwH
      SXryD7bbbcLhMI1qET2cwveVhp05/Wc84usjQKvKwvImuWyKSqNDMuKn2bfY31jmu//1v2Vt
      6TauEsAv2WzveFRLx7zxzjv84ic/QRZNrr77p7QbNSIBDVEWcV2RnukQlC0ExcfNz2/w5rsu
      jtHEFwixsrFFJqzTsHx890/fe2Zj66Vjdo+rpNMpRM9k6cEaM7ksiu6j3mgjyxKJZJxWx6BV
      OSI1fg6vtYfhm0LGJqwLCFqYqfEMpmniuS6O5508DQQBz3URRBGEkwxHz/NAEBA46TSPOtzJ
      XxHHOVkweO6LBmf8Z+NrHWB/4x6h9CUW791hMqGzUhGoNTokQwFUWWBn/xBFlmm1m6SzU5i2
      ha6IBKIJkgGb5XvLzGT93LhTIBpWCIaT5EtVJNsgmckRSSZZX7yDP5HF2d+j26qjKedGTspu
      tdscHmzTG5iokkNUc+l5GrUHS6QnzyMgcH/9gImkH1fy0WvWaFdKVIYG0bAfO+rHEgZMjZ8k
      VS0v3aTakTg/lSBfrWP3DRSvj5y9ytVz4yzc+IKLl8/jiDqpiMR//A/v89b1izRsCU1y6TY7
      SOEIV2aniEajz/XCGK0KH95Y5PrlOcptm1evXmJ3fZm+KyOYHbJTF0mfYk7crhzz+eI6f/RH
      3+He4l2+/e63WFtZIhhL060eY8gJ3nhldmR7teNd5tcPuHrpHPlSnXfefBWjVWXjuIldK3Dl
      O9/h6UkMv05xf5OVvTIXZsYo1Tq888Y1ttYfYAkqnUaN8bnLjKdHnyUc7qyynW/z3jvXWVrZ
      4u3Xr7C6soKg+Om3G0xffo1kWP/6rXfprT9i/+CYv/rLP6Ncb3Mt7KPWGeKXPUzbQ5VF3n7v
      O2iCjaAG8FwbkPgX/+IPkEWP11WdSr3JtVffpFxvE4uG6PQtAoqHK/sQXBsQsIc99NC3sC0T
      o9vBFxrt5klnsrzljxLUZYauhCJ62EODy3PffZwjf8FzaXcHzCoelqChXZhFVHSa7S4hXcIW
      9a/ZW999wB+8/Qr5SoFQJMewvsbC4j1evziBrGrs7x8DkHrtKplsgrW1baYvz7BXGvD2VJhb
      WwcE/JHn3gFk1YfgmlTrTRxXZGDa9Po9eraAhkuz2TxVB1D1AJ7VZ3drg87AxvM8TNOk2e4i
      IXHx/NSp2qf7T5zgQDyDsbmD63lsHxZwLYeQ349zyvP1B4IMuptEU29RrbdBEMnlsiwur2Jb
      Dt3+4FT2AoEgvfYhm1u72LYFosJYJkHVUEgJA9q9/q93AEGUmZmZBmBy7KT/TgS//Pzf/PV/
      +8Qfi8W+vPhT4z4ApoMnFyccftI3Hh3vJ3aKGycQjhF4or2vEwz+ehZiMPjlibiuC4AsyUxM
      TFAplxifuITRLJK88BqZ8yKdgU0uk8T2XDxRB0kmoKu88kffoVGv895rk+QrTd5751u4zmkv
      97OxrSGmaeMLRBAHBka/TzgURrIFdMlDVk6nZbJMA9Ny0AMh/K0OrU6XSCTCwFWQpCD+pzpv
      T2Y46GPZLtVinlA8Qa/XIxL0U2kNCEXCnM4aGAMD23FZWbxDMDFGt9OmWCyTTKYx+n2Cfu10
      9gwDx3UJhUJ0+0M6zSrz9za4dPkizYFHJnNi76XMBXJdF9M0f9vNOON3gJeyAzzCdR0c10MS
      BNyTNxAl6alOsG3bSLIM3okc0LZdJFHA9U5kimfO8IvHSy2JvDf/BQ82i9RKBwxdl9V7yxT2
      HlAeaMRjYW5++gn+gE7XsAnoDv/3//WfGJ8c46OPPsOzeqw92OCoWuHg4IB6tYYvEETXTzdU
      Pw2jVebHP/+EgN/HzS++IDM5i2D3ubN4n0rhGAuFSCgwsr1W+YiffXwTPIuDfJl0Kkl5f5XD
      hk31cJ2mIZKIBp9t6CHVw20+vLmI55hUGl2S8Qj3785jCwIrd+8ycGUSsRHmqw/J767z+cID
      piZz3LqzwOTEOJv3b9N1FHbWljFFP9GQb2R7B1sr3L63xbDXpDNwiAV1Vu7Nc1A1qB5t4o9m
      0BTp5c4GzeSy1Col2t0elUqeUDSH6FrcvruIKgnIms7e3hEHu1vgyeTGkhSrTcazaQzLZTYX
      wfA0wgGNrfsL9N3nV2NAVn2Iromk6UQSaYKaxPb2Lma3TqHaptvtnMqe5gvgWT3WN3exBn1s
      1yMZi2GYDmNjOZqt5qns+YJhbKNFo2PQajZwPTAtk3phB19ihk6zcip7gWCIYbfJ6uo6Q9vB
      A5LRMKagkYqHUeTT/W8DwRC9dpP+YEiz0cCTFERBZmYsylGhimk/9ANPZfX3DFlSmJieYm4s
      hiX6MFpFUpfeIHtRpG3YjGfTX3GCFYI+jUw6A1YInyKwla9zbUKnM4Q//ou/wh10gNGfUv8c
      tjVkaNlYg5Ml5E6nQzQaodE1mI5rKMqo8sUTzKGBZbtcPD/LcDCk1+0S132E/UPyxRLJeOpU
      9gaDPrbjEotG6Hb79LpdopEojqzRKO6Tnr50enuuRyQapdsz6HQ6aP4wSr/Ng+0C77x7ulUq
      w+jjuB7RSATD8uh2Oki+IGGfTioRxbZtQHs5fYCX8JTPeAov5QjwaA3cdV0EQThJAX9iZQEP
      1/EQJPHXPvM8D9uykBTlxCkGLMdBEgU8Tzhzil8QXsoO8Ih7Nz4mdfF1bn32GX/47mvIWoBm
      q4sm2kRS4/QK69xcr3Pp8jRjsRDV9gBdsBB9UZIBl//4g1/y53/2J9y+u8xMLkKl3kP1y7g2
      +DSd2XPniIRHdyy/itGq8MsvFrlyYZpitc3rb77F4dYyhi3il2wapsa3Xr88sr125ZjPFte5
      MDNB33S5euUSa/fvYoky7nBIduocYyPXBYLq0UkkeG4qx9AWuHb5PPfu3kHQg4hml0B6jpmx
      xMj2CvubrOyWefPaHPvFDm+8co6t9WVqPRfBtbh89TXCgdEXGA63V9nKtxlLBhDUIBfPTXP3
      zi1SmQzFcp0Ll6+epOyMbPH3EDkQY+3WJwRicQ7zJfbW71Cv11lYXGNzawdJcJFlBaddZ+2o
      zIMHKxwXquSPdkHSyaTCVJpdxtIxLFdgPBbClnUCusL2g0UM75s/Xx45wbVag+Ggj2k79Ht9
      un0DSRA4f2HuVPZUPQBmn43tPcyH823LE3GbBcptk263eyp7vkAIx2izuXdIv9fFBVxJxTGH
      5LJpWu32qewFAkGGvRaSHj7JGBAlJARmZqdwHZdm+3ROfyAYpNdpsn+Yp9ft4XkWlg1bqw8w
      nS8jyy/1CJAdGyOWTCKKEqbRRlLTaL4o0YBMKJEl7POYNOqMZ8JUWh3UySnGUgkQPERZIaDr
      pNNpnIEfVXI5rHaY9csMXJnv/Os/xx10IaI/uyFPwLGHmLaDLxBGUk2GRo9IJIJsi7iKSCyg
      nsqeZQ6wHJfz52YYDof0ez10WcBJTjFhWaindKqHQwPb9bg4M4PRH9Dr9VBwEP1BitU2icTp
      KkwMBgMc10OWFcLhIN1uF0fxkwz5qQYDqKeMfA8GBp4LMzPTmI5Ar9MnEgkRjUUZGAaKfBKr
      fiGc4Ee1M58XZ5HgMx7xQowAnucxHA4BME0TRVH5TaW3j53fZziqTzvGdRxcD8BFFGUcx0KS
      JATxaWX6zvhd5IUYAR5xuLVG2xYYGH2iwQDxzBiNcpGJmVlU+bTpV3Dn1g1ef/vbtKp5bMmP
      0SiTyGQp1Vqcmx7n448+xXUMrr/5bZrlPKFokla3w/m5OW5/8VNMckykJErNLlbPwOzXyV55
      j4vTaZRvUMj1qxjNEv/06QKvXz1PuW3z+vUrbKzcxVVCjEdEjvsa186Nj2yvVT7k4/lVXrkw
      Tc8UuXblAuX9B9SdMF77CENO8fb1cyPbqxxuc2t1j/PT43iSzqVz02yuLWM4IqLZIZg+z+xE
      cmR7+d017u2U+ZffeZf5hSXee/ct7ty6iaz56LbbTJy7ysz46Pb2N5fZPG6TTfjx5ADXLs+x
      dn8RCxVjMOTS1etEXzQnuNU1OHf+PJgtqs0+d375Y9Z3dtk+PF3U8Ve5c/sOGxsrHO3vcX95
      je3tXWwEdF3FF4yyuzJPuVrk5+//ErNfpdiDXC5HsVgkmxvHtXtE42NgDbi7tIz8HCpDyJof
      ybOo1prYwx6GaSNLMvt72+zsHmI+HBFHRfMFwerTaHXpd9tYjksyFmNgAyhcuTRzKnv+YBjH
      aNPsDmg16niCwOR4DkHSGc9labZap7IXCIa/Egl28WwT0RejXdonOT5Do1E7lb1gKEyv3cBD
      5HB/D0+QGBvLsrW2gunYdHonVVBeiCnQIy5dvsjG+hqTc1cBCXc8Sa1aJ5f6Zrn4uUyKtbUN
      Ll99BUc40QQHQlGa3T4ikMlk8AUCuIMO5WaP19/JMTYZO9EEyxozs5MUi0Vmz71Kq3zIxTf+
      gIvPSxNsDTEtG38oimj0Mfo9fD4fszNz+CWLtnu6TmaZA2zbJRSO0u/36fW6xDU/kYCFK4a/
      QTq0ge14xKNRur0evU6H+VvzzF6+Sr5cI5k+nWZ5MDBwPYjFExiDIZ2BiWi2SU5dolE8ZOrC
      tW9gTyDg9zM9O0uv3SRfqvPK9dcYGMZjp/qFmgL9KrZtIz8lR6TVahGJRGhUCmjhNH7tTBN8
      xq/zQo0A9dIxO0cVUukUkmdyb3Wd6WwGRdOpN9vIskwiEafVNWhVjkmOz0JrD8PXQcbh1WuX
      H6c5m6aJ69jYjnci7hdFXMdGkmQQxIcR3a+nQ1umiayoWJaJoshYloMsS08V5p/xu88LlQ5d
      OD5kfXMDyxHp9DponoGtJSjurBCOJREFka3jCkHVY+CAYNvUq0ccl3uY5oCpmWlkUXwscF9e
      vMnGbhlNtFjf3iG/d0Bxf43yUCMeDXH788/x+dXH6dD/8W9/iCZY7JXrVMslDnZ3OW60COo6
      Pt83W+9/GkarzE9/+RmK4LC6sUMyM0a7tMtOocHx3g4D2yMWGT3duFU+4pef3UZwLTa2D8hk
      s6zeXyBfqXG4u0134JKMjz6VrB7t8PHtJVxnyPbeEWO5DCv3FuhbsLV2H18kgU8bPbZQ2Nvg
      xuIqPkXg5p0lZman2V6ex5DClHfvY2txAvqzn9ftap5ffHKLRDzC0soG3UaJveMKuXSMu3fv
      4okK9+8ukp2eQuIFGwGyY+N8O5IkoH1FE2wO8F387uOdTy56Lt3+EF32sAUN9fI5REWj1e6j
      /cqTOp3Nsv7FCu++dYWjSp5AOMOw3mBx6T5vXJpE0XUOD/Inx0YfaYK3mHvlHDuFPm9Nhriz
      c0jQF/2aLPR5IKuPnOA6pmli2g7RaIzDZgVZljg4PGR2avRVoBMn2KBWbzEYmjiuh+1JMKij
      hKYxug1gemR7vkAY12hTawQZDoZ4QKFQJKvo2DY0G01iodFl8f5gCLO3ie7TyYxNIgLJWJhy
      r00+X2IuPVrah6oHwDawUNBkGFgequAw7DWptQ2CkR6hoP/JhbF+1/GHovhH2HQkEPj1/JuA
      /9fFI4qsMDU9Ta1SZmLiMkazSPrSG+QunGiCxzIpHFzch5rgkF/n6vU/oVGr8S9en+C42uK9
      d979/0UT7NhDLMclEIoia8OTSHBIIxIK4fQsZpK5U9mzrAG26xGORFGHQ4x+F10RcHw5zHaJ
      SOZ06camaWB7ArFYlP7DSPDM9DSeoiNFPFTtdJFqczjA9QQGvR658XG63S6aP0TAUkmnM4gj
      yuxta4DteEiSQjQSwTH79GwJC4WxVBRV19Cl6OkKY/2+cRYJPuMRL2UHeITr2FiPdL0IeO6J
      EyyI0hOdYHM4QFZ18FxEAQamjSqL2C7IknjmDL+AvFBO8PPm3sLnrO2UqZX2sfDYWFmlsLdC
      0dBIxMPc+PhjfAGVdt8iqLv8zd/8gInJMT786HOwemxt7HBYqXB8dES9UkUPhPD9hppgzx7y
      wT++jx5JsHTnDrJgcXd5jWRmgtLRNlt7hxSPDkbWBLtmlx/+448Jx5Ms3FlAcPrcW90iNz7O
      6v0F2obDzvoyaiCG3/fstrtGkx+8/1MSqTS37twlE/Uxv7zFRC7N3Ts3KdXb7G+vEYikTuUE
      53fW+Gx+hWG/Tb5cJ5OMsTh/h6HtsLO+gqNERkqHbleO+OlHX5CMR7l7f5WgPGT9oEE27uPW
      nQV63Q47WxsIvhghv/piRYKfN5ncGJVyga4xoFrNEwxnEF2bhcUlVElA8fnY389ztLfzWBNc
      KDeYyKUxbI+pdIiBpxHyq2ytLNJ3n8MIIEr4NIVur08oGKBW6zA9HqfVG5AbG6ddPqZY69AZ
      Md1YkFR8qkS3bxAK+Gi0+mRiAfqmTT6fp9NpYNse9Xp9NHuKhqaI9HoDQgEdNRhDFU8K63qS
      hmO2cWyoN0az94hAKMyw18RB4mh/H8scUKo26PZNcuk4rc5o6dCqLwj2AAsVXRGIxOK4tg2C
      iCJJFCoNYpEgqnJyrV4oJ/h5o8gKM7OzzOSijzXBmStvMXbpxAmezGWwHzvBCuGAj7GxHJ5p
      4FNgO1/n+qROx4Q/+Yu/wh324FQFAZ+A6zI0TRAlYrE4fp/E5kGZi1GbwnGZ1OQcom2ijjjS
      eI7N0LQQJJlYLIameOwXW6TNAXNzc5go6FEBbUR7rm1hmhaCrBKLRpEkiUgkSqfbRRUdRD2G
      pgzRtNMtCw+HA1xPJOD3MTU7x9C0mZrIIkke1eaA5MRo6dW2OcR+uIlKNBJFklUi4SCdnoGu
      Sfh8QfaKTd6ZPFk1fCl9gJfwlM94Ci/lCPAoEuzYNuKjas9P3HbJw7EdxCd85nkew8EAVddP
      qkrjYVoOsiTgegLSmVP8QvBSOsGPIsH3bn6Mo0f4xc8/JBH2MbAcCsUK/XYNVD+Nwwf88uY6
      iB6K4HBcrmO0a/RND7844Pt//zMmxjJ88vkd7EGbnZ1DSrUyhXyReqWGHgiin3I93LOH/PSD
      H6NH4ty7u0DAr3Dv/gPimTHKR7tsHxbQ3S47FYN07NlBEdfs8cGP/4lQLMndu3dJJ0LML60x
      MZ7lwf27tPtDSgcbHNaG5EaovuwOmvzwx78gnkgyf3cJXXK5t7bFxFiO5aUFDEtgc3GB6MwM
      pznz/O46NxbXMI02hXKDdDrJ9vIdDDHIgzu3SE5Pj/S0bleO+fmnJ5HgxeUNcskQtxcfMJGN
      c/vmLRqtDge7WyjhFAFNfrmdYNkfY+32Z4QScY6KZQ425mk0mtxdWmd7exdZ8FAUFbfXYP24
      wtrqAwqlGsXj/RNNcDJMqd5hLB3DdgWykQCOrOHXZLZX7zHwvsEIIEr4NJVuzyAcCBBOpPFr
      CrIokBnL0Ws12d07xByOVi1ZkBR05UsnWNFD6A8XZ4qFIt2egScoXL44WhRYkHV0WaBnDAkF
      dFLZMbSH2/MUi0U63Q6RUOik1OQpCITCmL0WDhL5o0NcIBmLMLA9IsEAo05aVV8AwR5goaAr
      sL29g21beGYfNZrDtkwysSDtbg94SadAj8iNjxNPpRElEbPfQdIyaHqEWFAhlMgR8XlMD+uM
      p8PU2h1809Pkkl9qgkN+H9lsFmcQRJVcjqpd5vwShifzR382jjvsc+pCWZ6LaVmIkkg0FqWw
      t0Hflel2OvRbFRKpFCHVo+2Mduk818G0bERJIRaNIkoSkUiEbrfLzOwMpqCjCOn2NF4AACAA
      SURBVCo+ZbTO6joWlm0jyirRSISN5UVEPXISCZ6ZAVUnpCunvrHM4RBXEAn4fExOz2B0u2j+
      MAFBQY/FRn5S29ZJmockn0SCwwEfPbNM1wKvV8YfjtMyemQzJ9flhXCCPc97XNL8eXAWCT7j
      ES/ECOB5HpZlYZlDhqaF7vMjS7/Z7E2SJJxH1Z7/GZ62D5ljW9guCJ6LJCtY1hBZVhAlmd9Q
      DXnGf0ZeiA4giiK6rjPsd1lYmOfVN95GwkVTZcqlChOz50423jsljzTBzfIxtuyj36iQSGco
      19ucn5ngow8/xnUGXH/jXRqVPKFwklavw4Xz51la+AhTGGcqJVOot3EGQwbdCpnL73FpJvMb
      a4L7zRI//WSey3PTdIcmr1x7jf31e4i+EO1KET2a5vqVCyPba5YO+Hh+lcvnpijXO7z7rXc4
      2F6ladi4/Tbh9BSXzo2eEFc+2OLW6j5zk1n6psdbr13l7p0bCFqEYafGpetvEQuPHhM53lnl
      3k6Z6bEEnqjzysUZ7s7PE4nFqVTrnL98jWT02ZHvVvmIj24v84fffpvVzX2+/folbi2t8967
      b7F081NiY1MUCyWmL1whEwu+WE5wJJ4knU4xbJX57JNPWLh1C1cSWN04/I3s3pmfZ3NzlfzB
      PisrG+zs7GEj4PPpBMIx9lbvUq2V+eWPP8IZNih1IZcbo5jPk8rm8Jwe4WgGzxqyeH/luWmC
      FSyGtk2nXqbRHZAv5Gk3Kkj+JJZxyurQ/hCCZVCpNU/kjK7H+FgOWRToDyz6/f6p7PmDEVyj
      hemK5A8OsAEkHddq47oCtREjy48IhiKY3SY7+0d0O20cc0C53iS/s07XdGmPWLhL8wcR7AEm
      Kj5VYHNzC8s28YBELIorSAiOwWHhZG/jF2IE+Crj45OE/TJvKn4CkRjFw33Onx89j/2rjGXT
      rK1tcPXaNRxRZdBuEAzHaHR6SEA2l8XnD+AOu5QbPd58d5zceAxJg57qY+78DJVSidnzr9Gq
      HHHlrT/ksqA8F02wa5tYjoffH8BO5NAlm7m5OXqWgNNv4Y+dLh3atoY4HsTicQxjgNHrsra0
      QGbmPIJjE4qOLq6BE42xg0gw4GNqbpZBt4squUgPI8E+/fSRYE8QuXDuHMbQxjAdpsdziIrG
      oN/HN+Jy8qPzlOUTpz8c9NGzynQ7HQLhKLbmo6EGmZk6iSy/EE7w07As66llwpvNJtFolHol
      jxbOEDjTBJ/xBF6oEaBeOmb7sPxYE3x/dZ3JbAZF06g3Oiea4GSMdndAu5onMTbzpSZYcAgq
      Hkog/nifYMe2MO2TXeY9Qca1h0iKgiBIyJL4a+nQA6OPqvsYDgbomoYxNNFU5anC/DN+93mh
      IsH5o33WNr6iCWaAo8Yo7a0SiaWQRJGdfBW/4jF0QHAcGtUj8tUew4GBIkOjYzA5lsVxHFYW
      b7G1V0VXHNa3tyge5SntrVIaqMRjYW59+im6X6HzMB36+9//ERomB9Um1XKJwsEhR/UmAU3D
      53s+G2N49pCffPABeiTBvYV5An6VpfsrJB5qgrcLHQp764hakID/2dMM1+zyow9+SjiW5O7C
      AulkmDtLq0yO51hemqfe6bGzsUZn4JJMPFvW6RpN/uHHPyeRTHFnYYmACvfXtpnIZVlcuE2p
      WmZ/9xhPkkdK1x60y3zws09IJuMsLC4z6NTZ3MszPp6jWdxn87DC4eYyPQIkIs+2164c87NP
      bpGMR1hcXqffqlJvGyTiERZu3cCxbda3dglG4uiq/GKNAGOT0wQTOXyqjOUKyCI41hDtyrnH
      muBLnkvPMNFlD0dQUYQLiLJKu2sQ0EQc4cusx1Q2y/oXy7zz5mWOSnl8wRTDeo2l+yu8cWUa
      1e/n6LAIQCb2CtncyT7B569fYPOoy1tTIeZ3jgj6o8Tjo2/i/M8iSvg1jW6vTzgUJJxIEzgq
      IIsC0Wicw1YF14V6vT7SPsEn6dDySSQ4GEDRT3a3AVBVjYPdNVLj1xn0RtsiSVB0fIpIrz8k
      HNRJZsdYXd/BBQRZw7OHqIrM0dExk7n0M+3Jqh9FdDBMj4BPwbBcAoqA6zps7x0hBZNIWpC5
      idF2sFF9AURngOkp+BSBYrFIMA6eZ+N6EptrD9Ciado9g0hAe7E6gC8QxjfCvnD+J+h/fb4v
      l+QeBdU0RWNmdo5mrcLE5OWTdOjLbzF+SaA3sJnIprH5coukcMDHtVf/FfVqlT96a5x8pcUf
      fus5a4I9D8u2ECWZaCz2tUhwPKARDQWxRBt1xBHHcx0s20GSFWKxk0hwNBql2+2iaxozF1+l
      Wy0SyYy2kOA51ok9RSMWjVIp5IkkUifVoUUPKZDA6XfIjc2MZM91LGzHQ1ZO0qsFZ0i979Lv
      9Rgby9EyRTS/gjTiwppjmzgeKIpCNBolHgnQGQr0Oj1C4SCxRPykMvZDsc4L7QR/U84iwWc8
      4qXsAI9wbIuh5aBIAg4inn1S+EoQn+wEG/3eyW6LroMoQH9goisSlguKLJ05wy8gL5QT/Ly5
      v/AFm3sVqsV9bAG2VzcfaoJVkvEIX3z0EbrvRBMc8rn8h//nHx5rgj2rx/7OHgeVKsX8MbVy
      Bd9z0gS//w8/xBdNcvfWbYI+WNkqkEmneLB0h93DPKXjQ2xBHU0TPOzy9z/8EZFEiju376AK
      Jnv5OqlkgsPdNe7c26R1tIOaHsc/QoVt12jwn/7xpyRTaW7eXsA1uxwV62RSCXY3V1ha3aFw
      sM3QVYlHn52uPWiV+IeffEgqleDWwj0mc0k+u3GH6akJ1pdu0nEUdteWGaCPFFlulQ/5yS+/
      IJWIMn/vAYo74Is795ibynLr9jzNWpnd/UOUQISg7yXXBKdzY5SLefpDi1q1gD+URHRt7i7d
      Q5EEVL+fw8MCx/u7jzXBx6U6E7k0Q9tjLBlkiEpAV9lZXXpumuCAT6Pd7RENhxgMLZxhl/7Q
      wnRFJLNNqdGlPWL1ZUFSCegKnV6fSCiAZTv0Oi1M20UX4dyVq8SjUZxRJwKyfqIx7g0IB30U
      CgW67TauICC7Dhdfuchg6NA3RossS1oATXQxTI+QT2V748t9gjOJGLaok4iN/mDR/KGHTrCK
      XxUJ+WQm5y4iiCKaonBcKCK5gxc3Evw80VSNufPnmc5FsEQfg2aJ7NV3mLgi0h3YTI3lsHHw
      RB9ICpGgn4mJ8S81wYU61yd9dE34k7/4N7h2n99YE+y5WJaNLCsEE3H8AR8+fcDQ6BPyKRhq
      ltmIg+Yf7Xc8z8GybSRFJR6PE/Sr+HoORr/LwFMYS4TomPGRkws91z4pSqzpJOIx9HScQr1L
      r9PBlAPMRQKUY9GRyza6tontuMiqSjweIxYO0h4en+wTHAij9jpsHlR5Mz0zkj3bMnE9AUVV
      iMdi9IcuE7kUnV4PTRW5dOUqjWqN2enfg0jwN+UlPOUznsJLOQI80gTbloUkyydPNEV5oibY
      tuyT6PATbPR7PXT/Q6cYD8O0UR861JIoopxyY7cz/vPzUjrBjzXBtz7GVsP88hcfEQ/pGKZF
      vlCh36qC6qd5+IBf3FrHE1wUHI6KNfqtKl3TIyAN+Lsf/pzJsQyffDGPPWxzsHdMsV6hVChS
      e1wo6/Sa4B//6Ef4IgmW5ueRJZvt/SKJZJLN1XscFsoUjw9wBJXwiIWx3v/RTwjHUyzMLyC4
      Q/byFVLJBPn9TRburVAplrE8gWhkBI2x0eTvP/jZw0jwIo7RYe+4TDabYnlxHkeQOdhaoWtr
      Izmtg1aZH/3sY5LJBPOLy2iiw4OtPcZzGRbnb+NJMttry9hKeOTCWD/75CbJeIS799foNkqU
      am1SySjrK4vU6m02tveIJ9OosvhyO8GyP87anc8IJRIclyocbt2l3W6xeH+TnZ09ZBFURUfo
      t9nIV1lfW6VUbVLOH4CkkU2GKdbajzXBybAf52HkdWf9/jfWBAd0nU63TyQc5DhfwrX6DEyH
      gTGg16hQafZotUd3gv26QqdnEA4FyBeKDPtdLNdDFWDu8jU0TeHo6GjEf5qGX5Po9k+cYE3X
      KB4f4XjguR71RouxXJZOZ7TCXbJ2ssWsYXoEfQrpbI5hr4vruXieQLPVI5dO0DlFYSzRGT52
      gjVN5/jo6GSLpFyOWr2KgkujfZJe/VKP0WMTEyQzGQRRxOp3kLQcqh4mHlQJJseIaB4z5pea
      4MDsHNlk/KEmWCMcCjA+NoY96D7WBJ/zSww8mT/+s0lc65togr2HUzKZYCyGP5DlqFBlOOgT
      i8VQQzFSjoU6qhPsOti2g6yoxGNR9FySQqWF0esxRCGXiGBUJOZyI26Q98ieqhOPRtE0mcnZ
      WQa9HsFQCBSVQqVFasQtklzHxnFBVk8iweVinlgyTa/bIxQKIqoi1VaX1HhmJHuObeFy4gRH
      o1FU0WNmdo5+p0mhXCebzWH0eo9H5hfCCX40ZXleuK6LZVnPzd4ZLy4vzAjgOA5Do3+Sgqz7
      fuOAkyzL/6ye4BFP24fMtoZYDgieg6ToWMM+iqohyqPnrZzx2+eFcIIFQUCWZcyhwd3FJTrV
      On0P7H6bvjGk0zcx+01M76RisizLI73uLS4wNjlDq1qgZ3rUikfIqka+VCWdjPPxx59yfLBN
      OJ6ieLSP7QgUK2VS6QyL8x9SrIIuGmzv71MpltlbX8JUE6SSUVRltDb86kvC4YP33yeUzHJv
      YZ5o1M+9ew/ITEzTq+yzXepTOthADcSIhIPPtCc6A/7x/Z+QyOS4u3AXyRuyvLHL1NQ0Gw+W
      cASJ/M4qx02HqbH0s+1ZHf7+Rz8jmxvjzsISY6kQd1d2mJ0eZ3lpHkEUWH2wiajqJGLRkc+7
      uLfBjaV1XMtg/6jEzNQ4Swu3ERWF3c11bDlIMhZ+pp1evcA/fXKTXCbB4vIGw06dZs8im4iw
      dn+eo6ZN9XCDSGqSwIsWCQ5F4iQScXRdZdipsXNUY3P1PrvbG9xZWGR7e/sb2Z1fuMvW9hqF
      o0NWVzfY3TvARiDg9xGIJDhYW6LWqPDRTz/Bs1snmuCxMfLHRyTTWTzHIBhO4tkm91ZWfzNN
      sCgR9Ou0Oz2i4TDhRIaAT0ORBGLxBJ5rgidSrVVHMidIKkGfSrvbJxIO0OoMyMVD9C0HPKjW
      WniiytXLc6O1T9YJaDKd3oBIyI8ejKPLLnic2Ks30VWZw8MRneqHBCNRrF6TRquHYfRxPRcQ
      abYN4tHQyHuwqf4Q0iMnWBMpFIu02y08SUEUVc7lQic+lXVS0fqFmQI9YmJi6qTXimDaoHjj
      1Ps2ujCOoJ9O1zqey7K+vsG169dxRI1hu04wmqDR6iJxcpP7/X5cs0ep0eWdP5gkMxZ9qAkO
      cOHSHNVqmXMXX6NZPuKVt7/DK6L8m2mCPe+hk6kSSsQp7K5heAqddptEUCcWDmKJFmpghLxw
      TiLBtu2gqBrxeBxNhv1Sk4w5IBQKYYo6kqfhG7W9D51gRfORiMcQJYlYLEan2yUUCoEWwHBq
      jM2O2KEeYllDkBTSqQTG0KbX6RIKBYEhW0dV3szMjNY828RDRFFV4rEYyWiQzlCg2+mghaJE
      QmHOz00/Ll3zQjjBT8M0TVT1yevsjUadWCxOvXyMGs4Q/MoOgy/wKZ/xnHmhRoB66ZitgxKp
      VAoJk+W1DSYyGRRVod7sIssy8USMTm9Ap1Ygnpv+miY4oHhowcRjTbBtmQwsB0X0QFRxTANZ
      1RAkGeUJ6dD9XgfNF8To9/D7ffSNIbqmPtORPuN3lxfCCX7E8cEuqxsbOJ5Ip9NFw8BWIpQP
      NonGU0iixG6hhi67mLYHjkOzdkyhamAYfTRFoNbqMzWeO9EEL91i56COX/VY29qiXChT2ntA
      yVBIxCPc/OQTdF2h3TtJh/67v/sAzRtyVG9TKZWo5o85qDUJqCp+//PTBH/w/o/wRRMszt8h
      oMPqbol0Kkk9v81WvkWzfESx1iWdjD/Tnmt2+cf3f0IknmJ+fp6pqXE++fQLpqenWFlaoFCp
      US/nqbaHpEbSBDf4wY9+TjKV4vb8Ip7Zo9LqkYhG2N1a46jUYH9rFX80OdIWSYNWmfd/9jGp
      RIL5xfsnkeDNPcaySRYX5rGRWJmfJzUzM9LTulU+4mcf30DXZB48WKNWq7B/XGI8E2N+fgGj
      32Vr9+DF1ARPzJwjmplCVyUsT0AWwLFMtGuXEB46nlc8j/7QQpM8HEFB5jKirNLtD/CrIo7w
      5UVJZbOsf36ft9+4hFQ6RgskGQ4r3F9+wJuvzKAFAhwflwDIJR5qgte3ufjaJTYOOrw5Gebu
      7hHH/giJxLNvxpF46AR3HqZDm5aNM+jSH9rE4gmO2jXSyRg1Y7Q5uyCpBHwn6dDRUJCjnU26
      QwvX8xgMB1iCwNh4lJ43YharrBPQT9KhIyEfHtCo1XDnphkbG2dhZRUJmXqtPtI+wZLmR5Nc
      +qZL0K+SzubY3DnEtoZUGy1U/0lm6aiTVs0fRHKHqP4IPr2Bg4BP8hj2WjS6Q5qVdfyJLK1u
      /8XTBOv+IPoI10l/gl5W/0qhpkeaYF3TmbtwgXajxsTUFYxmiWz2bSauiPQGNpO57Fc0wSrR
      cIBXX3+TWqXCn7w9wXGlyR+++21c5/kV7n3kBCuKSjAex+fX8fmGmMM+4YBGLKixvLrNuSvX
      RjPnujiOi6JqxOIx4vEoY12TTqdLLBbHcmFl44Ar118bsX3OiT3dRzwWw6dK9CyBXrdLtZAn
      k84w6HbxB0aMVDs2rguqphOPxSgX88RTaQamzfR4DjUYRPOrjJpU4jgWHhL5/U08JUhYg4Er
      YaMwkY6haLmTKezDONIL7QR/U840wWc84qXsAI+wrSGG6aA9TGF2rSGKpj/VCe522vgCITzX
      QRKh0xvi02Qsx0OVZRT1zBl+0XihnODnzb27N9g5qFEp7OOIArubOxR27lPoKSQTUT7/8EM0
      n3ziBPs9/vZv/5HJqTE++ugLXLNP/vCQvXKNSjFPrVJ+TvsED/jhD/4efyzFws1baIrD/NIa
      6bEJNlcW6ZkO6yv3qLUHZNOJZ9pzhx3+3394n2gize2bt/GsPlv7x6TSaVYW79AxTI53Vtmv
      DRnPjOBUG3W+/w8/xu/zs3J/kVK9zeb2LtOT4yzO38QwTZYXlzBskWT82XWLBs0iP/jgl6RT
      SW7OL+FXXD7+7A7nzs+xsfgFfTHMvS8+Iz03xyiPl1bpgB//8nN0TWF5eQXbttjcOWR8LMmt
      zz+lkC9xeHyM5A8T8mkvViT4eZPJjVHKHzGwXeq1Aro/huA5LN1fQZEEtECAo6MS+cO9x5rg
      o0KNiVwa0/FIR/2YKPg0hZ3V+xjPRRMsEwr4aHW6xCJhDGOA65onkUsBqqUjlEASZzhatWRB
      Ugn5NNrdPtFIEN3vp14q0DcdSqUSzXYXRJXrI0eCfQR1BVdSCPr82I5N3K9iA6VSmUb5gFB6
      jn5ntOrQkh7AJ3v0TZewXyMa8jE+fR4RyCQTDP8/9t7zSa7zSvP8XX/zpveVVVkGXiApGjmO
      1D0z29sRPaOe3t2Jjf0T58NGbGz3jFyrJTWtWqRIkLCF8t6k9zevN/shAVCiaWaB3IhBA09E
      fUAAdeq9iXrve573nOc5YUwhl5t/RJKRmZHgZJaErrNUX8KemsSBj+NHBFGIFDmcNXuzx5kz
      7r9JJDSdqzdusLKQeaIJTi++yerLM2Os1aVFQiIiaUaC89kUKyvLTzTB+40Br63qTFz4q5+u
      EoUOMF+F9isRx4RhhKpqZEpFDEMlb4X4jkU6lULUM3iTPkZhvnbjOH5EgjWdYrGIpqpU66sI
      vsOVq1fwhASqmES/QCU4DENGnTOmgchCMcVw6uKYJleuXAY1yah9QnX1O/OtLwyIYlB1nWKx
      gG251JcXH2mCs6QFlahUnJsER6FPLIicH24TKykap6eUqwuYljMj7ckU4+GIy6szd+3nkgM8
      h4/8Al+B5/IEeKwJ9j0PWVFmLRWa9qWaYN/zkVX1SzXB5niMkc4QhQGiEDO1fTRFIIhFFElC
      fUGK/6fHc0mCHwts7n/0Hr6S4p233yeXVrFdj7NGB3PYAdlgeLLO2x9tExEixz6nzR7TQRfT
      jUjKLn//i3dYXqzw+w9uETgTzk8bNPs9Os1vpgn+1S9+iZow2Nt6SKPRYe/ggGJ1kb3Ne5w0
      uqjhmL22TbXw9c1/kWvy81/+Gi2RYHvjAc3ugL2DQ2q1RTbuf8rE9mgcbnLS91icZ06wPeAf
      fvk7jESCjQd38WKJze0dlpdq3Lt9i1AQuH/7Dta8JHjU4he/fY9yqcitO/dxzQHtgUm5mKd/
      fsD2aZfm4fYjTfDXd4SO2if89t0/ktBk1h9uki9kuXV7neV6jeb+OntnXXa3NhASebLJ55wE
      y0aBrU8+IFsu0mj3ON27y2Qy4d6DPQ4Oj2bmWKqO5E7YbfbZ2tqk0x/RaZ2AqLFQztDojlms
      FAhjgXxKJ5QUdFXmYGsdJ3qKj1eUSCcTWH5MNp3CcwNWl4qMLRfXcWel/P0jPMeeK5wgqaQM
      DT8WSaeSBH7AQiGNHYS0221GkymIGi9dX5vzQ9NJJWQiUSFpJKnXa4S2RRSDgEC3cUCqtIZj
      DuYKJ2lJ9EckOG2otNttxqMRURSyc3BM4IfUqiUmc49ISiPHLoqRwdB19nd28H2XOPTYOzyh
      12yxcmmN4SNjsecyBXqMpeVlKrUagiDg2RMkbQlVS1PMqKSKM03w5aDPUjlDYmKSVq9SLeZn
      mmBFI5dJsVxfJHCmqFLEWdfkalLCiRT+49+sEIcOFzbKekSCA3tId2izulSm2R1zJRfO2pkD
      gWJqkZE355zgOCIKI+xRh7EVsFTJ0xtbVDyHy5cv4ws6ihjPT4LjiCiMGXcbTAOB1tkZuXKF
      6XRKMpVC0KoMW2eUl6/PGS4gjoUZCS4UqBZz9E2f6XTKpctXGJg23ZFDpb4wV7woDIgFiebx
      HpGcZGWpgtjqYE5tLl+7zsSJaJ41uHLzVeAZIcHxI6H4t4UXmuAXeIxnZgP4vo/n2IzNKdl8
      AeUbzgmGf11P8OTf+D7ql7Q7+66NG4IYB8iqgWubqJqOrKhILwYFPzN4JkiwIAhIksTGnY8Y
      BxJpXea83UcSBXzfoXHWoFAq0Tg9wAtC2r0x5VIBWZKQ/pWve3c+pVZfpd8+Y+qGdBuniLLC
      2SNN8LvvvsfZ8T7pXJHGyRGeH9FotymXq9z99F3aPUjILruHh/TbAw637uAohZkmWJb/1Z/9
      VV9i7PPLn/2cTHmBOx/fYu3qZd5//32uXr1K6Jp8dHsdd9xm93zEpeXa18YTAouf/eLXFKoL
      fHLrE7JJlTsPNqmvrNI82eWTBzsMmsdYvsRCpfj18dwRf/+L37JQW+SjW7dJ6SJ313e4cmmF
      e7dvISg6p7vrTKMklWJm7uc+39/kgzub+LZJozugvlRj1Dxk+7RD5/QAT0xSyn99vEn3jN+8
      +yG1apHb97ewhh1aA5PFWolPPvyA4WjK2fE+YrJEPmM8WyRYECWKxTIHB0d40z4PNnc5ONhh
      OJ4i4dDqOWzf/gBP+LIrza/G7dt32Nvfpnl+xtbWLkdHJwQIpJIG6VyJk+379Idd3v/dHxCi
      Ce3pTC55dnJCoVRFiByMVJ448Lj/cBPpG2mCZTIpg9HYpJDL0jjapT9xCMKIjY0tPN9HFERe
      fvnGXOEESSVtaIwnFvlsmkK5SjKhIwmgCjE3bt7A8WKcOUk1SoJ0QmFs2uQzSSrVGkZCgxhE
      QaTbHbBUr2Oa8xl3PUY6l8efDhEUjcbpKWEUsLl7SBjG5LNpksn59BaPSbAbqyR1CSNpcH56
      Shz4uEFMKMpk0ymSidnJ/0yR4OVL10gVSpQMgbPumOsFkakP+UwGQUpQKWioi/8OI/v1wg6A
      5aUaW1vbfPe11wgFFXcyIJ0r0h9NkIDFpaVHmmCL9sDkzb9cpbyQRdZhqqf5zkvX6Pe6XLn+
      BsP2Ka/86D/yiijjBtH8GtvPI46JohhN18mqRQqVEtdWHSamydrlK4jnbZSERjYxX40hjmOi
      KEJLJDCkIoc7G0SyzmQywRd1asUc42KedHHOGWdx+ChekmKxwPbD+8h6holpkkqlEDSd8+aA
      am35Qo8dBj6SopNK6Fy6eg3btLh2/Trtbo+D8wmvL1yaK04UBiDKaJpGsVBAFkIuX73G1HIo
      FnIIgkejb7GwNsv8nwkO8G3jOXzkF/gKPFMnwOH2Buf9EZqWJKlDLEhMJg66AulCjUsr801P
      f+IO7blYboAqxcSSRuBOUbUEoqSgyF9sh56MhyRSWaaTMelUkvHUJpnQv5ZIv8D/vHgmSPBj
      nB6dIkoyAjEjy8SfjlD1DPvb24h6kvocYznhs0rwg7sfc3g2IKkLbO3u0GsPaB0+oGnJFAtZ
      PnzvPVRdZjz1SBsx//AP/4QWOZwNp7TbTYatJofdAQlVITmnV+fXri1w+eXPf4GRL3H744/J
      5lK8/+57LKxcont2wIefPiCwxzS6E6rlOdqXXZOf/eIfyRXL3Lr1CZmUzrvv/YGVS5d4eO9T
      TDegfbJLbwql/Dzu0AP+/pe/pVyu8NGtTwnsMYenLWoLVcx+k/s7J5zsbZLMlefUBLf4+W/e
      o1Iq8vHte/jTIUPLI58xuP3JLbww4nD7Ib6SITtnJfg3735IQlNYX98gn8/x8e0HrNQXaeyv
      s3Pc5vTkGCmRJvWstUNff/llXnr5ZV56+SW+/93XePV7P+Gll27wn376N7w+Jyn8U1QWFmg1
      zkhli0hiiJbIIMQhD9Y3UEQBPZWicT6zIyeWWaiV2NzaI2vASdukmE7Qa5/R6M7nXDwXRGlG
      gicmhVyGVCZDsbpIUpUwVJlL116iVMxhJFNzhRMklXRSZ2xa5DNpsrk05YU6qiTS6bQZDScs
      Li0xnc7n5oysk04oTEybXCZJ0kjSOj8njGO2dg/x7SGiqNLr9uYKJ2lJ8MrHEgAAIABJREFU
      EkrM1IvIJDUEUaTf7RL6Lr3hmLHpsLhQxrxAJViJPeREGiORYG9nG9/3ZpXgg2PCKEaOXRrt
      WaX6mUqBVO1PUg1NpdPpUC6X0dQv9pwcHx+xsrJK+2QbMbdGKf3FNMXQE1y7cR1z1Gd5daYJ
      Ti/+iJVIYOrORiSFwmea4EI2zWtvfJ9eu83/+ubLnHWG/OWbP/7WNcFRFKPrOppaJPI9qrVF
      TNPEi2CxlObTjx9y+cbL84UjmpFWPUGiWMC3bWr1ZUzT5PLlK/iCQqPZo1qez32ZOCKOYjQj
      SVEooKgiq5ev4EynXLlyhXavR+gFj0yt5gkXAgL6o0qwKsb4gobthazVF5E0mc7QpFKfb32P
      SXDr5IBYMbhUX0BptjGnNtdu3GTiw3QUcWnlGRyR1G0c8+GnD1iqr6GKLodHR+TyFSLPxLRj
      ZEUmmckShj6eNcZIl4jGh5hiBc9zKCQlMtVLvHxt9UUl+AWAZ+wEaLeaOJ6HNR0xjqGQyzya
      biix+mhHd8dThHjm+CAIAqKkIEsikpSgWEjR7vcQxUtomobvOUydgIQiEMQSoWejJhKIkor6
      JSR4PBxgZHLEYYAswnBik0wouEGMpiho2gsy/KzhmToBvm3cufV7hpaGKkypLi/TOe8S2y0o
      vcQbL1/mw3fe5vpL1wgFnXrF4L/9t5/zt3/3N3zw4SdcXqlgmRaWqKDEIaoosnbtOxTzF/Mn
      /TziwOF//Pef8+oPf0Tv/AQtU2LU7/C9N/+Cw407JAtlmseH6Nkyr7/y9aqryJ3wDz//Dd/7
      wQ9onh6SX1ih3Wzyk5/8mId3Pia/sEp7Z53VN/+C0hyt25HV5//55Tv86Aff5+x4Dy1bRlNU
      Xn3pOgc7D9hvjCmlVNTsAjevfn0twBk2+flbH/HDN17l5OQIPZnGdgP+/Y9/wM7De5hexGQ4
      YunKS1xd+fo0aNg84q2P1vneqy9xcnJKMmXgRyI/eu07/PHj2+SzaQbjKSvXXmKxmH62SPC3
      jUptkcb5CV4E/V4LTc8gxBH3HjxEfkSCz87aNE+PIZZYXCxxfN6hXqvghzHFdAIf+Un7s/00
      7c+fhyiTTSeZuiHZdIql+jJJw0CVBERJpNM8RU2Vibz55vAiqWSSOm4okE6lqC/XUWIfLwwR
      JZF2p025VCSa9zWoJMgkVUJBJmmkGA86jIcDIkFACEK++/0fUsinSGfmexFIWhJDAUFNkEwk
      iYGsLhMJIkv1OoPWOdXly0zGw7niackMSuyiGGmMhEHku7iOg2eNGFouU9tBiV3OWy80wSQT
      Bjdu3mS5mp5pgkdt0vUfsxYLWG7A2vISIdGjOcEaxXyGtbU1Is8ioQjsN/q8tvZIE/y3a0Tx
      t+A1FMez6q0z5nxk4UfbeCiMx2NSySSinsUzexjF+TTBMIvnTLqMrZB08xwjV8KzpqSSKXTJ
      IKWJc88JfkyCzX4DK5K4cukyw4nNdDIhTmQpqR5vH7R49XtLcz5uSIxAr3mMJ6oU0xqmG2NN
      RjTOm1y68TK91jnL1+Y1AgsRRIXm8R6xkqSQTJEIRDxUVqtF9GSK4UDiytpzrgl+Dh/7Bb4E
      z+UJ8LgS7Lkuiqriui6arn+pJthzPZQv0QvHccxo2CeVKRCFPpIQM7ZcEsrMt1SV5Rek+BnA
      M1UJ/rbwRBP88ft4cpJ33vk9uaSC5bicnrcxh21i2WB4vM7bH28TxD5y7HPS6DIdtDHdkJTs
      8d9/9R4rixV+/+EnBI5J+7xFY9Cj127TbXfQjIsbZcWBwy9+9nM0I8ne1kN6vQGnrQGVconm
      yR4ffnKfwJ5w3h1TLc9njPU/fv6P6IbB9sZ9usMxncGEcrFA63Cdw75P/2yHrgmlwjyV4D7/
      7y9+S9JIsPHgDr6g8oc/fMjVa1c43fqUpq0xPbtPP8qST339C8AZtvjZb97F0HUert+n3etz
      cHzKcr3G7Y//SBD6bG7sgqKTSX19tX3UmlWCU0mde/c3GPRbHJ7M3KFv3foEQTHYvv8JqUIN
      TZGebxIsGwW2Pv2QfLlIs9vn/OA+ljXl/voBh0fHqLKIphqovsVea8DOzha9oUm3fQaiSq2U
      4awzeqIJzhoaoaCgKSKHOw9x46fRBD8iwV5EJpVE01RCx2Tq+hiqxKXrL1MqZEkmv/6XFZiR
      4FQCNxJIJZMkNAVrPMALQirlEkE063q1rHkrwQkyhkqIjJFIsVRJUVtaRQRqlRKOO+Xg8JSp
      7c63PP0RCVZ0jIRBjEBGk4niCElSGIwm6EpMo9WZK56WTKPgISUyaGLA1BcwFAHXmjC0PBpH
      O5y2ejjerA70XKZAj1FfWaG6tIQAeLaJpC+jqkmKGZ10sUZGi7ka9VksZTAmJln9OpVHHvqi
      kiCfy7C6Up810YkRZz2Ta4aME8n8L8trs3leFzXKimNUTQd3THNks1bP4QUxgWsTRiKLpQy3
      P97g0o2X5gonEKNpGp7ZZ2KHLOcSeClwbAtdMyimXRrNFtXKvJXgGF3TMIct7EjCGk1YWl3F
      NE2SWppCRmDhlVfxEnOmf1FIIpFk0D7FF1QKaY2pF2GbU5JJA8VIMen3uXppZb7lRSGJZBpr
      1EfPFskrAu4jd+iVagE9lSOXy6IpM6stIZ4B255TEPFvAFEUfatzh1/g2cWf3QKZ/RbDQCVy
      J6ws//mOC70pjZ5NvVb60kChZ7F33GalmmYUKLiTMSsr9a/8waNOE5J5ssYsR+61ztGyZaxB
      m3RxgYT6RTO8Ya/F0ck5a9dfJmt8c4LZabcplit8lYTXsW1My6JU/GKu3WkeM5gKJEQXLVtm
      3Dklmc6SLtZIad/MIzQKA4IwZmqOyeQKEPmMJjYSAV4kklAEZD2Frs5/gMdxxGAwIp/PEXgO
      puOTUESCWMJ3pyQzeVR5/nXHUUB/OKGQz+E5FrYfI8UBkagQ+TbJTAFVvlgK6Loumqbh2lO8
      SITAQU2kMMcjcoXiXFrrOArpdLpk8zmmU5t8Psew1yEUFArZFEE0MzTL5gtIovDnKVD/bI//
      +/1dbqzk6XW7RJFNv20SSyKlXIL72w1e/+51hv0emWyWSM/zykqOj+88RAmnnAcFitKIdx+2
      CadTOs0TpESaKAwQgojRsMPS6iXOT88QfJuWLfDaS1dotzo4kyFarsTJ/g6Xr14jFHV+8sPX
      /uz2JZsv4e4eMGqfsjecIoQOiqYTxDKvvnLzK3+RvwpHh/vkSxV2N+4TKhqTVptCtcrA9vnB
      d7/DW2+9jSQGrF35DvZkgO+JeELE699/k7OzfeywystXCtzfvEs6VeVo6/cotVf58fdvonwD
      Yfzu/T/SGAOyzGuvvsbx1l1iLcPqYoEHD/dRIwstW+MHr8+XBgG0D3c4G5qM/auMznawvQDb
      nrK8dhldgr2jFj94Y74GOwBnanL31ie8+dd/zdb6Oo4fIwQ2l69fYW+vSSLV5o1X51+fZ434
      599/yt/+zV+x/uAeU19kpZKmMXCoZFSaQ4eXr371C/UxrGGLjb0GGeUQIZEmk80iRC4Pd09Y
      0C3OJyAqKq++miL3RWMsgZtrFRp9l4O9HfYP9nB8cB2bk8MjFEVl+/4tNnb2OT06wsjkmXQb
      WEFMt9cnm511ZdZXL2NIMY1On7OTQ47299g9PKbfPufO7Vts7h4wNB2yeswndx8QBQ5n7RGn
      xycomopnW9y/dw//c1nK1r2P0TIljg/2ODk7wwlEPNvCnowIn+JaPwp8Wq02OztbNJptzEmf
      ZrvP0e4ePgLZbIbywjLj5hHHZ2dsbxxRLSqMHEimUhzs72PaLooiY457IMm0Wk2ib1BjiHyH
      w7Mm/U6blKHTbPdxvIDIHtPt9rhy/TpKIgfRxYpu+eoCwXSE6wVEiCR1lTAW6Xd7TIYDLl25
      2FhTSdW5spyjO3JnEkRVplpb4vRoFz2VI44uZmOjGlkWSo+6egUZRRIoVBYR4oDx1GFteT5f
      IESFak5j56RN7JpYXsSo3+f69cscnLbodTtkEiqNzqwd+s9SoMB3iQSJwPNnfpeyhIAIxBDH
      uK6HkUrhWFM0XUeUFWRRYDIeYxgGQQyKGBPEIlEQQBQgKBqh54AoE4ceimbg2haarhHHIEoS
      tmWT0FViwHY8ErqK64Wk08k/OwEsc4LtehjJJL4foGsqArOBeMmnGFLn2ham7ZJMaESCROja
      6EYSy3bIpFPYto0syxBH2I6LIiuomowgqoSeydiKMTSQ1ASePUX9swa8pz8BAs/GtHy67Sbp
      tIGozkTy5VySRKZA5/QAPVummJvzJggIPZudwzNy6QSSJDOcuuQSIn4s0W42WVheY6E0py4Y
      8OwJeyctUkaCpCoydCK02EVJFxm1T6jUr5FNXewKuN/vY9s2CVVk6ovE7gQ1YdBodFi9fJVC
      9usvFALXYu/wlNpChXZvhK7JpBI6qVwRIbAZ2z69VpP62mV0VX62K8HtdptK5ctVYEdHh6yu
      rtE6nukBypnPOMPjOsALvMAztQG650f8y637LK9cmukBjo/J5cozPYATI8syRiZLHAZ49phE
      qkg0PmQilnEdm1JaJlO9zCvX1/A8j2GvSaNnkzdE0NLYozbJVBYlXSSfVLFtBz2hP2qHjthc
      v89CfY1W45xqtUKjM6RSylP6tiZEPkIY+MSCRBQGKI+cqT3PIw593FAgqSvEgjR//w4zYt0f
      jikU8oiCgOM4RIFHJKqE7hQ9lUVTnu5W3HdtLC9CJkBUDVxrQiqbR35KHuRYJgEySV3BCyJE
      YiRVnatoFUUB/f6ITDqJaXsUchkG/S4h8owEhzGmOSGXn30Oz1QdoNNuEcURrj3BjKGUzxIi
      IEkKl1b/RA8gCCT0BKIkIao6uqSiayrlokFn9FlXYat5Tm8ksPLdS9x7+ICkXqZ7couhWuff
      v/ka//LueyxfWiIUdG5eqfFw8wB3PMZPFRgeHLNoiNze7HBtZYW15Xmb074etz98l6Wbb3Lv
      oz/w1z/9T3ijHh/e2yYlB+SrqzjtAzJX32C1NH/rtedYdE/3cISXKWseb/3LbRYKKcLYI44T
      KJrKG6/N13D2eWxuPGRozXQVkuDhRSmS6R6v3Lz2VPEm4xFbB+esFDU6ns7weI+f/O1PmSfJ
      9W2bbuOIZr+AM2iS+P6/Q4w9Hu6dUdEsptoC0eCU6o3vs1Qwnq0NcPP1H3Hz9Yt+1xt/9qcb
      fDYmNWEYnD7Y4PJqBUXVsKYDRFGm224RhDHpbIbRcEIsOBDXSCY1Gp0Ba/kMB+0psieBbzMY
      Tli7mA3Ov4p6vU4syizVZsUpI1ukkE5gWyajQZfL9TrzKWQ/g6zI2JHKlWyCnQcbBIEHkowS
      uaCmIHz6OlCMiKZIFPMpTlp9ShmBqeM8dbxUJocinHB4co6YqVFfnM/tA0BSZOxA4lI9xbFf
      QJeg0+tz7eoq9//4LsZCjmsrS3TGY5YKxrOVAn1beDwmNfQdBmOHtKESSwqh56Coj+bHSjKR
      785mUwkSmqrQ63bIFUqzObOGztSaEfY4jr9VaxR7OgYliTsdQ+Qipyr41ghCDyuQKGV0Akkj
      OYfrwmOYww4Hp20ymQy1xTrTyRDPnhDKSbxJl2x5mXzm6ZwtxoMOQytCiWy0TJFhp8HC8mUM
      7ener93WGR46C6UM46mDGAYY+fxcb+vpsMveaYtkQsMNYlLJJNmkTjJbQAhsJpZHp9NhZe0S
      miI9vxvgBQl+AXjGSPC3jUGnwXnPopxVcSIVf9ojlc6ipMsUUiq2baMnEk9I8MN7d1m8fAPP
      mpDWFfbOeyzkE4ydmGzKoFT6+u7MuRFHtFstssUyUhwwNB2SmogXSYiRh5JIX6gSDLNK6+NR
      UK7rEvousaShSQI8utJ+urXGOK5L6DkIqoEuQ4B0ocryn4eL8PwAxzJRtQSDwYBMrkDK+Hpf
      IJg9myTEdAZjqpUK1mQIsj6bgSDKRIGHpGhfrAQ/b2g2z+iOoHnc4dKNq0ymIp3jjxgoy/zV
      X3yP9956m5XLy4SCzsvXFlnf2KO2ssrtO+vUqnlyCtw9mlJUAs72hlx/7YefFXO+Ibxpn/Xt
      Q3784wqbDx/iuC7TUESTIHTMC1eCI9/ht797h5/+l//MtNfk1sYhaQUERcPrNLnyH/6a6rwN
      bJ+DNe7y9h/XKRoCQiKL4bZQVn/Md5aeTh/dPt5hvx+wmBZojkOS0YRATs21AULf5Te/e4tX
      rywyFHJUK2BZNntH24jWgJXv/XvW//A7vv8f/jP55Hw3S/9mkUganBwdkMrm6fUGTM0eiArd
      dgs/jMlkswwHE8bDIcQCyaTGwUmLhXIBVYLGYIqKh+36mOMBE+vpid/nESGyVMlzdNYiiCGd
      1IiQUKToqSrBoqI/cc7LFBfIGSrlUp7ReMrKyvKF3LQ/j82tXQLfQVZ1BG/EcaM3t5HVl6G0
      UCehiLNKcBRgxwrLlTk1xorGUq2Klsoj2D1MN8R3JiwsrbGyvILZO6c3tjEf/V891ylQ4DsM
      xw6ZlEaETOjPR4LjKEQSwbS9mQIsAkWWvlUyHPoue/tH5DIGsaQxHE/JJ2WcWEEKLPRMmWJu
      PvOpxxj0+/i+Q664gDke4tsmQiJHSooQk2n0p0xZIKbfH+DZE0Q9RyEpYkU6GePppmTGYcBw
      MmUy6JAqLBAHLsUvaUj8KvT7fTQJGn0TXZWwRn2UVJGFfBK0JKFjohoZVFl8PjfAi0rwCzzG
      c8kBHs8c6zabZCtVWudnLNXrX0gDQt+l2x9Tqpa/MKk8jgLW7z9g5epNHHNEQhU57Y4pJhXs
      SCKVSFCc13P/y9YYhXR7fQrFEnHgMjQd0gkFJwACByWRxrjgCNY/heM46LqG47i49pREOn/h
      9uXHcO0pTiAghg6hqJIxVALkp473GKNBj1iUsadT0k9BgruDMZU/IcGBY6Il05jjMcViCfF5
      J8GNk106gwH3t4747rCHpMr0xwGGFJCt1JHGh3y4PWaplmdpsUKrPUCJXdRUgRurJbb2T6mv
      rHLv4TbVYpqEILA7jUkRcjwccf3V7881y/fLEHgOk36DkSvi9U9wPY/B1GG5vsiwP0JSFL73
      +qtPFdudDnnrX27z5nevsL5/iK5m0BNtXn3l5lPFm05NHmzuo4kBl2++xsYn76Esv8n1xfmb
      9b6IiPUHD7jx3TcYtE4IlfTcJPif336XVy7XGAtZqhWwHYeD/fsgpyD0KGYSjH2ZK4v555sE
      C2qG44MDFhcKjE2TUb9JQtfZ3tqnPxiTTCaRlATVtMreyTk7e/uIkk7gTgERQxU5bg2oFDKz
      N87EQgxcHC/AGg8xrfl0sV8GUZYZWyHLC3nCGJKGRhCJjPodFDWByNNnrnu7ewSBz+7BEa4X
      k03K2N+gcpswUk/aoc/2H3La7GNOp08dD4A4pra0wtnpCXYks1SebzNJisbiQgUtlUNwBphu
      iGdPqC7UUfUksiQydiLqldlt3XPJAR5XggPff/JrFIU+gqQgCCKBN7vRkEWwHA9dlfGDgDAC
      9VHDmCzL9HtdcoXSrHVcANsNUGWBEPHJnbryJRMm54FjDtg+OCOfTaMlUowmU0pZDTuQCO0R
      Rq56YRL8pxgMBuTzeQaDAeNBj2JthdRTXoMOui2mvoAUWCjpIjldwI410nOOcfpSxDGnxwck
      81XiwKNQmD+dHAwGaBI0B1M0RcSeDJGTOQTXRDVSdLt9Vi9fJZPUn40NEEURzjd4Q30e3/bc
      4Rd4dvFMbIDHCFyLnb1DKovLFxKDfBXarRalSvUrpZSWZTG1LMqlL+qg2+dH9KdgSB5aZqYJ
      NtIZMqUl0vo30wQP+130dA4xChAVjdh36PTHLNQquLaDrim4foQ+p/FWt91ATxVQxBhV1wlc
      C9MJkWMfFIPAmZDMFucmra7roqrqIyKt47s2phMgEyDIKuPhkFS2QDY9f29RFPoz0loqQhxj
      Ow6+ayNpKRQhQtb1ufL1OAppNlsUK1VC3yORSDCdjIglDUOT8MOY8WhEsVRCFIRnyxhrc/0B
      a995id31Tzg8OGZiTjk6PEAysk91fG88fEB1sc7Ow3u0h0P2Hz7Edl32TlssVov87re/o3V+
      RBDGnB7tcXRwxtHZCcWFZY737zK2VFaX8mxsrSPJWY42PqI5FVmqlZ9+VGrk89GHHzJ2Ynbu
      fkCmdpXOwTrjSEcLTT64vYFsdzjohyxV5kgLYo8PP/iE2mKVt995n6vXr/Lg7l36vR5KwmB3
      8y69oUt/0Ke2MN+IqV/96pdcv36Vn/3sl7z00k0+/fiPeJHE+dkJ3V4POTCZihmKmflVes2D
      DT59sEdt9TL24Jzff3SXdquBbqS49ft/YfHGdeZJqKxBk/t7DRbLGf7xd+9y88Y17t69S683
      wGwdsHlwjuvajD2RUi71bJHgpKFxenxCjEAiU6JztM3ewRGjyZxOyZ9D5HucnTXY3dmi0eww
      mfRpdQYcbO/gI5DJpinXlpm0jzk4PmZ364SFssbImbVSHx7sM5pYKIrCeNgCSaHbbhPObbX8
      JWsKPBLZIpPWIb2xzdRySGSKxGabOxv7+PaYg5Mm1nS+SmschKxcucThceNJJXixVqHbH+CY
      I2qrN2ck2J2fsK8sr9A83MEJI6ZuSBDDZNRHUlQkUWLowNWli4mETDukvpBh6vjs7O7j2SaK
      nqTTbrFcv4DWQlCo5RO8/y8f4QcBfhBRKeYZDrocnbeRNIPYMfH8WQr8TKVAcRwznZokEsZM
      eB7HeK5LwkgiPkUjl+c62K6PrinEiIS+h6brOK5H0kjM7pMlCZjpoWVJRlEkEBWiwMK0IhKa
      iKRo+K79pIosSvJcFh5f8ZCcHO2TLtZQ8TCnFrGoYloOl1frDIcDsmmDsR2QS3+9RjaOQw52
      96jU1wicKZ5nI4kyUz/GGbVRUgUEz6K0uDr3KTocDMjmcgyHQyzLImNo9K0AJbSRjDyKGFEo
      XGwD+M6Ug9M2CV1lub7IYDDEMUeomRJK5M/dDh14NvuHp1y6cgVzPMKyLBQhQtCzFFIKE9un
      02qzduUyivSMV4KbrSYL1S93Czg8PGBt7RKt4y2E3BqVzGcC7ReV4Bd4jGdqA3TOj3j/j3dY
      WbuCKrocHx+TzVWI3DGmM1M9JdIZiEJ8e4KeKhCODzGFEpZl8b/93U/RZPHJNejjduh8UgIt
      jTNqk0xlUNIlCikNy7JIGMajduiQh/fvUauv0Wo2qFYrnHeGVEt5yt9mGzTQ77aQ9RTWZESu
      WEGKfTr9CZmUhu1FKEKIamTmrATH9DodMvk8nXaHUmUB1xwytj1q1TJ+EGFNRiSzFzOyiqOA
      Tm9EuVRgPOgx9SLSCQVJSzId9cmVKigX0CwDM0eIRAJrMmLqRWhSjJJIYY4G5IrlueO5jo2s
      JvDcWTxzNMCNRLKpBIgyYeA/aQt/pjhAt9NGVmQCd8rICqiUCkiSgKImuHJ5jdXlOpIkIUkS
      hmEgKwq6niSVTFKtVr6QlnQ6Tfr9Ebl8nqODDUxL4njzUz6+/QAniPjDe++ztfmA9a1diFy2
      d4442niAGcRsH56Qjafc3tjm4Pj823vIOODh+ibudMj2/imCIHC6v83Q9tje3MD3HXb3j9nc
      3JwvXhTSb51w5/Yd9s56CAKous7+3h6Nvfs82N1n9+CMjY054z3C0dYGvfYx5yMfLaGzt7vL
      9s4uWxv3CXyH9Y29C8WLApd/+u1bAGxtbeAHAQ8f3OP2xx9yctpga+94rjhxHPL+W79hbE75
      7VvvAbC5+ZAgjLj9wft0xybvvPUOj0ckPlOtEDdf+yE3X7vod321iFjTdc5ONrm8XEJRdaaT
      LpKoMOh18cOIdCbDaDQhFlyIF9ETCu3+iHouxUlniuCIiJHLYDjm0sq3I4qPo5il1RWOj46p
      V0scn7dJZwrY/S6JfJV24wRZSUE835TLGKjWV2nd3WCpluK0M2FBnVBcvMJSVaJz7pAyfIbW
      xdqrF5aWuHvnE4xaRDBqUrn0Mqrd4LQ9oNvpceWC/1Fnh3v4UYTjhxTLC7TPjlCTOexRC92o
      EUbzpayj9hlj22fj4UOCMJyR4OoizfNTlut1kBSWa58ZAT9TKdC3hSea4MBjPHFIGursaPRd
      ZFWFGARRIgp8EGaib1WRGQ76ZHL52V28rmK7PpqqEMfxU1d8P484jjg5PCBTLNNtt8mmDWJR
      Y2o7pDUBX9QJrQGJXJVi9usrwXEccrR/QKFcpd3ukErqJI0kUiKFIQYM7ZBxt0GxtkJSn/8Z
      Qtdi/6xDUlfIJRNIqRyDxjGqkeL09JzF5bW5Js//KR6Tak0GDw3BM1FTefrtBourV+bWGJvj
      IVoyx3QyiycLEagpMroEqoE3nZDK5RB5TjfAi0rwCzzGc7kBHqPfPuOsa1HJadiRQjDtkUzl
      UDNliukvkuD7d+5Qv/wdXGtMJqGyd96jmk8weaQJLpe/3Dn7YojpdzoY2RzDXp9ytYokCliW
      RRx6BIJK5JqoRo7kPNeWcUy71SRXqhIFs2vewLUYTX0MBXxkPGtMplB54pk/1yrjkGazy8Kj
      4pnruowGXQQliRh5ZEuVCxkEB55Dd2iyUCkRxxGu52ObY/RUDnPUJ1+szGU3GUch7U6PXDbF
      yHSolAp0WucEgoqCj5JI41hTypUKoiA8WyT420an06TfG3H//gOiyMS0ZI43PubDT+7hBBHv
      v/0OG+v3uL+xDZHL1vYhRC737m+ye3hMjin3j3uYwzbrdz+l2R1980VFEcNek7sPNrHGbfZO
      e/jOhH/63btY1pS7n37Mzt4xGw8fzhUuDn3CwOLevQ1+98/vEAG7mxvcuXefj259TKfbJgwD
      7t3fuNAy99bvcdps4IYwaJ/y0e0HJOSY3d1Ndg8brK9fjFTblkXzcIuhO9ME3364iznscvv2
      p9z59BP2T1pzxfFdh4Pthxy3hhzvbWIFkFBF9g9PeHB/ncD3ONnkJXy+AAAc9ElEQVTb5Lw/
      K54+1xtA1XVOjg/I5Ap0OwPMcZtYVBl0O3hBNDPGGk0YD0cQg56QOThpUy3l0SSB066JhsvU
      9nHMMePpNx8yEgOlWh18h8HEZ3WxwMHuDmEUoCTSqIqApOgIwpwHtyjRaQ+4/p1rTyrBXiSQ
      S6pEosqgN5tpdvX61Qut03Y9ckpIa+yRr9RJaSLHJ01e/8EPSakxnj8fSX8MWYJIy5FVP9ME
      58o1gmmfYrWO48xX7RdEidXlGpPxCCVZJCFBt9Xi2o2rrFy6ytHhIWsrdUaj2Uio5zoFCgOP
      0cQhndRmXpyBh6w8SisEkTjwiQVAkFBk6REJLhBH4aP2Zx9NkQgikCWROAblKf01HyOOI44P
      9kkkUzRaHfLZFIWFFQJrTOBZeMKMBBu5hbnaoUPPZn1zm1r9EooQ4XkWiqIxmrqkNfAjiXa7
      SWVx5ULu0KHvsHd4RiKhU19aZDQaEUUR+XyOg71daitXvnTIyVeh1zql0Z1gpNJcWl5gNLEw
      h12SuTKDzsy92pjDCCz0HPaPTjF0maHpkkolyaUMktkcZ4d7ZItVOq0Wq5evvNAEv8ALPFN1
      gG8Lj2+B2o1zcpUazbMTlldWvqgJ9hzavTGVWuVLNcH3795j9dpL2JMhhiY90QRboUTaSFAq
      PZ1rdOB7xIJIp9WkUF5Ain36Y4uUJjF94sKcJJeZbwCf57lIokS706VSrTId9RlZHvl0gkjS
      8KYjVCNLJnWxGQu2baM/mq9sO4/atAMQowBJ17/wmc0d1xzjxRLWZICip4g8h3ypgjJHpfrL
      SPDj9mpFlgiCgE6nS75cJZXQns8N8Bit0wO6gwEPdk4xRz0kRflME1ytI0+O+HB7zOJCjqXF
      Kq12HyVyUdMFbq5V2D08Z2XtEutbe1QKKQxBYM+aaYJPdgfceP2HT6UJvvPH9yiv3eTo6Jw3
      qzW2H24RBAFjx+fq1evsbj7k5hs/mjveB++/TX1pBctzsdGpFwzuP9ympUAo6nhmn9d++JcX
      W2Qc8utf/4b/+l//d6xxl/dubXJzQWFkXGWw/ke+93f/hadVbGxu7xAjsrqQZXd3G1XVaI8d
      Xrm+9rXfG3gOx3tbmMtXGbeOSeXexO4c8eCwj+EPqL/6JsNOg0S+QornnAQLapqToyMWq3nG
      psl42MYwDLa39xiMJiSTSURZZyGjsXd8yvbePpKSIPQsYgQ0ReCkNaCcTyMLMa3RFDFwsN0A
      ZzphMn06FVu9XgdElhcKHJ+1iWJIaDKFco1W45jFlUucHh1cIN4yYRhhGAnCKCKc9sgvXkZW
      NGTRZ3n1GseHF2tdaB3v4UVguSG7e4eEgTurtAL1+tKFYn0elWKe4WRKozXkxpU6mm4Qz1kJ
      RpRYri8wGY2QkwUSEhwcHeM5Nsv1OoIo4SFTTM8E9s8lB/isEhx8pgmOQgRRQhBEQt+deUcK
      Ma4XoCgSYRgSPjLAApAkidFwQCabJ3pEil0/RJEEwlh40nckyxc/ZB1rQiQoNM7OyKYTxJLO
      2JySM2R8QSO0RyTzC+TS86Us08kYRVU4ODolm07OxP56CmfYxpd03HGffLVO2rjYSKPRaMR0
      OqVWqzEej8kYKmNPRA4ctGz2qdOLfqdJIOooYkwum2F/b4/aynxu06HvcHh8/oQEJ5NJVuoL
      jEYmmiyAmsA2TfL52bznZ2IDvNAEv8D/X3gmNsBjdJqnHJ02uXbzFbLJ+UyS/jW0mg3K1dpX
      aoKn0ylTy6JSLn/h75pnB/RNSMoeWqbCqHNCMpUlW6l/Q01wTLfdIp0vMuz1KFWqBO6UoemR
      Tki4kQSehZ4pkJjHHTqOaTbOKZSr9LodKtWFWbypR0KKcEIJMXRJFytoFzGyCj0OTxosrawQ
      2iZWAPlMCtt2MEd9MqUF9AtUlmGmwTYMg8moTyCoiIGDpKewxgNypeqF2rUDz6E/th6R4AjL
      drHMIYl0ntGgT3Wh9uy5Q5cX6pw125jDLntbbbJJlf5oytLlmyxeYFzQY5wcH1Gs1Nhev0uo
      aIybLYoLCwyckB+9+h3efeddJCFg5dI1XGuEbcWEUszrP/wJnfYpE6/Eyo0Sdx/eI5Na5PTO
      B4iVl/nLH73y9HOCo4jJoM32wSGTXp8bb/yEnB5xsreFB4RhgKYYyEqD773x9R2XcehD7PLr
      X/yK0tIS6XyZ3Y0tgjDEdhyu33wFc9jkuGPzvVcuzb3M0fkexwOZlVW4t7FJGAvUSxn2zhuo
      ahalPeR7r80/dzgKHH7169/yf/2f/weeH7K19SmO41ErFzgfOryeyFCcY0rkY2ytr+MBeiqL
      2z/i/tYJyXSWyDtgoZhiP9K5Vi88myRYCiacn5zQ7JiEccxgMHmqOKHvcnR0wu7uFo1mF9Ps
      0e4O2d/cmmmCMzNNsNk5YefgkP3tU2oVnbEDqqZxeLhPfzhGUTWG/XMEWaXf6xJ8A01wDBQX
      6jj9DtX6MpZlIkQeaqaErihoqk4urWE5c7YviyKtVp/V1Ro5Q6bZnxADqiJRrdU5Pz2ksLBG
      6F6sjSNS0iwnLE4GHrVqif5wzOHJKbY5QlENmJe0PsLp/i5+FON4Ie50RLlaR0tmaJ4ekMtm
      OW/M1wrxGIv1Gv1ujziGg8MjPNtEVjUkSaQ3CVhdeIY4wJ8iDANEQSCMYgRRxHddVF1HfAoX
      hsD3cL0AVZWJEYkCH0VV8XwfXdPwfR9RkiCO8P0ASZSQZBFBlIkCm6kdk9AkRFkm8D1keVap
      FEXpqTTK8Fk7dK68QKfZIJ1KMLE8XM+nUsjixRKRMyZTXiIzB2kNPZuHmztUaktMRkOSho6q
      qowsj5QcPZqO2aWwsHwhEhy4FnvHTQxDI6MrTEOJWrnAaDSi32lQrl8hfUGnjuFwyHQ6xbNm
      o5tSaoSaKjDutanWV+dL+R7BMUcz+3oxZmmpxnA4YdRvoRlp2u0uq5evkU09I8ZYX4VGs0Ft
      4csHqB0c7HPp0mVaR5sIuUtUsi80wS/wRTxTG6Bzdsg7H3zK2uVrqILLyekJmVyZ0B4xdQVk
      WSaRmWmCZ07AecLxARNKmKZJraCTrlzm9Zeu4Hke/fY5590p+ZQMahpn3MZIptGyFQopjel0
      ipFMPmmHfnD3DrXlNdrNJpVKhUZ3QLVUoPKttEF/hm6rgWJkcKYTiuUKse/Q7I7IpXWmXkRC
      ipESaVKJ+d7Yoe/ih9AfDFhYqOJZJhM3RBNCnEhCjlyMXGlu0uo4Dpoicd7ssbhYxbEm2IGA
      Nx0iKEmE0CFbrF6ovToKfVqdAQsLFdzpGMsXEAIbSUsw6M/aoeetVDuOQ+Da9EYmS0tLyKKA
      ZTs41gQjk2fU71OuVp49Y6zjgx1MNyChq9hBTDalIQgyiiyzVF8mn8vNBiuLApoiIWsGquCj
      JAvk8zkWygUmlsNSrUoYhpwe79Eduly9VGdr5wGQZXD6gN2WRX1pgT+88w6eZ9PqjakUDD74
      8A7YE1zVoDcYUFVD7h01EQWRfPbpXKC/gDjgk09uo4oBh+c98sUSrcMtLNGgdbJPKpnkwcMt
      jFSGzBy2KAAPPnqbYZiCaRNLyiJFHgd7u7TaLfLFElvrd5nYsFCZr3XjN//0Tyihj+WMsJUS
      cmByb32L/6+9M31y5Lqy+y9XLIl932rp6ia7RZGUNRp5HCMr7HHEzNgxcjj8vzrCMRpSEjkk
      h5aoXqu7lq4dhX1PZCIX5OIPqCKpEGUBVPtDR/f5jhsJIF/mO++ec+5uNcvJ5RX63GUymVAp
      //Hp2Z/C0bMnzGyXQr7Ao69+C6JItz9iMpkgLU3Qcmttqfylw0e//pT799/l6PCQ+tYW494F
      j4/OGXebNM8vCUSY2VDIJF6vU6Dv5wn+ww/c45s5waqqct08YreRQ1FjGHoXWVSYTUYrOXQq
      yUw3CEUXwjqKKjGcGVTTCdozi3ABMkumEx22/7Lu5y3CIGD7zh6n+w8p7j6g2x+RTudxJkNi
      uSq99iXRRJphv0Oj+udvMN+e0x3p5JMLnKXEh9kY+nBCIlsirkK3+ZJYqkrorS/lbmw1Vp1l
      LYIfBCjROPGIwtVVl/ffu8vxyZAw3Mxj7Ho+cdllsvAQJJX5dISkJiDwmLvwTm69IODbdGiW
      JvFsBVkUuLi6xp1bJMt1AscgWMzxtNVb+7XaAr0q3HaCA3/J3HRWzipBIvCXSDdEFkEk9G86
      xYK4itXWZySTaZaui6LKuEv/ZjQSyN97vNAfIrxJRU7nK4wHXRLxKKEcxVzYpKICrhBFcA0i
      yTyZNbM3l47JdGbQH4xIJJMQeNgeZDUVIZLANSakCtW1SbA+m6HFVF5etEkmYiSiCsZSQIvI
      pNNpLs9eUqjdIbFBOrTnWly1B0RUmWRMwVxKhPaMaKaEGCzJZDJr15rNZmgxBduT0KcjarVV
      J9jUx2iZAqPBgO3dXWRReDMXwNtO8Fvc4o1cALcY9a65HpiUs9FveYLTqOkyhWQEwzDREt+Q
      4CcPf8/W3fewzRnpuMpJa0QlG0d3QjKJOKXS+nve/xfGgx6RRIb5ZES+XCF0LTqDKVtbFRzH
      w5yNECNJcmsmZHdbV8RSOcz5nEq1gigImKaJ71qgaiwXM2LJPPE1UyEsy0KVRdr9MY1aBcuY
      MTYcNFVAjCRwjCmZQmWjzm3gL+n0Vk9r25hhLgWyySheIDIZ9SmUq2vNMQ78Je1On1Ihy3hu
      USnm0SdDPDHKcjEjlS8j+EvUWAyRN1wNOhr1mUx0nj3bJwxNTEulefh7vvzqMbYX8Nknn/Bi
      /wlPnx9B4HBy2kQIXZ4/f8nJ5TV50eJZc8xiNuD541fjCfZsnUdPn3N68ISj82tMy6V5eoTh
      hQwuj3h0eMHBixcI0ppbrtDl+YuXBN6Sq5MjxqaLPR/z8SdfYNsWT373Ob9/csBktn4z8V/+
      5ZcsTIt595yBDUdHh4QhnJxdcHzwlP2njzk6udzoex8+fUxvOGTphzx8+JDRaMzBV59zdHpC
      qzvk4OXFWnWWjo2tDzhu9jl4+oxlCMen55wc7SOKIftP9/nVR7/m9v3/Ri8ARVVpXl2SyeUZ
      DCbMpx1CSWU2HuF4AalUktlszlxfeYJVVeLiekCpkCEqC1z0daLYzBcurmUw/Z4p1d9GGPho
      6Sytywuy6QSd3oh4poBgDonn60TlkK3dd7g6X0++HHoee/ff4ez0gt3tCpOZyenpGb6/JKKl
      UYQlWqZIr91c+xq3t7aRZTCFJMUo5EtVBr02oigj+AtShR2WzmZzgl3PJy78IQne3t4mkswh
      +xbemn0bURSYWiHblQKlfIKF7SMIIpIo0ev0uPfgAVv1b/Jk3+gt0C0JTsQjq06w7yHdypdv
      SPBtMJYsicz1GYlkmjAMEAVwlz6yJOKHfC1/ltZ9Mv8phCHt60u0TJFxv0tCixLKMcyFxW69
      hL5wmI/7JPJVMmuci4dhwOXZKflylW63T1KLkCtWscw57mIOkSSuMSZZqK3VWYYVycSzueoM
      iSVSFJMR5q6A7C+Q4hms2YB8dWejoC3Ptbi87hOJyKRiKoYnUkpFsUOZfvuaxs6dtbZU5mzE
      2VWHSqXMfOESkUEVQ5YoTEZ98uUGcVUkkU6/2cFYbzvBbwFvuCe417omW6nTbl6ys7v7R55g
      z7XoD3XKtfJ3eIKXPHn0hN13f8hiPkGLyDQHOoWEwsIXScbjFIvfLzV6POgR0VJMJ2Mq1Rqh
      ZzOcLkjGJJYoLBc6WrqwNmnttprEMwUUMSQSieG5C6ami4qHENGIKyKCoiKLa+yIw4DWdYtS
      pUy3N6RRr7KYz7B8kXwmiWVZmPMZyVxpYzm0aZpomsbCmGH7EmlN3ZgEh4FHtzckl0kynltU
      SwX06QhfiBC4BvF0nuloSKlcef3k0K8a/c4lw8mUF6dtDH2MrMiMdZ+Y5JEpN1CMK7481qmW
      0zTqFbq9EUpgoybzvHenzHmzx+7eXQ6OLyjlNDRB4Gx46wke8+DH/35jT7Bnz3n6/JC9u/cQ
      ljpnrSiy0eK0p5NMxlAE2Nne4uDgkJ/8+IM/XzB0OTw65ad/W+I3H/0z/+kffkHz5THtqc0H
      773LxeEB/nTE3s/+M8U1Oq2B56LILv/7f/2K+/fLNLUCKQLOTk5wi2nOmk1sL8KHH2pE8+t/
      98Cz+eVHv+F//o9/4vjoCNMTyYoLlNp7eIMmRhBda+qM57q0Ll6y2HoHo3dFOlfg9OyCgABb
      11GicWb6nPuSxnYp9WaTYEFJ0mo2qVUyGIbBfDpE0zReHp0w1U0SiQSCFKGWjnJyccXRyRmy
      qhEsLUIEFDHguj+lmE0giyHtiYG0tFk4Hq5tohubk+JbEjzsdxlMHXZqORZeSDUbJ53KMDUs
      hr0Ou3t316vn+dx59x4PP/8Ua+ljWi5uKJJNRJiO+1Qad2hsNdb/zUSJ69aEe3sVohFl1VS0
      5uSKVZrtDpY+IZUr0mlfb/S9Wxdn+ITYSx9BUogq0tce42pjG2s+XfMCBbYaVfTJBOnGEyyI
      IqLvEMtVWUxH1LfqmObqv3kjOcA3nWCfcHXKTxgGCIIIgrCa+yspiELI0lsR3SAICcIQWZQI
      hRBREJnP5ySSScIgRBBCPD9AEgRCBG7V2RuT4jCk02qiRKL0+kNSSQ0tlUGfm6RjEp6gMO53
      SebL1Ep/fosVhgFXF+cUa9uEroVhmkRjMWaGg7eYIMXSlDMJhJhGZI0BFJ5tcHR6SblSYTSe
      rUj60sbyJe7d2WY+n6NPRuQqjbWCrL4NXdcxDIPEjby6mIzihBL9Tova1s5a4jrfc7i8aqNF
      FcZzC03TiCvgSzF8SyeRKzLqdalv774+wVhvPcFv8f8Lr8UCuMWge81Fs0MuX2Z3b/t7By/d
      ottpU6rU/qQn2DAMzMWCcumPx4d2mqeMTAFNdommiswG18S1FJnK9iqH/i9EGAZ02h3KtRrS
      Tec2Ho9i2x6mPiKSzJGMb+CL9pecXzapbu0QOAa65ROXA0I5wnjQJ5EpUMylN7rG2/Rsaz5F
      twPK+SS2C/qkT6ZY3cxjzDeeYGM2xvIl5MBGiqUwpiNK1fpaJPi76k2GPVAT+LZOLJllPBhQ
      rdeRJfH1IsG3nmC9d8WXwx5q6KNEooSighRYKFqeH7yzvq/1unlFoVzjaP8xvqIy6/QoViuM
      7YC/+dEP+PSTTxEFj+3de7iWjmn4BDL8+Kc/YzTqMHNy3HlQ5tHzfdKJGi+f/h+Ezpyf/80H
      398TfAO9d0lvaDBz4G41yS8//py//XCH07GPEngIQo+//smP165njNtcDQy2dkWMpU/z7CW+
      ICCLIvW8xnjuUNwgyM53TD765Av++3/7ew6OT/CDELvjMonfYXL2hOK2ywcP1v8v3MWMX3/2
      kH/6h7/j6OUZ3tLGMG3u3n+AOWhiBjHe2Vr/VM3SR/zrVy/4x//yc0JB5vDxF5hLmVouSSAr
      6J7MD/eqrycJViIJMnGJJRH0wTXNVpuT4yP6w8lGdXzX5vTsgtOTIzq9MaYxoj+ac3pwwBKB
      ZDJBqbaFOWhyeHLG+UmbWjmG7qwG8l1eXDAYjlHVKOPhNYIcYTIe4fl/+UtVy5YILJ0gCLk4
      PSMIPXKlOlFFWHVcN6wXSlF2CxEue1M8xySRK1PJp9EXDp2Rwb2tzXRMUkSjUb69IQUkUWR7
      e5vQW5Aq7rK0N+sEq/E01cLNG0gQEAmJpzIMum1qWzuY65LgG8RSeYqZlV9iPulRre+SzBbo
      XDdRVJXgxrf9Wm2B4BstP0AYgiCE+EG4WsmCiLTBZELf8/D8YJXsLAiEgY8kyXi+jyLL+L6P
      KIoQrgiuKAqIooggiAS+g2WHRKPSapyS7yGKq62PIIrfy6P8bYS+x/nFFelklEi6jG8bpJMa
      M9PBmPSIZypkU+vJoWFlFDm/bJHQIjiOw8INySejSPE0UuhtJDe+xWw2W5HWmMLMDtkqppgv
      Raa9awq17Y1J8G29uCqyCBRk30JNZJkMutS372zkMPt2PcfUEaIpIsKSRLZIt91id+/e60OC
      /xTa7Ta12ncPpzs7PWHv7j26FwcI2T3Kbz3Bb/EdeK0WwKB1zseff8Xe3XdRBZfrVpNkuoRv
      TW48wQrRZAoh9PEck0gsg6+fo4c59LlBvRAjUdrjJ++/g+u6jHrXtIYmuYQMagpb7xHXUkTS
      ZfLJCIZhoCUSX8uhnz56SG3rDr1el1KpSGcwpVLMfidJ/kvguTahqDDsdSlUqiz0McOpQUyV
      WYYScTlAjKbIrymHdhwbWYngOjbRWAzH1OmNDbbrJWw3ICKH2L640RPbXzq0emO26hVMfYrl
      iyihgxxPoxAgx2IbHVJ4jkV3pNOolQnDANtxWegTVC3DfDKkUKmhbmA6WjoLhrMF1VKB6agP
      qkYypuB6AePRmGqtiii8Zp3g0WhEJpNBCJaYAVTKZTxfQpCzNHZXN+FkbuL7HnFVQFBjiEKO
      iFKkUq2QTyqM5s7X9SbTEbOpx/077/Lw2WO0aIVJ+wlDscLf/ewnfPnZ59S2qvhClPfvN7i4
      bOMtFgSpImfNNlsJkUcHx7xrLdnbeTWWSIDHv/2MWLbKZG4RzxRIpNIcHp3yox/9gKcvzlma
      Y374V/9h7XpffvYb/t1P/yNffPFv/ON//XsuTl+i5hp0Tvfp+AWSizOc7A/44M76PMCxbexR
      k2G+ghLCxekxkigiiC30Vou/+sUvNkqHth0XvXfJrFDG6Z5yMbKRCbD1ZyRydcamx/v31yfV
      juPw8uCAQvHnhKLM6dEhSdHC0hoIsxbE0tRz2uu1AB58+Nc8+HDTT/3hB+7yDY+QJZnr63N2
      6llkJY4+baNKKvPJBGcZkEgm0XWDUFxCCJIsMJlbFJMLerrDuRGgigGTyRRe4QJoNBr0ZzbZ
      TJJOf8ReUSWerTDptmjc2cMz8jQvzsi8v17yWqOxhahEqFdWN3gqV2Iy7dPYqdO/1mn3p0RV
      A1h/AUhiyJwE70ShP56RK9URXZ3WaH6Tbr0ZhHDJUkmTUiCs1OnqZ/jBKpNJkhWCDTcqoqRQ
      yiewHJ/5uEe5UuX0xUPUMMuDrQbd2Zx6Tnu9tkCvCred4DDwMBcusZi6kj8H/tdEFkEg/Jpw
      C4iigGkaxLUEgecjyeKq83sjIBPXEZKtCccyCKUIvfY1WjyKHEuiyCp4FpF4ikHnCi1bJrVm
      PurCnKNGNSzTwLZNZFnFdHzqpQxzOyChwsITSWwQZDWfDGh2hkS1JBHBZeFJpGMSkVQBxXdR
      U6mNnq6TYZfucEZMS7BTr2AsbIzpgGiqwHTQpbp1h+gGI5echU53bKKI4Ur2HU2xVc6xcDwG
      /T7bOzvI0mtOgr8v3naC3+IWb+QCuMWgc8X1wKSSi2H5K09wPJEikqlQTEW/1vrckuBHX/2O
      7Xs/xDampLXIN55gOyCT1CiXXwEZvtECpQtleu0m5foOquDRHc6QQxfLl0hGBOKZ4tqk1bEt
      ZEWh3e5Sb9QRBQHDMAiWNr4Uw5mPyZRqG8mXQ9+l2RmyVa9i6hOGc4dMTCJUNMxJn2J9Z6NO
      8NJZ0BnM2G5U6bWuWPgSqahIJLmKRsyXaxsfgxqGQSKRuPEEx/CtGbFUlkGnRbmxSzwiv56N
      sFeF6XTMbGawv/8chAULJ0rr+BFf/m7lCf78039l/9ljnuwfQuBwftFGDJe8ODzl9KpFUbbZ
      v55gzUc8f/z7V+IJDkMfNaLw6LdfcnE9RJYknj56xHgyJZPL0Otcc97scbC/v3bNzz/5Fd3W
      Jc+ePqM3s7H0ER9/+m8cHR5ycPACx5zw/GgzD69j2ZwfHbAI4Pj4GEmSePjwIdPJkGhMZf/5
      8Wb17BUJnjqQy2fpdbscHrzgq89+zcFpE2OxmRZsac/5548/AeDo8JDnj7/k8fMjhq0LzjoT
      lJt+0f8FJKyZbXsRdb8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Inc, Auto' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Table.County' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.County' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Change' width='192'>
      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
      +JARA2DO/wdU0uyDTsd9DwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
