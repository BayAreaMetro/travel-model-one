<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='TimeOfDay Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\TimeOfDay.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>4</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>34.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simple_purpose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[simple_purpose]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>simple_purpose</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;at work&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;work&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_mode</remote-name>
            <remote-type>4</remote-type>
            <local-name>[tour_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>17</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>18.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_hour</remote-name>
            <remote-type>4</remote-type>
            <local-name>[start_hour]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>start_hour</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>5.0</statistic>
              <statistic aggregation='Max' datatype='real'>23.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_hour</remote-name>
            <remote-type>4</remote-type>
            <local-name>[end_hour]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>end_hour</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>5.0</statistic>
              <statistic aggregation='Max' datatype='real'>23.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1929</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>6305.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_participants</remote-name>
            <remote-type>4</remote-type>
            <local-name>[num_participants]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>num_participants</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1992</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>6305.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010 Base (v0.4)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040 Holy Moly!&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TimeOfDay.tde].[pcto:sum:num_participants:qk:2]&quot;' value='Share of Work Tours' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TimeOfDay.tde].[sum:num_participants:qk]&quot;' value='Frequency of Work Tours' />
        </aliases>
      </column>
      <column caption='Start Hour' datatype='string' name='[Calculation_4390912182922448]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [start_hour]&lt;12 THEN&#13;&#10;  STR([start_hour])+&quot;:00 AM&quot;&#13;&#10;ELSE&#13;&#10;  STR([start_hour])+&quot;:00 PM&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='End Hour' datatype='string' name='[Calculation_4450912183128862]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [end_hour]&lt;12 THEN&#13;&#10;  STR([end_hour])+&quot;:00 AM&quot;&#13;&#10;ELSE&#13;&#10;  STR([end_hour])+&quot;:00 PM&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column datatype='integer' datatype-customized='true' name='[end_hour]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' name='[num_participants]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[start_hour]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[tour_mode]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[num_participants]' derivation='Sum' name='[pcto:sum:num_participants:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[num_participants]' derivation='Sum' name='[sum:num_participants:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='TimeOfDay_personsTouring Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\TimeOfDay_personsTouring.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>simple_purpose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[simple_purpose]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>simple_purpose</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;at work&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;work&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>persons_touring</remote-name>
            <remote-type>4</remote-type>
            <local-name>[persons_touring]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>persons_touring</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>284</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>24.0</statistic>
              <statistic aggregation='Max' datatype='real'>2250482.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>4</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>5.0</statistic>
              <statistic aggregation='Max' datatype='real'>23.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010 Base (v0.4)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040 Holy Moly!&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[hour]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[simple_purpose]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[simple_purpose]' derivation='None' name='[none:simple_purpose:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:simple_purpose:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;at work&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;non-work&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;work&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;school&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;college&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='PersonTouring'>
      <table>
        <view>
          <datasources>
            <datasource caption='TimeOfDay_personsTouring Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[hour]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simple_purpose]' derivation='None' name='[none:simple_purpose:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[persons_touring]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[simple_purpose]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[persons_touring]' derivation='Sum' name='[sum:persons_touring:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:simple_purpose:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;non-work&quot;</bucket>
              <bucket>&quot;college&quot;</bucket>
              <bucket>&quot;at work&quot;</bucket>
              <bucket>&quot;school&quot;</bucket>
              <bucket>&quot;work&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:simple_purpose:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[sum:persons_touring:qk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:hour:qk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Work ArrivingHome'>
      <table>
        <view>
          <datasources>
            <datasource caption='TimeOfDay Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde'>
            <column caption='End Hour' datatype='string' name='[Calculation_4450912183128862]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [end_hour]&lt;12 THEN&#13;&#10;  STR([end_hour])+&quot;:00 AM&quot;&#13;&#10;ELSE&#13;&#10;  STR([end_hour])+&quot;:00 PM&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4450912183128862]' derivation='None' name='[none:Calculation_4450912183128862:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[simple_purpose]' derivation='None' name='[none:simple_purpose:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[num_participants]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[simple_purpose]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[num_participants]' derivation='Sum' name='[sum:num_participants:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]'>
            <groupfilter function='member' level='[none:simple_purpose:nk]' member='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[sum:num_participants:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[sum:num_participants:qk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4450912183128862:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Work LeavingHome'>
      <table>
        <view>
          <datasources>
            <datasource caption='TimeOfDay Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde'>
            <column caption='Start Hour' datatype='string' name='[Calculation_4390912182922448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [start_hour]&lt;12 THEN&#13;&#10;  STR([start_hour])+&quot;:00 AM&quot;&#13;&#10;ELSE&#13;&#10;  STR([start_hour])+&quot;:00 PM&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4390912182922448]' derivation='None' name='[none:Calculation_4390912182922448:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[simple_purpose]' derivation='None' name='[none:simple_purpose:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[num_participants]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[simple_purpose]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[num_participants]' derivation='Sum' name='[sum:num_participants:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]'>
            <groupfilter function='member' level='[none:simple_purpose:nk]' member='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[sum:num_participants:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[sum:num_participants:qk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4390912182922448:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='WorkPatterns'>
      <table>
        <view>
          <datasources>
            <datasource caption='TimeOfDay Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde'>
            <column caption='Start Hour' datatype='string' name='[Calculation_4390912182922448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [start_hour]&lt;12 THEN&#13;&#10;  STR([start_hour])+&quot;:00 AM&quot;&#13;&#10;ELSE&#13;&#10;  STR([start_hour])+&quot;:00 PM&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='End Hour' datatype='string' name='[Calculation_4450912183128862]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [end_hour]&lt;12 THEN&#13;&#10;  STR([end_hour])+&quot;:00 AM&quot;&#13;&#10;ELSE&#13;&#10;  STR([end_hour])+&quot;:00 PM&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4390912182922448]' derivation='None' name='[none:Calculation_4390912182922448:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4450912183128862]' derivation='None' name='[none:Calculation_4450912183128862:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[simple_purpose]' derivation='None' name='[none:simple_purpose:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[num_participants]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[num_participants]' derivation='Sum' name='[pcto:sum:num_participants:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[simple_purpose]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[num_participants]' derivation='Sum' name='[sum:num_participants:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TimeOfDay.tde].[sum:num_participants:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TimeOfDay.tde].[pcto:sum:num_participants:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TimeOfDay.tde].[sum:num_participants:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\TimeOfDay.tde].[pcto:sum:num_participants:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]'>
            <groupfilter function='member' level='[none:simple_purpose:nk]' member='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[pcto:sum:num_participants:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4450912183128862:nk]' value='36' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[pcto:sum:num_participants:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4390912182922448:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4450912183128862:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='WorkPatterns'>
      <cards>
        <edge name='left'>
          <strip size='189'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4390912182922448:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4450912183128862:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:end_hour:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:start_hour (Hours):qk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:start_hour:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Work LeavingHome'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4390912182922448:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4450912183128862:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:end_hour:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:start_hour (Hours):qk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:start_hour:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Work ArrivingHome'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4390912182922448:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Calculation_4450912183128862:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:end_hour:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:simple_purpose:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:start_hour (Hours):qk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay.tde].[none:start_hour:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='PersonTouring'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:simple_purpose:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:hour:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:simple_purpose:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\TimeOfDay_personsTouring.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='WorkPatterns' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Work LeavingHome' width='192'>
      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
      igYE4P8DyLuMAb9FrYsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Work ArrivingHome' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PersonTouring' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
