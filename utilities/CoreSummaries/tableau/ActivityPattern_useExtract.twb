<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='ActivityPattern Extract' inline='true' name='ActivityPattern.tde' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ActivityPattern Extract' name='ActivityPattern.tdeleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='ActivityPattern.tde' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='ActivityPattern.tdeleaf' name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity_pattern</remote-name>
            <remote-type>129</remote-type>
            <local-name>[activity_pattern]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>activity_pattern</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imf_choice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[imf_choice]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>imf_choice</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inmf_choice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inmf_choice]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>inmf_choice</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>90</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1649</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>129</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[ActivityPattern.tde].[pcto:sum:freq:qk:5]&quot;' value='Pattern Share' />
          <alias key='&quot;[ActivityPattern.tde].[pcto:sum:freq:qk]&quot;' value='Share' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;H&quot;' value='Home' />
          <alias key='&quot;M&quot;' value='Mandatory' />
          <alias key='&quot;N&quot;' value='Non-mandatory' />
        </aliases>
      </column>
      <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='real' name='[imf_choice]' role='dimension' type='ordinal' />
      <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[inmf_choice]' role='dimension' type='ordinal' />
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2010_04_ZZZ\\summary\\ActivityPattern.rdata&quot;' value='Year 2010 (v 0.4)' />
          <alias key='&quot;2040_03_116\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
          <alias key='&quot;2040_03_127\\summary\\ActivityPattern.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
        </aliases>
      </column>
      <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;University student&quot;' value='College student' />
        </aliases>
      </column>
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
      <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.587065' measure-ordering='alphabetic' measure-percentage='0.412935' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:incQ_label:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Less than $30k&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;$60k to $100k&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;More than $100k&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;$30k to $60k&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' palette='tableau-10' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;2015_04_136&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;2015_04_134&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;2015_04_135&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:activity_pattern:nk]' palette='tableau-10' type='palette'>
            <map to='#5e8c6a'>
              <bucket>&quot;N&quot;</bucket>
            </map>
            <map to='#88a65e'>
              <bucket>&quot;M&quot;</bucket>
            </map>
            <map to='#8c2318'>
              <bucket>&quot;H&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Scenario:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:incQ_label:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Less than $30k&quot;</bucket>
            <bucket>&quot;$30k to $60k&quot;</bucket>
            <bucket>&quot;$60k to $100k&quot;</bucket>
            <bucket>&quot;More than $100k&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:type:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Full-time worker&quot;</bucket>
            <bucket>&quot;Part-time worker&quot;</bucket>
            <bucket>&quot;Non-worker&quot;</bucket>
            <bucket>&quot;Retired&quot;</bucket>
            <bucket>&quot;Child too young for school&quot;</bucket>
            <bucket>&quot;Student of non-driving age&quot;</bucket>
            <bucket>&quot;Student of driving age&quot;</bucket>
            <bucket>&quot;University student&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across.Chart.Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Daily Activity Pattern Rates for Full-Time Workers in Households with Incomes of </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='ActivityPattern.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;University student&quot;' value='College student' />
              </aliases>
            </column>
          </datasource-dependencies>
          <manual-sort column='[ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;H&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;M&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[ActivityPattern.tde].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[ActivityPattern.tde].[pcto:sum:freq:qk]' scope='rows' value='Share of Full-Time Workers' />
            <format attr='subtitle' class='0' field='[ActivityPattern.tde].[pcto:sum:freq:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[ActivityPattern.tde].[pcto:sum:freq:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[ActivityPattern.tde].[none:Scenario:nk]' value='279' />
            <format attr='text-format' field='[ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[ActivityPattern.tde].[pcto:sum:freq:qk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[ActivityPattern.tde].[none:activity_pattern:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='2880'>Daily Activity Pattern:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[ActivityPattern.tde].[none:activity_pattern:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;Household Income:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[ActivityPattern.tde].[none:incQ_label:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[ActivityPattern.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;Share:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[ActivityPattern.tde].[pcto:sum:freq:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color' value='#ffffff' />
                <format attr='font-size' value='16' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[ActivityPattern.tde].[pcto:sum:freq:qk]</rows>
        <cols>[ActivityPattern.tde].[none:Scenario:nk]</cols>
        <pages>
          <column>[ActivityPattern.tde].[none:incQ_label:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Daily Activity Pattern Share for Full-Time Workers by Household Income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='ActivityPattern.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;University student&quot;' value='College student' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[ActivityPattern.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActivityPattern.tde].[pcto:sum:freq:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActivityPattern.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[ActivityPattern.tde].[none:Scenario:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[ActivityPattern.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[ActivityPattern.tde].[none:type:nk]</column>
            <column>[ActivityPattern.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[ActivityPattern.tde].[none:activity_pattern:nk]' value='45' />
            <format attr='width' field='[ActivityPattern.tde].[:Measure Names]' value='77' />
            <format attr='text-format' field='[ActivityPattern.tde].[pcto:sum:freq:qk:5]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[ActivityPattern.tde].[none:Scenario:nk]' value='124' />
            <format attr='height' field='[ActivityPattern.tde].[:Measure Names]' value='68' />
            <format attr='height-header' value='28' />
            <format attr='height' field='[ActivityPattern.tde].[none:incQ_label:nk]' value='28' />
            <format attr='width' field='[ActivityPattern.tde].[none:activity_pattern:nk]' value='112' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[ActivityPattern.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[ActivityPattern.tde].[none:activity_pattern:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[ActivityPattern.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[ActivityPattern.tde].[none:incQ_label:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[ActivityPattern.tde].[Multiple Values]' />
              <lod column='[ActivityPattern.tde].[pcto:sum:freq:qk:5]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([ActivityPattern.tde].[none:Scenario:nk] / [ActivityPattern.tde].[none:activity_pattern:nk])</rows>
        <cols total='true'>([ActivityPattern.tde].[none:incQ_label:nk] / [ActivityPattern.tde].[:Measure Names])</cols>
        <subtotals>
          <column>[ActivityPattern.tde].[none:incQ_label:nk]</column>
          <column>[ActivityPattern.tde].[none:src:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Daily Activity Pattern of Full-Time Workers by Household Income Category: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='ActivityPattern.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='Household Income' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;University student&quot;' value='College student' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[ActivityPattern.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActivityPattern.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActivityPattern.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[ActivityPattern.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[ActivityPattern.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[ActivityPattern.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[ActivityPattern.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[ActivityPattern.tde].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[ActivityPattern.tde].[none:type:nk]</column>
            <column>[ActivityPattern.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[ActivityPattern.tde].[none:incQ_label:nk]' value='58' />
            <format attr='text-format' field='[ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[ActivityPattern.tde].[none:incQ_label:nk]' value='132' />
            <format attr='height' field='[ActivityPattern.tde].[:Measure Names]' value='52' />
            <format attr='height' field='[ActivityPattern.tde].[none:activity_pattern:nk]' value='32' />
            <format attr='height-header' value='28' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[ActivityPattern.tde].[none:incQ_label:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[ActivityPattern.tde].[none:activity_pattern:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[ActivityPattern.tde].[:Measure Names]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[ActivityPattern.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[ActivityPattern.tde].[none:incQ_label:nk]</rows>
        <cols total='true'>([ActivityPattern.tde].[none:activity_pattern:nk] / [ActivityPattern.tde].[:Measure Names])</cols>
        <pages>
          <column>[ActivityPattern.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Person Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Daily Activity Pattern by Person Type: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern Extract' name='ActivityPattern.tde' />
          </datasources>
          <datasource-dependencies datasource='ActivityPattern.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[ActivityPattern.tde].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;University student&quot;' value='College student' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[ActivityPattern.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActivityPattern.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActivityPattern.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[ActivityPattern.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[ActivityPattern.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[ActivityPattern.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[ActivityPattern.tde].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[ActivityPattern.tde].[none:type:nk]' direction='DESC' using='[ActivityPattern.tde].[sum:freq:qk]'>
            <groupfilter function='member' level='[none:activity_pattern:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </computed-sort>
          <slices>
            <column>[ActivityPattern.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[ActivityPattern.tde].[none:type:nk]' value='46' />
            <format attr='width' field='[ActivityPattern.tde].[none:activity_pattern:nk]' value='101' />
            <format attr='text-format' field='[ActivityPattern.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[ActivityPattern.tde].[none:activity_pattern:nk]' value='52' />
            <format attr='height-header' value='32' />
            <format attr='width' field='[ActivityPattern.tde].[none:type:nk]' value='120' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[ActivityPattern.tde].[none:type:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[ActivityPattern.tde].[none:activity_pattern:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[ActivityPattern.tde].[:Measure Names]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[ActivityPattern.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[ActivityPattern.tde].[none:type:nk]</rows>
        <cols total='true'>([ActivityPattern.tde].[:Measure Names] / [ActivityPattern.tde].[none:activity_pattern:nk])</cols>
        <pages>
          <column>[ActivityPattern.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Indiv.Table.Person Type'>
      <cards>
        <edge name='left'>
          <strip size='204'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='104'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[ActivityPattern.tde].[none:Scenario:nk]</field>
            <field>[ActivityPattern.tde].[none:dir:nk]</field>
            <field>[textscan.41862.719548923611].[none:activity_pattern:nk]</field>
            <field>[textscan.41862.719548923611].[none:type:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{B8CCB3AB-1FA2-4697-957E-8C01B6D30393}' />
    </window>
    <window class='worksheet' name='Indiv.Table.Income'>
      <cards>
        <edge name='left'>
          <strip size='245'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='98'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[ActivityPattern.tde].[:Measure Names]</field>
            <field>[ActivityPattern.tde].[none:Scenario:nk]</field>
            <field>[ActivityPattern.tde].[none:dir:nk]</field>
            <field>[ActivityPattern.tde].[none:incQ_label:nk]</field>
            <field>[textscan.41862.719548923611].[none:activity_pattern:nk]</field>
            <field>[textscan.41862.719548923611].[none:incQ:ok]</field>
            <field>[textscan.41862.719548923611].[none:type:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{FC0DBEB0-36EF-487F-8E37-5D8E08153419}' />
    </window>
    <window class='worksheet' name='Across.Table.Income' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='92'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[ActivityPattern.tde].[none:Scenario:nk]</field>
            <field>[ActivityPattern.tde].[none:activity_pattern:nk]</field>
            <field>[ActivityPattern.tde].[none:incQ_label:nk]</field>
            <field>[ActivityPattern.tde].[none:src:nk]</field>
            <field>[ActivityPattern.tde].[none:type:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{79D1F0A9-5CDD-408D-BB77-A8CED651817F}' />
    </window>
    <window class='worksheet' maximized='true' name='Across.Chart.Income' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[ActivityPattern.tde].[none:activity_pattern:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='101'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;More than $100k&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[ActivityPattern.tde].[none:Calculation_9600929140032390:ok]</field>
            <field>[ActivityPattern.tde].[none:Scenario:nk]</field>
            <field>[ActivityPattern.tde].[none:activity_pattern:nk]</field>
            <field>[ActivityPattern.tde].[none:incQ_label:nk]</field>
            <field>[ActivityPattern.tde].[none:src:nk]</field>
            <field>[ActivityPattern.tde].[none:type:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{E4BB69FB-8222-4B00-9900-816969058C34}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Across.Chart.Income' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Income' width='192'>
      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
      qBLa/w9pTYEhwDaHOAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Person Type' width='192'>
      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
      2T+9NgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
