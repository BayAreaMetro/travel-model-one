<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='VehicleMilesTraveled Extract' inline='true' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>4</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1442</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1454.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone</remote-name>
            <remote-type>4</remote-type>
            <local-name>[walk_subzone]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>walk_subzone</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[walk_subzone_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>walk_subzone_label</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Short-walk to transit (less than one-third of a mile)&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ptype]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>8.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ptype_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype_label</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>8</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Child too young for school&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Retired&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>4</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Automobiles &lt; workers&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zero automobiles&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1949</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>8450.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_indiv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_indiv]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt_indiv</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>115686</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>173.72384615384615</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_joint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_joint]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt_joint</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>64984</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>37.865000000000002</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>116692</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>173.72384615384615</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010 Base (v0.4)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040 Holy Moly!&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]&quot;' value='Change in Average Vehicle Miles Traveled from Base' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' value='Share of Persons' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[COUNTY]' role='dimension' type='ordinal'>
      </column>
      <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[autoSuff]' role='dimension' type='ordinal'>
      </column>
      <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
      </column>
      <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
      </column>
      <column caption='Person Type' datatype='string' name='[ptype_label]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[taz]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[walk_subzone]' role='dimension' type='ordinal'>
      </column>
      <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:county_name:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across County' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:7]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:2]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across County Chart' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Per Capita Vehicle Miles Traveled by County of Residence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across CountyReduction Chart' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Change in Per Capita Vehicle Miles Traveled by County of Residence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:9]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='ColumnInPane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk])</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk] + [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9])</cols>
      </table>
    </worksheet>
    <worksheet name='CountyByTransitAvail'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[walk_subzone_label]' derivation='None' name='[none:walk_subzone_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk:2]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Short-walk to transit (less than one-third of a mile)&quot;</bucket>
              <bucket>&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;</bucket>
              <bucket>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='46' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[sum:freq:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='CountyByTransitAvail Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[walk_subzone_label]' derivation='None' name='[none:walk_subzone_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Short-walk to transit (less than one-third of a mile)&quot;</bucket>
              <bucket>&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;</bucket>
              <bucket>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[sum:freq:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='CoutyByAutoSuff'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='CoutyByAutoSuff  Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='31' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='PersTypeByAutoSuff'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='Average VMT' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[ptype_label]' derivation='None' name='[none:ptype_label:nk]' pivot='key' type='nominal' />
            <column caption='Person Type' datatype='string' name='[ptype_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Full-time worker&quot;</bucket>
              <bucket>&quot;Part-time worker&quot;</bucket>
              <bucket>&quot;College student&quot;</bucket>
              <bucket>&quot;Non-working adult&quot;</bucket>
              <bucket>&quot;Retired&quot;</bucket>
              <bucket>&quot;Driving-age student&quot;</bucket>
              <bucket>&quot;Non-driving-age student&quot;</bucket>
              <bucket>&quot;Child too young for school&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]' value='74' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='CountyByTransitAvail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CountyByTransitAvail Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CoutyByAutoSuff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CoutyByAutoSuff  Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='PersTypeByAutoSuff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across County Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across CountyReduction Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CountyByTransitAvail' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CountyByTransitAvail Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CoutyByAutoSuff' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CoutyByAutoSuff  Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAalUlEQVR4nO3daXAc553f8W/fMwPMhYvEQZAgKVKUREmUZMuSD8myDlu+txx546q1d6s2
      SSXZTcovsqnKi5RepVxb5apU3nuTSuIXrnVqy8nakWJZFCmSIkESvAkQBIj7HMxg7um78wIk
      RZMAORSJIYl+Pm8koh/0/NEzv+nn6e6nWwqCIEAQQkp+0AUIwoMkAiCEmgiAEGoiABvY0OAg
      14Z4nmsyO790fVngO5w7dZzzl8a4Ngq8MnSOEydPMjq1CIBZylOqOXW91uLcHG4AEDA5Msjw
      2DSrjy59pqdnV/m5y8DAGTyrwMGPPubEmUH8m34vk8kCLlNTM3XVVA/1vq1JeKh41QyTI6Mo
      6TiZkSUcc5z5ok57MyS6dvPczlZmFwts7kly+PBhIlGFkXPD+JJM72NVrpw/QTyZwHRdpqcW
      6e5KU8jbdPakKdUUWhM6QSDz3L5nIPCYnJmjvbMTv5rl0lyV557qYeDoQTKmQrMGUUNhaWGB
      wIiRnZ1jz7NPIxHhmcc7+cOBT4g1G8wuyOzdsUym6NNcmuC0nWFoPMvmpIEfayFOjVOnTVxX
      4tihA7R1byKzUKSnt5tiNktbe5rBS6N86Y1vs21Toq7tJAKwQY1cuoyWTHLl4hC1bAk5JtOk
      ebiBRjFfwA/a6ehoZWr8CkrgsJCT6NzWi+T71PI5ArkZHIuFzDLxZIqK6dCTTjKTL9LV1oPq
      L+NGegGwK3m0phQSgBYlqBUYm5yiWK5hORCUaywFMhGjmajhkW7pwM3Pk9jxAr5dxZENbM9l
      U7oDAEkK8FWZ3NIyqVSSpiaF8bkFPNXEa2pHdvNUPI1u2SfZtoVybhJJa8UsLRNpTiBLUt3b
      SRKHQTcmyzLRdQPLsrDMGqoeIQh8AtdGj8UxVIVCfhlZj6LiYnkSEV2FIABJwjZrqEYEWZao
      VS0iEX3lgyUFVE2XmcsX2PrMi8Q1Cd9z8QIJTVUAMKtlPBRUycfyJFRcnEBBV2UkCTzXYXhw
      iMeffYGoJlHM5zGamgm8AEOXMW0fBQ8fqFkuUU3C8iUMVcG2TFQ9gmtV0aNNBP5KYKxajWhT
      E+VyhWQqhSLXFwIRACHUPvMguFQq3c86hDWYponj1DcQFe6eOAr0CBA76fXzyA2CA9/jzPGP
      +ODIGH/6g69iBjGCcoZIso2lhQV2PbmXmOJw6vQFerduwfYCytlFTlyY5IsvPIajJlGsLKWa
      j6RF2N6ZYmg8g780yKK6lRd2tTJ0cRA/vo3WiMu2vq2MjIzzxNN7iagb9/si8Kr8p3d/xr/8
      D/+RUmaWwHU5c/QT9r7yCoWlAr2dLUzOLKAqEt3bdzF7+SItnUl++5tjvP72q2QWppidWua5
      vVuRE52Yy/N0b99FRIHRwbPo7dtIqzZly8VFBsclk12mt7uN6cUlzp8e4qWXX0R2S+ipLpZn
      x2hOpiia8NTjO6izS3/XlHfffffdz/KLtm1jGMZ9Lqc+FwdO8tKbb7H/vf9LpVJjdHQS3cuj
      NzVx6nKGdnmZo/0nmJxZZKmwzNR8lZhuMbVYoTA9zNDEApnFaXLLeUaGR+lOuhw6P0Nfbwen
      Tp/DtBzmx0ZZKBaolUsc+fggLdueoiMZafjf6roukiShKMq6vs7U2UOMZspU/CijQ6eZGJ8j
      EY0wtzhNQvc5dHgA2zcpFiqcOX4UqX0n5/v3o0U7mBkfpGbb+JU85y5PULMtxgcOErTvQi2M
      8dHpCZ7d+yRU5vjv/+1XnBsaZmZmju7NSf7wwYfEe55g8MO/R9q0lZOHTmDaFhPTcyQo8sGR
      M+x9dh+Guj4J+MyD4FKpRDwev9/13JFnFfjH3x2gq3cLgVPF1+Mors1j2zo4cfYyjz/7eZrt
      BY6dHWFzTy8LMxOkN/dhF7NoWoCnJogoHr5nI6sGqYjC6GyOzeko87kyW3q7KRdKKKrOwuIC
      j+3sY3RkjCdfeJmulqaG/72maSLLMrqur+vrnD7ez+PP7ePcyTN4dpGCE6EnLuNqBkvZIt0d
      aTxZQkLFCSSy81O0d3czc3mClp5uNNkHN8CqLmO09BAsT9D++BfY0hbHd22KVZtkTOOjw8cw
      Ao/e7VsZujxOZ3uKSPtWspNXkBRwSnli7b24Vo2OZonh+Qpf/OIXiK7T3veRC0DYNCoAYfWZ
      xwC+74sjQQ1g2zayLGNZ1oMuZUO6YwAqy4ucHbrCrp1bOX9xlGdefIlUREGWZbEHaACxB1hf
      d+xYqZE4W1t1+j85RUtrlKHJnDg2LWwYdwxAZXmG/stL7O5rY2pqnmQ8hizLyPLGPSQohMcd
      B8G2WaNcrdHUHKdWrZJIJpElMQhuFNEFWl93HAPokSgtkSgAhp5c94IEoZFEP0YINREAIdRE
      AIRQEwEQQk0EQAg1EQAh1EQAhFATARBCTQRACDURACHURACEUBMBEELtjhfDOdUCv/rNe3zj
      pcf57ccX+NLbf8L21sZPDhcebneaWSvdxe0K6+U4Dj/72c/WXP7222/z/PPP33YddwyAFkuy
      uS1JuezS3p7CrNUolRxM0xSXQwvX/fpnJ1icWH2K7Nf/xVPs2NdR97oC16d2bmnN5XpvHLV1
      5Qplz/PWXk8d093rmhPc1dVNuiNFLFulPdlEPC6uTRfWT+D45H51ac3l6R/suh6Ae1VXAJ54
      ci8Ar7yy5b68qCA8LMQgWAg1EQAh1EQAhFATARBCTQRACDURACHURACEUBMBEELtkXtCjCDc
      rSDwOX/+r1ddJgIghMJi5r1Vfy66QEKoiQAIoXbHLpDn1Hj/Dwf58nN7OH7hCk8+/zKbEuJq
      UOHu+Z5HMbO45vJYMoUevT9XedarjjGAjBR4TF4exfIcilWTmGSJ+QDCXauVivzi3/6zNZe/
      /df/jj1feqWBFdXRBVI0g5Z0iu7tW1FcH+Xqo5EiETErTHj01XUU6MUvvAzAm53b17UYQWg0
      MQgWQk0EQAg1EQAh1EQAhFATARBCTQRACDVxMdxG8+u/gPIaZ1uf+C58/p83tp6HnAjARjN1
      HApTqy/btPf6//7D5X+gYBdWbbY7vZuXul5aj+oeOiIAIfWL879gojix6rJ3dr1zPQDTP/0p
      9sTq7eKvfY32v/rX61ZjI4gACLdlj17BGh5edVnk8T0Nrub+E4NgIdREAIRQu3MAAp/+/n48
      P2D49HEKTgOqEoQGuWMAPNtkam6eSm6O8+eHqboBpVIJy7IaUZ8grKs7zwcwYqSaDGzHhcAm
      ny/R3NyMrotZYcKjr66jQF97/S0A/uTP/uL6z9bjkTeC0GhiECyEmgiAEGoiAEKoiQAIoSYC
      IISaCIAQaiIAQqiJAAihJgIghJoIgBBqIgBCqIkACKFWx3yAgImJCaxKnv7+E5RMtwFlCUJj
      1DEfoMLBI0exHdjeGWN4MovjOHie14j6BGFd1TEfoJnOthSBW+X44CK7e9O4rovv+42oTxDW
      Vd3PB1Alnz27+gh8iMaiuK7oCgmPvroCcO1RSNuak+tajCA02k1doADTFHN9hfC4aQ9gc/jD
      j9jU240eTbBzR684TipsaLd0gaLNSbq6ulBUHTHrV9jobvqCV8hOX+S9Dw5w4dIVxHEeYaO7
      JQDf+MGP6I4HzC4uP5iKBKGBbgqAw//6H3/HbEWhqyP9YCoShAZSb/7ni19+lflckVRrixgA
      CxveTZ9xCUPXcD0P33UJHkxNgtAwN+0BAox4Gy+/vBNZ3PlNCAH55n/GYwr7P/gDp89fEkeB
      hA3vlm6+a1WZGZ9kdnFJdIGEDe/Wca4E8XSC6vI8Y9NZAIrFAr5jMjo6huOLWAgbxy1ngmU1
      wo4dj+FJProUEPgu77//Pi/s7GKm7LBMgic6o9i2/SDqFYT76pY9gF0tMHDiGJcncnR1tyHJ
      KulUgqZ4M7lsgXhzFF3XUVXxfD3h0XfLp1iPJfjKa6+Rr3rX0/HqV19HUWS+3rMHwzCQJJBl
      cZZAePTd8in2XIvLw1fwXO/6IFhVVSRJJhJZ+fALwkZxSwBkSaFcKmNb5oOoRxAa6tYAKCqB
      U8X0EZdDCxverSNZWWLLtj4iqcQDKEcQGuuWPUAQBPgB4logIRRuCoDP9MQUVrWIGSiiCyRs
      eLfsAYxIFEmCQNz3RwiBm8YAMj19j9GzbSemaYo9gLDhrX46V5KIRKMNLkUQGk+czhVCTQRA
      CDURACHU6g6A71QZGDiD7YmzA8LGUXcACrPDXLg4yEzewvM8cXt0YUOoOwC5xSJ79mwlkyth
      mqa4PbqwIdQ9q6Vv34swMcvWvjZUWRJ7AGFDqDsAsmqwY0ffetYiCA0njgIJoSYCIISaCIAQ
      auLWDo+Ir//ngyyVV78VzY9f2sq/+dpjDa5oYxABeERkKzZL5dWf31axxCHpz0p0gYRQEwEQ
      Qk0EQAg1EQAh1EQAhFATARBCTQRACLW6A1BeGOcP+z9ioSieCyBsHHUHYPrKGLZjkivVKJVW
      5gQIwqOu7gBseWwHGgqxiEY8HicSiaxnXYLQEHVfCtHU1svrb/auZy2C0HBiECyEmgiAEGoi
      AEKoiQAIoSYCIISaCIAQaiIAQqiJAAihJgIghJoIgBBqIgBCqIkACKFWdwCCIOBC/xHyYjqA
      sIHUHYBqdpqLQ1eoOJ6YDyBsGHUHwJM0YhGZSrkm5gMIG0bd8wESrZv55js/Ws9aNpRf/vKX
      az5FZ9++fTz99NMNrkhYjbg36DoZHx/HcZxVl/X1ffqgkenpX+L7q9/zM5F8lojxxLrUJ6wQ
      AXjARq/8HNctrLps27a/ortLBGA9icOgQqiJPcBdmv/5CVjjUcnxV3po+tzmxhYk3BMRgLvk
      ZmuwxgMy/Zq4T/+jRnSBhFDb0HsA1/b4r//+8JrLv/TOY+x5qbOBFQkPmw0dgCAA+zbdEt9d
      6cv4nsd/+ckP1mz36o//kmff/OZ9r0948DZ0AO6Gt8YxewDfW6PTLzzyGhMAuwwXfrP28r6v
      QGpLQ0oRhBs1JgDVHPzmX629/If/UwRAeCAeqi6QF3hkqpk1l6eMFBFVXIQn3D91B8AuZRm4
      MMLuvftIN+nrUkyuluONX7+x5vK//crf8o2+b6zLawvhVP95ACXCzq44E3MFLMta80pHQXiU
      1B0Au5rj0Nlp+joT61mPIDRU3V0gvbmVlz//LLoqYxgatv3g5kZ6pRJj3/v+mss7/uZvSLz1
      ZgMrEh5V9QcgEqMjElvPWurn+zgzM2svrlYaWIzwKBPXAgmhJgIghJoIgBBqIgBCqIkACKEm
      AiCE2j1dC+R4PnOFte8Q195sENWVe3kJQVhX9xSAqVyV135+YM3lf/fnn+O1xzvu5SUEYV2J
      LpAQavVfC1SY58MPD5CriovghI2j7gBMXxqmY3Oc4enl9axHEBqq7gCk2pKMDE/Skmxaz3oE
      oaHqHgSn+/by9a7dGIaYkSVsHFIQBGvc6G91QRBQLpep1WpEIhFc/9Nfdx0XVfs0U4osYZkm
      0UgE/E/vuuC4Lpp6Q/ZklZpprawvcNden6RgXW3HDRNyblmfomBaK+1874b6XBf1hnayLGHZ
      FoZh4HveDe0cVFX7dCPJMrZto+s60g1b6+b6kCRsx0bTNG7crDe/riRJuK6LoihIkn+bdjKO
      4yHLMoH06c765teVJQnfc5EkCVUKuHbvRufq+qTrK1Rw/YAgCJAUieBqO9d1URWVaw1lZAjA
      8zw0WV65vwzguh6KIiNJ1xrK+Fd/X1O1a83wvJWar7WTZQnTMq++H2tvZ1mWMS2LaCRCcJvP
      FdIN6/Nvt/0kbNvGMAyCGz9XN7S768OgkiQRj8cBrv/3dko3tL/9ikt1rq++dlKpvnblcpmm
      pqZP39Q1VCoVotEosnz7XmO1WsUwDBTl9uc/arUamqb90Ru2GtM0kWUZXb/9NFTLspAk6Y7t
      bNsmCAIMw7htO8dxcF2XaDR623au62LbNrHY7S+Vl0r1fQ7qfd/qXd+d3l/l3XffffeOa1nF
      tWTl58Y5evIUVT9CPKLgA7ZlgSSjyPL1DV1cnORI/wAVTyMZ0/ADsO0b2+lcGDjG4PAVEm2b
      CNyVCTeWbTM7PITTnATbJtbUjF3JcPTUKJqTpSo3IwceBP7VN81DURQMw6CYmeLYwDnKNqTj
      Bp4f4Ng2XmBx7uwwqVSCaCxKfvoyn5y5gBNEaDIUqqVFphdNIrqEoqjXP1iV+cscvZyjmJ2h
      NZ3GclzwPRzXJ/BdbMcnGo0gyz6H9+/nylyOLZ3t2I6H7zk4no+qrgRD0zSmLp3gSk5i5tx+
      /PQOFM9EkqBSyFK0AqTAB4KVb1O3wkcHj7CwXGFTaxLH9VfW6QeoioKqqiiKgm+XOXDwMHPZ
      MpvbUtiuT3DDayuKwtL0CCdOncc34kSu5tSyLNxyhqGZEomIgqLp6ErAoUPHaIlrTGSqRDX5
      +nvveR6ysrI+ybM4+slRZpeKbOpowXE8As/G82ucPTtKKhUn1tTE/JULnDg7iKQniKhQWJwi
      a8poko+irmxnwzBYGjvH+TmL3MIELalP/wbXD1b+FtcnFosReCYf7/+I6WyJro4WbM/Dd1fa
      qVe/gHRd59Kpj1lymhnu/z1Gx04kzwIC8tnMvd8VQtY0ZElGkVz6D7zHsiNTLPp09nTz+isv
      Xm8nqRqKLKNIHsc/fp/FakCtEtDR1ckbr74EsDK+KDtU8wv8n398n0RnB67l4tsOu1Wdkx/8
      ljf+7KeULw1TLVvMKzpuzuLUwAAdrWlsz8FXonzv298ioklcODvM86+9BqVl9n/4IZ5rs1y1
      ScZjlLM5LgxP8sN/8nVk1UCRwKnO88HvTyCpHi3pLRz9oJ99b73DEz1pAJxagYnxZQrNCs2K
      w3uHhujZZKCpMTo2tTBwbpKf/Pk7aIBh6HiyzNFDH1EsWeRrVaKRON/6zjeub/RS2WOhOoo9
      cQW1e5bf7//fpDf10BxPML84j6E38cxLX2ZbWzNIMoamIMkyl88f58iFGVqMAKW5he++fcPs
      N0nC0FQkRWb04gAHzk7QEQUpmuZ733oLAFXTkWQJXJOD7/0OS45T9n3itoO3aQcTA/+P+I4v
      snczVKslRidmKFkBx977hHhbH4Fk4gcyu198i6e6m8lNj9C85Ql2dUQ5fugAS1WX3k0wv+RS
      yCxzfniGH/3wDVTNQJaglBnj4sA8rufQ2buT339ygNd/9Jf0pla+LM1qkYnxLE2Gj+5W+Pjs
      DO1xDy2SYnNLlDOjy/zkR98FJAxdw5Mkjhz8kIrlkS+WaEq08M233+TaPjhf8rHsQRanpmje
      MkH/wd/T3t6BEYvfewCsWg0UiWJukUzBI9lqkGrrI6IU/6idXauBLFFczpDJO8RTMVrbtxJR
      yisNgoBqrYbk2szNTKPFk+h6jL4taZYWCyzPThNva8exHQqWS2drnJnZBYKgSLK1hVg8TXc6
      iu1CfjmLrirs2NHFsY8PE08kMVQFV22iq62HqGSiuw5a6xY0WcY0q0iyQqliokgB0aZmnEoO
      KRqnVsyznA2IJJLIqs6TT+9leOATZhWT9pYkllsmEjVYXFikJR0n8AHfoWa7VJwSHQmDYi2g
      pSNBa9Qgm8uhAS0tLei6QbySw+7eQyUzQzTdjqoZ9HR3U67V2NbdfX0s4Tk2tgdeqUipsEg6
      laA1kSAS+eOu1ko7H7dUpFJeoCWVpCXRTCT6aV/bNGsoUsByZo6Cp5M2VNr7thNMTlPwyuQd
      nVYlYHZ+mZ6tPSxMTuChoMfTqKrO9u2dVB0Fs7hENmqjt/awePIMxdk4kYiBbEl0bu3GcpeQ
      TRNj0xYUwKxVkSSJiuUiEdDcHKeSWyCaSpHPLpPwdGKtLSiawZ492xg8c5pZp0hrKo5tLhJL
      RJhfyJBOJVeGOZ6N6frYpRKJiE7ND2jfnCQR1cjlcihXt7MRieKbGdq2PUEhM0tTug092kxP
      5+a7HwRfU6qzr7bRDQ8Ps2vXrnVbf71jgI1uvbbzPVwK4XO6/zBHT5zCtL3btqwV5jkzOM7S
      1DCjcysn0pxKjtml0h+1c2pFTvQfY3RqhvGx6c9e2qoCpkaH6D9xmppz+3rvxnp++K+ZGD7H
      kU+Ospiv3r6hV6P/+BnsSo6TFy4DEAQ+E1NTf9Qs8Bwunhng7MURJsbH8T7TV+Da8pkZjg+c
      w76P91Rdr+18D10gn9HRK2x/8vMc2f87Ovse49SRAdp726jkq3z1298jeXWvaxaWOXVujGKi
      itSxm5Fj7+NrUaS2x+lq2319jZfPnGTzni8S87KcOz3KzMgANamJomewI+0zUZD5zhtfqr/E
      IODCyUOM5CS+88ozDE0t8+XPPYXn+aA9OlepTk2MIiW2M3Wxn+mWLjKDJ9ETm1jMF3ny2Zd5
      asfVCw49k3OnzqBIDhNLOeTCJLNFn2yhzI9/+OmtJ/OzI1TUdnZ1NXHu9DlKy/Ncmq1i2Bl2
      7n6C42dH+ad/+r27+nDMjQ3xUf8g3//B9zl9ZpBnXnge3wce8s18TxfDNaU3se/p3QS+hlte
      olarkS3abN2UZGm5RKlUYuXoq0R7k8OSGcEpLpDJV/BRUQObSqVM6eotzFMtKcYuXWRkfBrf
      LDK5mKO0nCPV2sHY2Di1avnuCgw8RsYmMKsVUHUUp8zg4EUWs8sUC0Us99G467OiN/H85/Yh
      my7tKZgpmOSXsmzauoXyUpZioUjNXDnPsqWrhaGJJdJRidGxaWqOT7pJo1QqUiqv3C0jEk+S
      Xxhn8NIItuczMjqGWaugRJNkpsdwTRPnLvcK46MjWHYN2wuIx1SGLl4kk81TLBRZ+77bD949
      jAGK6LqBYRjYlnX1ZIeDoqqoskSAhCSBomngubieTxCAJK0cRtM0Hd93V06ESAqaKhMEPpVy
      GT0SW7n1iWujKiqSouLaJpKqEzXuoi8cBNRqVZBVohEDxzYxbY9YxMD3A2RVRZFvf/z/QTNN
      E89zicaa8BwHWVWoVmvoqoKkqBAESEhIioIqg+2417eza9vImk7ge1fPN0homgoEmNUqvqyi
      yRKu6xDIKooEEj6OC9FYlLvZNLZVw/GClfMGvkfNcjA0lSAARdce2suOxSD4IScGwevrYQ2m
      IDTE/wfjqmJ/X2gCGgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='144' name='PersTypeByAutoSuff' width='192'>
      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
    </thumbnail>
    <thumbnail height='184' name='Across County' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across County Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across CountyReduction Chart' width='192'>
      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
      +P8BrVFXsQ+7fH0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
