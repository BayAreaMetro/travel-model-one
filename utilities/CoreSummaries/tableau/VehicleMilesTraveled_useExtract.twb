<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0318.1720                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='VehicleMilesTraveled Extract' inline='true' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' version='9.0'>
      <connection class='dataengine' dbname='M:\Application\Model One\RTP2017\Scenarios\Across-Scenarios-2020-v04\VehicleMilesTraveled.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>4</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1447</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1454.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone</remote-name>
            <remote-type>4</remote-type>
            <local-name>[walk_subzone]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>walk_subzone</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[walk_subzone_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>walk_subzone_label</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Short-walk to transit (less than one-third of a mile)&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ptype]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>8.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ptype_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype_label</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>8</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Child too young for school&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Retired&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>4</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Automobiles &lt; workers&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zero automobiles&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2200</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>23560.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_indiv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_indiv]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt_indiv</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>191905</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>228.58000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_joint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_joint]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt_joint</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>112142</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>38.825000000000003</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>194020</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>228.58000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2020_03_116&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2020_05_616&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2020, No Project (v 3)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2020, Scenario 3 (v 3)&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]&quot;' value='Change in VMT per Capita from Baseline' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' value='Share of Persons' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[COUNTY]' role='dimension' type='ordinal'>
      </column>
      <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[autoSuff]' role='dimension' type='ordinal'>
      </column>
      <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
      </column>
      <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
      </column>
      <column caption='Person Type' datatype='string' name='[ptype_label]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[taz]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[walk_subzone]' role='dimension' type='ordinal'>
      </column>
      <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;' value='Cannot walk to transit' />
          <alias key='&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;' value='Long walk to transit' />
          <alias key='&quot;Short-walk to transit (less than one-third of a mile)&quot;' value='Short walk to transit' />
        </aliases>
      </column>
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:county_name:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#85d4e3'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            </map>
            <map to='#85d4e3'>
              <bucket>&quot;Year 2020, No Project (v 3)&quot;</bucket>
            </map>
            <map to='#9c964a'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#9c964a'>
              <bucket>&quot;Year 2020, Scenario 1 (v 3)&quot;</bucket>
            </map>
            <map to='#cdc08c'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            </map>
            <map to='#cdc08c'>
              <bucket>&quot;Year 2020, Scenario 2 (v 3)&quot;</bucket>
            </map>
            <map to='#f4b5bd'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#f4b5bd'>
              <bucket>&quot;Year 2020, Plan Bay Area&quot;</bucket>
            </map>
            <map to='#fad77b'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No Parking Fees&quot;</bucket>
            </map>
            <map to='#fad77b'>
              <bucket>&quot;Year 2020, Scenario 3 (v 3)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Scenario:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Year 2020, Plan Bay Area&quot;</bucket>
            <bucket>&quot;Year 2020, No Project (v 3)&quot;</bucket>
            <bucket>&quot;Year 2020, Scenario 1 (v 3)&quot;</bucket>
            <bucket>&quot;Year 2020, Scenario 2 (v 3)&quot;</bucket>
            <bucket>&quot;Year 2020, Scenario 3 (v 3)&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across.Chart.County' tab-color='#4f779a'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='94' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' value='22' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14'>&#10;VMT per Capita:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.County Red' tab-color='#4f779a'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Change in Per Capita Vehicle Miles Traveled by County of Residence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:9]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='ColumnInPane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' scope='cols' value='Change in VMT per Capita' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' field-type='quantitative' max='0.10000000000000001' min='-0.10000000000000001' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' value='27' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' value='508' />
            <format attr='height-header' value='36' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='120' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14'>&#10;Change in VMT per Capita:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk])</rows>
        <cols>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.County' tab-color='#4f779a'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:7]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:2]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' value='60' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='68' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' value='208' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='48' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Indiv.Chart.Auto Suff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence and Household Automobile Sufficiency for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='76' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='126' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='30' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;County of Residence:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;VMT per Capita:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Chart.County, Transit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence and Household Proximity to Transit for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[walk_subzone_label]' derivation='None' name='[none:walk_subzone_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;' value='Cannot walk to transit' />
                <alias key='&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;' value='Long walk to transit' />
                <alias key='&quot;Short-walk to transit (less than one-third of a mile)&quot;' value='Short walk to transit' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Short-walk to transit (less than one-third of a mile)&quot;</bucket>
              <bucket>&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;</bucket>
              <bucket>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='75' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='176' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='39' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='56' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;County of Residence:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;Number of Persons:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[sum:freq:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;Average VMT:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Auto Suff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence and Household Automobile Sufficiency for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='47' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='144' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.County, Transit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence and Household Proximity to Transit for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[walk_subzone_label]' derivation='None' name='[none:walk_subzone_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;' value='Cannot walk to transit' />
                <alias key='&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;' value='Long walk to transit' />
                <alias key='&quot;Short-walk to transit (less than one-third of a mile)&quot;' value='Short walk to transit' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk:2]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Short-walk to transit (less than one-third of a mile)&quot;</bucket>
              <bucket>&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;</bucket>
              <bucket>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='57' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='192' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='52' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' value='136' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Person Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by Person Type and Household Automobile Sufficiency for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[ptype_label]' derivation='None' name='[none:ptype_label:nk]' pivot='key' type='nominal' />
            <column caption='Person Type' datatype='string' name='[ptype_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Full-time worker&quot;</bucket>
              <bucket>&quot;Part-time worker&quot;</bucket>
              <bucket>&quot;College student&quot;</bucket>
              <bucket>&quot;Non-working adult&quot;</bucket>
              <bucket>&quot;Retired&quot;</bucket>
              <bucket>&quot;Driving-age student&quot;</bucket>
              <bucket>&quot;Non-driving-age student&quot;</bucket>
              <bucket>&quot;Child too young for school&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]' value='91' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='69' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='112' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]' value='88' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.County, Transit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='85'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Chart.County, Transit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='59'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.Auto Suff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='81'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Chart.Auto Suff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='118'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
          </multibucket>
        </current-page>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.Person Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='67'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Table.County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='89'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across.Chart.County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='80'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.County Red'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='71'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Indiv.Table.County, Transit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Chart.County, Transit' width='192'>
      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
      VqOt2PxOi/L4UvGY2KxLqo1Ke5lkPCbwnKzq3arL50/EIq1GTdE6z6jcHwNhOIHpIt9shUJM
      S+n8JjGcBKrQbIqhECNqXSpBmXKr1RJDIZ+k26hau9kS2qGgV+lScZKWBV4QpVDQo3XdZY2T
      LpFvCKIUCni6/9xxyt2sc6KkBAPubvPhtIfnam1JCfptJgEE7WlwXFtWAz6bgS3p8ja4uqTo
      frfNSIVyeRv1hqQZXldnYwwAoN3eRp1XdNND2bR8Lre33miquuUmbA4b9Xl9QlskXL52vWqv
      SiLlYVpcxVYVZZH2Bvgqa6tKctvlCzbKnUd77dtKtDcYy+dyfJ330Dafiy8UzeVyjXrDTdmo
      /lAkl8s3ON5lNyQLhSO5fKHO8d3dHwAgEgmv5wp1jift3ko8FlrPFzmOt6sKkh+rwE5Nx4Jr
      +U3Orp0AACQjzHqxxNVtWgIAQDzkyW2U67xgq0b9rvxmpcGLtmrYRxZKNb5lv9AWcmPFMscL
      sq0q1St8q2WS9mssYo1tNluQ9tmqzfJmq9XE3AFbtV4qiq0m7g12lO/bTwqlZu3442f7E0G3
      3Xcl8typJz/bE/fTdqrA1x97+rPJiJ/CbVS+Xn/izLOxIGNrkTpXf/qzz4YDvu4xEACgWmuc
      fe65gM9rFxiUa43nnn/e53HbiaBU5V944TmP22Y8AQAoc61z5571uO2/qkpDPPf82Z3UGi+d
      e/asx2Ovci3luWef8Xg6RxtbNETtubNP76QS3vATJ0eZYNhWpZjo4yNj/h1UVzB+bGQ8EIrY
      qt5wanh0PBDuVPetBfIEYmJlfWp6WrEbHPqC8UYpe3N6xnZM6g/Hq8XM1MysZtqooVicXV+e
      mpkzLBs1Gk8Ws0tTM/Om3Zg0nkyuLy9MzS7YVQWpVHJ1cW5qbtF2JaOnJ7k0PzM1t2QngnQ6
      sTQ3MzO/bK+mEotzM7OLGVs1lYotzE3PLa3aq8nYwuzMwnLWVk0mIvOzM4uZdVs14KOnp6Y2
      yjZjPgCA30tNT01t2o3bAACMm5yemirV7Ftcrwufnpoqc82O8n0zkCJwHK/QJK5Dm79nqVVr
      tFSKwO38AwS+1hJ1Egd2/gF8vSbKBoFDyy4yV6vKqkng0M4/oFapaoZFYLb+AeVyxbAgDuyf
      UbNZqloQw6D90eYltnYXlS3XLAiAZTMgBQCwlTqEAJr2tySUq3UIoWXYP3upUmtACE3dXm21
      eAsSUrttqwpCw4RkW7RXRXFLte9Y22LdhJQodKr71oV5gvHJ0T5eVDykzdfMhOLjI71NSXPZ
      qcFIYmSoKciGbQcXjiaGBgRRMUm7xbNYPNHf25Z0aBcYJJKJnpasGJhtF5ZKJRttTbNsRdCb
      TgqKrkP7j6gnlRBVw8RsBtEAgHQq3tYsC6ft6ybjsg4BaTM8BwCkEzHVABhl38GlEjHNwnHa
      vguLpwapRj3S1dFsEUsN0w0uGrbvwmLpUVejFtlJ7ZlwNSrRSKe6by2QxFdyFZ52UbZL22Kj
      Uqw2XTQJ7dqCZo1luRZNkcCubqNaqjREiiKBXTNSq2xyzTZJErZtTKW0yQsSSRK26+3s5obQ
      lnda1d3cKLYlhbAdWwGwsVGUZAXH7etuFIuSLO9Ut1gsyLK8U93iRlFSFHzHukV55+vmsiua
      heH2fxEgl13RILFT5PXMkgZJwna6AcB6ZsEAdHfk/w9SqUc4HU6WqAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Auto Suff' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9V5Bk53Wg+V+b96b3Pst7X9UW7dEgCJIS5aWRdhWxOzsbG/MyO+teJmIf
      tC87sbETMSFNxGpISaS8SFF0IAAC7dCNdtXV5U1WVqX33ufN6++/D9Uw3eiuruoGCiSY30tV
      Zt7733NvnvzNOec/B4EQgg4dXhT0ixagwy83HQXq8FLgX7QAHX7BgDC4vV5ptvUW78iAD3na
      IZX0rmwctGkQAADSmQN1+CR8LXV7q/zamclEPAmERrJQtbh6uGbTY1CqULOzFdLoaKwebev6
      B4ZGuVKsM4R1eAyBbZO0GkFQs8m4HUqePnM24l8qV6pcs9poNHW2Lkxo0lrjwNhEePNhvtzq
      9EAdHgPK/PvXbxktpmJdMBGcQqp5SLRySQK2jH3TvEDL1aBJg7OWKXb7unr0QkeBOjwJVBRR
      knCCQACUJBnHcUWRIQQoigIAIIQogohC+/ate6defa2jQB1eis4cqMNL8SumQFB8+wf/8KN3
      3peUp/S7XC33nb/81re+9a2tWP4zuVpoff6vvvu3mQrzAufGtpf+8q/+OllsfuoTeWV59eVl
      OzgCW//J9//+77//4yYnPfmZwv9q2YHESuLebun0uKZcLl57+6eIoWvaSy74E7jG/t/+3tfF
      dr0O9P/DH/2awpa//f/9+eSJ08H1Bco+2KNr++MVra37d79x8al2kWdx472r3cdeCcdSqbXQ
      4k729a9eunfzFivC3/7DP3YYqP3PvXn9mm9odjcSK+1k729Ev/7b37z1k7dEBM4en/7bv/6e
      IP0368uLfTPnL5+ePJRIhwfefOuHrqmvGvl0pdZ4uHg9UuR/6zde++kP35ahMjXR/yvWA2md
      b5zs39jYSKVTrAhW781n8knfxLlKYGWvl8hFAz97+91CqSxSziGHipPh8sJCKh4ZO3U5vrHE
      H+5i8NLXv5HZ2UxmMqlssZmLBEKxqkiNuchArPC8U5WLX/laIbEbT6Qz2QJTTm5HE+kif2rM
      lWxh/QPDRoyDUJpfXHuxx3Aoas2m3WbpHZmyoOX1HHJ51nPjg4VMVT4xaCkJql8tBZKZ0p2H
      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
      wmpcF/8H3PBAkaLrMU0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Indiv.Chart.Auto Suff' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Person Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Table.County' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9d3Aj2Z3n+dIhDRLegzB0oC26IstXdVe3uuXdaKQxmjvN3czu7M2ZuNiI
      uz8u4jZu4uL+2ti729iZmxnNSJqWRtqWNGqnttVVXYZVrKL3BEESAAkQhPdAGqS9P6pddRfJ
      6iZ71S3h81cVkL/3MpM/vPfyvW9+H6SqKmjS5OMC/6ZPoMlnm2YCNTkSzQT6LYcpJm9NTN68
      drXIig89ILQ8Uxc++KFUz7x67a6sgM21e/Oz0xMzyw98rSqFYgkAsDo7iX4iZ93kU8Ps/NrZ
      Jz6HKlIlv/f6xDakqhoMGelxbMTKoa0krcMJIb+5nR67eG4zFLt8Yfj6lSswAtOkpiZRCAw0
      hMZpsAbDiYkbbyoAxikykasPnejb3Qk3WD6bTjVboN9yaAKtC0qjkglubPt7hyhY4mUZKIoK
      QFugT0cgFpvj4mPnrr74kqe9AwBJhrVDPf6GBNls1vsl7G6tGp3+ZCpF4Bimc/ht9O5uQmlU
      MWNLX6AVaj6F/XajiNzcwoqswsPDfauLy4TRpoP5TKFsdbUoKilyRZ1GhQye+dvXvvCNb2lg
      EA6tFKpCf6AlWUe6vLZqNaOjrYuLy2Y9kSrUWv0tsfie2eoEqizWC6lctZlATQBbKeTqsr/F
      /jFimwnU5Eg0x0BNjkQzgUB8Y+H7f/8Pq9HUh7/Kx9f/5m/+9kc/erYuyR+hRFW999Yr//DD
      HxeZhz85f4BkePn7f//9pa3EBz4vJSPB7Yec1VGQBfbV53/xwx89E8tWPvBVLr6xGc9/1AKb
      j/Fge3MN4FS9Xn3j+RvBWO6xcyO3JpcRnP4f/82f8vUyIM2nzo2Gbr82vpbvazMEN7a/9sf/
      OuDSH1zm6vIK7e6oFLMvP/trRtV12kA4zZg93X/01csfPjgWDsoYVa9Xr770i5Vo6qknL755
      bQLCiG4b2GKMy1htryL/5V/+KwpDjn6xO6v3ZEvPty/ZOFj5xTP/kGfVJx879cqV24gGb9GK
      ecTxSiraPzoWD2/AhpY/++43ocMKbLZAwNXaO9hpn5yYrrGNWjGTLZQ6hy7gSlWSlXeP4Rnm
      4ue/KHOMyJTSherBBaoADJ+9qFcr0wsrkookdqKVavXpL30tldh96PE2b/dIt3vy7kyNYZlS
      NpMvtQSGHaRibfH09XTyoppNxDnxvSaQZ2vlah2oSrlc+agD2PsjXgiGlGoyo9guD3kXg+GW
      zhG7VrE7PYMn+mCt7VSfDyDYTnRbeX+gIueymcZ7p6GUyxXQTCAAAIaA1fWd0VMjGIa0B3pN
      ZovDrPf5/TAEEbRxaHh4oDdgtruMWhzXaDxtAT1xeLMt1EvJGjzU2w5DSN+JHrvLpyXxVp/7
      oQfjGLQajIyOjWAY2tbZYzQaXXaz2+tztrRm4xEIgXv7eiHovbbg6gs/+9tn/kUWuZ/89JdM
      tbi8GuR4Jrq1FY0lIpsbvKQkY5FktvTQutoGzsGF9X956YpAOrtMjelI5cKpQbfD7Pb4PK1t
      u9thv9+LoBiEavq7O97/fBWauf6LXz3/sxfeFHlmdXWNl5hn/ukXXL3UfAr7jKFKzH/86x8Z
      MPFz3/7eS796YaDdPH538vTnv750dwk00r62VlTnmLp9C8a1/+6v/g89fmwNRHFv6wc/fa7v
      9BP16Jy1tSOeK1VT1bETDuSv/uqvjquO3ybK6e313YrLZnyko+XGr3/1S9rVuXT71YpCOyx6
      AEB6J8QhBi3+SAOXcib+/IsvlRoIX9hpYEY9qdnvyMT6bDBRtRs0u4UGUynl9yIQillb/BqN
      wYQrQ8P9mXyNF5RAoKPFrlcUtVxv0BTxgUJURbp7/Y07M8stre2k5oEGNRFeUSjHhxvZ0OIk
      anSvrQb1mEKbLRWWb9S5SjbebIHeZvL6yxu7BWfHkFFKr+4ULp0ZSFWUzNYCMHifHG178bUb
      g+ee4PdWw6na1771HZv+wT+JVP+//vd/1/PY10PjL3Vf/j05F4WNLbWtCV3Pk5rarqpzn+5x
      vHH9Xu/YpfPD3Q+pW5V/9Hd/943v/VlkbaW8t2HqOrcxO067ukhmt6axacVioga+993v4CgM
      AChmEjBtM+DqdiILQxCNgzov4ySpKDAkcTqDjpMQsZoFlBmXGZTU8RLktBo+UOHO8vhMCr/U
      baij5ujcjWRV/cJT519/5Q1//8j6W897z36FSW7itvZvffky9N45iqH1dbu3Q4+DjfBOZ09X
      ejetp+DmGOhtMqnkmUuXgvOzs2u7f/jtbyBCLZUrCqKYSyXujl8/96U/7HZpliK1z51snZgL
      fjhc5+7cnn7d7Grja6UaJy0vLvva/B4rObMS3Y1F3njlrS//0R/OT4w/vG5VERSYpshAIIDA
      UL2SZ3lpaWk5mUxfeuxMtlCNBlfrgnT/WLPDY9TiEEq0t/pa/V6r09va2upyOFpcNrfXp9Ob
      7GZ9S2tni91sdXmNRuOHswcAwDF1g8lkdnjsWG2zqBlr000vR0VJTiQyrR2+Dr+L4aWlxcX3
      D6IhBOs9MWgxaDFCe+JEP4FirW1es6OlmUBvo9UbKZI0ma2dbvqZZ/45x8haAhVFGYah3qGx
      68//5M7KXoteeOX2ykh/4EPRsMFoa2trHxzuxxHANCSXzWq2OeOpYpvHojdYzl0cee6Zn7T1
      Dz+8bhh77Ez/Mz/4x+deu4GRNKyInKw6zCad0ayB1BrLOhx25Vj7iY6h85nVW//4g3+K1zGT
      krm1nOhts8uqCgFgtTvmZ6YYUXZazY9SabMLa3Ikmi1QkyPx9mib4zhZ/iiz9U2aAACaXViT
      I9LswpociWYCNTkSzQRqciSaCdTkSDQTqMmReG8xVVWll55/qbOn542XX1xdnMo2iNzm5GQo
      m1q/99JrVxNFrr+r7dDi5EZtci7otmpnlrc8roeItCWBmZqc2U3lIaGysh6SYAoRiksbSRqq
      Ty6GCEpHUwRbyaYrgoEm74fEt9bWNjYVTG+kCVVVb1+/ZrYZ97KsyUABAORq6pWbs9lk3Oz0
      4eiH9U/KyvIaiqEUSX68G1TKJkObW8lcxe2w1kvZleCW0WrDkAN/eKqaSsQ0WkMmHomlinab
      GShScHmJVzGDjjq4OoGtZIqczOZXQlFSZyRxDKjqdjSiM5rhg8VdqroTixsN2vmZWUaEzEY9
      Vy0ur61jpF5L7Ls0e59CakfWGMvp7e1Ezmoxw0DdXF/JlBir2QQdWGk1n3xv1RUCiFBJ7cQj
      0WyDqGT2xAW6Gqthnb//578f+uu//8ZXngRA/Pv/5/9VceLsE19auXtdJmw+QyOUhf78v/0j
      4p37ieA6Qsw/92rs8lNPT9y6LipQi8ueKVYASpeTGycvPO00a0fGTk+N39zkq5fOjN6aDooG
      UCgruw1WgfSKqgIA1lbXnQ5TUADl3dC5c+eiidxjZ4duzEf8ztFUZHUznh193ByfG2/zPg4B
      oAhsocKiLF8upWdDUVFRDbisolq/yxjazmj1Bq5SZvn6bDaDYpg/0B2PJwmt7typ4UO1dvcx
      2d18JZuQtACAap3zmMBSOH2ur+WAkFoh+fKrb3znu380s7hptZpFtRPm6waHZ3Vp0ed66sDa
      xHvX35BswzS7DVlbdRQOAKgVEi++evUv//tO9MCkjW2tvjUd+p7pzGai9LmufgBAuVrv7+kY
      n1z6/JPnDwhsMMXXXnzhsT/+txvBLbeJytV9FlBJ1SGc36n5/HpiXzWBLDJXX37xfScFQWMn
      +372zE8HT5+DYRznUg3S9oG7LMDkN794afbW1cVwslZM5QrM577yFeLBCxs6dVZL6824EttL
      oaq0lysrkphMJbVGm9tmhGE0EwsZvZ3v/CjUjkA3CkOdg+cunz8VXJoDABQZ3tPetXXvdQnV
      vfsLUFUAFHF+NYwDrlLnYVV5d97T2951ste7sZUQZSmdTFqtlnIxv7iwDBFUpVICAHAch9OG
      Xr91bnpBRLF6pfJRlpbUpa3kSLcHAOD2euu8rHKHKBJ11pYTXX6VKYmUlVQqFR6glFGHyQ1Z
      OTgQAOz0uTEYgLaewaE2453pNQDk2xPzXpe58c5i6n74uwbcFlpFDU89eXFlbkpRgcvjjYc3
      /J2dBwfiWvPJoR4AJAyouXJdFhVRFHCCgGFVOlAJjmDaU6cGH9B9+LqHbbaN0T4fF2k1t+hV
      jTmTrgMA+Vt99/+OXDV35dbC5772LfP4G4rO46dlGv+gcgSCMZfTjuBUT2c7J6ouk65YqxsN
      GouFBgA06vmppa3unp4Wt21qbqm9owdCUKvZWMkn4/laoHcAAGDXU1URs5gNnV0dAIBWt+Xu
      /Fqgs79Qrn71m7+3ujBnpnGAoOlEwuPxwBqKLYS2Bay71RONpUxGk6gAg17X4u2J76ZNdics
      CSqkQADCtZqB0ZPFbJq02w/pDt6PzEMaLQpDhUIhl4hWRVmjeSQhOWxwWaBIvq608pUiU19Y
      iRLEB3U5+5FNJRIJyWb1FoqVU2fP3Ll96xEDRa66up5ESV2lWEhGF6cj9ccv+B4xFkEQFSiK
      yHAYkd1ZQhB0iMQOjfpIM9HyzZsTly8/9sjHf0xEtpJjVPf+Yi6RKeRYDapydvvHeReuyTHy
      QAIpsrgZCpmc/vuauncRG0ymyBi1OKkzII/+223yO8D7EkhVX372h4SnL7mz882vf2F6arZ3
      5PTe1hIjwIN9rbMrW7M3b/7+n/9FJrLu6Rrq9Dl+o6fd5NPCA915Ms/96R+fJx47v7lwe3Fh
      Jl5RSzsL54e7rk0U2YZqsVpAPbuwuDATLf2vf/GHv6kzbvKp4n0JBIGuNtuLz79YyBe9OpHU
      W4Aic7Xy5k7S1dHH5VkClefn5gBOo6C5gN/kbR4YA6mKXMjnCdqAI2qN4WEYeubHz/xXf/I9
      k5FmOBFRRQVCGqKIIZjBoPsNnnSTTw/HqQdSlEPnOZr8tnGc78YLwoe89pr8ttNcTG1yJJoJ
      1ORIHHMCKbLIcDwAar3OPPwIVa2WizWGUyQhm8tJsqKqCs83ZEnIpNN1lgcAqKrSEN5z1pFF
      IZvLS+8sX3EsK4kN4Z11JVUW0+l0obSfT4XKcRzHccd3iU0e4DjfjZckSVXEq1dvmCiwnqjo
      USlVqBtpfHMjhBC6UmaXlREcamxGk+HQerGYgVR1O1Up7CwtRosGtZxkEItRp8HQVDSYrTa0
      OkO1XCRJan5qAoakWI5120yqyD7zTz/tGegLBqNulw0AIJfiN1bTSiEMTL5iIszKCCTUt/dy
      ZqM+uhnCtLqF2XmCxPl6NZHKmc2mWGQTaLSE5vBVniaPwjG3QDBKnBvueHl89VSv78bEdGpz
      fnJuqcIwN8bvLq2GrEYaIw2D/QEYRQVBbW/1VUr53hMjlAaWAabw1dBWBACwFc96zWB2YXVp
      dQNAgJehdr+vWMgDVV2Ynfe3t8Iamqvm3n3kq5YLmUKdKyVi6fKt6zcmp6eEBrc2cyvLQ7du
      jgMAopHI3PwSymfeunY9VhZu37wlN2eyjonjHwOZ7B5/ix2GAQQASRuqpYLJYlFkidbpEBiW
      RX785q3hU2dRSK7W6iRFIwgCAIAQTW9fD1e7r5RQNUZfNjRhdvshAIAiVut1SqsDqozgRDGb
      qjI8eJ/SydMaGO3zR8M7KG2EVbl3YJjLxRIFBkEQk+ntFVlab6AIXBRFGIbMZtOjL+iVc6ml
      paWt7QQAQOSZ9dCW/AgTH7VKSZRBKZfcSWTuf6IqYr5QPjRQkYVKlWGrhaWlpVKNv/9hIZ87
      XAkCQKlUAkDZWFuOxJMAAEXkg2tBtnGIDgQAwNdKnAhqpWx4Z+/+taXi0Xgqd2igwNWOuQsD
      AAAINhj0WlrntOoV3DDU15kvVLo6O1xOB0mSssgxnFCv1Xr7euJ7mRP9PRiKGvQ6q80cDW+f
      GBpCYQhT2JpMdna2t7idKAw57ZbtvcJgX1elWmlr72jxeAwkXKiI1VLOZrMDFK8V0hJhGRvu
      48qF9q4eLYFImOH06bFGOdcW6LGZTTa73W63GUxWT3sAa9Ra2gNa4lG7MEKrw5VarCh5nZbE
      zrYW5dezisd60DwqU0o/+8sXAn3dszOrqsBaW1oQSN1aujsZyvYH/Affwtuvv5DkaTYd1nsC
      TpMOgiC+lv/Jsy8Mnxw9WFC2G1579eb0YId5bqN4oqcdQ5HdnajdZZueC7b5D5K/CVz5X376
      E3v32eW5SUplAW3HpfJiJM/lYiaXX7P/4rkssS///J+PP4EgCL6vHyUonV6rkQHhctp0NEWS
      JAAAQXGH02m3WzFMY7fZUASGYIQiCRhBbTYbCkMAAJ3RQmgQvd5w/78IhtttVgSG7pdAUhSk
      ArvTYTGbEQSBEMzpdFrNBghGrDabQU+TFG21mGAINltthAYl3wHVEDiGGi1WCv9oA6DJydkz
      Z8dQGDKaLan4tghRbvtBvkEoTklM0aIjV3YrNMQY3R0Ql4+myhBAOto8B1YF2SxUuqQ6bXpM
      ZTbi5RanaXZmntZp/W2HKBJ1Rms+s+dt8QAU3QyFfD6f0Wwp7u0ArcVheYhBx7vAqEYj1TS2
      1koyWuca9hY/IlTLAoqIVb21hdTsq0iEIFSHScdvsqkokiCoBIEBsf7yi7+WCedYl30vl9fa
      A8NdLeOvvWDpO+OgMYPJojRYVlSNeh0EgVqlKMN4ePFOy+ATLoIfn1p3U6Kk9wXcBglgKAxI
      kuR5niCI29ev6kxmmDCk49EnnrxcLld1uDq+EB0I+KwWQ42TDDRRrdZxrQ6WG5yomo2HGGIe
      gszLCIUjMMdxezthwmzPp+sHR8AwDAEA6WxufVqVRUVs8CKgNGAzdqgHKgRDEACAb/A0okFQ
      mOMYk8kYiUaqDE8YDtKjwTAMAJBFXpQBgiANjssnQnPRyuXzhwjKIAgGEABAgVHCrIUYhtVq
      iVJ2W6PK5IHtNARBEHSsSxk8zwNFXJ6f2IzzT3/xSQOuvPrSC5it96mLQzsr9/JIy+l+/7WX
      XsStJqvNVShV+HLZSKOegQsOQrgzuRjdTbZZNYEzX3aR/A9/8jOTp//3nhp58+Y8CUkQjgQ6
      PDt59MyAf/LWm9mqMHrm/Ozd8e7OtkI2IaCmKi9bKbXBCXYzWecaDGaTanmFq7QGTnT3BI6k
      YVIVlmtQFMlxnAZDCqWqxWpBDtaaA8BzLIaTAlsTVESLowqCaWDAcgL1IbOwD6DIYkNUNYha
      rNQtZlOjIZAkwbEsTlKHqihZlqUoslTIE7QRUiRJEuoMR1C0UU8fHCjwLIRRSqNeb8hmPcXL
      kMhWVQQ36LQHB0oCd9yDaBjr7uvt7u4zUBpFljt6+5n07tb2jrtvrJ6NAQBIiua5erFYUlQp
      m87WWV5RVKFeKPKAwlGC1OI4BgBwtQ+4STaWSKWyea7R6Opqf/HlOyf6WgFQ3G19X/vy02vL
      K1qdNrWXsDlssqxoKRIABcC43WJgOdHja0OAPDY2uh1aLLJHM42AYIoiAQAkSSKoxm6zHpo9
      AACCpBAYImm9QadFNbgGgQEEH5o9AAAYwUhCg2C4zWqBYZgkCQAASR2ePQAAiqIAgEwWG4lj
      BEnSOoPT6Tw0ewAAGoLCEIBTtMVkgBCM1KB6o/nQ7AEAoBryuFug96PK68tzDGTqa7OEt/d8
      7QEjTSTjuwarIby13eLvECqZAiP39QZgRVhZCUoA8zkNImpwmYh4uthiN0TiWY3KcirZ0+G6
      cm3ii59/UlXVZCxSqPH+to5CchvRkFWG0etMDFs36nSIKmSrDb/LJGmM9UIakvgyr/b2dB88
      emhyFD7JBDo+KvmMShiM9KOK0pv8F+OzkUBNPrU0G/cmR6KZQE2ORNOhrMmRaLZATY5EM4Ga
      HIlmAjU5Ese82YrcqP36tRtus+b2QsRtpWusQGjQfC4HozhXr4gKDEn18duTwfUtrpLZikTy
      jMqmQhPLewa1cHspqtPpaYrI7W7uFniDXtfgORTFlqZvR7ajxQbqtBhUWXjmBz9sC7Sube65
      HRYAgJiP/OSVe/mdIO3ulGpFQYWALJSqDEkSpUIOxrCJ23dRDIEhtVJjKJIsF/MA0WDoMWze
      1gQc+46FCK4b7bL/8vXJ7/7B18Zv3TZRKKq3MbVCpqLCfO5zX/gaRhufePLxt968VqoLF8+N
      vXV3ua23hSilGF40aIl8Ie+0GtbDuye63TOrPJPfferJyxVWfuzcyJtTm6DLu7Ywa7A5Mcpc
      yy8rIPBu+8kwPF/JbES3d3bTNh3c0t5XSmxUYFN1bQMFIBzeqhYKLqsuhOgRSs+Vgk88+Xiz
      7T0Wjv82trT3+DxOHFIymXSV5ZOJuNZgBUrDZHXoaVKRxcnx6z0nz2KQwvO8Bif0egMAQGdy
      njw5mE3uAgAESTa6uvcWrxocfggCAMh8o4ETBFDEKisy5WylzkPgvddjve1dF0e711aCHCAI
      FBo9fSYZXglF9wrF4rtKaoPF1mI35TKZfCEvyh/h0ZNjaqlUKl+qAABkScjm8sojBDd4TlYA
      x1RLldr9T1RVZtjDpdmqIvG8IPJsKpXiGiIAgK1VUqmM9Ajv3HEcB4Caz6SL5SoAQJWlbCYr
      SIcHig1OlEGDq78rLVdVhXuEaWFZbHwi+4VpNLjJZLYYtDBpGuhpL5WrLpfb5bTr9XqRq8bT
      JUUSOjv8W9FEX38fiWManDDpic3NSN/AEKFBFbYk4Gab2dDa3q5BYbOODG0n+/t7mXqtu6fX
      arHYLLp0psQxNavVCkFwOrnHQ+TYcD9XLVvtTg0KEMI4dnpMqldaO7rMBp3ZYraYLUaj2dUa
      0Eisp63T9AgrhfeRRKGUis6HC91tLduhtVopFa9i7sMEZT/+52e7TgzMTs1VS0W7x4NAYDc0
      c212e6D7YJtAafzVX8XqBJfclGmLQUthKDIxccdqc2hpLXzgIu5ueO35K7dPdjvGZyKeFjtJ
      4LGtICs21jZ223yuAwIFrvLzH33f0n1+cfJGvZDVmN1aHJ659epqnOtqe/gWi/eRJe7Fn/7g
      k50HUmRJVmHsIy5mqrJY40Q9va+doMjVBJiC5AZFHWI5eCzcuPLamSe/SGEwAMrKvRuiuedk
      90EaP1mWp2692dPb88LNVY8BufD0lwm5MjE5y4rEl56+cGBVCpOLTkdlB17lRBGmW0Z6/TN3
      x0VR9PSf8VkPWleXZfnNN998/MzgdHBXkZXLj52HIVDcC2/mlbNDXQdVqcjBe1d0/V+MTL0h
      yMqpxz5voTGBz9y8k/j8U2MHBKqqEluZ+CRHAjL3+q+fe+7lt/a2N+9N3p1fiwIAlu6NR1KF
      /SK2VmYqPIBkfnF1Y2d9fiEU+0B2q6o6PXFreS0YjsaCwXf27RLqs0vrxULxE7kKRRAggsRg
      AEBkY6NzeKSQ3Ds44m2Vt9bU5nFbtEhDBmytjuPYXuZQlfF9LRpACd2JnrZanQEA6Mz2VreZ
      5Q7ZQfx+paqidnT3w0oDAFDYC89HS6cGPrw51QeqRCAIAkBUUV1vqy1XZgGA4EfYSA6CYBiG
      jluRqMqJ7dXVCHf58ikCyHWW9fePraws2b1+nZYEAETDEZOk7EVQjNQz2TiAkJFLT5sx7sq1
      O5kyY9OwsK3HYFK2Q3MZS9u3v9zz2suvQjBKkvDQUM9alLk41l0u5hGdfajd+MqLtxAgZdMJ
      lLLuFhimlJYbHAzDtBbfKQMCAUijqLO1nj07+hDz1o8AfPLkMARAoVDw+jwbkd3Lj586NKZ3
      aIzWGoYCjprs0YoV2eA4e8beEThEyggA0Ohcg90qrZG2djIXTnYXiiWXzZipUN0e06GxY2Nj
      Wqs1HQoOjp6pFgsihFloNLaXafc6Dw709Y6hWtw4HEiXGwEbVqxxRq3h5PAhmQcAsPn7j30M
      pFbL2WxJam1tgVVVp9cuzy4DLf3YpYuLs9MdHe25VLbWqOsNJr5R29vJWs0kafGRcmkrWRf5
      uttu8nT2k1BjM1E2woxeT82HUiYCdHZ3vPra7ceffpJEVaPF2WI33JtZ0espWBbMZl2Fg2i9
      AQOspFIjPc7QdiowfL6e3Rk60Rfbjli9AQo7QkMLwVqKBABQFIVguMNuexRBGUlpERiiaL1R
      T6M4oUFgACH3yzkYGMEoQoNihN1mgWGYIknivs7rEX4DWq0WAMhstZM4RlAUrTO6XC6T4XBB
      GU5qMQQQFG01G2FUQ+IYBKGPIn/DcPK4WyAI8bQPedoBAAAoaDqRsLe2nTnhXZqb7x8+BQBw
      +30nHKbNzVhbW7/LoC+xqttMIJLRQqM46vD47fVaxWzWDPT3dnrMy5vJ031uDqL8vlazZcNM
      wKqq5pI7nAyPjp7M7W4iGFnnGI/HyjB1i6EdSNxWij89NiSTGtjnq1SqFkcL/Wjb3jb5eHw2
      FlPLuSQHaV0P2/6zyW+Wz0YCNfnU0pyPbXIkmgnU5Egc5yC60WgcY2lNPhMc86vNcoPZSeYN
      NLEdSxiNDxnzqoq8FVor1gUcNFZDmwRtxCBpL13SAH5pJQRrSC2JywJXrPHkO3vM1IvZtY0w
      pTfhGAJUNb4d1WBwlQf337pV+MrU/EqxVLFYLQ97eUpJ7qVFUSA/7m49TQ7mmBMIRtCFe7cr
      lSKsc5T2Iju7GZqEV1bX6w11e2MJIowkKksQtbuxliwWB3oCS8FoeW9jK82QYjHDox1tPgyB
      NlcWJVkSUF0qHjWbLTOzs0O9bQuhXZ/bzpVTv3zx6tCpU2uLi15vCwBArqQiNcIs5wTCFAmu
      ZIo1vpLbjO7qdcTS4lJDRePbURRD4tHNnVhCbzKsLC3VBdViOtr7zk3e4bjHQBB84fypUKzc
      YSfnV9brhcTiaoRv8MH1UI2TXVYDitMGQlZpI6pCOK5pNLiB4TFSA5vcbWdH+qbv3QUA7BWq
      fo91aerOXrYCQUAFMK7BeZ4Dqnx7csnnNjVEVRG5d184TexsJTP5dCJWqLCh9Y5+U9gAACAA
      SURBVGAun5UUZW32HgcR6+trAIBkMlmu834L+tbV68UG2Fpfb/oDHRfHP4jGCNpuNSCoxmY2
      wrgWBQ0IQfiGgKAIAKBRy//sFy/RFEmRyNTMgsX29ix7tZhdW183mG0AAK0GEVEjkwm3tHYC
      AHQ4uDe7aHc4i6Xy6Njo/TNWAVQpvrf4pSEpSGpIECxwDb3JypcziM6iig2r7e3dWBAEBQAy
      O1yoIpltto+wW0+TA/k0vlhYzSWKkrbVte/qj8gWwilei8k+36PuZdTkE+ITTSAlnc47nfZ8
      Pm+1Wt//Ra1c0GhNOAZKxarJfJDXziOjMgyr1WoFrsbLGAY4TsHN+v8SYo/fcY7fYEoS67kC
      R2sJAMRn/u5v3T3DKwuzRlqztb1rtFhQCIpvb83cu6sShkw2g6hihZGFWokX+M3NiM5k0aBw
      OrGzFY2bTPrQ6iqiNWZi4QqnAKG2EYnrdNrQ2pqMELlENFvlrSaDLLBrq2ucrFx95fXOvj4m
      G9mIlYLBja5AWzi01pDhSqWMyhyraIj9vZIOoJxLrS7NTCzv9nf5I2sLweBqHTbYDAelpsBW
      f/Hss76u/pk7t7bCO572NoUr3Lw9s72bbvcfbDClLE5c2cyp7F5wM13W6Ywkjo5fv1KuNoxW
      C3qgxKKYjj/36o2BbseLv76h0WrNBt3OxkooEt3N1Lxu2wGBssi98vNnKP/oyr2rkci20ekh
      MTi0cGc+XOzwH6REUxTx+kvPHvcYSBGDS7O379yrsAIAoLN/aGnqrqLKS6tbrQ5qcSUi8pXt
      dM1pM2a2w3qXayeW2lhfXgttTI7fbPCliakVAEBkazO5tXj73jxp96GN8l5ZtJnomzduMMW9
      27fvhBNZUWysrQUbDREAUMnspkvMzMyivcVJaVAAwNzkuNHdlg8vbCYr43cmopsbS6shzUd0
      JXsXo80lCcrTT54HAHT0DxtxSDxMJKoCuMXtUGqp7Ryn0aCKAjDKMjYY4LhDu3jV1dICFCCo
      CAUL+VIVAIAgqMBVauwheiANZbQaKa5So83GQj6vqqC1e2Cou1U+TAurAsjtdgGgyoosSiIE
      QQCodm8Leri3oup2u4/fH6h3YOT0qTEDpQEAIBpqrMcdTpZgIKezBVpHI6hGEZh8sQIARhIo
      ALAJ4VjMaLbY7DZnm98NAKhxgoEmURQrZFM1ThLYajZfslhsDpenozMw2NsRXAv1Dw7vbK3L
      AOQyWbvbKUsykKWGJAMAzj/1DSW3kWdVm83e2xVod5sSVZn62JogVaxJiIFEAQDJ3UT3qTP5
      WPTgCJyiCQyBNJTf5zNijUoDCPUiB+kI5NC/CWLQ0wAAi8s70N2aTGYBAL72Lr+DzhYP0RLR
      ej0MAYARIyMnuWpRBYApZe4uRk+f7D84EMUILaUBQACo8US7PZWvAwDr9YdvpgPDGh39ifoD
      AZVleYoiarU6oUErdd5iNkEQ4OpVVpBJgsBJXOAFFFYlgGoQtViqWqwWGILq1bIoq6SWZqsV
      2mgW2CpACRKDihXGYjYUCwWt3iRytfsWWoosFooVgiRhVcZIGlFFSUVQWOEFWeQZDaVPbi5I
      xvYe30HN+EHIYjyV93lcxWIRg6Tt3UxboFtHHrKRdnovbnJ4c4lIXcJanSYZxeLhLa3Z5Tuw
      NwEASHwlU1FptBFPFToDnRzLCkypyChdgXb0sEfHeDzucTtCoU2jw0MhaqWUyZYbNoer1XPI
      7oDFdBwz+Zjcdr4mdrW1MBJiINW9VN3rOeRs68XUp/EprMlniGM32VRn7t1BcRyj7UK9fPLk
      MABAFtjVzZjX7TCbzcddXZPfMMefQJViETPYB9rpVyenVInNpZM6Z1simS0XM6ooIDCEa5As
      p8FgSKmlzN6uUyMDB7+w0uTTzLE/hckj5x4f6mmdnl12uewcw9gsRknFHDYzrIgKqhvo8mby
      ld7Bk7DSGBgczO/tcUpzWeEzzLGPgdTQymJDgZ0t/uzuNkCBwHJaq5erFWmaRmSuUBf9TiOs
      b8kndxS+xsjYyeEBpLmy8JmlOYhuciSOM4Fk+WiOzE0+gzRF9U2ORFMT3eRINBOoyZE4foey
      ybmg26qdWd7yuOwfPkASmKnJmd1UHhIqK+shCaYQobi0kaSh+uRiiKB0NEWwlWy6Ihjot1XM
      8a21tY1NBdMbaUJV1dvXr5ltxr0sazJQAAC5mnrl5mw2GTc7ffhDFryUleU1FEOppib6k+H4
      HcoIMf/cq7HLTz09ceu6qEAtLnumWAEoXU5unLzwtNOsHRk7PTV+c5OvXjozems6KBpAoazs
      NlgF0t/3blpbXXc6TEEBlHdD586diyZyj50dujEf8TtHU5HVzXh29HFzfG68zfs4BIAisIUK
      i7J8uZSeDUVFRTXgsopq/S5jaDuj1Ru4Spnl67PZDIph/kB3PJ4ktLpzp4abMwfHwvF3YUOn
      zmppvRlXYnspVJX2cmVFEpOppNZoc9uMMIxmYiGjt/Od1Ui1I9CNwlDn4LnL508Fl+YAAEWG
      97R3bd17XUJ1785RqyoAiji/GsYBV6nzsKq8+8jnbe862evd2EqIspROJq1WS7mYX1xYhgiq
      UikBADiOw2lDr986N70goli9UmlOXh4Xn4BDmaoyXMPd4pZ4VoIwh1kvyDKMEHaL0eFwNOr5
      tyYWrGajzUSth3d87V1GWlNjBY3ChKIxX2unUa+t5VKUvbWWSwQGRmkCA0JtLbLb1tkti/zw
      yEkEqC1ez97eHoYger0eSI3gZlRQQLvfVatzMICNJp2qqB3d3bVyxWy1U7iGpEiKokx6rdbu
      kdma3mx1O22P2AKVssng6uK95Z2+QOvW8uxacF0izGbdQc4Vqiy8/MKvXO19S1O3V4Nbvo52
      hc2/dWsylS/7PAdJtAAAW0sTW1m5kd5Yi+d0eiOJY6oiPf+rf+noPnGwTRdXK7z0xq2+gPPl
      l68jBGU26jPR4MxaqFAR7ruR7nu2inzj5V/gzt5EeHX8+jVjS0CLCLfGJ7LFisPpPGCKV1WV
      6esvHf+OhTBGnBw6AQA4efrch7/FdbY/+M637v+77R0DmpGBHgCA4x1984nBwVy1dvGpr9z/
      b2v3QGv3eyWcGBkVmUJn7zCqcgAARO/6+hfe/qt4va3vr8vn+6CfnAUAEGj/SJdjsruV9bWL
      Fx8DAAQGT/IT12qscHAIU62gGlyu7QVj5UCbE1IBprWeGe6+NbtxWG0iBEEcJ2TZKqE3MWzD
      rCO3VucZET60xazWeA2iMvmMrCEYpq6qYGs3c+HixRvXxsGBHlNCow5DsKii3d0d24mCy0Q2
      SklU7+BLO1W2z0zvK1xRZB6oj2BEdQSkuxOTKgDr6+vv+1CeujM+Pze7FUu9/9D7x5QLRRkA
      jDK4be8TSnPFqzfuLCwsvGvShWktbpvObn/IIP34UeUCq9p1OAAgnyv0nTmbiWweHEGbbEYt
      DmDE42/Ty6UsCwS2olJWDBz65i7W0uIAAAQGTp460R7aiAIgxhJ5hStX6ofM8jvcLRgCwZTl
      qSceK6TiCgAogERVgeFDhLw4abBZ9ACATGTV1TUIAaChTZhQKdV45EAzZASlXE7z8bdAApeP
      JoSegBsAZWXqFm5pycViQGRLNa6z/6TdiJbr4ufPD7x5baKe3SlV+VavJVZU2XysWmV0hIaJ
      rkuCYvV2FnbDe6niV3//63ijKhPWkZGeQnJnfidpdfm4fIIVgdOiSxZrHV39Lsvh8rmPjyL5
      OzogCBQKBVVgFhZjI6dHDg1yefyE3uU15mqix6xWBACH1xZbO3sPDUQJg8ehSGx1Ll4+NdJb
      KNaf/vKXN0PBgzvN+/j9fo0GnV9e8Af6a8VC30DX/ORsR2/foYFmlx/HAYfqOzwWRWDKvIKh
      cODEiJ44JPl0Fvdxz0Qr4sLM+EaM/9JXnzZQ4PXXbwGR5SBIR+gunu6eCRUfO9P1y5/9KtDX
      6/L516bvlXJZW2fAHxi5+p//U+fZr1FcoQzkS8P9d+7cxlwjILtx9otfIiuxH7y+fHqotxRb
      xax+sVaIp0ttThNhtBby+UDfcPthwrkmnxzHr4keHL3wxS9cvq+J1tK6y4+drtRksw6dX9ps
      bfUCALm8bSMjI04LraiwBkdRFNegSPfIBYzNAg2h1WphGNE720B5J5LKowAABOvq6R/sC3QE
      AorY0Fpb2t1WGUINOq3JQNcY9pgvoclH4dO6FiZx96YWAE6dHR2CmnKzTzGf1gRq8hmhuRbW
      5Eg0E6jJkXj7MZ7juKPLwZRH2BCkyW8ZTUlrkyPR7MKaHIlmAjU5Es0EanIkmgnU5Eg8kECK
      LIbWVjKFajGbLDMfx/RZFthcsQKAmslkH36Equ7thJO5ksQza8F1XpRVRS5XaiJfX1layhQq
      AABVkWr19xYoRK6+Ggw13nHlKRXyDa7GCG8/MyoCu7S0tBmN7/MsoJaKpWLxk9lKrMkDgjJV
      feXn/8RihoWZaTa/vRzNqTCKNMp3Juf0Bt3y/HxkN+OyG+9N3NtL52gSvjs5Z3O24Nh7C7aS
      JMEwfPv6dUhmCgKh1HO7mZKewtaD6yKkScU2JITCoUaBATvry8lcprPVs7geL8VXVmIVrVxi
      MIvfbUdgaHt9qd6QYVyXzyR1Ov3kvbtdba6lrbTXZRWZ4k9++quBsdGVhRWPxwUAkMuJjRKm
      Y+M86UhGQyVGlNlSJJ4y6LWhtTUVI0LBIK2nc6lEfDdtNBk319cEoNHTB0mkU5GV2bVIIl3w
      e5zL03ci25FUoTp/52YFEOVi0W7d1yJCVYUrr74eCu90BDrE8t6VW3Ox3b1EJLixnZT5ms5k
      PcCiZf7eeHQ7XFdpm5G6de1KeDNcrxdv3JzRGvAyo5h0+3qi1bPb1ydXY4lkm9+7vTq3Gt5O
      5cuLEzdzPKjksw7H/qIXVb5x9c1IOGJ0+TVK/c1r45HoTmpvZ209AskcSlvw/TRsqnrn5rVo
      ZAs1tjxwRDLPXbp0/k+/910cAVo99cYrr6+vLEzdujoxNXd3Kbw9f/fa1deyDeT29ZvP/+LH
      16++9tJbUx8sGkIunBm4u7Lb7zffmpiMh+anF4OFcmVmdiGezNnNOow0tLoMCkZBCqyjaY6t
      9Q+PaQmE0FvMWmR2dg4AEEuXfHZyYW5+azsBIKBCiE5LM/UqUJX5xWB3dzuANSJfe7/NbzxV
      rOYTsWR+Zno6FArWWX597k6ywo/fvgMAiEYi0Z09s4Z969pb0Wx14vbtg21+c9nS8JnzfDUH
      ACjzyvkLo8Vk3mi2cKU8BCSmsf+EWaNE2Tq9NFRogGJmLzB0FkicxWIxUHCNk3P50gGV1kVw
      fnRgL5kCQIQ0hoEue4VDLTZLNl2Q2LK8vwg3l0r3jZ6BhLqignSZOXtmtJYvWGxWuVaAUE2p
      tv9OvzKHaG19PkuqVGerBbu/10xBpNZo1FMVRshnM/tWqUoKqj3V1xpP5d6XQBDoarO9+PyL
      /9/3f9SQgdPjxSB1Yz1kslpkWTJb7SY9Tel0yViE4UWz1dk3MDLc1/nhwrUGq9thQRDYbnd6
      WzuUBuNwOSRRxAkChiCRqz73wivtgU4CA5HtmMFogSEYANDgefVtM16AITCgHKWdeYevEwJA
      A8uRnbjJbOE41mQ2ZlPJKsMDCGpwb98avdHibbEVMhna4oBkyR/oRblsWcBsdltX59v6Q4Ik
      MRTVkLTdbuvq6jz4ZXyNBuZYDkExAACsKhzLkUb7hUvn9CSazyfm5tb3jUQJucHwMkyigCRI
      pl6HEeTEyBit1derxY3Q6gGVqorM8TxJkgAgsizwnORqDYz1exGRjUa2dvL75gFBYEydhWAU
      AgCDAMc3UA159uIlo8We3QuvLK7sWyWMymKDF2SKwDAMb/CsrIDegRGH2VDMF/biW/va6kGw
      IkssL1Dkgw5lqiIX8nmCNiCqCGEEz7AaDBIkBUYQAGBYleqFxF//8OdGV/u//YvvFktVi9X6
      fl+E+xOJqqpwfIMiSZ6tsYJq0OLFSo0gKBSBSJKUpUY+X4Jg1GTSl8oVs9mCQCrXEAkNWiiW
      TBYrCkP5xFYVtjoNqIakURiSxUahXLNYLEKDJ0mSY1lE5da2S1qN0tXVpcpiJldANaTFSBcK
      RQwnNShgONFsNpQLBUpvUuW3bwOGQDKEctWyhjZQB1omCmxlLRRx+Ts1kIQojUgsHeg/AXFV
      hNbvbq5bvAGL/uE9oKqqkdCqgNCtLjOEacKhddra0ua25Et1INRKDSjQuq/JZimzF03mu3t6
      BJ5jK7lCXerv66kUC3odFQyFe/pP7NehKBK/shI0Orx6AsExENqKedu7DLjCyVgpFcWNbpdt
      Xx/ceGSjzIOe9hZORtKxLUAYu9q9hUIBh+V4juntat/vl5aKR9Jlvq+rvTkT3eRIvF/Sqk7e
      vjV07vK722De+PV/9p75RmHlzURZXE8y//qrJ//vH73x3/zB5VdeuUKa/H/yp39spg6xCmzy
      W88Dmuj1lcVUIrKd4xCt43/+8+90B9puTM9Ut/dODXknZtbvLNAQJHcMnhncWPGf/1Yze5qA
      h00kQp/7yjdVrgoAcAaGdueu4I52HALdne57K3Gnqen93uQBHmiBegeGKYqwGOjhwT4AAIyS
      T1x+zNJ1luISFx09nbmaRqojAPg7+03aj+nb3eS3jOYgusmRaDqUNTkS708g9dkf/HWlAXWP
      PZbZmK0D7aBfP76S+vM/+69NzfFyk314YBDNC+Dbf/iN2RvXltYjTKmYK5bOPv50M3uaHMAD
      g2ipUX3xxWtf+P1vx5Ym6rCh1WcAuqYvU5ODeKAL+8BE4sdAbtSmFsNnhjpmg/EzJ098+ABJ
      YGZmFlWU9NmoWDrv8vdYcT60W+92EQvhdE9Pr9NqYCvZAo95HW/vWBjfWkvkSi3tJ/xO432H
      spHTJ3Nltd1rBQDI1dSr90ImEh4+c0mHf3hWQllZDro9bktzl4VPhvcnC3T6/IXN0IrJ6XdY
      HtjUWGwwmSJj1OKkzoAcuAzZdCj7XeN9P1lVffUXP94t1N549ZVKuXD1ypVEtjQ1cfP6jfFK
      ubC6tvIf//1/2NzZvXntzXA8c0CJTYey3ykecCi7efPu17/z7bHhgfj63K07d5MVdWNlps1O
      LkQyxWpDowqtHuudibvB3fKF0Yd0T2/z2Xcoy+9uTi0Gs2XW47RJDea5F19t9zvfeu01DtOX
      8jmr5QBBmXzj6puhaKKzo1Vm8m/enEykc+nYxtZuVuXrlMF8gKBsbX5yY2ND0pjMOnLy9vWN
      jbAsMbfGZ40WOl9umPbf/5UvJa/fnd/LFn0e1+7G8mIwxMrQ4p0bJRGrFDI22wHWJcrEzeub
      4ajN7cMU7vqN8e3YXjGXWAvtYIAHpInY1xRNnZkY39zc1Nq87+vC3tEDFfJFr04k9RagyFyt
      vLmTdHX0cXmWQOX5uTmA0yg46Pf7W+BQlognhs48OXPrCgC9tWoNxRBVBQCCkrHtrkCnICma
      /e5sIwe0XoeQyAlAjof9J87EV+4QFKaK9RJDWTge319YmCmzT5w+8eZirMNNsyLW365fiVcB
      DIWjie5Ah6Kq++1plNyJdo2cDc/eVFTg6x4UGvdyNRYAUE5Fte19XEMk99OuSEwD0vW6QCxf
      9WMlvbNTKW7VOByoYrbM0WZGJfQPr1KRagJ8pse7EEs/MAa6/JXv3NcD4YhaY3gYhp7JbH31
      W39iMtIMJyLqJQVCGqKIIY+2jqHK03feqkG2sR5HcGOno3/YbqR2w0FZ62h1Pdy1L7u3Q9tb
      KY2mspc2IPxOQegL+B64BlWNbKyW65zT382y7+im5cZOsqCnCPP+bcMjIkuN9dUgI8iyrMAw
      DAAw2Zw0jmko0xe/9tXZ6dmt9ZlEovPSuX1cmxAMKKIMYAwGEIaKkgTD8NlLT64vLyYyqYl8
      9stPf+6A2hVFwTAUAAgARZZVd+cJv5ZZXg1NjN8avvDFNvvDkw9FEUFSIBiGACjkc219Q+Hr
      M1/86tcXl9biG1PppO+JS6ceXh+EAFWRFRhDERhBZVmEADx69mI5HlrbihcK2UuXP0996E9d
      yib3inUAVElRMAx9oAsTOFYCmEGnRVCMJEmCIM6ePUtRJAwjOK7R4ASO4xRJEgR+wF0QuPzW
      Ttlq0YFG+ebUcouv00hTOlyIZBo+p/n6q69oTfrwVpiXkN3wSng7YXe3ICp/7+5UOJbcDc3j
      tnYzLk1MTodj6bOnR+bvTWzv5Ur5lMlMBzf27DbT7Vu3OvuGYJl569p1ksDCm6FCsTy5HKY1
      cCaxE47GVKE6vbyZL1Zzu+FYIudscT36ZkAwjNqdLquJXl1e8nb0qVKDpChRFC1WWy2ftfra
      +Uqppb3ToN3HLwwmy+moRJpb9LjGYIutL5mdPodF15ARC62BSYPLbn14IAAatbESSZ3o7+UY
      FpaYdFU50dNWqdTa2vylCtvZ0bpfs0cbDKGVRau7DYNkRGmsbex0dvfgQMB1FkRumF0+s4He
      52wxtpzK83C31yYgVCkZhbXW1hZ7nRN9diOranwtjg/fOlKrs1stEluK5tihbv97j/GqKv/4
      b/497Boc7W1zenyFvR2bt4OvZGsMbzQaGgrqde178e/xgEMZFt+cvzoR+YM/+ZZSzc6uxT73
      +LnxN65UFc5u97CN+u7GXpvf7B163EOxb9ycz+TzvV5T99kvmeHKP/zsBYvB+NUnT/70tXmf
      EXP6nPHtvb6Ln28zE0y1tLa6XGxogFCx6ylOYOoCpWpIUi0JIjXWZ52Y3fCPXN4LTtqN2iIr
      X7j0OIk1H7k+KR6Y8xFVpMugvHB1YtQzw1De2PV7DqyGaY27dVis1/63/+V/Orw8GBscvdDW
      IxsojdKoLgejWr1+b2Ol3JAdTicAgKQop6sll6vq9K72dkmUIYNWI4tVCMVQBKF1dKlcMVvg
      nr6hwVbDRDDTbtfKENbV0zs5E/yKmVBVeX5uTmu0eK3GzHax1pAxGMUIguNY0mDEEXZlK9XR
      5sE0KEVRJKVFmWJDVpsJ9MnxwGLqc8/+U39P99SuFEATSeCMRSMtenV0eGA5h+XCM//dv/nL
      j1q6IkuyCmMHOxw/AqXsbrKs9Hf5j1hOk2PngQRKJxM0ra1wqttm2Aqt27wdfDWn1+lqIiww
      FZ/Pd0BBTX43aVrcNTkSD4jqv/8f/k/V4K2zjf/hL/9VrVTUmy0iU5VhjYEmC4WC3mT427/5
      x9MnOr1DpylERVBcT+H5YvkDL/c0+Z3iwwunaqMh7m4uvvLam46es7GZK0b/yIU+0y9fv9va
      NwIAyCZ2qwKzGi1x9frpLvPEwubJJ3/vm0+MAgBEcb8X0Zr81vJAAqGE9rHPf/n6r38+NTml
      YhTPsd29AyvB1Yi+t6Wt06TTMu8sgvWPXdievJItlTq7umni7XWtpiLxd5AH5BzLMxN7+ZrJ
      7ulw0hs7aZPNCTHZQgMbG+ycujfdNTSWTcR0OIqSOCDMlXTc73POzAfHzl0wanHQ1ET/TtIU
      1Tc5EsdsMCU3aqvrEVVurAYfvqWNIgtL87NLa5vFVHxqeipVqEl8bSMcZ0vpe9Oz9/2BRK6a
      zlfeDcnv7UxNT2fLLAAAqGpwaZGpF1P5+ts1MoUbt+9Nz8zy0kN/CUo0Em36A31yHP+Wl7X0
      3evJaNfQmaW5aU4Efq8jvpfBaXM1HQkMnrXpsdbO/tXZyeUSemF0+O7iZg6u7XEUVBMERYtr
      NACA9dVVo9W8o6LVZGRgcHA9unth7MSdlbD99GApFb09veTvH4os3XVaL0AAqHy1KqI0KOdL
      xb1IWEZwg0ZmBKiz1RkKxw0WeymTYnk2tLqoAKSzu2c7uk0ZLIN9geZz47Fw/BZ3Y2dO13jI
      RcMbkW2lUY/GUqIobO/EFIRwWQ2ohlLYLGp2alQVgiFJkvoHR3AU8nWPnB8bXJibBgDkqpzH
      4wlN3yxzCgQBoKoQBIuiCBTx5sScngBVhv/AiJ3UIPHYbo1txLe3AVDqtdrK/LyEktlMCgBQ
      KhZFFe1w0hN37jEqks9kmoKy4+L49wtDMMJhMyMawutySiqgcESUAQJLWq0WANCo5V++OjFy
      8qTGpJuaW2zxdAAIpgg8u7edZeQWXzsAwEhqOEAhUr21sxMAYDdS9+ZXfL6uYqX2e9/5g/nJ
      u0YtoUJwMZu12+0AQUWuWtegViOxx3EoDKM4RWCMydWWL9UpWodKkgLJEIBQDG8NBJhqFaPp
      g+etqrnESnjXYHGf6PJHQyu5UtXl74itL3v6R6EG2+r37heoqsrMvTsNiLx47hRQ1VhoXjZ2
      culNDqJaLFqLy7ev5xcA2xsrqUKltXvYbaFX5qcrrNTe6lwL7Y6dGmA50OLcV6kiMsXJhZDW
      YBkZ6IYA2AnOScbW3Naiyff/t3fmz20k1x3vOTEzGAyuwUnwJsD7kERJq1ppdaw3a1fZlVRl
      kx/yjyWpiiu2k1Q5x2Zje+21tdqVSIqXeIIkCBIkSBAAcRAYDIABBoM584NWjrMWuBsLirVr
      fH7AT3jowdTr7tfdr79vxATk/v4vJ0X97vOG11drsnH1+k1MF9c39yCMsFEQV9OCAdbk6Gpd
      L8zYD2/wgjRx7a03MYgWK4WShAU8LVVtFLGULukEovh8X1GC9A9jd3XeP30nvPT4wYMHoigi
      Yv7pwYWYTeDOrumrV7w2cytDQy4ubOQtSr731gM72lx6+Ctq8Hb1bEMyML8vMDk+3MoQADA3
      N3fn2sjcfvH+jeG5udXhLnLvrMJx1e6B7mtXrpha56Kf7a3ovitn4cU79x8Aufrxhx8FbjzI
      bi8TNufA2MyAv3XBVK0+txwddEB1+9CQi1R0aO3pvIFAdUn1+LquTo23NNTVuaer1wad+zXm
      daq0GvrhztrmXlyWans7Ya7aAAAUs8lUvmVIW+ULTRVQtFVXJVmsnKayqIVX9wAAEntJREFU
      X/Zuw8inE9HjtN1Go+iL4VNXCxzPly4TkPuaaGpzfzcsNBRggOddCwXayl7q9q3rP/jgA7cF
      21r8ZHU7fskvGC8+IMgUDPZBANx997vBLvdFLvXLT5989RP8Tn/2Dc38xffehhvVn3347+nS
      V3ZOAwAQXl+nrEyJr3//Lz/weNzHW48XVsJfaWUAA0Gw/GnUFhh65+6DKyP9XC7zi08eSupL
      DMqF7P7R6YuHNdpZtVlVVQCA0qycZ2tWKwWa/JPVXQvjzCRiCEkoGuK0Wz77+Oc2n+f48Ahg
      1EXqKJ7KezxuGGg7W5upfOk4vIyx/XZcWd3aix/HQ2MT8f3t9EWlVi7ZHPTJSdZuZx4/mbt+
      80Yxn3n8+ROH3RI7PGyIwpP1qMtK8YXMcSJtgpqbkZggKpV8Mn6W9fouKz38JWAYdXm8DIVG
      Ivusrw+F9MjmikHaKJLWxZKZ7WpUeae3x2ltMQjBRC4RlVBLj5NWIRSokoZaHGakLKoWEwQw
      KuD3tGpab1SiiexQMKQ0m80al+PV0ZFBrlDs6vLylXpvfx+JvXxCoSgisrvLOD0UBvcNj7kt
      JszC0kjTwBi9WbM4vG5ni7Ecxkq5s0JdD3V7+FJxdeuAdVgdDidXrrptlGSgPQH/7w98hNni
      Yh21Ui5xIYwO9bV7CtOVnc3FWFJ677sPrBS2vz63fiwwpPqdP3t/7dnW/btvL376SDAkJ+vj
      K2UuXejyUIGZ7/RZpIfzWwWOGw7Yg9ffs8PVv//xTz3+vu/fnfiXX667TZqnPyCWBdfIjWEv
      zeWSz9a3aM+AVMm5GUqU66JM6ThBGhVZIa6EHKs78cDE7ezhGo1DsJm9enUa6xzVvTbaX/Jy
      bHr2zu1bVgrXm7WzHI9CYLC/9/AgStu+CAP9Pp+iKG53wOO2QTjjZHBFEpsakJtNBIFK5QoA
      YGBk+uaYbz6c9FhxwsaOjQxHjtNBL20Y2mEs7u/uo0yI2hDyvAABoBiGUOEBwGC9tnd07mFt
      KIoAABxOVzl3VpU6NYReI683iFYVSdUxwvQVxX+/knIhfZITr06GXvF3OrSdN3EV1uEbRKdW
      RodXouNAHV6Jdu5EI8irxjodvnF0cqI7vBLt3EgEAGhN4ee/eux34AtbcT9LC6JM4GixUIBR
      U6NWUXQYUmvzCyv70aNGJX8Ujxfrhpg9WNw5txrcQvjEYmFoiiikYilOsjKWptRAUSz8bCF+
      elJqol6n1dDkH/3DD/uDfZHYud/jBAAoxfhPPl4uJvZp/5AqlGQDAprMV+skSfBcAcawxYUl
      FENgyKgIdYoky6UiQHAM7QyW7aH96RzXQu5/+2Tlb/76B/NzC3YKRRlXXeDyFQOWCu++/wOM
      tt1/cPezh4/4mnz71uxnSzv9o10En61LitVMFLmil7VGj1MTw/61PaleTH3nwb2KqL1z68rD
      1RgIdUe21q0uL0Y5hOKODoK/jeDqdUmq5A9PThOpnMsCdw2M8enDCmyvRg5RAI6Pj6oc52Mt
      BwiDUEyD37//4G4n+msL7X+NXQMjPQGvCdLz+VxVlDLppNnKAr1pZz0MTeqasjL/+cjVtzBI
      lyQJNxEMYwUAWOzeq1enLjIpAICsajbf8Pn2p1ZPLwQBADSp2TQRBNCVqqjUyxeVmgSB/5EI
      6R4I3b42HNndbwCCQKFrN25mjncPTs65Ukl9kbdhdbq63PZCPl/kiorWmbfbRpunsOfguMlu
      dzitZpi0T44M8OWqz+f3ed0MwyiNajLH66o8NNh7dJIeGx8jTRhuIuwMEYvFxyanCRzVRV42
      OVwOa9/AAI7CDgt5cJoZHx+t14ThkVHW6XQ5Lbk836gLLMtCEJzLnEsQOTsz3qiWWbcXRwFC
      2GZvzKq1St9gyGG1OJwOp8Npszl8fUFcFQP9Q3ZLyxP1Dv8n3sQg2tAUoaEwdEspHaUhyDAF
      aU2K6pRe+CPzWkagF8g//uE/jU5PLz192tv7v661H2wt67TXbIJKXJmkviwEC8GICb9MggjB
      TDgKY9jvfsdYW9/o8vv584P4hXa6twLRbuYPFShuVAprm9uSbnLa6Ewitrt/SFqY3bUVlGEr
      pSLDWFoZGoaxs7GSyPIBv8dQGyvLq3xdForpdFGANQklzJcolGUTsZ39Q7PNRZnQWGT7MJ4y
      k/Cz9YjLbeP4msXcUi5Xa9ZWV9cqDd3N2oTi+cZ2BDPbYjtrTZisV8sMw7QyBABEdzaPE+ce
      nw/Sm5sbG/lSTa1zR2d5GtUkmGqtUAbiB7vR2Cnr8bc7I9HQ0qd7e/HGvXvXCQyYEHVheUsV
      awufPwQw7O6fDnZZHj16zF2cuwoCZGVhgVNgygxJAIMBBNHs4PRw98r8o1QyNXzlZjaTHRkb
      2w9vdw+EhPypBmCCNJ1mq9NT43tri92hqesz43zmeGX3tKHq1Wx2fGpGU+XlRz8bvfUerVx8
      8mgdhWFDU7rtJiZ4o8v6df3pOBoJzrwTXvo82OvBacf1Ufzh+hZS4wrrG1NT05dZqqVSg6LV
      i7IKlETE3D15EXsGNFWDUEPxubz+S0yjJ+m7s6Pz0fj9G8PpfGW4i1pZCzdEdWs3OjNz7RLD
      89iuK3g1ubOoh/oUyNTns8YTcT6dK1Yb3YPjXZdYamK2JA+xcKJQ7bchgyNTO6sLeQPAOjgE
      6vWZ1sl6hnqW5a8NOvdO8693LWLzDpjlfIavSRp6bWbkInehNUWT1TMe7Ac6PjkzAqNmTC6V
      VbSYy5Ek2ajVAABVoe60kslULjRz02dBzGzXxMhgJpslTDhEsoM+ayqdm54aTydTGgBlrmRx
      ubVm09vto3AUANA7euXiZDeTOtNgQtE0lkIiOdH/9bxHU5t721u80ERg+HnWtdNuXd48uv32
      2zfv3PMy2OH23HY01dpeMWAUMTRZB6qiYiiqafrt27e7PY5iofDp3NLlrcMwLMsKAAYAMIJA
      /qErd25NQo3aw49/nq+2LKKtqhqKwrqmGQA4nCxlYcRq4513Hzjtzuzx+upW6wKdhgYgGAFA
      VjWMoLVqBnUE3n3n9lCfv3xR+OTRY7nVRVHDAABCYVhWlHY7EIQEBqa/+95bBIYAAPf2Bt66
      cy/Y2xfq9+0cZGamQhhlc1GAaxjdPV0kgnZ1ecdGBgeCI7feuik39YGhPgCAx+shGNfYxGjh
      OJwRYDsm7+wfvXXjhgrhXS6LbKBdfk9VEAM9AQQAh8cLN5tef1eP1yVICmFxjgyH7t6cgO19
      Lgr09fYPDfitDu/XTAhCUNPEzJXR4d6tlXmbu4fjuPnf/FcDMYu1OqzW3D3BVkKFX2By6dVE
      XsUpqUx7e092lk20nSAJgFucNAYutXVZTPNre4P9Aa5UM8HS3gnfF3DUao3gUC98aT6Tr7fv
      YGMZZ9hKiYtHw4enGbfHY0INm7sLvdwSNWNaOZqtdtFwNpP86DeLNA5BKNnUkG63FbrkaWHU
      jCqrB6khn/VNDKLbinEWP3IFBihT+68PdACvYxWWTZ3ki9W+4LAs1txuFwDA0NViqQrDoCMX
      /+2j7f1SX17d+t73389l0o+fPLt/dzafL7pc7MrO0fWpET6fLgpyn99xnCzYWA8scYKCXr86
      9RXzQoc3mPaPQIVMYuXZOuMflEqc3YKIQlm39htKA1EqCkTPBh1PnkVG3nr/bG+VgJqEo+f6
      tUmk40DfWNodROty9PAk0DtI4Ygs1i5KFRgCqqoJlbIOY4gihA9TXpft+Y0c1uXJnZ1K2rc7
      CPuW860Poju8XtoZA3UEpv4EaacDdSTu/gTpZMV0eCU6DtThlWi3QpksFkoVAIx8/uLl3zCM
      88RxpsCrUj2yH5UUzdC1ckVQpNpuOPxcoczQVaEm/tZCadT29g+a6hcXTHmu2GwI9RfnNLos
      hsPh2EmyxVrA4Et8R6Hs9dFmcQUYhhc+/xzS6pxM6LVCKs8zFBbdjyoQnj07VBHKBDW5OkhE
      dzKF/FBfYDua5JO7u2cVs8bXMWev343A0Gk0XGtqsMlSzGcsFmZleSnU7wsf5bp9rFIv/eSf
      /2Ny9tru1m4g4AMAaOX0IY9ZxKREejInB3xd0UQ+nsxaGfNBJGJgxMH+Ps3QhWw6mcrZ7LZY
      NCIDnKE7xYTbQ/sPU9++Obm0mxrvdcwtriQPNp9t73Plytr6VjJTcDssGGnt81l1jIJ02ELT
      DVEYn5k1EwjBOB1mZH19AwBwluN73OTWxubRaRpAwIAQi5mu16rA0De394eHBwCMK5Lw2yVf
      OnGUzJaqxfRZprj27NnBwX5NlKIbTzMVaX7hKQDgJB4/SZw7cPGzR5+dXFQXFxY6e0/tov0x
      kNnK+j1OBIHdbm9336DerHt8HlVRTAQBQ5DSqH740ccDwSECA/HTM6vNCUMwAKApSQYACIIC
      ADAEBpSHT2x6eoYgAHBYiyeSdoez0RDtDttFNlOtSwCCmo3G8xYZm7O7y8Xl87TTA2lqb3AU
      bVyUZczldoWGvqhPSJAkhqI4SbvdrlBo6HK5DqUhhLc2s8UqAEAo5TY3tyt1MRLeqojNYpG7
      xNAwjPhhZD92CgDQVWlvZzuZLWZTJyepbJXnZPUymYdyIbO5Ha5JCgAgcxYP70XFWnk7HJHl
      ZomvXtao2tzd3jrLFAAAsljZ2d2ris2j/Z0LXigWi5f9TwDSp0c7kUNNN4ChJ+Ox2EmSy6cP
      js8kga81L9uUyadPt3cisma0/268YegNqUmRpCQKomxYzaZSRSAICkUgkiQ1tVks8hCM2u0M
      X644HE4EMhpNhcBRrsTbnSwKQ8X0URVmvVYUJ2kUhjSlyZUFp9MpNyWSJBuiiBiNyClvxvVQ
      KGRoSr7AoTjptNEcV8JMJI6CekNxOKxljqMYu6F9sbmAIZAGoY1qGaetVKsqkAAAAA42nloH
      Z6Nbqw/u330692T2+uiTuTCJaA3MGgoGBwItq5AaamVuOU5q5fE7D2Dhog5ZwmtLMAQABLld
      7vGJiUvObObnnlyfGNhMNd+eGXjyZLHfTcbOeVVBnH5nMDRu//3SgS/IxjYq5qFcbOude/fW
      FucmZq9tbWw3+ApCmz3+/stKHOnSk4WtHjsC+8dYwC2F0zYrVSmXCASmnez05GTLbmZoc/NL
      493Wc8jf/hEIgmCKJAEABEXjKIJgJjNFWWiKJEkAAILiOIYYhqYD2O1yoQgMwQhFElJTdrlc
      alPSAWADwQG/nTJbnieAIjCsa2rhIo/iJACApCjc7LwyMRQKhQAAEIJ5vV7WYYVghHW5rAxN
      UjTrtMMQ7GBdBI6SL0BxwoShNid7ufcAAGRZJyhCU2UAgA7BBEkiqKVnMOii0Wxi5+is8FKr
      arlU4TkYpwhYE1VA2VxQLWP1dF+dHnc5mFJFWNncufTFwQRBiKIIgAbDGEEgrt6JoUG/IdbW
      F+d58aV7bAZXyJf4OmUmdU0xAPB52Oh+9KIkjU2NWsyMUDzdi529tLW6UOE4DkZxAoPrktIQ
      eMLu1UV+Zmba6bILfPnpypryshFTqgsFrgTBCEngNVFsvwNpqlSpPF9DKf/4d3/L1eXFxaWG
      wB8cneoGAEBdWnyma/LTpTW+kD2Mn4m1ciyeePp0qVi44Es8VyoeHRw0ZDWfTsSOE5phgFp2
      aScBADB0JRaNNhS9yuVPkllNFvcjUUlp//Y3y1o3lxcJxlUqlRgcLD5dd/X2OC241eWtVsr8
      JROKyV7Lx1KCTsqV7Fnsw18vUibM5nDqCGXSGzx/mQgfhWiL67t+n7vEi6pU2o3lu/wsCnSf
      x1Eul+qtJxSXz723tqJjdJUvGYYmy9pQaIh12CwOl1DmeL7cskmUkoV8JFl0UwCivaCWq6sw
      Y3PoBmwxQdUKr7WaciEEyMJaJNHN0q9VoQx88otf67gFgxUYwNOj3Qkevz4Z+M9//WggNKjC
      VLOcLWYyrv5em39s+9FPfWO3aUXgpOqV8fHoUdzAWOH88L0PPiCrqR893JudDMmFU4TtyZyd
      NiTFz2BlybD6AoN9/W57i5qgHV4/7VcoGxmfnJqatlI4AAAlrWN+Kp79ohM8z5JkHO6ZK9dm
      p/vLgmIhURWgDE0xTm9TKBkGwCgLYyaBpgIIwMgXEn1dvYMTI0O6YcAIYrfZAIAI2jowMu6h
      9OjRy4foDv8/vFaBKb1YLLOsLZPJ2y1EMlcODvXDkF4s8izrBACcn8VlHaYZq8VirVV5FBgK
      QGAE2GhzpVrZ29nNVZp/9effg1SpWNdZm1nX5KPYcffAsFIrFASt12s9PE4OhkIk3klX/aPx
      xiqUGWWuiBD0JfehOrwJvLEO1OGbQecwtcMr8d8t2uKrIw+EigAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.County' width='192'>
      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
      /w9Kg4/oLoLVqgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.County Red' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
