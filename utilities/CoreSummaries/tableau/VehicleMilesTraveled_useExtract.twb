<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='VehicleMilesTraveled Extract' inline='true' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' version='8.3'>
      <connection class='dataengine' dbname='.\VehicleMilesTraveled.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>4</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1442</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1454.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone</remote-name>
            <remote-type>4</remote-type>
            <local-name>[walk_subzone]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>walk_subzone</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[walk_subzone_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>walk_subzone_label</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Short-walk to transit (less than one-third of a mile)&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ptype]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>8.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ptype_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype_label</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>8</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Child too young for school&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Retired&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>4</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Automobiles &lt; workers&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zero automobiles&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2295</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9565.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_indiv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_indiv]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt_indiv</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>166594</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>134.72</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_joint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_joint]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt_joint</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>75982</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>35.3825</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>168284</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>134.72</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2015_04_137&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2015_04_141&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2015 (v 0.4), Baseline&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]&quot;' value='Change in VMT per Capita from Baseline' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' value='Share of Persons' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[COUNTY]' role='dimension' type='ordinal'>
      </column>
      <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[autoSuff]' role='dimension' type='ordinal'>
      </column>
      <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
      </column>
      <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
      </column>
      <column caption='Person Type' datatype='string' name='[ptype_label]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[taz]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[walk_subzone]' role='dimension' type='ordinal'>
      </column>
      <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;' value='Cannot walk to transit' />
          <alias key='&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;' value='Long walk to transit' />
          <alias key='&quot;Short-walk to transit (less than one-third of a mile)&quot;' value='Short walk to transit' />
        </aliases>
      </column>
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:county_name:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#85d4e3'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            </map>
            <map to='#9c964a'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#cdc08c'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            </map>
            <map to='#f4b5bd'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#fad77b'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No Parking Fees&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across.Chart.County' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='49' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' value='20' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14'>&#10;VMT per Capita:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.County Red' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Change in Per Capita Vehicle Miles Traveled by County of Residence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:9]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='ColumnInPane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' scope='cols' value='Change in VMT per Capita' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' field-type='quantitative' max='0.10000000000000001' min='-0.10000000000000001' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' value='27' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' value='508' />
            <format attr='height-header' value='36' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='120' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14'>&#10;Change in VMT per Capita:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk])</rows>
        <cols>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.County' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:7]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:2]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' value='60' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='68' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' value='208' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='48' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Indiv.Chart.Auto Suff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence and Household Automobile Sufficiency for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='76' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='126' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='30' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;County of Residence:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;VMT per Capita:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Chart.County, Transit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence and Household Proximity to Transit for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[walk_subzone_label]' derivation='None' name='[none:walk_subzone_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;' value='Cannot walk to transit' />
                <alias key='&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;' value='Long walk to transit' />
                <alias key='&quot;Short-walk to transit (less than one-third of a mile)&quot;' value='Short walk to transit' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Short-walk to transit (less than one-third of a mile)&quot;</bucket>
              <bucket>&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;</bucket>
              <bucket>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='75' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='176' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='39' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='56' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;County of Residence:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;Number of Persons:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[sum:freq:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;Average VMT:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Auto Suff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence and Household Automobile Sufficiency for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='47' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='144' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.County, Transit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence and Household Proximity to Transit for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[walk_subzone_label]' derivation='None' name='[none:walk_subzone_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;' value='Cannot walk to transit' />
                <alias key='&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;' value='Long walk to transit' />
                <alias key='&quot;Short-walk to transit (less than one-third of a mile)&quot;' value='Short walk to transit' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk:2]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Short-walk to transit (less than one-third of a mile)&quot;</bucket>
              <bucket>&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;</bucket>
              <bucket>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='57' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='192' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' value='52' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]' value='136' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Person Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by Person Type and Household Automobile Sufficiency for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[ptype_label]' derivation='None' name='[none:ptype_label:nk]' pivot='key' type='nominal' />
            <column caption='Person Type' datatype='string' name='[ptype_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Full-time worker&quot;</bucket>
              <bucket>&quot;Part-time worker&quot;</bucket>
              <bucket>&quot;College student&quot;</bucket>
              <bucket>&quot;Non-working adult&quot;</bucket>
              <bucket>&quot;Retired&quot;</bucket>
              <bucket>&quot;Driving-age student&quot;</bucket>
              <bucket>&quot;Non-driving-age student&quot;</bucket>
              <bucket>&quot;Child too young for school&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]' value='91' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='69' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='112' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]' value='88' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Indiv.Table.County, Transit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='85'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Chart.County, Transit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='59'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.Auto Suff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='81'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Chart.Auto Suff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='118'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:COUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.Person Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='67'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:ptype_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Table.County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='89'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='80'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.County Red'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='71'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\VehicleMilesTraveled.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Indiv.Table.County, Transit' width='192'>
      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
      RqIJVwwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Indiv.Chart.County, Transit' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAfeklEQVR4nO2dW3Ak13nff91zv2AwM5jB4H5ZALvLXd5ESiTXvCiWy47sxCnHjqSKLdmu
      SpXzlEpSlUoqrkqsxHnNg+2K7UQulVyWZEkWRYpUyIiiRNmUxOtesLvA4r7AYAAMgLnfeqan
      u08ewKUWu5gBuRhgiZ3ze9rF+c/5vp7p//Q5p785rQghBBJJm6Le7QQkkruJNMBdoJRLs7iS
      oNnFV9O0Pf8uhMVKPA7CYnF+hmsz89TNW/sRFAoFAHK53IfKTSuXsd7rLrO9wdTUNPnS3rlU
      SgWMm2KbepViqURNN/ZKnNV4HEu8l5NlkMsX982nXCxiWDcfn0WhsPO6G8emaRo3K3LpTaam
      pphduE6z8Y0wdez7ZiBpKUIv8u7VJR480UViK0UqEadnaARTr2PUqxRzaUy7l9WFaUZPPcBI
      dwe6O4LHLDI9f52uLh9XrqUZ7u8hsZnl42cGuHh5Hr+9gjfYTbWQwu4L4rYprMWvc3V+lSc+
      dppcxcTvFGTyFUZGBrm+nODk+AgLi0uMjJ8hHPAAsByPc/q++wCYm57j4Wee5s1/+Hs6PR0E
      oyGy+QqRoB9UBd0QWPo6+VIRu81GNNrN2tIUKb2Dxx4aA7ufDked6dklusNe3p7Z4reGhpic
      nOSZcw8zObVAtMOOs6MLtx2wDEzTJFfW6evqYHUzi61epGTZOTlxkvX4EuFYL+srCXweO3Mr
      G/zmP/s0L73wAo8+/gmy+QoPPniWYFeMK1MzPPn0M0xefJtAZ4RsLkMsGmEzlaZvYIhkIk6s
      t1deAY4aU8vhCkQJ9QywdvUiA2c/xvz0BdbXkqysLFMs18intwiEItgqaV6/NE+H18Hly1Oc
      ffAsy9eX6AoFAchsrfPKD39Gf1hwLZ7h+tIi6XSailZhceYSZdNPd9jLxQuXyW2uMrO8RX/Q
      wQ9ee5NTDz3MwpUL1IXK0vIKAEIYCMWGciPXepWZqWlGx8fR6oJEYp3Rbhfb2TIvvPz31Esp
      rsfXCHtd+EIhpq5eRqsr9Pd28forr+LyuJi9Ns34mdNcX7hOpCsM7HxDX5uZo5RKUFYDbK5e
      J55YIxFfIZPNUiyVeef8eSwtw+pWmfvG+3j15Zfo6DvN8sI05c0l6r4+ujp9gEq0p4fV1TX6
      fDoLyfKu97usGRSyWxS3VrgwOUv/qTGuXbhCOltAK2WwffGLX/ziEX32EkB1B0ivzrOWWCM2
      OMzK4hLRniFKuU1M1UUkHMLhdNDhcdIzPMzC4ir3nx7HpVrMLCzTOzCAXXXTHe1ENxUefeAk
      iUwVr82kozNIh9dNzTAJdITQtSzlGgz1RbFUJ8FwkEjAh+rxkEys09ffS7FYpqu7l1DAR71S
      RDh8dPjcAJSKZU49+CBdAS+lUpVOn53EdgGHDQb7Y+jChsftoSsUxOH2YOg6gc4gqiuAMxhg
      fLAXp00wO79ET98AqsNFTyRETTd44OwpNF1BL2VxdwSxm1Xymk5vLEalUqE3FqWmC0JdXXRH
      gpiKi2J6g2Ckm45AkEpum5qpcGJkiMx2EqfHSypfY2JsFKdNIZ/LE4vFKJXKqAhMw8TpCdI/
      3IuW1/B2eAALpdWrQEIIFEXZX3iX+jtOcTNbCSxniEjQd6RxD0q9VqFQ1ugKdx1p3A/KjVNe
      UZTWD4EaTd4+Kv0dp7jh7oEjOflvjXtQHC7vBzr5Wx33w3Aj7pHOAXJbCZ57/kXyFf0ow0ok
      DTnSVaCZyXfI5MqsriX4/luv09F3gkx8Dh0Hn/mXv4PfZTvKdCSSo70ChGKDnOjt4OI758mX
      NebmF6gJN31BO/myvCpIjp4jvQLEenuZub7OL33qaa5cukhXrB+7qtDhVujwyFsSkqOn5atA
      lUoFj9uNJQSKoqKqzWf4lmWhqCqNVJVKBa/Xe9vfhWUhAFXd+yJmWRaKory/ynDj38AHWnXY
      K65lWYCy5zEJIUBRdh3Hjh52wil3HPfmGDeORwjR8Nhvy4v9j/nmuEIILEugqrfn3Kw/IQSW
      EKjKB39ds+O9wY3P8sZrP8znuBdCCDRNw+v1tv4+QL1e50ff/So/nVxEtTsoZFIIYCW+hssO
      q4l1hOqkVkyTLlR55yevE45FWE1sEur0s7Awjy8QYns9jmYqOO02HA7HLVFMvvK//4I3Llzl
      7JnTLC4s4XbaWE2sYWDD53HzV//zv5FWw3z1T/474fFHyW6uYWpZnv/BGwxEA+RKOi6bxcLy
      KqFQCPWWN7Ner98St87/+dM/4/z0AmdPjbKwFMdlE6yurWNZgr/9268zOjrKcnyNrq4QtcIW
      f/21b/HOOxeo5tdJWUHK23Gcbg/Li0ugKFxfWaWrq2tX7Nvj3pRBOcV//k//hdOPP8N3vvFV
      To2NsBRPYqPO2kaSWq2KbipUclsUqhaqofHWj19iMa9iFrdxeAO4HHtfad+PK0xe+Luv8+75
      d9GdIRxGiULVpFJIk9zcQi+leeEHbxDw2KjqBuuJOG5/EIdq8Xdf/xvOv/sOztAgtWIK1ekl
      vRGnYsD3n/8mvkg/yUQcfzCM3abue7wA9eIWf/YXX2IxkebkSIyl1STl9Wu8e70ElTSKy01y
      dZVMUSPgczI3v0gw1LXvF69hGDgcjsMxwMr8VQp1O6PDEV5+6SfYzRzPPfc81arG0nqGy5cn
      mZ6awuX2sLq0yObGAj98/V2sSo5EVsMobvH6u7PMXrnIyfsfwOPc/QYJoVBIr5MqmziMIt/5
      9rco1erMrmxwdXKaTzz6ILPXptlYvY5uKDicTn70/e9StwUolgv86MXn+PHbk6Q3EgijxHLG
      5MRA923HcfMHI4RCamOFomHHLG/z7Le+gWYI4ltpLl2YolYtImpFnn/2Gww/9EmKK5O4Bx7h
      n/+TT5FdWyBXqvLqyy+SzJd4++0ruK0SL7zwHSLjH6cn6GkY92auvPljDIeXzXydeilNJbvJ
      t5/9NtWaTmI1zqXZFeZmr/LKi8/z0/MzbK4v4rAplLUar//oFbYqDh44Ndzwc3M4HFi1Em9P
      r/KFz/82YbfOsy++xuLMZWanpyjmMyxtFtCqOpfPv0V3yMtzzz9PkSBjUSdXVgt84bc/h0/k
      ePOnb3J+cpI3//41ErkaopLBhsX3XvwuomOAE/2RfY8XQFFVVhbmsPvCXD3/BvVSiqWNAlh1
      fvLaKyylclz4ybssLs6ysbaMqlq8e22DMxNDTc/TGwY4lEmwanfy6V//TU70RejpH6SQ3iYS
      jWKYFicmTuNy2PA5IJ7YAEUl1jeERzVQnB424tfRTBv1UgrF5ce2l5GtOsurm5jVMiurccKR
      KKZhMjxxCo9955BUhxebMJg4Nc7mxhrBrihenx+tWGBwZIxzjz9GTyTA9XiSrlDn/gdl1ohv
      ZNBKBeLxVaKxGKZhMnbfGVx2Jz67xcz8EtHuGHXDYHD8DDPvvMpf/uWXKOoW2dQmro4QqmkS
      6xuimN0i0h3DqNc/2JsqBJcX1nni3Dkyq7MoqkoikaC7uxsThdOnTjI4Oo7X7WL0xBhPnPsE
      PcEOVte3yaW2cPiDqOxRpHbrZ+fyE7ZX+ZuvfJkLs+sIvYihuvF6vZyaGMPrD6AVsvhCUWxG
      BW+gC0UYOP1hnNo2X/nyl5hN5MkVMnQEuxmbGCOfShMMBpiavkYgHMEy9s/jBtVShkxJp5DL
      0On3EE9mCAf9FLIpFHcAOxaRnn5i4U7C4SBz89fp7v5g9yDgEOYA5XJ53zHdh+GDjBEPAxn3
      3o178xzgUJZeWnl3T9f1u1KSIOO2R9yWG0BRlJY7+m58M8m4927cG4Mer9cry6El7Y00gKSt
      kQaQtDXSAJK2RhpA0tbc+SqQEJimiaLaAAshwGY7JuXMwgKzyQ0oVRbmtQt3/Emb9QoXLl1D
      q9dxYmDZvZx7/NFW5nZ4bM/Bnz/euP1zX4PhTx1dPpK7xh0PgWxOH/ffN4rD7iC5naJWKqHp
      OrVarZX5SSSHyh0bwNByfPPZl4jGYvTFulFsKk6nE5fL1cr8JJJD5Y6HQHZPkN///S/s/Gdk
      8P2/y991SY4TchVI0tZIA0jaGmkASVsjDSBpa6QBJG2NNICkrZEGkLQ1d24AIajXdUzLer8u
      SCI5btyxAcx6hcnJq/z0zXco5zf55vMvtzIvieRIOFAt0JmTQ7jdXi5dnSca9KHLWiDJMeNA
      tUB/99z/IxwOMdDfQ6lYwiZrgSTHjAPVAv3e733+/f8Pj060JCGJ5CiRq0CStkYaQNLWSANI
      2hppAElbIw0gaWukASRtjTSApK050L5Aul5DtTvBMrBQcTZ4/I5E8lHlQPsCXbk6R7laJeR3
      s5nK8Yu/9IutzE0iOXQOVAt03/gAHm+AM2fP4HK5MWUtkOSYcaBaoG9/9xVCoQDfe+5ZPP6g
      rAWSHDsOVAv0u7/7OwCMj/x2yxKStJ761hbVK1catvueeOLGw4zbDjlrbQO0ixdZ+7f/rmH7
      iZf+L/T0HGFGHx3kMqikrZEGkLQ10gCStubemgPoZVh8rXF7/yMQ6Du6fCQfee4tA5Q24Zu/
      07j9X3wZ7v+to8vnFqZSU/zRz/6oYfsfP/nHDHuGjzAjyb1lgI84mqExm51t2n4v8bPvLBCf
      zuzZFox6+PS/fuCIM7qdOzaAEBbxpUV84R6sag7NdDA80J5LaZK9KWaqpBOlPduEJY44m725
      YwNYRhWnP8z0lfPYHR5sZp0+aQDJMeOOV4FUuweznCLWP4Ki2rEJQUXWAkmOGXe+M1w1z8Xp
      JRwOBz6nwPIF6JS1QJJjxoFqgX79n/7qzn+G+luVj0RypMhVIMmHZunSNm+9sNSw/Tf+/cfw
      dDiPMKM7RxpA8qGpVepk1ssN2y3zo7HC80GQpRCStkYaQNLWSANI2ho5BzjGVOfmyH3zmw3b
      u/7gD3DEYkeY0fFDGuAYU19bI/u1rzdsD372s9IA+3AgA9QqBWq40YvbaJaDwd7uVuUlkRwJ
      d14MZ1m88cOX6H74V8gsLyIUmzSA5FB59a/+F4lrU3u2dY+c4Nf+zX/40H3esQEUVeXs2TNs
      WxagYOkGZV1Hr9Xwer132u2xxLAMCnqhYXuHowOHzXGEGd2bFFLbpBPxPdtcXt8d9XmgIZDL
      10nA5kINd6KZNjxOJ4phHKTLY8lUeorPv/T5hu1f+pUv8UTvE0eYkeSDciADBGLDBAAiD7Ym
      G4nkiJGrQJL3KaarbF7PN2wffiCCw2U7wowOH2kAyftsLOb4wZenG7Z/4X+cw+HyHGFGh480
      gOSeY3XqCpV8bs82b2cnA2d+/ltkaQDJPceb3/kG8auTe7YNnn2Qz9xkAFkLJGlrpAEkbY00
      gKStuWUOIKhqGrpex+n24nY1u3spSK1dp+qMYBQ2yFZMHn7gzKEmK5G0ml0GEAJ+9tr32Cra
      OfnAwzxy5kTjVwrB2vV5zKiDxMw0sf4RLNPENM3Dzllyj5GYmaKUTu/Z5vb7GXnokUOLfdsq
      UPfQKZzbW4QC/uavVFRGR4ZZKENXrB9FK1EVAsuyWp9lvQIzLzVuH/gEhOSemseV8997noV3
      3tizLXZi/OgMsHZ9jpnZBSJdYSyx/4nsDvYw1OHE7BCUDRs+u52K4xCKvipZePZfNW7/jb+U
      BpDcEbsM4A930x8NUjXB5dx/WwunP0gEoHPokNKTSA6XXQbo7Ayi2Oz4nE7MwxjKSCQfMW5b
      Bk1tb6FpJc6//RblmpzQSu5tbjNAb3cXuUKFBx55DN89VvknkdzKbfcBDEUhEo6iFXNA9K4k
      9VGhbtXJVrMN2ztdnbhscjPg48wuA9RrGqMTD5NcXWB8bPRu5fSRYSG7wGe/99mG7X/+S3/O
      0wNPtzxu5fwF1v/wDxu2D/zpn+A+darlcduRXQaYmp7m9P0fwznQy9JKgvtPjtyltNobq6pR
      X1lp2C50/QizubfZZQCv08HS4gL1Sp7O3rG7lZNEcmTsmgSfPPsQvdEwoyfvZ7Qvss9LBdur
      i6xuFbBMnfMXLx9imhLJ4XDbKlA6m8OmCPT6Prs7CMFGfJFUQWNu6jKryW1MWQskOWbcZoD8
      9jpvvvU26Xzj/d8BUFRGhocQwiSdL1Et5DCFQIjjsze8RHJbMVy5ZuBQTNKZPL2RzqYvdod6
      GA646Jr4JBsbmzjtdgy7/JWl5Piw6wqgAL3REOl8jeGhvn1f7PQF6Qp4AIXeXvmIVMnxY5cB
      BLCdLfHQ/RMkEut3KSWJ5Oi4bQ5Qr1ZYS6wRX16StUCSe55bfhEm+Ee//Kt3KxeJ5EgxS/ru
      K8DMzDTFYpFisbj/MqhEcsxJf/Xa7itALr1FpVIFYHB0glhX81UgieS4s8sAYxOnUd/bx97v
      u7f2gJRI9mLXEEgrZHj77beZmV9E0+v7vlhYBnrdpFopUSxrh5akRHJY7DJAT/8wo4P9lHJp
      qvV9VoCExRs/eIHplS2Wl1d49623kGtGkuPGLgP8w6svMbeygcfrw9r3SS8KZ8/ch0BlfGwU
      h9uLqevUarVDTFciaS27DHDumU8R6wrg83fQGdjnmUuKgmp34rQrvPy9F/H5A9icTlwu+Qsp
      yfFh1yTY7nThctqpGTtje/aZB3f0jnEWODvyuUNMUSI5PHYZYHMjydjpB+n0yxUgSXuwywAj
      4yfvVh4SyV1Bbo8uaWukASRtjTSApK2RBpC0NdIAkrbmQD/gFaZB3QJD1zCESsC/z80zieQj
      xp0bQFi88eoLeMeeoLSxiGkJnvrkMy1MTSI5fA4wBFI4e+YMwrKwu7z4FCjKWiDJMePOrwCK
      gupw4rJc1PQyZdVBp9OJtm8R3c8pVuv81+9ONWz/7McHeahX3pWWHB4HmgN09JzgDMDwnW2j
      XjMsnru41rD9sdGwNIDkUJGrQJK2RhpA0tZIA0jaGmkASVsjDSBpa6QBJG2NNICkrWmJAbRy
      kUKp0oquJJIjpQUGsLhw4SKTly4dvCuJ5Ig5uAGEwDINalUdTdYCSY4ZLXiekYLP58NWV3A6
      nYgPUQskkdxtDm4AReWRTzzeglQkkqNHrgJJ2ppDeaSjppv8x2cbPzj7M48O8MzJO6sglUha
      yaEYwLAsXpxs/JC9jw+HpAEkHwnkEEjS1kgDSNoaaQBJWyMNIGlrWmAAwdbGKvNL8YN3JZEc
      MQc2gDANzl+YJJ1OIVqRkURyhBzcAJaFNxBGrVYoyVogyTHjwPcBVLuToZ4wZUPF/96+QPJp
      kZLjQgtqgRRGJ063IBWJ5OiRq0CStkYaQNLWSANI2hppAElbIw0gaWukASRtjTSApK1piQGE
      sFhekbVAkuNHSwywujDFW5emW9GVRHKktKAWyGB2KY6oluW+QJJjx4FLIRTVzi//419jYWER
      z3v7AslaIMlxoUWTYIXx8fHWdCWRHCFyFUjS1kgDSNoaaQBJWyMNIGlrpAEkbY00gKStkQaQ
      tDUteEKMxdVLF3j7/KTcFkVy7GjBFUDh9P0PUq8U0Ot1dF0/eJcSyRHRkiHQ/NQkfaOncNhs
      2O2HsuO6RHIoHLwYDoFid1At5hGqiqrKaYXk+HDwYjhF5fTZB1uRi0Ry5Miva0lbIw0gaWuk
      ASRtjTSApK2RBpC0NS25E/zTf3iNH/74dXknWHLsOLgBLBObO0CnIqi0ICGJ5Cg5uAFUG7VS
      jpxp4WlBQhLJUdKCB2SoPPn0M1gomPU6tVoNS7UY73I1fInPbqFpGoZeb6rz2ixqtRqKaUKo
      yUM4VC9oGtRFc53i2dGZNNfh2tnexYATvhMNVXbLjqZpqIbaVGczbTs6s7lONdWduDY7jI01
      1OmKAppG3eForhMgNI2609lUVxMCs1ZD2Ew6uh0NdXVDR9OAfXR6vYaqWTj9SkOdN7TzntRq
      NdydQTp7B/bWdUXRNA0AdzDUWBeOvK/zhLoa6jyhLqrVKrquY3QoKEKIlg3dLcuiUqng9Xp3
      /d00TWw2266/Sd29rduLj0p+Qgg0TcPr9bbgCnAT6nu1QO/XAwmL1evzaMKFamr0DJ/C79pp
      83g8u3QrS3PouMGs0j9yEq9T3dXnDd31hTlMmxvLqDI0ehK3Y6/+TBbn58DhwdBrjIydxGVX
      btdZJvPzs9icPnS9xtj4BA6bcntcy2B2dg6nx0etVmNiYgKbuld/BtdmZvH4/GhVnVMnx1GV
      23XCqjN9bQ6/30+lqnPfqYnb3sOdw9CZnpnf0dXq3Hfy51vP3NyfZehcm93RabrB6YmxPXVm
      vcbM3AJ+v59q3eTU+Ik945p6lZn5Rfx+PzXD4uTY6J79GbrG7PwSfr8f3bCYuEl3M6V8lpXE
      On6/H9XhYrCvZ8+4xXyGeGIDv9+PzelmoDe2Z9xCLs3qWhK/34/d6aG/t3tPXT6bIrG+uaNz
      eenvie68r0L8/FzdM+MWIYCaVmZjY4Nsqfb+SQjc5shqpcRGMkm+rL9/Et7WnxBUtSIbySTF
      Sh27rXF/WqXIxkaSUrWO/aaj3K2z0MpFNpIbVGoGtgbvhhCCSrlAMrmBppsoN6V3a3/lUoHk
      RpJa3eTmo9j1TSUsyqU8yWQS3Wh8ARbColzc0dXN3bpb45aKOZLJJMYtu5Ldpiu8p7MahsUS
      FsVClmQyiWnt/ixu7s+yLIr593RNTiXTNEinNkkmk9id7sY6wyC1vaNzOHfPKG+OaxoGqa3k
      js7dXLf9ns7p3n1VuMHh3gcQgmjvAH63g83kJlbD0Zagu28Qn8vGZnKThqMyYRHrG8TjtJFM
      btG4O0Fv/yBuh8rm5nbD5VkhBH0Dg7jsKsnN7Yb9CWExMDiIw6aS3Eo1PlzLYmhoCJsKya10
      Y525o1MVSG430VmCoaFBVASb25nmcQcHUYTJZjrbWCcEg4P9KJbBdjrXRAeDA/1g1tnONNGh
      MDDQhzB1UtlCQ53d7aWnO0qlkKVcbfx7EYfHR080QimfoVJrrHN6/cSiEYq5NFqt3lDn8nXQ
      HQlTyKao6saemkM1gKLaUOolcvkCwaCfQnXvM0xR7VArks+XCAb9lPQGOpsDUytQKJQIBn1U
      6o11ejlPoVgm2Oml2kCn2p1oxRzFUoVgpwe9wZ6Oqt1FKZfd0QU8Db89VYebfCZNqVKlM+Bu
      aCjV6SGXTlGuVOnsaLwIYHN6yKbTlLUaAV/jSafd5SWbzlCp1ulwNx6LO1xespksFd3A69r7
      KgvgdHvJZnJU6yYeR+MrlMvtJZPNU6tbuG17n2AAPq+PYrmEzeWjnNlurquUcHj8FNJbTXUl
      rYTTGyC3nWyqq2hlXL5Ospvre2oO/U6wtzNCfGWFXCaHx9n4TfcFu1hZWSGbyeJ2NNZ1BMOs
      rMTJpnO4msxggqEwK/FVMulcwyEVQDgcYnllR2dv8m5EI0GW4wnS6RxNuiN2k44mut5IJ9fj
      6zu6JsTCfpYTG6Qzjb9hAaJBDytrm2Ryxaa6rg4X8fUtsrlSU13IZ2d1I0Wu0PzuTtCtkNhM
      kytqTXWVzBa5QgHT3nyxvJRKks8XEE5fU11+c51CIY/iDjTVZTYSlAp5VG/nnu2H/vOtSj7F
      fY+cY7C7E3eTM6eUS/PAx3+BvmgHzia6Yi7Dw4/9ArFwBw61sS6XyfDoE08S6fQ3PbEz6QyP
      /cKThAK+hnMAgO1UlnNPPUXA56VJWDZTWZ56+ml8Hnez85+N7Ryf/ORTeNyNx8QAm+kCzzzz
      JB538xNnK1vimafP7atL5So88+Q5PJ7munShylNPPo7Hs/fY+QbZks5T5x7bV2fzhnj07Bj+
      zlBTncPfxSMnxunYR+fqjHL6xASBYLipzhvqYXRsgkBob92hXwE8gQilrWUmL1+m2mTm5euM
      kt1Y4tLlK00nhh2hKNuJBSavXEU3G+uCkSjJ5Tkmr0xhWI11XdEYiaVZJq9MYzaZGEZjMZbn
      rjF59RpNuqOnJ8bizBSTUzNNS0P6+mLMTl9hcmq2iQp6e7uZnbrClem55rqebmamrnB1ZqGp
      rqcnwrWpy0zNLjbXxSJcu3qFa3NLTXWx7jDTV68ws7DcVBfwObk8OcnaZuM5FECH18HlyUnW
      m8x5APxuO5cnJ9lINb+Cel0qlycn2Uzn92w/dANUi2nSuSpOu0pdNP5OrBRSZAs1HDaVJuc/
      xVyKQmlnZafJ+U8uk6KkGdhUgdUkbjq1jVYzd3RNjiO1tY1uWNgUq+mJvbm5hWEJ1H02iV/f
      2MYSCopoPHYG2EimPpAuuZnaMabVeFIIkNzKIMTOEmszNrczCCGwjObPe9hKZRFCYNab6wqF
      HJawUSmXm+qKxSymsFMuNdeVSjd0zYdy5VIGUzgoFffWHfoQyNMZ5dTYALlSFY+98YnoD0aZ
      ONFPvqLvWi69lc5wNydG8hQ1o+lQKdTVzchQkVLVxN7kHk0k2s1gf5lKXdAkLN2xbvoKGlVD
      aToE6umJkS3r6JbadAjU3xujWK1TF80/gr6ebko1A1NpPAkG6O2JUtYtLNXZvL9YFK0uwN54
      8g3Q2x2hZoDiaD5U6umOoFsqqrP5ECjaM4wjmyHcYChyg0jPKM5smq5Q8yFQpHcMVzZFeD9d
      30lc2S26wnvrDv0KUMltsbKVw+lyNF7eBErZLRLbeVxOO6LJGCOfSpJMF3A67DReB4Xs9gZb
      2RIOh51mX9mprXXS+TJ2u63pN/vWxjq5YmVH10SYXF+jWNb2vTO6vpagXKliazbxANbWElS0
      KqravL+1RIKKpu3bXyKxulOWsU9/ibUElWoVdd/+EmgfIL+VpXl0S0Ft9u1xQyds+8ZdXphF
      F3ZszVYkgOWFaxg4G8b9/1YnTbMSx14KAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Auto Suff' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Chart.Auto Suff' width='192'>
      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
      Mq8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Person Type' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Across.Table.County' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.County' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.County Red' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
