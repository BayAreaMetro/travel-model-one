<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='VehicleMilesTraveled Extract' inline='true' name='VehicleMilesTraveled.tde' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='VehicleMilesTraveled Extract' name='VehicleMilesTraveled.tdeleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='VehicleMilesTraveled.tde' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='VehicleMilesTraveled.tdeleaf' name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>5</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1443</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone</remote-name>
            <remote-type>5</remote-type>
            <local-name>[walk_subzone]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>walk_subzone</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[walk_subzone_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>walk_subzone_label</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ptype]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ptype_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype_label</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1841</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_indiv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_indiv]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt_indiv</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>71273</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_joint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_joint]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt_joint</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>49439</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vmt</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>72024</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>person_trips</remote-name>
            <remote-type>5</remote-type>
            <local-name>[person_trips]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>person_trips</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3327</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle_trips</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vehicle_trips]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vehicle_trips</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34682</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>129</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]&quot;' value='Change in VMT per Capita from Baseline' />
          <alias key='&quot;[VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' value='Share of Persons' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[COUNTY]' role='dimension' type='ordinal' />
      <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[autoSuff]' role='dimension' type='ordinal' />
      <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal' />
      <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='real' name='[ptype]' role='dimension' type='ordinal' />
      <column caption='Person Type' datatype='string' name='[ptype_label]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[taz]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[walk_subzone]' role='dimension' type='ordinal' />
      <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;' value='Cannot walk to transit' />
          <alias key='&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;' value='Long walk to transit' />
          <alias key='&quot;Short-walk to transit (less than one-third of a mile)&quot;' value='Short walk to transit' />
        </aliases>
      </column>
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.501538' measure-ordering='alphabetic' measure-percentage='0.498462' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:county_name:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;CG 07 Baseline&quot;</bucket>
            </map>
            <map to='#85d4e3'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            </map>
            <map to='#85d4e3'>
              <bucket>&quot;Year 2020, No Project (v 3)&quot;</bucket>
            </map>
            <map to='#9c964a'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#9c964a'>
              <bucket>&quot;Year 2020, Scenario 1 (v 3)&quot;</bucket>
            </map>
            <map to='#cdc08c'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            </map>
            <map to='#cdc08c'>
              <bucket>&quot;Year 2020, Scenario 2 (v 3)&quot;</bucket>
            </map>
            <map to='#f4b5bd'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#f4b5bd'>
              <bucket>&quot;Year 2020, Plan Bay Area&quot;</bucket>
            </map>
            <map to='#fad77b'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No Parking Fees&quot;</bucket>
            </map>
            <map to='#fad77b'>
              <bucket>&quot;Year 2020, Scenario 3 (v 3)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CG 07 ShortTrips &quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Scenario:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Year 2020, Plan Bay Area&quot;</bucket>
            <bucket>&quot;Year 2020, No Project (v 3)&quot;</bucket>
            <bucket>&quot;Year 2020, Scenario 1 (v 3)&quot;</bucket>
            <bucket>&quot;Year 2020, Scenario 2 (v 3)&quot;</bucket>
            <bucket>&quot;Year 2020, Scenario 3 (v 3)&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across.Chart.County'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vmt]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='94' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[VehicleMilesTraveled.tde].[none:Scenario:nk]' value='25' />
            <format attr='text-format' field='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[VehicleMilesTraveled.tde].[none:Scenario:nk]' value='false' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[VehicleMilesTraveled.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14'>Scenario:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14'>&lt;[VehicleMilesTraveled.tde].[none:Scenario:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14'>VMT per Capita:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14'>&lt;[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([VehicleMilesTraveled.tde].[none:county_name:nk] / [VehicleMilesTraveled.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.County Red'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Change in Per Capita Vehicle Miles Traveled by County of Residence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:9]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='ColumnInPane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='real' name='[vmt]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' scope='cols' value='Change in VMT per Capita' />
            <format attr='subtitle' class='0' field='[VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' field-type='quantitative' max='0.10000000000000001' min='-0.10000000000000001' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[VehicleMilesTraveled.tde].[none:Scenario:nk]' value='27' />
            <format attr='text-format' field='[VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[VehicleMilesTraveled.tde].[none:Scenario:nk]' value='508' />
            <format attr='height-header' value='44' />
            <format attr='width' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='120' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[VehicleMilesTraveled.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14'>Scenario:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14'>&lt;[VehicleMilesTraveled.tde].[none:Scenario:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14'>Change in VMT per Capita:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14'>&lt;[VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([VehicleMilesTraveled.tde].[none:county_name:nk] / [VehicleMilesTraveled.tde].[none:Scenario:nk])</rows>
        <cols>[VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:9]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.County'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[pcdf:usr:Calculation_9280922093514231:qk:7]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vmt]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[VehicleMilesTraveled.tde].[none:Scenario:nk]' value='48' />
            <format attr='width' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='81' />
            <format attr='text-format' field='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:2]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[VehicleMilesTraveled.tde].[pcdf:usr:Calculation_9280922093514231:qk:7]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[VehicleMilesTraveled.tde].[none:Scenario:nk]' value='208' />
            <format attr='height' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='48' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[VehicleMilesTraveled.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([VehicleMilesTraveled.tde].[:Measure Names] / [VehicleMilesTraveled.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Indiv.Chart.Auto Suff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence and Household Automobile Sufficiency for &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal' />
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vmt]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='76' />
            <format attr='height' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='126' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='30' />
            <format attr='text-format' field='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='44' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='-90' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[VehicleMilesTraveled.tde].[none:county_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[VehicleMilesTraveled.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;County of Residence:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[VehicleMilesTraveled.tde].[none:county_name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2880'>&#10;VMT per Capita:&#9;</run>
                <run bold='true' fontsize='14' indent='2880'>&lt;[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([VehicleMilesTraveled.tde].[none:autoSuff_label:nk] / [VehicleMilesTraveled.tde].[none:county_name:nk])</cols>
        <pages>
          <column>[VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Chart.County, Transit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence and Household Proximity to Transit for &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[walk_subzone_label]' derivation='None' name='[none:walk_subzone_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vmt]' role='measure' type='quantitative' />
            <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;' value='Cannot walk to transit' />
                <alias key='&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;' value='Long walk to transit' />
                <alias key='&quot;Short-walk to transit (less than one-third of a mile)&quot;' value='Short walk to transit' />
              </aliases>
            </column>
          </datasource-dependencies>
          <manual-sort column='[VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Short-walk to transit (less than one-third of a mile)&quot;</bucket>
              <bucket>&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;</bucket>
              <bucket>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='75' />
            <format attr='height' field='[VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='176' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='39' />
            <format attr='text-format' field='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[VehicleMilesTraveled.tde].[none:county_name:nk]' />
              <lod column='[VehicleMilesTraveled.tde].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14'>Scenario:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14'>&lt;[VehicleMilesTraveled.tde].[none:Scenario:nk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='2880'>County of Residence:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='2880'>&lt;[VehicleMilesTraveled.tde].[none:county_name:nk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='2880'>Number of Persons:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='2880'>&lt;[VehicleMilesTraveled.tde].[sum:freq:qk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='2880'>Average VMT:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='2880'>&lt;[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]</rows>
        <cols>([VehicleMilesTraveled.tde].[none:county_name:nk] / [VehicleMilesTraveled.tde].[none:walk_subzone_label:nk])</cols>
        <pages>
          <column>[VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Auto Suff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence and Household Automobile Sufficiency for &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal' />
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vmt]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[VehicleMilesTraveled.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[VehicleMilesTraveled.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='35' />
            <format attr='text-format' field='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[VehicleMilesTraveled.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='83' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='164' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='width' field='[VehicleMilesTraveled.tde].[:Measure Names]' value='136' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[VehicleMilesTraveled.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([VehicleMilesTraveled.tde].[:Measure Names] / [VehicleMilesTraveled.tde].[none:autoSuff_label:nk])</rows>
        <cols total='true'>[VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.County, Transit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by County of Residence and Household Proximity to Transit for &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[walk_subzone_label]' derivation='None' name='[none:walk_subzone_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vmt]' role='measure' type='quantitative' />
            <column caption='Proximity of Household to Transit Service' datatype='string' name='[walk_subzone_label]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;' value='Cannot walk to transit' />
                <alias key='&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;' value='Long walk to transit' />
                <alias key='&quot;Short-walk to transit (less than one-third of a mile)&quot;' value='Short walk to transit' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[VehicleMilesTraveled.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[VehicleMilesTraveled.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[VehicleMilesTraveled.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]&quot;</bucket>
              <bucket>&quot;[VehicleMilesTraveled.tde].[pcto:sum:freq:qk:2]&quot;</bucket>
              <bucket>&quot;[VehicleMilesTraveled.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[VehicleMilesTraveled.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[VehicleMilesTraveled.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Short-walk to transit (less than one-third of a mile)&quot;</bucket>
              <bucket>&quot;Long-walk to transit (between one-third and two-thirds of a mile)&quot;</bucket>
              <bucket>&quot;Cannot walk to transit (more than two-thirds of a mile away)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[VehicleMilesTraveled.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='57' />
            <format attr='text-format' field='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[VehicleMilesTraveled.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='95' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='192' />
            <format attr='height' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='52' />
            <format attr='width' field='[VehicleMilesTraveled.tde].[:Measure Names]' value='136' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:county_name:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[VehicleMilesTraveled.tde].[Multiple Values]' />
              <lod column='[VehicleMilesTraveled.tde].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([VehicleMilesTraveled.tde].[:Measure Names] / [VehicleMilesTraveled.tde].[none:walk_subzone_label:nk])</rows>
        <cols total='true'>[VehicleMilesTraveled.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Person Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Per Capita Vehicle Miles Traveled by Person Type and Household Automobile Sufficiency for &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled Extract' name='VehicleMilesTraveled.tde' />
          </datasources>
          <datasource-dependencies datasource='VehicleMilesTraveled.tde'>
            <column caption='VMT per Capita' datatype='real' name='[Calculation_9280922093514231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Auto Sufficiency' datatype='string' name='[autoSuff_label]' role='dimension' type='nominal' />
            <column caption='Number of Persons' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[autoSuff_label]' derivation='None' name='[none:autoSuff_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[ptype_label]' derivation='None' name='[none:ptype_label:nk]' pivot='key' type='nominal' />
            <column caption='Person Type' datatype='string' name='[ptype_label]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_9280922093514231]' derivation='User' name='[usr:Calculation_9280922093514231:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vmt]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero automobiles&quot;</bucket>
              <bucket>&quot;Automobiles &lt; workers&quot;</bucket>
              <bucket>&quot;Automobiles &gt;= workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[VehicleMilesTraveled.tde].[none:ptype_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Full-time worker&quot;</bucket>
              <bucket>&quot;Part-time worker&quot;</bucket>
              <bucket>&quot;College student&quot;</bucket>
              <bucket>&quot;Non-working adult&quot;</bucket>
              <bucket>&quot;Retired&quot;</bucket>
              <bucket>&quot;Driving-age student&quot;</bucket>
              <bucket>&quot;Non-driving-age student&quot;</bucket>
              <bucket>&quot;Child too young for school&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[VehicleMilesTraveled.tde].[none:ptype_label:nk]' value='91' />
            <format attr='height' field='[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='41' />
            <format attr='text-format' field='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='160' />
            <format attr='height' field='[VehicleMilesTraveled.tde].[none:ptype_label:nk]' value='88' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[VehicleMilesTraveled.tde].[none:ptype_label:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[VehicleMilesTraveled.tde].[usr:Calculation_9280922093514231:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</rows>
        <cols total='true'>[VehicleMilesTraveled.tde].[none:ptype_label:nk]</cols>
        <pages>
          <column>[VehicleMilesTraveled.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Indiv.Table.County, Transit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='94'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[VehicleMilesTraveled.tde].[:Measure Names]</field>
            <field>[VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:county_name:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:src:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{548563E3-A986-4D83-9061-2407BEB39EC2}' />
    </window>
    <window class='worksheet' name='Indiv.Chart.County, Transit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[VehicleMilesTraveled.tde].[none:county_name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='68'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;CG 07 Baseline&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[VehicleMilesTraveled.tde].[:Measure Names]</field>
            <field>[VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:county_name:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:src:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:walk_subzone_label:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{DEE0B36E-A04D-4A70-9720-D48AA2B35FC0}' />
    </window>
    <window class='worksheet' name='Indiv.Table.Auto Suff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='90'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[VehicleMilesTraveled.tde].[:Measure Names]</field>
            <field>[VehicleMilesTraveled.tde].[none:COUNTY:ok]</field>
            <field>[VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:county_name:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{ED7402DC-230E-449C-96AB-B22D2E8EFB58}' />
    </window>
    <window class='worksheet' name='Indiv.Chart.Auto Suff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[VehicleMilesTraveled.tde].[none:county_name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='127'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[VehicleMilesTraveled.tde].[:Measure Names]</field>
            <field>[VehicleMilesTraveled.tde].[none:COUNTY:ok]</field>
            <field>[VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{7ECBB338-6682-4B8E-9EB7-05F5CC6DF34E}' />
    </window>
    <window class='worksheet' name='Indiv.Table.Person Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='76'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:autoSuff_label:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:ptype_label:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{43798948-EAEF-43BD-A85C-4610D0E14F8C}' />
    </window>
    <window class='worksheet' name='Across.Table.County' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='98'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[VehicleMilesTraveled.tde].[:Measure Names]</field>
            <field>[VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:county_name:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{2E6D3F38-FE07-4B61-B368-A6591401CD1B}' />
    </window>
    <window class='worksheet' name='Across.Chart.County' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[VehicleMilesTraveled.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='89'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[VehicleMilesTraveled.tde].[:Measure Names]</field>
            <field>[VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{599975A7-2991-486D-A553-6FCC9BCF5D3D}' />
    </window>
    <window class='worksheet' maximized='true' name='Across.Chart.County Red' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[VehicleMilesTraveled.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='80'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[VehicleMilesTraveled.tde].[:Measure Names]</field>
            <field>[VehicleMilesTraveled.tde].[none:Scenario:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:county_name:nk]</field>
            <field>[VehicleMilesTraveled.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{CBD75048-3CBA-49D8-B85D-D5897299E7C4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Across.Chart.County' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.County Red' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dWZBk133n9++9N/e9cqnK2vfqHd1AN7qBXtALQIqCxqJGipFETow9VDhG
      HjvsB9sRDj84gq/2w4THL+MH0TI1Go2l4XBixA0isTZ6qd6ruvY9qzKzqnLf15v3Xj80ABJs
      kICEXliV5/PUUZ1ZefJm/fKee8753yMZhmEgCG1Kft4NEITnSQRAaGsiAEJbEwEQ2poIgNDW
      RACEtiYCILQ1EQChrYkACG1NBEBoayIAQlsTARDamgiA0NZEAIS2JgIgtDURAKGtmT7+h6qq
      1Gq159kWQXjmJFERJrSzx7tAhkF8Y5nF9Ri/MhmtOtMP7nHnzn1Kjdbnvkg1nyKVr3y5ln5E
      V2vMTE9TrKkYeovl+YfEkrmPG8/W2iLpQonFh1PcuXOPYl1Fa5S5f+8ui2tb/Lq8l/Np0uk0
      9c9/S8I+oXz729/+9i/+oFHZ4c/+/D+RiS7j6B5jd30R2e4iuR1nezeBzx9Aqaf57vd/Rk9X
      JzYLbER2UGiwHNnFpahEYts0dAWjlmVlK4WlmWW7DOnoKti8aOUMy1tJgh1uFmcfYlg9OG2W
      z2+toXPtgw8YP3qMO7fuUE5G8Q0eIj53G0fnEHohylq6xXZkneMnX2J++j4DowegEGWz4cWS
      Wcfwd7M5Pw02L4nIEmXNjNIssBRJUEuuUDEHoVEmsrmJw9PBbmSZomrC67I/pY9AeJ5Mv/wD
      sy3ASI+dB6tJXkiscu39D7D3bKJG1zCZTSj+bg44IZ+KM70SwFqPM1UIsLN6n5uT9zl35TLr
      iQKtuoS1laS7b4h6h4213QVuXJvk8JmLmPMxgn0DpDemiZZkCten+NM//RaWz7skNzRU2YbP
      7eb1y+d4//2rHLJpxKw+FDQqxQJ2ZxdGLkElH8MSGsNlVWgAkeU57K0KrnAEWzDM1Q9+Rj2d
      p/9wg8TaLA6bmbpkI1CaZ6VQomtwgJsfvs1OooxkPOD3v/FNnI8dLWGve+xPrp6Ps5WXOTIU
      ZGF2jngyS1NVcfrCHBztQf+oCzH8wqv8d9/6Y6wmmWMvvMDq4gzVRg21BQeOn8Ih68iShK61
      aKoaZoePg+NDZLNpZFlC01pomoGua0iSjPRFWiuZsBpN8qUS775/nQ67QqIq4ZYqbOdrOD1e
      KqUMDUkmEUsyOj74ye8dHD/M6UNh5pdjrK5voOs6R0++TCG1ja+zl+PHj9PldwFgsXkZ6A0j
      STA8cZjjR49gVZ7QERd+ozx+EWwYbG+tkqsrjA0EWVndwtnRgaIZOKwyVl8It0ljM5FnsDdM
      Mb2DZgtQz2yRqzTx+XxYnB6qhQI+p0w0XWeoy0XFsJLfieAJD+OkwlaqysGxflYXFwn0jRL0
      Or5Qg7VmlbmFZQbGDuG1m1hbXsCwdTA22IskGUTXV7AH+jDpVRxuPxaTjNYo83BuCZPDx4GB
      IAtr23SFg7RKWXB14jOrbKWrDIRc1Fug6+DxuqjVVSqZHWR3Fz0h71M4/MLzJkaBhLYmJsKE
      tiYCILQ1EQChre25gb1aKcvc4hr9o4cIOCXm5uaxdfQwMdwLeouluRkcoT5KO1ukCxWOvfwK
      fofCyvwsNdlFf4cVk78H9y+NuRqaSiqdIRZZp9RoMXboOL0hF6lkgVCn/zm9W+Fp21sBMHRu
      3b7PmfMXuH9/ii2txthLrxKfv0euK4y5tElZ8pJcXODcxbO8/eOfYreY0Cu7zMWqHAiUWdht
      UDZHOTh+CC0fpag78Nt0dnbWWYjpfOPN09xdiuFTaty5v4a/I0ji3jpNs5P+kIO1aJoXTpzA
      YRHjovvB3uoCGTq6YsNutfLS8aOUWwZOahTrBrqmUq9WMFudmA2D3O4Gzt4J7GYZ3eKjz60y
      ux5HMlSCPSOszF5lI1ZDzq5za3oJf/8Y/eHQJy9VSkWpSGY219eJ7ZZwqHnuTs8Rj8Uo1tTn
      eBCEJ2lvBUBS8Fg0VtbWmbz3kB6fk6VYBqVVoVBVcXcEySU2aJispHbSDA/2AqBVs2TqZg4N
      hsiWNUKhIIpsoqUWyVY0nC43XYEOGs1fWA0rm+nqDKHIUC0XyJRruN0+eoN2skWxana/2HPz
      ALrWJJFI4wt2YjPLZFJJMNkJdHiRJIN8Jo3Z6UXWVSw2B4r8aC64mEtTbcl0uGzIVjvNWhW0
      JnXdhN0sY3PYyeUKdPjc1BstLDJosolWs8CND6Z58dWT+JwWUrkyXaEgsvyF5q6F33B7LgDP
      nk612sDhEIvh9qNPAtBqtVBV0bcV2ssno0CyLGMy7a1BIUH4skQXSGhrj40C6ZrKez/+j3zv
      B2/T0H5FNhoF/v1/+E8Uc0n+7d/8Z5ot/aMnN1hc2Xia7SWfjHLjxk3W4ynqpQy3Jm9yf2YZ
      AzC0Jvdv32BpY4u5B/f46U9+QqrUQC0lefu9q1y/dR9V/9V5T24tE9tJioqwNvJYn6dZS3F7
      apOh/gDrm5tMXXuPg69cIr++QKJQ582v/y6eVpWHd2/R2+Xh9oM53njlCG/97Crjoz18/2fz
      /Mtvnuf61CZf/0dv8M6P/pbQxGkunjr05VtraNyfWeHipdeYmZljdzXLi2dfY3d1lnxVQ8pH
      kDwDpLbWeeXCGSLx9/A6LGiZAo6uUbyFVRLZNJsLi3i6eqin4ph83XSYG2xnqjikErrLILsb
      Zyed4fCxE6S2VpAcQY4fHd9jY8bCF/HYZ6rIdk6eOkw6tcvWxhq7qRQ3b99jZSWOS68Qz5cB
      6O7t4t69ZXq6O0jENsgkY8QLTcbGRnnnnffxmJq88+Mf4hw+yerkVZ5IRbBhICkWFMXEwEAv
      dQMUtURsN0Ot0UBtNJAVM7JukImvERo5jEV5NFy5vviQWCZPJZsFi43llSXSySSpZIq796dR
      KzniyQKF9Dax7TQTByeYe3CN1a0Mu7ENcVbYpx4LgGFozD54QLkpoVWyZPIVDEPHbLXjclo/
      eZwtEKZWKRFwWEjGY1RVDV02sbu8QCDoYyGyzfjhI0y9/0NqDj+2J9FaSSHkkrgxOcnDpU3G
      wgFuTS9Rr9do6QbeUJjd9WkaFiepRI6B3s5PnqooChaTzM5mlEKtgdaoIZkdNJt1OoN+WpqO
      x+189FiTBbvNgt3VgcthRjHbESsf9qfPrAjTdA3DkFAUCU3TkaRH36KSBEgyMqDp+s9/iSSh
      6zqSLGPoOrIso+sGiiKjaxqSLCPLT6YDYRgGmtZCVkxIgK5pGJKEIitIkoGmaUiSAhhIkoQk
      SRiGQavVQpLkn78nWQZD/4X3Y6DI0id3wvj4ecZHj1GeUPuF3yxiFEhoa+JrTWhrIgBCWxMB
      ENraHlv7YLAbWWY1lsbXNcBgh8z0UgTJ7OSVl48jtWrcnLyNM9CDuVFidT3Cma/8Dl1Og5vX
      76DKVoYDDuxDRwjZP519Ta2wvBajktkhnqtw6sx5URHWBvZWAAydufUdXr98keWVZR7MbHP2
      0mVSWyuU6jp6ZhNX1wHK2yu8fP4kkZ0sIbcVaik2EwWOj/eyk0yyuRplbOQgrfwWFc2G19Jg
      J5smXXbwjTdP01yKYa/v8B9/tE5fVw9Tt28iu7yEO6zspCu89MpZ/M4vcCtH4Tfe3uoCGQay
      rIAETqcTTYJWLc/S0hr5cg1d00CSkDBIb63RM3EMRZJoqHDqpaPEIivkSg1OnX+DQvIBNdVH
      n73KSlLl1QvnP1UR1qxVGT96nHopj8nuZ9RvI1msU8ynKYuKsH1jbwVAVhgIObh67TrRZJEj
      w73cvj+HakjYLAq+zj7SmzPgClAsNegPdwBgtlnZWFnB4vLj87ixWRRsthCou6xloT/owmax
      02xUQJKxms3IZit2qwWr1UIyts5ysojPZsLtcsGvvm+2sMeIeYDPVefWzUXOvHrieTdEeApE
      AIS2JrZIEtqaOAMIbW1vXQQLwhP22DxAq1nm333nO+QNF//lP/+v6HB8+iGl9CbzMZUzJ8Y+
      +ZneLPNXf/EXbOfr/NEf/x6T96L80dcvPoXmGqwvTLGdqWD1dDLUIbGwmUTTJM5deBWlWeSD
      63ewd3TikVQezsxx6ff+EL+6yw9uLuMxK5y9chmX+bNzH5mdRPON0BvuxLa3ZkiEf6DHPma9
      VSeRKuIJ2dhaneHPfvwTDp99nfTcXdJlldFBL/O7ZuJz77Kckfgf/ps/IbN0D9+hy7w56sKQ
      VQrFMn/9nf+LWM3LyVErMzsKYXOWaF7hT//lf/0P32pI14jslrhy6QLRWJT5tTUuXLxMPhmj
      0dRpJmIEBo5SiS8x9uoJNlNlutxWmikVxepCUfNktte4sbaNxW4hvxWj58ARTPU0xaqKSVKh
      uEZk7gHZap3xiQPkEttIZifnz5/BJG4FtO88XhPcbPLSpa/S64bVjThWq5mNyCaa7ObF8W58
      vf0cOTSOrsnk4lHKqoYiK6jNJo1qmXqzBahohkJqfZ18o8FXfusrGIZEdneNUv1LtFaSHm15
      JEGj0QADGtU8D+7eYydf+WiNv4EBJDbXGThwBPmjWgaXx0dvyE4y18BmNZNOZQgEfWxtRliL
      RJGMFqVKHbVZRzUsnDt7mt2teVLZGo1qCVX7Eu0WfmM9FgCz00c+Ms1mxcLEQBBDttITDtHd
      240/1EkwGCazvU6tqdLbP4giQ/eBk7B9j+/93XUsNhfdXX7UZov+0SE6/GGcVhOa2qRnYAST
      pH9WO74YSebAYJCr165TaZl48cg496bmkOxegi4rvq4BSruL2EO9qLqJvo+2NZItduq5HXaK
      Bi65hSbJ+Hw+JFmiu6eXQ+MjaLKVocF+fD4fgUAHNquV3sGDdAftuP2dYo+wfUqMAgltTYwC
      CW1NBEBoayIAQlsTARDa2t6a7jEM5u7fJFfTMcwehjtgNVmiXqlz8fUrmBpZ3vnwNla3n06H
      icnJW/z2N/+EbmuNH71zCxno7bDjO3qWAbeJj6//JUCt57g9tYa1VWA+luWNr/wW3QEn6VSR
      YOjRsupHt38xkGXpk1vFCHvbHguARqKkceXSBdLpJLOzc1y8eJF8JoWuaeST23SPvkQltsjw
      i0fYyjXp9tpAVanlM3i6etC1Jtff/SmrwQBaPoVqmFCo0JAVClU7f/zbL6M6YyiZZb77QYwe
      r5/8zjaugA+r3KLUsnLx8mX8LlERth/srS6QJCEbOrqus7OziwkoV4rcu3GNzXQZs8WCrrXQ
      ZYlEJMLIgUNIQK2Q5diF32LMq7G2W+fC619DVrexuPoY77JSkkNcvnSOvq7gz19LsfDKq2ex
      mSDYPcSh/hCWjjA2Lc9O7onc6FH4DbDHAqDwwsEBbtycxOoJceqlY8zNLGAL9NIfcOIND6EV
      IgT6RlDsHnoDLgAcgR7K8UV2mi5OHZ/AaZbo6TlMwNMgjZ8TY2GsFg8uh4JsstIV9GP3BPA5
      7YS7Q+QSW+zWFUbDHTj9vfT6Xc/5QAhPipgI+1xNlpfiTBwYft4NEZ4CEQChrYmKMKGtiTOA
      0NY+8yJYa9YplKoYukaxVP7Cv6xYLPK082ToLdKpFM2WjmHo5DIpStWP11gbFPNZao0m2VSS
      3d3Eo8dpTRKJXbL5X9++ZqNGrVaj9SUWrAp7y2cGYO7Gj/hX3/kerVqB7/3gLSrFPKlsgWq5
      SCqVpFAokC2UURtVEsk0uqGTTib5q7/+a9RGjZ3dJL9qe7EvxTC4P3mddDbLjcl7rM7cYyuZ
      5d7Na5SaOvXCLvdmFpm8fY96vcbVt39KsdGikdnk1vwWc3cmydRbpBI7VOpN8pkkxUqNZq1M
      Mp0jMjvJZrJIuVwmlUrRbGkUc2mKFdE13K8emwgzdJWHaxnGvBLbxSboTX7wvb9icafEy2Nh
      Fney1JpgtdgYCcrMLMd4+dWzLK5skimUufvej/nZ5DS/+63/kReHOp5saw2NQlPm5IED9PWV
      uHvnLhfOHWPTJIOuUcqm8YdHqcYW8XjNdAweIeC00KhAMZdB02uUt1dJFFUSD6YoxHYZOf4i
      pZ014NHO8I7SPCsPipjdbuxWM+lEFkmWefN3/wtsoiZg33nsDFDLxZlfWmMzEuHe9DJGq0Gm
      UKJSLtFsmXnt8muMHniBng6FVLbMkWNHUbQafWOHcdtNJDMZdLVOqfJlSr9+BUlGMVQaTZW5
      2QXsikS+2iQVXSGaqWC121EbVVRJIrEZZ2RijI8XLIwcfIEzh7pYjeaoVErU6w0Ov3CMnWiE
      pq7Q29uDzfLo+8Bi93HihcM0Kjkc3hDhUBBZrHzYlx67CM5tr5PRPQwGzMwsbKBYTDSyCQqa
      hf5gB96uILlCHaOex+91Mb0U57Xzp7j14XUkt58Bj8RqPMvEC6cZCnufeIMr+SSzSxv0Dh+g
      y2Nibn4BXXFw5MhBLLLBwuw0jtAQNqOCN9iL3aLQqmS5+WABi9XJ+ECI5WgSj9eDVM0hucP4
      THW20jWGwh5qKmiaRGfYT6FQoZiMIXvCTAz3IjKw/4hRIKGt7a2lEILwhIkACG1NBEBoa3su
      AHqrzuL8HOV6C0Nvsb48z0668NH/GsQjq2RLZVYX5piaekj5oy3ed6PrROJJqoUc9dbjlz2G
      oVMuFZh/OMXU1BSJXAnQyGbzz+7NCc/c3gqAoXPzw2sEw93cujnJ7N1JTL4wkdnb5Goa1UyU
      zUydh/en6B0eZntzDR3Qyzs8WMuRXX/I9IMpHswvki03SO9sshFPkk2nWJ2/xX/+6SR9PSHy
      NRWn0mJjM0q92SS2scZKJE61mGFmfpmWLsYN9os9VxHWkKwE/X4uvXaGD69e44BbIen0o6BR
      KeRxerqQihmalSS2rgncNhMYQWzV26xUDSa6nBR0mfu33sPQnHjNVaYLVfrGhgn5FWw2GxaL
      hfL2CjMJFYeqUi3V6Q/beedhhqZmIdw/+GjvMWHP21tnAEnBrDco1+p88OFNPFaZdF3BoReJ
      Zas43B5qlTwNSSYRTTA6PvSoIiy9CcEDvHYkzHqizujoGCZZBUnBJEvIdj8Hhvswm37hcCgW
      xsdGMSsgywpmk4I32M+hfiexVOm5HQLhydpz8wBao8L07ALDB47ic5hYnp/FsAeYGOlDAjZX
      F3CEBjFrFRzeIFbTo/uFxiPLpOsKI51eFE+Qcj6FUS9R0Oz4nWY6An7W1yOMDPWRK9VwmaBp
      stEopbl97QGjx08w1OViYW2bo0cPY1bEtNh+sOcC8OxppFMFgiGxV/B+9EkADMN46kuZBeE3
      zScXwa1W69EtxwWhjYgukNDWHhsFMgyD6Noc7129SbX52btCZNOJX7lhxPbGAu+8f/2zn2vo
      JJLJL9XgRiXPvTt3SOWrtJo1Zh7cZXVzBwMwDI3luWliyQxzD+7x4dVr5KpNtFqeGzduMDW3
      jP5r8p5PxdlNJPlo7kxoA8q3v/3tb//iDxqFGP/f316ny6mSUh1Ud1dYjRewG1Uezi1QrDT4
      67/8M1yBMAtzS8hSgzv3F+jt70OuJ/l//uZthjpgq2qnlV5jYStDh83g6rVJLHKLf/Pdv+Hg
      SD+Tt+8TCPdiM/89qkwMnWsfXufEqZeZmZ4is73JwOGXyGzMYvH3oeU3iVcspDbXeOmVl1ma
      m2NkYgKjEGdHD+EobKF5A6w8nKIp29henyffkDCqGRbW49Qzm1QVH81imqXVVexuH7HVBbI1
      A7/PLZZD70OPTYTVsrt0HTjOhdeOUMrG+avvL9BhrpEOeMnWzBQXNnG73dTTG0QyNozqFJM3
      bxMYfYED8i5d4y/w6pUXqVXSfOcvpul2q0RX3ExNT1NofBWP201sbY77N65j+Ab56qmRL95a
      Q0dXbDhsNl4+eYKbk5O45TrVloKht6hXylisXbQMg3wigqN7AodZoQ6sLz7ETY2jnXEsPj93
      797AKJQIDGlMbS3hdTuptMBXWaFSrDI4PsK9m++RyqpYTGv09v4+jr01bSh8AY99pK6uYRI/
      /Pf8xcp1Bo+/gl7Pk25IdHabcHePsrQawd6QyBWr9A8dIjZ5k1qzRUtt4RgYIvO9P+cvt27T
      c/wCNIskCxITR4YJBQM0mxpKq8bCwjzFmkqrpf79WispuE0tIltR1iNRuj121naLmLUKuUqD
      Xl+A/MIWhmIhuZ1iePj4J08Nhnvpl1OsrcXQbDa0Vov+4THS+Qz+YJiuoJdcIU8LMFtdhIId
      pHatdPd24rTIWEQ55L70mRfBlUKGbLlJT0+YcjZFzTDjs8uomGk0mpiMBqqhYLW7oVmkVG3i
      9XfispupFnOkCjX6+rqp5NJUNIWuDiexeIJQdzflbBqTxUKlVsft8eN12/9eDdZbTWLxHYLh
      HuwWheROHMPsoivYgSQZZJK7WFx+FKOJxebCpEjoap2t+A6KxUF3wM12Mo/H60KvV8DmwaFo
      ZEoNAh4bqgaGAXa7jabaolHOI9m9dLgdT+ygC785xCiQ0Nb21logQXjCRACEtiYCILS1PTaw
      Z7A2/4CdbBWLO8SQT2IxmqLVgvMXziI3i3xw4zZ2XydeucXU9AxXfv+PCduavPPBbQwU+v0O
      PAdP0eP89LBOq1Fgei6CXs2wtpvnwsXX6Q25SCULhDrFQrj9am8FQNfYTJS5cukCsXiMhdVV
      Lly8TCG1TUPVaSRjBAeOUYkvMfrqcTZTFbrcVmjWSKcy9A30UamUuP+znzDQ208rt01dt2BX
      ahQaDXJVB9948zTqUgxzYZ2//HCT3kAnhXfjWDt8eG0SubrEq+cv4HeKLZL2g73VBZKkR7Ox
      EtSqNTCgXs1z7/ZtdnJlZPnR2n8DiWRkncEDh5EliVqlwskLl3BpeaLpOueufA21vIpk6WY0
      IJGoO7l46QL94dAnL6Xr8OLpM8h6E2+oj0M9HahmJ1o5Raog7hW6X+yxAMgcHApx9dp1aoaF
      l45NcH9qDsXZQdBjxxcepJxYxNHZi4qFvtCjO9PZvQESa/MUDRcTI304zDJ+/wgOc55YzcHB
      gQBWiwuToiEpZnweNxanB7fNSkeHl1Rsg0hBpdfvxNXRRYdTlEPuF2Ie4HM1mJmOcOz4gefd
      EOEpEAEQ2prYIkloa+IMILS1x4dBDQNd1zGQkBX5kzXwuq4jSRKS9HxXxRuGga5pyIryUbs0
      JEl+NAKEga7pIMsYmoYBKB89TtM+ftyvfg+GrmMAkiTznN+m8Iw8FgC1keff/Ov/m6ps45//
      i/+WgENClk384D98l7Nv/lN8NjCZTOi6hmFImEwKqqpiMpmRn/YuEobB3L0blFQZVXIw3AGR
      bI1aqcKFK1cw1TO8e/0+FpeXbreVmzcn+do3vkVHfYvv31jHb9I485Wv4pJ0ZJMJQ9NAVpAl
      A00ziDz8EC14mIFwELOso5hM6Frr0f2DlL01YCZ8MZ8xESahtZooNgex5bt8991ruDtH6bTD
      0p13efuD61z66ptcv/o+qmTlDy4d461rU4THTvLPfu/K0/3mNDSSZZ0rl86RyaSYmZnltdde
      I5dOoGka5dQO4ZHjVGKLDIyOEEmfIOyx0qg/OoPVGw0KsSXuRnOoWp3MRpSxF0+h5mI0VA1k
      MJXmWXlQoG5I9Pb2kkslkRQrb3z1dSwiA/vOYx9pq1pk/PQbHO93ce/eDC9e+h3szQwNDaqN
      Jg4LZDIFOkeOcrDPz8ZqlK/+wR9STW7y1C8mJAnZ0NB0jVhsG5ME5UqJ6du32EqXMVut6JqK
      LkskIpsMHzz4qS2SXj7YyVaqgcUsUSlVmDg4TmR9lVQ2j9Nue9R9Aiz2Di6cP0MpG6OumrCY
      ZMTtQPenx84AVm83LvUOcSnEP/mjs7z/1k+YOHMZZyuDSZFJDR9ieLCHcAusWpCRoT7eeusd
      zr3xtae/j5akcPzQMJM3b9HVP8qBkT6m5xaxBnoZCLpwmhwYsbsEB8YwSVVCfhcAit1LNbHA
      htnCaJ+XSEJjcHAEc7PAoSPH8Co14pkahwf6qbWg1ZKw2+yMH3yRXCKG4g5jFRVh+5IYBRLa
      mujVCm1NBEBoayIAQlvbW/UAgK6ppFJpfIFOLCaJTCqJ2eHF67IDBvlsGrPDQzWfpdEyCHV1
      YTUrFHNpVMmK26ogWe2Yf+mK3TAMmo06uWyGlg5efwi3w0y10sDh/PvduULYO/bWRbBhcPfG
      B3i7+ojtZOn1QMMeIBvd4KXzVzDXEkzObmIYOodHB7n6/vtc+fof4pdy/OT6Mh65htVsxjow
      wWg4hNEoUTfM2E1QysW4PZfgxEiA6Y0E506fQtdbtFQDqwlUyYzPaSaVKxPu6kQRW8fvC3vr
      DGBoFFWFU2Nj9PaUuX37DucPHWPDaIGuUcql6egaphpbxOEE38Bh/E4zaG6k8i5pk4NBH0S3
      YiQjS+h1Davcolir4ukMohsy4Z4eYiWdZmKZq5ECHSYzpUyezk43pUqJqmbh4uuvE3SJmoD9
      YG9dA0gyJkOl3mwy/XAOh0kiX1PJb68TzVawOhw0GxVUSSKxFWd0YuzRFknZHQLjL3Ny0M1a
      os4LL55EMYooZg9+p0LLEuDFFw7hcf3Cza8UC8eOHcOigMPtI+h14Az00OeF7XT5uR0C4cna
      W10goFpIM7u4Rt/oQTrdJubnF9BMTo4cOoBZ1lmam8ERGsRqVPEEurFbFDB0lucfUmyaGOz0
      Ygv1kk/E0GpFCpqdoMtCZ0+YpcVVDo0PkciV8VoM6mYn1WyC+zenGDp6lMEuF0sbuxw7fhyH
      uFfivrDnAvDstYhF0/T1h593Q4SnQARAaGuiIkxoa+IMILS1x0aBNLXKRiROs5JjJ1N8Hm36
      tXS1ztzMQ0o1FUNvsbIwQzyV/+h/DaLry6SLJZZmprl37wGluorWqDD14D5L69FfuxNmJZ8m
      nUmLLZLayGMBaNZS/J//+79mY3WOGzMbRNcWWY8l2I5uMDszR6XRIraxxOrW7tNf///LDJ0b
      H35Iz8AgtyYnmblzE3togOj8HbI1jWpmi1hBY/b+FMMHD5La3gJJQi1sU1ICNKi6jKwAAAzk
      SURBVHfWSFQbzE/fJ5WvsLE8SyyRo5xLMLu4TnxthnRZo5BOMDc/T6WhEl1bIpbMPet3Kjwj
      nzkR1t/TwU/fvUnX4bO8995V1ncNJvokZFsHM+sxWqkNVhJl/tf/5X/G/iyn0gyNpmyjw+vl
      9Utn+eD9qxx0GMStPhRDo1wo4HB1QT5JtbiNtXMcl9VEA9hcnSfZquDujmANdPHB1Z9RS+YY
      PNIgsTaDzWqiLtsJluZZKZToHOjnxofvsLNbBL3FH3zzmzj31rSh8AV85kfaNXoCbfcmjWqW
      paUIuiWMhg1JB61aZHF1HdXi/WjHxWe4JEAyYTEaFMoV7t65i9+ukKwpeOQK2/kaAx4P1WiW
      hiSTiCYZHTv6SeuGJo4yxBYPl2IozkfVXy+8/AqRyDKezl6OjPSwEY3RAiw2L4N93cxmdhg+
      cBSfWRUFMfvUYxfBmlplO1HGZ9coahZKqW0w25m5+z69E69w4tg40dVldLOD8dERTMqzXROj
      NavMzi0xOHEYr93E6uIcht3P+FAfkmSwtbaEPTiAWavi8PixmGS0RpmpmQVMjg4ODYWYW40T
      DodolTJIri58liaRZJWhLhe1FhiahMfnolpvUknvIHu66A35nun7FJ6NLzwKtLsdpaOzF6tp
      b62eEIRfRwyDCm1NfJ0LbU0EQGhre25gr17OMruwRv/YIQIOibm5eez+XsaHekDXWJp/iDPU
      R3F7i0yxwrGXX6HDbmJ1YYaa7KbfZ0Xxd+P+pbtcGbpKKp0htrFOuaExeugFsUVSG9hbATB0
      Jm/d58z5C9y/N0VUrzHy4qvE5++S6+zCXNqkhJfkwgLnLp7l7R//HTazCb2yy1ysxnhHmfmd
      BhVLlINjB9EKMYqagw67zu7OOvNRjW+8eZq7SzF8Sp27D9bp6AiSfLBB0+SkP+RgNZrm+PHj
      j5ZZC3ve3uoCGTq6YsNutfLSi0cptQxcUo1y41GtcL1axmJ1YjYM8okNnD0HsJtlDIuPHmeD
      uY04sqHiDw+xPHuVtWgVMmvcmlrA1zvyqS2SSqktSihsrq2xtV3E3shyZ2qWeDRGoaY+x4Mg
      PEl7KwCSgsfcYnVjg8k7D+nxOViO51C0KvmqiqsjSC4ZoaFYSG6nGR7qBaBVzZBtWjk81Emm
      pNHZGUKRTWhqkXxVw+n0EA76aTbrP38t2Uy4sxNFhlq5QLbSwO320Re0kRF7hO0be24YVG81
      2dlN4g+FsVlk0sldMDkI+n1IkkEuncLs9KEYTcw2J6aPiteL2RSVlozfZUO2OmjWKxitBnXd
      jN2iYHfYyWbz+H0e6k0VswyabEJrFLlxdZoTr5ykw2UhmSnSJYri9409F4BnTxe3RtnHPglA
      q9Wi1RLrgIX28skokCx/vMuKILQP0QUS2tpj8wCGpnL1pz8ko3v5R1+7jOUZr/b8PIVkjPm1
      KOGBcbo9MtNzS1hcQU4cHQetydT9ezhCfbRySeK7KV68cBmfUeTq3QXsTjcvnzrx2G0RP5aM
      LtM0+QiGOrHtrRkS4R/osY+5UUsx+WCDwf4A69EYczffJ3zwNC51l+WNBKcvf4Xth9eJ1+28
      PB7gxv0FXB4PdcPOuUNB3vrwIV//J39EwGl+8q01NO7NLPPapdeYmZljZzXLibOvsbsyQ76q
      IeUj4O4jFdngldfOsLn9Ll67BS2Tx941ije/SiKbZnNxEW9nL/VUHMUXxm9uEM9WcVJCdxvk
      EnF20lkOHT1BOrqC5Ahw/Mj4s6x8EJ6RxwKgyA5OnjzI4uwMdz94h86Dp1i+9T4mu0R/bzd3
      Jm+TL6kM21Jcv7+Np2uA5cUoXinKgpJnd3Oe2Y00F492P/nWGgaSYsGkmBga6OPBwywmtUQ8
      kcPW3cDcaCArXmTDIBNfIzh8BIsiUQfWFx8SNDcxZbNIFjtLK4vYm1VMqsLa7gahYIBotYqz
      LlOrqBw8doC5qQ8plky4XQUmDozjEGeFfeexq17DUJmdfki1JTE8NsyD939E3RbEbjXj87ix
      On2oqTXurhXo9lnpCARwuTw4rRa2tiK0dJ7eaJKkEHTB5K3bTC9GGAv7uTOzQqNepaUbeENh
      djce0rA4SSVy9Pd2fvJUk8mMzSKzvRklX6ujNWooFifNRo1Q0I9mgNftBEAxWXHYrdidHbhd
      FkxWJ2Llw/70+EWwYaBpLTRDwmxSaLVUZNkEho4kSxiG9GhJAqBIEoYkYegGYCBJoOsGsqKg
      PKURJcPQUdUWJpMZSYJWS310z1DFhCQZtFotJFlBMgwkWUaSpI+e8+hxZkVBbWkoioxh6CD9
      fJtURZH4+GjIsvxoT2JdE9uk7mNiFEhoa+JrTWhrIgBCWxMBENraHhvYM9jdXGY1mqYjPMiA
      T2J6KYJsdnLm5eNIrRqTt27jCPRirhdZ29jk9Btv0uWEyRu3aco2RgIObIOHCdk/nX1NrbCy
      Hqec2WE7W+HkmXOiIqwN7K0AGDpzazu8fvkiS8vLTM1s88qly6Q3lynVdfTMJs7OA5S3Vzh9
      /hQbO1lCbivUUkR2i5yYcLG9m2BzZYvx0UO0cpuUNRs+a5OdTIpU2cE33jxNcymGvb7D93+0
      Tm9XL1O3J1HcHsIdNrbTZV46cxa/0/K8j4bwBOytLpBhIMsKSOB2OWlJoNfyLC2vU6jU0Fsa
      SBISBqmtNXrHj6JIEo2WxKmXDrO5vky+3ODU+TfIJ+5TVX302assJ5q8cuH8pyrCmrUqY0eP
      Uy/lMNk7GOmwkSjUKGbTlOuiImy/2FsBkBX6g3auXrvOZqLAkeFebt2fQzUkLGYFX1cf6c2H
      GC4/hVKNvu5HXRez1cL6yio2tx+P24XNomCzBjGaO6xlDPoCTqxmO41GGSQZi9mMbLJit5qx
      WMwkY+ssJ4t4rQputwt0MXK8X4h5gM9VY/LGEq+cPfG8GyI8BSIAQlsTWyQJbU2cAYS2trcu
      ggXhCXtsHqBejvOv/o+/5J/9i3/M//vnf8f/9L/99/zC/umsTU+i9B5lKOh6hs38mMHG4jTx
      dBmbt4shn8T8ZgJNlzl3/hWUZomrN25j93XillRmZue4+PU/xK8m+OHNJTwWE69evoTL/Nm5
      j8xNonlH6A2LirB28XhJpN5CUytMTS3Q1Fo8vPEW733wkN/6na/w9g//jtHRQYLlBn/77x7i
      CI3wJ9/8nWd3GtE1NnaKXLl0ga3oFnNr65y/eJlCMkqjqdNMRPH3H6USX2Ls1RNEkmW63Faa
      qSaKzY2i5sjsrHNzNY7FYSW/FaN74jDmeoZCTcVEE4prROYfkK3WGR8/SD4RR7K4OHfuNCZR
      ErbvfObfbqi7m/npFboCHirVGjTyRHcyDBw+w4DXRK1WZfDoaZRSGv1ZtlaSkCRAArWpggHN
      ap4Hdx+wm68gyRIYBgaQ3Fxn8MBhZOnRX63D5SYcsJPM1rFazaRSafx+D1ubm6xGtpB0lVKl
      jtqoo+oWzr16mt2tOZLZGvVKEVV7lm9UeFYeOwPIipXBsUNkSylCDgeSVsMVCOPzuPG4rLjN
      oMsONMWHpafr2bZWkpnoD3D12nU8gR5OHBnj3tQckt2N32XFZxlk/uYt7MF+GlqNvs5H2xrJ
      Zjv1/BYJM3QFVcqShNfjRdIadHd34pF9pIoNBgcCNDQZ1SFjtVroGTiAI5VAcQTEHmH7lBgF
      EtqaGAUS2poIgNDWRACEtiYCILS1vTXdYxjMP7hJtqpjWDyM+CRWkkUa1QYXr1xGaWR558M7
      WD1+Ou0Kk7du89vf+Bbd1ho/fuc2MtDbYafj2Fn6XJ8e1mnVc9yeWsOiFliIZXj9K1+jJ+gk
      nSoQDD1eESZJYlJgP9hjAdDYLWpcuXSBVCrJ3NwcFy9eophNoWk6peQ23aMvUoktMnLiKFvZ
      Jt1eG6hNKvk0vnAPmtbg6ttvEQ6F0PIJmroZk1ShLkkUqo8qwlRnDCWzxJ+/H6XHF6CwHccZ
      8GE3aRRVKxcvX8bvEhVh+8He6gJJEpKhoxs6id0EClCuFLhz/UM20yVMFguG3kKXJXYjGwwf
      PIgE1Ao5jr/2NUY8LdZ267z2xm8jq3Esrn4mwlZKcogrly98qiIMxcKrZ89hN0God5gjA51Y
      fGGsrRw7ucrzOgLCE7bHAqBw/MAAN27cxOwOcuqlY8zOLGD199AfcOLrGkLNbeDvG0GxeegL
      uAFwBHooRhfYbbg4+cI4TrNEd/chAu46KcPP8dEwVosHp0NGNlnpDPixe/x4HXbC4SCZnS12
      ajLDYR/OQB89fudzPhDCkyImwj5Xk+XFOBMHh593Q4SnQARAaGuiIkxoa+IMILS1vXURLAhP
      mAiA0NZEAIS2JgIgtDURAKGtiQAIbU0EQGhrIgBCWxMBENqaCIDQ1kQAhLYmAiC0NREAoa2J
      AAht7f8HIpgxEBgWZnsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Across.Table.County' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Indiv.Chart.Auto Suff' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2daWwc6Znff1XV90l2k2x2875ESqLua07N5Stex2t7kb2MeBEkAfItCLDA
      br4EDpAACyyQ5EOAJIDjK1jvetdOvI43Y6+vsUYaaaTRMTp530c3ySb77uruOvJBs2N7WKXh
      SLysfn+AIJD18qmn367/ez3P+5ZkmqaJQFCnyHvtgECwlwgBCOoaIYCnlEoxR75c++UvTINK
      pfprZQy9xvzsLKXKL8vpNZVkapWl+XlK6sPfmzWVwq/a2gLFYvHX7jM3O4ta023Lm6ZBpVq1
      vKZVSqykMxi1CtNTk0zNzKNbDNzz+fzD/7NZjC36qXz5y1/+8hbLCn6DuPnOm0wv5mhp8GFI
      kJod5efXJ2kOymTLBkG/h4nbVyg6w4w9GKUhHEQvlxi7c5mbD2ZYTOXo6GhjdXEGxemirEF6
      eQ6cbtZTSbLlGh5ZY3pxDYcCDslArZk4HQqmaXD79l0SiQQAN65cwh9p4s6dB3gUjbLhoKaW
      qKllCiWV1PICanGFn18ep6sjjlou4XK7KWfTzK9kmbt/mQ2iNCsb3FpQaVbWmVpXMAopdIeX
      jeX5hzYrJcr5DS68cZlETxvzc8v4XLCwuIzs8lFcT1KoSlTzadKFKsGAD8cef0+CncCsMTOT
      oqCvEXOWCHZ1MjG1jN+lcGtkGUc1S+TjHyPe3sXf/+IyjW0HuH3nDg1GGdXno7O7hcLqCjcu
      v0Wku4e1W5eZL8rkCypO+QaG5qa5yc+kLJNojXA3uUQ07KEhMYDPA0atgOz0v+9OQTM42dZG
      SzTKWzdGkUrT4JYJyyYr2RzR9gSZ5DpBd4CxqWm0colTp09w5Z2btDW6WS4pDDdHwVxidXkO
      ddXg6JCXn10ewyG9g1Gr0TV4FL2UwsSNxyFx4ac/xKxo3FecuJoHcE6O4/CEaHDPcvvBNLoG
      v/tHfyiGQE8j2cUJek6+wivDbUyli8zPzFKTnDhkGSQJWZIwgenxSU6d/xgU0lSrVeYXl1Ac
      DlxuF06HA9MExeFClgBJ4sChIxzs66a9swefx4mBhMftIhaLcm8iSVPI/fD+C9OEO3rf98cr
      QzqT5eKlt5EkGUkCrVZlfmEZXEEGBjpQTAm3P0wlNY63KYEEgIQiyyiKA6dDAaBn8CjdESdL
      GyX6Dw5zaKCHI8dPkVtdxjRBQkKRFdz+Ro4ePUYiGqKvfxBZNpAlGaci09zey4mTw3hkCUks
      gz59FDMbyP4QHiqsbBTJZXM0x5rIZwu4HTpVOUB7LIKhV5kYGyMS78Gp5Uhnq0Sbw0iyA71S
      xeH1sbY4S1NrHE1ykk3O0djajqEZSGYNr0tmNpWnI+Lk9myWc8cGAShkc3jDIZT3/NFrKmNj
      k7T3HiC/OocSaMFjFFjLa4RDfsINfgpZlXwxR3ppjr7jzxByKxQzqyxtVEg0BXB4QzgNlVxV
      JuyVWF0voubWCMY6UdeXkPxNuGQdQy2QUyXisRBzi2t0tjZiuEJUy3m0Ug7d3YBTy1EyvbS3
      RndPAIZhIMuiw9lODMNAkiQkSdpTP7Lra7gCjXhdyocXfgSmXmN1I0dLU3SbPPtwdk0A+Xye
      YDC4G7eqG0qlEi6XC4dDTOUeF9EkC+oaIQBBXSMEIKhrnjIBmBTyOXK5HDXNPupo97eapm2p
      ZFlVATB0DVWtoFasI5i/iei1Kmr116O+uqZtKbJarajoholpGqiq+n49Pak/1Y/8XW6dXYsE
      V6tV3G73Tt+FH3//+3zzG18jfvg5nFoRh9NJNpvBMCVymQwOtxdFlqiUC2QLZRR0dBOK2Qzf
      +du/Y+jAAJlMBpfbRTaTQa3UUEsPI5OZ9TSSw8VffuubdHX2oJdWuXr9LjceTNETj6JqJqam
      ki2oeL0ednptplaroSjKNq6umVx5/a/4wY1lTh/spFzVqJRL/PS73yE8MEQtlwHFiVrMkS+q
      aFUVyeGinM+i6nD5B9+jFIrQ4HNw+eJV3rx8lcNDfWTzZVwOSK9n8Pt9mKbJ6uIUb9+dpqcj
      TiFfRNNq6HoN3TDJbGRwedzkNtaZuX2JOymD5rCfarlAzZCplIuU1QqlQh7J4cahPP7nf+pW
      gebvX+b1W+t8YjjEV7/7E44cP8PYg9sM9bSzVqoRiPbwxc+9zA//5n/x5r1lPn62B3/nYW6+
      dZ2ZpQWeHe5hOZ2jtbubm2/dQDIrhMIhDg4PMTGziCfYSiV1D4fTS//wMMvJAoqisTj+gJwS
      oS+Q535K44//5E9p8u/s6sx2rwKZhsY3vvo1JEXh/AvHuTtXY312hMz8OEPPP8fo6BzeUAxt
      9S551SDY0Ei0c5DkxCi4vHSHZZZLVcJtB6iuJNEkk6C2zu2ZDY4Pd3Pl+gO+/Gd/Rur2L/ib
      N0b50pf+gHgkwF9/+68ppVcIxuK4FJPllTRNvYcYf/MnHD8+xI/ffsDv/8Hv8dP/+12McAdt
      0gb+eJxLb17j9Me/wB/+1ouP/ZmfqiGQVlrnG9/+IccPdTE7t0hb7wFaIg3Eew/T4nfSO3SQ
      cm4dDI3l1CrlfJ6qYTI9MY4ciNLRGkUtFxno7yGXy9ExeIy+7h6ePzlIKrlKomcArZwDxUVn
      oolCuQKAUS1juMMM9XcSa+skIOusZYsf4u3+o7gywejkPHMzU9ydSrEyP01Ohfb2DmSjQqyz
      D0Mt4I8kODPcw4svvcr6ahJXOIbfYVDTTDq6uyi9l5QGBrmSzsFDQzQ3t9IRj5DO67QPnuTM
      gWbeunoLkOiNeql6FObWwWWo9A/0kc/miHUdZKg7RiIeY31tFWewmYGuNhRvhPMvnKO3p4NU
      MvlEn/mp6gFqpSyXrlxDM6D3wEFS89MMHj7CanqD3rYob1+9weDxszQHPYzfu8lqXufAQAeT
      c4tEwy1U8itEWhNMjE9y9PgRkqksiq4SDnow3AFmRu7RfuAouZVpMrkqhw/1srJWQHI4MAsr
      1Lwxos4yY4s5zp05gVPZ2UHQdvcA68szqK4mIi6VuVSezHqaQChM2K2hKmHWFyeJ9Q5Tza7g
      c8t4QlHWchWMzAK6L0aDUmEutUL/oaNsJFOYEkT9MpOpMsN9Ma7fus/z58/zsFpMNE3H4XBQ
      za+RzGtgSLQ0uLh24y5HTp0itbBEIuojqzkoFYvo+TWc0U4oZejq6+bW1as09xyiO/74gbOn
      SgD1hgiEPTlP1RBIIPioCAEI6hohAEFds2uDR8MwKJVKu3W7uqBSqYgs2ydk1wQgSRIul2u3
      blcX6LqO0+lEUZ4sDbme2VUBiNWK7UVRFBRFEfX6BIi+U1DXbLsADF2jqulotQrZ/G9eNFRQ
      X2xv32kaXP3p/4H253DmpykUdc6+/BJe0c8I9inb/mi2d3fjMA3mZmapVqvohkm5XKZW+2gH
      KwkEu8H2CkCS8fk8gExzopP2BoVcBRwOh1ipEOxLtn35wN/YTk/AjTPWz1y6TNwvIeEUa9WC
      fcm2C8Dtb+Ththcfw03bbV0g2F5Esyyoa4QABHWNEICgrhECENQ1QgCCukYIQFDXCAEI6hoh
      AEFdIwQgqGuEAAR1zbYLILcyw0wyA5jcuvXudpsXCLaV7RWAqXHr+hVS6SLJ6RFujUxvq3mB
      YLvZ5nRoB8NHDqMYFd65NUI1u0K2rJHP56lUKtt6K4FgO9j2IZDscOF2+/nM5z/PwYMHCXsd
      BIPBXTgaXSD46IizQX+DEWeDPjliFUhQ1wgBCOoaIQBBXSMEIKhrhAAEdY0QgKCuEQIQ1DVC
      AIK6RghAUNcIAQjqmm2PoRu6hmZIYFQpVXQaQoHtvoVAsG3s4PHosxSzGQ6e/zTNnm29i0Cw
      bWz/8eg93ThMOHX2GXTNwKOI49EF+5ftPx7d+7C5f/fKG8SHzxJwIF7kJti3bHsP4G9sp6et
      Aac3SC45Q6n28OV44nh0wX5E7Af4DUbsB3hyRLMsqGuEAAR1jRCAoK4RAhDUNUIAgrpGCEBQ
      1wgBCOoaIQBBXSMEIKhrhAAEdY1lDL24vswvrtxCR+alV14l5HVu2WAuNUPabEDOLbKQ1Xju
      zDGkbXNXINheLHuAiYkZDg0k8Hm9ZFVj69ZMjXdvXGElXWQ2mSYu5VgqbZerAsH2s0kApmnS
      e2AA3FGCLomg+yOkMUsODh85jIKBbhg4HCa1mimORxfsWzYNgYqZFb7/g9fx+kMYpkSv8dGS
      RWWHC7fThdPvZCRt8MoxCackskAF+5NN6dClUhGtUuL+/REc/kaGDx/E43zyzSwiHXr7EenQ
      T86mIZDP52dlfhZnKEItt0ruo8wBBILfMCwnwU7FJJVaJZ1e5/a7NylV9d32SyDYFSwFIDnc
      5FJzpLJljh47jtcpwgWCpxPrJ1uSGBo+RMjnoaqZSJJYyRc8nWyaPWlqnoWMxplDPWzkDVrD
      rr3wSyDYFTb1AJNjYxw4dBhnIMpgzMnChli/Fzy9bOoBuru7uXL9Mk6nE81UeKZXvN5U8PRi
      eSyKaZoYhoGsKNuWxyPiANtPvcQB1PENynfWLK8pDW5Cr3YCMDExYWsjHo/j9/s3/d6y5pJj
      71II99DbHECWZTEJFuwpteUixatJy2vOuP99AXzrW9/CMKzjVl/84hcZGBjY9HtLAbjCjSyO
      3CQ17eX4iVMEPE93CyPYOx5cfAPd5tzYjsNHCLe0buv9dF3FMH45r7V8stfXC6gmDDf7yFf0
      xxJArVKmXDMJBXyP763gqednX/sfqIW85bXP/Os/2XYBzMz+N2Zm/uv7P1vGARKxRhYnRnln
      bIVG/+Mtg169fIm33ryE+nh+CgS7gqUAkkvLHD37HC1+iZyqPZZhvaaSLZSQTHE8umD/YikA
      RdJZXU2zvr7O7VuPkwtkUMXNcJuPtZI4Hl2wf7Ec3HcdPkPX4ScxK3NieJDlnEbCJyFJ4nh0
      wf5kkwCWFhdojiVwOp7sgY3GO4nGn8iEQLDjbBJAenma2/ce4FRkkJ2cOfcsId/WN8ULBL9J
      bBJAIBLnlWO9uEUKdN1hmibT2Wnb64lAAo/j6Xrj4SYBuPQ8X/vqV2iOJYi1NHHsxGmCXhEI
      qwdqRo3f/tvftr3+9U99nVOxU7vo0c6zqZlvGzjOP/vSF+mN+ZmeW2JX3p8kEOwRm5r2+ZHr
      /M3fXaA50UFbW0IcaiV4LHTNYPZu2vKa063QcTCyyx5Zs0kAvnATR48dJRJrZ2igF+9HORdI
      IHiPalnj9f9+x/JaqMnDP/0Pz+2yR9ZsGgJF4928+vJLeGppvvq1b7BeFBFcwdPL5mXQpSlu
      PZilJdHOv/wXz+DehjOBBIL9yiYBRBO9vJbo3QtfBIJdRyz2C+qaHRPAwtQIv7h0DXGunGA/
      s0MCMJmYnMSFSVUoQLCP2aEQr0GxKhEL5FgrmYTNApVKRWyKf0oo3bxFZXTU8pozESdw/vwu
      e/T47JAAFLoTUeZW8rzolfAp4sF/msj/6Eesf/3rltf8588LAQAcPnGOJ9pSIBDsAmIVSFDX
      iDTPemH0dRj9f9bXIr3wwr/ZXX/2CUIA9cLyu3Djm9bXOp+pWwGIIZCgrhECENQ1QgCCukYI
      QFDXCAEI6hohAEFdIwQgqGt2VACqKs6GFuxvdkwAteIGf/XdH+yUeYFgW9ixdOgHY9M0NQYx
      TRNVVcXx6IJ9yc70AEaNWrXK0vwsedUQx6ML9i070wPIbk6de4Z4Rych78MHXxyPLtiP7OhT
      mUgkdtK8QPDEiGZZUNcIAQjqGiEAQV0jBCCoa4QABHWNEICgrhECENQ1QgCCukYIQFDXCAEI
      6podOxcol06yuFHhYH/XTt1iX6JlVGpLRctrklPGM9C4yx4JHsWOCWA+uQbZJIvxLtr8O3WX
      /UdlPMPGd8ctrykNbuJ/enbb73no3/0QtWZ9Dv3//KPTvDLUsu33fFrYsSHQwcF+ZtMVoh6T
      fD5PpVLZqVvVPbphYpjW/0zxpudHskM9gMkbr3+f+MBpFCQ84r0Am9jY2MA0rR9Ov9+P2+2m
      VstRq21YlpFlJ9Cwgx7WBzs2BDpy+jnKNUO8IsmGr3zlKxSL1nOF3/md3+HIkSMsL3+H8Yn/
      aFnG7x/k6JHv7KSLdcEOCUCiOd6+M6b3kG//+39LbjVlee2F3/8SB194eXcdEjwx4nToj0Bh
      fY3c6orltWq5tMveCLYDEQcQ1DWiBwBya2XmH6xbXlMcMkPPxnfZI8Fu8RsrgLtrd/nza39u
      eU2SJL7+qa9v2dbKXJ43/sL6rYdun0MI4Clmfwrg1rcgM2d9retZ6HmJXDXHjZUblkVkMbIT
      bJH9K4CZN62vvfjH0PPS7vojeGoRTaWgrtmxHuDapTdYzem89qnXcEs7dZcPZ+U//xdqCwuW
      10Kf+S2Cr7yyyx4J9hM7JACdQhWOtjlZykFPeGfushWKFy+i3rtnec1zcAiEAOqaHRoCyciy
      RFEFn3tn7iAQbAc7lgpxoLuNpZzGAc8vf5vMqvz1O/O2f/WvXurD5RDTEsHusWNzgHhXPx9c
      PV/OlvlPPx6z/Zt//kKPEIBgV5FMu5zcbcI0TQqFAuVyGYfLTab0y/cEaJqGw/FLDTYFXFSr
      VdxGCfTqe2V0FEVB+oeJtMuPajiQnTK5as7WVsQdQdM0lFIJU9Msy8g+H1VZxqm4qJQ1W1tu
      v4JhGGjlEoZhWJZxeX3opolbcWGo1rYkWcJwS0iShKqq76dDf9CWx+NB0zScThNdL1jbkhyY
      ph+Hw0G6aF+nYa8TQ6vikXWoWttCcVKR/bhcLtJq2t6WO4xe1XHpOka5DDz8fg3DeP/4e8np
      pOZ243a7Keet/ZIkcHgkZFmmUsjb1oPb50czDNyyE6Oi29ap5jRxOByUSiXLMr9epzq6XnrP
      910QwD+Qz+cJfsi+gH8Qy4eV24otXddRVRW//9Hb0bZiq1aroes6Ho/nkeW2YqtSqSBJEi6X
      64ltlUolXC7Xr33Rj2urUCjg8/k+9Bj7rdjaShlVVZFledvqwe12f+g7KKxs7ZEATFbmJrg9
      Pke4qY3TR4d+2cL/CqamcvmtK5RrBifOvUgk4LSwbDJ5/yZ3x2ZxBZv5+Ksv4LCwpZUz/PRn
      FyioGidfeI2emNXSlMno7WuMTC3iaUjw8ZfOIVvY0qt53nzzKobDzdlzzxDwWD2AJvduXGZi
      Nom/pZuPPX/Ssl7KmSQ/e/Nt1KrJCx/7JLGw19LWyO13WFrL09DSwcnhAWCzANTcGpevvYvk
      DvDcM2dshpMm92++zfJGke4DR+lrb7b0ayM5w8Wr71KtSXziH3+GoGuzLdM0uPrmT1hay9M2
      cJyzR/osba0uTHD5+j1008HnP/dblmWqxQ0uXbkBLh/PPHMWr9PqYTa59fYFZhbXiLQPcv7s
      sKWt3Oo8Fy7foFKDVz/9aRq91s/N3etX9i4QNjm3xOkzZ9AyK6g2EiysLeJo7ODkcCcTE/aT
      59WNIh2JVtyKhGFjK7+ySEv/QSIhH7mNvI0lk3SuQls8hkvWbTcTbsyNE+45wkA8xHzSOokO
      DDIFndZ4K07DfjvoenKRRM8A4YCPUtmunM7oxAJHjh6lr8v+nQvLc1O0Dx0n5jFYKdjbWs2o
      nDl5nKXZGVtbK8kUne3tBLxeKjaVahoVaviIxZrQSgXLMgDJ5CrdbTH8Xp/9/eYmaR04RkfI
      QXLDeqMQ6ORVmVi8FVmzTz9fSyZp7+oi6PNSruo2pTTGp5N7JQCJof5ubly7hjMSx2vjRaC5
      g5X7b/GTK2MMDdmfLuFWJFo7e+ns7sJpYatWzrOYq7G+sEC5VKIxah2YMAyTro52Orq6CQSC
      2MXvIl2DLFz/KRffnaI5GrIppZBo8rO2toY7bL8pPdYziP7ewxMOWrf+5XKF9lgjt27eZHx6
      0dZWe98Qy2PvklJlWkN2wzUHDe4q3/vBj0n09tvaCgR8uMItdPV20+i2+oJ0Jkcn0LUK5VIZ
      Z8B6mGIaBm2dXbR09BAJ2g8hY939jFz+e65PpohY1sND32NhJ+vpNL6IfYJiW+8AWrWGKUkE
      LXtng3K5SrwpuFcCMBkdn+bUM89SSy+h2uybLK7O4fBHOXykl5ERm+Q4wOWQGB0dY2Mja9kD
      yA4n7moWR0OCgwe6WF3LWtpZW5rhrStXeefq22TLNVsBbMyP4u08zisvPkvAbTf+1plLZTj/
      8itUMta7yABWZ8fQvI0MDA3ZdPsP50arG3n6+vtpa22ytbU4NUrr4Ala3TqpvN0rajUyFYMD
      vT0sTU3Y2lIcDhZmJlhbW0PVrHoAiVA4SKGic+jgIIUN656wXFjn4oWL3Lx5nelUxvZ+qZlR
      mg+c5qXnzuCxXQnUWEyXeOnl8xTWlmxtLU2PofgjDB0cwqVY2zJNg3S2uHdDoI7WJn7+o78j
      bXhsUyW8kTgBr8zMxAKdnfatqG7qLC/MMTO3YDlsUZwe+o6cwlFMMrtaZqC71dJOS3sPHYlm
      KroDp1ay3c/saWjFzC8zMTFBvly1KSUR9rm4desWWk3l9siUZSlZgnQqyfJyErVm1V1L+Hxe
      og1BFhcXWV23Fi9AS1sHk9cvcHVqlSa/XQRSoSkcZmV1heZHvMLKMHTSqykmJqfRLCtCpiXR
      SVdLkAfjM/QfsO5NfKEmero7KJUqtIXso6KBSCvq+iITE5OUqppNKYmAR+bWzTvUqkXuT1g3
      ipJkspJaZnl5mapu5byMz+cjEvbvnQAWVtIgu4k6KpQtfDT1Km+/8VPSVQchr4Nczm5cCJWK
      QU9nAoei2M4BtHKB5fklnH4v+YJd6yjRGHBhmjruhmbbyjFrZTLrK4yMTZAt2b/+tVwqMDM1
      RbYqc3So17KM4vZg1Cpomob9coREuVxkZnKCmQX7li85N0dZh/5ElBWbHmBq5Aa3R+aJRBvI
      5+zmQlBRK/R0tuNxuKgaNk2BaZBeS2EYkM3a20rEWzBMg5xhNRl9iF4tk15NMjI2QbFiN26X
      KBcLTE9NUDK9HOrvtCzldLnRa1U0TX9EnUKpmN8bAei6QSLWRFdfH85gBI+FF5Li4sSZ01Bc
      ZWR0nKxlpZjMT45gODyguIjFmlFsepNapYyua+SyWXLFso1nJquZCs89d45iesV2EmzoBvGe
      IVrDXrRHnXcku+np6bId2gC43F4UCYrFAoadegFZcdPV04XPaokLMHSd5rZ2WuIduNxumm3G
      271Dx2kOORgfHWHFpjfJrCywktcwZYVYogW/zZDENA0qlSr5XI5sNmdZBiC5nOTEmecIYlfv
      D+dfnb0DRANeNM2uBzCRFA9dPd14H7Hy6/b4kE2DfN5+Yg7gcAf2RgD5fB5D18lvpCmXVdtW
      W5JlmrqG6GmLIletH7RAwI/T30hXvIlAMGT7gSRZxtPYiFHVabSdIEo0R0M8uPeAYLTJcg6g
      5ta4M5XCVPN4w1EijQGLUgb3b16jrJsUslkMh33XX6uoeAMhfE6ZimYlcp3Xv/OXLGcK1GoG
      DVHrZUu1mKdc09HUAtl8kZr1uAUAjy/MwIE+/C7rp8gXCAIKgwM9uH1B3DatiiSBrLhQHArR
      qP2Rj82xGLPj91Gd1hPl4nqS0fk0WqVMKBIlZDl8M3j36hVqkkQhkwGn/YpStaLiDzfgVkxq
      lkMgje/9xTdZK5T3RgANDWGSq2kOHzuOpBaw0nu1uMGFyzehWsbpixBrta7gsakFjg0fINFz
      gFomSc1OTOjUDAfhgH3FrS5Oo3ljHOxrJxAIYqUAT6iJsycPUVUroDhwWQahZIaOniQRDYIr
      xNnjh2zv6Q02UEgvkSnruC17CoVPfv53OXf8EHqlRMVyngC+UAPqeopY9xAxv0K+YjU007n0
      s59guNxIkpNos/WEemFyjK5Dx2iMttLqrrGm2g1JoFypEmlsQLLpL8v5NHNrZc6dOoI/aNVY
      gD/SyqkjA1TUCjicuBxW9SAzfOI0LQ0+FF+Ek0cO2PrkDzWwkZynpEs4LCfBDj77e1/k5OGB
      vdsR1tke553Lb+FtaMVp8aA53H4GB/pIrW0ATpsHTaIzHuHSxUs4ZHAFmy2XQQGqpRLBSDPx
      eCM+t3VgZGouxZlnnkGWYP7yFYzedsshVT61gK+1l0Z9lVQ6R4P/gw+SwYXX/zezeYXejlYW
      Fpdpbhiw9Gt9eQYplOBgZxM+yxZZ5xc//D7z6yrNsRjNEbtlV2hq62T0yg0MxUOv1yrCKtM/
      NMTCYopqTcNtE4Vt7ezk6vW3mHY7qWgKL3jsVqd0ZIeXeDxOIGQdcZ+dnKBv6BQBr4OoOWnr
      +0Zykcb2fpy5BdK5MoHmD/YWOj/+3rdJE6YrHmVxKUlksMfS1srCFL7mLnpaG216L42///53
      WS2ZeyeA6Zk5GiIRnG7Xw4nKB/w0DI2NjQ1qmobidOO26a7j3UPEOg1MExSbJS8Af2sv7ZlR
      NjbWCTQ2E/J/cBgk0dHayMWLl1Akg2Bzp2UUGKPG3FoZdX2ay2mdL3z+lEUhmZc/83uP+vjv
      09JzhPbSPbIFlTbLG8qcev4Vjrw3pHG67dbIYXVxBskbptHjRLccV5pkNzaoVGugKPi81kNB
      XzjGSy+1oOsGiiIjWYXpAUl2cWiwl/TGBqbDRyy6+ajGjq4u3rn6Fk6HguHwYdUMmHqFZFYj
      nbpGSvXwhRNWvbTCp/7Jl2w/+6/dc/AEuXv3yZeryJa+Kzz7yieo6XsoAJeksZZXaZTdlp2n
      oWuU1CqKw4Vk6hTLFcI2S3sLk/e4MzaLO9DMK+fPWbbaheVpFlZWSK9k8EQ6iUU2j0cTPUPE
      uwxMJGTLhxHWZx/gig+QnlngCx87xeLiKuH+xz81IrM8hepswFVaYTVTomNTyycRaohsyZbL
      5SKzsYwn2mBzKK5JqVBEUhRkSXrvaEbroWU+vchbV29T1SVe/eQnCVilQhhVRsbGKZZVmjQX
      /V2b68Hf2Mr58zFM07QV0srEHQLtfUwvpvjk6QGS6Tx98cc/93RlfhL8zahr8+TAKH8AAAfO
      SURBVGTK3bQEP/jcSIQbo8Aebop3enysjEyzthrmxMljm667vCGee+FFDMN4WHm2SVomC6ks
      bS1N5CoGuomlAALNCaIZGa9RwWsbvDIZv3f9YS5QY4KPvXh2Uy/Q0NbL3YtvMXj8FHcfzHL0
      3PMf6XN/EH9DhOz4CJIs0WO7dr81JFmhWkhzfyXFwNGTbJ7rKxw/9zymaWAY9g8kwOLcPG2J
      VlZWs6iGidXoXZLdtLbGMcwqhse+Z0ovTb2fC/S53/70puvRzn7uXXybQ0ePMjo/z+lnrYeL
      WyXY0MjonUkMFPy23/VD9u5UCMnB4QO9zK6qtgEnNbPEz9++h8/jomfoKJ2xza2VaZr0drWj
      IVNaWrN8+CvFDW7cuodumBQqJlXNbu3eZC1bIdEao1DVLNtQ2RXg/KufePjDQPcWPqg9erXA
      rXtzRBs8ZEqmTXe9dUwkevsPsDQ7j27a1arOGz96HdkbJNLaxZHB7s12TJP27j42ilXyuSIe
      y3G0zq2rVyjWTNRiAXfEfjl4aXmF7kSM1Ib1MqjD28CrH//kwx/6nuyFKtXSBg+mVgn5HBRq
      Tssky19lzwJh5VKRQGs3Z04N47Jx0tBrrK5lHmY82vQA6eU5Ll65xtj4hO3Sn8Ppxud2sr40
      jyvaQVuzXfcq4ZINEp1dtHd0Wc8BtpH1mREi3X3MJPMMd0ZY23j0uvWHodcqaIqfU+fOELXt
      TQySqRVcLhdOy9UWqBYz/OKNC4yMjVF4RKQ7GAygFrPkKxL9PR22fgV9brzN7bQmdv6AsdTM
      OC3tcZayJn1RD+tFO/8fsicC0DSdgYPDKHrlYbTOppzD7Sfqg/Hxcdby1i1MU6KLtpYGPB4P
      AZslTr1WYSNXwOFQCDVGcNkGpkxMvcbY+CRr6fVHRhG3g2jPYQqLE5w9e4KFjSodlinaW0PX
      NBpae2htcFOraRi2ziu0J5qZmhxnIZW2LOEONHLwQCcOp5tAMGCTE2Wyvr6O4nDg9Qfxeezz
      +iUJpibGyaytftSP9ZFp7T1IenGesyeGWKs5H5EU+JA9GQLdvXOH4UP9bBRNerrsj1GvlUs0
      dgzgSc+iZguAdT6QVi5QMT24fNZfusvfyMuvvoauVUktLZIrlPE0bp4EJ+cmmFxco729jYpq
      ly6xfchOL2eeeTiH6Ixb5ydtlcXRO/gHjqJrawwO2Wd5goGOl45OP4Zu3zpKhkY2X8LdYLcZ
      ReHsC69gGjob6RU2MlnCgc3zgFJ2leu3x2hKtFOxTffePpyeIOeefQ6AtviH9zh7EwlOL/P2
      21e5/s47XL95F5vXW6ErHnrbW5AdIQ4Pd9vaCzQ0sDw/zcT03CNbbcXhItHZQ4vFww/Q2tnP
      QFfs4bbMR0zq9iNapciNt6/wzvXrXLlylbxqnU5QU1UODB/Gqyj0Dg7a2nP5/JQzKzwYHbdJ
      hnuIJCtEmuN0t1sL2Bdu5uSxIbRqFcW1/44I2ZMe4PlXPolhmpwDQLKeuGZT3HgwR2FlljMv
      nOX+vRnOHLdOKDMMhYGeTpIZ7YnfSLMwO0tjxyBe7/77sh5Fz/Hn6DQMePZhrVpvD9R569IV
      Qs4qtB5jcWqczpbTlvZ0zWCgt5up6STVJxwLrifnKRshYiH7KPxesSc9gKzIpOYnuHDhAleu
      3cIq3VxxutFLa8jhOPMjIzQ2W6+F19QSTe29hPxe+gcP2EaCt4bE8JEjlPIZarplJsS+RZJl
      Kvk13nzzTS5cuETWsgeQ8LgkxlY0Go0VZI91T2joNXA3EmuJ0jEwQNRyQ8zW6R08gkMrkyvb
      Z87uFXu2DDo2OkrXobOEfG7LHsDha+C1j/8jwHwvImmzR/TGdaKNARZKXqLqIrW+TixiNlvE
      ZHktx9lz57h7+y4GAzx6m/X+Ijk7jquhjf5EAz6XdT7NuRdf49x7ddpvs4l8Yew2RWcj9+9O
      c6wzwqqqE3tU+uWHML+wyJFTZ0nev/XYNnaKPVsGPTR8hNXFGWbmFtAf2cNKj9ztH2kIcm9i
      ie4WD0Xclhvit4ppSgwd6GPk3l36Dh+1Ta3er7R2D+GqrjM1Nf2IvbDwYXUaaowwM3qP/oFe
      ZtIlGh6/RQGg98AQqZkR3O1PFuDaCfbsVIirb/6MhWQawxngs5/99BO02g8xDANJkh4Z3Xw0
      JvduXMHV1EOzR+PO1ArPnzu547GAJ+GDp0LM3r/GzfFF8vkKn/js54g9YgfWVjBNA3iSOoXk
      9APmchJHBxJcuXyDl197+Yl82m72rAeINjXR39eNy7U9EyNZtk/a2ipFVSMRayLU2IRZtd+8
      sV8JRZrp6uwi5PPwIcf7bAlJevI6LZWKxOIJPN4gAcf+e2n3nswBZsbusFbSWZicIRyNf2i4
      eneQOHHyBO/eukbFkDl66vS+bv0/SCE9z43RJdRsCrcvgLJPnO85eJyRu7e5OFaia3Bzztde
      sycCSK/ncWkF2oefQVuZRjex3BOw2zg9AU6fe3av3Xgs8uk1QiEPZS1GW8CgYhdc2WUk2cHB
      o9aHgu0H9mQOoFdLzC6tEw06KeOl1fZsHcGj+NU5gGnozM/NEWmKsrZeoKsjsU961v3Nvjob
      VPDR2OrZoAJ7xFnkgrpGCEBQ1wgBCOoaIQBBXSMEIKhrhAAEdY0QgKCuEQIQ1DVCAIK65v8D
      OLlsK67CEakAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Indiv.Chart.County, Transit' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d+XMjZ3qYn27cN0iAJHjfx8yQnEtaaVfSak+57M25K2+clF0VZ6uStZ3E
      VyU/JVVK5R9IxYmdOHEcrzc+1l5Ja8kr69ZqRnPfJIcXeIMESZAg7ru78wNmRqJIAs0ROOQI
      /VRNlUQ88/IFBm/319/39teCoigKGhpVinjYCWhoHCZaAWhUNVoBPNYojN++zpVLFxn1L1Ju
      MDs+Po68pyRz5fzP2IilSIXmef3tD7h0/mdMBzZ2tTdCoeJ/pEJcuzv/UNkHF+ZJ5aUH///e
      m69z7doVrt4a3/O9yHKezXBkR+4boQ3ujo/v+bs2l6a4PDINwPVr15CByTvX0D9U5hpHAikR
      ZDGq4+e+/DQrK6uM3bjIVjJHc08f4ZV1HPocGSlHMAZmk4HA5B0ioTU6Tz7BwtQ0X3jyNLNj
      NwluxXHUeLk1OsOJJ5+hEInjbOjkiT4r75yfJhWcIprK0tLWzszcIg2NbWQTm6wFZgmHgoQN
      reQ25shKIp1NLsaWoljNVnx2ha1UgabGBmbnA5htLp7+wqkHR931cJj6tvYH7yeVF/jqmbO8
      8cabfLA+R11rJxurq8iCHl+NmZwkoFhdKLEI51ZXEeUCtZ5aHPUtZEIBbo7PshnaxOc24+w6
      hUeX4MOLNxH1JoRYAF3nUwAszfup9XqZnp7WzgCPM0o+g2i0AAIGg56l9SjPPjXE5Pgk0Wic
      VCJGIhahe+hJElub1DY0Mnisg6vvv4No9yIAM0urfPGZ51hemKG5pRmbqXhMnJsa409/8DKn
      zx7nzrgfq1EkuB6hkEmTTKWIRTcJrMd55umzKNkNpmdDiPk4gbUtOgdOkY6sM7e6xZe+9CWS
      K37Soono5jq5+wd8OYskGNEJwoP3Ew+vcuPGLYbOPkUBPT5LDruvH58pjdHTyk/fOkdvm4d4
      LIrOUkOD3cGxUycIBpdJZBRam300u0Qm51eos+sJLU5S2zGM25BG0jvwNdQBIOr02Ox2TEaD
      dgZ4nNG7O7Cm3+XypU2yghWP3cD5S7do7exn/s4l5jYKtDTXYtCLGI1GrPoCCZxENkN8ubMR
      gCaPkwsfnaOutYdIMAiAIOrpOz7EUN1xPrgxRndbI5lMDneTC6Qs8VgEs9GC2wDnL9/EaG2h
      uVEmJws0uWwY9DqMRiMuu4GLFy/hdjWgX4uhs9gw3DvkJrc2cXl9296Px9fG2SfOAjA/ZcZZ
      18LGuevF15RJXvja09yZWMJgMGDCgEFQEEUBo8GAQZTJpqPUd/UzkbAgAp6mTm5+dAO9KNJY
      Y39QbFa7E6/XS43biaBNg1YXifAqd2bW+OKTJxHK648da4tTiLVt1NnNqvwDLwBZlikUChiN
      xscy/n5RFIVcLofJZDrsVB6QzWa1fPbgwK8BZFlGkqTy4kOiKAqFQuHA4j8M+Xz+sFPYRi6X
      O+wUtnGU8jkSF8FbK37+5x/8Pu9dGUUbj2k8So7ERXBsc41oOsfq8gqv/cVlgmk7bR6R+YUV
      vvHir9Lb6DzsFDU+pxyJM0Be0fG1r3+dzeAiqXSO5YVZIrE8XzhzjI1I4rDT0/gccyTOAC2d
      Pdz+6dt88fmvkgqMYvP10VxfS4PHRsFqO+z0ND7HHPgsUKFQIJ/PY7FYDiS+JElks1msVuuB
      xN8viqKQTCax2+2HncoD4vE4DofjsNN4wFHK55EOgaR8ksvnz3Px2p0SPSlFIusBtpKVmU1R
      ZIlMJrPn75SlArlcnkI+T77w8YyVLMsVvygvlYuiKMiyvKd/0LNLiiyTy+dRFJm8ypm1fD5f
      tgdJLVIhTyab2zWeosjI8m6/SCGfy5LL75bvzs/z0+heeumllx4mWbXIsowsyxgMBrKpNV75
      yTka21pIhJZYCW0xMXIT0VKDf+w6i+sJzHKCS7enMEgxtlIyN65dw9vg4+blcxQMTkLzd5lc
      CtPSVI9A8UsjSRIGg2HPHM7/7Y/46fvnyYhuaiwCeVkgl0kST6axWCzM3/qA//HKJRJzFxhb
      09FUYyRXyPKTl9+gp6+L8FYUi8XMZmgdndGCXlf6uJHP5/dcl7j41qu88e77RCQndQ6RbEEg
      l0mRTKYITl7l7jq4DBIFQYdRL/LO3/yIDz48x1ZWx+Wr1+hpaySZLSBlUyTTeTLJKLJowKjX
      7ZmP2nWJ5fHL/JcfvslTg/W8/tYIzfU2CopIKhEjmc6QSSUxmkxsbmxgMluIRsK8/PLL9PZ2
      EU1ksFjMqhbXdstHkdL84P/8ERcuXsLbMYCSiSHoTWRTcWKJNIsjF5mLC5iUPAqwFY1jtVpI
      hBb4vz/8Ky5cvsHwmdNENjcwGfWENraQk+u8fv4OHb4aEpkCZrNxR36P/BqgkM+BqOP29Vuc
      +tKT3Lx2hdktCSm6Agj49SKDp06zGpxhPbPJjYsfksmkSClWbGuzXL3jx61Lstw7QItLXfqe
      +nrSYwtk0xF+/GdvEDN5sadDxNIyv/rbvwuAIBeIFRTs+Tg/+n8/IKGzkF5P8Obf/AVXb8/w
      xJOnCW0lsLkb+Wf/6JsP/f493jpSd6bIJqP85K/eYb1QQ52wxVZCprnZTt4hM3nuKnn3MX7t
      n36dtYyJf/lrv0E2EeOvgou8+ZMfMRosMOAT8XYMMnrpHLb2U3zvuz//0DkVUbg9Nku3R0cw
      kUfOxfnrv/hT0sZ6iK6QTGdxuBw0t7Vx7eo1Tpw+y1owRDavcP7t17kwtsjv/O6/w2l+uEFF
      ZiOAo/Msv/z8KYKzd/jRuTHMzlqEsJ9IMk+jrx5LbZY3X5vii8NdnDt/mX/+O/+RzPQkT//8
      ixxrdHD30lvcnlmlxmnmg/M3+MY3vsxsIMFbr/kZXcnw73/7X2P81HHikRaAgEDP4FmefWKI
      H0+NYdXliRegVlFw1NajFBJ4LXre+/Aip3rrMZpM2F01OGvrWLhyAb/pNMbcFoGskZ+z7n3E
      +zRzC8sMDvazEZhlbnkNY72FBo+PpoYChXtnyEY7hPMmjIktFoMbOFo6qKu1k07l6T8xhE0P
      KaebQi77mT6DhaUlTgwOshKYJbgUpOAw0uzzMNRkRrAZWI7EWFzZxG5IgM6EMbvF23/3N8im
      RpAzzM4GSBYcCJ3NDLZ7eOO1CC3ezz5TJmXjTEz7MVlMXLw6CskESyshzHU2mn3tNAsF2ju8
      3JlaprW7j4YaO1uRFAUpydzcDIlElrwk87CjapO7jnX/+7wamsTt9WCxOynkc9iddZxoBMHi
      JYtI58Awucg0qVScdFamrrGB1z76gJu5JB2NLpwuB2a7naaGGiRZj0kvMjc3SzzvuDfs3H4O
      qIqL4HwmwfRsgI7uLtYW5xEtDkw6Eb0o46xrREpukcgUKMgyer2R2GYIg92FLp/CWethdX2L
      7s5mZv1+fG092M17HzfKXQTnM0n8swu0d/WwvrwIRisWvVhsWLOY2AgnkHIpjFYHrU0+cuk4
      M/MrdPd0sxkOI6Vj5DBhtRrw1nqYn5nF7KylpbFuz5zUXHRKuRShSBaf18ZSYBWT2Uo8uoXB
      asOg06FHwWw2IOlMhIJB2ru6WA0sgt6IWZSIpmXa29sw6ssXwF75RDfXWI/l6O5oZnFmmprG
      DjLxMAYd6E02otEoerMdm5hjLRyjoaUDp0VPcGkeyeik0WNnZmaBzo4WZuaW6OzqYCkQxKKT
      ySgGOtpa0ImHUADRaPTAenWUexeHR6UXCI5WrwtAJpPBbFbXHPYoOEr5PJIhkNVqrappUEEQ
      jtQ0KHBkph3vc1TyORIrwRoah4VWABpVjVYAGlWNVgAaVY1WABpVjVYAGlVNBQtAIbS6TE6S
      Gb9zi41oqnKhNTQOiIoVQD4T429ff4NsbJVgXGH87t67dGloHBUqVgAGs4vj/Z1kczKJyDqI
      OrLZLMlkslK/QkOj4lR0JdhoNCKKIiazCaPRgMlkQqfTHbldEjQ07lPRAjj11HMA/NzXmyoZ
      VkPjwNBmgTSqGq0ANKoarQA0qpojsS3KY8H46zDzXmln4Beg++uPJh+NiqAVgFoCV+HaH5V2
      XM1aATxmaEMgjapGKwCNqqaiBSAVCigKZDNpClLpDYk0NI4CFSsAKZfiR3/+Q6KRdS5eucmd
      u/5KhdbQODAqdhEs6Ay0NjUSWV1kK13A6izerJ7L5dDrtWvtSrMUXyIQD5R0WhwttDpaH1FG
      jycV+2aKOgNGox57jYfGnItsYutBb9BRe4LL54HXZl7jD27/QUnn+8Pf5zdO/8YjyujxpKKH
      5mPDZ7E43LQXFrD3nUIQBATh8/goNo3PCxUtAIfLDUBjS3sZU0PjaKBNg2pUNVoBaFQ1WgFo
      VDVaAWhUNdoEvcbnkpkb68TDmZJO9+l6rQA0Pp+M/myZwORWScfTZK9sAciyjCCIgIKiKIii
      NsKqFjb/5E/Y+G//vaRT+yu/Qt2//TePKCN1VK4XKJ/mr//8hyRyMHP7HFfGlioVWuMxQMnm
      kOPx0n+yn+3xUgdBxQpAEHT46uvJJcNsJvIISvFpgJlM6XGYhsZhUrleIL0Rs9lAJpMhl0mx
      ldtAry82YkmSVOZva2gcDhW9BugfPIXN5aHB4yaRExBFEVEUtQLQOLJUtABcNZ7if5isuI/O
      M+I0NPakeqdB1+5CeKa0U38MPD2PJh+NQ6F6C+D2n8GF3yvtfOM/wbO/9Wjy0TgUtIl6jaqm
      es8AGo8V0VCK8ErprfadXgue5v09n1krAI3HgrlbG3z049IbLZz8WivPfrd3X3G1AjgirKfW
      CaVCJZ16az111rpHlFF1oBXAEeEvJ/+SP7zzhyWdXz/56/zaqV97RBlVBxW7CFYUmVvXLpJK
      JTj34YeMTS1UKrSGxoGxawGM37zMyz/+a9768IrqQFI2id8/T17RcerMKdaDKxVLUkPjoNi1
      AOKpDN66emQ5pzqQ3uygrbkeUW/i9uULHBse1h6Sp3Hk2XENkE0ncXobaHM6WduM7StYXUMj
      SnyVmGQkHo3gq2nWHpKncaTZUQDx6BZLczME9CY8TR37CtbZdxyAX3hBe0iexuPBjiGQ3e2l
      zVfLZjhMvqDt8Kzx+WZHAZjNZtajGV544ZskwkFSmaN3F4+GRqXY9SK4vbmBkTsjGI0m1jej
      jzonDY1Hxq4FEFgOEgqtEU8X6Giuf9Q5aWg8MnauBCsKdV4PZruLuKQtFFcrG//rf7Pxe6Xb
      xT3f+xfU/eZvPlT88EqC9cV4Sae20UZ9u/Oh4qtlxzd8fmqMvMlDq7vA/IZ2Q3vVIhVQcqXX
      gZTCw9/qOj+6ycWXS9+QdOobrQdeADuGQJFYkpZmH7X1jWRTpStUQ+NxZ8cZYOjkECMjN8lI
      IsMnT6kOpCgKd+9cp+vYILcvX6W+s5+uluq9fvj9W7/PH4/+cUnn+ye/z/eGvveIMtLYjR0F
      oDNaaWnvwuPx7OvpLlI2zujoBC6rAWv7CdYWp6u6APJynoxUeghZkLVHRx02u17l3r1+ERxe
      amobGBroUhfI7KSzrXHbz7LZLJlMBqPR+Nkz1dA4AHYtAE99A0vrW5ht7n0F89Q14GnrIXD1
      Kg0d/ZhMpkfXCxS8DRvTpR3fMNT1HXwuGo8NuxaAzWYllVzCt88jd/fAIABPP/vcZ89sv9z+
      S7hUenNWvvmftQLQ2MauC2HZTAaPtw5F1nqBND7f7FoAi4EAFrOJiZEbTM9rN7ZofH7ZdQj0
      tRf+HrKicPr0GQRtj3+NzzE7CmDa76e3pwfdYWSjcWDkg0HyK8GSjqHRh6Gpuu7l2FEAy3OT
      LAcCANg9jTwx1P/Ik9KoPJFXXmHjv5bp7fn+v6L+t6prK8gdBdDW2YvdWZz+1JssjzwhDY1H
      yY4CyCe3+NnN25itdrr7B6l1OQ4jLw2NR8KOK9zuY8MMDvThtptJPMyODnKOS+c+ZH5loxL5
      aWgcKDsK4Nbl8yyFIuiNZsymh2hhyISJ5nUElgKVyE9D40DZUQC+5laMOjCYrLQ1+/YdMBmP
      ozebkaWCti+QxpFnRwE0d/Yz1N9JaGWOK7fG9h3Q7KzDKKXx1tVhMpmw2WwVSVRD4yDYeUfY
      5AhRycIL3/qH6PbRDn0fncXNc889W5HkNDQOmh0F0DkwfBh5aGgcClqfg0ZVoxWARlWjFYBG
      VaMVgEZVoxWARlWjFYBGVVP5AlAK3LpykZml9YqH1tCoNBUvgOTKJMG0jlxW21Zd4+hT8QLI
      5bJ4G1sIBZe0XiCNI0/FC8DdOkBhfZbahmatF0jjyFPx/c8FvZUvPqv1Amk8HmizQBpVjVYA
      GlWNVgAaVY1WABpVjVYAGlWNVgAaVY1WABpVzYEUgFTIkkhqT5jUOPocQAEojF1+jzsza5UP
      raFRYSq+EhxfX2AtIaHTpz/TM8LCyRzxTOlHK9VYjdiM2ihO4+GpeAEY7V7aG2tZTMqf6Rlh
      v/feNH/80XxJ5z986xi/+qX2h8xUQ+MACsBktdM7+BRd2tOVNB4DKl4AAIKoQ6+NTDQeA7Sv
      qUZVoxWARlVzIEOg3fjBxXneuVt6avSXn27nhRP735FaQ+NheWQF4F9P8OF06YdmfHWg/hFl
      o6FRRBsCaVQ1WgFoVDUH0gqxurxIIp2rfGgNjQpT8QKQUpusRjLcuH6z0qE1NCpOxQtAZ/XS
      ZJcx2mu0fYE0jjwVL4B8IsRPP7xFW5NX2xdI48hT8WlQndnFP/jWCxhM5kqH1tCoOBUvAFFv
      pLa2ttJhNTQOBG0aVKOq0QpAo6rRCkCjqtEKQKOqqXgByNko77z9Lncm5iodWkOj4lS8ACLL
      fnzHnyARXq10aA2NilPxAjBbbWQSCRAeWae1hsZDU/ECsDb0YsuG6D12vNKhNTQqTuUP04KO
      Y8OnAJBl+cEfow5shtL1phNAkiQADGJ5Xy9+/Dsk0QgGe+ncRAPci48aX9B/wjeo8A0okoSi
      KBgwYNVZS+cv6D9+v/v09ehV+4qioOj1YC3tK3rDg/iqfIP+E75Ota8oCoIIeqNQ0hd0H38f
      EBUVvvLAFw3l4yvICIqiKCWtz0AulyOXy5HP5zGZTNt/uaIgyzI6nW7bz2VZPlBfURSy2Sxm
      s/kz+VD8x/msPkA6ncZisez4eaFQQK/feYzS/NL+bkiShCiKCML2ojjQgbrRaEQURXQ63afe
      gEI+L2Ew6Mhmc9u+vLt/off2778x67ajT+n4Op3uU1/Qh/Ot1p2+oigoirJrPnv5giDs+vlY
      rZbP7N//jHbPZ3d/v/F39wv7zGdvf7/xP40iS0gK6ESBXK6AyfTxToW6l1566aWSf/szcn+I
      YjAYHvxswT/Cez+7TDQaJpXXU+dxPXhNEIQdVb3oH+W9n10iGg2TzOuo/4SvKMXT3ifjL82M
      8e4HF4t+bru/W/yl2Y/9RFak3usu6Qdm7z7w41mBhk/4APl8ftt2kIG5cd59/wLR6BbxDDR4
      a7bF/2TuAMtzE7xzz4+p8FfmJ3jn/Y+IRiNE0wq+upptr+dy278kKwuTvPPe+aKfkvHVbe/d
      +nT84MIUb9/zIympvL84/bGflPDVb/c/nc/qop+33ztHNBphK1Ggsd5TMv7akp+33i364UR+
      h/9JFEVm5OqHXB3xEw4FEUxu3I6Pi+kQFsJknJ4Wejt8gIjFWrp6QcbhaaavowkQsVrKdZnK
      2Gub6O8s+hZL+fj2mib6O5tV52OraWSgq1l1Pja3j4HuFkDAUtZXsLobOHbPLx9fweJq4HhP
      m3rfWf/At1jL+2ZnHSd62+/F3zkU2eE7vJzoK/pq3q/J4WGwr+NePuXjG+0ehvo71OWjSDR3
      HqfJ40AQ9ZjN24vpEApApKbGjazIbK6tkiy7jXrRl5DZXAuSSKZV+gqbq0ESKZXxBdhcDarP
      RxDYXF1Rn889P5kq5wtFXxTZXF0mkUyp8guiSDio3pdEkfDqCsmEunwKgkB4Lag+H/brw9b6
      KslEuRuoBGpqasgrsLW+RqLMDVeCaMDpMIOUZX0jTCq9fZ/aQ2qFUIiGVqnxNQOlr9Tv+7HQ
      KjW+FtV+PLSK29eiOp9EaAWXap+i39Cq2k+GVnA2tKJ2xiEVWsbZUDxKqyEdWsa+Dz+1sYK9
      Xn0+6c0g9jr1n08mvIpjH356aw27t0llPgqZyDp2byOq3q+iEFzbormpDuFT/qH1Aik6E0oh
      h8Wibut0WSz6VpW+JBpBymEtOwQqUhBNCFJOxZAJQKEgGBHkHNayQ6aPfVHOqRiiFP3cPV9t
      PjmM6JQc1rJDmiJ5DPvyc/d9VflDTtEjKjmsZYc09/JR9IhKXrWfU3RFX0U+iiJjstrIpHOY
      zdtn4Q7tDBCJRNHr9ehENSl87Iv79NXGj+7LZ5/5sM98ILK1/3x0+/w89+NHI1FEnR5Rp9KP
      Fn21+d+Pr1MVH2KRGIJOv+u08u75xIr/XsKROAMIuBwWpifHCaxvqfLdzv36VqYnx1laC6vL
      x2nDPzlOYG1TXXyXveiv7s9fCpbeHe++X+N27NufmRpncWVdXT5u5z59B7PTEywuq/RdTub8
      Eywsq3tSkNvtZM4/yUJAXQ+Zy+1g3j/JfCBYPhtBh90kMzExwXp0+zXeITXsCFgdHrrsDgyo
      eZCAgMVeS5fdgV6lb7bV0NXlQK9qVClgtrno6rYhqhtCY7Y69+WbLE66emwIag5YgNHsoLvH
      iqLWN9np7ulC0alLyGiy0d3ThaxyH3ujsRhfVnmENphsdHV3Ian1jVa6ujuRRHVv2Ggsxi+o
      +UAFgZqmbszmAEJ++35Vh9axZna4GBw8gaDyDZsdLoYGT4DKU+q+ffv+/cF9+c6iL+zDHzqB
      ovIkbdqvb9tvfAenT6jNX8Bk259vtDk4tR/famf4xAkEFb4gitjsbp44NYyo3z4NeigFkMsm
      mZ+aZHNzDaOjkee+MFTWX5ieZHNzHaO9geeeGi7rL/qLvsHWwJefLuenWPRPsbm5jt5Wz/NP
      nyzvz0yxsbmOzlrHV754SoU/XfQtXr7ypdNl/aXZoi+aPXz1mTNl/DSBOT8bmyEEcw1fe+Zs
      ST+f+4RvcvO1Z59Q5Yc2QmB08fXnnizrL8/PENoIoRicfOPLXyjrr9zzZYODb375qfLxF2ZZ
      3wgh6x188/m9fUVRSEa38I+PsLY0haf1BKePtT14/VAKYHNtDW9jMw6nneb2zrJ+eH0Nj6/o
      N7V1qfDXqW2475ePvxVap7ahCYfTTmNr+fhboXVq6ou+T4Uf2QhRU99Y9FvK5xPZDOGuK/oN
      KvzoZgiX13fP71ARf+OBX99c3o9ubuD03PfLP5MtGt7AUVuPw+mgrqm8HwtvYH/gt5X3tzax
      19ThcDrwNpb3NzbC+JqasFotdHU0bn9ROWDy+bySSqV2/DydiCqLSytKQZJVxdnLLxQKSjKZ
      3Okno8ri0rKSVxk/k4wpCxXwZVlW4vH4Tj8VUxYWl5V8QV38bCquLCwGlHxB2pef28WPxWI7
      /fTe/q7x0wllYXFJtZ8r4e+WTy6dUBYW9hE/k9yXH9sKKcvBkPLpT/+QZoEkLl+6Si4d5uaI
      X5V/5dJVcuktbo5Mq/czEW7emVKZzxXymSg3b0+qjp/PRLlxe0K1X8jFVPuXL12hkItz/Zba
      +Fco5BLcuDW+L//6zbsqfJmrl65QyKe4fnNMlX/lctG/dmNUXfzLVygU0ly7PrIv/+r1O2Xt
      XGKDm6N+YpvzjPu3zzIdUgGI2Mw6AstrON1OVb7VoiOwvIrDpc63WfQEAms4VMa3WwwEAquq
      fZtVX/RV5mO3GlhaCmJXGd9hNbK0FFSfv83I0tIKdpX5OGymYj6qfKHoL6qN/xC+3czS4jI2
      lb7TZmJpcRm701XW1hmtiIUUq+tRnO7t93QcSgEs+EdYXI1iNJnIpMv1ihS7QReD9/1yvSvF
      btCFlQhGk5Fs2d4bWJq9y/xKGKPJqCp+YPYu88tFP6vGnxtnLrCpOp/luQlmAxuq3+/K/CSz
      S0VfTT4rC5PMLIaK+WTK9T4Vu0H9i+v33q8Kf3Ea/8Kaan910c/0/KrqfNaW/Eyp9BVF5u7N
      K2ylJYxGA5lPff4HekMMFG9ayOfzO/q5C3kJvUH/oL+9NHv7kiSRzWZ39JdXKv5+fUVRSCaT
      2O12Vf5B5wMQj8dxOBxVm0/xfgABvSigwDb/kNYBZCbGxzHqCsiWBga6mlT5Jr1EwVzHsa5m
      Ff4EJr1E3uTheHe5pqziKqFZL5Ez1HK8p1yTm8zkxAQmvUxW7+ZEb7mZiKJvNsikdW4G1fpG
      hbTgZLCv3ExK0bcYIYn9XqtwaX9qcgKzERKyjeGBcjNNyj1fICFbGB4oN/NV9C0mkVjBzMlj
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Auto Suff' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.County, Transit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Person Type' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
