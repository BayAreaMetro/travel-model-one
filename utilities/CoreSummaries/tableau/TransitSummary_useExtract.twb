<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='trnline Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' version='8.3'>
      <connection class='dataengine' dbname='M:\Application\Model One\Value Parking Pricing Pilot\Scenarios\AcrossScenarios\trnline.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1349</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;100_ALAOAKFB&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;93_29SC&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>55</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>10.0</statistic>
              <statistic aggregation='Max' datatype='real'>135.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owner</remote-name>
            <remote-type>5</remote-type>
            <local-name>[owner]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>owner</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>65.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequency</remote-name>
            <remote-type>5</remote-type>
            <local-name>[frequency]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>frequency</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>42</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>3.0</statistic>
              <statistic aggregation='Max' datatype='real'>240.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line time]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>line time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4568</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>2.5099999999999998</statistic>
              <statistic aggregation='Max' datatype='real'>162.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line dist]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>line dist</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>776</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.63</statistic>
              <statistic aggregation='Max' datatype='real'>88.200000000000003</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total boardings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total boardings]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>total boardings</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2470</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>12050.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger miles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[passenger miles]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>passenger miles</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5200</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>212213.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger hours</remote-name>
            <remote-type>5</remote-type>
            <local-name>[passenger hours]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>passenger hours</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1196</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>-13.0</statistic>
              <statistic aggregation='Max' datatype='real'>5539.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[path id]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>path id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>75</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;am_drv_com_wlk&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;pm_wlk_lrf_wlk&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>54</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AC Bus Rapid Transit (BRT)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Westcat-Express&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aggregate Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aggregate Mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Aggregate Mode</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Commuter Rail&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Local&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seats</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Seats]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Seats</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>700.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2015_04_138&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2015_04_142&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2015 (v 0.4), Baseline&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;' value='Change in Daily Average Passenger Seat Miles from the Base' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcto:sum:total boardings:qk:2]&quot;' value='Share of Boardings by Technology' />
        </aliases>
      </column>
      <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Express&quot;' value='Express Bus' />
          <alias key='&quot;Local&quot;' value='Local Bus' />
        </aliases>
      </column>
      <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Total Daily Boardings' datatype='real' name='[Calculation_0410911164937125]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total boardings])' scope-isolation='false' />
      </column>
      <column caption='Average Passenger Distance' datatype='real' name='[Calculation_0500922175655935]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' scope-isolation='false' />
      </column>
      <column caption='Seat Utilization' datatype='real' name='[Calculation_1201121140400432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([passenger miles])/[Calculation_5690911122422973]' scope-isolation='false' />
      </column>
      <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
        <aliases>
          <alias key='&quot;com&quot;' value='Commuter rail' />
          <alias key='&quot;exp&quot;' value='Express bus' />
          <alias key='&quot;hvy&quot;' value='Heavy rail' />
          <alias key='&quot;loc&quot;' value='Local bus' />
          <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
        </aliases>
      </column>
      <column caption='15 please' datatype='integer' name='[Calculation_3921121142551292]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='countd(right([path id],11))' scope-isolation='false' />
      </column>
      <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
      </column>
      <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
      </column>
      <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
      </column>
      <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
      </column>
      <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
      </column>
      <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
        <aliases>
          <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
          <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
          <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
          <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
          <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
        </aliases>
      </column>
      <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
      </column>
      <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
      </column>
      <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='21.0' value='SF Muni' />
          <alias key='24.0' value='SamTrans' />
          <alias key='28.0' value='SC VTA' />
          <alias key='30.0' value='AC Transit' />
          <alias key='42.0' value='County Conn.' />
          <alias key='44.0' value='Tri-Delta' />
          <alias key='66.0' value='Santa Rosa' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[owner]' role='dimension' type='ordinal'>
      </column>
      <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
      </column>
      <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1970908143232145:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;loc&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;com&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;hvy&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;exp&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;lrf&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Aggregate Mode:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Local&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Commuter Rail&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Heavy Rail&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Express&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Light Rail&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>%all%</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#01abe9'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            </map>
            <map to='#1b346c'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#609f80'>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            </map>
            <map to='#8d9876'>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
            </map>
            <map to='#c3ced0'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Housing at Key Stations&quot;</bucket>
            </map>
            <map to='#cbb345'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            </map>
            <map to='#e5c39e'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            </map>
            <map to='#f54b1a'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Calculation_1970908143232145:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;com&quot;</bucket>
            <bucket>&quot;hvy&quot;</bucket>
            <bucket>&quot;exp&quot;</bucket>
            <bucket>&quot;lrf&quot;</bucket>
            <bucket>&quot;loc&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:Scenario:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Housing at Key Stations&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Chart.Across.Boards by Tech' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Typical Weekday Transit Boardings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1620'>Technology:&#9;</run>
                <run bold='true' fontsize='14' indent='1620'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1620'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1620'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1620'>&#10;Boardings:&#9;</run>
                <run bold='true' fontsize='14' indent='1620'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Chart.Across.Supply by Tech' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Change in Transit Passenger Seat Miles by Technology</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:7]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Scenario]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='Change in Passenger Seat Miles' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='2520'>Technology:&#9;</run>
                <run bold='true' fontsize='14' indent='2520'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2520'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='2520'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2520'>&#10;Pct Change:&#9;</run>
                <run bold='true' fontsize='14' indent='2520'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Across.Boards by Tech' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily Transit Boardings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='104' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='96' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='76' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='316' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Across.Supply by Tech' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Technology</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[usr:Calculation_5690911122422973:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='97' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='60' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='264' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Boards by Path, Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Share of Boardings by Mode Choice Path -- </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Drive&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;loc&quot;</bucket>
              <bucket>&quot;lrf&quot;</bucket>
              <bucket>&quot;exp&quot;</bucket>
              <bucket>&quot;com&quot;</bucket>
              <bucket>&quot;hvy&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='92' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' value='33' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:4]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Boards by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Boardings by Technology -- </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:total boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcto:sum:total boardings:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:total boardings:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcto:sum:total boardings:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='115' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='39' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:2]' value='p0.0%' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='200' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Supply by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='21.0' value='SF Muni' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='66.0' value='Santa Rosa' />
              </aliases>
            </column>
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_6080908151147280]' derivation='Sum' name='[sum:Calculation_6080908151147280:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:mode:ok]' member='21.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='24.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='28.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='30.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='42.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='44.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='66.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' direction='ASC'>
            <dictionary>
              <bucket>21.0</bucket>
              <bucket>28.0</bucket>
              <bucket>24.0</bucket>
              <bucket>30.0</bucket>
              <bucket>66.0</bucket>
              <bucket>42.0</bucket>
              <bucket>44.0</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' value='86' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='40' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='212' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:Calculation_6080908151147280:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Supply by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day and Technology - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6080908151147280]' derivation='Sum' name='[sum:Calculation_6080908151147280:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='92' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='56' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='216' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:Calculation_6080908151147280:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Utilization'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Occupied Share of Available Seats by Technology -- </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Seat Utilization' datatype='real' name='[Calculation_1201121140400432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([passenger miles])/[Calculation_5690911122422973]' scope-isolation='false' />
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1201121140400432]' derivation='User' name='[usr:Calculation_1201121140400432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[usr:Calculation_5690911122422973:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:passenger miles:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_1201121140400432:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:passenger miles:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='40' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' value='191' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_1201121140400432:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' value='84' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='168' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Table.Boards by Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='73'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Housing at Key Stations&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Boards by Path, Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='82'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Supply by Tech'>
      <cards>
        <edge name='left'>
          <strip size='193'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='102'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:path id:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:timeperiod:nk]</field>
          <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Supply by Operator'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='88'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:owner:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Across.Supply by Tech'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='84'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:path id:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:timeperiod:nk]</field>
          <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Chart.Across.Supply by Tech'>
      <cards>
        <edge name='left'>
          <strip size='179'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:path id:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:timeperiod:nk]</field>
          <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Across.Boards by Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Chart.Across.Boards by Tech'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='81'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Utilization'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='92'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Table.Boards by Tech' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table.Boards by Path, Tech' width='192'>
      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
      jSwAmS3N/wC39jHFxxNg4QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table.Supply by Tech' width='192'>
      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
      LBucAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table.Supply by Operator' width='192'>
      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
      qO5R3vYesAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table.Across.Supply by Tech' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Chart.Across.Supply by Tech' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table.Across.Boards by Tech' width='192'>
      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
      CYBwtd8+32D5KN65oAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Chart.Across.Boards by Tech' width='192'>
      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
      3/+wad3/B9yo0fTobcurAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table.Utilization' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3dd3hc1YH///edPqOZkUa992Z1y7bce7fBDQw4QCCEkLab/ZKyv2z5fpPd
      TU/ILoQsIbA00wwYG9ywca+y1S1Zxeq99xmNpv/+kGNbtmMDJpSd83oeHh5POfdczf3ce+7M
      KZLH4/EgCF5K9nlXQBA+TyIAglcTARC8mgiA4NVEAASvJgIgeDURAMGriQAIXk0EQPBqIgCC
      VxMBELyaCIDg1UQABK8mAiB4NREAwauJAAheTQRA8GoiAIJXEwEQvJoIgODVRAAEr6b4vCsg
      fIbcLoqO7aK8eQgAucaXuUuWERdkQJI+57r9FUOdVezffxZNXC53LszC1lvL9j2nUIansSpF
      zXslfdyzPIuDu4+RtHAlKaGGj1W+uAJ4E4+LmuLjlDcNYTAaGG44x+//+DIDVufnXbO/arS/
      mYN797L3/Q/osblpLD7G+3v3crigCplSjVGvQ3KOcPrQEZoHxj52+eIK4IUiUmeycdNM6k+4
      KX2vmvGRPra9+Czvn6hCExDPN3/wOCGDhfz2j6/SNy5n4X1/xzfvnMrBl3/P1gPFyI1RfP3/
      /Ii8cA/bnn+aDwoaiMpexPe+/QA17z7Fm+eH0ZnbGJCC+e4//SspihaeeuKPNDmMhKnM6Kdv
      4Xsrwnn2qac5V9dP+tyNPP7tu3j5n+/j/GgAHr8EfvHPf0+gXgmAzscHp2eEppZuWi+2ERcd
      wRAw2naBt/bVszRn4+V9ayzax9PPbaPbrmPNV77FXbNDePmJX3O4og1T/HT+5V9+SKThynlf
      XAG80Ln3nuahBx/i5y8dYt6ilegkK+qwDL79rYcJ8gxQUddMTXEJipg8vvXVu5BbBrF5hig4
      VcW01Q+waWk2owMDXCzcz6k6J2vWr0XZWcbe0xcAcGtC+b9PPMWMgCHOltRz5sMdWKOX8Muf
      /D2hPgrASeEHO7hoC2LT+lX0n9/J0YpeAGLzNvDbf/4mJt2Vc7PcYCI5QEfp+TLq2wdISYy+
      sjNXT+tm72HHWx9gTJnD8pnxnHrvTS40NlB2cYwNj3yHBWl+9PSNTHqLuAJ4oakrH+GxjdOR
      S3K0PjqGmwooyT+NNjCEMYcLUDHrjrvofP9DTp48RZcjiKH1y9j8ja/w4ZnznGpqJmRqMFr1
      AHbcDA+NEjklk3A/DXSBf3g0AUYTASYt3U4ngwP9mCKjCQ6OID7Cj/M4GOgfRfLIGBgyk5o7
      D5PSRTMQHBmDUe/DpFsSSUNKehTbD+5Bp09iTrDE2f4b7JjVQp/VjtxmxqrVkzMtHFPQFLZs
      WUjB+VM0NnegTlxKTqzf5XsecQXwQkqNDl9fX4xGPUq5jP6ORvoschIT41DKPXhc4xQePUin
      08j0vDTGmmvpH+pm7+5jGKLTSI0NoLOpCb/IRAxKiYjoGCz9veiMfjfcXnRcIq0lR9m3by9n
      qjoBNXHJ0UhuFQlJ0XQ3t2EKDgBAkiRudD8enJCOz0gPwWlT8PlrN+z6AFLCjCh8gokMUNAz
      4EY+epH9J2tJyJlOhMFNU0v3pCuA/Kc//elPb+NvKXypeBjo7UAbnExKTODlA81oCsA+1EWP
      zYdp6ZHI/WJYOCudnrrz1LRbmL/+PmZlxBMVpKaiuBSzIoT1m9aRMSWZQIWFsgv1hGXOY1le
      KuODvTgM4UxNjmKguxVt6BTSYn2pLi3GqgnCx9YHoVncuXwBmvEOyqrayFi0jlmpYfS3N+Kf
      MI2Eq77JcVhHGBh1kzMtD8k5RvqMuQQqbZgVgeTEmui2KpmVFU9P9xBx2TOZmZNIX/0FmocV
      LL9zLcmxUZjkoxSWXkAXmcs96xdh0Cgu77skJscV/tZq83fy9Mv7URmN2G0S6x/9e5ZkRHze
      1QJEAITPgMdlp725iUGLHZ1vINGRIShlX4wfHkQABK8mboIFryYCIHg1EQDBq4kACF5NBEDw
      aiIAglcTARC8mgiA4NVEAASvJgIgeDURAMGriQAIXk0EQPBqIgCCVxMBELyaCIDg1a6bFWJg
      YACXy/V51EUQPnNiRJjg1UQTSPBqIgCCVxMBELyaCIDg1W46N6jDNkpHRz/BkbFolbe/sd72
      Bly6EEJNPgA4bWba2jpxuCeel6t0RESEo1Z8MeaMEf73u2kAhjrLePJXb/Hoz58iLfD2N7b3
      hV8wnPVdvrd+KgDDnVX818/+E4chBI1SwjbuYPq6r/Pwypzb35jwheBxjVNy8jA17cMExKaz
      IC8TzaUTnNsxRtGJw9R1jxIQm8PSWak4LT2cOnaGzqFxUmYsYGpSOHLJw3BnHadqRlizaNrl
      ssd7annvcCFuD1hHB/CJyiPVNEBl4wAet5PBoTHm3rGZRJ8Rjh0vYHDMzczla0kM1t/O5Lge
      umoLefFPf+RPL71FY/cIHo+bzroSXnr2jzy39V1aB604x4c5tOMVnnzyD7x94Bw2942/bVUa
      g3nsH3/O7377Gx5cnMDpgjIYqOMPT22l0+agr76Il97YycCohbJju3j6D0+x9d2DDH6BF3UQ
      rjC3V1Lep2H9pnWMVp+kpnPk8nOj7ZWcH9Cz+e71dJx8n+YxN6d2vY8hYwGb1syg6sxphsZd
      9Dae57WXXyC/umtS2ZrgJO69bwv33bMOvcdJdGIMWbNWsmXLFlbNS8Mt0xPtr2T/zv2kLl3P
      hmXJHNp/GudVx+LHDoBrsJ7f/e5Z7H7R+Fhqefq5N+hsb+DF515iRB2EvK+CN/edoa30IPvP
      9xMbJGfn8y9RO+K4cXljQ+x560WeffZZ3j9dx6y8aWDt4/TpEkadbiwD7RSVXaCvpYbXd+xD
      YTDRVHiQo6VNH7fqwufAEJ3LQ5sW4TL3MzIOWvWVtrRv7HQeuWsB1uFehl0KfORmKlpHGLuY
      z66D5UxfugSTxs3AoI0ZyxZw47mnoaviBL2GDKbGByEBHtcY+UfzyVy0DI2rh/phD11nP2DP
      yTbuXL8QxVXTMn7sAPTUldHnn8kDm9aw5a47sfe1UFVXQ79bx6rV63jk8f/Hj7YsxhiWSHIg
      nMovw4Ed+42PfyS5kqDQCKKiY4iP8Od8UQm2G7xO7RdEYoie4sIiNCEJxAQbP27Vhc/NOA3V
      9XgUasbtkz9dj8tJXVUlGoOGEcsAA20DGJNmsmH1dE7v2UWPWSIlN4+44L+29peb0ydLmT5v
      Ohr5xIFt7mqg1mxkWnIILtcIA20DRM1YwYaliWx79X0crtu4AugNRux9rbQMWOlsb8UhKfA3
      mpC7bPQOj9BZc46d+45x4P3tXLSH8P3v3IfmJuXJ1D7kLVjB2jVrWbV4OgMXqhmUJCSsjIza
      6OnqwO4Cq8VCeOZi/vEH/0CwvZbX9pz6uFUXPi+Sjux5i1k8PYBz+bWTnpIpVEydv4qV2f4c
      PdeCX3Q0CSF+qPT+KBxDjIxab172eCu1Zn9SAvWXH+qqv4A+LgODHGQyHSGJSUSbNKhN4Yz1
      NeO8qqvPLVeIGR/s4qffuWdiP2Ryvv/Eizw0v5zf/fAb2NSBbP7ad8nKiWW0oZwX/+MfsKsC
      2PD17zI1K539f97BL/pyCfazMzpqv2H59qEOfv79hycqozay4N5vEBKSwqIUNU88/l0iIoPx
      4I+P0YS5+S1++trLKIxh3PuYuFH+MuirOsLbpR4euWcB/b0WwqODLz/XXXGQdyoUfPve+XR2
      DhGbsRL3QCV1PSOk+w7iUAZg8tPdtHxreyua8Hi0WvmlRzy0dgySlBMGgEYXQbjqME3DDoJt
      DfiEJqNUyC+//6Z9gTxuF3a7Y9KKGkqVBhkTjyPJUKqUyCRp4rUOBzDxmORxY7c7kORKJLcD
      SaHG47KDTHG5AteVL0kolSrkMgmX047D6UEul+F2e1CqlOB2Yne4kGQylMqJ7QpfbB63i9qS
      E5TUdROWOJVZU5MYrCrkgsvE4vRoqotPUlbXS2TaDGZnxYFthPzjx2g3y8mbv4CYwIklXM2D
      DRRUWlk8Nx3HSAvvnWjl7rVzGWm7wPl+HXOy4y41ZxyUnjlDYPJ0IgN04PFgG+3h+NETDHl8
      WbJ8Mf5axeVvgURnOOEz111XTJsngmlJIZ/o/Q5LK8eKhlm2IOO26yICIHzmnPZx3DI1qk/4
      g6fHZcfmlKNRy2/94lsQARC8mugLJHg1EQDBq4kACF7tut8BPB4P4rZA8BbXBcBut4sACF5D
      NIEEryYCIHg1EQDBq4kACF5NBEDwajftDm2z9HHhfO2VASqSRGRyNlH+2r99za4x2FFHdXPv
      pWrIMAZHkxIXhlx0CBVuw00DMNpXy2vPvYBfShp6FYDErIDkzyUAzaWHeXF3DYlJkcgd43T2
      mVn/yD8wPzX41m8WPl8eF1Wn99DpM40lORGXH3bbLeza9hpWjQk5aubfcQehWhkOSx/v7z3G
      glXrCNQ6KT55iNruMVxuBXNXrCI2YPIYgd7qkxxv07N+WQ4KJgbbn/xwL/6Zy8mINNBZW8jR
      okY0OgO58xYRHaDjL+fNWw6IUen92Pz1x0m9PCuEh5M7/kyVM4llKTJ2nWrhztUzObB7D0qN
      ls7uYTLmrWblzAR2vPAEA24TY/pYHl4Sz853d9Pr0LFk7QZy4305sfsdTle2ERCbzb13r0Ez
      1sq219+mdchB5oL1rFuQMWn8ZkDkVL71+APoLL08/1+/p7mzh5C+U+xq1PKDB1eRv+sFaslk
      3dxg3t+2nca+cVJnLWfd4umXZyIQPmt2ig/vY//R48StyJz0jMM2Sq/Tj69t3sxf+nWO9Tex
      6733KG71MGcFWId76LT7suGu1fRVHeLAiQoe2ZB3uYzGkkO8t+8YsvhleACndYij+3ZyuLiR
      jclLcI6PcuBQMSsffpRAunh9+1G2bFmN8lLT4Zb3AHbzIK8/8yt+9atf8evf/DetYxJZubnU
      ntnNn7fuwJSQRZDaQ1tjHeP6GBZMi+X4e29wsdtKZ3M9w6oI1sxLY99rz9GrCCPW380777xL
      bc0FDuefJ3ZKJq6+eiqbemgsOExRp4eZOQlU5J9lwD55luq+lkKe+tWv+M3v/0j1oIrslGjG
      Bnto6ugHYKi3jc7eYRrKTlLWZCU9LYGWqiI6h280ylj4bDgxhGWwZE76dWdb23AL3R1d7Nz+
      DvuPFTLm8OB0yZm5aiWxxomzvC4ghjtWzEejkE2ERDb5RCbXh7Jy6Ry0lwp3uTzE5swhL2li
      RJjb5cIiUxOoVaDQ+NDV2oDT5b78/lsGQKHWMWPBClasWMHy5QswqcAYncWMaCU9Dn9m5yah
      kAE6f2bPnkXerPkE68fp6R8BmZz03FmkJ+ppbRqhq/EC5XVdKCWQjCFkJ0VysbwUi1uJQiYj
      MmMGsRoz+aV16H21uJyTf5HW+8ewaMUKVqxcTrK/kzMlNTesc2RyNlF+Ts6XX0Su8kHyuG/4
      OuGzoCMpLQG9+vrGhsYYw8Ytd7Np0yZinLUcudCFITiK2PCAa49zbCPdnC7tYM6s9EmPRyel
      E+Cjuvxvtd5EYnwMqktneIVaQ4IvFFY1UVNaRIdl8kn1lgGQ5AqCwiKJjIwkMjIEj8POYGMR
      55olItR9HDp1HrvbA2NDnL9QTVN9JQMWJSbfiUHKkkwCDAQGa8hcsImH711LdkYKOpcZlz6a
      jXdtwGRr41jhBbpaO4mYuoR71s2jq/ggFa2WSXVRqvWER0YSHR1FoFFFd08/CqUC62APre1N
      1F26Se7t7CAkdQ6b1sxloKaU803dt9pN4XMgU+mJDgtEkiT0Pir6+oa4vhOOB+tQJ4f2HyJ0
      2gpSg28+RvhaklxD3sLFKMzdOI3BxAWakK4aSnvTewCZXInSY2Prk/92qTQZC+75JhTvJWXx
      RlbFj/HsW4epjlwGMjltpR/yTM8I01bcS1q4lgK9AfXE5YE7t3yFF159i2eOa1i++auERQRj
      cB9l6/+cQO0fw73zcojUDvDhkZf44wEz0VNXMTX2ykh/hUqLpSefJ/6tFCQJ3+BEtmyYSZyi
      i6STz/P7p14h3NcXnUZFWEwEJ49s5fnDA4SlzGL6pcuh8MXgsttwSnLMbaW8X+pg4/Jsmnvs
      TM2Lve6MbBvuZNsrWzHlriMjUo/ZasNHLWPc7kGrUd2w/Kt5XOMc37ubkEWbMVrOE5mdh0px
      ZSvXjQiz2WwfuzPceHcNP//Pl1j96OPMSRTfygjX62+tYkAWTlKEL701pVQ69CxIi6Ottoyq
      pn4iU6cyJTrg0tnZSnlJHfFpaXgsHRQWVmK7dEjqw5KYGa9lz6lG1q+cA8BYXysNgzLSkiIu
      BchFY3UlutAkQvw02Ea6OFtwHplfDLNyk1FcdQX4VALgtPRz6tx5ErLziPT3uY0/k+ANuuuK
      6JbHkRXn/4ne7zA3c6rcxqLZybddl08lAILwcfzl+JI+4bQ2t/v+q93ydwBB+LTd7oH7aRz4
      fyH6AgleTQRA8GoiAIJXu+4eQCaTiZtgwWuImeEEryaaQIJXEwEQvJoIgODVRAAEryYCIHi1
      m3aFGBtq5fSZKnIWriDwL92wR9vZeaiK+WsWEaC69u12qvJPM2xMYFZa1KXHPLhtZupaB0iI
      j0F+KXKtF85QePHSuq+SnODYdGblJHD9kgdjnD1wDP2U2Wj7y2h2R7A4N/GT77EgXOWmVwDL
      UDN7d+6mZ+yqB10OhodHcd3wy1M75ScOcPx806RHSz7YyhsHSrl6gFfT+ePsOVxA/9AQ/Z1N
      vP6n33G44kYDV9yMjY4w7nBRW/AhB85d/Ii7JnxheJyc3fU8755qnPSww9rL2y88y6uvvsyz
      r+7D5vEw1FbOttff4MU/P8O7h0uwXzpmbCNtPPPrf6ey5+oSXBzd/iIvbt3Ks8+9RtvIONah
      Vt7e+hKvv7qVN3cfx3ppMKDbZeGVX/6AU82TRwd+/M5w1n7OnC5l3uY1WIoO8uwru9CFxGLp
      H2L5178KQG/tOX7yw22MauP43mMreeWdU/S4ZbwQHsE3Nky/vFH/2Kk88LXNyEe6GGz5GV29
      A4x29vGHJ5+lccBO0uw7+bv786guLiAkcjaio/WXkZVD297g5PkKElcsnvSMbaAX/6zFLM6N
      Y8fTT1A3spzKvUeZdtcjxBlsnDxRwZjNjUrloOjQHi72jjH/6hPveB9WYypfWT+TCx++QGnN
      AFPcZ7EFTuf+ldHsfOEVmgcWkBrgovbEboraRom75mevjx8At5Ph4VGcrkH2v/kekfPuY1ms
      jT/+aSd250S6XHITD31nLa8+9UvONN7BuuXZHOwJ5+4lGZOaOG2le/nB3x1DJikIiEplblYs
      HdWHiZqxiizLRV4/lU/fpuxLVwC3CMCXkkT6gjvx9XVRd80z+og0Foc6qC44RKXVxEqfQfa1
      D6E8foACi4Wg5Bn4qGV0XSymzhHC1NihyQVoQli9PIS2mnOcujDCkgcMBLqn4Kgs49jRNgZV
      4YT6wlhfPYfqYXHm9SMDP/lNsG2E7iFITp9CypQ0wkxXhi+GxiURExGJv1GDzQFGvQaVRo/R
      R8PVHVlDkufy6MMb0LmsBCVOI8akxDLSR1VJAeUNnbhdbtw3GCUqfJloCA0PQiW/8aEmSTKC
      o6eQHWKjuLGHMauCqQtWcM+9q2krOkpLWwunChqZv3A2yr/SC9oYGM30tFAuVDTQ3daCLiSK
      6JgYjJKZ7r5+jn14knmrVnOjNfVuGQC3w05jTTnl5eVUVFRweYYRtYmoEDlFp05y6uQpWvtH
      r9qr63dyuK+FxrY+rm6BKXW+TMldxP0b51G6fxuF9f2UFhegCEoiOzniBjfEwv8m1qFuOgfH
      CAyLJisxiNoGC8ERfhi0KuRKNZLLTn9XC72Dw5z5cB8XGts5XVB8pQDbCI3tvej9Q8mYkkhX
      SzNNLV1EJqcQn5BKhN5GZW01bd1mKo7tpqiulzOnT+JwXjkKb9oEUqgNhIf6c2rPG5xiYqX4
      LV+5l8TEGDQKA7MWzOKlPSe4IGWi1qmRSwr8w6KwBRiQJBkhkXHojBri4/IIKd1N4YUWEmIC
      kQGGgDCi3f5IMgVp8+9gZWMPRSWVrFp1J6/sOEF31HRmxLixOxWExcQRaFBjDI4kyuX3N/o4
      hM/K+MgAFpkOxUgHe442sXBWGrUtVqYtysAtb6aotJJwzTDy4CRSc+aQN2Me2Id5Y7ibzBm5
      uO0WeoadhBpsHN69m+nz52JuaSUlM4ckZQslFyupdgTQMaYje/50EhfMBY+LfZYa9HPmobzZ
      oPiPzsn7z/w7+6rHiQzQ0Duu5Tv/8D2SQ0RLXbjeSE8zo7JAIgJ96K09T5VVx/zMOPraGmju
      HsE/Ip64UD9wO2iqrWHQJiM+KQk/3aWZH9wO2pqbMIYnoXN2s/dELetWzcPc305tUydqvzCS
      YsNRSC46m+voHLASFBVPdLDvxPs9HrpbalAEpRCgu8mg+I/Dbu6nsqoWiwNCY5OJC/cXv6wJ
      t9TbWEafIpYpUb6f6P0OcwuFF93Mzo297bqI7tCCVxMnbMGriQAIXk0EQPBqIgCCV7vudwCX
      yyUGxQte47oAOJ1OEQDBa4gmkODVRAAEryYCIHg1EQDBq4kACF7tpt2hzf317Nl5FPOlf8tk
      gWz82npEh2Th0+DxeHDax7HaHKg0OtRKBbgdmC1WPIBMoUKn0yADPB43tvFxFGodV/VmxuWw
      MWa1IVdp0KqVl9YO8OCw20CuQimXcDsdWKzjICnw8dEi+6iL5I2beyg6V0zmynUE+4AkGSdW
      4nY5cThdyOQKFHIZHpcTh8uDJE1MrutyuZmohwdkclRKBW6XE6fLg1Kp+FQXOBC+vOyWLt55
      cw9+YUG0dLt5+OENjNWc5OXjbaTHBWMMimNabjIqwDrYxPPPvMyyx/6NtKBLBXgcHHh7K1ZD
      CENdgyy++27i/LTYLX2888YbJC1+gOmxOk7vfYc2jz+e/hZCZtzJ4owI/nII3nJMsFytY8aC
      lVdWineN8vYzT/JBYS2m2Kl887vfwFLwGn/cWY5crWLJ4qkc230CmY+CIB8jg0HZ/P4H91F7
      4i22Frn4//7+fgwqEQABXBYrUxauJTchmN3PPUnDqAdPZxe5C9ewaErAVS8cp+DQAbps17TY
      7SP4p8xj2tRUqo9upapuiLDEQd7eto2GHitJgMvlRBWRxb3TspDGavn9C/nMS7sL1aXhhre8
      Bxgf6uYX3/8qX/3qV/nJc3voLjvCvuoRlt+xniBnA7sOleACtEHx/PPPfsG85GBkaj0P/ehX
      /PCHD6KoPked2UVxYSEZM+ehV4rbDmGCLiSenLgAzh16m5KxIBINEq0NjZSfPcA7b23jwKly
      7G5ou5BPpzaJnCjj5ALUAcyclkpjyUE+KBwiNcEPpSGYe7/+TWbET5yxFWo9edOykPAw0t6O
      Kih40iLct7wCaHyD+dE//Ywkf5DJFfSW7kKpC2TukqVMCTfgDEpEXluJj08QfkY1VrkMpdJI
      YIABrS6Fu1bG8dKv/p1xQwY/nR6NaP0IV5PkSqYu3EiA9n3ePlLDvQ//kOUyBXKZldef20qJ
      vJfjx8qZkh7DhfZe3BeqSVuUOqmMuKwFPOJr5J29x3jggdXomDz3j8ftpObMHopGInjsrlyu
      Hp9/69OxJKFUadBoNKiUCsKy5jMzYJRf/79/YeveEtQ+V63cLV35v8TEYPjceXMYaGkkZ8Zc
      fG40LF/wWr3VJ3h1bwFypYLhQTPBoQEceOsVGgetuMZHUeqDiUubzbe+9TDzZ08nIshEYnzs
      lQJGGvnTSzuwocBqHkEfEMi1S2e7neOc2fUyp/qCuXt5LkqFbNKcDTddJtXlHGd4yILeFHC5
      zQRgt44ybLai1Ogx6rU4rKNYbBJ+JgMeu5WhkXGM/iZk430U5B/nlW0FfP/X/0ai361X9ha8
      h9sxRtnZk9R3jhIQm8qc3DQcA82czC/B6tGRPXMWccG+E60G5xj5x48SOX0NoVIb+wu6WLs4
      l8byfEoudqAJiGR23jRMPkrAQcnJYxiTZhFpMPP+G+8xrvVDo5ShDoxjzYJpKOQTMfibrhPs
      HG7k+RfeI3LmSlbPSkUuE+0f4fY5x7o4UdLL4rmZt12WWChb+NJxO62M2RXodcrbLksEQPBq
      4jtJwauJAAheTQRA8GoiAIJXEzPDCV5NXAEEryYCIHg1EQDBq4kACF5NBEDwajcdD2C3DtHc
      3EN4fDI+Khgf6qJp0E1KbNinPqzROtRFfVvf5X+rDQHERYWiuK4DnYvu5ibGNQEEKiw0D0Na
      fMSnWhfBe9w0AMPdFTzzn2/x6M+fIi0QussP8sQRG3/610eQf8odO7vLD/EffzpEbEwoco+H
      oWEz67/5T6zIDr9mzb2Jxbg7Q2YzzXWWX56U2Pqzxz7dygifurHui+w6XsvK9Wv5S694j32M
      fTveZMCtRY6aRes34DvewqHDBVhcEqnT55GVEIoMDwOtVRyvGWXDsplXleqhraaIc2W1WPFh
      4fLlRJq0uJ02Co9/iCF5AVMi9HTXFnIg/yJIkLPoTjIifT/6mOAbctspOfEBRwtqCUmdydpl
      s1GY29j93h5aBh2k5C1hYbyHl3dV8/Bj9+CoP8Ob53qI9rSjy9rAkuwwivdvo0Gdyd2LMi4f
      4JrgTP71F49jcDvY+pvvU3a+loUpOk7s2kFpUz+hSdNYvzoPjU6Pj0YFlk/8eQifIY/LyvF9
      71HY7MOSO688breN0jSk5LFvbrl8IJ7ctRtt1r2sCh7kxZ0niY3ehLWxmO3bt9NrmseGZVeV
      a21n15GL3P/wPfRVHKKoopHQvCjOHNjBu0cruDdqNh7HGEcOnmPm/d8g0lbF8zuPk/roHSgv
      JeCW9wAO8xDbX3iSJ598ktf2FwHQf/Ekz79zkuDIKC4e3cbus7VUnPqARqsP4fpxdr/xLv2a
      YEaqD1HWbKHo5IeMSSYCjRInj+djGe3iyInzGP39Jp3d7QO1/PnJJ3nyqac534CXHSAAABIT
      SURBVAWZGUl0VZ7hXN0IMWFGju9/n8q2Pjrqqqhr77/dz0X4THhoKTvGiCqGYH/tpGdsI830
      d/Xy7rY3+fB0OTaXB19/EyM93XR196HwMaCSuRmzyZmzciHXrig23HABs1zF8Q92UNqjYu7U
      RBzj4xhiMpmdGgmAw26jx60izleNLjiWsd4GnFctk3rLAMiUauJSMsjIyCAxcmKgcWtdLcP9
      nRz+8EPahsbpbO3EGB6P1tZJcXk9TrcDSR1AXnYchYUnOXeuiZmzc8meNpORtkpKi4oYUoaS
      FR86eVtqI0lJ4dSVFBM59x6WZYehN4USYnBSWlKO2erA4XLfqJrCF5TT3MGx0kEWzMu4rrmh
      0oSyfON67r7nHkKHizl0oQeFzoitr5GKunZ0eh145CRkTiU6UH9d2WazmWGzg/lrNpIXamfP
      kWIUvkHkZKWhuTT5gscDbpmMiZEDEk6nY1J3/1sGQK7Wkjt3KUuXLmVmegwABl9f9BHp/OTX
      v+GhjSuZnxPMwR17cIZN5yvr50/sqEzFjLkzqD7wNk2GbKZG6dBFpJOlH+TN7fsIzZpDiH7y
      n0ThE8Li1Xfzdw8t5+yeNylrG6Xg4LtcHPXnvi0bCNTJQawc/6VSefpDmvuHOHLwKC1NFymu
      arn8nMovnOnpccgkCV9fDe1tPRwvqmHZyhWsXrcGe0spHX1jf7VsnU5HZHwyeqUCU0AAg52d
      2K55jSRJyJ1Oxj2Ax41KpZn0Bc4n+ho0Pm8Fs0LM/NN3v8P2s92ERkSRk51E2Z6XeSe/C6Nu
      jLExJ8b4GSQZ7GTOmouPQg6ShhnzcjGPaZk7PenGG5ckUhbfy5pUFa+9+i5hqVMZrj7I/+w8
      iU6uZHTs2l0UvsiyVjzM//3Rt9myfgXRscnkTom+/Fxv9VGe334at8dFe7eVrMx4wkw+dA1Y
      cJiHcCp80evVf7Vs/8QcXO0XMNuddLS2EBKfiO6a1yg1GsKV45R3jNBfX4oqJBmF4soA95t2
      hrvylIQkcXsjxSSJ7tpidu96n0ZXPP/4fx7EV3kliZfLliQkPt62xExzXwJj/ZwqayJnxjTM
      1ec47zSxLCuO+rLTFFZ3kZA7n+nJoXjsI5w4fITuMQV5CxcRE6BHksAy1ERJjY15M1NwDLfw
      7vEm7r1zPpbeRg4dL0AVksLCWVloFTLASVVRAfqYbKICtFh6Gzl4vACb3MiSlSsJ0Moufwv0
      mfYG7bpYwOHCFmYuXU58iBFx2HqnrrpCOjwx5CYF3frFN+Awt3CsZJRl89Nvuy6iO7TwmXM5
      7Xgk5eWpST4uj9uJwyVD9SnMMigCIHg10RdI8GoiAIJXEwEQvNp1fYHcbvFLq+A9rguAw+EQ
      M8MJXkM0gQSvJgIgeDURAMGriQAIXk0EQPBqtxwS6XbaaKypoK3PgjE4hqzUmE99PPCNeehr
      bUMVEoZR9dFGbloH2iiqqMd16UssrW8w6WnJ+KiuWZvM46Gj7jw9bn/i/FxUtVvIyZxyeRCF
      4D1uemS57RYOvf0CR2pHCQ/Q0dK4neKlD/K1NdMmrbb9N2Fp5r+f2MpdP/k+6R8xACNtFWx9
      cw+pKcmoFB46GhupXP4QD63MuabnqYeBziYaXR70Aw1s299KYnKKCMBnzG0zs+P1V7Drg1Cg
      Zv4dd6DrLOTlDysI9TdgCksld4ov+cfPYnHCaE8Lw/5TeXzLkknldF04ytFWA3evmoY01Mor
      b+1FZ/JH4xPInHk5lB05yKAdHCNd1NrC+PFjm1BfWm7+pkfWUGclx4q7uOfxH5MdruXiuaP0
      GUOQcFF+fA+7Dhfi8gnjjk13k2Qw88prb6LS+tLaY2buwtlcPHOEUUMS3370K5x763fUWP0x
      dzUTMmUWAfYWShpHWLn5QZJcVTzzfgvf/fGD9J/YwdsXlczR19M02MT//Pk1fvDASvI/2Elp
      8xBps5ezbn4au19/gVazizF3GI//8AEMf6m0bxQPPPIYgT4S+1/8DfmN7dhsieTv3sbB4ga0
      gbHc/9ADmId66XUG4An7W3y0wkfhsI8yKAXxyObNl9viNW3NJM9czcqcKx/Mmo3RuMYH2fn6
      NnLmTptURu25few+mI8ifikeYGSwB3V4JpvvmHO5zGXrN+NxOzn42n8TNmcBKvlHHBFm6W5l
      VBZCZIQBSaYgZdYy5qZFYW4u4qWdZ5ixajNz4hW8ve0dOgctdLS2oY3OIM1vnJ17TpO3cjnD
      ZfspabEw3N9Jj1nB/FnplBzeizUojUSfYQ6cPo/TOkpHRx9OYNw8SEfvEBkzZuGrNLFq7VKa
      zu4iv9lOdnocpYd2U1TXxUBvB6OqKO7ZuAifqys9UM9Tv/0l//4fv+R0s4c5M9OxD7VR3+lm
      /sI5mJsKKajqwDLYS+/AKOI3v8/P+GALXe2d7Nj+DnsP5WN2eGhvbqOh/Djb332PoupWnJc+
      n86aQvr1qWRFTR4arwtOZO3yOWguncoHultob6hmx/btHMmvYPxSe9jaXUHpaDhzU4I++pBI
      hdYHpXscm90DeBgfHWTIYqO3vRlZcCKzpmYwM28GTmsfoxYbSr0v2TkzSI4PQh+VwrSMqYT5
      e3A4XQDEpE9j6pQk1P7BTMueSmp8KA6Hc/JGL+2wKTAQpUxNeEQofZ2tjA51U1HVgFavx2a1
      AkqS0jJJTYicvBP6EFauXIzOMYIyLJ2ZaVF4XB6cjkHKiksZHnfjcrk+zuck/I3o/BO478H7
      2LTpLhJlTRw530HGonVs3riBjXcuoC7/CN3DdnCNUVZWT/a0HBTXtLwjYpPw015ZLC80aSb3
      3XcXmzauQ9lVTGnTIHiclOfnkzZ7/uXpUP7ipgEwRU4hUt/Lgf2naG6qY/uLf+DPO0/iGxiC
      vbuBkqpaSkvLkKlN6LVqJElCdum/iXGXsknL0svkson0yWXIJelyEiWlAo+jn7qqesovNk28
      WJKQsNLR2o0xIISAqHTu2byBxIRoYsMmZqeQbrTsqkpPStYs7t9yJ6PVxzla3EBnTSHn25zM
      XbaYYJ1o539ReGQqAgMmJqnSapUMDo2i0Pniq1UiU6pxO6zY7E7sI/20m5XER/vdskyZQou/
      rw5JpkAldzNituJ22KisHyErLYRrb11vejRo/CLZ8tUHsNcd4ak/PEuTK4x1S2bgnzST+1dm
      c3Db83xQOsCmzZsJ89fi52dCKZdQ6QyYDDokScJoCkSrlOFj9EevUSHJVfj7+aGQS6h0RkwG
      LX5xU5mbqmPnK68yKPkR4KsHbTC5WYEc3LGHyJlrSdF08+LLb2LXRxIeYMDga0Kvmbzwtlyl
      I8Dki1ySCJ8yh3WL0jmffxJl5FSSTRYOHCwgOjEFj9OGRu+Hr0GLUuODv58RucjFZ87cVcXO
      vSfp6emhsdvJ9MxYSg69R9HFVrpaGtGEJBLkp8Vs7sNjCCfg0one47IxYrbesMy2ylN8eLqc
      7q5WBl2+TIkLxukcYUAeRMQNxteLZVKFz43H46KzoZLa1kHCEjNIijDhto9yvrQci1tLek4m
      Jq2SsZFOmrthStLEjbHT3MXe0w2sWzEHAOtAB83DEslxYUguG/VV5XQMOoibkklUoB6XY4iK
      qn6ysxKuq4MIgPCl4zC3kF9pZ35e4m2XJQIgeDXR8hW8mgiA4NVEAASvJgIgeLXr+gKNj4+L
      X0oFr3FdANRqtfgWSPAaYmpEwauJewDBq4kACF5NBEDwaiIAglf7SINtHeNmzhZV0TToIDwu
      jkVpoZ/CmGAPdRcu0KkKZX5SIB6Xg3OFZdT2jl95icaXOxek4XvtoPZbqCorZdAQw5x4023W
      Ufjf7pYBsPR38Lvn92D2jSAjTMP219/m4soNfGN+9O3NDuEa48jxCwTODwYm1gSz2x24nWb2
      H6lkyszpxBnkqG4QNLfTTknJRSKyMgi9to+3Z4wDB0pIWB97G5UTbovHQ29LFbtqFHx1efLE
      KC63nT0H8onIzCUnYmLJU4/TQX5BKfX9NpzmAY41wq9/sJra02e50O9gzGxn0cp55IT6gMdN
      ZUkJNZ4wNk4Lv7wp21A3r3xQhkzuwWEI58FlGXRUFPJO2RBRAVp8w2NYmxXCgX1HaXJpsVnG
      WbNmEUmmicEFNw+A28HxI2cxh2fyH1/JQy2TWJIaTsGQA9dQOz9+7hgmPWij0snU9LHtaDV2
      lZEHtqxlTsAwP/6vU6Smajh1vp/7HryLNYkq3tz+IfvLe0hJiaXP6uHR4IkxnjKFivnzZ5Pb
      UsF7x7vYsmkeCRo4f/Ysz+8ro9+hYOnyhdyRqua3z+ykfkRihUXDVKmFP++vxCr34WsPrGdh
      oJlat57VgZq/zYcr3JTH46ahqoIn3zjG/HseRC6BwzrKrn1HOdjg5Mdzr6zjKCmUzJ49g1lu
      O29u2893H1pKkMdKhU8oD8xLoLUin4K6QbIClRScLeClg9U88LW0Sdvr6R0kb/48ssLgf14/
      QZ85keqWYdaumk9WyMQxMNZXT9lYID+6ZyqNRac5XdtPUt7EGtU3vQdwWS2UtA0zOzsehX2U
      Y/kVVA84CDfp6e3qYWDcxdxly/na3EjMLi3ffnQTSyNkFNf30NfcQafbRVbeQjZlGrhQ30Nh
      /llOd6v45+/dTaSrD5vcRJj/VaO6PG5q69pRR4URrZIY72nmmb0XWHjnHfzL5hwKzhTQJ/mz
      KC2CWcuWcP+MILpHZHzrsftZGy+nsLqL1o5utH6+BPr89eU1hb8dl3WYpjE9MxMiSYrSIwGd
      Hd1ExsSSFB2GyefaQ85DR3U5Q8Fp5IZpkdRGFk+Poa78AkcrLWQnmxgZ7MepDSI7NoKI4Mkn
      tqikFOK1FvZ9WIgsNBITZmrahzl3roCnXz/I+e4xlPoAFEPNfHC6jH2VZmYmB1x+/00D4Ha7
      cbg9aFQKxocGKK5p5v39xzhRN0xTWxfRyenkJQbito0x7nRRc+EiRe1jhAdoqW3uI2tGLvMS
      AxkZGSUiIpCLF5uIy5hCSlgAoX4awmMjMV01ytnjdlHZ3ENafCRyaeIPZzcEMi81lEBfPRIu
      XHYrjYMOUmNDcFssmD0yGi9WUtgwSHCwiZaWDgJCIzCoxBqUnweFzsSSadH0ORXE6icOr+iE
      RMINHowBAeivOeJcjnH2FnRxx5y4K2PEJTkR4f44nE40CgV+QWFMjfPDrvYhTHPt5yqh0RsJ
      Ncixu+SoDSa+fv9qHlo7l/XTAjlR3EJtWSXamBRyEkOxWe1o1R95VggdaSE+7D9SQFmvi7y0
      aLRyOVPTImho6iQmPgKNTKLg9BmO1o+gV3swuySifTVUdw2RkxwJzkEqWiSy4k346DS01Tdw
      5HQh+yqGSU8ImlQBp9PKxZYBUuLDkSQJk8kXmWWIkyXVbD9YhF9YHP5KB22Do1iHR8g/XcDB
      2iECNdBrhoQoI7UNvSQmhKEUx//nx9rDiMIfn6smLehs7yc4zHTd0rjm7hZG/aKJ1MqQgObW
      LqxOCAgJJdoow2yfmDVkdLAHuTGQq6/rrrFR6rtHkSvVTIkLw2G1Mjg4jF2mQCmTsFlsaHUy
      apqGmD87lfCQEELVTkadVzo/3PQeQFKoWbNmMc7Dhew/XoJG78uq9XcwO0riHWUo0xP8kICM
      nCzO91fSMOBDRnI4floZemMQ6ZG+OIdbMWWmk+wrJ3rJPFr3lVLZpiA6OZ6sMOOk7bltFvTB
      sWTH+CIBfpGJPLpsiANl1RhC4nhsSS5BKhuZcaE0tfRy7+x0UrpKKR9wkpMQQ4jaxkVjLDlR
      PjfcH+Gz4GGorQtDeAjyy19guGnuGyc5TQe46esdRGX0w6iCmppWklPyLgejo/4iha3DhCnG
      6FcHsdBfC3jo7hgkODwJ8DAyMIhdY8SEjYNHysnOjKWtvonMjKk4BtrZV9NATrQPZfVWli7P
      YVTVR2lJNTaDHUtIAvG6K4e96AskfMo8WEeGGfRoCfNVXzqw3XR0DWIKMKFVQEVRGarELJJ9
      Jfp7B1D4BuB7qVnidthpbO9hzCUnJjIYo1oOeBjsH8SjNeCvVdBeUUpbcCYzQxSMDg3Q1GPG
      x9ePmGADMo+bzs4e+q1uQkICCTaocTvtNLZ2M+ZWEBcVgl51pd0hAiB8ppxjZkqbBsmcEoX6
      EzRT3U4HJReamZKZyKcxxZMIgODVRFcIwauJAAheTQRA8Gr/P7AIIpEfii/BAAAAAElFTkSu
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
