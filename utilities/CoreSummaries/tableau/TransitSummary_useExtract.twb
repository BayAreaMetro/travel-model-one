<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='tableau.timeperiods (Reference)' inline='true' name='excel-direct.41890.624305185185' version='8.3'>
      <connection class='excel-direct' cleaning='no' compat='no' filename='M:\Application\Model One\Value Parking Pricing Pilot\Across Scenarios\Across Tableau\Reference.xlsx'>
        <relation name='tableau#timeperiods$' table='[tableau#timeperiods$]' type='table'>
          <columns header='yes'>
            <column datatype='string' name='time period' ordinal='0' />
            <column datatype='integer' name='effective hours' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>time period</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time period]</local-name>
            <parent-name>[tableau#timeperiods$]</parent-name>
            <remote-alias>time period</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>effective hours</remote-name>
            <remote-type>20</remote-type>
            <local-name>[effective hours]</local-name>
            <parent-name>[tableau#timeperiods$]</parent-name>
            <remote-alias>effective hours</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[tableau#timeperiods$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Effective Hours' datatype='integer' name='[effective hours]' role='measure' type='quantitative'>
      </column>
      <column caption='Time Period' datatype='string' name='[time period]' role='dimension' type='nominal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='trnline Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' version='8.3'>
      <connection class='dataengine' dbname='M:\Application\Model One\Value Parking Pricing Pilot\Across Scenarios\Across Tableau\trnline.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1349</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;100_ALAOAKFB&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;93_29SC&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>55</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>10.0</statistic>
              <statistic aggregation='Max' datatype='real'>135.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owner</remote-name>
            <remote-type>5</remote-type>
            <local-name>[owner]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>owner</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>65.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequency</remote-name>
            <remote-type>5</remote-type>
            <local-name>[frequency]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>frequency</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>42</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>3.0</statistic>
              <statistic aggregation='Max' datatype='real'>240.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line time]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>line time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3734</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>2.5099999999999998</statistic>
              <statistic aggregation='Max' datatype='real'>162.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line dist]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>line dist</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>776</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.63</statistic>
              <statistic aggregation='Max' datatype='real'>88.200000000000003</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total boardings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total boardings]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>total boardings</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1936</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>12293.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger miles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[passenger miles]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>passenger miles</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3884</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>160134.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger hours</remote-name>
            <remote-type>5</remote-type>
            <local-name>[passenger hours]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>passenger hours</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>929</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>-12.0</statistic>
              <statistic aggregation='Max' datatype='real'>4272.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[path id]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>path id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>75</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;am_drv_com_wlk&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;pm_wlk_lrf_wlk&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>54</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AC Bus Rapid Transit (BRT)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Westcat-Express&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aggregate Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aggregate Mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Aggregate Mode</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Commuter Rail&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Local&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seats</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Seats]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Seats</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>700.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2015_04_134&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2015_04_136&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;' value='Change in Daily Average Passenger Seat Miles from the Base' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcto:sum:total boardings:qk:2]&quot;' value='Share of Boardings by Technology' />
        </aliases>
      </column>
      <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Express&quot;' value='Express Bus' />
          <alias key='&quot;Local&quot;' value='Local Bus' />
        </aliases>
      </column>
      <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Total Daily Boardings' datatype='real' name='[Calculation_0410911164937125]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total boardings])' scope-isolation='false' />
      </column>
      <column caption='Average Passenger Distance' datatype='real' name='[Calculation_0500922175655935]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' scope-isolation='false' />
      </column>
      <column caption='Seat Utilization' datatype='real' name='[Calculation_1201121140400432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([passenger miles])/[Calculation_5690911122422973]' scope-isolation='false' />
      </column>
      <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
        <aliases>
          <alias key='&quot;com&quot;' value='Commuter rail' />
          <alias key='&quot;exp&quot;' value='Express bus' />
          <alias key='&quot;hvy&quot;' value='Heavy rail' />
          <alias key='&quot;loc&quot;' value='Local bus' />
          <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
        </aliases>
      </column>
      <column caption='15 please' datatype='integer' name='[Calculation_3921121142551292]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='countd(right([path id],11))' scope-isolation='false' />
      </column>
      <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
      </column>
      <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
      </column>
      <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
      </column>
      <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
      </column>
      <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
      </column>
      <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
        <aliases>
          <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
          <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
          <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
          <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
          <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
        </aliases>
      </column>
      <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
      </column>
      <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
      </column>
      <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='21.0' value='SF Muni' />
          <alias key='24.0' value='SamTrans' />
          <alias key='28.0' value='SC VTA' />
          <alias key='30.0' value='AC Transit' />
          <alias key='42.0' value='County Conn.' />
          <alias key='44.0' value='Tri-Delta' />
          <alias key='66.0' value='Santa Rosa' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[owner]' role='dimension' type='ordinal'>
      </column>
      <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
      </column>
      <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1970908143232145:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;loc&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;com&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;hvy&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;exp&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;lrf&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Aggregate Mode:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Local&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Commuter Rail&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Heavy Rail&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Express&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Light Rail&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>%all%</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#609f80'>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            </map>
            <map to='#8d9876'>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
            </map>
            <map to='#cbb345'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Calculation_1970908143232145:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;com&quot;</bucket>
            <bucket>&quot;hvy&quot;</bucket>
            <bucket>&quot;exp&quot;</bucket>
            <bucket>&quot;lrf&quot;</bucket>
            <bucket>&quot;loc&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Chart.Across.Boards by Tech' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Typical Weekday Transit Boardings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1620'>Technology:&#9;</run>
                <run bold='true' fontsize='14' indent='1620'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1620'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1620'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1620'>&#10;Boardings:&#9;</run>
                <run bold='true' fontsize='14' indent='1620'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Chart.Across.Supply by Tech' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Change in Transit Passenger Seat Miles by Technology</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:7]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Scenario]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='Change in Passenger Seat Miles' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='2520'>Technology:&#9;</run>
                <run bold='true' fontsize='14' indent='2520'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2520'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='2520'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2520'>&#10;Pct Change:&#9;</run>
                <run bold='true' fontsize='14' indent='2520'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Across.Boards by Tech' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily Transit Boardings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='104' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='96' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='76' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='316' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Across.Supply by Tech' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Technology</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[usr:Calculation_5690911122422973:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='97' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='60' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='264' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Boards by Path, Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Share of Boardings by Mode Choice Path -- </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Drive&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;loc&quot;</bucket>
              <bucket>&quot;lrf&quot;</bucket>
              <bucket>&quot;exp&quot;</bucket>
              <bucket>&quot;com&quot;</bucket>
              <bucket>&quot;hvy&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='92' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' value='33' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:4]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Boards by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Boardings by Technology -- </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:total boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcto:sum:total boardings:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:total boardings:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcto:sum:total boardings:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='115' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='39' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:2]' value='p0.0%' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='200' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Supply by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='21.0' value='SF Muni' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='66.0' value='Santa Rosa' />
              </aliases>
            </column>
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_6080908151147280]' derivation='Sum' name='[sum:Calculation_6080908151147280:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:mode:ok]' member='21.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='24.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='28.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='30.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='42.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='44.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='66.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' direction='ASC'>
            <dictionary>
              <bucket>21.0</bucket>
              <bucket>28.0</bucket>
              <bucket>24.0</bucket>
              <bucket>30.0</bucket>
              <bucket>66.0</bucket>
              <bucket>42.0</bucket>
              <bucket>44.0</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' value='86' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='40' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='212' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:Calculation_6080908151147280:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Supply by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day and Technology - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6080908151147280]' derivation='Sum' name='[sum:Calculation_6080908151147280:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='92' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='56' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='216' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:Calculation_6080908151147280:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Utilization'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Occupied Share of Available Seats by Technology -- </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Seat Utilization' datatype='real' name='[Calculation_1201121140400432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([passenger miles])/[Calculation_5690911122422973]' scope-isolation='false' />
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1201121140400432]' derivation='User' name='[usr:Calculation_1201121140400432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[usr:Calculation_5690911122422973:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:passenger miles:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_1201121140400432:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:passenger miles:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='40' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' value='191' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_1201121140400432:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' value='84' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='168' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Table.Boards by Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='73'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Boards by Path, Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='82'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Supply by Tech'>
      <cards>
        <edge name='left'>
          <strip size='193'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='102'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:path id:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:timeperiod:nk]</field>
          <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Supply by Operator'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='88'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:owner:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Across.Supply by Tech'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='84'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:path id:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:timeperiod:nk]</field>
          <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
              </fields>
              <multibucket>
                <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Chart.Across.Supply by Tech'>
      <cards>
        <edge name='left'>
          <strip size='179'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:path id:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:timeperiod:nk]</field>
          <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Across.Boards by Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Chart.Across.Boards by Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='81'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Utilization'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='92'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Table.Boards by Tech' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table.Boards by Path, Tech' width='192'>
      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
      jSwAmS3N/wC39jHFxxNg4QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table.Supply by Tech' width='192'>
      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
      LBucAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table.Supply by Operator' width='192'>
      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
      qO5R3vYesAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table.Across.Supply by Tech' width='192'>
      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
      7tB56DbJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Chart.Across.Supply by Tech' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Table.Across.Boards by Tech' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3dd5hV1aH///c+/ZzpZ3rvw1QGGPrQBQRFimJJNDFGc00xyTXJLfnm3hvT
      bky8STSKiqKAogLSkSIwMMAAwxRmBqYxhelzptfT2/79MThIQDAmv2g8+/U8Po+css46e+/P
      2mutPfssQRRFEYnEQ8k+7wpIJJ8nKQASjyYFQOLRpABIPJoUAIlHkwIg8WhSACQeTQqAxKNJ
      AZB4NCkAEo8mBUDi0aQASDyaFACJR5MCIPFoUgAkHk0KgMSjSQGQeDQpABKPJgVA4tGkAEi+
      dNoq8nhjex62T/FaKQCSL51hQyPFFxtx/sXjLoeNkZFhRk0W3KIIiCg+jwpKJP9YIqJ9iK3r
      XuBYeSNK3wgefOIp5sQrpQBIPEPj2QOc6vLif1/aQM+599i0YzuaeVFSACSeYXhoCH1YDAFa
      FbLIGHC1MTIwIAVA8uVkHWzl6MGDqADUQUxJy6B33/ts3a1iuKaAwNh5pE0MRJB+GU7yZdNR
      eYr9BdXXHtBF8egjy+ipLuZE4UVUQUksXTyXQJ0gBUDi2aRpUIlHkwIg8WhSACQeTQqAxKNJ
      AZB4NCkAEo8mBUDi0aQASDyaFACJR5MCIPFoUgAkHk0KgMSjSQGQeDQpABKPJgVA4tFuuCPM
      brcj3SIg8RQ3DYDb7f486iKR/MNJd4RJPJo0BpB4NCkAEo8mBUDi0aQASDyaFACJR5MCIPFo
      UgAkHk0KgMSjSQGQeDQpABKPJgVA4tGkAEg8mhQAiUeTAiDxaPJnnnnmmZs/5abl0jkKq3uJ
      jgtHLrqoLc6not1CXGQQgiB8pg+0DXdRcDKfqqYe9KGh6FRyhg0N5B0voM+hJSrUn7GS7RQf
      y8MVEImfVsFwVz15R09RVVtL+6hAYmTQeJmu0Q7ySq4QGxmKTPYJ9RLd9DZXcuzkeaxKf8L0
      3je8ZKC9mjMlVwiJDKbuQhEWdSD+OuUnlGel7ORxSuraCA6PRqv8eFsi0nelgvxKA/HRYciu
      bqshQx0FRTV4eSspOluILjgGlX2IK13D6P1Eju85iCI8BT/NZ2yXHCOcOX4Kiy6IIB/N1a/t
      pKXyLC+8tBFCEogL8UN0mig5dYKSSw2oA0IJ8FKPF+F2Wrl4Lp+iyisERMTgpZJhGWgj71g+
      nUaB8NBA5Fe3sXWki/wjR6morqW2tpbLda0Exyeh+xsX3rIMddLa70Dvq/3bCvoUbrGlBXx8
      lBzfuZGC6m4svdWsf/VtXN7BfLZDH3CbeO/F5zhSWk9lwR6ef30vAwNtrP/zC5TXN7Pt5d9S
      0DiK22nm9M43ePHN7TQNWABoKc/n4NlLDA0NMWqyjhcpim4KD26lxmBHuMW3MfbU8vz/raOh
      rZF1v/5fLg+7rq+adYBdm19n1+HTGF0KbJ0VvH3gLJ90s4S15wrb9+5g19ZdlDZ23fB8T10x
      u/OKcLmvlTDQUc3BQ8cZMjsYHRnF4bZy4r0N7D/fCLgwDg1hd/0Nt2c4Rsg/8AHV7YPjD/XV
      F/CHddsZMg3z3vO/prTLRtH+jWzcc5L6S2dYt34LveaPtoWLqrx3eXXnSRpKjvLs+l24xVHe
      +N1vOF/Xwt4Nz/Phxfbxsi3DBg7v30t9ex9DQ0MMD4/i/DvcXfLh23/kSFnr317Qp3CLrAoE
      xGSzan4y27Zuoy9yBK+cVSxKC6a/uZTXXnub1lE5i+/7GitzJ3Dugy3sOFIMXqE88MT3COs6
      ynP7q9Dbh1j81LMsTvUHqxn/pFy+sWgx1B/itb0dtLdepnMkjJ/89xOcWf8byipq8KmrobDH
      hV4mv1oXJ61NzegjU0hMySBzUsZ4LUWXkYKCMnKe+hcKd71IsSWT73x1Dh+uf5be+FV8c1k2
      AtBTV0a3/yT+68mv8+YvvkfppQ5S5sRcDbNI1ZkDVLQZkfsCgpy4zEwGns/H8NBiItQ3bBya
      ayuQBU1iSVIv585fYkFWJFj62LXhVY5XdREZrEOUJ4LTyAdvb+Dg+UYCw/xwoMFuHqDiwgX0
      oT7sOVnBsLyO7WGPUnPmDMGLHibUUcfbb26iomWQpOlLeeyhpZRtX8fRFhea0Q6G1ZF8+wc/
      IFbWzovPv0JDn4WEact5au3kG+ppHujG5RdFcmwoD3xtNQFaJaeHB4nImMeayW5e2FGKxeoC
      nRwcJsrKrjBlyX18Jd3MD3+2l7b2BIp7/Pn5f32Lhh3PUVRaw9LJ0Xy0SeQaHxavepgpMbqr
      j7gpObiZt/YXogpJ4etPPE6S1wjbNr5BYX0fGbl38egDy/FTj7VWtoEm1r3wEjWdRqImLuS+
      Gb4cKWlnuPhVosN/yoqc2L/qgP5r3fJcK8hU5CxZTYytioMXR3l47Z0oZS4OvvcmRv8JzJsU
      w4d7dlPf0k63RcU9a+8lVOylsKIep93C6IjIwz/5GdNjfccK1AWz+qF7iZT1ceDQeWKmTcfH
      MohZ0KDWKgn09cVoNJI2/z6+/8S9BKiu5tM1QrvBhmOog+P732Hd24ewXm1p3OYOWrt9iYzQ
      kZqeSVN1KV0tdRQ128iaEDV+thoeHACNFo1ciX+AP8ZR43jrbumt40BBO/MW5Iy3CBr/CLyF
      Njq6r51txok2KoovEJE1k9zc6QzXFtEx5MRwMZ/DNTa+++//TnqoGkQYaCjmgxIDX/3e08xJ
      DsQFuF1OjMZRdJGZLMpJJmPBfSzPicQ4MoLD5eLotg3066fxn//5Q1QtJ9mRX4nNYsTs9ubh
      b3+PUHsTZ8sbMTQ1ET5pMavnZ1FdUkSX8ca6hmXMY2a4hYrik2zccogRu8ikmXMwFO3g2Vd2
      EJuVS4jf1W6ew8aAyYJWq0ahD8TXOUpP1xB2pRqNXI5/gB7nyOh1K7A7Rvt45X//jaeeeoqf
      r9+Hs6+S1987S8acRUTJDezac5xzx3ZS0qVgwbypNJ8/wpnqj84ibnpbm/BLm8tDS3KoLzyP
      PSqHWWnBTFn+FRZmRNzq8Py7uG1vTeMXztTMBFq6YkgN1QJGug0DmL17aENDUmQ4VoeR3rYm
      Lrd20G+0EX71tC8LiSMzLvq6LpNloIXNr7yGKWwa31o2DUddLwpcuJ1ujBYLSp0Ktc4bMI6/
      z22XMXHxSu5Kn4xgKOCP64vpta4kWgvYrFjRodMJ6JMmEev8gMMnToNfLEnhAeOfq1arEV0u
      XKKI2WREqVKOl1/44S5GdSHIbSNYzUO0dvYxUa9DrXZjd358d4+x9TZSWt/D4JVN1Cuc9A7a
      qKhvI6G/FyEknqyEaLwzk/kw38LI4ACCXyhp8XGY3enkXSoeL0eu1OClVaHx8sVH+9FYw0ZH
      ew+pa6cTHx9BZqKeU919RAGBcROYEBtFcIA3drsd02gftRcb8FFYcbm4SXdNxGKykLlwDTZZ
      HgOGAo6UzMCv5hjhU1ewIl1g86EiOgdnkhCkA5kctUKBy+VGNJkxCSq8vFQILjduwGIygkp1
      Xaup0Pmz9tEfkhamQaH1xdpXzKDbRXdrE2p1MOGBKro7DFit0NrWQ2h0DErcH1UPs3GQ+ksV
      DGhcuFxu5CodOrUcjbcfXppPGH/9Hd1+tCUIKBRyZAr51RfriIkNRR+VypycCSh9fZCPGLjc
      MkDGpKkE+6o/tiOE68cLThP7t2ygok/JjCkpDHYZUIcmECDroCC/kMqWXlJSEm6sg9tK0dF9
      7D1ymvKyGhQhkfiqrj6n9cJLNsLoqIig1DNrRiyFJ84TN2UG/h8bTIbET0DbXc2JwrPUdbhI
      TYliuKuF5o5+3Eov1JYOiioaMI50UVXfjtM5is2qwlurov1KLd3DtvGyGipLcQSk8eR3n+K7
      T32fu6eEcf78Rfwj45AbqskrLOXEuYuIIujDIpEPtnG6uJgzZ4oY+Ys8yQTo62iitWfk6iMa
      YuLCKTv5IUXnT1NY3U9SXOTVrfkxopuLpecRAhKYlBaDXLhZAGC4rYL1r7xFh9GNTK5Eq1Vj
      Mo5iMxsZHjFiNZux28xcaWxg0KlkQlwQVaVFnCsoRoybQEJCAnHyLk6fKeJCdQdxaYl8vEco
      yBUEh0URExNDRLA/utBoQtVy0mcsIiVMh29gFAmJcfj6hZI7ZyY6jZKwYP3V/eqksqwEp1cU
      OZkJKGRj30GQyehpraOj33iTb/QZiCLGvg4GzTf+2MMtZoHG381gZwsD8mBmZSUAAjFxsTSW
      naGssZ8ZC+9kclo81t5malqGSEuLxa4KJD1ERqtZx8JpaeMlOQZaOHr2EuCkua6G5m4LU3Ln
      E+vv4NSJswRmLGL1oimo5QJgo+FSE3HTphMRGEBUiBcVhafotAdw/1fXEhtwdYZAruPKhf0o
      E+8gMViNr5eapm47S5YtJMT72q5S+4YSJOvnWH4pKfPXcuf0ROrPfUBhs8iKtWtZNH8+KWFK
      hl0hPHDfUhxdF8krs3LXPdM5/d6faFFnkRHlC4hUF51EFZ/L0rnZhAQFE+Dlpr6uk+xFdxEp
      dHOyoAzf0AjUfmEsWjCPEOUoZwqKkfmH4OsVQGZGIr1dvaRNnkW4r4uqsnLEoGjo6yN51iKm
      T0plpLmcguJqYqffxZqF2Qx3NmPzjSUnOYz25kZ0kRnMzojk4oVShLAkQtwisVmpjBi6CE+b
      RFywDyDgExSJt91AUVk1YZOXs/aOycTHxdBaWUTFlSEWrryPnCgNe/Z8gDYyjUmZSfTWnqes
      zc79j3yV+LBw4sKUnD6Wjyp2Jvcum4W3amxs5rSO0NTazYQpMwjyHutMCFo9sXqRghMnGJCF
      s2zpXFKSErF1XaagpIrorLnMnpSEUiaAICPQX0PlhVKs/gnEaO2Ep00j2gdqKipQhqeTFO73
      mY97AFEUGe1rYeMLv0NMWEJ84Mc6PaL7n/9XIUTRTfn+V8m3TOIHD8xC/hmnZ68v1EXxntc4
      7cji6bWzqDj6LqNJq5mb6PO3l/15cLtobzcQFhN1+z7vl4zL0c3W1/bSN1THxAd+w8Lka42i
      eaD9nz8AAC5TDxWtJrInxI3PUf9NRCet9fUoQ+II81XR2tZBVGwM8tu/U/IFI4pOHA4ZJ7f8
      CsXc/7wuAC6X6/YNgii6sZhMONwiGq0XauWNh4HodmIyWVFpdagUtx9WiKKIw2FHrlAj/9jL
      x8ox4xIFdF5eKOQyRJcThwvUqhurKooidpsdpVcIGbFGrDYHOq3qs1+n+IigICblWtctNjbm
      by1R8jkRBAUq5c3beLlcfrtBsIihKp///rd/5amnfsDv3jyI/SZl2Xoa+NXP/4fCxt5PVamR
      zho2bngDw8fGOKLoorZgNz/+wfd46vs/4q1DJTjdIhXHtrDl6MWblmPrquLZP27GCBzd8jte
      2X4Gx6eqgUQy5jZnACvFx0+iyV7NK6uj+elP/kjFyruYGmyj8MQx2kYVzFqwgOCPvcNpHaHo
      VD4dJiW5d9xBhK8KU+8Vjp0sRvCPZdG8DIryjlFacRnfmGJWr5iGFnDbzRzPO072mqdZG93O
      0+sPMj/dm6P55+hU9VOeHkeMootThZcQdUHMzp1OTf6HVF9u4dDxEjKzcvFRRiMH+tuqKThf
      iSIwjnm5OcgtHeTnlRIcFU5TcztZuUtJi/ShvvQEF+p7CU3KJnfKhLGBmeRLr7m8BCE+nVg/
      3e1mgeS4TR0c3L2Xy4Mq1nzjSabH+3Hs7d9xqNaKr6uL3XllZKbFUlJcTsrkHKr2v0leoxkf
      Zydb95Yzb14cz/3HzxjQRdJd8SHVw774O3upbesnLiWbtAmRKAFBEDAZLrNrzwEG1XF885sP
      E6G2U3L+LCMyPZnxAbz/1ibMSl/qC4/RYNMTTiclDcOkTspm5NIByvoDSQ8a4NnfvYbbN5DO
      suOca3IyIdrFm89vpNUqw2GoZPuZVpZOcPPT/9tOaLgvJ3fvQ5MyjYTgG/8+SPLlkDB5PnF6
      OYIgMNTZjtXLlyAv7e3OADJS5z/IM0EJ5J04yWvP/g+jP/0lFWU1tPQKtMvA7tbTMjANAKdx
      kIv1DTR1WGmVibjcGirLs6h1xvKnx79GiOIR3MjorxM4fXmIufOn89GfOwlyJfMe+AFBcfkc
      P3mK//15ET999tekxwYiC5zLlPQk7PPmUlxWTufAMN4uGVNzspGddnLXoqmcqNkBQOOlUjTR
      s3js8Ycx1eXzwpt5dOXejdrbn/sf/S6h7XspfK0ah08IkTor5dXtTJq3iMQg6eD/0hKuvx6l
      DgokyHdsevWWARBtQ7z90gs40+7m0Sf+hVHDT2nvGEKrVTBn7XdZM9mP8vpukoPGpgdlcjlq
      tQ+LvvIt7snypuhSLxMidagcJoZMDuSjV2gZVhIqB5fbjcvpRESBANhNvbz0618w4f6f8e3v
      JPBfP/oFnYNjV43cTgeGhhJ27M3nzke+hsqyheGPKul04vjYr1mrNVrMo32Mmm2M9vfiFLSM
      jZ8FZHI5gmxs2GNxCMxd9TViQrzY/+4GdqrCefqhXGmmxwOExySO//8tAyCofJk5cyLrt77J
      0wcElN7RLJ+YhEyzklfee4tfH5ORMnMF09PHLlnLvAJZsnAGb+x6i4rDMhJy7+XuiGxWTz/E
      S//zbyBTMv/eJ0hMDEBhbOP1197i6R99kyAVKDX+zJo5iS2v/4pDAuiS5pMZqaEpJIzaA29x
      gOUEaKx88P4OgjTgNpuR+4YR5GzgF394h4XasdF50uR5JJe+ybP/78cICi8Wrn2McK+hG76b
      Wi3j0sl9fDBgQ5R7sSIlWro5wgPd9jqA6HYy2NuD0eZC56cn0M8L3A76enqwOgX0wSFoZS56
      +gbw0QejVbjp7+nF6pIRGBKCTiXHaTPS3TMICg3BIYEoBRcDvb3YUBMSEoji6vnJ7bTR29OL
      zQV++mB8dWqc1lF6+ofQ+QUiWEcwOWX46uSM2uWEB3rT392FVabDR2HHJngTrPfGbh6hr38Y
      mVpHUJAewWWht3uQgLBIFI4ROgesREaGYBvpp3/IhELjTXBQAAppEOxxvhQXwiSSz0o660s8
      mhQAiUeTAiDxaFIAJB5NCoDEo0kBkHg0KQASjyYFQOLRpABIPJoUAIlHkwIg8WhSACQeTQqA
      xKNJAZB4NCkAEo92wx1h0u0BEk9yQwDsdrsUAonHkLpAEo8mBUDi0aQASDyaFACJR5MCIPFo
      UgAkHk0KgMSjSQGQeDQpABKPJgVA4tGkAEg8mhQAiUeTAiDxaFIAJB5NCoDEo91iiSQ3XY2V
      NA2pyJmSihIXLTVl9IqB5KTHIRM+22oqdmM/lZU1WGQ+ZGSm469TYOxrp6K6Cd/IZDITw68u
      aOaguvgC+tRJhPmoMfa3UXGpEQegC4ljenrctZqaeilpHCQnM/mTV4oX3QwZrnCx3kBYUgYp
      kfobXjLS3cTldhOZE1Mw1NeijUgh3F9zw+uMfW1UVDficAOCgFdAGFnpKWgUn22bjBjqKet0
      Mn9iBIXnqkicOp1g3W3XMP+U3PQ01VDdMraGsyBXEp+WTXSgN7fahS7nMBfOlBM3dT7BXmOP
      9bXV0jIoJyszGdWXpOm8xdcQkLlG2f/eRkobB7ANXOGNV9+g2/43rMTutrB/0zp2HzvLyQNb
      eX3rUYaHu9jy+sscP3uet1/5ExfaTIhOK+V5u1i3/m0a+iwAtFbks/3ACaqrq2lou7Ygtyi6
      KT+xi/OX+xFvUTHzQBOvvfgKZ0vO8fJzf6bZ6L7uebd9hIPb3uS93XmMOGX01Z1j29ESbnZr
      0GDrJbZu20lpeSVVl8rZ89br7Dxd9Vm3Cr11hby55xQ4zdRX1zFic32mckb726i4VIvF+fFH
      3TSVHued3Yeprq7iQsER/u9Pb9Bltt+yLKeth10bN9E8fO2x0b4OGlsMON2f/L5/NrdoZgSC
      E3NYmlPC/t37GAofwp20iMUTIxkx1LLtvZ20GeXMv/te5k+K5dLJ/XyQXw66YFY89AgBPafZ
      cLyBAPswsx75CbmJfmAdxemdyIP33o26JY+NB6/Q3qajudeX7/7iOxS++XtKL9ahbWzgaHUn
      mvEj2kVHSwuhyROZMzuTuKRrq/yJbjNnCkpI/cZDlB/eTKUjla+uyKFg63p6IxbxwIJ0BKCv
      vowWVQq/+97DvP2/P6a0uovY6RFXwyzSWJpHSUM/gm8QCAoSMlLZuaGIvtVzCFbeuHXU+mi+
      8tiThHu7OPDGc1zq6MVpGeTwjnc4V9OJb0Qq33z8EZwtZ9ny/lGGXRoWrnyQBdlR1Jw7yt5j
      hSgCE1n74H3XCnXb6Oo0YHGa2fnyH+lUhGLqakYdmc0jD96DrP8y7+/YS6dRybxVD7J4Utx1
      depuKGbrgSZ++O+paP9i1Ve/+By+8521mNuL+I+fb8VgtNJfepA9eSU41XqW3fdVYiwXWb+7
      DJ23i6w5s8eqZB1k+2sbIfEOUhWD9PSp6W2+wM5dR/D18aK1a4gpS+5j5axkLp3aw668iySl
      plDXauZ7//oYYTrVpzwUPx+3PJEJcg3Tl9xDQH8pe0t6uP/e5WjkLo6+v5FOIZSsOF/27dxF
      U2sbNa0D5OTORjV8hYILddiNg3S09pF731eZEHp1b+hCePAbD5PkZeL06XJCM7LQmQcxC17o
      vFUE+fsyPDxC7ORFfOdbDxCsvnrkuUdp6zAz3FbF++9sYNOuU9ivNs1uSyfNBh1REd7EREdR
      U15MX2cT52p6iY0OGT9bDQ32g84bL6Uavd6fkeHh8dbdNtTCoVMNTJ2ZzUfHulYfiberhbYe
      2023jbW3kXV/+A2/+OVvOFY1TE5WMsbuKzQafVi8aCqGC8eoaDVRkn+YYU00OWnhNFZXYWir
      Y+f+PEKSJuJjbmDL/oJrZxm3DUN7JxaHk8HuTvosapYunoPh0jkuNlzhw9076ZWHkZXgze4N
      WzCMN+KDvPOH3/HGjpP0Gup56fe/YP/5K9fVd+DyaX75y1/y7Ms70WflEK8xU1Hbw6TcefhY
      WjheXIPDPExHbx9TFq4hO1YPoptTu96gbCiARTPTcRoH6OkdxGY10dHSgW/iVHKTvck7cJLe
      oQa2bjvBpDvvJ0I5THtnNw73F//W2tt2NHWBUUzPjMPQE8XEKG/ARHtbD4OCguoRJXptAKMO
      G4LdQtXFCnpGLES7xs6R8tBEZmSmXZcy+2g3OzdvokOZyGPLZiBcOYoMN26XiMVmR6FV4OUX
      CHSPv8ftkJG58G4Wp0yEzgLWvVVM772LiNQAVgsW0RsvL4HglGxCLcc5cbYQp3cUSRHX+vkK
      hQLcbtyiiNVqQaFQjIfjwvH9jHpFkaYZxW430Ts4gp/OG7XGid3uBNQ3bBelbyh3rlhDoA5q
      zn3I+YISMpZHgbGL4pIWLCK4XG6yZy2kev8ZLtUJBMUHMTzQyWD/KLbLVajkCrzcdj6pMxKf
      mcOUDB2HNCcwjw7T0dvLgMNO1ZCK0FAVI0YI1wN4MWfFKkIuneRQURfLVq4lIT7kurK8I9JY
      e+88BJmSsOhYfGXDKAQL1eXl9AxZ8HONdbu0XtFMyknD11yPKIo0NzfjlxSNVnX9CspKXz2T
      J01G19LFvtJmzIPd9DqCmT57IsHtZt47e+x2h9YXwu2HMoIMlUqBQqm8+mINoWEBxE6cxwP3
      LCImOQ7VSDtlNR1kz15AbJD3tRZNkF3/AS4reTs3U9QhcsfiXOQ2I+rgaHwxcKmsloaOPuLi
      om+sg8PI2WMHyC++REtzOzL/QHQfNdVqDVrBhNksIqiCmZETQkHeOSIzp6LXXvv04KgElD2N
      lF2uoclgIz4uAvNwH32DRkZMFowdFzl8qoKh/mbOXajH5TRhtynQapQM9HQybHZcv1nkCnx8
      fPHz88fPW42xv5/a8kLqR7TcuXQuXjJAdNHc2Ezy9DtYOCWB6vISRl06/AIDmL9iLYtyUkmc
      kHiTeN1IrtYSotcTP3kBX1m5gOCIDCIDPnpWReyEVCakJBITG0dqegYRgdf3gVQ+QWRkZJCe
      loLeW81oRz0FVR1kz55HUqgPH/0OgoAwPjgWBBn3PvFDfDsLKazrvel4aLx+fkHoFX2UX7hM
      8YUKXK4v0EBBFLGODmKy31inTzWWV3v5ovfVXf2XnDvv/zpCSwEbdxwjJCaFhJQssuJ9OZl3
      Gn1sPILbgULrTVCAz3XlOAZbqWgaQOEcZOemV3n97X249ancc2c2x7ZvwRE1mwXZ0eOf4xeo
      R62QIfMOY9U9i2g9u5cjlaPc+5WVBFxtkGS6aOIjzRi6rYhA+pTZhIbHMXNywnVfTp84ndWz
      w9i28R2CZ9zP1Dgvas/sY/fRChZ+7d/57W9/y/e/fjcT0mezZnEO1pEuTEIMYf4iH777AnlV
      1wbecrUWb9cwWza8xJ+e/zP5dTZWrL2TSVNmE0Un+07Uk5qVhNNmJSUzk8bCA+w7WcX0hUvI
      ysrhnsVTKdi9mePVg2SkxIytUxzgA4ISfVAgarkcn4BAfLRKkCnw1+vR+QSybNVKnA0n2fB+
      PrETM/D+i0F/zMTF/Ov3HiVI9/FHhbH95+d13Wt9olKZlRzAiSMn0EYm4S86cam9CNT7IgcE
      mRJ9cDDB4cmsuWc2FUVFuFXe+Pt7o1Rp0AcEoJQLKNReBAb6ofOPZ3FuPAfe3kDDoBtBLv9C
      zLGLoojV2Me2V35HaZvjL5+8cZ1gm832T/WzKKLopnjPK1yQz+Jb90xG/hmnZ68v1M3Fw5s4
      MpTIjx+ay+X87XRFLmdBit/fXvaXlN1s4IX//jmjIVkE0Ue7Ipmff/8reP1F1+kfzeXoZev6
      7XQPtzH1oV8wL/Ha+dYy2PHPHwAA10gnhY2jzMxO+eTrAH8N0UFD5SXUEalE+atovNJMfHIS
      n++u/IITRYYNjRRXNSLKtWROmU6Yv+azT5n/3arlwGGXUbD99yhm/+i6ALhczlsHwDzUyomj
      5zFffU6QBbD0vsX4/sOqL5H8HYgix7c8e0MA4DZjAPNIB/lH8uj/KAH/XCcGibKDrOoAABRn
      SURBVOS2bjsNqtB4s+Du+0kNuvqA28SBza9xoLCWwIQcHn/ia+id7bzzxkYq2kbJnn8Pj6ye
      T/nBTbz3YSmCdxiPff9pcuICPvfTocRzRadOReY31om9fDIPe9pkskL0tw+AbaSP5//nKRQy
      iJmxim9OcrP3goFFS+6ktfwk+06UkWY5TaMjiMXzUyksPsL5pBguXbhA6px7iFcN0WPowh0b
      gFxKgOTzIAgkT1ty7d9eGnwVY12h2wZA5R3AAz/4KQkBoNB40X9hD27RRU+XAe+ICYT5QE/b
      EE6bFz0DRhISU/H28Wb5ijUcLaympKeLYHnc2Lji7zFDI5H8jeKzcpArxwJw26laQSbHPzCE
      kJAQ9L46QqJj0aAgZdJkdE4j2uAIEuIi0eoCyEhPwmG34qNxUXjuAmEpU8iI8af2cj2uf4LL
      4hLPoFJrxmcLb3kGUKr9SExJvnbVFQG/+Ok8tqaH/LOn8Y+bxPTUSLyT1tJn2c/54koyZi4h
      OSoKrzvmsO9oITaZP994aAVKqf8j+QL6UlwHkEg+qy/C1WqJ5HMjBUDi0aQASDyaFACJR5MC
      IPFoUgAkHk0KgMSjSQGQeDQpABKPJgVA4tGkAEg8mhQAiUeTAiDxaFIAJB5NCoDEo0kBkHi0
      G+4Ik8uln3+SeI4b7giTSDyJ1AWSeDQpABKPJgVA4tGkAEg8mhQAiUeTAiDxaFIAJB5NCoDE
      o0kBkHg0KQASjyYFQOLRpABIPJoUAIlHkwIg8WhSACQeTf7MM888c/On3NSc2smr28+SNiUb
      rWBh56vPUWBQMzklEuEzLXgn0lSWxyuvvM6hU2Wog2OJClRTdmIXL766mYo2I+npqWgUAvbR
      DtY/92eE+ElE+Klpu3iU537/MgeOHKG8W8ac7MTxMofqz7D+QDVTMhM/caV4l8PMmX2bWffm
      NhoH5WRlxKO47qVuqvK38+buElInTaBw91tccYaQEHbjsuCGqnye+8OLfHD4CMfy8mnstRGf
      EIftyml+/efDZC+ciu6228JK3pZXOdYCQUNF/GZ7OUtnZf31mxQwt5Xx69//iQ8OHubosTyq
      WoaITkjAVzu+thUuxwCv/uq/sUXPJkav+is/QSR/2595aeN+NPETiQ30+kz1/CK6xRlARnzm
      NLRDlRw4dYnuqlN8eHGQubMmIYhO2q9cpqqmnmGLAwDzcC+1VVXU1jdhsrsw9XdQWd9IY00V
      vaP2sSJtvex89wNCpy1jbrKSvds/oLWjjl37zjDr7tVYa45wvKKdoc5aXn/xRc5VjpUF0NlQ
      hRA3gyeffJIHl0wZr6XodnH80H78IxMZ7rpCa9cQItDf0Uhz1+D42t5DzSVsP1rPigdW0njs
      bYpbzXycqbuenXuO0mrowyloiAnTcvjIaew3uV3Ibhmh367m3ocf59GHVjBSeZStR8pQBUQw
      Y3oGGlHENGCgqrKSuqZOHG4RRDd9HU1UVlbR1N6D0+1mpK+H3iEjduMgrV39ALhsRhovV1N9
      uRGjzYlpwEBjUxdOt4OOpnraeoZxO03UV13G5Byrj9tupqPfxV0PfZ3Hv/4Aqu5i3tqZj9Ey
      TH11NY0NDbT2WMiaNptwHxeN1bUMW13gNNNQ18CQxY7NOEBdTRUNLYax+n6MaOvmdEE9Go2J
      c+cuYndf3Z2mQepqqrjc2IrdJSKKIsO9bVRVVtLaPYhbFHHZTTTV1VJb34zZ7kJ0u+jrbKay
      sopmwwAiILqsNNVVU1lVQ/+o7R+6HvstF8nTBESzZsV8/vTOu3QEuMhZ8TCpwWoq895hy+EK
      BAH8k2bwL/fnsnfjq1R3mTENm5jz0PeYbC/gV+8UkRwVwl1P/D+CfVQg82bNt75PUHQEdXmX
      EQQBU08zQ64IpudOwV15hMuNzaTah0mcv5SOuvev1sRKc2M7A9297Nrfx+LVa4kFBMDt7OXC
      hU7uujeW1rI32dPgz398exm7NryKdv7jxIYFANDbXI85dAK5k6dRF/0W9fXt5MamjC3e7bJx
      6vAH2Lz0KB0AAkGJExC2bqVl5EGS/W5sJ2QqHXEJSUT6K1EM1bMur4Lu+DB27Cpn6rIs9v7x
      N1y2+eCymLj78f9gml8nL6/fyqhbxOj24btPf+fGDe6ysO/N5zndOIJcdBKWsZDlWXK27K3m
      ye8+yLvrfot1wv08vUjH79ed5rd//i/G22KZmuj4RFKCvPFydfPnLSU0NPuz4VcvoYpOIHve
      PJr2bmVG7GyubPkTIat/xuLgDl554yjf+s7XKdq3haoOE6IoMGv1N1gzO2W8Wr2XyzB4x/Ot
      ZYlsOlBE1/AcItWj7HjjFUpbRhBdbmbd9wQrkhw899wbONRarA4dT/7bD+g+/jaHyjsQcBM7
      ZTlrcwN5+bn1GNVe2F1Kvv0f/4NQtYt1O86hVQnoEnP50RNr8dP8Y27NvfUYQJARN2URM6Ld
      NFrCuH/xJARsnDxyhFG3Ch+tnMrzZ7nSayY+cyq5MybiLTPTZugDQO6fxL8980tmxF7dTUod
      iclx9NcUsONoDbOXLcTHYcaOHJlchk6txulwkDZnBcty09HIrlbPYcati2L23Pkk+4/y7ubd
      DI+dGBCNvfSYAwkNVpCRMxNjay2XqyposHozLT16fHV6i8WEIJMjE0Cr1eJwOMdbGkPtGUoM
      XizJzRzfIGptCN6aQfoGLLfZhAI6P38UZgtXz3OIoo3BfhP6yCRm5c4kUCcDlQ85s+cxOSUW
      21AfvSPmG0qyGSrYd2GUJ37yX/z86UfoKC1gSBWClkEuVVXQY1Ix0lhFSXklodmTCfqE5kvj
      5YdSsOBwgFzjw/3f/nceuuNq90rQMit3MtWlpVSUleAfm43a3EJRWT1KnTcyWz/HTpzHOV6a
      SFlxEfqgMLz1IaiGOrjU3MOAoZ6KK0N840fP8P9+9G0yIn2oPX+aQf0kfvXrX/HUo3fjZ+3g
      yMkKnAotGrmTinMnaOkZZtQiEp08kVkzJ6HGiWlkCJfch8ycWWQmRSD/B54DbrtQtlztRXx0
      GL7KGAI1MsCFw+4kJn0KMxN9yDSKaCxtvL//EHHT5uDvpR1/r+Dtj5/q4x8h0llzhtc3f8Ck
      FV9n+bREBmoa0Ih1WEx2+oZH8EnwuaEOTqsdVVA4aTnT8B0WOVN+nlE7+GsB0Y0bGTIZaMLS
      mBz4NvsOHsc7YiJRH+ur+vj6I1qMmJ1OBgaHCPbzGQ/H+eMHMfTpOH3WyECvhfzz1aya6Ifs
      U0wRiC4HnU0tEBI03hrLBD9WPfZNrnR1UZKfxxWjLwtD2jmU38HsaYloVDcv2G2341Bo8NEo
      UTm1KBHBJ4ysUBWn8vIJyJqPr+EsBwqUzHnwnpvXx+2ip70ZhyIEbx3IFXJ8fHyQy64FOT1n
      Om+d3sWJ+iGmfG0VKrEOudqH7Gm5+AvZuLyjr5Xn6KWwqIEeWTfPv3wWu91IyblyMu7wQ0SO
      SqnC1z8EwS7SaHeg1GiQCXJCo2LA3IVNVDFhUg4pAQpMLi0x0ak88PAaOjrbOJV3Eoc+g9Uz
      72SNqhZD40U+PF1BSnY22eE3jr3+/3DbANxIx+Rp2ewuq+BCv0APkSTFJON0uhjt62HQaiPA
      5brpO0VzN+9segeDVUtYfTHvD/WxZEE6Mf4H2fjSqwy1G3ng3rQbK6nRYeuo5M3XrhDg7id4
      0h2EXs2Z4BVIkGaA/gE38aFqpuVOIW/9EVb/6DG8PnYWDUudSsTOF3lx3cs09wXxk8xIGoo+
      pN4SSdq8Nfj0WemuL6Ktf4jwEH8c9j7MZl8CfJXk73sL78x7mJoQMF6efbCdbW9tQCNYabjS
      yZJHVqOhAgC3tZ/d77yDPGEiCo0WuSBgs1pwuV10dxtw2N243e4bvqc2Mp0p/tt4dd3L+IsD
      yGJSSQ4NJWjyBHadPcLqVRNRcpmS4lEmpkdd/2ZbH7vf2YSfws2V+iamrHycYPXoTfeDJiKT
      KX5vcrw3nCcSQwkS3UQFKqm+WIp7oJOYhY+MHRiiyEB1MXVCAs/938+I8FLRVLSHP24rxbrs
      a0T6uXh3w59RmzoRk5by3blTsB3dzrpX+mmtruKOx3/MjNQAii9VMqQYxh40g6yYWnbsOEDE
      hETUGjUCUHPmIAcK+5kQqUWhUPD37vyIopumC8dxRC9gQsj1h/wtZoGuUSg1hEbGEhceCEBs
      ajYh3kp0wfGsWnkXibGxxEYE4h0cx9I75uDrpychJpygsGiSYkLHy3FaTDjUfqQkJaD390Mf
      GEJCcipTJqYiQ860JWuYnhx8tWUW0Oj8iE2Ox1fnRUpGJn4qGRGp01l1Zy46xVgrKsi86K4/
      jlGfQ1qED/6BoQRExTMjOxWd6tqmVHkFkp2RiBs1i++9n9RQb6zGYdwqfzImTiQxIYGo8BDC
      opKZmp3CaMN5TrR5c9+dk+mrPk2rIoWMqLGzk0yuxM9fT0CAPwFBESy8+15mpUcilyvxCw4n
      JTWVGVMycDucRKVOZ9XyuSQlpxLooyY2cyZzslIICA0nPDiQiJh4YsKDCQyLJjkhgakzp6OV
      uwmMzuS+NXcS7K1C5xdEaEQkk7MmEhMZTGhyNlOSw8e7a4JcgY9fAIH+/vjrQ5i15B4W5SQj
      lyvw9Q8hITEenUpA6+VPfHIK/jo1IRERJE7IJiUuFLXOn6zMCahkMhInz2fZ3Ikor86mjYya
      iEnNIj02DJkg4OMXiI+XF2HxE8idMQk1EJk2nTXLcvEPjiMnIxKHU8nUJauYm5VA6sRsAtQC
      +tiJrL5rHuFhMWSkROJGQcaMJSzPTSdmwkTCfZQovINZunIN6VF6PtMk402IopP64qOsW7+Z
      8KkriQ+8FgDRZf8y/CyKiKFkD68WK/jZkytQfcI06F9XpI0PN73EQMIKHpoTz5Fd75K8+GES
      ApS3f6/kC8Xp6OLYoctYu/PxW/CfLExWjz9n6u/4MgSA61a2/2zXJ24o8MZhmCDwd2qUJP9A
      Hx0bxzb+EsXc6wMgiuJffyXY7bTSeKUZ1190YS1DBk7nfcixk4UMmJ03fe9IVyP5Z4ox2W4+
      RvhLDvMATa09XP9RIiPdjRw7fIgT5yqwuEQEQWCkq5Gu0ZuX67AM09hiwO2wUXLqMA3dplt/
      sCAg/OV/n6rGki+aW+07QRD+2gCINBbs5PW9BTg+flQ6htjx+jr2n77AucNbeWHzwfEpwY8b
      aL3Ejv3HGLHeOAC8mTN7XmfX6Vo+fljbhjt446U/c/pCFUe2v87GD0qAUd74/a+o7rrZp0L5
      h5t5+2g5ouim19DGiNnxab+w5EvulrNATusIx3Zs4lBRPdqgBB77l5VsffsILXaBN3bE8a2H
      5qACsBlp6x4hKmceyzK0nC4ZwOx00Vx6mE3bjuDwjuKRb36T8Ykt0U7FiQ/YfuAkon8cX3n0
      66QFCxx6bxPHLlwhJDWXRxfHseNEJUOOenbFRPDg3CQA7JZRegZNZOYuYKJPN+d7LZQd2E6Z
      wULVH54j7JnHuLTnXc7WdKKPzWbt8mz2fVhMo6mSTcHeOBqqkKWtwjFiYNvbGym+3E1kxhy+
      /tWVDJXuZNPRZvReZrqHldz72JNk+faz/tVNtAw5mHTHgzy6YiZKuXQ++GcTlpCJzGesva89
      lYczdQqZIQG3PgOYhw10Dmu5a8WdOAzllFy2s2TpFIKTp7Hqjuxr6fEKY/mds2g+s5uXNh/C
      NyYaubmddza+T0hmLoneQ7z1/gEsjrH+mKmrnm378whPm0akvJvN24/RdOEoe8uNfOtff0iC
      wkCzM4L52dEkTbuLRZOuTfl5BcZwx5wpnNv9OhsPlBIbG82EOYuJ9xG485Gv4TdqwKiK4O5F
      s+iuLqPV6kfu1CQiJ83n7hnJDPX3YrI5Obt/MxUjIXz3qW/j23uebQeKMZtH6B40MeuuB0j1
      HeXImQs0XzhFrcmHlUtz6Wu4zIDj5t07yReYIJC14D4ywsYmMQStGp1s7Oi95RnAbbcyNNiB
      oaiLEauI2y0nQO+DUqsgKMBnPD0OqwWv2Mn88MfTaSg/yc5dm4kOfICuQQfW5hp0chX+wSrE
      q3PfxuE+RoZHcTfVo1VqiPAVae00oI1OJjMxiczEpwE4WqRBqwjE30czXie71ULUxMX8ZMZi
      Lubv5Z1X3yNn/VNo5QL60FAUrk76Opvo6XBisTlBocbPR4vKGUCg77WLdC2tLSRPXklyShrD
      WXF8UG/Alg5++jiyslOxl+lpMDuIn7qQyVXvc6aoArcqFLPFDdeqI/knFJ02EaXWG7jNn0J0
      1ZVRZXAza2EugRoBEJEJAqahXtoMvbiuTpW4TT289/rLHL/Ujo+fH3JA4R1CeICGiXNXMDc7
      jpjoaFTKsXl5b/8g/P0DyFmwjNmZMQQmJJAUHYWlpZaSqhreffU5Dpe0giAw0t1GZ9+1Czqm
      /kY2vPgSFW1G/P3G5uVFBAQZtDfUU1Z6lg6TF7Nm5eCtloEIMkHGSF8Hbb3D4+VERUZTW3yS
      ysoKzpc3ERIXyfj8wHgPx0VrbRViaDp33zmbkbrz1Blu/BMGyT8XnbfveDf2lhfCNF5edDVU
      UNtuJiUmFIU+jqkTQqgpKaTLEUB2ehwKARRaXyJ8FZzPP0pZYz+zlz/AvClpxIapOHHoAxoH
      FSxdvhRf1wBXeu3MnreQWD8Xp44dpdWsY+mShcQnJKIdvcL+Q8ex+yWx/I5Z+CvtlJWcx+qb
      QFZc8NU6BaHXmjl+5AiXe0VWPvIVssKDsQ13Unj+Elnz5jF85SJtZjXxgWp8YtJIjfCmurSQ
      flkIXo5uQtPmkjttIqbWMg4fP4tP0ly+smo+7oEW2o1ezJiRylBzPUOqSJbMSqO2MI/84svE
      z7iLu+ZmoVVIt1F8WXwprgNIJJ+V1JRJPJoUAIlHkwIg8WhSACQeTQqAxKNJAZB4NCkAEo8m
      BUDi0aQASDyaFACJR5MCIPFoUgAkHk0KgMSjSQGQeDQpABKP9v8BHoAiD6vtXwEAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Chart.Across.Boards by Tech' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table.Utilization' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
