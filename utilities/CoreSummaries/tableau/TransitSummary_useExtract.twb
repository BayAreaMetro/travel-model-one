<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='trnline Extract' inline='true' name='trnline.tde' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='trnline Extract' name='trnline.tdeleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='trnline.tde' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='trnline.tdeleaf' name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1346</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>57</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owner</remote-name>
            <remote-type>5</remote-type>
            <local-name>[owner]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>owner</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequency</remote-name>
            <remote-type>5</remote-type>
            <local-name>[frequency]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>frequency</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>64</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line time]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>line time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3991</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line dist]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>line dist</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>779</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total boardings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total boardings]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>total boardings</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2359</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger miles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[passenger miles]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>passenger miles</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4413</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger hours</remote-name>
            <remote-type>5</remote-type>
            <local-name>[passenger hours]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>passenger hours</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1267</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[path id]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>path id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>75</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>53</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aggregate Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Aggregate Mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Aggregate Mode</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seats</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Seats]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Seats</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>129</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;' value='Change in Daily Average Passenger Seat Miles from the Base' />
          <alias key='&quot;[trnline.tde].[pcto:sum:total boardings:qk:2]&quot;' value='Share of Boardings by Technology' />
        </aliases>
      </column>
      <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Express&quot;' value='Express Bus' />
          <alias key='&quot;Local&quot;' value='Local Bus' />
        </aliases>
      </column>
      <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Total Daily Boardings' datatype='real' name='[Calculation_0410911164937125]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total boardings])' scope-isolation='false' />
      </column>
      <column caption='Average Passenger Distance' datatype='real' name='[Calculation_0500922175655935]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' scope-isolation='false' />
      </column>
      <column caption='Seat Utilization' datatype='real' name='[Calculation_1201121140400432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([passenger miles])/[Calculation_5690911122422973]' scope-isolation='false' />
      </column>
      <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
        <aliases>
          <alias key='&quot;com&quot;' value='Commuter rail' />
          <alias key='&quot;exp&quot;' value='Express bus' />
          <alias key='&quot;hvy&quot;' value='Heavy rail' />
          <alias key='&quot;loc&quot;' value='Local bus' />
          <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
        </aliases>
      </column>
      <column caption='15 please' datatype='integer' name='[Calculation_3921121142551292]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='countd(right([path id],11))' scope-isolation='false' />
      </column>
      <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
      </column>
      <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
      </column>
      <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
      </column>
      <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
      </column>
      <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Mode Number' datatype='real' name='[Calculation_812618261621207040]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[mode]' />
      </column>
      <column caption='Average Passenger Miles per Boarding' datatype='real' name='[Calculation_861594907227541504]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' />
      </column>
      <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
        <aliases>
          <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
          <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
          <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
          <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
          <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
        </aliases>
      </column>
      <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
      </column>
      <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
      </column>
      <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='10.0' value='West Berkeley' />
          <alias key='11.0' value='Broadway Shuttle' />
          <alias key='12.0' value='Emery Go Round' />
          <alias key='13.0' value='Stanford Shuttles' />
          <alias key='14.0' value='Caltrain Shuttles' />
          <alias key='15.0' value='VTA Shuttles' />
          <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
          <alias key='19.0' value='San Leandro Links' />
          <alias key='20.0' value='SF Muni - Cable Cars' />
          <alias key='21.0' value='SF Muni - Local' />
          <alias key='24.0' value='SamTrans' />
          <alias key='28.0' value='SC VTA' />
          <alias key='30.0' value='AC Transit' />
          <alias key='33.0' value='WHEELS - Local' />
          <alias key='38.0' value='Union City Transit' />
          <alias key='42.0' value='County Conn.' />
          <alias key='44.0' value='Tri-Delta' />
          <alias key='46.0' value='WestCAT - Local' />
          <alias key='49.0' value='Vallejo Transit - Local' />
          <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
          <alias key='55.0' value='American Canyon Transit' />
          <alias key='56.0' value='Vacaville City Coach' />
          <alias key='58.0' value='Benicia Breeze' />
          <alias key='60.0' value='VINE' />
          <alias key='63.0' value='Sonoma County Transit' />
          <alias key='66.0' value='Santa Rosa' />
          <alias key='68.0' value='Petaluma Transit' />
          <alias key='70.0' value='GGT - Local' />
          <alias key='80.0' value='SamTrans - Express' />
          <alias key='81.0' value='SC VTA - Express' />
          <alias key='82.0' value='Dumbarton Express' />
          <alias key='84.0' value='AC Transit - Transbay' />
          <alias key='86.0' value='County Connection - Express' />
          <alias key='87.0' value='GGT - Express SF' />
          <alias key='88.0' value='GGT - Express Richmond' />
          <alias key='90.0' value='WestCAT - Express' />
          <alias key='91.0' value='Vallejo Transit - Express' />
          <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
          <alias key='93.0' value='VINE - Express' />
          <alias key='94.0' value='SMART - Temp Express' />
          <alias key='100.0' value='Easy Bay Ferries' />
          <alias key='101.0' value='GGT - Larkspur' />
          <alias key='102.0' value='GGT - Sausalito' />
          <alias key='103.0' value='Tiburon Ferry' />
          <alias key='104.0' value='Vallejo Baylink Ferry' />
          <alias key='110.0' value='SF Muni - LRT' />
          <alias key='111.0' value='SC VTA - LRT' />
          <alias key='120.0' value='BART' />
          <alias key='121.0' value='Oakland Airport Connector' />
          <alias key='130.0' value='Caltrain' />
          <alias key='131.0' value='Amtrak - Capitol Corridor' />
          <alias key='132.0' value='Amtrak - San Joaquin' />
          <alias key='133.0' value='ACE' />
          <alias key='135.0' value='SMART' />
          <alias key='136.0' value='E-BART' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[owner]' role='dimension' type='ordinal' />
      <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
      <column datatype='string' name='[src]' role='dimension' type='nominal' />
      <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
      <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.446701' measure-ordering='alphabetic' measure-percentage='0.553299' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1970908143232145:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;loc&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;com&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;hvy&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;exp&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;lrf&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Aggregate Mode:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Local&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Commuter Rail&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Heavy Rail&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Express&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Light Rail&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>%all%</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:mode:ok]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>104.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>46.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>120.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>30.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>66.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>44.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>102.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>12.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>100.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>13.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>24.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>33.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>110.0</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>91.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>21.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>42.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>135.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>49.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>101.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>70.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>84.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>81.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>92.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>63.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>130.0</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>90.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>82.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>88.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>80.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>133.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>28.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>86.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>14.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>87.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>111.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>131.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' palette='tableau-20' type='palette'>
            <map to='#01abe9'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            </map>
            <map to='#1b346c'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Year 2035, Scenario 2 (v 3)&quot;</bucket>
            </map>
            <map to='#609f80'>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            </map>
            <map to='#8d9876'>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Year 2040, Plan Bay Area&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;CG 07 Baseline&quot;</bucket>
            </map>
            <map to='#c3ced0'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Housing at Key Stations&quot;</bucket>
            </map>
            <map to='#cbb345'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Year 2035, Scenario 3 (v 3)&quot;</bucket>
            </map>
            <map to='#e5c39e'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            </map>
            <map to='#f54b1a'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Year 2035, Scenario 1 (v 3)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;CG 07 ShortTrips &quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Calculation_1970908143232145:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;com&quot;</bucket>
            <bucket>&quot;hvy&quot;</bucket>
            <bucket>&quot;exp&quot;</bucket>
            <bucket>&quot;lrf&quot;</bucket>
            <bucket>&quot;loc&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:Calculation_8680908142300827:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;ea&quot;</bucket>
            <bucket>&quot;am&quot;</bucket>
            <bucket>&quot;md&quot;</bucket>
            <bucket>&quot;pm&quot;</bucket>
            <bucket>&quot;ev&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:Scenario:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Housing at Key Stations&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Chart.Across.Boards by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Typical Weekday Transit Boardings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[trnline.tde].[none:Aggregate Mode:nk]' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[trnline.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
            <format attr='font-family' field='[trnline.tde].[sum:total boardings:qk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Aggregate Mode:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[trnline.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='1620'>Technology:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='1620'>&lt;[trnline.tde].[none:Aggregate Mode:nk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='1620'>Scenario:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='1620'>&lt;[trnline.tde].[none:Scenario:nk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='1620'>Boardings:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='1620'>&lt;[trnline.tde].[sum:total boardings:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[trnline.tde].[sum:total boardings:qk]</rows>
        <cols>([trnline.tde].[none:Aggregate Mode:nk] / [trnline.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Chart.Across.MilesPerBoard by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Average Passenger Miles per Boarding' datatype='real' name='[Calculation_861594907227541504]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='10.0' value='West Berkeley' />
                <alias key='11.0' value='Broadway Shuttle' />
                <alias key='12.0' value='Emery Go Round' />
                <alias key='13.0' value='Stanford Shuttles' />
                <alias key='14.0' value='Caltrain Shuttles' />
                <alias key='15.0' value='VTA Shuttles' />
                <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
                <alias key='19.0' value='San Leandro Links' />
                <alias key='20.0' value='SF Muni - Cable Cars' />
                <alias key='21.0' value='SF Muni - Local' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='33.0' value='WHEELS - Local' />
                <alias key='38.0' value='Union City Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='46.0' value='WestCAT - Local' />
                <alias key='49.0' value='Vallejo Transit - Local' />
                <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
                <alias key='55.0' value='American Canyon Transit' />
                <alias key='56.0' value='Vacaville City Coach' />
                <alias key='58.0' value='Benicia Breeze' />
                <alias key='60.0' value='VINE' />
                <alias key='63.0' value='Sonoma County Transit' />
                <alias key='66.0' value='Santa Rosa' />
                <alias key='68.0' value='Petaluma Transit' />
                <alias key='70.0' value='GGT - Local' />
                <alias key='80.0' value='SamTrans - Express' />
                <alias key='81.0' value='SC VTA - Express' />
                <alias key='82.0' value='Dumbarton Express' />
                <alias key='84.0' value='AC Transit - Transbay' />
                <alias key='86.0' value='County Connection - Express' />
                <alias key='87.0' value='GGT - Express SF' />
                <alias key='88.0' value='GGT - Express Richmond' />
                <alias key='90.0' value='WestCAT - Express' />
                <alias key='91.0' value='Vallejo Transit - Express' />
                <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
                <alias key='93.0' value='VINE - Express' />
                <alias key='94.0' value='SMART - Temp Express' />
                <alias key='100.0' value='Easy Bay Ferries' />
                <alias key='101.0' value='GGT - Larkspur' />
                <alias key='102.0' value='GGT - Sausalito' />
                <alias key='103.0' value='Tiburon Ferry' />
                <alias key='104.0' value='Vallejo Baylink Ferry' />
                <alias key='110.0' value='SF Muni - LRT' />
                <alias key='111.0' value='SC VTA - LRT' />
                <alias key='120.0' value='BART' />
                <alias key='121.0' value='Oakland Airport Connector' />
                <alias key='130.0' value='Caltrain' />
                <alias key='131.0' value='Amtrak - Capitol Corridor' />
                <alias key='132.0' value='Amtrak - San Joaquin' />
                <alias key='133.0' value='ACE' />
                <alias key='135.0' value='SMART' />
                <alias key='136.0' value='E-BART' />
              </aliases>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_861594907227541504]' derivation='User' name='[usr:Calculation_861594907227541504:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1970908143232145:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[trnline.tde].[none:mode:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='12.0' function='range' level='[none:mode:ok]' to='14.0' />
              <groupfilter from='21.0' function='range' level='[none:mode:ok]' to='33.0' />
              <groupfilter from='42.0' function='range' level='[none:mode:ok]' to='49.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='63.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='66.0' />
              <groupfilter from='70.0' function='range' level='[none:mode:ok]' to='84.0' />
              <groupfilter from='86.0' function='range' level='[none:mode:ok]' to='92.0' />
              <groupfilter from='100.0' function='range' level='[none:mode:ok]' to='102.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='104.0' />
              <groupfilter from='110.0' function='range' level='[none:mode:ok]' to='120.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='130.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='131.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='133.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='135.0' />
            </groupfilter>
          </filter>
          <computed-sort column='[trnline.tde].[none:mode:ok]' direction='DESC' using='[trnline.tde].[sum:passenger miles:qk]' />
          <slices>
            <column>[trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[trnline.tde].[none:mode:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[trnline.tde].[none:Scenario:nk]' value='35' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[trnline.tde].[usr:Calculation_861594907227541504:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-family' field='[trnline.tde].[usr:Calculation_861594907227541504:qk]' value='Arial Narrow' />
            <format attr='font-family' data-class='subtotal' field='[trnline.tde].[usr:Calculation_861594907227541504:qk]' value='Calibri' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[trnline.tde].[none:Scenario:nk]' value='232' />
            <format attr='height-header' value='52' />
            <format attr='width' field='[trnline.tde].[none:Aggregate Mode:nk]' value='108' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[trnline.tde].[none:mode:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Aggregate Mode:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Scenario:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[trnline.tde].[none:Scenario:nk]' />
              <text column='[trnline.tde].[usr:Calculation_861594907227541504:qk]' />
              <lod column='[trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([trnline.tde].[none:Aggregate Mode:nk] / ([trnline.tde].[none:mode:ok] / [trnline.tde].[none:Scenario:nk]))</rows>
        <cols>[trnline.tde].[usr:Calculation_861594907227541504:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Chart.Across.Supply by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Change in Transit Passenger Seat Miles by Technology</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:7]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[trnline.tde].[Scenario]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[trnline.tde].[none:Calculation_0330908142738987:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='Change in Passenger Seat Miles' />
            <format attr='subtitle' class='0' field='[trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[trnline.tde].[none:Aggregate Mode:nk]' value='48' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[trnline.tde].[none:Scenario:nk]' value='false' />
            <format attr='font-family' field='[trnline.tde].[none:Aggregate Mode:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[trnline.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='2520'>Technology:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='2520'>&lt;[trnline.tde].[none:Aggregate Mode:nk]&gt;</run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='2520'>Scenario:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='2520'>&lt;[trnline.tde].[none:Scenario:nk]&gt;</run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='2520'>Pct Change:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='2520'>&lt;[trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]</rows>
        <cols>([trnline.tde].[none:Aggregate Mode:nk] / [trnline.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Across.Boards by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily Transit Boardings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[trnline.tde].[none:Aggregate Mode:nk]' value='104' />
            <format attr='height' field='[trnline.tde].[none:Scenario:nk]' value='76' />
            <format attr='text-format' field='[trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[trnline.tde].[none:Aggregate Mode:nk]' value='76' />
            <format attr='width' field='[trnline.tde].[none:Scenario:nk]' value='316' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[trnline.tde].[none:Aggregate Mode:nk]' value='true' />
            <format attr='text-format' field='[trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
            <format attr='font-family' field='[trnline.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Aggregate Mode:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[trnline.tde].[none:Scenario:nk]</rows>
        <cols total='true'>[trnline.tde].[none:Aggregate Mode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Across.MilesPerBoard by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Mode Number' datatype='real' name='[Calculation_812618261621207040]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[mode]' />
            </column>
            <column caption='Average Passenger Miles per Boarding' datatype='real' name='[Calculation_861594907227541504]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='10.0' value='West Berkeley' />
                <alias key='11.0' value='Broadway Shuttle' />
                <alias key='12.0' value='Emery Go Round' />
                <alias key='13.0' value='Stanford Shuttles' />
                <alias key='14.0' value='Caltrain Shuttles' />
                <alias key='15.0' value='VTA Shuttles' />
                <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
                <alias key='19.0' value='San Leandro Links' />
                <alias key='20.0' value='SF Muni - Cable Cars' />
                <alias key='21.0' value='SF Muni - Local' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='33.0' value='WHEELS - Local' />
                <alias key='38.0' value='Union City Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='46.0' value='WestCAT - Local' />
                <alias key='49.0' value='Vallejo Transit - Local' />
                <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
                <alias key='55.0' value='American Canyon Transit' />
                <alias key='56.0' value='Vacaville City Coach' />
                <alias key='58.0' value='Benicia Breeze' />
                <alias key='60.0' value='VINE' />
                <alias key='63.0' value='Sonoma County Transit' />
                <alias key='66.0' value='Santa Rosa' />
                <alias key='68.0' value='Petaluma Transit' />
                <alias key='70.0' value='GGT - Local' />
                <alias key='80.0' value='SamTrans - Express' />
                <alias key='81.0' value='SC VTA - Express' />
                <alias key='82.0' value='Dumbarton Express' />
                <alias key='84.0' value='AC Transit - Transbay' />
                <alias key='86.0' value='County Connection - Express' />
                <alias key='87.0' value='GGT - Express SF' />
                <alias key='88.0' value='GGT - Express Richmond' />
                <alias key='90.0' value='WestCAT - Express' />
                <alias key='91.0' value='Vallejo Transit - Express' />
                <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
                <alias key='93.0' value='VINE - Express' />
                <alias key='94.0' value='SMART - Temp Express' />
                <alias key='100.0' value='Easy Bay Ferries' />
                <alias key='101.0' value='GGT - Larkspur' />
                <alias key='102.0' value='GGT - Sausalito' />
                <alias key='103.0' value='Tiburon Ferry' />
                <alias key='104.0' value='Vallejo Baylink Ferry' />
                <alias key='110.0' value='SF Muni - LRT' />
                <alias key='111.0' value='SC VTA - LRT' />
                <alias key='120.0' value='BART' />
                <alias key='121.0' value='Oakland Airport Connector' />
                <alias key='130.0' value='Caltrain' />
                <alias key='131.0' value='Amtrak - Capitol Corridor' />
                <alias key='132.0' value='Amtrak - San Joaquin' />
                <alias key='133.0' value='ACE' />
                <alias key='135.0' value='SMART' />
                <alias key='136.0' value='E-BART' />
              </aliases>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_812618261621207040]' derivation='None' name='[none:Calculation_812618261621207040:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_861594907227541504]' derivation='User' name='[usr:Calculation_861594907227541504:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1970908143232145:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[trnline.tde].[none:mode:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='12.0' function='range' level='[none:mode:ok]' to='14.0' />
              <groupfilter from='21.0' function='range' level='[none:mode:ok]' to='33.0' />
              <groupfilter from='42.0' function='range' level='[none:mode:ok]' to='49.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='63.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='66.0' />
              <groupfilter from='70.0' function='range' level='[none:mode:ok]' to='84.0' />
              <groupfilter from='86.0' function='range' level='[none:mode:ok]' to='92.0' />
              <groupfilter from='100.0' function='range' level='[none:mode:ok]' to='102.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='104.0' />
              <groupfilter from='110.0' function='range' level='[none:mode:ok]' to='120.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='130.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='131.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='133.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='135.0' />
            </groupfilter>
          </filter>
          <computed-sort column='[trnline.tde].[none:mode:ok]' direction='DESC' using='[trnline.tde].[sum:passenger miles:qk]' />
          <slices>
            <column>[trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[trnline.tde].[none:mode:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[trnline.tde].[none:Scenario:nk]' value='182' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[trnline.tde].[usr:Calculation_861594907227541504:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[trnline.tde].[none:Scenario:nk]' value='60' />
            <format attr='width' field='[trnline.tde].[none:Aggregate Mode:nk]' value='96' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[trnline.tde].[none:Calculation_812618261621207040:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Aggregate Mode:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:mode:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Scenario:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[trnline.tde].[usr:Calculation_861594907227541504:qk]' />
              <lod column='[trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([trnline.tde].[none:Calculation_812618261621207040:ok] / ([trnline.tde].[none:Aggregate Mode:nk] / [trnline.tde].[none:mode:ok]))</rows>
        <cols>[trnline.tde].[none:Scenario:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Across.Supply by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Transit Passenger Seat Miles by Technology</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[usr:Calculation_5690911122422973:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;</bucket>
              <bucket>&quot;[trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[trnline.tde].[none:Calculation_0330908142738987:nk]</column>
            <column>[trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[trnline.tde].[none:Aggregate Mode:nk]' value='90' />
            <format attr='height' field='[trnline.tde].[none:Scenario:nk]' value='45' />
            <format attr='text-format' field='[trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[trnline.tde].[none:Scenario:nk]' value='264' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[trnline.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Aggregate Mode:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[trnline.tde].[Multiple Values]' />
              <lod column='[trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([trnline.tde].[:Measure Names] / [trnline.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[trnline.tde].[none:Aggregate Mode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Boards by Path, Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Share of Boardings by Mode Choice Path -- &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[trnline.tde].[none:Calculation_0330908142738987:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Drive&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[trnline.tde].[none:Calculation_1970908143232145:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;loc&quot;</bucket>
              <bucket>&quot;lrf&quot;</bucket>
              <bucket>&quot;exp&quot;</bucket>
              <bucket>&quot;com&quot;</bucket>
              <bucket>&quot;hvy&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[trnline.tde].[none:Aggregate Mode:nk]' value='92' />
            <format attr='height' field='[trnline.tde].[none:Calculation_1970908143232145:nk]' value='33' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[trnline.tde].[none:Calculation_0330908142738987:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Calculation_1970908143232145:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Aggregate Mode:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[trnline.tde].[pcto:sum:total boardings:qk:4]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([trnline.tde].[none:Calculation_0330908142738987:nk] / [trnline.tde].[none:Calculation_1970908143232145:nk])</rows>
        <cols total='true'>[trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Boards by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Transit Boardings by Technology -- &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[trnline.tde].[sum:total boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[trnline.tde].[pcto:sum:total boardings:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[trnline.tde].[sum:total boardings:qk]&quot;</bucket>
              <bucket>&quot;[trnline.tde].[pcto:sum:total boardings:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[trnline.tde].[none:Aggregate Mode:nk]' value='98' />
            <format attr='height' field='[trnline.tde].[none:Calculation_8680908142300827:nk]' value='35' />
            <format attr='text-format' field='[trnline.tde].[pcto:sum:total boardings:qk:2]' value='p0.0%' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[trnline.tde].[none:Calculation_8680908142300827:nk]' value='176' />
            <format attr='height' field='[trnline.tde].[none:Aggregate Mode:nk]' value='48' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[trnline.tde].[pcto:sum:total boardings:qk:2]' value='p0.0%' />
            <format attr='font-family' field='[trnline.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Calculation_8680908142300827:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Aggregate Mode:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[trnline.tde].[Multiple Values]' />
              <lod column='[trnline.tde].[pcto:sum:total boardings:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([trnline.tde].[:Measure Names] / [trnline.tde].[none:Calculation_8680908142300827:nk])</rows>
        <cols total='true'>[trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.MilesPerBoard by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Mode Number' datatype='real' name='[Calculation_812618261621207040]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[mode]' />
            </column>
            <column caption='Average Passenger Miles per Boarding' datatype='real' name='[Calculation_861594907227541504]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='10.0' value='West Berkeley' />
                <alias key='11.0' value='Broadway Shuttle' />
                <alias key='12.0' value='Emery Go Round' />
                <alias key='13.0' value='Stanford Shuttles' />
                <alias key='14.0' value='Caltrain Shuttles' />
                <alias key='15.0' value='VTA Shuttles' />
                <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
                <alias key='19.0' value='San Leandro Links' />
                <alias key='20.0' value='SF Muni - Cable Cars' />
                <alias key='21.0' value='SF Muni - Local' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='33.0' value='WHEELS - Local' />
                <alias key='38.0' value='Union City Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='46.0' value='WestCAT - Local' />
                <alias key='49.0' value='Vallejo Transit - Local' />
                <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
                <alias key='55.0' value='American Canyon Transit' />
                <alias key='56.0' value='Vacaville City Coach' />
                <alias key='58.0' value='Benicia Breeze' />
                <alias key='60.0' value='VINE' />
                <alias key='63.0' value='Sonoma County Transit' />
                <alias key='66.0' value='Santa Rosa' />
                <alias key='68.0' value='Petaluma Transit' />
                <alias key='70.0' value='GGT - Local' />
                <alias key='80.0' value='SamTrans - Express' />
                <alias key='81.0' value='SC VTA - Express' />
                <alias key='82.0' value='Dumbarton Express' />
                <alias key='84.0' value='AC Transit - Transbay' />
                <alias key='86.0' value='County Connection - Express' />
                <alias key='87.0' value='GGT - Express SF' />
                <alias key='88.0' value='GGT - Express Richmond' />
                <alias key='90.0' value='WestCAT - Express' />
                <alias key='91.0' value='Vallejo Transit - Express' />
                <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
                <alias key='93.0' value='VINE - Express' />
                <alias key='94.0' value='SMART - Temp Express' />
                <alias key='100.0' value='Easy Bay Ferries' />
                <alias key='101.0' value='GGT - Larkspur' />
                <alias key='102.0' value='GGT - Sausalito' />
                <alias key='103.0' value='Tiburon Ferry' />
                <alias key='104.0' value='Vallejo Baylink Ferry' />
                <alias key='110.0' value='SF Muni - LRT' />
                <alias key='111.0' value='SC VTA - LRT' />
                <alias key='120.0' value='BART' />
                <alias key='121.0' value='Oakland Airport Connector' />
                <alias key='130.0' value='Caltrain' />
                <alias key='131.0' value='Amtrak - Capitol Corridor' />
                <alias key='132.0' value='Amtrak - San Joaquin' />
                <alias key='133.0' value='ACE' />
                <alias key='135.0' value='SMART' />
                <alias key='136.0' value='E-BART' />
              </aliases>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_812618261621207040]' derivation='None' name='[none:Calculation_812618261621207040:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_861594907227541504]' derivation='User' name='[usr:Calculation_861594907227541504:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[trnline.tde].[usr:Calculation_861594907227541504:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[trnline.tde].[sum:passenger miles:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[trnline.tde].[sum:total boardings:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1970908143232145:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[trnline.tde].[none:mode:ok]'>
            <groupfilter from='10.0' function='range' level='[none:mode:ok]' to='136.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[trnline.tde].[none:mode:ok]' direction='DESC' using='[trnline.tde].[usr:Calculation_861594907227541504:qk]' />
          <slices>
            <column>[trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[trnline.tde].[none:mode:ok]</column>
            <column>[trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[trnline.tde].[:Measure Names]' value='143' />
            <format attr='height' field='[trnline.tde].[none:mode:ok]' value='27' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[trnline.tde].[usr:Calculation_861594907227541504:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[trnline.tde].[none:Aggregate Mode:nk]' value='112' />
            <format attr='width' field='[trnline.tde].[none:mode:ok]' value='204' />
            <format attr='height' field='[trnline.tde].[:Measure Names]' value='48' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[trnline.tde].[none:Calculation_812618261621207040:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Aggregate Mode:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:mode:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[:Measure Names]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[trnline.tde].[Multiple Values]' />
              <lod column='[trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([trnline.tde].[none:Calculation_812618261621207040:ok] / ([trnline.tde].[none:Aggregate Mode:nk] / [trnline.tde].[none:mode:ok]))</rows>
        <cols total='true'>[trnline.tde].[:Measure Names]</cols>
        <pages>
          <column>[trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Supply by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='trnline.tde'>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='10.0' value='West Berkeley' />
                <alias key='11.0' value='Broadway Shuttle' />
                <alias key='12.0' value='Emery Go Round' />
                <alias key='13.0' value='Stanford Shuttles' />
                <alias key='14.0' value='Caltrain Shuttles' />
                <alias key='15.0' value='VTA Shuttles' />
                <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
                <alias key='19.0' value='San Leandro Links' />
                <alias key='20.0' value='SF Muni - Cable Cars' />
                <alias key='21.0' value='SF Muni - Local' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='33.0' value='WHEELS - Local' />
                <alias key='38.0' value='Union City Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='46.0' value='WestCAT - Local' />
                <alias key='49.0' value='Vallejo Transit - Local' />
                <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
                <alias key='55.0' value='American Canyon Transit' />
                <alias key='56.0' value='Vacaville City Coach' />
                <alias key='58.0' value='Benicia Breeze' />
                <alias key='60.0' value='VINE' />
                <alias key='63.0' value='Sonoma County Transit' />
                <alias key='66.0' value='Santa Rosa' />
                <alias key='68.0' value='Petaluma Transit' />
                <alias key='70.0' value='GGT - Local' />
                <alias key='80.0' value='SamTrans - Express' />
                <alias key='81.0' value='SC VTA - Express' />
                <alias key='82.0' value='Dumbarton Express' />
                <alias key='84.0' value='AC Transit - Transbay' />
                <alias key='86.0' value='County Connection - Express' />
                <alias key='87.0' value='GGT - Express SF' />
                <alias key='88.0' value='GGT - Express Richmond' />
                <alias key='90.0' value='WestCAT - Express' />
                <alias key='91.0' value='Vallejo Transit - Express' />
                <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
                <alias key='93.0' value='VINE - Express' />
                <alias key='94.0' value='SMART - Temp Express' />
                <alias key='100.0' value='Easy Bay Ferries' />
                <alias key='101.0' value='GGT - Larkspur' />
                <alias key='102.0' value='GGT - Sausalito' />
                <alias key='103.0' value='Tiburon Ferry' />
                <alias key='104.0' value='Vallejo Baylink Ferry' />
                <alias key='110.0' value='SF Muni - LRT' />
                <alias key='111.0' value='SC VTA - LRT' />
                <alias key='120.0' value='BART' />
                <alias key='121.0' value='Oakland Airport Connector' />
                <alias key='130.0' value='Caltrain' />
                <alias key='131.0' value='Amtrak - Capitol Corridor' />
                <alias key='132.0' value='Amtrak - San Joaquin' />
                <alias key='133.0' value='ACE' />
                <alias key='135.0' value='SMART' />
                <alias key='136.0' value='E-BART' />
              </aliases>
            </column>
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6080908151147280]' derivation='Sum' name='[sum:Calculation_6080908151147280:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[trnline.tde].[none:mode:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:mode:ok]' member='21.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='24.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='28.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='30.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='42.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='44.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='66.0' />
            </groupfilter>
          </filter>
          <manual-sort column='[trnline.tde].[none:mode:ok]' direction='ASC'>
            <dictionary>
              <bucket>21.0</bucket>
              <bucket>28.0</bucket>
              <bucket>24.0</bucket>
              <bucket>30.0</bucket>
              <bucket>66.0</bucket>
              <bucket>42.0</bucket>
              <bucket>44.0</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[trnline.tde].[none:Calculation_0330908142738987:nk]</column>
            <column>[trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[trnline.tde].[none:mode:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[trnline.tde].[none:mode:ok]' value='86' />
            <format attr='height' field='[trnline.tde].[none:Calculation_8680908142300827:nk]' value='40' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[trnline.tde].[none:Calculation_8680908142300827:nk]' value='212' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[trnline.tde].[none:Calculation_8680908142300827:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:mode:ok]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[trnline.tde].[sum:Calculation_6080908151147280:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[trnline.tde].[none:Calculation_8680908142300827:nk]</rows>
        <cols>[trnline.tde].[none:mode:ok]</cols>
        <pages>
          <column>[trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Supply by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day and Technology - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6080908151147280]' derivation='Sum' name='[sum:Calculation_6080908151147280:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[trnline.tde].[none:Calculation_0330908142738987:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[trnline.tde].[none:Aggregate Mode:nk]' value='92' />
            <format attr='height' field='[trnline.tde].[none:Calculation_8680908142300827:nk]' value='47' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[trnline.tde].[none:Calculation_8680908142300827:nk]' value='180' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[trnline.tde].[none:Calculation_8680908142300827:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Aggregate Mode:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[trnline.tde].[sum:Calculation_6080908151147280:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[trnline.tde].[none:Calculation_8680908142300827:nk]</rows>
        <cols total='true'>[trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Utilization'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Occupied Share of Available Seats by Technology -- </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Seat Utilization' datatype='real' name='[Calculation_1201121140400432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([passenger miles])/[Calculation_5690911122422973]' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1201121140400432]' derivation='User' name='[usr:Calculation_1201121140400432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[usr:Calculation_5690911122422973:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[trnline.tde].[sum:passenger miles:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[trnline.tde].[usr:Calculation_1201121140400432:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[trnline.tde].[sum:passenger miles:qk]&quot;</bucket>
              <bucket>&quot;[trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[trnline.tde].[none:Aggregate Mode:nk]' value='40' />
            <format attr='width' field='[trnline.tde].[:Measure Names]' value='177' />
            <format attr='height' field='[trnline.tde].[none:Calculation_8680908142300827:nk]' value='28' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='text-format' field='[trnline.tde].[usr:Calculation_1201121140400432:qk]' value='p0.0%' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[trnline.tde].[:Measure Names]' value='84' />
            <format attr='width' field='[trnline.tde].[none:Aggregate Mode:nk]' value='168' />
            <format attr='width' field='[trnline.tde].[none:Calculation_8680908142300827:nk]' value='196' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[trnline.tde].[none:Aggregate Mode:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[none:Calculation_8680908142300827:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[trnline.tde].[:Measure Names]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[trnline.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([trnline.tde].[none:Aggregate Mode:nk] / [trnline.tde].[none:Calculation_8680908142300827:nk])</rows>
        <cols>[trnline.tde].[:Measure Names]</cols>
        <pages>
          <column>[trnline.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[trnline.tde].[none:Aggregate Mode:nk]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Table.Boards by Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='82'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[trnline.tde].[none:Scenario:nk]</field>
            <field>[trnline.tde].[none:mode:ok]</field>
            <field>[trnline.tde].[none:src:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{8303C2D3-8CA3-4F01-900A-B3B0435BD5B2}' />
    </window>
    <window class='worksheet' name='Table.Boards by Path, Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='91'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[trnline.tde].[none:Scenario:nk]</field>
            <field>[trnline.tde].[none:src:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{30A9CE9D-B01C-4940-99CB-B35C9BE21DFF}' />
    </window>
    <window class='worksheet' name='Table.Supply by Tech'>
      <cards>
        <edge name='left'>
          <strip size='193'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='111'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[trnline.tde].[:Measure Names]</field>
            <field>[trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[trnline.tde].[none:Scenario:nk]</field>
            <field>[trnline.tde].[none:mode:ok]</field>
            <field>[trnline.tde].[none:name:nk]</field>
            <field>[trnline.tde].[none:path id:nk]</field>
            <field>[trnline.tde].[none:src:nk]</field>
            <field>[trnline.tde].[none:timeperiod:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{C3977939-CBFB-44FC-A365-960E20C1A283}' />
    </window>
    <window class='worksheet' name='Table.Supply by Operator'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='97'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[trnline.tde].[none:Scenario:nk]</field>
            <field>[trnline.tde].[none:mode:ok]</field>
            <field>[trnline.tde].[none:owner:ok]</field>
            <field>[trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{DE95C90A-C855-4945-A6F8-63C966F87E7D}' />
    </window>
    <window class='worksheet' name='Table.MilesPerBoard by Operator'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='97'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[trnline.tde].[none:Calculation_1970908143232145:nk]' type='filter' />
            <card param='[trnline.tde].[none:mode:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[trnline.tde].[none:Calculation_812618261621207040:ok]</field>
            <field>[trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[trnline.tde].[none:Scenario:nk]</field>
            <field>[trnline.tde].[none:mode:ok]</field>
            <field>[trnline.tde].[none:owner:ok]</field>
            <field>[trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{E441C152-079F-4552-813D-31B005481D20}' />
    </window>
    <window class='worksheet' name='Table.Across.Supply by Tech' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='93'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[trnline.tde].[:Measure Names]</field>
            <field>[trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[trnline.tde].[none:Scenario:nk]</field>
            <field>[trnline.tde].[none:mode:ok]</field>
            <field>[trnline.tde].[none:name:nk]</field>
            <field>[trnline.tde].[none:path id:nk]</field>
            <field>[trnline.tde].[none:src:nk]</field>
            <field>[trnline.tde].[none:timeperiod:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{BBD3E189-36DD-4E24-8888-99A51608F78B}' />
    </window>
    <window class='worksheet' name='Chart.Across.Supply by Tech' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='179'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[trnline.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='87'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[trnline.tde].[:Measure Names]</field>
            <field>[trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[trnline.tde].[none:Scenario:nk]</field>
            <field>[trnline.tde].[none:mode:ok]</field>
            <field>[trnline.tde].[none:name:nk]</field>
            <field>[trnline.tde].[none:path id:nk]</field>
            <field>[trnline.tde].[none:src:nk]</field>
            <field>[trnline.tde].[none:timeperiod:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{DD6BA5A0-6BDD-4355-A7AA-C06E75731381}' />
    </window>
    <window class='worksheet' name='Table.Across.Boards by Tech' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[trnline.tde].[none:Scenario:nk]</field>
            <field>[trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{2FDE0B1A-0AD7-4693-84FD-F98DA4BF07B3}' />
    </window>
    <window class='worksheet' name='Chart.Across.Boards by Tech' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[trnline.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='90'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[trnline.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{99F90A3B-8874-4F6C-B818-936695D2C02A}' />
    </window>
    <window class='worksheet' name='Chart.Across.MilesPerBoard by Operator' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[trnline.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='97'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[trnline.tde].[none:Calculation_1970908143232145:nk]' type='filter' />
            <card param='[trnline.tde].[none:mode:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[trnline.tde].[none:Scenario:nk]</field>
            <field>[trnline.tde].[none:mode:ok]</field>
            <field>[trnline.tde].[none:owner:ok]</field>
            <field>[trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{2F95CAA3-7F98-401A-9461-18CD55FA173F}' />
    </window>
    <window class='worksheet' name='Table.Across.MilesPerBoard by Operator' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='97'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[trnline.tde].[none:Calculation_1970908143232145:nk]' type='filter' />
            <card param='[trnline.tde].[none:mode:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[trnline.tde].[none:Calculation_812618261621207040:ok]</field>
            <field>[trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[trnline.tde].[none:Scenario:nk]</field>
            <field>[trnline.tde].[none:mode:ok]</field>
            <field>[trnline.tde].[none:owner:ok]</field>
            <field>[trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{4D5CB5D4-74B7-4815-802A-AD146F7AED7F}' />
    </window>
    <window class='worksheet' maximized='true' name='Table.Utilization'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='101'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, 4 - Draft Preferred&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[trnline.tde].[:Measure Names]</field>
            <field>[trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[trnline.tde].[none:Scenario:nk]</field>
            <field>[trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{0EA822F2-F8E7-4483-A742-04C80A3EF81B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Chart.Across.Boards by Tech' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Chart.Across.MilesPerBoard by Operator' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3d53MceZrg92+68t4XvAdJkE3bZJsde7d7a+5uZjdOilAoLhTSC727f0dv
      9OYiFKeN1Uqr3R1pd3Q36p3p5rYFCRIA4W0BKKC8N1lZmXkvgOE0p9Ge6Kom8vOmyUYx86lE
      Pvn8MvP3ZAqmaZpYLJeU2OsALJZeshLAcqlZCWC51KwEsFxqVgJYLjUrASyXmpUAlkvNSgDL
      pWYlgOVSsxLAcqlZCWC51KwEsFxqVgJYLjUrASyXmpUAlkvNSgDLpWYlgOVSk3/7h3a7jaZp
      vYzF0kdUVcVut/c6jAsnWC2RlvNk8mVqmtLrMC6c/OUfsVxG1ZbO8pHa6zAu3GfOAYxuh8WF
      eTLF2tdbkmlSqVbP+wGbz57ywYcfUqi2nv/fg/19Dg726Rq/vxiTXHqfzb0jflua9FaVfLlB
      s/3iL6RYLPKyytcL6zVN0vtbbOweYpompmmwtfaMUrXKk/l5Fle3ME1Iba/xaGERVTc+b6nk
      8zmKxdJLitLysn2mAnzw//8/NBxxVn/zHj99fZalnRw3ZwZZWtvG4/GgeAIYtRyNroSod5ia
      GqMj2inu7/CL//I+/8O//xmb+3mujUV4tl/kJ2/f5p9//WsS44P83S+rPJjyoruTVNJ7nOQO
      +JOf/3s8tt+tv109YTPdIOloki76yO2uEXTB440sNn+IRMBPLCBTbomE/W7Wlx7RkQPcuDKJ
      IHzzDfHp9a5tVOkIPnydI45rcdz1PZqyn8zyGneuDfHhahaAVKbIg5sjfPJ4i5CziT2QoF1M
      446OYNZzdGweckcpxseHefTBBoHBUZxmjUrHxpXpUb5FuJaX5DMJkK+1+cmP3kDs1vn7v/6/
      GIx7+MdfbSHYHJR20tj0CoYmQqdJYihOqVrAFR8h9XSbUDjIO7/8B3TBQSPnhthNBMA0unz8
      4WP+4n/6D8z/5/+DVM3JTMwF55xjqbUqvnCMsSE3R+kj2mqL5b1jvMFBBLFNQw+TzeU5SGXJ
      RWO06yXCvhaqMYlD+uYbQq1V8Z6td+nJJ0SmxijtHCC02wj1Bk5PnLqZYnN9hxs37iMI0Kzk
      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
      N7DkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Chart.Across.Supply by Tech' width='192'>
      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
      FT0DAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table.Across.Boards by Tech' width='192'>
      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
      JotL6F46AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table.Across.MilesPerBoard by Operator' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Table.Across.Supply by Tech' width='192'>
      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
      X4jvRPed2t7XAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table.Boards by Path, Tech' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Table.Boards by Tech' width='192'>
      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
      dLrNWsDlchlJkggEAkSjUVpaWgBwOBz8/Oc/Z9euXVy/fh2bzYbT6WR6epqWlhZmZmbo6ur6
      1JXi71oh7s70vvnmm3R3dzM8PMzi4iJ9fX1cu3aN/v5+ZFnm1q1bjIyMsGvXLk6fPk19fT23
      bt3C6XTS29v7+L0BZKnArWsXuT0bZPuOdhpaWgh4XCTLKsx3DYmVMhM3r3Jz2klPnYLzI06S
      rjGujC0gmFvJeB2EUmnOvH2e2oYNC0LQH8Jis9Le3cHi+Dg5SUAGIqsLGFp34Z0dZ3Zpmbau
      TlyeKCYpiC9xNzViF+sLt+ncuZflqVsUKhu/5cvz82zfs2ejBnC5yGogSW+Tmsnb46yn1Mi+
      FeoHepibXaZGq8CfeHSmOJVKhc1mI5/P09nZSV9fHwqFArvdjkqlwuv1YrNtJAculUq4XK7N
      9IiZTIZQKEQoFMJkMvH222/T3Nz8QOISRZGjR49iMBg2r72+vk40GgXA5XIRiUSQZRlRFDly
      5AhGo5FyuUy5XKavr28zdaLT6Xw8hkHfiSBqOHT0KVr1QHwFo62eyPwQpo59ZO6ugFEo2XP4
      CXY06SiGFmjqHmB3k0S0BEuz0xSyZUyyQHeTFac3SoO56Y6TUWZhZpHBJ05x6dbC3SuiUqtQ
      KkQEnR6j3ojJrEWpvJsLU0AQNopjK5VKFKLA3bn3QLzEE42mzdiVKvWGd0WWsdis6CpmdHo1
      4p39H/Wc/dLSEh0dHSgUCm7evEltbS319fVkMhlOnTrFyMgIjY2NrK6ukkgkWF1dxe/388Uv
      fhGXy4UoioRCIf7wD/+Qc+fOsX379k8d0905n7vzPl/84heJx+Mkk0lOnTpFKpUiHA5TKBQQ
      RRGlUoksywiCgCAIm82jz33uc+Tz+cdPALbGVvR3v5XaRHuzFlmdp3VbC/5QBgCjvRnVnZ3U
      tT10aodYDKjZv7OdSCCMwtyGvd5Ox0AL/tVVJJqorbOxGEvRqofh0RkGB/fdSU8usjh5k47u
      7ZiEDBq1hubGBqyqIiqNAlDR1WzA3tzJ3O0hGrp3ob2T07C2tRXdOzw+6cg60ysm9u3ZxWpS
      hVHXglahobWllmhsjW7Loy2Unc/n2bVrF6VSCb/fj8FgwO124/F4SKfTPPHEE1y5coXjx4+z
      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
    </thumbnail>
    <thumbnail height='192' name='Table.MilesPerBoard by Operator' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table.Supply by Operator' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table.Supply by Tech' width='192'>
      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
      NH8D7T0g5fqUwToAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Table.Utilization' width='192'>
      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
      y/43V+TfqdS35jwAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
