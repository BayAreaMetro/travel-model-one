<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0303.2316                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='trnline Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' version='9.2'>
      <connection class='dataengine' dbname='M:\Application\Model One\RTP2017\Scenarios\Across-Scenarios-2035-v04\trnline.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1714</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;100_ALAOAKFB&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;94_SMARTBSB2&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>58</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>10.0</statistic>
              <statistic aggregation='Max' datatype='real'>136.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owner</remote-name>
            <remote-type>5</remote-type>
            <local-name>[owner]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>owner</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>65.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequency</remote-name>
            <remote-type>5</remote-type>
            <local-name>[frequency]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>frequency</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>75</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>3.0</statistic>
              <statistic aggregation='Max' datatype='real'>327.67000000000002</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line time]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>line time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5992</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>2.5099999999999998</statistic>
              <statistic aggregation='Max' datatype='real'>162.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line dist]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>line dist</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1121</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.63</statistic>
              <statistic aggregation='Max' datatype='real'>88.200000000000003</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total boardings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total boardings]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>total boardings</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2862</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>22089.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger miles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[passenger miles]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>passenger miles</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5561</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>481336.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger hours</remote-name>
            <remote-type>5</remote-type>
            <local-name>[passenger hours]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>passenger hours</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1361</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>-18.0</statistic>
              <statistic aggregation='Max' datatype='real'>12438.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[path id]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>path id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>75</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;am_drv_com_wlk&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;pm_wlk_lrf_wlk&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>55</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AC Bus Rapid Transit (BRT)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Westcat-Express&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aggregate Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aggregate Mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Aggregate Mode</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Commuter Rail&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Local&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seats</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Seats]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Seats</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>700.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2035_05_613&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_116&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2035, No Project (v 3)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2040, Plan Bay Area&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;' value='Change in Daily Average Passenger Seat Miles from the Base' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcto:sum:total boardings:qk:2]&quot;' value='Share of Boardings by Technology' />
        </aliases>
      </column>
      <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Express&quot;' value='Express Bus' />
          <alias key='&quot;Local&quot;' value='Local Bus' />
        </aliases>
      </column>
      <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Total Daily Boardings' datatype='real' name='[Calculation_0410911164937125]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total boardings])' scope-isolation='false' />
      </column>
      <column caption='Average Passenger Distance' datatype='real' name='[Calculation_0500922175655935]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' scope-isolation='false' />
      </column>
      <column caption='Seat Utilization' datatype='real' name='[Calculation_1201121140400432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([passenger miles])/[Calculation_5690911122422973]' scope-isolation='false' />
      </column>
      <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
        <aliases>
          <alias key='&quot;com&quot;' value='Commuter rail' />
          <alias key='&quot;exp&quot;' value='Express bus' />
          <alias key='&quot;hvy&quot;' value='Heavy rail' />
          <alias key='&quot;loc&quot;' value='Local bus' />
          <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
        </aliases>
      </column>
      <column caption='15 please' datatype='integer' name='[Calculation_3921121142551292]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='countd(right([path id],11))' scope-isolation='false' />
      </column>
      <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
      </column>
      <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
      </column>
      <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
      </column>
      <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
      </column>
      <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
      </column>
      <column caption='Average Passenger Miles per Boarding' datatype='real' name='[Calculation_861594907227541504]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' />
      </column>
      <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
        <aliases>
          <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
          <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
          <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
          <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
          <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
        </aliases>
      </column>
      <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
      </column>
      <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
      </column>
      <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='10.0' value='West Berkeley' />
          <alias key='11.0' value='Broadway Shuttle' />
          <alias key='12.0' value='Emery Go Round' />
          <alias key='13.0' value='Stanford Shuttles' />
          <alias key='14.0' value='Caltrain Shuttles' />
          <alias key='15.0' value='VTA Shuttles' />
          <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
          <alias key='19.0' value='San Leandro Links' />
          <alias key='20.0' value='SF Muni - Cable Cars' />
          <alias key='21.0' value='SF Muni - Local' />
          <alias key='24.0' value='SamTrans' />
          <alias key='28.0' value='SC VTA' />
          <alias key='30.0' value='AC Transit' />
          <alias key='33.0' value='WHEELS - Local' />
          <alias key='38.0' value='Union City Transit' />
          <alias key='42.0' value='County Conn.' />
          <alias key='44.0' value='Tri-Delta' />
          <alias key='46.0' value='WestCAT - Local' />
          <alias key='49.0' value='Vallejo Transit - Local' />
          <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
          <alias key='55.0' value='American Canyon Transit' />
          <alias key='56.0' value='Vacaville City Coach' />
          <alias key='58.0' value='Benicia Breeze' />
          <alias key='60.0' value='VINE' />
          <alias key='63.0' value='Sonoma County Transit' />
          <alias key='66.0' value='Santa Rosa' />
          <alias key='68.0' value='Petaluma Transit' />
          <alias key='70.0' value='GGT - Local' />
          <alias key='80.0' value='SamTrans - Express' />
          <alias key='81.0' value='SC VTA - Express' />
          <alias key='82.0' value='Dumbarton Express' />
          <alias key='84.0' value='AC Transit - Transbay' />
          <alias key='86.0' value='County Connection - Express' />
          <alias key='87.0' value='GGT - Express SF' />
          <alias key='88.0' value='GGT - Express Richmond' />
          <alias key='90.0' value='WestCAT - Express' />
          <alias key='91.0' value='Vallejo Transit - Express' />
          <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
          <alias key='93.0' value='VINE - Express' />
          <alias key='94.0' value='SMART - Temp Express' />
          <alias key='100.0' value='Easy Bay Ferries' />
          <alias key='101.0' value='GGT - Larkspur' />
          <alias key='102.0' value='GGT - Sausalito' />
          <alias key='103.0' value='Tiburon Ferry' />
          <alias key='104.0' value='Vallejo Baylink Ferry' />
          <alias key='110.0' value='SF Muni - LRT' />
          <alias key='111.0' value='SC VTA - LRT' />
          <alias key='120.0' value='BART' />
          <alias key='121.0' value='Oakland Airport Connector' />
          <alias key='130.0' value='Caltrain' />
          <alias key='131.0' value='Amtrak - Capitol Corridor' />
          <alias key='132.0' value='Amtrak - San Joaquin' />
          <alias key='133.0' value='ACE' />
          <alias key='135.0' value='SMART' />
          <alias key='136.0' value='E-BART' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[owner]' role='dimension' type='ordinal' />
      <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
      <column datatype='string' name='[src]' role='dimension' type='nominal' />
      <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
      <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.436904' measure-ordering='alphabetic' measure-percentage='0.563097' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1970908143232145:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;loc&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;com&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;hvy&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;exp&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;lrf&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Aggregate Mode:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Local&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Commuter Rail&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Heavy Rail&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Express&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Light Rail&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>%all%</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:mode:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>104.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>46.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>120.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>30.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>66.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>44.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>102.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>12.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>100.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>13.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>24.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>33.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>110.0</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>91.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>21.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>42.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>135.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>49.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>101.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>70.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>84.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>81.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>92.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>63.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>130.0</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>90.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>82.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>88.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>80.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>133.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>28.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>86.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>14.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>87.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>111.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>131.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#01abe9'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            </map>
            <map to='#1b346c'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Year 2035, Scenario 2 (v 3)&quot;</bucket>
            </map>
            <map to='#609f80'>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            </map>
            <map to='#8d9876'>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Year 2040, Plan Bay Area&quot;</bucket>
            </map>
            <map to='#c3ced0'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Housing at Key Stations&quot;</bucket>
            </map>
            <map to='#cbb345'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Year 2035, Scenario 3 (v 3)&quot;</bucket>
            </map>
            <map to='#e5c39e'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            </map>
            <map to='#f54b1a'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Year 2035, Scenario 1 (v 3)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Calculation_1970908143232145:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;com&quot;</bucket>
            <bucket>&quot;hvy&quot;</bucket>
            <bucket>&quot;exp&quot;</bucket>
            <bucket>&quot;lrf&quot;</bucket>
            <bucket>&quot;loc&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:Scenario:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Housing at Key Stations&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Chart.Across.Boards by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Typical Weekday Transit Boardings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1620'>Technology:&#9;</run>
                <run bold='true' fontsize='14' indent='1620'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1620'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1620'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1620'>&#10;Boardings:&#9;</run>
                <run bold='true' fontsize='14' indent='1620'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Chart.Across.MilesPerBoard by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Average Passenger Miles per Boarding' datatype='real' name='[Calculation_861594907227541504]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='10.0' value='West Berkeley' />
                <alias key='11.0' value='Broadway Shuttle' />
                <alias key='12.0' value='Emery Go Round' />
                <alias key='13.0' value='Stanford Shuttles' />
                <alias key='14.0' value='Caltrain Shuttles' />
                <alias key='15.0' value='VTA Shuttles' />
                <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
                <alias key='19.0' value='San Leandro Links' />
                <alias key='20.0' value='SF Muni - Cable Cars' />
                <alias key='21.0' value='SF Muni - Local' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='33.0' value='WHEELS - Local' />
                <alias key='38.0' value='Union City Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='46.0' value='WestCAT - Local' />
                <alias key='49.0' value='Vallejo Transit - Local' />
                <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
                <alias key='55.0' value='American Canyon Transit' />
                <alias key='56.0' value='Vacaville City Coach' />
                <alias key='58.0' value='Benicia Breeze' />
                <alias key='60.0' value='VINE' />
                <alias key='63.0' value='Sonoma County Transit' />
                <alias key='66.0' value='Santa Rosa' />
                <alias key='68.0' value='Petaluma Transit' />
                <alias key='70.0' value='GGT - Local' />
                <alias key='80.0' value='SamTrans - Express' />
                <alias key='81.0' value='SC VTA - Express' />
                <alias key='82.0' value='Dumbarton Express' />
                <alias key='84.0' value='AC Transit - Transbay' />
                <alias key='86.0' value='County Connection - Express' />
                <alias key='87.0' value='GGT - Express SF' />
                <alias key='88.0' value='GGT - Express Richmond' />
                <alias key='90.0' value='WestCAT - Express' />
                <alias key='91.0' value='Vallejo Transit - Express' />
                <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
                <alias key='93.0' value='VINE - Express' />
                <alias key='94.0' value='SMART - Temp Express' />
                <alias key='100.0' value='Easy Bay Ferries' />
                <alias key='101.0' value='GGT - Larkspur' />
                <alias key='102.0' value='GGT - Sausalito' />
                <alias key='103.0' value='Tiburon Ferry' />
                <alias key='104.0' value='Vallejo Baylink Ferry' />
                <alias key='110.0' value='SF Muni - LRT' />
                <alias key='111.0' value='SC VTA - LRT' />
                <alias key='120.0' value='BART' />
                <alias key='121.0' value='Oakland Airport Connector' />
                <alias key='130.0' value='Caltrain' />
                <alias key='131.0' value='Amtrak - Capitol Corridor' />
                <alias key='132.0' value='Amtrak - San Joaquin' />
                <alias key='133.0' value='ACE' />
                <alias key='135.0' value='SMART' />
                <alias key='136.0' value='E-BART' />
              </aliases>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_861594907227541504]' derivation='User' name='[usr:Calculation_861594907227541504:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1970908143232145:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='12.0' function='range' level='[none:mode:ok]' to='14.0' />
              <groupfilter from='21.0' function='range' level='[none:mode:ok]' to='33.0' />
              <groupfilter from='42.0' function='range' level='[none:mode:ok]' to='49.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='63.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='66.0' />
              <groupfilter from='70.0' function='range' level='[none:mode:ok]' to='84.0' />
              <groupfilter from='86.0' function='range' level='[none:mode:ok]' to='92.0' />
              <groupfilter from='100.0' function='range' level='[none:mode:ok]' to='102.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='104.0' />
              <groupfilter from='110.0' function='range' level='[none:mode:ok]' to='120.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='130.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='131.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='133.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='135.0' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' direction='DESC' using='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:passenger miles:qk]' />
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='232' />
            <format attr='height-header' value='52' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='108' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' />
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / ([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]))</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Chart.Across.Supply by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Change in Transit Passenger Seat Miles by Technology</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:7]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Scenario]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='Change in Passenger Seat Miles' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='2520'>Technology:&#9;</run>
                <run bold='true' fontsize='14' indent='2520'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2520'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='2520'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2520'>&#10;Pct Change:&#9;</run>
                <run bold='true' fontsize='14' indent='2520'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Across.Boards by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily Transit Boardings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='104' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='96' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='76' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='316' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Across.MilesPerBoard by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Average Passenger Miles per Boarding' datatype='real' name='[Calculation_861594907227541504]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='10.0' value='West Berkeley' />
                <alias key='11.0' value='Broadway Shuttle' />
                <alias key='12.0' value='Emery Go Round' />
                <alias key='13.0' value='Stanford Shuttles' />
                <alias key='14.0' value='Caltrain Shuttles' />
                <alias key='15.0' value='VTA Shuttles' />
                <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
                <alias key='19.0' value='San Leandro Links' />
                <alias key='20.0' value='SF Muni - Cable Cars' />
                <alias key='21.0' value='SF Muni - Local' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='33.0' value='WHEELS - Local' />
                <alias key='38.0' value='Union City Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='46.0' value='WestCAT - Local' />
                <alias key='49.0' value='Vallejo Transit - Local' />
                <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
                <alias key='55.0' value='American Canyon Transit' />
                <alias key='56.0' value='Vacaville City Coach' />
                <alias key='58.0' value='Benicia Breeze' />
                <alias key='60.0' value='VINE' />
                <alias key='63.0' value='Sonoma County Transit' />
                <alias key='66.0' value='Santa Rosa' />
                <alias key='68.0' value='Petaluma Transit' />
                <alias key='70.0' value='GGT - Local' />
                <alias key='80.0' value='SamTrans - Express' />
                <alias key='81.0' value='SC VTA - Express' />
                <alias key='82.0' value='Dumbarton Express' />
                <alias key='84.0' value='AC Transit - Transbay' />
                <alias key='86.0' value='County Connection - Express' />
                <alias key='87.0' value='GGT - Express SF' />
                <alias key='88.0' value='GGT - Express Richmond' />
                <alias key='90.0' value='WestCAT - Express' />
                <alias key='91.0' value='Vallejo Transit - Express' />
                <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
                <alias key='93.0' value='VINE - Express' />
                <alias key='94.0' value='SMART - Temp Express' />
                <alias key='100.0' value='Easy Bay Ferries' />
                <alias key='101.0' value='GGT - Larkspur' />
                <alias key='102.0' value='GGT - Sausalito' />
                <alias key='103.0' value='Tiburon Ferry' />
                <alias key='104.0' value='Vallejo Baylink Ferry' />
                <alias key='110.0' value='SF Muni - LRT' />
                <alias key='111.0' value='SC VTA - LRT' />
                <alias key='120.0' value='BART' />
                <alias key='121.0' value='Oakland Airport Connector' />
                <alias key='130.0' value='Caltrain' />
                <alias key='131.0' value='Amtrak - Capitol Corridor' />
                <alias key='132.0' value='Amtrak - San Joaquin' />
                <alias key='133.0' value='ACE' />
                <alias key='135.0' value='SMART' />
                <alias key='136.0' value='E-BART' />
              </aliases>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_861594907227541504]' derivation='User' name='[usr:Calculation_861594907227541504:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1970908143232145:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='12.0' function='range' level='[none:mode:ok]' to='14.0' />
              <groupfilter from='21.0' function='range' level='[none:mode:ok]' to='33.0' />
              <groupfilter from='42.0' function='range' level='[none:mode:ok]' to='49.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='63.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='66.0' />
              <groupfilter from='70.0' function='range' level='[none:mode:ok]' to='84.0' />
              <groupfilter from='86.0' function='range' level='[none:mode:ok]' to='92.0' />
              <groupfilter from='100.0' function='range' level='[none:mode:ok]' to='102.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='104.0' />
              <groupfilter from='110.0' function='range' level='[none:mode:ok]' to='120.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='130.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='131.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='133.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='135.0' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' direction='DESC' using='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:passenger miles:qk]' />
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='182' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='60' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok])</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Across.Supply by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Technology</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[usr:Calculation_5690911122422973:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='97' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='60' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='264' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Boards by Path, Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Share of Boardings by Mode Choice Path -- </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Drive&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;loc&quot;</bucket>
              <bucket>&quot;lrf&quot;</bucket>
              <bucket>&quot;exp&quot;</bucket>
              <bucket>&quot;com&quot;</bucket>
              <bucket>&quot;hvy&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='92' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' value='33' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:4]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Boards by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Boardings by Technology -- </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:total boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcto:sum:total boardings:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:total boardings:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcto:sum:total boardings:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='115' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='39' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:2]' value='p0.0%' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='200' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.MilesPerBoard by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Average Passenger Miles per Boarding' datatype='real' name='[Calculation_861594907227541504]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='10.0' value='West Berkeley' />
                <alias key='11.0' value='Broadway Shuttle' />
                <alias key='12.0' value='Emery Go Round' />
                <alias key='13.0' value='Stanford Shuttles' />
                <alias key='14.0' value='Caltrain Shuttles' />
                <alias key='15.0' value='VTA Shuttles' />
                <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
                <alias key='19.0' value='San Leandro Links' />
                <alias key='20.0' value='SF Muni - Cable Cars' />
                <alias key='21.0' value='SF Muni - Local' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='33.0' value='WHEELS - Local' />
                <alias key='38.0' value='Union City Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='46.0' value='WestCAT - Local' />
                <alias key='49.0' value='Vallejo Transit - Local' />
                <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
                <alias key='55.0' value='American Canyon Transit' />
                <alias key='56.0' value='Vacaville City Coach' />
                <alias key='58.0' value='Benicia Breeze' />
                <alias key='60.0' value='VINE' />
                <alias key='63.0' value='Sonoma County Transit' />
                <alias key='66.0' value='Santa Rosa' />
                <alias key='68.0' value='Petaluma Transit' />
                <alias key='70.0' value='GGT - Local' />
                <alias key='80.0' value='SamTrans - Express' />
                <alias key='81.0' value='SC VTA - Express' />
                <alias key='82.0' value='Dumbarton Express' />
                <alias key='84.0' value='AC Transit - Transbay' />
                <alias key='86.0' value='County Connection - Express' />
                <alias key='87.0' value='GGT - Express SF' />
                <alias key='88.0' value='GGT - Express Richmond' />
                <alias key='90.0' value='WestCAT - Express' />
                <alias key='91.0' value='Vallejo Transit - Express' />
                <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
                <alias key='93.0' value='VINE - Express' />
                <alias key='94.0' value='SMART - Temp Express' />
                <alias key='100.0' value='Easy Bay Ferries' />
                <alias key='101.0' value='GGT - Larkspur' />
                <alias key='102.0' value='GGT - Sausalito' />
                <alias key='103.0' value='Tiburon Ferry' />
                <alias key='104.0' value='Vallejo Baylink Ferry' />
                <alias key='110.0' value='SF Muni - LRT' />
                <alias key='111.0' value='SC VTA - LRT' />
                <alias key='120.0' value='BART' />
                <alias key='121.0' value='Oakland Airport Connector' />
                <alias key='130.0' value='Caltrain' />
                <alias key='131.0' value='Amtrak - Capitol Corridor' />
                <alias key='132.0' value='Amtrak - San Joaquin' />
                <alias key='133.0' value='ACE' />
                <alias key='135.0' value='SMART' />
                <alias key='136.0' value='E-BART' />
              </aliases>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_861594907227541504]' derivation='User' name='[usr:Calculation_861594907227541504:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_861594907227541504:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:passenger miles:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:total boardings:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1970908143232145:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]'>
            <groupfilter from='10.0' function='range' level='[none:mode:ok]' to='136.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' direction='DESC' using='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]' />
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' value='186' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' value='27' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='112' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' value='204' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' value='36' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Supply by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='10.0' value='West Berkeley' />
                <alias key='11.0' value='Broadway Shuttle' />
                <alias key='12.0' value='Emery Go Round' />
                <alias key='13.0' value='Stanford Shuttles' />
                <alias key='14.0' value='Caltrain Shuttles' />
                <alias key='15.0' value='VTA Shuttles' />
                <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
                <alias key='19.0' value='San Leandro Links' />
                <alias key='20.0' value='SF Muni - Cable Cars' />
                <alias key='21.0' value='SF Muni - Local' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='33.0' value='WHEELS - Local' />
                <alias key='38.0' value='Union City Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='46.0' value='WestCAT - Local' />
                <alias key='49.0' value='Vallejo Transit - Local' />
                <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
                <alias key='55.0' value='American Canyon Transit' />
                <alias key='56.0' value='Vacaville City Coach' />
                <alias key='58.0' value='Benicia Breeze' />
                <alias key='60.0' value='VINE' />
                <alias key='63.0' value='Sonoma County Transit' />
                <alias key='66.0' value='Santa Rosa' />
                <alias key='68.0' value='Petaluma Transit' />
                <alias key='70.0' value='GGT - Local' />
                <alias key='80.0' value='SamTrans - Express' />
                <alias key='81.0' value='SC VTA - Express' />
                <alias key='82.0' value='Dumbarton Express' />
                <alias key='84.0' value='AC Transit - Transbay' />
                <alias key='86.0' value='County Connection - Express' />
                <alias key='87.0' value='GGT - Express SF' />
                <alias key='88.0' value='GGT - Express Richmond' />
                <alias key='90.0' value='WestCAT - Express' />
                <alias key='91.0' value='Vallejo Transit - Express' />
                <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
                <alias key='93.0' value='VINE - Express' />
                <alias key='94.0' value='SMART - Temp Express' />
                <alias key='100.0' value='Easy Bay Ferries' />
                <alias key='101.0' value='GGT - Larkspur' />
                <alias key='102.0' value='GGT - Sausalito' />
                <alias key='103.0' value='Tiburon Ferry' />
                <alias key='104.0' value='Vallejo Baylink Ferry' />
                <alias key='110.0' value='SF Muni - LRT' />
                <alias key='111.0' value='SC VTA - LRT' />
                <alias key='120.0' value='BART' />
                <alias key='121.0' value='Oakland Airport Connector' />
                <alias key='130.0' value='Caltrain' />
                <alias key='131.0' value='Amtrak - Capitol Corridor' />
                <alias key='132.0' value='Amtrak - San Joaquin' />
                <alias key='133.0' value='ACE' />
                <alias key='135.0' value='SMART' />
                <alias key='136.0' value='E-BART' />
              </aliases>
            </column>
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6080908151147280]' derivation='Sum' name='[sum:Calculation_6080908151147280:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:mode:ok]' member='21.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='24.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='28.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='30.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='42.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='44.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='66.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' direction='ASC'>
            <dictionary>
              <bucket>21.0</bucket>
              <bucket>28.0</bucket>
              <bucket>24.0</bucket>
              <bucket>30.0</bucket>
              <bucket>66.0</bucket>
              <bucket>42.0</bucket>
              <bucket>44.0</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' value='86' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='40' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='212' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:Calculation_6080908151147280:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Supply by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day and Technology - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6080908151147280]' derivation='Sum' name='[sum:Calculation_6080908151147280:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='92' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='56' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='216' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:Calculation_6080908151147280:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Utilization'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Occupied Share of Available Seats by Technology -- </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Seat Utilization' datatype='real' name='[Calculation_1201121140400432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([passenger miles])/[Calculation_5690911122422973]' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1201121140400432]' derivation='User' name='[usr:Calculation_1201121140400432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[usr:Calculation_5690911122422973:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:passenger miles:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_1201121140400432:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:passenger miles:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='40' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' value='191' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_1201121140400432:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' value='84' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='168' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' name='Table.Boards by Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='73'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.Boards by Path, Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='82'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.Supply by Tech'>
      <cards>
        <edge name='left'>
          <strip size='193'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='102'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:name:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:path id:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:timeperiod:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.Supply by Operator'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='88'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:owner:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Table.MilesPerBoard by Operator'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='88'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' type='filter' />
            <card param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:owner:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.Across.Supply by Tech' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='84'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:name:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:path id:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:timeperiod:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Chart.Across.Supply by Tech' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='179'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:name:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:path id:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:timeperiod:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.Across.Boards by Tech' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Chart.Across.Boards by Tech' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='81'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Chart.Across.MilesPerBoard by Operator' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='88'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' type='filter' />
            <card param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:owner:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.Across.MilesPerBoard by Operator' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='88'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' type='filter' />
            <card param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:owner:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.Utilization'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='92'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Table.Boards by Tech' width='192'>
      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
      /h9ktSUvJMYySgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table.Boards by Path, Tech' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9Z3QcyXbn+cvyqEIVCt57AiBIgg70psmmZ3ez7fNGfrUjndXM7o5WZ+bs
      OTua3TM682HnaKUZ6UlP5hnp6bl29GyapgUBwhLee1NAobx3mbkfgCbZzTbvdQNoQsgfP/Ag
      EJV1M5D/iBsZN24IsizLKCisUVRftgEKCl8migAU1jSKABTWNIoAFNY0igAU1jSKABTWNIoA
      FNY0igAU1jSKABTWNIoAFNY0igAU1jSKABTWNIoAFNY0igAU1jSKABTWNIoAFNY0igAU1jSK
      ABTWNIoAFNY0igAU1jSKABTWNIoAFNY0mi/bAIUFxIiPCxeuUHv0JQpSjZ/rGlHPOO9cbueF
      r7yMRQuJwDQ//qdzRAEEFeVbDnJsTzUqQfhCtkpSiHM/+yU7Tn+TglQdAP0N7zGuKuHErqoP
      1Q3Mj3LxTg9nzpzGqFMBMrbBh/hN5VTmWQCY7qnn3O2HAKh1Sew+fJrN5dk8aaVzqpv3W2Y5
      XpvH2YZpvvmVY+i+0F0soIwAzwhSPEJbcxPuUOxRmSyLzE2N0tnVgzccB2T8ThtdnV3MuYMg
      y7jnJuns7GR63ks85ODBg4dExMVrRj20tPRTuX0PuzYXc+4f/5YxX5zhwT4CkQRe+xRjM07i
      YR993Z30j04jSr9CmigpRlvDfVwh8VGRRmfAoNMgJ6KMDPQyMTNDf+8QXq+DxpaHTI0N0Tc8
      QSjo5N1//hG3GzoJixIAHtsQQ3aRnXv2UGaN8+Mfv0VAlJifGqVz8V5Vag1JSXriXhv3m3sQ
      P8m2XxNlBHhmkRl/+D5/+/PbZKUZcJHDH/3WCf7xL/8H6pRU7L4k/vjfvc6P/vvfQLKBUZ+F
      /+cPDzx9FUkk4PMhx7wYUnMxykG+9/f/g6/90Z/hbzrPLXcxO/RDvD/oRw44OPW7/4FD1dm/
      trWTvS20aWQs8w38+FofJTkGugZD/NEfvUrUMcGVa9cY6evl5Ne+gc3hJ9bVTeCl3SSpF/pg
      MRbB5/PhD4TRJ1kITnfxve//EksS2FXl/M6LedytH6D29Q1fuGWfRBkBnlkStNU9YMvpb/Hv
      /v0fY3Y8oKGxBbe2gj/43/8P/tOf/B4Wg5GKqjLCXg9uu4Pox3TekhhjbmaKWYePeMSFJxD/
      SA0BsyUZz7yDjOL1pCd/EcciSldrJ/te/W1+/7dfx7xYqk0r5Du/9ftsLzQSIIWN67I58NJL
      ZOoe97/RsI/O+mtcbnXye//T17GYrKyvKMDtdOGbdxL7+C/8wigCeJaQJbwuJ/Pz8zjdQcxW
      IxNDQ0yP9+GMmMjIzkAOOZiemuDGpUt0tdRxrX2eYycOkaT9eL9ea0hh/9ETnDh5kiJTgOEZ
      H2opgc02xeikDVmWwZjJN777LdLj01y80fyr2SpJeN2OBVs9vsVCNWaLkZmJUcb6hwgulqpU
      KlQqFcITcw+vY56o+FixWSVb+IM//g9sTHZx6f1Gepvep2kswZmT+z5HQ/7qKC7QM4Kg1lKQ
      m8Lln/0jl4HkvM38m299nblf/JLv//Ahz3/nD9mztYjYzAg/+YcfUrrleY7UrGNTYyetI262
      lOSSUJkoKS5Au9itqTRJ5GRo+Zfv/X8gqMipPMpzW4pJdRzk6qV3yE5PIz87jcJ8FT956yJh
      dTpvHKn9VYwlLy+LKz/9G64ApqKtnCjOIVeTzpbKPdz+4QXuhKrQCGp0SckUF+WjUUFmXjE6
      s5nM7Tt56/33sO3ZQIlFS1JKJgU5elQaE9/+vd/iB7+sR/fiPgpaztM6m8rm0hTUmhSKCnLQ
      Gi2UFeUuWc8tKMlxFZaSnjtv8r1f3iXZqCW14hD/2++dQftlG/UpfEgA0WiUUCj0ZdqjsMqR
      xQQej4e4BJaUVAw69Zdt0qfyIQHIsowyICisJRQXSGFNo7wFUljTfIIARMZ6WhmacSPLcdrq
      7jBu90E8SNP9JvwJ6UO158f76BiaZnaki+7R2RUwW0FhafiE16AqJrru0JTw8m9P5/JXf/lX
      bP7K/8Lv7LHww3eu8l93bieRiCPLAmqNmpGWm9zwlbJf30WLahfVxZlIEqg1ar5Y1MljPKOt
      XOmP8/VTu3/9a8oi1978BTVnvkmOAbB38L27fv7gjf1LZN3KIssSfXfeYkBXyyt7irh3+W2m
      QxoC/ghf+fZXaL/6DrawFp8/wbd++2uYBEAWufnuT5mXkghFBF5/4yS33nkLZ1jk8CvfRDvf
      jd9USnVh2orcg633HpeaptGLQbYce42awlSQZWb66rnSOIZaDLPz5FfRTt7hVp+H4vU7OLY5
      lffb5ji2f/OS2aH+0z/90z99ulhAjrq51zxGjtrFaDyJ6LyPLGuMcb+FjSke/suf/TfeOX8J
      Ma0Cc3CU0WgqRRo7k1ETQzd+Rrs/ha0VeUsmgLBrkp7ZOFuqihAAMR6i9f4dWrv60VlzMetE
      2h/co+VhD4I5C01olrt36+gZnCSrIJ/xrnZyqrdi1gL+Gc7fbSfkmiWEkSxdgPp+J4UZBpoe
      NGJKsdB49yZd/WOYMvKwJD1bL/J67p3nWkM3SfkbqU5LcLt9jje+9hoGdzfjPj3jNi9f+fpr
      qGeamTeuJ8+igcgMV1s9/MY3XiFh68YTF+iZCHGgQsewT4/P6aGmZj2aFXKK3794jcNf/wYb
      83U0tNnYVFUIQN17l9n52m+zLUfmfq8T70gHGw8dZ7CnFyngpqxmO2bD0i1ffeLtZuWVEvXZ
      qGtuY/fhl0lRzfKguYuiqvWIkpqdB56j0KpmaGSKJx2i7lvv0uTN5Jsnty/Zw/9xDD24wbQq
      l+PPbefq22/R//Ae4/F0Tp44ABE/XW3tFGzYhtHfx51O29MX0Fp4/uhz9D94n/n5WbpH50CK
      M9DbzVB7HaPhVPbv2IgUX65F+M9P1Z7TvHZooReMRyMIhiQ0KtBpNNjscwgGAzpAp1fjdHoW
      PhQMIiSbQRDQyTJOIZlNOQJdsyoycWDJyWdqZJhgbKnCzD4dLzJWlQq1Ro/X7XhUHgypSDaD
      TqvD7XKydU8tnY3NrCvKxKtKJe6cZM4VWDI7PlEAxowc8nBR3x9l27YKKrON1D+coKqigOY7
      lxl3Q3629anPZa3bTGZ0nJ5p/5IZ+XE4nQGKinPQmTJIUQUZtXnJKchFq09hXUkOYjxMV2cn
      UUlNIv7R+BcoLFmHMclMhkmNNxz90O/yqvdRqJrh3KWrjNhcy3ofnweNVssHvYugUiGLIjIs
      PNwaLbIoLnRKMmg0i72lSoWUSIC8UE+jNvDc6Vd549VjuD0RXIMPGB/s5vL9nhW5B7Usk5Bl
      ZOTHNgIqQUJcNFOt0ZC/YT/f/vprGMUwKcI897umeO/seZZqteqTBzxNCpVlqRiLN1Bg1FJd
      UwWGTMqyzOTk5THYdo+ZoIAYDvHke9Tcddv5zdf38fZbl3j6sVs6snOsDA1MEPHO4JJTqCxM
      Y2JknETMR2trN2M2H4eOHIKoj1j86V5tbKifYNDFtCdBWmoKvjkbQb8bu9tP0OOkeNsRzhyp
      ZbBvYBnv4oujNacg+ObxBCOMjs9Rub4MyefEFQozMu6h5AOfPiULYX6MQDTChNNHQfpC+WRn
      M9kbtxEJxSgqzMHvD37Kty0dhWYNfbNe5ifHScsvelSenaljZMzF9MQYOQWFCEDINYVblYZV
      HSUluxhNPEhiiez41HUASRIXJrpqFbIsIUkyKtXCpgZRlFGpBGQZBEFGRkBg4X+VwEJd9dJN
      giPuGW7dbyYuCaj0Jvbu24e9v4URR4zdBw+QZhAY7GhmcMbH5t370PnHaemeIL8gBzkpE3Pc
      TXZVDckaIDBHXdc4AbeHqto9FGcmM9Rez5gXMixmKqrK6Gqsxx3TsnPfXjKS9Ut0F0uHb2aQ
      aTGd6sJU5sf7aO4cJq1kI7s2lmAf66Gle5TMshp2rM9lsG+Yoqr1+Ca6aeoeI7u8htr1RQiC
      wNDQIOXl6wg4JqhvHWLb/gNkrsD9xgMO7tY1IiWls3fPLgLT/cjppaSpfNyra0JMymT/nu0Y
      dWrctjFEcz7phjj1d+6SXLyFmvKcJXm2lIUwhTWNshCmsKZRBKCwplEEoLCmeaY3xIiiiCRJ
      n11RQeFz8kwLQJZlRHFlFmYU1iaKC6SwplEEoLCmWTUCkMQ4kWjs0aqzmIh97ApvJBxGemJp
      Q4zHEX+FpQ4pESMaTxCNRJDkhZ9jCYlIKEgwHOVZXixJLObUCUcX1t4lMY7f5yMU+XAck5SI
      LdSLLdSLRUL4AyFkGSQxQTyxfO5mOOjH6/Xi9XoJhqNIYgK/30cgGOapXFyyvPB3lGQkMY7P
      5ycuSoBMNLq0sVmfEA36bCBJ0qNJsGe8jXONU9RULCyPh312vBE1ycYP57E597Ofkr9pMwbV
      wjph/dl3obQcq/bTpztR3zyOcIyGK5dILduEu/MW00Iqt975KUJqATnplmUN7vu8SFEvl85f
      xOkN0HD/AYWVFXTce5+JOSf1d+sp3FCDUSMACW6cewe7L0BHew+5RdlcevssQ/1dCBnr8I89
      xC2kkG42LIudEwMdjEzO0HzrIj3uJBJTLXRNuhhsbySenEeO9XE6yIhnir/43o+orNnOaP15
      7nWPMzkfocQS5X7vPKX5GUtm1zM9Cf40Qm4btpiahL2bliE7MZ+Hkt0nIOHn3vWrRIIxandt
      p723E1fhBop3VgNx6i6fxxnXs2VHLQPtzYSjMXIqd1JpdDIVTX10/UFnglLjAMMzTrZqof7G
      ZTwRkczSzWzMFLlypxlzzjp03lH8golEIMahF09hjM1wvzvAkf0bV6QdZEHHzueOkZ2VTsP5
      H9DXP8LofJztNelkpKejW4h+A6KMzUX5jTN7uH32TXweDx7ZzL4iiemZaXQRNftqUpbNzvJN
      OykKOxkdGOX0oc3E3LlszcnFPVrPzYFptpQsPNSyGKepoZ74Yi6JWZuDjbtP0NM5QHu3l83b
      l3YPx6pxgT5KJODG7Z3n2v1hTp4+RZ4xhisQgbhM9b7n2ZytoteeoDg3n00byxY/JTFhc7Hz
      0BH04Vks+ZUUp+uoe9BGJODB4YssVEu4iaut5BdVUFRcisHXh11dxKnjzzPddoc5bwA/Vp7f
      vQmHbZYtB45SmS3SPjzHRE87mrSsFWsHtS6JnKx0iHkZtKvINgeYtbkxJKcw3deOM7zo1sg6
      yrM1XLr0HnNxEykZeexbn8pENI0syY41M5Wm+gbcoeULYZzpbsJYXktakpbcvDxUSPT1jFFe
      WbhYQ8Y+2oY3qYzy7GQAdh0+zGTfABtKM4kZM5jsamRgyrlkNq1aAQAQ8xMVjBg0ajLS0xfK
      kiykG7XodBri8adjBg2mZIw6HUHnDL19w+jN6Wg1wod8fP/kCJai0sc/e9zMjHRz9cZtNKmZ
      qGUZc6oVjUqFRmPBnKyhaus2hjse0j7ooGbd0g3Rn41MIurlwjvn2P3C66QZDBSUV1JSVEhh
      mpqRqcX9AJ4JhhPZvPzSS9SkiXSOO9m48zmOH6xhPgC2rkYsBpEr9zqWzdLu3mFqNlUgsJCz
      tLv+Cr60bWwtXhh5ZRluXL5G2G9jbGKS7sFJUvLX8+KLR4n5fJgi40wl0mi7fpml2hGwqgQQ
      CXiZm5tjbt5BXJTBkEV+kp/+sUk6e0bQap/OQaPTqXG5fE+VB/wBCsrKifjs+H2BhdZfZHjG
      T1neY3cgr6yKlBQrmzZUEPAF0WkFFv4BCCCAxlJEgXoEV1IpqZ+QpnA5SITc/NP3v09SaS1W
      VRiduQCTNM/4tI3x+QTriqwE/H5EYypWOcC0zYYzIpNtXcjcOdjWSvm2WvRaDeFwFO1nzJU+
      PyI2v4aiNC0g0nD+B9ydMrB9XRq+YIRoKEBMlPnWH/2ffPXMScqKCtm4ON/zzY4RMxeQnWJE
      jIWR1Zolm48909GgiUSCRGKhF48HPfQOjpCQQNDoKcjNAK2RoH0SdyCCbaiPvD2nyBKCZBYU
      EPfM48NEsuRlwiOxobwAkLBN28jIyUNIBOjvG0JnSUOFmrx0A17RgBDyImm0ZGZmopLiTM3Y
      KSjKxz0zxoTdT3F5FWZNlPmARF5GCrbJadKLCtDKMu3XfkGk4iR7Sp/eKLRcxMM++vuHiEmA
      oKJ4XTUmAgwOT2LNK6Uww4TNNkd6bj6i307/yDTWnGKKc9MQgLm5ObKzs4n4nQyOzlJSVYVZ
      vxwiSDAyMkNZWREQZ6S3D094wd2yZheTro0im7OwJmkAienJKTJy8tFr1QQ988iGNJJ1IoN9
      fRgySijMsiyJVatGAJ9Qg4d1t5nxRjGl57O7tgbDSm1q/QiOyT5aBr08f3gXOtWz+L5I4eNY
      5QJQUPhirKo5gILCUqMIQGFN80wvhKnV6g8dqqCgsNQ803MABYXlRnGBFNY0igAU1jTP9Bzg
      SeJhHyNjk3yQmDolq4CCzOUL3gp55girU0k3L8VxzMtLxO9kbMpOWm4xWVYjXvsUU/NeBJWB
      ddXlHzpQWkxEmLX7yM/LwmOfwh6A8tICpEiAsKTBYlqeaNCPQ5YS2B0esrMeh44kIj6GhicR
      gZyiClI0EYbHZ8ktLsWSpMbp9JKenvrJF/01WTUjQGCmj+uN/RgMBgwGA1rN8h69M/nwBg1D
      z15axI8ix/1cOHeZiCRx6Zdv4k2I3L99nWBCjcGgfypkoO/eWf72rVsQdfDuhVuMtt2gZdTF
      QEcLztDKbT+VxSgNl3/K379z90PljoFmmkfdGAwGNGqBB++9xeD0DJffb8A/3UfnhGdJ7Vg1
      IwBAcmoWZWUfRHbK3H33J5i2ncbXcp6U9Xt4cOM9UvPzCQfhjVcO8/Of/gxzdiUHt+Zw7U47
      Bo2KTQdPo5tppHEyjBSNcfzUER7cuIqk1SAnl/La8Z2PHpqmm+cJ9hvJrtxDidTHVMo+tmeE
      efdGKwdrMrjdOo2QCLHzxGtULEYvrjhqI6dfewODVubhzVskYgHmHQEihmH0G7aj+SAaGoh7
      xrk76CVDZwUxRljSk20VmZu3EYibOZxhWjGznZODhFLSSR5/Ii+rLDM1NUEskMaEPZmCYjUB
      f5Dsqhz6ekZo642x/cDhJbVj1YwAANMDbVy4cIELFy4zOONh3/Gj3P3pX9AfK2RLoRnZmMlL
      L7/O3hKBxl4bKl0aL7x0nIbLV9l69AUO7aqm4f4DRobGsOSW8MJLL5CmDjE1H6Bi8z5OHdzy
      6OEXgD3HXuGrr7/AVFcznmCEaFwGSSQUijA3OYFkyuDoiy9TmrlyD85HEVRqTEYD/Q8bkY0m
      QkGZDTv3curUKQKd1+iyL4R4y2KUS5duceKlE6gFwJjHmYNlOPUVZMVtpKZquXzhEhPOlckN
      mlGyiYO1VU89gNbCDZw4cYxNaWEu3uvi0Mtv4JmcZse6TNRpmbTcukxD5+iS7dBbVQLIr9zG
      S2fOcObMC1TmpyGrNegF0BuTANDrjahVoNGoSYgiOp0RjQYi0QiTQz0MTrkoLczj6Ne+S7E+
      xPmf/ph2p4Hvfu00zpE2fvDDN/E/8gIEdDodCAJI4sK2QUlEliVkGWqOvMqesmRunfsXbjSP
      fGltIiWizDs8rN9xmN1lJjrHnJSUlWPQqrGYVMwvPtAh+wjT/jgP6+4yOT7KuMNPQVUtBzZn
      My+amXzYQlVpFtfrli8c+lchPaeELKsRU3IyLocDXUoux47uw+Hwk+QfIpy2idH6Gzwd3/v5
      WFUukMs2SnOzAQFITsvG3nGT6hd/l2D7ZdrGLNgnerhXl4ljNMDh09lcHx0DYNe+HbTMRTCq
      fUimInob63CrrWSkp6GKerjfPEJqWjpWS4IP4thkZNrqb6OZUpNcVEVhkUj9vbtosyEQVzPZ
      3cKYWyYzMxPhY8KwVwwpyv2b75FRVI7TIbN5vYW6G++RVVyGK5TCnlILM1NTZORV84f/czVh
      3wQ2VwPFGQvh0J3NHdTsPspIcILegRHSs2u+lNvwzE2DJYvRjnvYNXkY425qt9ciAI6JATRZ
      5RQaZuh52IOUZGWp0veumoUwMRbB4XI/2kCtNZjQIJGckoIUDRLxO/jJuXu8+MIxUlKspCRp
      8QXCJFuSEWQRj9NBHC1paakIiQgOlwe1zkhaqoWQz40/FMNsTSM5aeGdSSzkJxhNEIuLpKWn
      oVWByzGPpNaj1WpJTtLicrqQ1TrS0lLRfIkRoLFwAJfHT5I5lZRkA7GwH5cngDElDUuSFr8/
      gNFsQS2AJMXx+SNYUxYEEAgESE5OJhEN4fQEsKZnoF+hiFpZiuP1RbFak4kE/aAzoVMlcDlc
      oDOSZjWjEgRikSBoktCpZVwOB2qjlRTT0khg1QjgM4n6ae6ZYMuWjWhXlWOn8GXyr0cACgqf
      A6WvVFjTKAJQWNM802+BlB1hCsuNMgIorGkUASisaRQBKKxpVpUAxFiA1vq73K5rxLMMKfxk
      KYF9zsEXiYn0zo1h8wQYGxoispLTFzFIR9cQIOOcHuLWzZsMTDqeqhZ22Zh0LORVs410ca+x
      i4QMEZ8Tu3vpTmD/LGQxTFv9XR609RJ/4hAgMR7mYcMdHjzsJy7KxPx27t6pY94XARJMTEwv
      qR2rRgBy1MMvfvY2aes2s7nUytm3z+GPSSTiMUKhEHFRQhITRGNRQqEQsXiCSHjhf1lKEI0u
      lMfjccKhD8rFR+kTo9EoQdcMF957n5gokYhHCYXCJEQJWRKJRiOEIx+kSZeJx6KEQyFESSYa
      CT+qa0rNIT0ZOptbWMY0mx9pHJmHN9/l59ebifrmuH6/h607a3l45ZfMPHGkum92iL/967+i
      d8oN4Vku3R3A6Ovhft8cfV1dSOqV2/vQfuMs4Yxq0hOT3Gkf++BG6L53kYClAktomPu9Nuou
      n0WXZuXajTqcI53MRpb2vc0z/RboSeZGOkkqrqU4MwUBM2+8koMu7uTNd66RkZ2GO6hmX7WF
      n13vZnOxme4xLxurchmdk/jW/mz+27ud7Co1MTgbYmNlAcPjAV47UUFdT4RXj+/kJ3//ffYf
      rmXOZmPWNk7j7XrSMq0EJQtHatL427fvsmPXPg7trkEgylv/8NcYimuoKs6ko28CiypI2LqB
      mqQJ5lK3rmjbeG29DMWNZKli6C05fP2rLwMyqSYIxYDFzOO2OTc7d2whCKDSoBUS+CMSBO0E
      9NlkW1ZOAAajkXmPE28whj5T+6hcZzAS8rrQhmIY0tWIBh1+rw+DXqBzPMCeg5lLaseqGQGi
      kSA6nWExXFmFKdmMc6QDQ+lOjh07QTpzjM8HyCqp5tCR46SmWjhy/CiaiIO4KJFdsoGTRw6S
      Ys3hwPMnSA7a8H/oGwQy8krIKyggbushqMskLy8f32Q3s944OcUbObSr5lGDScZMjh55nsxk
      LWkpZjQqmZGxyRU/SEOKBahr7OPA/toPbX5xjXdgT1pPyRNZGqu27CTduNjn6TM4c2I3WZW7
      MYXnMQpezr71Dt1TK7MJKCKqUMW8BONAYnGolCEalxDEIBFRRSIRY+fxV8i1WtlUYMaYaubG
      xfNcv9/OUh2duGoEkJFTiHvetnD6ixTn7nsXsPliSJIIyMiygFoloFKpEAQVap0aNfDBE6lS
      q1AJAhqNliczrSysM4iI4pOProzBmEyy2UJF9UbMBhVave5Dn9PqtKgEgdHedtRpRWzfvAG9
      ZuUD4iIBD5FYgta6Bubs44zOebENtvJe8wwvnTr4qUN8ak4xJekSfl0G0wOD1G4up/lh/4rY
      3T/lYu/OWrZtrWR0YOhR+fiIg237drGrppyhwRHUSVaqKwuZdUUwBEYxFO/E1/9w7YVDm3LW
      s9F6lbfPnUedCKNLr2BPbSkjb13k3Pk+EroCNmQmMbLYMoKwoG1BJQACKmHh/w/yDAmCCpM1
      l/jcu5y/6MQV06LR6SEwRyL1JJrBBtrb5xC1GWw0qBc//wHCwvUFSMvIpLuvDa8mQNCfBBgR
      hIXvWQk5GNMKeP1rXwPmGBkWyFI7+fMfvUnp1t3cv32DLbsPEJyborCiCoOap+xqezjE9ueO
      MRqd4M79Voq2Pr8CVsPumnVcuXwRtRinpvYg9rEB5PQSNm+v4Pa586jECNtrjywk8B3rx1JQ
      RUlSKm03bqM157BUW5Ce6WA4ZSVYYblZNS6QgsJyoAhAYU2jCEBhTaMIQGFN80xPghUUlhtl
      BFBY0ygCUFjTKAJQWNOsmpXgkGOcTpvIrpoyBDFCU2Mb1bV7SV62+C2Z2dFeVJYcxsZm2Fa7
      Ce1nf2jlkSVmhrto6x0nq2wzNcUm6u7UExIh6Pex4+irrMt+vG46P9rJvCafDQUp9LbUMeyU
      Ofz8QSTPNB4sFGUtX8btJ/Hbx6hr7gJ9KvsO7Mai1yDLMg/rrjLljhGPBLGWbGN7AdxpGmbD
      jr2UZxvoGZhhY3X5ktmxakaAqHeOvtGZhR+kGH09PUQSEPTMMzg4jDcUA2S8jhkGBgaZ9wQJ
      ehz4wjFkWcJhm2Zmbh5RBiniw+4OPrqW3TbD8MgE0XiUydFhhkYniCZkklMzMQkR+gbGvtAe
      geVEjvlp7Z3m4PHjDN4+j1ebwdEXznDq0FacngQ5acZHdSe77/N3//gTxux+CM1ys91OkW6O
      +t5penoGMSWvVI5TiabGVrYeOMY6i4f3GwaBhTCNbQdO8tILx9HGgqRnZ1J/9SoF6yu4d7ee
      qd42EsalS40Oq0gAAI7pYR40NNDQ2ILDHybhn+YX71wnHPZw+dwl7DNDnL3eTDzi5d0332Vi
      tIMbjQOIMQ9nz17hznsXmPHFGG2+SvtMeOGiUSc//uEv8QTDtN+7TM+0l+nOO1xvGaWv4T2G
      5qOfbtSXjKBP4aUzp3CPPGReSsa8OKY33bhGzZHTJD9xar0qOZtjB7Yt/KAzkaIKMDATICk2
      j5hSTJpxpRwCFUdeep0cix6NSg0fOQfOOdaJQ1/CxoJUsnLS6O/qwWpNom9OohA6C+oAACAA
      SURBVLpgDQvgg/ToZaXFmA1aZoc6mAtEmJ6eY3Z6mPmgGqs2SnfvII55O6nF1cwNdTPT20xy
      1V5qq7Lp7B2lsc/DrvXpj66bmlfC5o2VZGdm4ZoaZHJ2ntn5Z/9sgCdJz6+gKiNB/7QPok7a
      ZgS2l2V8qE5+cTnJusU/udbKG197ncOnXkX2OlAFhvjnH/yQut6l3XH1acT8s9ztdHFgx7on
      SkW6HnazcdtmNCqBbUe+wvHnDlCdqcNq1fLzn/wLPz93c8lG5FUlAIPRTGZWFlmZGei1GnR6
      A/nlNRw9+jxHDh0kPtuFmLGJV148idUgozLmUKL38db7neyoraJkwxbmWi7iNpVieeLONWoN
      ghSn6UEH+06/yt4t5aumYcSwh6bWLvSWNPIzzbi8Qbyzk5hyS0j6jByRBpMFbXgSKb2E2TEb
      zx/YTk/fSmS6lvHZBvinX1zlyKuvk/HEyCPHwky745TmL4hXpdVjNamYdMsYghPk1hxBNTuM
      d4ksWS1/Z9S6JKyWRR9VUGFNSyW3eje5iXEuXrzCdEBF6foawpOtXL1+E5UphURMYnttNbHk
      EkotarTmXLKTJCo3b3x8/KpKg9VqBpWG9euLqL92mY4RF1qVRJLZikGvIzXF/Mw2lFpvQvBP
      c+ncBcYT2eyuziUcDZOfX7hwDoAUY6Cnl8hil6lPTsGc9PjNQd+Im11bKti4oYS7DzrYuqli
      BayOcf3cWeJaI613r9HcN8ncaB+zviiJhEhSajYWw2O3yDEzTkHlJtZt3IGj9zba4mqWaqq+
      hlaCZZzTw9y418HxV14m1bBqXoApLCNrSAAQ9DiICEmkWUwfnXcprFHWlAAUFD7Ks+raKiis
      CB9yhBOJBLFY7MuyRUFhxXlqJig8Q86xKIrKnmCFZeWZngMom+IVlhtlDqCwpvnEl+GxsJ/Z
      OScSoNYayMrO+tDpgbGQF4dfJCc7TVGRwqrlEwUwN/SA//Lnv6SgvJhYwE3e1lP87leP8kEo
      iXeqh8stfr7zzRNLdmbrpxGwDfBgIsGR3Rt+/YRTskjTrZuU7z9Gmg5wD/NuR4hXD305Z+Iu
      BbO99xmSSjiwMYe+5rsM2PygTeb48YOMttxhaC4I2hROnTyITgCQ6aq/wYgzjDopnaPP7aD9
      7g2mfRIHj59E5RrFq82kLMf6WV+9JHhn+nj/wQAqlcD2g0cpTDMCMp7pAW419oKgZuehY6gd
      XdztmGFdzU62libT0j3Ljq2VS2bHp3be1qJN/Ps/+Y/8yf/6b5huvUp/Tzv/+T//Kf/3f/q/
      uN87g9sb5P75f+CtO70EnSP85Z//DTNzM/zgL/6MP/mP/4n3H44tmaHxiI9Z5xMRILLIeF87
      9+ob8UZEkEUmBzq5e68eZzBOLOShpaGO+pZuoqKEa26W2AcJJWMBBgf7uX/vPpMOP0TcDE46
      QIozMjhIJBajt62R+41t+CPPXiD0UMsNfn7uOnZvGDnsom3QxZFTp8mVp+kdnqZjxMvR06dJ
      j4ww5FycQ8UcNA4EOH36NNboFKNjI3TMxKnOSNA+MEX/iI3MNMuK3UPT3Sa2HDnO3pocWtsG
      FgplaH9Qz/oDL7BvfTotXSM8fNBC9fat9HS0M9TVgTU3b0nt+BW8F4FkayZpyVo8Pg+2KSev
      /P6/ZUOmijmHh/Lycurv32esvZ6QtYTJxou0TsepyDfy7k9+jnOZ3qpOdt6laTJKdVEqb/3y
      HJMDTTSOBqhZX8Do0Ah11y6jz61ANdfK3e65pz7vcfspryyh7tol3PYp6trHQIzQVF9Hb/Nt
      ut16yjINTNndy3MDX4C8qp28fHg7APFQECHJjEGrJsVsYnx8EozJGDVqrCkGbLOLUa1+D6Sk
      o1FpSNFpmI2pydb4aBnxYsWBNrMUPYmF3KsrwHxcIidJR5LZimt+9lG5xyuTkaHDbLEyPzdL
      SXkBTffqycqyMuHXU2DVkRCXKjXuZwhAjIWxz83S296IM2Yi22qCpDQKs1LRL0YaZlTtoFKa
      4J+v93Ds+T2oBIFwOEQiHkfWqBGWqT1nJ+wUVZSRlluKOeZicGSG7NJSrBmF1G4sxZSej0kI
      Mu/w4A9Fnvp86frNZGflkq5L4ApFkGQJGZBlmczSGgosMnFZxj5nX54b+AIYky1o1Yt5sjVq
      pEQCSQZJljEajcjx+MLGH0nCYFh0ULVa5FgUkBEFAYPewsvf+A5f/8ppIoEEwclWrl04z+UH
      K5McVy/LRGQZWRbR6w2PyrUaiVhMRpJEDAYDlXtf4re+/RqZOsgwBTh7/hpvvXWJ4BLZ8Ylz
      AL3JSromwD9+/6/RWzJ54zd+i+LUMOvKi9AIAvrkdEoLtajUyZw8uY+32yNsLrZCxsscnfkX
      BuwxvvUb3yRtCScIfqeN/v5+VGodWevKaHjYisFhRMwsZ9OGdG63PaQnlo3dJ+OdGAFLGpFY
      lHg4jPEj1xrve0h7kYRLtrI3N4/43Vt0dUvYPSHCAQ+xuITLMY/b99FPPltozGmY407a2jsY
      H/Gy/5Vymid6aG3vYHA8yon9yTjm50lJz8ESfJ+2zk6G5sI8t2thP0Rvy0NKth5k7N5FjCYD
      vsTS9a6fRlVRKvcaWrEExylct5eAex6MqZSUZtB0rwlzcITSikOoANf0MBFTLqW6aQaNauLu
      +SV78bJq1gES0SBTM7OIEghqLXn5+YTdc3hCIrkF+RjU4HHM4fJHycrLRxXzMefwYbYkI6uT
      0EoRjKkZC5P4eIgZp49YOEJaTh6WJC2eeRveiIzRoMeamoLDNkNEUpObl4tBq/5yG+JjiAU9
      BCQDaWYDYb+L2XkPSSkZ5KRbCPmczDm8GK2ZZKcacbk8WFLTiQec2BxeTNZMstLMCIDH48Fq
      tRIL+7HNucnKzydpBe5XioeZnp5F0iSRl5dNzO+GpBQMQoyZ6VkkrZH83Cw0KoFI0IesSyZJ
      LWGbnkJrySIjZWk6plUjAAWF5UB5ha+wplEEoLCmUQSgsKZ5pucAsizzDJun8K+AZ1oACgrL
      jeICKaxpFAEorGlWjQBiASej0/OPDqIOemzMOp9eEJ8YGSH2hFcXcDoJ/QqxIxHPLFNOH9Nj
      Y0QSEPfbsfujTAx00jU4tWQHMy8HHvsEDffvMzztfFQWdtuY9YSfqivGggwMTwBgn+inqb2f
      hAzRgAeHN7R8Rsoigx1NNLf3EklIyPEQ7c0NdPZP8OQRzZIYo7+jmeaOfmKiRCzgoPFBM85A
      FBCZmZn9xK/4PKwaAQTnhrnT8jhORW9KxWp+Os6i4fYtQtLjFr1z9h1mI/HPvL7WlEq6WUVL
      3T18URhqacETDnDtViPZuekrcubv5yHhn+XslfsUlJXRfPnnjHtFAo5x/u6//7+0jnqeqt9+
      4xf86GIDROY4e62V6GQTDQPz9LW3EpaW73HovX2eGU0OWt8QV+p6uH/xTXzGHNx992gaml+o
      JMt037vEvCoTwd7F9eZh6i69RRCZK9fq8Ix1Muxa2oXRVZsdaqbnDv3RSlK9LQx6YLavnaoX
      fxeidi6+c5aQfZba548zOD5MtHOIsj0bgSi/+N5fErWWsWPbehqb2kkSIqhytnEwx0VDMG/x
      QZcYDcnU2PsYnZhganKM600P0JuSkM2lHKnS8/dv3aR62z68fTeRMtcTmp7i1G/8Dmmhfs63
      RvnWmd0r0g7q5Gx+47tfBwGyrWq8wSj+qRmqN1V/qGcFCM310mzXkPso9mzhQO+wx0ZCnclm
      q+Gjl18iRO51TbClNoXZeCrP7a4k1biRRDTI3Z744n4FkIHWh8OU7EzBoc5l/+YSWscX9qmr
      hDitQ272Htq8pJatmhHgY4k7eDCS4BtffZ0jO9cvFlo49sorHNtexIQXSvMK2VzzOPlqwpDB
      iy+/TKZBoqCwiHSLgaHhEUSJR+6VHLYhGPLJLq6iuKQcrauXeMo6tm7dRmC4CVsQctZt44VD
      tWjVFk68/Aqnn6ugpXOM/vZuqrZsXLEm+OBU+qB9kOFQDlU5Rjbt2kvuRx5mOR7i8vUWTp86
      uCByQzavHNuKLn871qgdsz7C2bffod/29KjxxYnid7jJrNzN9mIjV282IgsCAfc8EZWOkM//
      gZV4PA7yq3axNUfmyr0O9r3wBkmSzNaSVJLSrNy8dI6bjd1L5pKubgHIErIsIPBENgu9Ab0K
      BGQk6ek3vFqdFrVKxeRAJwHBwsYN1Ri0H3Zw7CPjZJcXPfpZFEUkMU44HKWwshqTFvQGAypA
      pTag1UFB9XbmB5romIpSXZC8jDf9UWScE928c7Wdl19/Af0n/EXDrml8CZnmu3eZHB9l3OEn
      q3g9NUUG3KpUpnq62bKhmHuN3ctgo57U3FxyU5MwmCyE/W4mx0YxZhVzYP8WRvsWN8QgkJlb
      TKbVRHKyGb/XgzY5g521G7A7gxj8w6jya7E/rMe3RJatKgHMjnRx/fp13r9Thycsgi6L2mKB
      dy6+R33HOIaPyfeZYjXQ2THwVHlyihXX9DAPWtvwePwfWnAbdQQpznz8EJdu2o0mOM3E5Cjz
      AQHTxxwVozKksyHVj5i9EeMKtmrYNcFf/80PwWCg/cE9Ztwfmfgu7nJTZVTw27/5XU6dOERh
      cSnFGWYAWlt62LZjM7lZFhqaOsjLzV4GK9Uc27eBy5evcrOujY3bawlO93L+0nvcaehjy44t
      zE8M4QjG2bt7AzevXOFaQw+127cgAPaxPpLyqigpLmOm5z4RU+ZT4e2fl1WzECZLItFobMFN
      EQS0Gg0IcZrr2ijbsI62W9cp2n+GdRkGNBoNsiQiokIli8QlMOi0gEw8nkCj0YAsEY3GENRq
      BAQ0agERAUGSkAUBjXohJDgeT6DVaRDjceIJCa1Oh1qQSUigVasWrqfTIiVi1J37BZnPfYXq
      jOXypT+jXQCtTo9GrUJMxJEFNRqVQDyRQKPRIgggyxLxuIhOt6DiRGKhPSQxQSyeQKvTo1Yt
      w5RflolFo0iCCv3i3yIajYKgRq/TIYlxUGlQCTLxWAyJhXqCICCJCWRBjVqAaDSKSqNFq1ma
      kO1VI4BPYm6sl+5hGzml1awvy/3ShjTX9CAjbjW1G0ufqeRiCp/OqheAgsIXYVXNARQUlppn
      eh1AGZwUlptnWgBKclyF5UZxgRTWNIoAFNY0igAU1jTP9BzgScLuGW7XtyALCybnrtvC1oql
      zRP5JM7xLtz6EtblrGRYw+dAlrGN9tA5MElG6QY25JtouN9IWIR4LM7mfUcpyTQBMvaxHlp7
      J0gvrGL7xhImeloYcsgcPLAT0TuHVzKRt7hCvNzEgw7q7rcg6lPYtWsnZoMaWZbpaLjBjCeO
      mIiTVrSJLQUa6poH2VC7m/x0HUPDNirWFS+ZHatmBIh4ZnCSwanTpzl9+jRbK3Lxud3EJYlI
      wEsgFMbr8WCfs+HyhUBK4HG7mJubJyGKuOfnsDvciJKMlIgwa5vB4fYhyTIhn4sZ2yzBJ8Km
      XRM9dI1MY5u1E02IxMJ+QtGFmCCv148kxpmfm310zS+LRHCeB93THDhylJnGS0zFLBw+cZrj
      z21ndtZNmnUxaED0celGB88dOYK7/z5jk+PcaJkmR56kvtdGX08/uqSVW8FuvPYeaZv2sM4a
      5k7zQqiKIAhs2XuMUyePoo96SEpJof7qZTJLi7h9+z5zA+0E1EvbIa2aEQDAOz9NT08PAgKZ
      +UXY2m5iM68n2HOfmuee5+LbZ9mybz/2oQEOnDjOuTffpHrHc+ROttNpV5Oh8qLO24p2oh5f
      egX43WzZvJ7rN+5TWVlIz4ido/s3s5hNnKGeLrJiJprETDaYppi2HmRXVoh332tiZ4megaAV
      q+yjeOtBSjNNX0qbaJKzePXMCUAmSa9GXExm3X7nOpUHT2L5INDPN4+YmkuSTk+u1cS0L4xR
      CDPllDCb54km55P+cUFOy8SUP86L6SZkTT7OvnGg+tHvPFO9zAr5HC5Ko73PzOToOGaznl5b
      nH0HUpfUjlUzAgBotHpMRiNGoxGtRk3NwRNM3/0ZicI9rMs0kZq7jr27d7F7fQa9o3YsqQXs
      3LmZzsZWDCYdKpWK7o4eDJZkJkfGsOYUkZJsRJvwMzUfprys8PHGF0Fgx8Gj7D24j9jcCKGP
      ZLk2JJuZHx9Fk5pHpmXles5Pwjnawpx+PeUZWoh7aJsUqV2X+biCJKNSq0EAQZJJqC28fOYY
      NXuPogk40EVnePNnP6NleGWSAUuCgHohjhdRfPJVt0RvezdVWzajVQlsO/IK2zZUsz7bgNmq
      58I7b3P+egNLlbR+VQnAZM2guKSEkpJirCYDUb+diDYDz/QoCRlEaSFLcjgcRqfTolZrUalA
      o02ivHojG2s2s72mnE37T/O1l44QHmmmYTTEa9/4Dge3lnLz7Ds4n9g8lognkONxohKoVBCL
      xZGkBJIIBRv38e2vnyE5NMK1up4vrU1kWWay5z6Xmp28+sJ+NAL456bQZRZifDLHp8mE5PeD
      LBMB0owmkq2ZpKo9RJPzsI1OsG/nJjp7hlbE7hQB3KKEGI9gTkl7fD/xMFOuKCX5GQCodSby
      s8zMuBLoA+OkVR4gMdm/ZOHQq8YFUql1eKc6uHzZgwBYc0vwD7dy/Ou/S7DrCk39c3hsQ1y+
      cB5JSubF2myuT88gAIdOHeHKjWvotVCx4wh99dcY8MjIcSO1aXD5wnnUBgMZpeuxLHoBGp2B
      wdZbBPplyrftZl2uSPO5a9waMaBKsjLV3UDLsAtNIk7F7oIvrV0irgl+/u77lGzcyu33b7B5
      5wFUIR85OQWoBUCKMTgwSmFFBRVmD2+fO0csrudM3sJJMJ19NnYePMyENMPd+nbW73h+Reze
      XlvJlbfPYpCjbDt6BvvYAHJ6CWnqBKqkVFKSHgcU2qdGyCrbQIkxm67rt9Fll7JUR3k808Fw
      v1Zy3MAs//BOHd/85hsYV42sFb5s/vUIQIwx6/SRmZmBWolGVvgV+dcjAAWFz8GqmgQrKCw1
      z7y3rOyuUlhOnmkXSEFhuVFcIIU1jSIAhTWNIgCFNc0zPwl+jMz8RD9t3cNERSjbUEt1aQ5L
      mcJGjIXo6h1j45YNn7th3NODBAyZzHR3smHPQcy6pbPvY5HidLfUM2LzoE/NZ9/WYh7crSck
      gmPWxt4z32Z9jgnkBB0Ndxmf92PKLObgrg101L3PuFvm8Ilj4BrHq06nNMe6zAYvEJgb4WZD
      JyqDlYOH9mN5IqmZFA9x9dot9hw6Rtzew+3Wcaq27WFTkYm2nhm2b65cMjtWzQgQ905y/lYX
      uw6f4MThnQw8bCIQlXDPjtHU1IrdEyIWcDEyOkxLcwtTs3a6HrYwanMhhlz0Dw7T2tzCzJyd
      ztZmRm1uYmEv03MuAEaHBpke7uTilWvYvWFcthGamttwBaKIYS+Dg3209YwsJqASsU0M0d7a
      iicUY7Svg8aWh7iDUTQGE0k6mJmYILZUEVufQiLkZTao5cQLL8DkA8aDZo6+cIbj+zcQki0U
      Zy6EQ0tBB1NhE6dfOEVorJmxsVEeDAWoTPHT3DdF78AEqdaV2QsAMNQ3xOZDJyjVOnkwYHvi
      NzIjHXe5fLuFSFyi6fZd1m3ZREtTEyOdbRjSlzZz3aoRgG2kl7SSTaQkadEnZ/LSmVPoAsP8
      4koLOVlmrp59l/GRHn5+8T6pySI/+oefoLWYuHz+IoGZPv7pQj1mbYQf/vgXGNIzuPLLN5l3
      jtHQNgjAtQsXUFtSMVssqHzDvHW9g+z0JK6cu4BrfpI3rzwgI+2DCJQ4V958G9GYykznbR7O
      xMlUe3jzcj0zfQ/onlqqUK3PRpOcwdHDe9Fr1ERjInr9QgBcw7Xr1B47QdLisrgqOYcXjuxa
      yGqXkNFa0klXeWgZ9mIWHagyykgxrNyB4FsPncDkG+Nu1xRF2Y+D4aK+GZoG/WwqywKgsDiH
      5vsPyEi3MOzWUJG7VFFAC6waAcCH1wRkScQ22k9edS2FRevIt8SZcvjJK1lHYVEVeSV5VJaV
      oE6EESWZ3OIy1pWWkFdYTnFRCSYxSOQj1zckmTAajTjG+/D5/bR39eN0zOD0RskvqSA/O+NR
      uLQuPYfK0iJy8/KJ2Ppp6hzA4fbwZbxTlmWJ0darRPKfo9yqQQ7P0eVKYkuh9al6/S03EQp3
      UZyRzle/+5t88zvfIupyIdof8qO/+zuut42tmN1p+ZWcPrKF5saORftk7r33HpW79qCRRaKx
      OJsOv8FvfvOrrLMKpKdI/OgH/8SPfnaRzz7x4Vdj1Qggp3Q9rvEegtEE8bCHt3/6U/yCEeec
      DVGM4AtLpBgfx+ULgvChQy0EBASBhTLhgzpqgsEA8ZifQOjxo2syW8iv2MwLp0+ye/s2UpN1
      qNQqnlyTU6lUCMh0NdVTsf8lju7ZhIoncqyvELIYp+32BR7MJPPasc0IAnhmp7DklqDXPv7z
      ylKMpuvv0uWy8sKhhXoqtQbfdA+6/EocNjdHntvJ2PjUitjdcud9XDGJ5JQUpHj0UXlmUSm+
      8T5m7XbGZxwgqCDqYdqvxRCepWjbUZJ8NgJLZMeqmQTrrEWc3OXi5tVLSJJM5Z5jbKrIJOB9
      nwsXr5FetZeybBmnICOoNeTlZAMqCgoL0BqtFGQJoNaTl7PQi+cWFZGWWUK+vp8rNxrILS/H
      YLKQmywTS6sh397C/9/euQW1eaZ3/CchBAgQEjqgAwLM0ZwMBhMb2wmO7Th2vBvvxk26uerp
      pu3sTGd615l2Jr3q9Hpne9FOZzrTadLNZruJ7Rh8wAbbYGMwIMJRCCQEBsRRCKHjp+/rBUlt
      N+tMswteu3y/W2lePfq+9/8envd5n+fK1RkM+RVotWlYjU8/KiUWq5UUpZKK+kN09t5gOUuN
      PVeLRpeBPjMdldVK6gsYXqJBP33DXnLtEq1X26g/0kKaBPsKC7ZHNzGOa3wKszGdnuFZ8ktS
      aWu9QWPzMWx6Db5lgcamQhYVlTx0TnLk8MndNxooKsqj60YbKnUGp04exe8ZRzLs48DhN4EE
      YixOTakdBbC+4qeospr8DAeTNx+QU9lIzg7ZIZ8Ey+xpXpklkIzMbiALQGZPIwtAZk/zUm+C
      RVGUM0TL7CovvQDkG2Eyu4m8BJLZ08gCkNnTyAKQ2dO81HuApwnOjXBnOsH5N+pRCCGuXm3n
      6JkL6HYtK6GEf2YCpUZPb/8kp98+zm5HNv9WJGPc72xndUskRgbnz58iXSkyeu8KG+ZjNJcb
      AEhsLnPnwSPiCQHPpIeWix+w5OxmKZTk9XPvkrI6STDNRpltZ3NvPo/Zkfs8dK8ixhM0nz5L
      vj7jqb8U5NPPrnDm3YtseXu4O7LEvupDNJdr6R7yc6yp8jta/n68MjNAMhFhI/R1EWhJZCMQ
      IClKLHqGuXatnRn/BpIkMjP2iLa2a4x4/Cx5J/CtbCGJSUYf9dDnHCEmSiQCcwx7lrfbEkIM
      9fVys72bja0ADzpvcv1WF4GIsO2FSgpsBEO/lyC3/wtCLEKGuYRzPziPRfThWggz2HGF1jt9
      bEaeOBBSs02ceussx+r3kZFXSpk2jntdRb1DzcjkLC7fGnbzi7kLACJrMTXvvHOON+pN9PRN
      /s8nkiQy1teJ0/UYQZQYGRyhvvk1PBOjjDqHcZQU7aglr4wAABbcg7S2ttJ6rZ359S0iS+Nc
      7vLR0tJI740r+DxjPPTGONywn64vv2AzvsmDvhHi4QV6RudZdQ8wsxxm5EEnMfXXabaFELe6
      hmhqbsD1oIO0/FpsKYtcuz/BgnsIf/Dl9kKpNDrqaypQSgn8gQSGnDSqj57j7LHq3/ByJR50
      3qWppQV1lol92VEGfFFyFato8goJB9aIC+ILsFpJXUMj6SoFKwur6M3fzDoSoeUpxlfTqCne
      zg1aWVtBf3cPDpuBpUQWmdIWm+HY85v+nrwySyAAa2k95841o0gECXzya1Yez7AZWuX27W7C
      QCyphOBjegaCxJICWlsZ4XtXmHg0h7XmMAfSvTwYHmZzAf7w7SdrJ4PZRma6mqysTIaHHqJJ
      bBDXxuDFhcf/TkhinIE7rehqz2DPSoGv8y5/C2GdyVUNb1q3L8mcvvA+ohDmTmcPiuU+Howl
      UVgPcP5IxYuwmqVpJ6OBbH54bDu3qiRBZ+s1DNXHGfeOsrS6QU39SYrqREZ6u4grolzreIgU
      j3Pxwx+xE6vfV2oG+N/ojGb0RgenTp3AYTQQXvGittXyemMliWgYMSWHCqPE5/dnaaiykVdc
      RXjsNklTOeqnuohCoQAxycTEDEdOncGWo0Z4ISPh746UiHDr8mespJfTcvC7K6fEFqZIK9jP
      01UAFl1OdKXVbG1EqN5fyupaYHcNBkDC099O2+AK595uIf2pXJaNb57FoUtHqVCg/Dr+PLqx
      yIqQTbYUxLSvhrToBvHnNf09Sfnoo48+2qG2dhxRFBHF7Y4oiUmkVA02kx4FEomESEHlQQyK
      FfoGJ7CWH6CyrJgVzzC+5QgFhflYrPnYjFkkMvKoK7GhVKWz5nXhaDyO/ZvdsyQSTyqx2swY
      ctIY7B8iTW8hR2fAbsomU59HmlqF1WJ6KUeLWGiN8UkfYiKMxzODJteGNiOVpBAnLceCMUvB
      5ISbTL2RRHiTdJ0Va+6TYh7zK5tUlhRi1KUz5Jrn8JFDaDN2e7ufYMw5giBJzPs8bIoZpIQW
      2VJpsZhN5ObqUCpSKC4pJi01heDaEnpbMXa7ncfjA5j2H2KfWfebZ7nvyUsdDr2zuUElZsd7
      6XGH+MHZE6SrXsbuLPOi2UMCkJH5NvIwKLOnkQUgs6d5xg0ajUYJh8O/L1u+hSiKJJMvILmO
      zJ7lpd4DyMjsNvISSGZPIwtAZk8jC0BmT/OdsUCxUIBPPr/NPdcyyrQMLl54i7eqf7uMzEJ8
      k3/42WX++C8+xKFRcOlX/8Wv+hcJRRJkatI5ee4sf3Ss8JnTPUkU8K9HbN/EDAAABalJREFU
      sBieTdoaXl/iHz++x1/+yY/I08galuIBfv6fPeTnG9AaLbyx38CX7X1EJRGlvpD3m4uefFdM
      0nG9HV92BSdyg7SOB0Cl4c/O19HR3kPBwUYqjLsTYy5JIi7nEG5lHudrTbS13mUtJYNYUsXF
      0w1o1d+8S4kFzwT/1LHI37xfx8dfPiImKXn3neMol6foWcnkvcMFO2LT8wUgCVy+dJPVnDJ+
      9ncXWJwe4wvnNMcK1fyyfZwcDZRVFOP+aoyZYJLTJ5uxssrNwWWIb0BuAX9wdB9jX41we3iR
      qiIt69k2LJrtLv7uxfc43jTG3348xt//9Y/RiRGu37zLmD/KoUMHqNLG+PerPczFcvirDxq4
      1+XEH1HywzPNpK0sQmYeugy58wMs+ebJsNioq7RjM+uZGOgllGniaJmZWPzZLJpel4vu6Q1e
      P5tDb98EZ043cu3WGBNDoyhsJZQZduuChchX/U7+49YoF39SAvENJkKZ/PS9g3ze2sV6WECr
      3g7B2Fpf5fp9FyZLMeu+GbKKKzD6pwgsLzLgjvHhmRdwH0AIBbg/G+fHb1Sy7l9gRcjgZFMp
      ofk57o7OYnYUIK4tEkjJwaoMcqlnCq/Lza2RWfKtWm7cHGRqbpp/bRulprqA9tsDlJbYnwnE
      8kw9RptvJ1etoLujgxueOE2luXx6+Q4BhYaAf52TLXX4PV6ELCOZkUXaBubwTM9jL7aSJtfP
      AyAYTWLRpTPjnuBKvxfnxDwKSWTc6eRx/ElcT2Bhhru+OBUOA/bcLGr22+jtnaSsUM/oqohB
      GWFubffc4CZ7Pq9V2LDqMxHEVJThJT5t62YtNRerdttOIRri2gMXjgIT+2xmcm02JL+P1Fwj
      o67HVDl0THiXEXbId/lcASQTAjGlisxUBW63h+u3uvjk7hQu3yINTQ0cK88jFBHIShWZ9m9g
      0mlwz6xz9q0j1JozUZv1rE150ZZU0FJXjk2npqrY9sxvjHr8VJVYSSHBsGuBlmON1JXZSUnG
      UCZjrCiNHC3XEwwnSCeOzx/EqNMwNr9JpcOwM0/g/wFlNbWcf62M1+oKWZn1E1FlcappPyeq
      bLjmtusfkAjxL79+iEaVYNS7SiAcYf+BGi6+UcnK0ibZhFiKRvjlNecuWanEpNMQSKgwZSoZ
      7ndScfQ4H5ysh1CAqARIEl13uvGGJFyuBda2NknLMfGTdw6jFcJYjRr6ZwKMDjzCvb4zITLP
      FYA6R8dBfZKf/6KDx2GQJCUNNfm4PQtUldmJb4W41NnPwlqAmaUtCgxZuDcFaux6xt1zVJY5
      0GuzmHdN8G+ftdGzmE6lQ/PkB6QIE3NBKhwmQEWxI5e7d7v5509vYyrej3IrQEgIMzjq5lL7
      EIsr6/jWBQrMaSwEBIrML66Yw0tNMsovvriLb32L+93jlB8ow56jZml9kw6nj8ZyCwkhiaTS
      8NM/vcCJaiN62z5qzZlIosCNO1/R1FxLeCuBLSOVTP3uPdfo1ipiup40BaSqUhESceYXltEY
      jKRJAiJw9MQJ/vx8LSqNllNV+SiAqQkXYa2dPFUUiyWPmKBEr9mZyxrfeRAmRLfoHfESTEBx
      oYMSSwaD/V5K60rRpkh4p2eYDkpkKyKY8x0sL6xQXVXM/LSbFKODgmwFzpEpRHUGoaSKlpr8
      J40ntugcmKOhoYJsFUiJKD1DbmKqLJqqCkgXI3Q5PVgKixDXF/AnlKgicYrLbXh8QQ4dcDyz
      nNrLhAKr9I7NY7Dnc6BATyIS4uGwl2yLnWpLJq7ZNcqLLaQAsc11pjdTqLRpSYaDjK+JVOfr
      WFtapN+zQWNdKfpdKpQR3VjDF1VTnpcFYoL+oUk2FRk0VRWyODuPyWElOzUFhDijvlVKi6yk
      kmTSu0hhkR1VIky3cxpzQREVlqwdsUk+CZbZ08huFJk9jSwAmT3NfwMyikLAPV+/LAAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table.Supply by Tech' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Table.Supply by Operator' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table.MilesPerBoard by Operator' width='192'>
      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
      UPG+nAMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Table.Across.Supply by Tech' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Chart.Across.Supply by Tech' width='192'>
      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
      2nUOBK3HAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table.Across.Boards by Tech' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3dV3gcZ57f+2/nbjTQyA00cg4EmLNIKo40I401411rvTO79q7Pnovx83hv
      /TjceG/s8/h4fXzWO8ppqTAa5UyJYs7IOadG6kaju9E5hypfgEONRtQKFDVDrer9XAF8qup9
      K/y6q4i33r9KlmUZQVAo9Z3ugCDcSSIAgqKJAAiKJgIgKJoIgKBoIgCCookACIomAiAomgiA
      oGgiAIKiiQAIiiYCICiaCMD3WM/5T1n0hLe+gpTi5PvvE04DssSZ93/F448/ztPPHcfhi34L
      Pcpy/tP38UQyADim+rk6svCFJSa6zzC+7AMgk4zQNzh6fdU0H77+Io8//jjPvPAKnnDyt9ZK
      8Ml7H7AwNcyFgZlb6pH2G++L8J23ODuOtmYfdaV5yNkU5z75gNWwmp/89FEcY5fpnnDw0KM/
      JTjfx7XRJe5+4AEmRkbY86OfkofM1PAEP/x3/xl//wec6xrDyjpH7rmXi+e76NxWzemzV2jd
      dy937WzaYo9kZsdHqN3/I0pztciSRFaSmOg9x8iSD70+H3NsmrkxF8MFBTQXS7z03lWKKv4j
      DcVGJkYX+df/+T8w/cmrXOybocmwRu+kk/sfeZhMNkPIu8qsN5979rRs+RiJbwCFWBm9xHjA
      xK4KNe98+AFvfTLAvcf2EfJ7sdudRDx2LvRN/M5aSX717ON8eHaAUmsxw0P9JJJxhgaGGR/o
      xemLMjs3xzcdTx/yrLK0tsob757jrj3NDA6MkZWhpKaVmH2IhLmYmoZmqotzAchmAjz93/8r
      Hw95uWt3HfZFJ6G1WS4PjDM1NkEqe+t9EAH4PpMlXI5lFhbsxNMy8UgQfzCM3piDRk7h9wfw
      rzvoHp4kv8CCLP3upazjoZ/8Cx598DAT45NopRRTk1OE4inyy6ppb7Ax0ddP5BYuPFnK4Fha
      ZMFuJ5GWABVqsmz4AmSvR6mktIxckwG1Vk86ESWe2rxl0miL+Ov/9O8pygbYcK9ydXBus9+3
      8UqL5m/+5m/+5huvLXynqZBYczhwra9Tu+MuynVRfFIBjzx4H01VeUwveti5dz8VhXpyy+up
      tZVTabNSWVOLXg1qtcTK0hLhjJ6HH7qfltpyVj1hmlua6exoZs3pYv/d91NXXoRqq52Ssjgc
      K6yvu6mob6XUWkFsZQi7L0E8peXeYwcoKaukKM9ERV0TZjmOqbiCfLMBtUZLXVML2xoqcUdU
      bKstpKCymeqKcirKrNTU1WIpLMFWkr/1YyTeCBPutNmRawxMrtB54Bjb6m1bD9O3QARAUDTx
      DCAomgiAoGgiAIKiiQAIiiYCICiaCICgaCIAgqKJAAiKdmM0aDabJZ1O38m+CMIf3I0AqFQq
      1GrxhSAoixgKISia+MgXFE0EQFA0EQBB0UQABEUTARAUTQRAUDQRAEHRRAAERRMBEBRNBEBQ
      NBEAQdG+FAApk2LDF0CWIRoKEI2ntrQhWcrgda8TiSWRZQm/100kngRZwuteJxxL3Ph5bd1D
      JivdWDeTiuMLhJFlGd/GBtJNth+PhFhbW2Pd7SGdvdkSkE7GCIZjX9nHbDpJKv35NGahUBDp
      JkOhYpEgbq8PSZIIhUJb2v/vung0+lvHVSbo8xIIx5CR8HncuNbdpLMSIf8GXn/oC9MdZpJx
      khnp+jl2E0ukyWaSrLvW8PiC30r/pExq83q5/nM0lkDKZvD85tq53u9ENIzb60eWZeKREOue
      DbKSTCIaYt3jJful2e3+cV+aGU5Kx3j+iccprmvizRefobx9LwY5QSItoddpiYaDRBNp9FoV
      wWCIdFbGoNcxfP593j51havdI1TmZ3jx1x/RPThFYwm8+tZHXOwa4+D2Sv72754hGEvR2NSE
      QacBwD11lf/4ty9x9O4jPPG3f8uB++8lFQ4RS2Yw6HWoVCp6PnmFN88OsTTRy5xfQ0N5HtF4
      Ap1ORzDgR1ZpiazP0z/npbasgEAwjE5vQJbSBAJBNFodZ955Ea+2kprSPLJxDy+8eoLW5jr0
      egORcBitTg/pGK+++AIXL1wkp6KZM++8TtPu/Rg0f8jpmr5dfpedJ57+FXuPHUIHxDyLXBlZ
      YmF6BFtZEacv9FFaWoQuG6FraBbf0jgZSzXFuXrSsQC/fv6XaKr2E5zpZjWWZWJknDyCDK+E
      KcrPJT/PfNt97D/9Jr0O6GgoY/D8+3QtJjGEF1j0pRkdGqG1rRmVlOXc2TMkfCt45DzG+3oh
      7mXeG2d+YgI5EWDOk6TWVrLldr8UALXWQGWRhmefPU7N3h+yqyzD3z3xIl3XuqmssfHK8Vc4
      eeJjymxW/r///STGQhvNtTb05kJ2djQy0DeGJhui8dAjxCa72Pbwz6g1RZlYjdJeYeL8tRHM
      +aXs3tmJXrv5BRTxLHFtYBR/0kB4fZn2JitPPfcaI33dGMqaqCjOY2V6kPWUGasZEjoL/R+8
      RP9CkMj6JJ9e6OPKlR4qrCaG7QHmu05w9nIXzqiaxe4TnOseYtEVZWn8KhtyAfs7Glkeucoa
      VpaufYimxMbrv3qXPQf2odfp6ehoo+fSedoP3o/aN05AX0t1ye2f5DslEokR2NigZcd2dIDO
      XEh5vpahsVkqywuYXXShRqK8rpWO5joi7iUkSxVWi4F4NEw6FsBQ2oo542XR5SMra9GmgwQS
      Mul0lsqKMlS38fkQcS8wNruGylxCVU6CoRkXerOFbMhL56F7Cc4Nkt/QgVmrpqGphrHuXgrq
      dnBkXye6TAhHVM+D9xxEL0dZ9WdpqLZuue2bPgNUte/Fmmfk7rv2sWafIpiC4qJ83GsutIYc
      VOkwkYRERcsefnRsDwDmHC2/fvk1HvjjxzBrVGSzWTISeFdnyK09QEHUgSsBf/IXv6As42Rm
      LfCFNhv33EvafhVnKMPC1Cgdx37CHz24l/GJ+RvLFBRb2XnXQ/z5o8fQ6Az88c9/hn1kjj/7
      xb+lKS/Eii8D6RBjU6uYLQVkkwHmV8L8xS/+msd+fDdNTY0c3L9/86BHwuTl5XPo0C4+fP0N
      bO17MGlVZJIRpu3r/PSHR+gbniQ/z0I4Ernlk/pdUlpeiUH7+RUqZTMY88vY21iIO1vKz//l
      P6e5UMXoohvPygwrqUK2VVoAyC0opSDXCMCS083hI/dgTPuo3/cgP37wXhKOafyZ2+vfmdPn
      0enB6Vzl3NkLqDUSjlUnGRkkSQbUqFQgyzKZjJYHHr2fqYER4kE3V8ddHN7VRDzk4drwMof3
      tt9S2zd/CFapMRoNaNQqqlt3UaTL4gsnKczTs77uxlJYSDqdQaPR3JjH8dwHrzHh8NF19hT1
      u/Zz5cNXSJW1UCxHePbv/yepknqqCvM5/e5xZiNGCjNrnLw4dKM9rd7EY4/9mFRSomX7PiYv
      vMmvPunn4P6OzY6qNVTUNbGtrRmjToNGq0Wl0nD42E6e+x//D0vZShpKdKDLZ//uJvwbXgpL
      a9jVYePx//e/8dpHlygqyOezU6cBKCouJhjwUdO+l6jXw8G919tRqeg58x6/Pj3Cns4mfIEA
      JSVFt3xSv2vUms3bTadjlYhniY9OnGI5CPls8Omnp5lyxbFp/TzzykeYdVnWfWFWHU4AVOrN
      C7DCZmWkrxvJVIRzqoez5y8hF1ZToLu9vv30z/6Ku/fvoKqqmkd/9pfcd2gP1TVVNFRbuXzm
      M3zqfAxRN75wlNMnPqC7d4qG+mKeePwZ9GYTq0sLPPvUc6hMJhxr7ltrXL5DIt4l+Urf1Le6
      zZf/7r/Ib50Z3NKyUiooP/nMcTmdlb56mUxSfvaJp+RY9tvq4Z03PjYipzNfv0NSNi2PjI7/
      AXq0NYG1GXlxPfatb/eOvRH2m2ZVt3PzeJvb/Lrlfx99vNM290n1tffs37V932q/b5V4JVJQ
      NPGHMEHRRAAERRMBEBRNBEBQNBEAQdFEAARFEwEQFE0EQFA0EQBB0UQABEUTARAU7UZ9AFmW
      kaSbv2ooCN9XNwIgSZKoECMojrgFEhRNBEBQNBEAQdFEAARFEwEQFE0EQFA0EQBB0UQABEUT
      ARAUTQRAUDQRAEHRRAAERftSALKpOCura0gy+D1r+MPxLW1IyqRYti+wEYwiyxLOZTu+UAzk
      LMv2ebzBKMgZlhfmmZ1fJJX54sjTWMjH3Pwiqa8ofrG1TqRZvd73mwn7vYR/q+BH2O8hlsp+
      ablMMsrC/ALRRJoNt5vM92DuvFAg8DuFR2R83g0kWWbdscyK040sy3hdqyyufH4MM4kIs7Oz
      rKx5yKYT2Bfm8YViZFIx5mdnWXSsfyv9k1JxfKEoANlUAn8wgm/dwezsLHPzi6R/q/Nh/wbJ
      rEw0uIF92UFWkgn7PSwsLpPOfsMCGTeGQ0tp3n75RYzWKt5//dc07thPJuwlFM9iNhnwudfw
      hePk6NU419eJp7Lk5pjoP/MuF4bnuHallxJzgvdO99DTO0x9mZbPLnRz/lIf+zsqeeald9AZ
      jdTU1NyoDyBnErzw+C9xuVeZXJfY3mDFsboKWhM6dRbHqhO1wUQq4scfDBMMx8jNzcHnXmMj
      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
    </thumbnail>
    <thumbnail height='192' name='Chart.Across.Boards by Tech' width='192'>
      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
      Wr+HktQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Chart.Across.MilesPerBoard by Operator' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table.Across.MilesPerBoard by Operator' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table.Utilization' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
