<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0811.1521                                -->
<workbook source-build='9.3.6 (9300.16.0811.1521)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='trnline Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' version='9.3'>
      <connection class='dataengine' dbname='M:\Application\Model One\RTP2017\Scenarios\Across-Scenarios-2035-Round-08\trnline.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1802</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;100_ALAFB&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;94_SMARTBSB2&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>59</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>10.0</statistic>
              <statistic aggregation='Max' datatype='real'>136.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owner</remote-name>
            <remote-type>5</remote-type>
            <local-name>[owner]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>owner</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>65.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequency</remote-name>
            <remote-type>5</remote-type>
            <local-name>[frequency]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>frequency</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>63</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>3.0</statistic>
              <statistic aggregation='Max' datatype='real'>327.67000000000002</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line time]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>line time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6392</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.01</statistic>
              <statistic aggregation='Max' datatype='real'>162.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line dist]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>line dist</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1216</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.27000000000000002</statistic>
              <statistic aggregation='Max' datatype='real'>88.200000000000003</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total boardings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total boardings]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>total boardings</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3224</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>26688.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger miles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[passenger miles]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>passenger miles</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6329</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>605126.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger hours</remote-name>
            <remote-type>5</remote-type>
            <local-name>[passenger hours]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>passenger hours</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1496</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>-41.0</statistic>
              <statistic aggregation='Max' datatype='real'>15637.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[path id]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>path id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>75</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;am_drv_com_wlk&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;pm_wlk_lrf_wlk&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>55</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AC Transbay&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Westcat-Express&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aggregate Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aggregate Mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Aggregate Mode</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Commuter Rail&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Local&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seats</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Seats]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Seats</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>700.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_05_003&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2035_06_665&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2010&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2035, 4 - Draft Preferred&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;' value='Change in Daily Average Passenger Seat Miles from the Base' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcto:sum:total boardings:qk:2]&quot;' value='Share of Boardings by Technology' />
        </aliases>
      </column>
      <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Express&quot;' value='Express Bus' />
          <alias key='&quot;Local&quot;' value='Local Bus' />
        </aliases>
      </column>
      <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Total Daily Boardings' datatype='real' name='[Calculation_0410911164937125]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total boardings])' scope-isolation='false' />
      </column>
      <column caption='Average Passenger Distance' datatype='real' name='[Calculation_0500922175655935]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' scope-isolation='false' />
      </column>
      <column caption='Seat Utilization' datatype='real' name='[Calculation_1201121140400432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([passenger miles])/[Calculation_5690911122422973]' scope-isolation='false' />
      </column>
      <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
        <aliases>
          <alias key='&quot;com&quot;' value='Commuter rail' />
          <alias key='&quot;exp&quot;' value='Express bus' />
          <alias key='&quot;hvy&quot;' value='Heavy rail' />
          <alias key='&quot;loc&quot;' value='Local bus' />
          <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
        </aliases>
      </column>
      <column caption='15 please' datatype='integer' name='[Calculation_3921121142551292]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='countd(right([path id],11))' scope-isolation='false' />
      </column>
      <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
      </column>
      <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
      </column>
      <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
      </column>
      <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
      </column>
      <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Mode Number' datatype='real' name='[Calculation_812618261621207040]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[mode]' />
      </column>
      <column caption='Average Passenger Miles per Boarding' datatype='real' name='[Calculation_861594907227541504]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' />
      </column>
      <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
        <aliases>
          <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
          <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
          <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
          <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
          <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
        </aliases>
      </column>
      <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
      </column>
      <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
      </column>
      <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='10.0' value='West Berkeley' />
          <alias key='11.0' value='Broadway Shuttle' />
          <alias key='12.0' value='Emery Go Round' />
          <alias key='13.0' value='Stanford Shuttles' />
          <alias key='14.0' value='Caltrain Shuttles' />
          <alias key='15.0' value='VTA Shuttles' />
          <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
          <alias key='19.0' value='San Leandro Links' />
          <alias key='20.0' value='SF Muni - Cable Cars' />
          <alias key='21.0' value='SF Muni - Local' />
          <alias key='24.0' value='SamTrans' />
          <alias key='28.0' value='SC VTA' />
          <alias key='30.0' value='AC Transit' />
          <alias key='33.0' value='WHEELS - Local' />
          <alias key='38.0' value='Union City Transit' />
          <alias key='42.0' value='County Conn.' />
          <alias key='44.0' value='Tri-Delta' />
          <alias key='46.0' value='WestCAT - Local' />
          <alias key='49.0' value='Vallejo Transit - Local' />
          <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
          <alias key='55.0' value='American Canyon Transit' />
          <alias key='56.0' value='Vacaville City Coach' />
          <alias key='58.0' value='Benicia Breeze' />
          <alias key='60.0' value='VINE' />
          <alias key='63.0' value='Sonoma County Transit' />
          <alias key='66.0' value='Santa Rosa' />
          <alias key='68.0' value='Petaluma Transit' />
          <alias key='70.0' value='GGT - Local' />
          <alias key='80.0' value='SamTrans - Express' />
          <alias key='81.0' value='SC VTA - Express' />
          <alias key='82.0' value='Dumbarton Express' />
          <alias key='84.0' value='AC Transit - Transbay' />
          <alias key='86.0' value='County Connection - Express' />
          <alias key='87.0' value='GGT - Express SF' />
          <alias key='88.0' value='GGT - Express Richmond' />
          <alias key='90.0' value='WestCAT - Express' />
          <alias key='91.0' value='Vallejo Transit - Express' />
          <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
          <alias key='93.0' value='VINE - Express' />
          <alias key='94.0' value='SMART - Temp Express' />
          <alias key='100.0' value='Easy Bay Ferries' />
          <alias key='101.0' value='GGT - Larkspur' />
          <alias key='102.0' value='GGT - Sausalito' />
          <alias key='103.0' value='Tiburon Ferry' />
          <alias key='104.0' value='Vallejo Baylink Ferry' />
          <alias key='110.0' value='SF Muni - LRT' />
          <alias key='111.0' value='SC VTA - LRT' />
          <alias key='120.0' value='BART' />
          <alias key='121.0' value='Oakland Airport Connector' />
          <alias key='130.0' value='Caltrain' />
          <alias key='131.0' value='Amtrak - Capitol Corridor' />
          <alias key='132.0' value='Amtrak - San Joaquin' />
          <alias key='133.0' value='ACE' />
          <alias key='135.0' value='SMART' />
          <alias key='136.0' value='E-BART' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[owner]' role='dimension' type='ordinal' />
      <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
      <column datatype='string' name='[src]' role='dimension' type='nominal' />
      <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
      <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.44586' measure-ordering='alphabetic' measure-percentage='0.55414' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1970908143232145:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;loc&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;com&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;hvy&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;exp&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;lrf&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Aggregate Mode:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Local&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Commuter Rail&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Heavy Rail&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Express&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Light Rail&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>%all%</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:mode:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>104.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>46.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>120.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>30.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>66.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>44.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>102.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>12.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>100.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>13.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>24.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>33.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>110.0</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>91.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>21.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>42.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>135.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>49.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>101.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>70.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>84.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>81.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>92.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>63.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>130.0</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>90.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>82.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>88.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>80.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>133.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>28.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>86.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>14.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>87.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>111.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>131.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#01abe9'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            </map>
            <map to='#1b346c'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Year 2035, Scenario 2 (v 3)&quot;</bucket>
            </map>
            <map to='#609f80'>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            </map>
            <map to='#8d9876'>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Year 2040, Plan Bay Area&quot;</bucket>
            </map>
            <map to='#c3ced0'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Housing at Key Stations&quot;</bucket>
            </map>
            <map to='#cbb345'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Year 2035, Scenario 3 (v 3)&quot;</bucket>
            </map>
            <map to='#e5c39e'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            </map>
            <map to='#f54b1a'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Year 2035, Scenario 1 (v 3)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Calculation_1970908143232145:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;com&quot;</bucket>
            <bucket>&quot;hvy&quot;</bucket>
            <bucket>&quot;exp&quot;</bucket>
            <bucket>&quot;lrf&quot;</bucket>
            <bucket>&quot;loc&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:Calculation_8680908142300827:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;ea&quot;</bucket>
            <bucket>&quot;am&quot;</bucket>
            <bucket>&quot;md&quot;</bucket>
            <bucket>&quot;pm&quot;</bucket>
            <bucket>&quot;ev&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:Scenario:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Housing at Key Stations&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Chart.Across.Boards by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Typical Weekday Transit Boardings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1620'>Technology:&#9;</run>
                <run bold='true' fontsize='14' indent='1620'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1620'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1620'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1620'>&#10;Boardings:&#9;</run>
                <run bold='true' fontsize='14' indent='1620'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Chart.Across.MilesPerBoard by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Average Passenger Miles per Boarding' datatype='real' name='[Calculation_861594907227541504]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='10.0' value='West Berkeley' />
                <alias key='11.0' value='Broadway Shuttle' />
                <alias key='12.0' value='Emery Go Round' />
                <alias key='13.0' value='Stanford Shuttles' />
                <alias key='14.0' value='Caltrain Shuttles' />
                <alias key='15.0' value='VTA Shuttles' />
                <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
                <alias key='19.0' value='San Leandro Links' />
                <alias key='20.0' value='SF Muni - Cable Cars' />
                <alias key='21.0' value='SF Muni - Local' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='33.0' value='WHEELS - Local' />
                <alias key='38.0' value='Union City Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='46.0' value='WestCAT - Local' />
                <alias key='49.0' value='Vallejo Transit - Local' />
                <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
                <alias key='55.0' value='American Canyon Transit' />
                <alias key='56.0' value='Vacaville City Coach' />
                <alias key='58.0' value='Benicia Breeze' />
                <alias key='60.0' value='VINE' />
                <alias key='63.0' value='Sonoma County Transit' />
                <alias key='66.0' value='Santa Rosa' />
                <alias key='68.0' value='Petaluma Transit' />
                <alias key='70.0' value='GGT - Local' />
                <alias key='80.0' value='SamTrans - Express' />
                <alias key='81.0' value='SC VTA - Express' />
                <alias key='82.0' value='Dumbarton Express' />
                <alias key='84.0' value='AC Transit - Transbay' />
                <alias key='86.0' value='County Connection - Express' />
                <alias key='87.0' value='GGT - Express SF' />
                <alias key='88.0' value='GGT - Express Richmond' />
                <alias key='90.0' value='WestCAT - Express' />
                <alias key='91.0' value='Vallejo Transit - Express' />
                <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
                <alias key='93.0' value='VINE - Express' />
                <alias key='94.0' value='SMART - Temp Express' />
                <alias key='100.0' value='Easy Bay Ferries' />
                <alias key='101.0' value='GGT - Larkspur' />
                <alias key='102.0' value='GGT - Sausalito' />
                <alias key='103.0' value='Tiburon Ferry' />
                <alias key='104.0' value='Vallejo Baylink Ferry' />
                <alias key='110.0' value='SF Muni - LRT' />
                <alias key='111.0' value='SC VTA - LRT' />
                <alias key='120.0' value='BART' />
                <alias key='121.0' value='Oakland Airport Connector' />
                <alias key='130.0' value='Caltrain' />
                <alias key='131.0' value='Amtrak - Capitol Corridor' />
                <alias key='132.0' value='Amtrak - San Joaquin' />
                <alias key='133.0' value='ACE' />
                <alias key='135.0' value='SMART' />
                <alias key='136.0' value='E-BART' />
              </aliases>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_861594907227541504]' derivation='User' name='[usr:Calculation_861594907227541504:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1970908143232145:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='12.0' function='range' level='[none:mode:ok]' to='14.0' />
              <groupfilter from='21.0' function='range' level='[none:mode:ok]' to='33.0' />
              <groupfilter from='42.0' function='range' level='[none:mode:ok]' to='49.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='63.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='66.0' />
              <groupfilter from='70.0' function='range' level='[none:mode:ok]' to='84.0' />
              <groupfilter from='86.0' function='range' level='[none:mode:ok]' to='92.0' />
              <groupfilter from='100.0' function='range' level='[none:mode:ok]' to='102.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='104.0' />
              <groupfilter from='110.0' function='range' level='[none:mode:ok]' to='120.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='130.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='131.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='133.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='135.0' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' direction='DESC' using='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:passenger miles:qk]' />
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='232' />
            <format attr='height-header' value='52' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='108' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' />
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / ([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]))</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Chart.Across.Supply by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Change in Transit Passenger Seat Miles by Technology</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:7]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Scenario]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='Change in Passenger Seat Miles' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='2520'>Technology:&#9;</run>
                <run bold='true' fontsize='14' indent='2520'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2520'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='2520'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2520'>&#10;Pct Change:&#9;</run>
                <run bold='true' fontsize='14' indent='2520'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:7]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Across.Boards by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily Transit Boardings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='104' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='96' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='76' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='316' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' value='n#,##0;-#,##0' />
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Across.MilesPerBoard by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Mode Number' datatype='real' name='[Calculation_812618261621207040]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[mode]' />
            </column>
            <column caption='Average Passenger Miles per Boarding' datatype='real' name='[Calculation_861594907227541504]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='10.0' value='West Berkeley' />
                <alias key='11.0' value='Broadway Shuttle' />
                <alias key='12.0' value='Emery Go Round' />
                <alias key='13.0' value='Stanford Shuttles' />
                <alias key='14.0' value='Caltrain Shuttles' />
                <alias key='15.0' value='VTA Shuttles' />
                <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
                <alias key='19.0' value='San Leandro Links' />
                <alias key='20.0' value='SF Muni - Cable Cars' />
                <alias key='21.0' value='SF Muni - Local' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='33.0' value='WHEELS - Local' />
                <alias key='38.0' value='Union City Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='46.0' value='WestCAT - Local' />
                <alias key='49.0' value='Vallejo Transit - Local' />
                <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
                <alias key='55.0' value='American Canyon Transit' />
                <alias key='56.0' value='Vacaville City Coach' />
                <alias key='58.0' value='Benicia Breeze' />
                <alias key='60.0' value='VINE' />
                <alias key='63.0' value='Sonoma County Transit' />
                <alias key='66.0' value='Santa Rosa' />
                <alias key='68.0' value='Petaluma Transit' />
                <alias key='70.0' value='GGT - Local' />
                <alias key='80.0' value='SamTrans - Express' />
                <alias key='81.0' value='SC VTA - Express' />
                <alias key='82.0' value='Dumbarton Express' />
                <alias key='84.0' value='AC Transit - Transbay' />
                <alias key='86.0' value='County Connection - Express' />
                <alias key='87.0' value='GGT - Express SF' />
                <alias key='88.0' value='GGT - Express Richmond' />
                <alias key='90.0' value='WestCAT - Express' />
                <alias key='91.0' value='Vallejo Transit - Express' />
                <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
                <alias key='93.0' value='VINE - Express' />
                <alias key='94.0' value='SMART - Temp Express' />
                <alias key='100.0' value='Easy Bay Ferries' />
                <alias key='101.0' value='GGT - Larkspur' />
                <alias key='102.0' value='GGT - Sausalito' />
                <alias key='103.0' value='Tiburon Ferry' />
                <alias key='104.0' value='Vallejo Baylink Ferry' />
                <alias key='110.0' value='SF Muni - LRT' />
                <alias key='111.0' value='SC VTA - LRT' />
                <alias key='120.0' value='BART' />
                <alias key='121.0' value='Oakland Airport Connector' />
                <alias key='130.0' value='Caltrain' />
                <alias key='131.0' value='Amtrak - Capitol Corridor' />
                <alias key='132.0' value='Amtrak - San Joaquin' />
                <alias key='133.0' value='ACE' />
                <alias key='135.0' value='SMART' />
                <alias key='136.0' value='E-BART' />
              </aliases>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_812618261621207040]' derivation='None' name='[none:Calculation_812618261621207040:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_861594907227541504]' derivation='User' name='[usr:Calculation_861594907227541504:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1970908143232145:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='12.0' function='range' level='[none:mode:ok]' to='14.0' />
              <groupfilter from='21.0' function='range' level='[none:mode:ok]' to='33.0' />
              <groupfilter from='42.0' function='range' level='[none:mode:ok]' to='49.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='63.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='66.0' />
              <groupfilter from='70.0' function='range' level='[none:mode:ok]' to='84.0' />
              <groupfilter from='86.0' function='range' level='[none:mode:ok]' to='92.0' />
              <groupfilter from='100.0' function='range' level='[none:mode:ok]' to='102.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='104.0' />
              <groupfilter from='110.0' function='range' level='[none:mode:ok]' to='120.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='130.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='131.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='133.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='135.0' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' direction='DESC' using='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:passenger miles:qk]' />
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='182' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='60' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='96' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_812618261621207040:ok] / ([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]))</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Across.Supply by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Technology</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[pcdf:usr:Calculation_5690911122422973:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[usr:Calculation_5690911122422973:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='97' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='60' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' value='264' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcdf:usr:Calculation_5690911122422973:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table.Boards by Path, Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Share of Boardings by Mode Choice Path -- </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Drive&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;loc&quot;</bucket>
              <bucket>&quot;lrf&quot;</bucket>
              <bucket>&quot;exp&quot;</bucket>
              <bucket>&quot;com&quot;</bucket>
              <bucket>&quot;hvy&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='92' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' value='33' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:4]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Boards by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Boardings by Technology -- </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[pcto:sum:total boardings:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:total boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcto:sum:total boardings:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:total boardings:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[pcto:sum:total boardings:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='115' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='39' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:2]' value='p0.0%' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='200' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[pcto:sum:total boardings:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.MilesPerBoard by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Mode Number' datatype='real' name='[Calculation_812618261621207040]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[mode]' />
            </column>
            <column caption='Average Passenger Miles per Boarding' datatype='real' name='[Calculation_861594907227541504]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([passenger miles])/SUM([total boardings])' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='10.0' value='West Berkeley' />
                <alias key='11.0' value='Broadway Shuttle' />
                <alias key='12.0' value='Emery Go Round' />
                <alias key='13.0' value='Stanford Shuttles' />
                <alias key='14.0' value='Caltrain Shuttles' />
                <alias key='15.0' value='VTA Shuttles' />
                <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
                <alias key='19.0' value='San Leandro Links' />
                <alias key='20.0' value='SF Muni - Cable Cars' />
                <alias key='21.0' value='SF Muni - Local' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='33.0' value='WHEELS - Local' />
                <alias key='38.0' value='Union City Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='46.0' value='WestCAT - Local' />
                <alias key='49.0' value='Vallejo Transit - Local' />
                <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
                <alias key='55.0' value='American Canyon Transit' />
                <alias key='56.0' value='Vacaville City Coach' />
                <alias key='58.0' value='Benicia Breeze' />
                <alias key='60.0' value='VINE' />
                <alias key='63.0' value='Sonoma County Transit' />
                <alias key='66.0' value='Santa Rosa' />
                <alias key='68.0' value='Petaluma Transit' />
                <alias key='70.0' value='GGT - Local' />
                <alias key='80.0' value='SamTrans - Express' />
                <alias key='81.0' value='SC VTA - Express' />
                <alias key='82.0' value='Dumbarton Express' />
                <alias key='84.0' value='AC Transit - Transbay' />
                <alias key='86.0' value='County Connection - Express' />
                <alias key='87.0' value='GGT - Express SF' />
                <alias key='88.0' value='GGT - Express Richmond' />
                <alias key='90.0' value='WestCAT - Express' />
                <alias key='91.0' value='Vallejo Transit - Express' />
                <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
                <alias key='93.0' value='VINE - Express' />
                <alias key='94.0' value='SMART - Temp Express' />
                <alias key='100.0' value='Easy Bay Ferries' />
                <alias key='101.0' value='GGT - Larkspur' />
                <alias key='102.0' value='GGT - Sausalito' />
                <alias key='103.0' value='Tiburon Ferry' />
                <alias key='104.0' value='Vallejo Baylink Ferry' />
                <alias key='110.0' value='SF Muni - LRT' />
                <alias key='111.0' value='SC VTA - LRT' />
                <alias key='120.0' value='BART' />
                <alias key='121.0' value='Oakland Airport Connector' />
                <alias key='130.0' value='Caltrain' />
                <alias key='131.0' value='Amtrak - Capitol Corridor' />
                <alias key='132.0' value='Amtrak - San Joaquin' />
                <alias key='133.0' value='ACE' />
                <alias key='135.0' value='SMART' />
                <alias key='136.0' value='E-BART' />
              </aliases>
            </column>
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_812618261621207040]' derivation='None' name='[none:Calculation_812618261621207040:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Typical Weekday Boardings' datatype='real' name='[total boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_861594907227541504]' derivation='User' name='[usr:Calculation_861594907227541504:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_861594907227541504:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:passenger miles:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:total boardings:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1970908143232145:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]'>
            <groupfilter from='10.0' function='range' level='[none:mode:ok]' to='136.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' direction='DESC' using='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]' />
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' value='186' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' value='27' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_861594907227541504:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='112' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' value='204' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' value='36' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:total boardings:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_812618261621207040:ok] / ([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]))</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Supply by Operator'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day for Select Operators - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Operator' datatype='real' name='[mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='10.0' value='West Berkeley' />
                <alias key='11.0' value='Broadway Shuttle' />
                <alias key='12.0' value='Emery Go Round' />
                <alias key='13.0' value='Stanford Shuttles' />
                <alias key='14.0' value='Caltrain Shuttles' />
                <alias key='15.0' value='VTA Shuttles' />
                <alias key='16.0' value='Palo Alto/Menlo Park Shuttles' />
                <alias key='19.0' value='San Leandro Links' />
                <alias key='20.0' value='SF Muni - Cable Cars' />
                <alias key='21.0' value='SF Muni - Local' />
                <alias key='24.0' value='SamTrans' />
                <alias key='28.0' value='SC VTA' />
                <alias key='30.0' value='AC Transit' />
                <alias key='33.0' value='WHEELS - Local' />
                <alias key='38.0' value='Union City Transit' />
                <alias key='42.0' value='County Conn.' />
                <alias key='44.0' value='Tri-Delta' />
                <alias key='46.0' value='WestCAT - Local' />
                <alias key='49.0' value='Vallejo Transit - Local' />
                <alias key='52.0' value='Fairfield and Suisun Transit - Local' />
                <alias key='55.0' value='American Canyon Transit' />
                <alias key='56.0' value='Vacaville City Coach' />
                <alias key='58.0' value='Benicia Breeze' />
                <alias key='60.0' value='VINE' />
                <alias key='63.0' value='Sonoma County Transit' />
                <alias key='66.0' value='Santa Rosa' />
                <alias key='68.0' value='Petaluma Transit' />
                <alias key='70.0' value='GGT - Local' />
                <alias key='80.0' value='SamTrans - Express' />
                <alias key='81.0' value='SC VTA - Express' />
                <alias key='82.0' value='Dumbarton Express' />
                <alias key='84.0' value='AC Transit - Transbay' />
                <alias key='86.0' value='County Connection - Express' />
                <alias key='87.0' value='GGT - Express SF' />
                <alias key='88.0' value='GGT - Express Richmond' />
                <alias key='90.0' value='WestCAT - Express' />
                <alias key='91.0' value='Vallejo Transit - Express' />
                <alias key='92.0' value='Fairfield and Suisun Transit - Express' />
                <alias key='93.0' value='VINE - Express' />
                <alias key='94.0' value='SMART - Temp Express' />
                <alias key='100.0' value='Easy Bay Ferries' />
                <alias key='101.0' value='GGT - Larkspur' />
                <alias key='102.0' value='GGT - Sausalito' />
                <alias key='103.0' value='Tiburon Ferry' />
                <alias key='104.0' value='Vallejo Baylink Ferry' />
                <alias key='110.0' value='SF Muni - LRT' />
                <alias key='111.0' value='SC VTA - LRT' />
                <alias key='120.0' value='BART' />
                <alias key='121.0' value='Oakland Airport Connector' />
                <alias key='130.0' value='Caltrain' />
                <alias key='131.0' value='Amtrak - Capitol Corridor' />
                <alias key='132.0' value='Amtrak - San Joaquin' />
                <alias key='133.0' value='ACE' />
                <alias key='135.0' value='SMART' />
                <alias key='136.0' value='E-BART' />
              </aliases>
            </column>
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6080908151147280]' derivation='Sum' name='[sum:Calculation_6080908151147280:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:mode:ok]' member='21.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='24.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='28.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='30.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='42.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='44.0' />
              <groupfilter function='member' level='[none:mode:ok]' member='66.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' direction='ASC'>
            <dictionary>
              <bucket>21.0</bucket>
              <bucket>28.0</bucket>
              <bucket>24.0</bucket>
              <bucket>30.0</bucket>
              <bucket>66.0</bucket>
              <bucket>42.0</bucket>
              <bucket>44.0</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' value='86' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='40' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='212' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:Calculation_6080908151147280:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Supply by Tech'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Transit Passenger Seat Miles by Time of Day and Technology - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Walk/Drive' datatype='string' name='[Calculation_0330908142738987]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_9780908142631043]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSEIF [Calculation_4170908142714023]==&apos;drv&apos; THEN&#13;&#10; &apos;Drive&apos;&#13;&#10;ELSE&#13;&#10; &apos;Walk&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Path Label' datatype='string' name='[Calculation_1970908143232145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='RIGHT(LEFT([path id],10),3)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;com&quot;' value='Commuter rail' />
                <alias key='&quot;exp&quot;' value='Express bus' />
                <alias key='&quot;hvy&quot;' value='Heavy rail' />
                <alias key='&quot;loc&quot;' value='Local bus' />
                <alias key='&quot;lrf&quot;' value='Light rail/ferry' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[Calculation_4170908142714023]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([path id],3)' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Access' datatype='string' name='[Calculation_9780908142631043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right(left([path id],6),3)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0330908142738987]' derivation='None' name='[none:Calculation_0330908142738987:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1970908143232145]' derivation='None' name='[none:Calculation_1970908143232145:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6080908151147280]' derivation='Sum' name='[sum:Calculation_6080908151147280:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]'>
            <groupfilter function='member' level='[none:Calculation_0330908142738987:nk]' member='&quot;Walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]'>
            <groupfilter function='member' level='[none:Calculation_1970908143232145:nk]' member='&quot;com&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='92' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='56' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='216' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[sum:Calculation_6080908151147280:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Utilization'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Occupied Share of Available Seats by Technology -- </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde'>
            <column caption='Transit Technology' datatype='string' name='[Aggregate Mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Express&quot;' value='Express Bus' />
                <alias key='&quot;Local&quot;' value='Local Bus' />
              </aliases>
            </column>
            <column caption='Seat Utilization' datatype='real' name='[Calculation_1201121140400432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([passenger miles])/[Calculation_5690911122422973]' scope-isolation='false' />
            </column>
            <column caption='Route Speed (mph)' datatype='real' name='[Calculation_5270908150043518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([line dist]/[line time]*60,50)' scope-isolation='false' />
            </column>
            <column caption='Effective Hours in Time Period' datatype='integer' name='[Calculation_5400911121930270]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_8680908142300827]=&apos;ea&apos; THEN&#13;&#10;  2&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;am&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;md&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;pm&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [Calculation_8680908142300827]=&apos;ev&apos; THEN&#13;&#10;  4&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Daily Average Passenger Seat Miles' datatype='real' name='[Calculation_5690911122422973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9170911122225743])/countd(right([path id],11))' scope-isolation='false' />
            </column>
            <column caption='Estimated Route Vehicles' datatype='integer' name='[Calculation_5870908150157114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([line time]/[frequency])+1' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per hour)' datatype='real' name='[Calculation_6080908151147280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Seats]*[Calculation_9090908150253213]' scope-isolation='false' />
            </column>
            <column caption='Time Period' datatype='string' name='[Calculation_8680908142300827]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT([path id],2)' scope-isolation='false' />
              <aliases>
                <alias key='&quot;am&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;ea&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;ev&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;md&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;pm&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column caption='Route VMT per hour' datatype='real' name='[Calculation_9090908150253213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5270908150043518]*[Calculation_5870908150157114]' scope-isolation='false' />
            </column>
            <column caption='Passenger Seat Miles (per time period)' datatype='real' name='[Calculation_9170911122225743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5400911121930270]*[Calculation_6080908151147280]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[Seats]' role='measure' type='quantitative' />
            <column datatype='real' name='[frequency]' role='measure' type='quantitative' />
            <column datatype='real' name='[line dist]' role='measure' type='quantitative' />
            <column datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column-instance column='[Aggregate Mode]' derivation='None' name='[none:Aggregate Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8680908142300827]' derivation='None' name='[none:Calculation_8680908142300827:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column caption='Passenger Miles' datatype='real' name='[passenger miles]' role='measure' type='quantitative' />
            <column datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column-instance column='[passenger miles]' derivation='Sum' name='[sum:passenger miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1201121140400432]' derivation='User' name='[usr:Calculation_1201121140400432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5690911122422973]' derivation='User' name='[usr:Calculation_5690911122422973:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:passenger miles:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_1201121140400432:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[sum:passenger miles:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\trnline.tde].[usr:Calculation_5690911122422973:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Local&quot;</bucket>
              <bucket>&quot;Express&quot;</bucket>
              <bucket>&quot;Light Rail&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Commuter Rail&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='40' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' value='191' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='28' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[usr:Calculation_1201121140400432:qk]' value='p0.0%' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]' value='84' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]' value='168' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]' value='196' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk])</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' name='Table.Boards by Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='73'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.Boards by Path, Tech'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='82'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.Supply by Tech'>
      <cards>
        <edge name='left'>
          <strip size='193'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='102'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:name:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:path id:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:timeperiod:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.Supply by Operator'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='88'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:owner:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.MilesPerBoard by Operator'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='88'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' type='filter' />
            <card param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, No Project (v 3)&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_812618261621207040:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:owner:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.Across.Supply by Tech' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='84'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:name:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:path id:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:timeperiod:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Chart.Across.Supply by Tech' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='179'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:name:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:path id:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:timeperiod:nk]</field>
            <field>[excel-direct.41890.546493576388].[none:Aggregate Mode:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.Across.Boards by Tech' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Chart.Across.Boards by Tech' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='81'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Chart.Across.MilesPerBoard by Operator' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='88'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' type='filter' />
            <card param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:owner:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.Across.MilesPerBoard by Operator' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='88'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]' type='filter' />
            <card param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_0330908142738987:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_1970908143232145:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_812618261621207040:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:mode:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:owner:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Table.Utilization'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='92'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, 4 - Draft Preferred&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Aggregate Mode:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Calculation_8680908142300827:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\trnline.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Table.Boards by Tech' width='192'>
      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
      /h9ktSUvJMYySgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table.Boards by Path, Tech' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table.Supply by Tech' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Table.Supply by Operator' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table.MilesPerBoard by Operator' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table.Across.Supply by Tech' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Chart.Across.Supply by Tech' width='192'>
      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
      2nUOBK3HAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table.Across.Boards by Tech' width='192'>
      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
      vMmvPunn4P6OzY6qNVTUNbGtrRmjToNGq0Wl0nD42E6e+x//D0vZShpKdKDLZ//uJvwbXgpL
      a9jVYePx//e/8dpHlygqyOezU6cBKCouJhjwUdO+l6jXw8G919tRqeg58x6/Pj3Cns4mfIEA
      JSVFt3xSv2vUms3bTadjlYhniY9OnGI5CPls8Omnp5lyxbFp/TzzykeYdVnWfWFWHU4AVOrN
      C7DCZmWkrxvJVIRzqoez5y8hF1ZToLu9vv30z/6Ku/fvoKqqmkd/9pfcd2gP1TVVNFRbuXzm
      M3zqfAxRN75wlNMnPqC7d4qG+mKeePwZ9GYTq0sLPPvUc6hMJhxr7ltrXL5DIt4l+Urf1Le6
      zZf/7r/Ib50Z3NKyUiooP/nMcTmdlb56mUxSfvaJp+RY9tvq4Z03PjYipzNfv0NSNi2PjI7/
      AXq0NYG1GXlxPfatb/eOvRH2m2ZVt3PzeJvb/Lrlfx99vNM290n1tffs37V932q/b5V4JVJQ
      NPGHMEHRRAAERRMBEBRNBEBQNBEAQdFEAARFEwEQFE0EQFA0EQBB0UQABEUTARAU7UZ9AFmW
      kaSbv2ooCN9XNwIgSZKoECMojrgFEhRNBEBQNBEAQdFEAARFEwEQFE0EQFA0EQBB0UQABEUT
      ARAUTQRAUDQRAEHRRAAERftSALKpOCura0gy+D1r+MPxLW1IyqRYti+wEYwiyxLOZTu+UAzk
      LMv2ebzBKMgZlhfmmZ1fJJX54sjTWMjH3Pwiqa8ofrG1TqRZvd73mwn7vYR/q+BH2O8hlsp+
      ablMMsrC/ALRRJoNt5vM92DuvFAg8DuFR2R83g0kWWbdscyK040sy3hdqyyufH4MM4kIs7Oz
      rKx5yKYT2Bfm8YViZFIx5mdnWXSsfyv9k1JxfKEoANlUAn8wgm/dwezsLHPzi6R/q/Nh/wbJ
      rEw0uIF92UFWkgn7PSwsLpPOfsMCGTeGQ0tp3n75RYzWKt5//dc07thPJuwlFM9iNhnwudfw
      hePk6NU419eJp7Lk5pjoP/MuF4bnuHallxJzgvdO99DTO0x9mZbPLnRz/lIf+zsqeeald9AZ
      jdTU1NyoDyBnErzw+C9xuVeZXJfY3mDFsboKWhM6dRbHqhO1wUQq4scfDBMMx8jNzcHnXmMj
      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
    </thumbnail>
    <thumbnail height='192' name='Chart.Across.Boards by Tech' width='192'>
      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
      Wr+HktQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Chart.Across.MilesPerBoard by Operator' width='192'>
      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
      ImCziuRzef4NbZr/bePUThkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Table.Across.MilesPerBoard by Operator' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Table.Utilization' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
