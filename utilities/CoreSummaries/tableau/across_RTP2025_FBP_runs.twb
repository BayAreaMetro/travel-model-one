<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0415.1018                               -->
<workbook original-version='18.1' source-build='2025.1.1 (20251.25.0415.1018)' source-platform='win' version='18.1' xml:base='https://10ay.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='across_RTP2025_FBP_runs' path='/t/metropolitantransportationcommission/workbooks' revision='3.3' site='metropolitantransportationcommission' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='topsheet' inline='true' name='federated.0h6syh50y1w4st19px68x1cnsq1v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='topsheets' name='textscan.0epbw8p0jg8gjo1e9951d1in85oj'>
            <connection class='textscan' directory='M:/Application/Model One/RTP2025/Blueprint/across_runs_FinalBlueprint' filename='topsheet_2023_TM152_IPA_00.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='ModelRuns_RTP2025' name='excel-direct.06hl7xe0h1kqx31glbays0jx5b3j'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='X:/travel-model-one-master/utilities/RTP/config_RTP2025/ModelRuns_RTP2025.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[topsheet_*.csv].[directory]' />
              <expression op='[ModelRuns].[directory]' />
            </expression>
          </clause>
          <relation all='true' connection='textscan.0epbw8p0jg8gjo1e9951d1in85oj' include-siblings='false' is-recursive='false' name='topsheet_*.csv' path='' type='batch-union'>
            <database-filter>
              <expression op='='>
                <expression op='topsheet_*.csv' />
              </expression>
            </database-filter>
            <table-filter />
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='directory' />
              <column datatype='integer' name='tazdata.tothh' />
              <column datatype='integer' name='tazdata.totpop' />
              <column datatype='integer' name='tazdata.totemp' />
              <column datatype='integer' name='tazdata.empres' />
              <column datatype='integer' name='popsyn.tothh' />
              <column datatype='integer' name='popsyn.totpop' />
              <column datatype='integer' name='popsyn.empres' />
              <column datatype='real' name='network.VMT' />
              <column datatype='real' name='network.VMT.auto' />
              <column datatype='real' name='resident.trip.table.VMT' />
              <column datatype='string' name='Path' />
              <column datatype='integer' name='tazdata.gqpop' ordinal='6' />
            </columns>
          </relation>
          <relation connection='excel-direct.06hl7xe0h1kqx31glbays0jx5b3j' name='ModelRuns' table='[ModelRuns$]' type='table'>
            <columns gridOrigin='A1:Y256:no:A1:Y256:0' header='yes' outcome='2'>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='string' name='directory' ordinal='1' />
              <column datatype='string' name='run_set' ordinal='2' />
              <column datatype='string' name='category' ordinal='3' />
              <column datatype='string' name='sensitivityTest_set' ordinal='4' />
              <column datatype='string' name='description' ordinal='5' />
              <column datatype='string' name='landuse_path' ordinal='6' />
              <column datatype='string' name='urbansim_runid' ordinal='7' />
              <column datatype='string' name='status' ordinal='8' />
              <column datatype='string' name='run_offmodel' ordinal='9' />
              <column datatype='string' name='network' ordinal='10' />
              <column datatype='string' name='model_machine' ordinal='11' />
              <column datatype='string' name='Asana Link' ordinal='12' />
              <column datatype='real' name='AOC_CentsPerMile' ordinal='13' />
              <column datatype='string' name='Telecommute_constant_FT' ordinal='14' />
              <column datatype='string' name='Telecommute_constant_PT' ordinal='15' />
              <column datatype='string' name='WFH_FullTimeWorker_Factor' ordinal='16' />
              <column datatype='string' name='WFH_PartTimeWorker_Factor' ordinal='17' />
              <column datatype='string' name='WFH_Distance_Factor' ordinal='18' />
              <column datatype='string' name='WFH_Calibration_constant' ordinal='19' />
              <column datatype='string' name='WFH_Calibration_eastbay_SF' ordinal='20' />
              <column datatype='string' name='Work_Transit_Hesitance' ordinal='21' />
              <column datatype='string' name='NonWork_Transit_Hesitance' ordinal='22' />
              <column datatype='string' name='BART_Transit_Hesitance' ordinal='23' />
              <column datatype='string' name='Alias' ordinal='24' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AOC_CentsPerMile]' value='[ModelRuns].[AOC_CentsPerMile]' />
          <map key='[Alias]' value='[ModelRuns].[Alias]' />
          <map key='[Asana Link]' value='[ModelRuns].[Asana Link]' />
          <map key='[BART_Transit_Hesitance]' value='[ModelRuns].[BART_Transit_Hesitance]' />
          <map key='[NonWork_Transit_Hesitance]' value='[ModelRuns].[NonWork_Transit_Hesitance]' />
          <map key='[Path]' value='[topsheet_*.csv].[Path]' />
          <map key='[Telecommute_constant_FT]' value='[ModelRuns].[Telecommute_constant_FT]' />
          <map key='[Telecommute_constant_PT]' value='[ModelRuns].[Telecommute_constant_PT]' />
          <map key='[WFH_Calibration_constant]' value='[ModelRuns].[WFH_Calibration_constant]' />
          <map key='[WFH_Calibration_eastbay_SF]' value='[ModelRuns].[WFH_Calibration_eastbay_SF]' />
          <map key='[WFH_Distance_Factor]' value='[ModelRuns].[WFH_Distance_Factor]' />
          <map key='[WFH_FullTimeWorker_Factor]' value='[ModelRuns].[WFH_FullTimeWorker_Factor]' />
          <map key='[WFH_PartTimeWorker_Factor]' value='[ModelRuns].[WFH_PartTimeWorker_Factor]' />
          <map key='[Work_Transit_Hesitance]' value='[ModelRuns].[Work_Transit_Hesitance]' />
          <map key='[category]' value='[ModelRuns].[category]' />
          <map key='[description]' value='[ModelRuns].[description]' />
          <map key='[directory (ModelRuns)]' value='[ModelRuns].[directory]' />
          <map key='[directory]' value='[topsheet_*.csv].[directory]' />
          <map key='[landuse_path]' value='[ModelRuns].[landuse_path]' />
          <map key='[model_machine]' value='[ModelRuns].[model_machine]' />
          <map key='[network.VMT.auto]' value='[topsheet_*.csv].[network.VMT.auto]' />
          <map key='[network.VMT]' value='[topsheet_*.csv].[network.VMT]' />
          <map key='[network]' value='[ModelRuns].[network]' />
          <map key='[popsyn.empres]' value='[topsheet_*.csv].[popsyn.empres]' />
          <map key='[popsyn.tothh]' value='[topsheet_*.csv].[popsyn.tothh]' />
          <map key='[popsyn.totpop]' value='[topsheet_*.csv].[popsyn.totpop]' />
          <map key='[resident.trip.table.VMT]' value='[topsheet_*.csv].[resident.trip.table.VMT]' />
          <map key='[run_offmodel]' value='[ModelRuns].[run_offmodel]' />
          <map key='[run_set]' value='[ModelRuns].[run_set]' />
          <map key='[sensitivityTest_set]' value='[ModelRuns].[sensitivityTest_set]' />
          <map key='[status]' value='[ModelRuns].[status]' />
          <map key='[tazdata.empres]' value='[topsheet_*.csv].[tazdata.empres]' />
          <map key='[tazdata.gqpop]' value='[topsheet_*.csv].[tazdata.gqpop]' />
          <map key='[tazdata.totemp]' value='[topsheet_*.csv].[tazdata.totemp]' />
          <map key='[tazdata.tothh]' value='[topsheet_*.csv].[tazdata.tothh]' />
          <map key='[tazdata.totpop]' value='[topsheet_*.csv].[tazdata.totpop]' />
          <map key='[urbansim_runid]' value='[ModelRuns].[urbansim_runid]' />
          <map key='[year]' value='[ModelRuns].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y256:no:A1:Y256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>directory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[directory]</local-name>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias>directory</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tazdata.tothh</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tazdata.tothh]</local-name>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias>tazdata.tothh</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tazdata.totpop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tazdata.totpop]</local-name>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias>tazdata.totpop</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tazdata.totemp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tazdata.totemp]</local-name>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias>tazdata.totemp</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tazdata.empres</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tazdata.empres]</local-name>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias>tazdata.empres</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tazdata.gqpop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tazdata.gqpop]</local-name>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias>tazdata.gqpop</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>popsyn.tothh</remote-name>
            <remote-type>20</remote-type>
            <local-name>[popsyn.tothh]</local-name>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias>popsyn.tothh</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>popsyn.totpop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[popsyn.totpop]</local-name>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias>popsyn.totpop</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>popsyn.empres</remote-name>
            <remote-type>20</remote-type>
            <local-name>[popsyn.empres]</local-name>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias>popsyn.empres</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>network.VMT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[network.VMT]</local-name>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias>network.VMT</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>network.VMT.auto</remote-name>
            <remote-type>5</remote-type>
            <local-name>[network.VMT.auto]</local-name>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias>network.VMT.auto</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>resident.trip.table.VMT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resident.trip.table.VMT]</local-name>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias>resident.trip.table.VMT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Path]</local-name>
            <parent-name>[topsheet_*.csv]</parent-name>
            <remote-alias>Path</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>directory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[directory (ModelRuns)]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>directory</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run_set</remote-name>
            <remote-type>130</remote-type>
            <local-name>[run_set]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>run_set</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sensitivityTest_set</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sensitivityTest_set]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>sensitivityTest_set</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landuse_path</remote-name>
            <remote-type>130</remote-type>
            <local-name>[landuse_path]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>landuse_path</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urbansim_runid</remote-name>
            <remote-type>130</remote-type>
            <local-name>[urbansim_runid]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>urbansim_runid</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run_offmodel</remote-name>
            <remote-type>130</remote-type>
            <local-name>[run_offmodel]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>run_offmodel</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>network</remote-name>
            <remote-type>130</remote-type>
            <local-name>[network]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>network</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model_machine</remote-name>
            <remote-type>130</remote-type>
            <local-name>[model_machine]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>model_machine</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Asana Link</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Asana Link]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Asana Link</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AOC_CentsPerMile</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AOC_CentsPerMile]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>AOC_CentsPerMile</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Telecommute_constant_FT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Telecommute_constant_FT]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Telecommute_constant_FT</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Telecommute_constant_PT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Telecommute_constant_PT]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Telecommute_constant_PT</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_FullTimeWorker_Factor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_FullTimeWorker_Factor]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_FullTimeWorker_Factor</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_PartTimeWorker_Factor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_PartTimeWorker_Factor]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_PartTimeWorker_Factor</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_Distance_Factor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_Distance_Factor]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_Distance_Factor</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_Calibration_constant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_Calibration_constant]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_Calibration_constant</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_Calibration_eastbay_SF</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_Calibration_eastbay_SF]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_Calibration_eastbay_SF</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Work_Transit_Hesitance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Work_Transit_Hesitance]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Work_Transit_Hesitance</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NonWork_Transit_Hesitance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NonWork_Transit_Hesitance]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>NonWork_Transit_Hesitance</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BART_Transit_Hesitance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BART_Transit_Hesitance]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>BART_Transit_Hesitance</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alias</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Alias]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Alias</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210299904:qk:21]&quot;' value='% Diff in network.VMT per capita from 2005' />
          <alias key='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210299904:qk:3]&quot;' value='% Difference in network.VMT per capita from 2005' />
          <alias key='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210299904:qk:4]&quot;' value='% Diff in network.VMT.auto per capita from 2005' />
          <alias key='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210299904:qk:7]&quot;' value='% Diff in Sum of network.VMT per capita from DEIR' />
          <alias key='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210504705:qk:2]&quot;' value='% Diff in resident.trip.table.VMT per capita from 2005' />
          <alias key='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210504705:qk:3]&quot;' value='% Diff  in resident.trip.table.VMT per capita from 2005' />
          <alias key='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT:qk:4]&quot;' value='% Diff in network.VMT from DEIR' />
          <alias key='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:11]&quot;' value='% Difference in network.VMT.auto per capita from 2005' />
          <alias key='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto:qk:21]&quot;' value='% Diff in network.VMT.auto from DEIR' />
          <alias key='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:resident.trip.table.VMT:qk:9]&quot;' value='% Diff in resident.trip.table.VMT from DEIR' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='AOC CentsPerMile' datatype='real' name='[AOC_CentsPerMile]' role='dimension' type='ordinal' />
      <column caption='Totpop Diff' datatype='integer' name='[Calculation_1368531389994086400]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[popsyn.totpop] - [tazdata.totpop]' />
      </column>
      <column caption='Totpop Pct Diff' datatype='real' default-format='p0.0%' name='[Calculation_1368531389994242049]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1368531389994086400]/[tazdata.totpop]' />
      </column>
      <column caption='Popsyn.Empres / Tazdata.Empres' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1456914505388314624]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[popsyn.empres] / [tazdata.empres]' />
      </column>
      <column caption='Popsyn.Empres / Popsyn.Totpop' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1456914505389617153]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[popsyn.empres] / [popsyn.totpop]' />
      </column>
      <column caption='network.VMT per capita' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_471752122210299904]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[network.VMT]/[popsyn.totpop]' />
      </column>
      <column caption='resident.trip.table.VMT per capita' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_471752122210504705]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[resident.trip.table.VMT]/[popsyn.totpop]' />
      </column>
      <column caption='Empres Pct Diff' datatype='real' default-format='p0.0%' name='[Tothh Pct Diff (copy)_1368531389994995717]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Totpop Diff (copy) (copy)_1368531389994635267]/[tazdata.empres]' />
      </column>
      <column caption='Empres Diff' datatype='integer' name='[Totpop Diff (copy) (copy)_1368531389994635267]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[popsyn.empres] - [tazdata.empres]' />
      </column>
      <column caption='Tothh Diff' datatype='integer' name='[Totpop Diff (copy)_1368531389994622978]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[popsyn.tothh] - [tazdata.tothh]' />
      </column>
      <column caption='Tothh Pct Diff' datatype='real' default-format='p0.0%' name='[Totpop Pct Diff (copy)_1368531389994881028]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Totpop Diff (copy)_1368531389994622978]/[tazdata.tothh]' />
      </column>
      <column caption='topsheets' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Directory' datatype='string' name='[directory (ModelRuns)]' role='dimension' type='nominal' />
      <column caption='Topsheet Directory' datatype='string' name='[directory]' role='dimension' type='nominal' />
      <column caption='Landuse Path' datatype='string' name='[landuse_path]' role='dimension' type='nominal' />
      <column caption='Model Machine' datatype='string' name='[model_machine]' role='dimension' type='nominal' />
      <column caption='network.VMT.auto per capita' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[network.VMT.auto per capita (copy)_886364766628569093]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[network.VMT.auto]/[popsyn.totpop]' />
      </column>
      <column datatype='real' name='[network.VMT.auto]' role='measure' type='quantitative' />
      <column datatype='real' name='[network.VMT]' role='measure' type='quantitative' />
      <column caption='Network' datatype='string' name='[network]' role='dimension' type='nominal' />
      <column caption='Popsyn.Empres' datatype='integer' name='[popsyn.empres]' role='measure' type='quantitative' />
      <column caption='Popsyn.Tothh' datatype='integer' name='[popsyn.tothh]' role='measure' type='quantitative' />
      <column caption='Popsyn.Totpop' datatype='integer' name='[popsyn.totpop]' role='measure' type='quantitative' />
      <column datatype='real' name='[resident.trip.table.VMT]' role='measure' type='quantitative' />
      <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column caption='Tazdata.Empres' datatype='integer' name='[tazdata.empres]' role='measure' type='quantitative' />
      <column caption='Tazdata.GQpop' datatype='integer' name='[tazdata.gqpop]' role='measure' type='quantitative' />
      <column caption='Tazdata.Totemp' datatype='integer' name='[tazdata.totemp]' role='measure' type='quantitative' />
      <column caption='Tazdata.Tothh' datatype='integer' name='[tazdata.tothh]' role='measure' type='quantitative' />
      <column caption='Tazdata.Totpop' datatype='integer' name='[tazdata.totpop]' role='measure' type='quantitative' />
      <column caption='Urbansim Runid' datatype='string' name='[urbansim_runid]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_471752122210299904]' derivation='Sum' name='[diff:sum:Calculation_471752122210299904:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[diff:sum:network.VMT.auto per capita (copy)_886364766628569093:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[AOC_CentsPerMile]' derivation='None' name='[none:AOC_CentsPerMile:ok]' pivot='key' type='ordinal' />
      <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
      <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
      <column-instance column='[directory (ModelRuns)]' derivation='None' name='[none:directory (ModelRuns):nk]' pivot='key' type='nominal' />
      <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
      <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_471752122210299904]' derivation='Sum' name='[pcdf:sum:Calculation_471752122210299904:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:year:ok]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:description:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:AOC_CentsPerMile:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_471752122210299904]' derivation='Sum' name='[pcdf:sum:Calculation_471752122210299904:qk:21]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[directory (ScenarioKey.csv)]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[category]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[run_set]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[status]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[year]' />
          <address />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_471752122210299904]' derivation='Sum' name='[pcdf:sum:Calculation_471752122210299904:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:year:ok]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:description:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:AOC_CentsPerMile:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_471752122210299904]' derivation='Sum' name='[pcdf:sum:Calculation_471752122210299904:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:year:ok]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:description:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:AOC_CentsPerMile:ok]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_471752122210299904]' derivation='Sum' name='[pcdf:sum:Calculation_471752122210299904:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_471752122210299904]' derivation='Sum' name='[pcdf:sum:Calculation_471752122210299904:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:year:ok]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:description:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:AOC_CentsPerMile:ok]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[run_set]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_471752122210299904]' derivation='Sum' name='[pcdf:sum:Calculation_471752122210299904:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ScenarioKey.csv):nk]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_471752122210299904]' derivation='Sum' name='[pcdf:sum:Calculation_471752122210299904:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_471752122210504705]' derivation='Sum' name='[pcdf:sum:Calculation_471752122210504705:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:project:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:year:ok]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:category:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ScenarioKey.csv):nk]' />
          <address />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_471752122210504705]' derivation='Sum' name='[pcdf:sum:Calculation_471752122210504705:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:year:ok]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:category:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ScenarioKey.csv):nk]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:10]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[year]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[directory (ModelRuns)]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[description]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[AOC_CentsPerMile]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:11]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[year]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[directory (ModelRuns)]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[description]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[AOC_CentsPerMile]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:12]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[year]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[directory (ModelRuns)]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[description]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[AOC_CentsPerMile]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[run_set]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:13]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:year:ok]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:description:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:AOC_CentsPerMile:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:description:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:AOC_CentsPerMile:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:description:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:AOC_CentsPerMile:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:AOC_CentsPerMile:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[year]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[year]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[directory (ModelRuns)]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[year]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[directory (ModelRuns)]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[description]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT.auto]' derivation='Sum' name='[pcdf:sum:network.VMT.auto:qk:21]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[status]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[directory (ScenarioKey.csv)]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT]' derivation='Sum' name='[pcdf:sum:network.VMT:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ScenarioKey.csv):nk]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[network.VMT]' derivation='Sum' name='[pcdf:sum:network.VMT:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[resident.trip.table.VMT]' derivation='Sum' name='[pcdf:sum:resident.trip.table.VMT:qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[status]' />
          <order field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ScenarioKey.csv):nk]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_471752122210299904]' derivation='Sum' name='[sum:Calculation_471752122210299904:qk]' pivot='key' type='quantitative' />
      <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[sum:network.VMT.auto per capita (copy)_886364766628569093:qk]' pivot='key' type='quantitative' />
      <column-instance column='[network.VMT.auto]' derivation='Sum' name='[sum:network.VMT.auto:qk]' pivot='key' type='quantitative' />
      <column-instance column='[network.VMT]' derivation='Sum' name='[sum:network.VMT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[popsyn.empres]' derivation='Sum' name='[sum:popsyn.empres:qk]' pivot='key' type='quantitative' />
      <column-instance column='[popsyn.tothh]' derivation='Sum' name='[sum:popsyn.tothh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[popsyn.totpop]' derivation='Sum' name='[sum:popsyn.totpop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tazdata.empres]' derivation='Sum' name='[sum:tazdata.empres:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tazdata.tothh]' derivation='Sum' name='[sum:tazdata.tothh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tazdata.totpop]' derivation='Sum' name='[sum:tazdata.totpop:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[diff:sum:Calculation_471752122210299904:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210299904:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210299904:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210299904:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210299904:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210299904:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT:qk:8]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Calculation_471752122210299904:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:network.VMT:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:network.VMT.auto:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[diff:sum:network.VMT.auto per capita (copy)_886364766628569093:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210299904:qk:4]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:10]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:11]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:12]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:13]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:2]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:3]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:4]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:5]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:6]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:7]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:8]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:9]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:network.VMT.auto per capita (copy)_886364766628569093:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:popsyn.empres:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:popsyn.tothh:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:popsyn.totpop:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.empres:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.tothh:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.totpop:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:run_set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;RTP2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RTP2025_IP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RTP2025&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <alphabetic-sort column='[none:directory (ModelRuns):nk]' direction='ASC' />
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='directory' />
        <field-sort-custom-order field='tazdata.tothh' />
        <field-sort-custom-order field='tazdata.totpop' />
        <field-sort-custom-order field='Calculation_1368531389994086400' />
        <field-sort-custom-order field='Totpop Diff (copy)_1368531389994622978' />
        <field-sort-custom-order field='Totpop Diff (copy) (copy)_1368531389994635267' />
        <field-sort-custom-order field='Calculation_1368531389994242049' />
        <field-sort-custom-order field='Totpop Pct Diff (copy)_1368531389994881028' />
        <field-sort-custom-order field='Tothh Pct Diff (copy)_1368531389994995717' />
        <field-sort-custom-order field='tazdata.totemp' />
        <field-sort-custom-order field='tazdata.empres' />
        <field-sort-custom-order field='tazdata.gqpop' />
        <field-sort-custom-order field='popsyn.tothh' />
        <field-sort-custom-order field='popsyn.totpop' />
        <field-sort-custom-order field='popsyn.empres' />
        <field-sort-custom-order field='Calculation_1456914505389617153' />
        <field-sort-custom-order field='Calculation_1456914505388314624' />
        <field-sort-custom-order field='network.VMT' />
        <field-sort-custom-order field='network.VMT.auto' />
        <field-sort-custom-order field='resident.trip.table.VMT' />
        <field-sort-custom-order field='Path' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='directory (ModelRuns)' />
        <field-sort-custom-order field='run_set' />
        <field-sort-custom-order field='category' />
        <field-sort-custom-order field='sensitivityTest_set' />
        <field-sort-custom-order field='description' />
        <field-sort-custom-order field='landuse_path' />
        <field-sort-custom-order field='urbansim_runid' />
        <field-sort-custom-order field='status' />
        <field-sort-custom-order field='run_offmodel' />
        <field-sort-custom-order field='network' />
        <field-sort-custom-order field='model_machine' />
        <field-sort-custom-order field='Asana Link' />
        <field-sort-custom-order field='AOC_CentsPerMile' />
        <field-sort-custom-order field='Telecommute_constant_FT' />
        <field-sort-custom-order field='Telecommute_constant_PT' />
        <field-sort-custom-order field='WFH_FullTimeWorker_Factor' />
        <field-sort-custom-order field='WFH_PartTimeWorker_Factor' />
        <field-sort-custom-order field='WFH_Distance_Factor' />
        <field-sort-custom-order field='WFH_Calibration_constant' />
        <field-sort-custom-order field='Work_Transit_Hesitance' />
        <field-sort-custom-order field='NonWork_Transit_Hesitance' />
        <field-sort-custom-order field='BART_Transit_Hesitance' />
        <field-sort-custom-order field='Alias' />
        <field-sort-custom-order field='Calculation_471752122210299904' />
        <field-sort-custom-order field='Calculation_471752122210504705' />
        <field-sort-custom-order field='network.VMT.auto per capita (copy)_886364766628569093' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='topsheets' id='Migrated Data'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[topsheet_*.csv].[directory]' />
                    <expression op='[ModelRuns].[directory]' />
                  </expression>
                </clause>
                <relation all='true' connection='textscan.0epbw8p0jg8gjo1e9951d1in85oj' include-siblings='false' is-recursive='false' name='topsheet_*.csv' path='' type='batch-union'>
                  <database-filter>
                    <expression op='='>
                      <expression op='topsheet_*.csv' />
                    </expression>
                  </database-filter>
                  <table-filter />
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='directory' />
                    <column datatype='integer' name='tazdata.tothh' />
                    <column datatype='integer' name='tazdata.totpop' />
                    <column datatype='integer' name='tazdata.totemp' />
                    <column datatype='integer' name='tazdata.empres' />
                    <column datatype='integer' name='popsyn.tothh' />
                    <column datatype='integer' name='popsyn.totpop' />
                    <column datatype='integer' name='popsyn.empres' />
                    <column datatype='real' name='network.VMT' />
                    <column datatype='real' name='network.VMT.auto' />
                    <column datatype='real' name='resident.trip.table.VMT' />
                    <column datatype='string' name='Path' />
                    <column datatype='integer' name='tazdata.gqpop' ordinal='6' />
                  </columns>
                </relation>
                <relation connection='excel-direct.06hl7xe0h1kqx31glbays0jx5b3j' name='ModelRuns' table='[ModelRuns$]' type='table'>
                  <columns gridOrigin='A1:Y256:no:A1:Y256:0' header='yes' outcome='2'>
                    <column datatype='integer' name='year' ordinal='0' />
                    <column datatype='string' name='directory' ordinal='1' />
                    <column datatype='string' name='run_set' ordinal='2' />
                    <column datatype='string' name='category' ordinal='3' />
                    <column datatype='string' name='sensitivityTest_set' ordinal='4' />
                    <column datatype='string' name='description' ordinal='5' />
                    <column datatype='string' name='landuse_path' ordinal='6' />
                    <column datatype='string' name='urbansim_runid' ordinal='7' />
                    <column datatype='string' name='status' ordinal='8' />
                    <column datatype='string' name='run_offmodel' ordinal='9' />
                    <column datatype='string' name='network' ordinal='10' />
                    <column datatype='string' name='model_machine' ordinal='11' />
                    <column datatype='string' name='Asana Link' ordinal='12' />
                    <column datatype='real' name='AOC_CentsPerMile' ordinal='13' />
                    <column datatype='string' name='Telecommute_constant_FT' ordinal='14' />
                    <column datatype='string' name='Telecommute_constant_PT' ordinal='15' />
                    <column datatype='string' name='WFH_FullTimeWorker_Factor' ordinal='16' />
                    <column datatype='string' name='WFH_PartTimeWorker_Factor' ordinal='17' />
                    <column datatype='string' name='WFH_Distance_Factor' ordinal='18' />
                    <column datatype='string' name='WFH_Calibration_constant' ordinal='19' />
                    <column datatype='string' name='WFH_Calibration_eastbay_SF' ordinal='20' />
                    <column datatype='string' name='Work_Transit_Hesitance' ordinal='21' />
                    <column datatype='string' name='NonWork_Transit_Hesitance' ordinal='22' />
                    <column datatype='string' name='BART_Transit_Hesitance' ordinal='23' />
                    <column datatype='string' name='Alias' ordinal='24' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='TripDistance' inline='true' name='federated.1eeyfid137qi091h9q2kb1olbl2h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TripDistance' name='textscan.19m7vsj0diyml317e83sa0isjbkh'>
            <connection class='textscan' directory='M:/Application/Model One/RTP2025/Blueprint/across_runs_FinalBlueprint' filename='TripDistance_2023_TM152_IPA_00.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='ModelRuns_RTP2025' name='excel-direct.0vurbx90ubxydy17krxld0wpion8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='X:/travel-model-one-master/utilities/RTP/config_RTP2025/ModelRuns_RTP2025.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='replace(&#13;&#10;  replace([TripDistance_*.csv].[Path],&quot;across_runs_FinalBlueprint/TripDistance_&quot;,&quot;&quot;),&#13;&#10;  &quot;.csv&quot;,&quot;&quot;)' />
              <expression op='[ModelRuns].[directory]' />
            </expression>
          </clause>
          <relation all='true' connection='textscan.19m7vsj0diyml317e83sa0isjbkh' include-siblings='false' is-recursive='false' name='TripDistance_*.csv' path='' type='batch-union'>
            <database-filter>
              <expression op='='>
                <expression op='TripDistance_*.csv' />
              </expression>
            </database-filter>
            <table-filter />
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='autoSuff' />
              <column datatype='string' name='autoSuff_label' />
              <column datatype='integer' name='incQ' />
              <column datatype='string' name='incQ_label' />
              <column datatype='string' name='timeCode' />
              <column datatype='string' name='timeperiod_label' />
              <column datatype='integer' name='trip_mode' />
              <column datatype='string' name='tour_purpose' />
              <column datatype='integer' name='freq' />
              <column datatype='real' name='distance' />
              <column datatype='string' name='Path' />
            </columns>
          </relation>
          <relation connection='excel-direct.0vurbx90ubxydy17krxld0wpion8' name='ModelRuns' table='[ModelRuns$]' type='table'>
            <columns gridOrigin='A1:Y256:no:A1:Y256:0' header='yes' outcome='2'>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='string' name='directory' ordinal='1' />
              <column datatype='string' name='run_set' ordinal='2' />
              <column datatype='string' name='category' ordinal='3' />
              <column datatype='string' name='sensitivityTest_set' ordinal='4' />
              <column datatype='string' name='description' ordinal='5' />
              <column datatype='string' name='landuse_path' ordinal='6' />
              <column datatype='string' name='urbansim_runid' ordinal='7' />
              <column datatype='string' name='status' ordinal='8' />
              <column datatype='string' name='run_offmodel' ordinal='9' />
              <column datatype='string' name='network' ordinal='10' />
              <column datatype='string' name='model_machine' ordinal='11' />
              <column datatype='string' name='Asana Link' ordinal='12' />
              <column datatype='real' name='AOC_CentsPerMile' ordinal='13' />
              <column datatype='string' name='Telecommute_constant_FT' ordinal='14' />
              <column datatype='string' name='Telecommute_constant_PT' ordinal='15' />
              <column datatype='string' name='WFH_FullTimeWorker_Factor' ordinal='16' />
              <column datatype='string' name='WFH_PartTimeWorker_Factor' ordinal='17' />
              <column datatype='string' name='WFH_Distance_Factor' ordinal='18' />
              <column datatype='string' name='WFH_Calibration_constant' ordinal='19' />
              <column datatype='string' name='WFH_Calibration_eastbay_SF' ordinal='20' />
              <column datatype='string' name='Work_Transit_Hesitance' ordinal='21' />
              <column datatype='string' name='NonWork_Transit_Hesitance' ordinal='22' />
              <column datatype='string' name='BART_Transit_Hesitance' ordinal='23' />
              <column datatype='string' name='Alias' ordinal='24' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[TripDistance_*.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y256:no:A1:Y256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>20</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[TripDistance_*.csv]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[TripDistance_*.csv]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[TripDistance_*.csv]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[TripDistance_*.csv]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timeCode]</local-name>
            <parent-name>[TripDistance_*.csv]</parent-name>
            <remote-alias>timeCode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeperiod_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timeperiod_label]</local-name>
            <parent-name>[TripDistance_*.csv]</parent-name>
            <remote-alias>timeperiod_label</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_mode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[trip_mode]</local-name>
            <parent-name>[TripDistance_*.csv]</parent-name>
            <remote-alias>trip_mode</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_purpose</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tour_purpose]</local-name>
            <parent-name>[TripDistance_*.csv]</parent-name>
            <remote-alias>tour_purpose</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[TripDistance_*.csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[TripDistance_*.csv]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Path]</local-name>
            <parent-name>[TripDistance_*.csv]</parent-name>
            <remote-alias>Path</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>directory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[directory]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>directory</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run_set</remote-name>
            <remote-type>130</remote-type>
            <local-name>[run_set]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>run_set</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sensitivityTest_set</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sensitivityTest_set]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>sensitivityTest_set</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landuse_path</remote-name>
            <remote-type>130</remote-type>
            <local-name>[landuse_path]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>landuse_path</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urbansim_runid</remote-name>
            <remote-type>130</remote-type>
            <local-name>[urbansim_runid]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>urbansim_runid</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run_offmodel</remote-name>
            <remote-type>130</remote-type>
            <local-name>[run_offmodel]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>run_offmodel</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>network</remote-name>
            <remote-type>130</remote-type>
            <local-name>[network]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>network</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model_machine</remote-name>
            <remote-type>130</remote-type>
            <local-name>[model_machine]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>model_machine</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Asana Link</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Asana Link]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Asana Link</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AOC_CentsPerMile</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AOC_CentsPerMile]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>AOC_CentsPerMile</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Telecommute_constant_FT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Telecommute_constant_FT]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Telecommute_constant_FT</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Telecommute_constant_PT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Telecommute_constant_PT]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Telecommute_constant_PT</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_FullTimeWorker_Factor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_FullTimeWorker_Factor]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_FullTimeWorker_Factor</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_PartTimeWorker_Factor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_PartTimeWorker_Factor]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_PartTimeWorker_Factor</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_Distance_Factor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_Distance_Factor]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_Distance_Factor</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_Calibration_constant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_Calibration_constant]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_Calibration_constant</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_Calibration_eastbay_SF</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_Calibration_eastbay_SF]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_Calibration_eastbay_SF</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Work_Transit_Hesitance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Work_Transit_Hesitance]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Work_Transit_Hesitance</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NonWork_Transit_Hesitance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NonWork_Transit_Hesitance]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>NonWork_Transit_Hesitance</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BART_Transit_Hesitance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BART_Transit_Hesitance]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>BART_Transit_Hesitance</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alias</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Alias]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Alias</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcdf:sum:Calculation_3103261627238850560:qk:10]&quot;' value='% Diff Total Distance' />
          <alias key='&quot;[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcdf:sum:freq:qk:3]&quot;' value='% Diff Trips' />
        </aliases>
      </column>
      <column caption='Model Run Directory' datatype='string' name='[Calculation_1318428845111218183]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='replace(&#13;&#10;  replace([Path],&quot;across_runs/TripDistance_&quot;,&quot;&quot;),&#13;&#10;  &quot;.csv&quot;,&quot;&quot;)' />
      </column>
      <column caption='Plan Year Scenario' datatype='string' name='[Calculation_1957940005551828997]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[project] + &quot; &quot; + str([year]) + &quot; &quot; + [category]' />
      </column>
      <column caption='Average Trip Distance' datatype='real' name='[Calculation_2629539297145319442]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' />
      </column>
      <column caption='Total Distance' datatype='real' name='[Calculation_3103261627238850560]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[distance]*[freq]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Transit Trip Modes]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[trip_mode]' new-bin='true'>
          <bin default-name='false' value='&quot;Commuter Rail&quot;'>
            <value>13</value>
            <value>18</value>
          </bin>
          <bin default-name='false' value='&quot;Express Bus&quot;'>
            <value>11</value>
            <value>16</value>
          </bin>
          <bin default-name='false' value='&quot;Heavy Rail&quot;'>
            <value>12</value>
            <value>17</value>
          </bin>
          <bin default-name='false' value='&quot;Light Rail or Ferry&quot;'>
            <value>10</value>
            <value>15</value>
          </bin>
          <bin default-name='false' value='&quot;Local Bus&quot;'>
            <value>9</value>
            <value>14</value>
          </bin>
          <bin default-name='false' value='&quot;Non-Transit&quot;'>
            <value>1</value>
            <value>2</value>
            <value>3</value>
            <value>4</value>
            <value>5</value>
            <value>7</value>
            <value>8</value>
            <value>19</value>
            <value>20</value>
            <value>21</value>
          </bin>
        </calculation>
      </column>
      <column caption='Trip Mode (bigger group)' datatype='string' name='[Trip Mode (group) (copy)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[trip_mode]' new-bin='true'>
          <bin default-name='false' value='&quot;Auto&quot;'>
            <value>1</value>
            <value>2</value>
            <value>3</value>
            <value>4</value>
            <value>5</value>
            <value>6</value>
            <value>19</value>
            <value>20</value>
            <value>21</value>
          </bin>
          <bin default-name='false' value='&quot;Non-Motorized&quot;'>
            <value>7</value>
            <value>8</value>
          </bin>
          <bin default-name='false' value='&quot;Transit&quot;'>
            <value>9</value>
            <value>10</value>
            <value>11</value>
            <value>12</value>
            <value>13</value>
            <value>14</value>
            <value>15</value>
            <value>16</value>
            <value>17</value>
            <value>18</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Trip Mode (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[trip_mode]' new-bin='true'>
          <bin default-name='false' value='&quot;Bicycle&quot;'>
            <value>8</value>
          </bin>
          <bin default-name='false' value='&quot;Drive Alone&quot;'>
            <value>1</value>
            <value>2</value>
          </bin>
          <bin default-name='false' value='&quot;Drive to Transit&quot;'>
            <value>14</value>
            <value>15</value>
            <value>16</value>
            <value>17</value>
            <value>18</value>
          </bin>
          <bin default-name='false' value='&quot;Shared Ride 2&quot;'>
            <value>3</value>
            <value>4</value>
          </bin>
          <bin default-name='false' value='&quot;Shared ride 3+&quot;'>
            <value>5</value>
            <value>6</value>
          </bin>
          <bin default-name='false' value='&quot;Taxi/TNC&quot;'>
            <value>19</value>
            <value>20</value>
            <value>21</value>
          </bin>
          <bin default-name='false' value='&quot;Walk&quot;'>
            <value>7</value>
          </bin>
          <bin default-name='false' value='&quot;Walk to Transit&quot;'>
            <value>9</value>
            <value>10</value>
            <value>11</value>
            <value>12</value>
            <value>13</value>
          </bin>
        </calculation>
      </column>
      <column caption='TripDistance' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Directory' datatype='string' name='[directory]' role='dimension' type='nominal' />
      <column caption='Number of Trips' datatype='integer' name='[freq]' role='measure' type='quantitative' />
      <column caption='Landuse Path' datatype='string' name='[landuse_path]' role='dimension' type='nominal' />
      <column caption='Model Machine' datatype='string' name='[model_machine]' role='dimension' type='nominal' />
      <column caption='Network' datatype='string' name='[network]' role='dimension' type='nominal' />
      <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column datatype='string' name='[tour_purpose (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[tour_purpose]' new-bin='true'>
          <bin default-name='false' value='&quot;atwork&quot;'>
            <value>&quot;atwork_business&quot;</value>
            <value>&quot;atwork_eat&quot;</value>
            <value>&quot;atwork_maint&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;discretionary&quot;'>
            <value>&quot;eatout&quot;</value>
            <value>&quot;othdiscr&quot;</value>
            <value>&quot;social&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;maintenance&quot;'>
            <value>&quot;escort_kids&quot;</value>
            <value>&quot;escort_no kids&quot;</value>
            <value>&quot;othmaint&quot;</value>
            <value>&quot;shopping&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;school&quot;'>
            <value>&quot;school_grade&quot;</value>
            <value>&quot;school_high&quot;</value>
            <value>&quot;university&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;work&quot;'>
            <value>&quot;work_high&quot;</value>
            <value>&quot;work_low&quot;</value>
            <value>&quot;work_med&quot;</value>
            <value>&quot;work_very high&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[tour_purpose]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Trip Mode' datatype='integer' name='[trip_mode]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Drive alone free' />
          <alias key='2' value='Drive alone toll' />
          <alias key='3' value='Shared ride 2 free' />
          <alias key='4' value='Shared ride 2  toll' />
          <alias key='5' value='Shared ride 3+ free' />
          <alias key='6' value='Shared ride 3+ toll' />
          <alias key='7' value='Walk' />
          <alias key='8' value='Bicycle' />
          <alias key='9' value='Walk to local bus' />
          <alias key='10' value='Walk to light rail or ferry' />
          <alias key='11' value='Walk to express bus' />
          <alias key='12' value='Walk to heavy rail' />
          <alias key='13' value='Walk to commuter rail' />
          <alias key='14' value='Drive to local bus' />
          <alias key='15' value='Drive to light rail or ferry' />
          <alias key='16' value='Drive to express bus' />
          <alias key='17' value='Drive to heavy rail' />
          <alias key='18' value='Drive to commuter rail' />
          <alias key='19' value='Taxi' />
          <alias key='20' value='TNC Single party' />
          <alias key='21' value='TNC Shared' />
        </aliases>
      </column>
      <column caption='Urbansim Runid' datatype='string' name='[urbansim_runid]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_1957940005551828997]' derivation='None' name='[none:Calculation_1957940005551828997:nk]' pivot='key' type='nominal' />
      <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_3103261627238850560]' derivation='Sum' name='[pcdf:sum:Calculation_3103261627238850560:qk:10]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Plan:nk]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcdf:sum:freq:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Plan]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:status:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;current&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Trip Mode (group)]' type='palette'>
            <map to='#256f3d'>
              <bucket>&quot;Bicycle&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;Drive to Transit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Walk&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Walk to Transit&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;6&quot;</bucket>
            </map>
            <map to='#a64122'>
              <bucket>&quot;Drive Alone&quot;</bucket>
            </map>
            <map to='#d25921'>
              <bucket>&quot;Shared Ride 2&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Taxi/TNC&quot;</bucket>
            </map>
            <map to='#f07e27'>
              <bucket>&quot;Shared ride 3+&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tour_purpose (group)]' palette='miller_stone_10_0' type='palette'>
            <map to='#4f6980'>
              <bucket>&quot;atwork&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;school&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;discretionary&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;maintenance&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;university&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;work&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[Trip Mode (group)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Drive Alone&quot;</bucket>
            <bucket>&quot;Shared Ride 2&quot;</bucket>
            <bucket>&quot;Shared ride 3+&quot;</bucket>
            <bucket>&quot;Drive to Transit&quot;</bucket>
            <bucket>&quot;Walk to Transit&quot;</bucket>
            <bucket>&quot;Walk&quot;</bucket>
            <bucket>&quot;Bicycle&quot;</bucket>
            <bucket>&quot;Taxi/TNC&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:Calculation_1957940005551828997:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;RTP2017 2005 Baseline&quot;</bucket>
            <bucket>&quot;RTP2017 2015 Baseline&quot;</bucket>
            <bucket>&quot;RTP2017 2035 Plan&quot;</bucket>
            <bucket>&quot;Blueprint 2005 Baseline&quot;</bucket>
            <bucket>&quot;Blueprint 2035 hiPop hiAOC&quot;</bucket>
            <bucket>&quot;Blueprint 2035 hiPop loAOC&quot;</bucket>
            <bucket>&quot;Blueprint 2035 loPop hiAOC&quot;</bucket>
            <bucket>&quot;Blueprint 2035 loPop loAOC&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='TripDistance' id='Migrated Data'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='replace(&#13;&#10;  replace([TripDistance_*.csv].[Path],&quot;across_runs_FinalBlueprint/TripDistance_&quot;,&quot;&quot;),&#13;&#10;  &quot;.csv&quot;,&quot;&quot;)' />
                    <expression op='[ModelRuns].[directory]' />
                  </expression>
                </clause>
                <relation all='true' connection='textscan.19m7vsj0diyml317e83sa0isjbkh' include-siblings='false' is-recursive='false' name='TripDistance_*.csv' path='' type='batch-union'>
                  <database-filter>
                    <expression op='='>
                      <expression op='TripDistance_*.csv' />
                    </expression>
                  </database-filter>
                  <table-filter />
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='autoSuff' />
                    <column datatype='string' name='autoSuff_label' />
                    <column datatype='integer' name='incQ' />
                    <column datatype='string' name='incQ_label' />
                    <column datatype='string' name='timeCode' />
                    <column datatype='string' name='timeperiod_label' />
                    <column datatype='integer' name='trip_mode' />
                    <column datatype='string' name='tour_purpose' />
                    <column datatype='integer' name='freq' />
                    <column datatype='real' name='distance' />
                    <column datatype='string' name='Path' />
                  </columns>
                </relation>
                <relation connection='excel-direct.0vurbx90ubxydy17krxld0wpion8' name='ModelRuns' table='[ModelRuns$]' type='table'>
                  <columns gridOrigin='A1:Y256:no:A1:Y256:0' header='yes' outcome='2'>
                    <column datatype='integer' name='year' ordinal='0' />
                    <column datatype='string' name='directory' ordinal='1' />
                    <column datatype='string' name='run_set' ordinal='2' />
                    <column datatype='string' name='category' ordinal='3' />
                    <column datatype='string' name='sensitivityTest_set' ordinal='4' />
                    <column datatype='string' name='description' ordinal='5' />
                    <column datatype='string' name='landuse_path' ordinal='6' />
                    <column datatype='string' name='urbansim_runid' ordinal='7' />
                    <column datatype='string' name='status' ordinal='8' />
                    <column datatype='string' name='run_offmodel' ordinal='9' />
                    <column datatype='string' name='network' ordinal='10' />
                    <column datatype='string' name='model_machine' ordinal='11' />
                    <column datatype='string' name='Asana Link' ordinal='12' />
                    <column datatype='real' name='AOC_CentsPerMile' ordinal='13' />
                    <column datatype='string' name='Telecommute_constant_FT' ordinal='14' />
                    <column datatype='string' name='Telecommute_constant_PT' ordinal='15' />
                    <column datatype='string' name='WFH_FullTimeWorker_Factor' ordinal='16' />
                    <column datatype='string' name='WFH_PartTimeWorker_Factor' ordinal='17' />
                    <column datatype='string' name='WFH_Distance_Factor' ordinal='18' />
                    <column datatype='string' name='WFH_Calibration_constant' ordinal='19' />
                    <column datatype='string' name='WFH_Calibration_eastbay_SF' ordinal='20' />
                    <column datatype='string' name='Work_Transit_Hesitance' ordinal='21' />
                    <column datatype='string' name='NonWork_Transit_Hesitance' ordinal='22' />
                    <column datatype='string' name='BART_Transit_Hesitance' ordinal='23' />
                    <column datatype='string' name='Alias' ordinal='24' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='VehicleMilesTraveled' inline='true' name='federated.10ey18i0433zc21cseiur1x6w735' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='VehicleMilesTraveled' name='textscan.1er82fi0wj9m8v14f7n9s0tllnki'>
            <connection class='textscan' directory='M:/Application/Model One/RTP2025/Blueprint/across_runs_FinalBlueprint' filename='VehicleMilesTraveled_2015_TM161_IPA_08.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='ModelRuns_RTP2025' name='excel-direct.0e8khbd0rjxrm1129dnie08gdanf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='X:/travel-model-one-master/utilities/RTP/config_RTP2025/ModelRuns_RTP2025.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='replace(&#13;&#10;  replace([VehicleMilesTraveled_*.csv].[Path],&quot;across_runs_FinalBlueprint/VehicleMilesTraveled_&quot;,&quot;&quot;),&#13;&#10;  &quot;.csv&quot;,&quot;&quot;)' />
              <expression op='[ModelRuns].[directory]' />
            </expression>
          </clause>
          <relation all='true' connection='textscan.1er82fi0wj9m8v14f7n9s0tllnki' include-siblings='false' is-recursive='false' name='VehicleMilesTraveled_*.csv' path='' type='batch-union'>
            <database-filter>
              <expression op='='>
                <expression op='VehicleMilesTraveled_*.csv' />
              </expression>
            </database-filter>
            <table-filter />
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='COUNTY' />
              <column datatype='string' name='county_name' />
              <column datatype='integer' name='SD' />
              <column datatype='integer' name='taz' />
              <column datatype='integer' name='walk_subzone' />
              <column datatype='string' name='walk_subzone_label' />
              <column datatype='integer' name='ptype' />
              <column datatype='string' name='ptype_label' />
              <column datatype='integer' name='autoSuff' />
              <column datatype='string' name='autoSuff_label' />
              <column datatype='integer' name='freq' />
              <column datatype='real' name='vmt_indiv' />
              <column datatype='real' name='vmt_joint' />
              <column datatype='real' name='vmt' />
              <column datatype='integer' name='person_trips' />
              <column datatype='real' name='vehicle_trips' />
              <column datatype='string' name='Path' />
            </columns>
          </relation>
          <relation connection='excel-direct.0e8khbd0rjxrm1129dnie08gdanf' name='ModelRuns' table='[ModelRuns$]' type='table'>
            <columns gridOrigin='A1:Y256:no:A1:Y256:0' header='yes' outcome='2'>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='string' name='directory' ordinal='1' />
              <column datatype='string' name='run_set' ordinal='2' />
              <column datatype='string' name='category' ordinal='3' />
              <column datatype='string' name='sensitivityTest_set' ordinal='4' />
              <column datatype='string' name='description' ordinal='5' />
              <column datatype='string' name='landuse_path' ordinal='6' />
              <column datatype='string' name='urbansim_runid' ordinal='7' />
              <column datatype='string' name='status' ordinal='8' />
              <column datatype='string' name='run_offmodel' ordinal='9' />
              <column datatype='string' name='network' ordinal='10' />
              <column datatype='string' name='model_machine' ordinal='11' />
              <column datatype='string' name='Asana Link' ordinal='12' />
              <column datatype='real' name='AOC_CentsPerMile' ordinal='13' />
              <column datatype='string' name='Telecommute_constant_FT' ordinal='14' />
              <column datatype='string' name='Telecommute_constant_PT' ordinal='15' />
              <column datatype='string' name='WFH_FullTimeWorker_Factor' ordinal='16' />
              <column datatype='string' name='WFH_PartTimeWorker_Factor' ordinal='17' />
              <column datatype='string' name='WFH_Distance_Factor' ordinal='18' />
              <column datatype='string' name='WFH_Calibration_constant' ordinal='19' />
              <column datatype='string' name='WFH_Calibration_eastbay_SF' ordinal='20' />
              <column datatype='string' name='Work_Transit_Hesitance' ordinal='21' />
              <column datatype='string' name='NonWork_Transit_Hesitance' ordinal='22' />
              <column datatype='string' name='BART_Transit_Hesitance' ordinal='23' />
              <column datatype='string' name='Alias' ordinal='24' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y256:no:A1:Y256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[walk_subzone]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>walk_subzone</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[walk_subzone_label]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>walk_subzone_label</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ptype]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>ptype</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ptype_label]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>ptype_label</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>20</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_indiv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_indiv]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>vmt_indiv</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt_joint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt_joint]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>vmt_joint</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vmt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vmt]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>vmt</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>person_trips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[person_trips]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>person_trips</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle_trips</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vehicle_trips]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>vehicle_trips</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Path]</local-name>
            <parent-name>[VehicleMilesTraveled_*.csv]</parent-name>
            <remote-alias>Path</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>directory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[directory]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>directory</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run_set</remote-name>
            <remote-type>130</remote-type>
            <local-name>[run_set]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>run_set</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sensitivityTest_set</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sensitivityTest_set]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>sensitivityTest_set</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landuse_path</remote-name>
            <remote-type>130</remote-type>
            <local-name>[landuse_path]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>landuse_path</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urbansim_runid</remote-name>
            <remote-type>130</remote-type>
            <local-name>[urbansim_runid]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>urbansim_runid</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run_offmodel</remote-name>
            <remote-type>130</remote-type>
            <local-name>[run_offmodel]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>run_offmodel</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>network</remote-name>
            <remote-type>130</remote-type>
            <local-name>[network]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>network</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model_machine</remote-name>
            <remote-type>130</remote-type>
            <local-name>[model_machine]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>model_machine</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Asana Link</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Asana Link]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Asana Link</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AOC_CentsPerMile</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AOC_CentsPerMile]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>AOC_CentsPerMile</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Telecommute_constant_FT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Telecommute_constant_FT]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Telecommute_constant_FT</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Telecommute_constant_PT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Telecommute_constant_PT]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Telecommute_constant_PT</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_FullTimeWorker_Factor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_FullTimeWorker_Factor]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_FullTimeWorker_Factor</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_PartTimeWorker_Factor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_PartTimeWorker_Factor]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_PartTimeWorker_Factor</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_Distance_Factor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_Distance_Factor]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_Distance_Factor</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_Calibration_constant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_Calibration_constant]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_Calibration_constant</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_Calibration_eastbay_SF</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_Calibration_eastbay_SF]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_Calibration_eastbay_SF</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Work_Transit_Hesitance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Work_Transit_Hesitance]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Work_Transit_Hesitance</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NonWork_Transit_Hesitance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NonWork_Transit_Hesitance]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>NonWork_Transit_Hesitance</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BART_Transit_Hesitance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BART_Transit_Hesitance]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>BART_Transit_Hesitance</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alias</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Alias]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Alias</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Model Run Directory' datatype='string' name='[Calculation_1318428845109985284]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='replace(&#13;&#10;  replace([Path],&quot;across_runs/VehicleMilesTraveled_&quot;,&quot;&quot;),&#13;&#10;  &quot;.csv&quot;,&quot;&quot;)' />
      </column>
      <column caption='Resident Trip Table VMT per Capita' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_2629539297121230850]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' />
      </column>
      <column caption='Resident Trip Table VMT' datatype='real' name='[Calculation_2838675162978881536]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[vmt]*[freq]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='VehicleMilesTraveled' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Directory' datatype='string' name='[directory]' role='dimension' type='nominal' />
      <column caption='Number of Persons' datatype='integer' name='[freq]' role='measure' type='quantitative' />
      <column caption='Landuse Path' datatype='string' name='[landuse_path]' role='dimension' type='nominal' />
      <column caption='Model Machine' datatype='string' name='[model_machine]' role='dimension' type='nominal' />
      <column caption='Network' datatype='string' name='[network]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[ptype]' role='dimension' type='ordinal' />
      <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column caption='Urbansim Runid' datatype='string' name='[urbansim_runid]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[directory]' derivation='None' name='[none:directory:nk]' pivot='key' type='nominal' />
      <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:year:ok]' palette='green_gold_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>2035</bucket>
            </map>
            <map to='#146c36'>
              <bucket>2050</bucket>
            </map>
            <map to='#439350'>
              <bucket>2023</bucket>
            </map>
            <map to='#8eb858'>
              <bucket>2015</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>2005</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:directory:nk]' type='palette'>
            <map to='#308344'>
              <bucket>&quot;2023_TM161_IPA_35&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2035_TM161_EIR_Alt1_01&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2050_TM161_EIR_Alt1_01&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2035_TM152_FBP_Plus_24&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2035_TM160_DBP_Plan_08b&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2035_TM161_DBP_Plan_08b&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2035_TM161_FBP_Plan_16&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2050_TM152_FBP_PlusCrossing_24&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2050_TM160_DBP_Plan_08b&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2050_TM161_FBP_Plan_16&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2015_TM160_IPA_06&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2015_TM161_IPA_09&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2005_TM160_IPA_04&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2005_TM161_IPA_01&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2035_TM160_IPA_15&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2035_TM161_IPA_01&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2035_TM152_FBP_NoProject_24&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2035_TM161_FBP_NoProject_06&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2035_TM161_FBP_NoProject_16&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2050_TM152_FBP_NoProject_24&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2050_TM161_FBP_NoProject_16&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2050_TM161_FBP_NoProject_17&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:directory:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;2005_TM160_IPA_04&quot;</bucket>
            <bucket>&quot;2005_TM161_IPA_01&quot;</bucket>
            <bucket>&quot;2015_TM160_IPA_06&quot;</bucket>
            <bucket>&quot;2015_TM161_IPA_09&quot;</bucket>
            <bucket>&quot;2023_TM161_IPA_35&quot;</bucket>
            <bucket>&quot;2035_TM152_FBP_NoProject_24&quot;</bucket>
            <bucket>&quot;2035_TM152_FBP_Plus_24&quot;</bucket>
            <bucket>&quot;2035_TM160_DBP_Plan_08b&quot;</bucket>
            <bucket>&quot;2035_TM160_IPA_15&quot;</bucket>
            <bucket>&quot;2035_TM161_DBP_Plan_08b&quot;</bucket>
            <bucket>&quot;2035_TM161_FBP_NoProject_06&quot;</bucket>
            <bucket>&quot;2035_TM161_FBP_NoProject_16&quot;</bucket>
            <bucket>&quot;2035_TM161_FBP_Plan_16&quot;</bucket>
            <bucket>&quot;2035_TM161_EIR_Alt1_01&quot;</bucket>
            <bucket>&quot;2035_TM161_IPA_01&quot;</bucket>
            <bucket>&quot;2050_TM152_FBP_NoProject_24&quot;</bucket>
            <bucket>&quot;2050_TM152_FBP_PlusCrossing_24&quot;</bucket>
            <bucket>&quot;2050_TM160_DBP_Plan_08b&quot;</bucket>
            <bucket>&quot;2050_TM161_FBP_NoProject_16&quot;</bucket>
            <bucket>&quot;2050_TM161_FBP_NoProject_17&quot;</bucket>
            <bucket>&quot;2050_TM161_FBP_Plan_16&quot;</bucket>
            <bucket>&quot;2050_TM161_EIR_Alt1_01&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:run_set:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;RTP2021&quot;</bucket>
            <bucket>&quot;RTP2025_IP&quot;</bucket>
            <bucket>&quot;RTP2025&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='COUNTY' />
        <field-sort-custom-order field='county_name' />
        <field-sort-custom-order field='SD' />
        <field-sort-custom-order field='taz' />
        <field-sort-custom-order field='walk_subzone' />
        <field-sort-custom-order field='walk_subzone_label' />
        <field-sort-custom-order field='ptype' />
        <field-sort-custom-order field='ptype_label' />
        <field-sort-custom-order field='autoSuff' />
        <field-sort-custom-order field='autoSuff_label' />
        <field-sort-custom-order field='freq' />
        <field-sort-custom-order field='vmt_indiv' />
        <field-sort-custom-order field='vmt_joint' />
        <field-sort-custom-order field='vmt' />
        <field-sort-custom-order field='person_trips' />
        <field-sort-custom-order field='vehicle_trips' />
        <field-sort-custom-order field='Path' />
        <field-sort-custom-order field='Calculation_1318428845109985284' />
        <field-sort-custom-order field='project' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='directory' />
        <field-sort-custom-order field='run_set' />
        <field-sort-custom-order field='category' />
        <field-sort-custom-order field='Description' />
        <field-sort-custom-order field='urbansim_path' />
        <field-sort-custom-order field='urbansim_runid' />
        <field-sort-custom-order field='status' />
        <field-sort-custom-order field='network number' />
        <field-sort-custom-order field='Calculation_1957940005550874628' />
        <field-sort-custom-order field='Calculation_2629539297121230850' />
        <field-sort-custom-order field='Calculation_2838675162978881536' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='VehicleMilesTraveled' id='Migrated Data'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='replace(&#13;&#10;  replace([VehicleMilesTraveled_*.csv].[Path],&quot;across_runs_FinalBlueprint/VehicleMilesTraveled_&quot;,&quot;&quot;),&#13;&#10;  &quot;.csv&quot;,&quot;&quot;)' />
                    <expression op='[ModelRuns].[directory]' />
                  </expression>
                </clause>
                <relation all='true' connection='textscan.1er82fi0wj9m8v14f7n9s0tllnki' include-siblings='false' is-recursive='false' name='VehicleMilesTraveled_*.csv' path='' type='batch-union'>
                  <database-filter>
                    <expression op='='>
                      <expression op='VehicleMilesTraveled_*.csv' />
                    </expression>
                  </database-filter>
                  <table-filter />
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='COUNTY' />
                    <column datatype='string' name='county_name' />
                    <column datatype='integer' name='SD' />
                    <column datatype='integer' name='taz' />
                    <column datatype='integer' name='walk_subzone' />
                    <column datatype='string' name='walk_subzone_label' />
                    <column datatype='integer' name='ptype' />
                    <column datatype='string' name='ptype_label' />
                    <column datatype='integer' name='autoSuff' />
                    <column datatype='string' name='autoSuff_label' />
                    <column datatype='integer' name='freq' />
                    <column datatype='real' name='vmt_indiv' />
                    <column datatype='real' name='vmt_joint' />
                    <column datatype='real' name='vmt' />
                    <column datatype='integer' name='person_trips' />
                    <column datatype='real' name='vehicle_trips' />
                    <column datatype='string' name='Path' />
                  </columns>
                </relation>
                <relation connection='excel-direct.0e8khbd0rjxrm1129dnie08gdanf' name='ModelRuns' table='[ModelRuns$]' type='table'>
                  <columns gridOrigin='A1:Y256:no:A1:Y256:0' header='yes' outcome='2'>
                    <column datatype='integer' name='year' ordinal='0' />
                    <column datatype='string' name='directory' ordinal='1' />
                    <column datatype='string' name='run_set' ordinal='2' />
                    <column datatype='string' name='category' ordinal='3' />
                    <column datatype='string' name='sensitivityTest_set' ordinal='4' />
                    <column datatype='string' name='description' ordinal='5' />
                    <column datatype='string' name='landuse_path' ordinal='6' />
                    <column datatype='string' name='urbansim_runid' ordinal='7' />
                    <column datatype='string' name='status' ordinal='8' />
                    <column datatype='string' name='run_offmodel' ordinal='9' />
                    <column datatype='string' name='network' ordinal='10' />
                    <column datatype='string' name='model_machine' ordinal='11' />
                    <column datatype='string' name='Asana Link' ordinal='12' />
                    <column datatype='real' name='AOC_CentsPerMile' ordinal='13' />
                    <column datatype='string' name='Telecommute_constant_FT' ordinal='14' />
                    <column datatype='string' name='Telecommute_constant_PT' ordinal='15' />
                    <column datatype='string' name='WFH_FullTimeWorker_Factor' ordinal='16' />
                    <column datatype='string' name='WFH_PartTimeWorker_Factor' ordinal='17' />
                    <column datatype='string' name='WFH_Distance_Factor' ordinal='18' />
                    <column datatype='string' name='WFH_Calibration_constant' ordinal='19' />
                    <column datatype='string' name='WFH_Calibration_eastbay_SF' ordinal='20' />
                    <column datatype='string' name='Work_Transit_Hesitance' ordinal='21' />
                    <column datatype='string' name='NonWork_Transit_Hesitance' ordinal='22' />
                    <column datatype='string' name='BART_Transit_Hesitance' ordinal='23' />
                    <column datatype='string' name='Alias' ordinal='24' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='trnline' inline='true' name='federated.1s4t84l0axctkh198vk2z051usym' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='trnline' name='textscan.0588s1k1eoe96f108gjz91oajifq'>
            <connection class='textscan' directory='M:/Application/Model One/RTP2025/Blueprint/across_runs_FinalBlueprint' filename='trnline_2015_NTD.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='TableauAliases' name='excel-direct.0vsepv5036df9c12ippom1ycl2yw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='X:/travel-model-one-master/utilities/TableauAliases.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Scaling_for_2015_VRH' name='excel-direct.1bg336k06ae7p3101um961sbeyq9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='M:/Application/Model One/RTP2025/Blueprint/across_runs_FinalBlueprint/Scaling_for_2015_VRH.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='ModelRuns_RTP2025' name='excel-direct.158li2h1rzji8y11g7px8195eqku'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='X:/travel-model-one-master/utilities/RTP/config_RTP2025/ModelRuns_RTP2025.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='replace(&#13;&#10;  replace([trnline_*.csv+].[Path], &quot;across_runs_FinalBlueprint/trnline_&quot;, &quot;&quot;),&#13;&#10;  &quot;.csv&quot;, &quot;&quot;)' />
              <expression op='[ModelRuns].[directory]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Transit Mode].[Common.Agency.Name]' />
                <expression op='[VRH Scale Factors].[Common.Agency.Name]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[trnline_*.csv+].[mode]' />
                  <expression op='[Transit Mode].[Transit Mode]' />
                </expression>
              </clause>
              <relation all='true' connection='textscan.0588s1k1eoe96f108gjz91oajifq' include-siblings='false' is-recursive='false' name='trnline_*.csv+' path='' type='batch-union'>
                <database-filter>
                  <expression op='='>
                    <expression op='trnline_*.csv' />
                  </expression>
                </database-filter>
                <table-filter />
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='real' name='frequency' ordinal='4' />
                </columns>
              </relation>
              <relation connection='excel-direct.0vsepv5036df9c12ippom1ycl2yw' name='Transit Mode' table='[&apos;Transit Mode$&apos;]' type='table'>
                <columns gridOrigin='A1:E86:no:A1:E86:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Transit Mode' ordinal='0' />
                  <column datatype='string' name='Transit Mode Name' ordinal='1' />
                  <column datatype='string' name='Mode Category' ordinal='2' />
                  <column datatype='string' name='Common.Agency.Name' ordinal='3' />
                  <column datatype='string' name='NTD.mode' ordinal='4' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.1bg336k06ae7p3101um961sbeyq9' name='VRH Scale Factors' table='[&apos;VRH Scale Factors$&apos;]' type='table'>
              <columns gridOrigin='A1:B26:no:A1:B26:0' header='yes' lost='0' outcome='2' processed='24'>
                <column datatype='string' name='Common.Agency.Name' ordinal='0' />
                <column datatype='real' name='Scale Factor' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.158li2h1rzji8y11g7px8195eqku' name='ModelRuns' table='[ModelRuns$]' type='table'>
            <columns gridOrigin='A1:Y256:no:A1:Y256:0' header='yes' outcome='2'>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='string' name='directory' ordinal='1' />
              <column datatype='string' name='run_set' ordinal='2' />
              <column datatype='string' name='category' ordinal='3' />
              <column datatype='string' name='sensitivityTest_set' ordinal='4' />
              <column datatype='string' name='description' ordinal='5' />
              <column datatype='string' name='landuse_path' ordinal='6' />
              <column datatype='string' name='urbansim_runid' ordinal='7' />
              <column datatype='string' name='status' ordinal='8' />
              <column datatype='string' name='run_offmodel' ordinal='9' />
              <column datatype='string' name='network' ordinal='10' />
              <column datatype='string' name='model_machine' ordinal='11' />
              <column datatype='string' name='Asana Link' ordinal='12' />
              <column datatype='real' name='AOC_CentsPerMile' ordinal='13' />
              <column datatype='string' name='Telecommute_constant_FT' ordinal='14' />
              <column datatype='string' name='Telecommute_constant_PT' ordinal='15' />
              <column datatype='string' name='WFH_FullTimeWorker_Factor' ordinal='16' />
              <column datatype='string' name='WFH_PartTimeWorker_Factor' ordinal='17' />
              <column datatype='string' name='WFH_Distance_Factor' ordinal='18' />
              <column datatype='string' name='WFH_Calibration_constant' ordinal='19' />
              <column datatype='string' name='WFH_Calibration_eastbay_SF' ordinal='20' />
              <column datatype='string' name='Work_Transit_Hesitance' ordinal='21' />
              <column datatype='string' name='NonWork_Transit_Hesitance' ordinal='22' />
              <column datatype='string' name='BART_Transit_Hesitance' ordinal='23' />
              <column datatype='string' name='Alias' ordinal='24' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AOC_CentsPerMile]' value='[ModelRuns].[AOC_CentsPerMile]' />
          <map key='[Alias]' value='[ModelRuns].[Alias]' />
          <map key='[Asana Link]' value='[ModelRuns].[Asana Link]' />
          <map key='[BART_Transit_Hesitance]' value='[ModelRuns].[BART_Transit_Hesitance]' />
          <map key='[Common.Agency.Name (VRH Scale Factors)]' value='[VRH Scale Factors].[Common.Agency.Name]' />
          <map key='[Common.Agency.Name]' value='[Transit Mode].[Common.Agency.Name]' />
          <map key='[Mode Category]' value='[Transit Mode].[Mode Category]' />
          <map key='[NTD.mode]' value='[Transit Mode].[NTD.mode]' />
          <map key='[NonWork_Transit_Hesitance]' value='[ModelRuns].[NonWork_Transit_Hesitance]' />
          <map key='[Path]' value='[trnline_*.csv+].[Path]' />
          <map key='[Scale Factor]' value='[VRH Scale Factors].[Scale Factor]' />
          <map key='[Telecommute_constant_FT]' value='[ModelRuns].[Telecommute_constant_FT]' />
          <map key='[Telecommute_constant_PT]' value='[ModelRuns].[Telecommute_constant_PT]' />
          <map key='[Transit Mode Name]' value='[Transit Mode].[Transit Mode Name]' />
          <map key='[Transit Mode]' value='[Transit Mode].[Transit Mode]' />
          <map key='[WFH_Calibration_constant]' value='[ModelRuns].[WFH_Calibration_constant]' />
          <map key='[WFH_Calibration_eastbay_SF]' value='[ModelRuns].[WFH_Calibration_eastbay_SF]' />
          <map key='[WFH_Distance_Factor]' value='[ModelRuns].[WFH_Distance_Factor]' />
          <map key='[WFH_FullTimeWorker_Factor]' value='[ModelRuns].[WFH_FullTimeWorker_Factor]' />
          <map key='[WFH_PartTimeWorker_Factor]' value='[ModelRuns].[WFH_PartTimeWorker_Factor]' />
          <map key='[Work_Transit_Hesitance]' value='[ModelRuns].[Work_Transit_Hesitance]' />
          <map key='[category]' value='[ModelRuns].[category]' />
          <map key='[description]' value='[ModelRuns].[description]' />
          <map key='[directory]' value='[ModelRuns].[directory]' />
          <map key='[frequency]' value='[trnline_*.csv+].[frequency]' />
          <map key='[landuse_path]' value='[ModelRuns].[landuse_path]' />
          <map key='[line dist]' value='[trnline_*.csv+].[line dist]' />
          <map key='[line time]' value='[trnline_*.csv+].[line time]' />
          <map key='[mode]' value='[trnline_*.csv+].[mode]' />
          <map key='[model_machine]' value='[ModelRuns].[model_machine]' />
          <map key='[name]' value='[trnline_*.csv+].[name]' />
          <map key='[network]' value='[ModelRuns].[network]' />
          <map key='[owner]' value='[trnline_*.csv+].[owner]' />
          <map key='[passenger hours]' value='[trnline_*.csv+].[passenger hours]' />
          <map key='[passenger miles]' value='[trnline_*.csv+].[passenger miles]' />
          <map key='[path id]' value='[trnline_*.csv+].[path id]' />
          <map key='[run_offmodel]' value='[ModelRuns].[run_offmodel]' />
          <map key='[run_set]' value='[ModelRuns].[run_set]' />
          <map key='[sensitivityTest_set]' value='[ModelRuns].[sensitivityTest_set]' />
          <map key='[status]' value='[ModelRuns].[status]' />
          <map key='[total boardings]' value='[trnline_*.csv+].[total boardings]' />
          <map key='[urbansim_runid]' value='[ModelRuns].[urbansim_runid]' />
          <map key='[year]' value='[ModelRuns].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[trnline_*.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Transit Mode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E86:no:A1:E86:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[VRH Scale Factors]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B26:no:A1:B26:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y256:no:A1:Y256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[trnline_*.csv+]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[trnline_*.csv+]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[owner]</local-name>
            <parent-name>[trnline_*.csv+]</parent-name>
            <remote-alias>owner</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequency</remote-name>
            <remote-type>5</remote-type>
            <local-name>[frequency]</local-name>
            <parent-name>[trnline_*.csv+]</parent-name>
            <remote-alias>frequency</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line time]</local-name>
            <parent-name>[trnline_*.csv+]</parent-name>
            <remote-alias>line time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[line dist]</local-name>
            <parent-name>[trnline_*.csv+]</parent-name>
            <remote-alias>line dist</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total boardings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total boardings]</local-name>
            <parent-name>[trnline_*.csv+]</parent-name>
            <remote-alias>total boardings</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger miles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[passenger miles]</local-name>
            <parent-name>[trnline_*.csv+]</parent-name>
            <remote-alias>passenger miles</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger hours</remote-name>
            <remote-type>20</remote-type>
            <local-name>[passenger hours]</local-name>
            <parent-name>[trnline_*.csv+]</parent-name>
            <remote-alias>passenger hours</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[path id]</local-name>
            <parent-name>[trnline_*.csv+]</parent-name>
            <remote-alias>path id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Path]</local-name>
            <parent-name>[trnline_*.csv+]</parent-name>
            <remote-alias>Path</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit Mode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit Mode]</local-name>
            <parent-name>[Transit Mode]</parent-name>
            <remote-alias>Transit Mode</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit Mode Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Transit Mode Name]</local-name>
            <parent-name>[Transit Mode]</parent-name>
            <remote-alias>Transit Mode Name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mode Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Mode Category]</local-name>
            <parent-name>[Transit Mode]</parent-name>
            <remote-alias>Mode Category</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Common.Agency.Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Common.Agency.Name]</local-name>
            <parent-name>[Transit Mode]</parent-name>
            <remote-alias>Common.Agency.Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NTD.mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NTD.mode]</local-name>
            <parent-name>[Transit Mode]</parent-name>
            <remote-alias>NTD.mode</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Common.Agency.Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Common.Agency.Name (VRH Scale Factors)]</local-name>
            <parent-name>[VRH Scale Factors]</parent-name>
            <remote-alias>Common.Agency.Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scale Factor</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Scale Factor]</local-name>
            <parent-name>[VRH Scale Factors]</parent-name>
            <remote-alias>Scale Factor</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>directory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[directory]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>directory</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run_set</remote-name>
            <remote-type>130</remote-type>
            <local-name>[run_set]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>run_set</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sensitivityTest_set</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sensitivityTest_set]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>sensitivityTest_set</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landuse_path</remote-name>
            <remote-type>130</remote-type>
            <local-name>[landuse_path]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>landuse_path</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urbansim_runid</remote-name>
            <remote-type>130</remote-type>
            <local-name>[urbansim_runid]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>urbansim_runid</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run_offmodel</remote-name>
            <remote-type>130</remote-type>
            <local-name>[run_offmodel]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>run_offmodel</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>network</remote-name>
            <remote-type>130</remote-type>
            <local-name>[network]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>network</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model_machine</remote-name>
            <remote-type>130</remote-type>
            <local-name>[model_machine]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>model_machine</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Asana Link</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Asana Link]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Asana Link</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AOC_CentsPerMile</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AOC_CentsPerMile]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>AOC_CentsPerMile</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Telecommute_constant_FT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Telecommute_constant_FT]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Telecommute_constant_FT</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Telecommute_constant_PT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Telecommute_constant_PT]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Telecommute_constant_PT</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_FullTimeWorker_Factor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_FullTimeWorker_Factor]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_FullTimeWorker_Factor</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_PartTimeWorker_Factor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_PartTimeWorker_Factor]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_PartTimeWorker_Factor</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_Distance_Factor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_Distance_Factor]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_Distance_Factor</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_Calibration_constant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_Calibration_constant]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_Calibration_constant</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WFH_Calibration_eastbay_SF</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WFH_Calibration_eastbay_SF]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>WFH_Calibration_eastbay_SF</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Work_Transit_Hesitance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Work_Transit_Hesitance]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Work_Transit_Hesitance</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NonWork_Transit_Hesitance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NonWork_Transit_Hesitance]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>NonWork_Transit_Hesitance</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BART_Transit_Hesitance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BART_Transit_Hesitance]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>BART_Transit_Hesitance</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alias</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Alias]</local-name>
            <parent-name>[ModelRuns]</parent-name>
            <remote-alias>Alias</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1s4t84l0axctkh198vk2z051usym].[pcva:sum:Calculation_2503719977292685315:qk:1]&quot;' value='Scale Factor' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[AOC_CentsPerMile]' role='dimension' type='ordinal' />
      <column caption='Category' datatype='string' name='[Calculation_1340383890632048644]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IFNULL([category],&quot;NTD&quot;)' />
      </column>
      <column caption='Description' datatype='string' name='[Calculation_1340383890742616071]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IFNULL([description],[Calculation_1340383890632048644])' />
      </column>
      <column caption='Hours per Timeperiod' datatype='real' name='[Calculation_2503719977291898880]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Calculation_2503719977292058625]&#13;&#10;WHEN &quot;ea&quot; then 3.0&#13;&#10;WHEN &quot;am&quot; then 4.0&#13;&#10;WHEN &quot;md&quot; then 5.0&#13;&#10;WHEN &quot;pm&quot; then 4.0&#13;&#10;WHEN &quot;ev&quot; then 8.0&#13;&#10;WHEN &quot;24&quot; then 24.0&#13;&#10;else 0&#13;&#10;end' />
      </column>
      <column caption='Timeperiod' datatype='string' name='[Calculation_2503719977292058625]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='left([path id],2)' />
        <aliases>
          <alias key='&quot;24&quot;' value='24 Hours' />
          <alias key='&quot;am&quot;' value='AM Peak: 6 AM to 10 AM' />
          <alias key='&quot;ea&quot;' value='Early AM: 3 AM to 6 AM' />
          <alias key='&quot;ev&quot;' value='Evening: 7 PM to 3 AM' />
          <alias key='&quot;md&quot;' value='Midday: 10 AM to 3 PM' />
          <alias key='&quot;pm&quot;' value='PM Peak: 3 PM to 7 PM' />
        </aliases>
      </column>
      <column caption='Vehicle runs per period' datatype='real' name='[Calculation_2503719977292230658]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2503719977291898880]*60.0/[frequency]' />
      </column>
      <column caption='Vehicle revenue hours per timeperiod' datatype='real' name='[Calculation_2503719977292685315]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2503719977292230658]*[line time]/60.0' />
      </column>
      <column caption='acc_trn_egr' datatype='string' name='[Calculation_2503719977293463556]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='right([path id],11)' />
      </column>
      <column caption='Vehicle revenue hours per time period (NTD Scaled)' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_688487856388583426]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_1340383890632048644]==&quot;NTD&quot; then&#13;&#10;  [Calculation_2503719977292685315]*[Scale Factor]&#13;&#10;ELSE&#13;&#10;[Calculation_2503719977292685315]&#13;&#10;end' />
      </column>
      <column datatype='string' name='[Common.Agency.Name]' role='dimension' type='nominal' />
      <column caption='NTD VRH Scale Factor' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Scale Factor]' role='measure' type='quantitative' />
      <column datatype='string' name='[Transit Mode Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Transit Mode]' role='dimension' type='ordinal' />
      <column caption='trnline_*' datatype='table' name='[__tableau_internal_object_id__].[trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344]' role='measure' type='quantitative' />
      <column caption='ModelRun Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Description1' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Model Run Directory1' datatype='string' name='[directory]' role='dimension' type='nominal' />
      <column caption='Frequency' datatype='real' name='[frequency]' role='dimension' type='ordinal' />
      <column caption='Landuse Path' datatype='string' name='[landuse_path]' role='dimension' type='nominal' />
      <column caption='Line Dist' datatype='real' name='[line dist]' role='measure' type='quantitative' />
      <column caption='Line Time' datatype='real' name='[line time]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Mode' datatype='integer' name='[mode]' role='dimension' type='ordinal' />
      <column caption='Model Machine' datatype='string' name='[model_machine]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Network' datatype='string' name='[network]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Owner' datatype='integer' name='[owner]' role='dimension' type='ordinal' />
      <column caption='Passenger Hours' datatype='integer' name='[passenger hours]' role='measure' type='quantitative' />
      <column caption='Passenger Miles' datatype='integer' name='[passenger miles]' role='measure' type='quantitative' />
      <column caption='Path Id' datatype='string' name='[path id]' role='dimension' type='nominal' />
      <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column caption='Total Boardings' datatype='integer' name='[total boardings]' role='measure' type='quantitative' />
      <column caption='Urbansim Runid' datatype='string' name='[urbansim_runid]' role='dimension' type='nominal' />
      <column caption='ModelRun Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_2503719977292058625]' derivation='None' name='[none:Calculation_2503719977292058625:nk]' pivot='key' type='nominal' />
      <column-instance column='[Common.Agency.Name]' derivation='None' name='[none:Common.Agency.Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Transit Mode Name]' derivation='None' name='[none:Transit Mode Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2503719977292685315]' derivation='Sum' name='[pcva:sum:Calculation_2503719977292685315:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1s4t84l0axctkh198vk2z051usym].[Calculation_1318428845116801033]' ordering-type='Field' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <layout common-percentage='1' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Transit Mode Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;North Bay Shuttles (PPA Project)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AC Transit - BRT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AC Transit - Local&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American Canyon Transit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amtrak - Capitol Corridor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BART &amp; E-BART&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Golden Gate Transit - Local&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MUNI - Local&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Petaluma Transit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SamTrans - Express&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santa Clara VTA - Community bus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santa Rosa City Bus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SMART&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sonoma County Transit - Local&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tri-Delta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Union City Transit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vacaville City Coach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vallejo Transit - Express&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WestCAT - Express&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WHEELS - Local&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;County Connection (CCTA) - Local&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Emery Go Round&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tiburon Ferry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vallejo Baylink Ferry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VTA Shuttles&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Caltrain Shuttles&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;County Connection - Express&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Golden Gate Transit - Express San Francisco&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Santa Clara VTA - LRT&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;VINE - Express 2&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Regional Express (ReX)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benicia Breeze&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Golden Gate Ferry - Sausalito&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;West Berkeley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AC Transit - Transbay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fairfield And Suisun Transit - Local&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Leandro Links&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dumbarton Express&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Golden Gate Transit - Express Richmond&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Regional Hovercraft (PPA)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Bay Ferries&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway Shuttle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Caltrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MUNI Metro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Clara VTA - Local&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VINE - Express&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Fairfield And Suisun Transit - Express&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Palo Alto/Menlo Park Shuttles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AC Transit - Transbay (Local travel allowed)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amtrak - San Joaquin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MUNI Cable Cars&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland Airport Connector&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SamTrans - Local&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Clara VTA - Express&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vallejo Transit - Local&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VINE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WestCAT - Local&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wheels ACE Shuttles&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Golden Gate Ferry - Larkspur&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Stanford Shuttles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ACE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SMART - Temporary Express&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2503719977292058625:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;ev&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;pm&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;24&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;md&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;am&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;ea&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Common.Agency.Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Marin Transit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AC Transit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vacaville City Coach*&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;County Connection&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SamTrans&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Napa VINE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FAST&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tri Delta Transit&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ACE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VTA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SolTrans&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GGBHTD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Rosa City Bus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SFMTA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sonoma County Transit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Union City Transit*&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other Transit Agencies&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LAVTA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WestCAT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SMART&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Petaluma Transit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Caltrain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WETA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Calculation_2503719977292058625:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;24&quot;</bucket>
            <bucket>&quot;ev&quot;</bucket>
            <bucket>&quot;pm&quot;</bucket>
            <bucket>&quot;md&quot;</bucket>
            <bucket>&quot;am&quot;</bucket>
            <bucket>&quot;ea&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='name' />
        <field-sort-custom-order field='mode' />
        <field-sort-custom-order field='owner' />
        <field-sort-custom-order field='frequency' />
        <field-sort-custom-order field='line time' />
        <field-sort-custom-order field='line dist' />
        <field-sort-custom-order field='total boardings' />
        <field-sort-custom-order field='passenger miles' />
        <field-sort-custom-order field='passenger hours' />
        <field-sort-custom-order field='path id' />
        <field-sort-custom-order field='Path' />
        <field-sort-custom-order field='project' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Calculation_1340383890741764102' />
        <field-sort-custom-order field='directory' />
        <field-sort-custom-order field='run_set' />
        <field-sort-custom-order field='category' />
        <field-sort-custom-order field='Calculation_1340383890632048644' />
        <field-sort-custom-order field='Description' />
        <field-sort-custom-order field='urbansim_path' />
        <field-sort-custom-order field='urbansim_runid' />
        <field-sort-custom-order field='status' />
        <field-sort-custom-order field='network number' />
        <field-sort-custom-order field='Transit Mode' />
        <field-sort-custom-order field='Transit Mode Name' />
        <field-sort-custom-order field='Mode Category' />
        <field-sort-custom-order field='Common.Agency.Name' />
        <field-sort-custom-order field='Common.Agency.Name (VRH Scale Factors)' />
        <field-sort-custom-order field='Scale Factor' />
        <field-sort-custom-order field='Calculation_1318428845116801033' />
        <field-sort-custom-order field='Calculation_2503719977291898880' />
        <field-sort-custom-order field='Calculation_2503719977292058625' />
        <field-sort-custom-order field='Calculation_2503719977292230658' />
        <field-sort-custom-order field='Calculation_2503719977292685315' />
        <field-sort-custom-order field='Calculation_688487856388583426' />
        <field-sort-custom-order field='Calculation_2503719977293463556' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='trnline_*' id='trnline_2015_TM152_TRR_00.csv_639A36E26A0D4FE8B644304443B17344'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='replace(&#13;&#10;  replace([trnline_*.csv+].[Path], &quot;across_runs_FinalBlueprint/trnline_&quot;, &quot;&quot;),&#13;&#10;  &quot;.csv&quot;, &quot;&quot;)' />
                    <expression op='[ModelRuns].[directory]' />
                  </expression>
                </clause>
                <relation join='left' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[Transit Mode].[Common.Agency.Name]' />
                      <expression op='[VRH Scale Factors].[Common.Agency.Name]' />
                    </expression>
                  </clause>
                  <relation join='left' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[trnline_*.csv+].[mode]' />
                        <expression op='[Transit Mode].[Transit Mode]' />
                      </expression>
                    </clause>
                    <relation all='true' connection='textscan.0588s1k1eoe96f108gjz91oajifq' include-siblings='false' is-recursive='false' name='trnline_*.csv+' path='' type='batch-union'>
                      <database-filter>
                        <expression op='='>
                          <expression op='trnline_*.csv' />
                        </expression>
                      </database-filter>
                      <table-filter />
                      <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                        <column datatype='real' name='frequency' ordinal='4' />
                      </columns>
                    </relation>
                    <relation connection='excel-direct.0vsepv5036df9c12ippom1ycl2yw' name='Transit Mode' table='[&apos;Transit Mode$&apos;]' type='table'>
                      <columns gridOrigin='A1:E86:no:A1:E86:0' header='yes' outcome='6'>
                        <column datatype='integer' name='Transit Mode' ordinal='0' />
                        <column datatype='string' name='Transit Mode Name' ordinal='1' />
                        <column datatype='string' name='Mode Category' ordinal='2' />
                        <column datatype='string' name='Common.Agency.Name' ordinal='3' />
                        <column datatype='string' name='NTD.mode' ordinal='4' />
                      </columns>
                    </relation>
                  </relation>
                  <relation connection='excel-direct.1bg336k06ae7p3101um961sbeyq9' name='VRH Scale Factors' table='[&apos;VRH Scale Factors$&apos;]' type='table'>
                    <columns gridOrigin='A1:B26:no:A1:B26:0' header='yes' lost='0' outcome='2' processed='24'>
                      <column datatype='string' name='Common.Agency.Name' ordinal='0' />
                      <column datatype='real' name='Scale Factor' ordinal='1' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.158li2h1rzji8y11g7px8195eqku' name='ModelRuns' table='[ModelRuns$]' type='table'>
                  <columns gridOrigin='A1:Y256:no:A1:Y256:0' header='yes' outcome='2'>
                    <column datatype='integer' name='year' ordinal='0' />
                    <column datatype='string' name='directory' ordinal='1' />
                    <column datatype='string' name='run_set' ordinal='2' />
                    <column datatype='string' name='category' ordinal='3' />
                    <column datatype='string' name='sensitivityTest_set' ordinal='4' />
                    <column datatype='string' name='description' ordinal='5' />
                    <column datatype='string' name='landuse_path' ordinal='6' />
                    <column datatype='string' name='urbansim_runid' ordinal='7' />
                    <column datatype='string' name='status' ordinal='8' />
                    <column datatype='string' name='run_offmodel' ordinal='9' />
                    <column datatype='string' name='network' ordinal='10' />
                    <column datatype='string' name='model_machine' ordinal='11' />
                    <column datatype='string' name='Asana Link' ordinal='12' />
                    <column datatype='real' name='AOC_CentsPerMile' ordinal='13' />
                    <column datatype='string' name='Telecommute_constant_FT' ordinal='14' />
                    <column datatype='string' name='Telecommute_constant_PT' ordinal='15' />
                    <column datatype='string' name='WFH_FullTimeWorker_Factor' ordinal='16' />
                    <column datatype='string' name='WFH_PartTimeWorker_Factor' ordinal='17' />
                    <column datatype='string' name='WFH_Distance_Factor' ordinal='18' />
                    <column datatype='string' name='WFH_Calibration_constant' ordinal='19' />
                    <column datatype='string' name='WFH_Calibration_eastbay_SF' ordinal='20' />
                    <column datatype='string' name='Work_Transit_Hesitance' ordinal='21' />
                    <column datatype='string' name='NonWork_Transit_Hesitance' ordinal='22' />
                    <column datatype='string' name='BART_Transit_Hesitance' ordinal='23' />
                    <column datatype='string' name='Alias' ordinal='24' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0h6syh50y1w4st19px68x1cnsq1v'>
      <datasources>
        <datasource caption='topsheet' name='federated.0h6syh50y1w4st19px68x1cnsq1v' />
      </datasources>
      <datasource-dependencies datasource='federated.0h6syh50y1w4st19px68x1cnsq1v'>
        <column caption='Directory' datatype='string' name='[directory (ModelRuns)]' role='dimension' type='nominal' />
        <column-instance column='[directory (ModelRuns)]' derivation='None' name='[none:directory (ModelRuns):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='%null%' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2005_TM152_IPA_03&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2005_TM160_IPA_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2005_TM161_IPA_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM152_IPA_17&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM152_IPA_19&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM160_IPA_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM160_IPA_02&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM160_IPA_02_calib12&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM160_IPA_03&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM160_IPA_03_AOCplus10pct&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM160_IPA_04&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM160_IPA_05&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM161_IPA_02&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM161_IPA_03&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM161_IPA_04&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM161_IPA_05&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM161_IPA_06&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM161_IPA_07&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM161_IPA_09&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_00&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_02&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_03&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_04&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_05&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_06&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_07&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_08&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_09&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_10&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_11&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_12&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_13&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_14&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_15&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_16&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_17&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_18&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM152_IPA_19&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_17&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_18&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_19&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_20&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_21&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_22&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_23&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_24&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_25&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_26&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_27&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_28&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_29&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_30&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_31&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_32&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_33&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_34&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_35&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_36&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_37&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_38&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_39&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_40&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_41&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_42&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_43&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_44&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_45&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_46_AOC1621plus10pct&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_47_AOC1621plus20pct&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_48_AOC1621minus10pct&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_49_AOC1621minus20pct&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_50_SetMinVtollToZero&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_51&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_52&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_53&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_54&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM160_IPA_56&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_11&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_12&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_13&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_14&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_14_2015tazdata&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_15&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_16&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_17&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_23&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_24&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_25&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_30&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_35&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_50&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2025_TM152_FBP_Plus_22&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM152_FBP_Plus_24&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_DBP_NoProject_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_DBP_Plan_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_02&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_03&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_04&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_05&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_06&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_06_EN7test&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_07&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_08&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_09&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_09_minusModePref&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_09_PBA50aoc&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_09_PBA50ixex&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_09_PBA50landuse&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_10&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_10_plusEN7&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_11&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_11_network2023&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_11_PBA50wfh&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_12&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_13&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_14&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_15&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_16&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM160_IPA_17&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_02&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt2_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_NoProject_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_NoProject_04&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_NoProject_07&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_NoProject_15&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_NoProject_16&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_04&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_05&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_06&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_07&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_09&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_10&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_16&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_IPA_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM152_FBP_PlusCrossing_24&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM160_DBP_NoProject_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM160_DBP_Plan_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_02&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt2_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_02&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_15&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_16&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_17&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_Plan_01&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_Plan_02&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_Plan_04&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_Plan_05&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_Plan_06&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_Plan_13&quot;' />
          <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_Plan_16&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_5FDBC46261704B8297D7AE4AB324B304]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Model Boardings rel to 2015' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Common.Agency.Name' />
        <param name='target' value='Model Boardings rel to 2015' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Trip Distance'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance' name='federated.1eeyfid137qi091h9q2kb1olbl2h' />
            <datasource caption='topsheet' name='federated.0h6syh50y1w4st19px68x1cnsq1v' />
            <datasource caption='VehicleMilesTraveled' name='federated.10ey18i0433zc21cseiur1x6w735' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6syh50y1w4st19px68x1cnsq1v'>
            <column caption='Directory' datatype='string' name='[directory (ModelRuns)]' role='dimension' type='nominal' />
            <column-instance column='[directory (ModelRuns)]' derivation='None' name='[none:directory (ModelRuns):nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10ey18i0433zc21cseiur1x6w735'>
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1eeyfid137qi091h9q2kb1olbl2h'>
            <column caption='Average Trip Distance' datatype='real' name='[Calculation_2629539297145319442]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' />
            </column>
            <column datatype='string' name='[Trip Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[trip_mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Bicycle&quot;'>
                  <value>8</value>
                </bin>
                <bin default-name='false' value='&quot;Drive Alone&quot;'>
                  <value>1</value>
                  <value>2</value>
                </bin>
                <bin default-name='false' value='&quot;Drive to Transit&quot;'>
                  <value>14</value>
                  <value>15</value>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                </bin>
                <bin default-name='false' value='&quot;Shared Ride 2&quot;'>
                  <value>3</value>
                  <value>4</value>
                </bin>
                <bin default-name='false' value='&quot;Shared ride 3+&quot;'>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Taxi/TNC&quot;'>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                </bin>
                <bin default-name='false' value='&quot;Walk&quot;'>
                  <value>7</value>
                </bin>
                <bin default-name='false' value='&quot;Walk to Transit&quot;'>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                </bin>
              </calculation>
            </column>
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Directory' datatype='string' name='[directory]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column caption='Number of Trips' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[directory]' derivation='None' name='[none:directory:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column datatype='string' name='[tour_purpose (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[tour_purpose]' new-bin='true'>
                <bin default-name='false' value='&quot;atwork&quot;'>
                  <value>&quot;atwork_business&quot;</value>
                  <value>&quot;atwork_eat&quot;</value>
                  <value>&quot;atwork_maint&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;discretionary&quot;'>
                  <value>&quot;eatout&quot;</value>
                  <value>&quot;othdiscr&quot;</value>
                  <value>&quot;social&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;maintenance&quot;'>
                  <value>&quot;escort_kids&quot;</value>
                  <value>&quot;escort_no kids&quot;</value>
                  <value>&quot;othmaint&quot;</value>
                  <value>&quot;shopping&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;school&quot;'>
                  <value>&quot;school_grade&quot;</value>
                  <value>&quot;school_high&quot;</value>
                  <value>&quot;university&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;work&quot;'>
                  <value>&quot;work_high&quot;</value>
                  <value>&quot;work_low&quot;</value>
                  <value>&quot;work_med&quot;</value>
                  <value>&quot;work_very high&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[tour_purpose]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Trip Mode' datatype='integer' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Drive alone free' />
                <alias key='2' value='Drive alone toll' />
                <alias key='3' value='Shared ride 2 free' />
                <alias key='4' value='Shared ride 2  toll' />
                <alias key='5' value='Shared ride 3+ free' />
                <alias key='6' value='Shared ride 3+ toll' />
                <alias key='7' value='Walk' />
                <alias key='8' value='Bicycle' />
                <alias key='9' value='Walk to local bus' />
                <alias key='10' value='Walk to light rail or ferry' />
                <alias key='11' value='Walk to express bus' />
                <alias key='12' value='Walk to heavy rail' />
                <alias key='13' value='Walk to commuter rail' />
                <alias key='14' value='Drive to local bus' />
                <alias key='15' value='Drive to light rail or ferry' />
                <alias key='16' value='Drive to express bus' />
                <alias key='17' value='Drive to heavy rail' />
                <alias key='18' value='Drive to commuter rail' />
                <alias key='19' value='Taxi' />
                <alias key='20' value='TNC Single party' />
                <alias key='21' value='TNC Shared' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2629539297145319442]' derivation='User' name='[usr:Calculation_2629539297145319442:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2005_TM161_IPA_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM161_IPA_09&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_35&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM152_FBP_NoProject_24&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM152_FBP_PlusCrossing_24&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_17&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_Plan_16&quot;' />
            </groupfilter>
            <target field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:status:nk]' member='&quot;current&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:status:nk]' />
          </filter>
          <filter class='categorical' column='[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_set:nk]' member='%null%' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025&quot;' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025_IP&quot;' />
            </groupfilter>
            <target field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:run_set:nk]' />
          </filter>
          <manual-sort column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2015_TM152_TRR_00&quot;</bucket>
              <bucket>&quot;2020_TM152_TRR_07&quot;</bucket>
              <bucket>&quot;2028_TM152_TRR_UNF_02&quot;</bucket>
              <bucket>&quot;2028_TM152_TRR_FAV_02&quot;</bucket>
              <bucket>&quot;2005_TM152_IPA_03&quot;</bucket>
              <bucket>&quot;2015_TM160_IPA_03&quot;</bucket>
              <bucket>&quot;2015_TM160_IPA_03_AOCplus10pct&quot;</bucket>
              <bucket>&quot;2023_TM160_IPA_42&quot;</bucket>
              <bucket>&quot;2035_TM152_FBP_Plus_24&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_08&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_minusModePref&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_PBA50aoc&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_PBA50landuse&quot;</bucket>
              <bucket>&quot;2005_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2015_TM161_IPA_09&quot;</bucket>
              <bucket>&quot;2023_TM161_IPA_35&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2035_TM161_EIR_Alt1_01&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_17&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2050_TM161_EIR_Alt1_01&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[tour_purpose (group)]'>
            <groupfilter function='member' level='[tour_purpose (group)]' member='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]</column>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]</column>
            <column>[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]</column>
            <column>[federated.1eeyfid137qi091h9q2kb1olbl2h].[tour_purpose (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='wrap' value='auto' />
            <format attr='width' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]' value='70' />
            <format attr='height' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:description:nk]' value='24' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' value='172' />
            <format attr='width' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:year:ok]' value='52' />
            <format attr='width' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:description:nk]' value='228' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' value='auto' />
            <format attr='font-size' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[usr:Calculation_2629539297145319442:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1eeyfid137qi091h9q2kb1olbl2h].[none:year:ok] / ([federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk] / [federated.1eeyfid137qi091h9q2kb1olbl2h].[none:description:nk]))</rows>
        <cols>[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]</cols>
      </table>
      <simple-id uuid='{8592A160-48CF-4D2E-9AE2-CD888547F27D}' />
    </worksheet>
    <worksheet name='ModeShare Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance' name='federated.1eeyfid137qi091h9q2kb1olbl2h' />
            <datasource caption='topsheet' name='federated.0h6syh50y1w4st19px68x1cnsq1v' />
            <datasource caption='VehicleMilesTraveled' name='federated.10ey18i0433zc21cseiur1x6w735' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6syh50y1w4st19px68x1cnsq1v'>
            <column caption='Directory' datatype='string' name='[directory (ModelRuns)]' role='dimension' type='nominal' />
            <column-instance column='[directory (ModelRuns)]' derivation='None' name='[none:directory (ModelRuns):nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10ey18i0433zc21cseiur1x6w735'>
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1eeyfid137qi091h9q2kb1olbl2h'>
            <column datatype='string' name='[Trip Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[trip_mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Bicycle&quot;'>
                  <value>8</value>
                </bin>
                <bin default-name='false' value='&quot;Drive Alone&quot;'>
                  <value>1</value>
                  <value>2</value>
                </bin>
                <bin default-name='false' value='&quot;Drive to Transit&quot;'>
                  <value>14</value>
                  <value>15</value>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                </bin>
                <bin default-name='false' value='&quot;Shared Ride 2&quot;'>
                  <value>3</value>
                  <value>4</value>
                </bin>
                <bin default-name='false' value='&quot;Shared ride 3+&quot;'>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Taxi/TNC&quot;'>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                </bin>
                <bin default-name='false' value='&quot;Walk&quot;'>
                  <value>7</value>
                </bin>
                <bin default-name='false' value='&quot;Walk to Transit&quot;'>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                </bin>
              </calculation>
            </column>
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Directory' datatype='string' name='[directory]' role='dimension' type='nominal' />
            <column caption='Number of Trips' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[directory]' derivation='None' name='[none:directory:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Trip Mode' datatype='integer' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Drive alone free' />
                <alias key='2' value='Drive alone toll' />
                <alias key='3' value='Shared ride 2 free' />
                <alias key='4' value='Shared ride 2  toll' />
                <alias key='5' value='Shared ride 3+ free' />
                <alias key='6' value='Shared ride 3+ toll' />
                <alias key='7' value='Walk' />
                <alias key='8' value='Bicycle' />
                <alias key='9' value='Walk to local bus' />
                <alias key='10' value='Walk to light rail or ferry' />
                <alias key='11' value='Walk to express bus' />
                <alias key='12' value='Walk to heavy rail' />
                <alias key='13' value='Walk to commuter rail' />
                <alias key='14' value='Drive to local bus' />
                <alias key='15' value='Drive to light rail or ferry' />
                <alias key='16' value='Drive to express bus' />
                <alias key='17' value='Drive to heavy rail' />
                <alias key='18' value='Drive to commuter rail' />
                <alias key='19' value='Taxi' />
                <alias key='20' value='TNC Single party' />
                <alias key='21' value='TNC Shared' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2005_TM161_IPA_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM161_IPA_09&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_35&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM152_FBP_NoProject_24&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM152_FBP_PlusCrossing_24&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_17&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_Plan_16&quot;' />
            </groupfilter>
            <target field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:status:nk]' member='&quot;current&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:status:nk]' />
          </filter>
          <filter class='categorical' column='[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_set:nk]' member='%null%' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025&quot;' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025_IP&quot;' />
            </groupfilter>
            <target field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:run_set:nk]' />
          </filter>
          <manual-sort column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2015_TM152_TRR_00&quot;</bucket>
              <bucket>&quot;2020_TM152_TRR_07&quot;</bucket>
              <bucket>&quot;2028_TM152_TRR_UNF_02&quot;</bucket>
              <bucket>&quot;2028_TM152_TRR_FAV_02&quot;</bucket>
              <bucket>&quot;2005_TM152_IPA_03&quot;</bucket>
              <bucket>&quot;2015_TM160_IPA_03&quot;</bucket>
              <bucket>&quot;2015_TM160_IPA_03_AOCplus10pct&quot;</bucket>
              <bucket>&quot;2023_TM160_IPA_42&quot;</bucket>
              <bucket>&quot;2035_TM152_FBP_Plus_24&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_08&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_minusModePref&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_PBA50aoc&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_PBA50landuse&quot;</bucket>
              <bucket>&quot;2005_TM160_IPA_04&quot;</bucket>
              <bucket>&quot;2005_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2015_TM161_IPA_09&quot;</bucket>
              <bucket>&quot;2023_TM161_IPA_35&quot;</bucket>
              <bucket>&quot;2035_TM160_DBP_Plan_08b&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_15&quot;</bucket>
              <bucket>&quot;2035_TM161_DBP_Plan_08b&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_NoProject_06&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2035_TM161_EIR_Alt1_01&quot;</bucket>
              <bucket>&quot;2035_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2050_TM160_DBP_Plan_08b&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_17&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2050_TM161_EIR_Alt1_01&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:run_set:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;RTP2025_IP&quot;</bucket>
              <bucket>&quot;RTP2025&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]</column>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]</column>
            <column>[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:3]' value='p0.0%' />
            <format attr='height' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:description:nk]' value='52' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:year:ok]' value='48' />
            <format attr='width' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:run_set:nk]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:3]' value='p0%' />
            <format attr='wrap' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' value='on' />
            <format attr='font-size' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' value='8' />
            <format attr='text-format' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[sum:freq:qk]' value='n#,##0,.0K;-#,##0,.0K' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]' />
              <lod column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:3]' />
              <text column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:3]' />
              <text column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1eeyfid137qi091h9q2kb1olbl2h].[none:year:ok] / ([federated.1eeyfid137qi091h9q2kb1olbl2h].[none:run_set:nk] / ([federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk] / [federated.1eeyfid137qi091h9q2kb1olbl2h].[none:description:nk])))</rows>
        <cols>[federated.1eeyfid137qi091h9q2kb1olbl2h].[sum:freq:qk]</cols>
      </table>
      <simple-id uuid='{E64BE54E-E17F-46A3-A1C4-8415F422DEFE}' />
    </worksheet>
    <worksheet name='ModeShare Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance' name='federated.1eeyfid137qi091h9q2kb1olbl2h' />
            <datasource caption='topsheet' name='federated.0h6syh50y1w4st19px68x1cnsq1v' />
            <datasource caption='VehicleMilesTraveled' name='federated.10ey18i0433zc21cseiur1x6w735' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6syh50y1w4st19px68x1cnsq1v'>
            <column caption='Directory' datatype='string' name='[directory (ModelRuns)]' role='dimension' type='nominal' />
            <column-instance column='[directory (ModelRuns)]' derivation='None' name='[none:directory (ModelRuns):nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10ey18i0433zc21cseiur1x6w735'>
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1eeyfid137qi091h9q2kb1olbl2h'>
            <column datatype='string' name='[Trip Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[trip_mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Bicycle&quot;'>
                  <value>8</value>
                </bin>
                <bin default-name='false' value='&quot;Drive Alone&quot;'>
                  <value>1</value>
                  <value>2</value>
                </bin>
                <bin default-name='false' value='&quot;Drive to Transit&quot;'>
                  <value>14</value>
                  <value>15</value>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                </bin>
                <bin default-name='false' value='&quot;Shared Ride 2&quot;'>
                  <value>3</value>
                  <value>4</value>
                </bin>
                <bin default-name='false' value='&quot;Shared ride 3+&quot;'>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Taxi/TNC&quot;'>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                </bin>
                <bin default-name='false' value='&quot;Walk&quot;'>
                  <value>7</value>
                </bin>
                <bin default-name='false' value='&quot;Walk to Transit&quot;'>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                </bin>
              </calculation>
            </column>
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Directory' datatype='string' name='[directory]' role='dimension' type='nominal' />
            <column caption='Number of Trips' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[directory]' derivation='None' name='[none:directory:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Trip Mode' datatype='integer' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Drive alone free' />
                <alias key='2' value='Drive alone toll' />
                <alias key='3' value='Shared ride 2 free' />
                <alias key='4' value='Shared ride 2  toll' />
                <alias key='5' value='Shared ride 3+ free' />
                <alias key='6' value='Shared ride 3+ toll' />
                <alias key='7' value='Walk' />
                <alias key='8' value='Bicycle' />
                <alias key='9' value='Walk to local bus' />
                <alias key='10' value='Walk to light rail or ferry' />
                <alias key='11' value='Walk to express bus' />
                <alias key='12' value='Walk to heavy rail' />
                <alias key='13' value='Walk to commuter rail' />
                <alias key='14' value='Drive to local bus' />
                <alias key='15' value='Drive to light rail or ferry' />
                <alias key='16' value='Drive to express bus' />
                <alias key='17' value='Drive to heavy rail' />
                <alias key='18' value='Drive to commuter rail' />
                <alias key='19' value='Taxi' />
                <alias key='20' value='TNC Single party' />
                <alias key='21' value='TNC Shared' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2005_TM161_IPA_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM161_IPA_09&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_35&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM152_FBP_NoProject_24&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM152_FBP_PlusCrossing_24&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_17&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_Plan_16&quot;' />
            </groupfilter>
            <target field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:status:nk]' member='&quot;current&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:status:nk]' />
          </filter>
          <filter class='categorical' column='[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_set:nk]' member='%null%' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025&quot;' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025_IP&quot;' />
            </groupfilter>
            <target field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:run_set:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1eeyfid137qi091h9q2kb1olbl2h].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1eeyfid137qi091h9q2kb1olbl2h].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:3]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2015_TM152_TRR_00&quot;</bucket>
              <bucket>&quot;2020_TM152_TRR_07&quot;</bucket>
              <bucket>&quot;2028_TM152_TRR_UNF_02&quot;</bucket>
              <bucket>&quot;2028_TM152_TRR_FAV_02&quot;</bucket>
              <bucket>&quot;2005_TM152_IPA_03&quot;</bucket>
              <bucket>&quot;2015_TM160_IPA_03&quot;</bucket>
              <bucket>&quot;2015_TM160_IPA_03_AOCplus10pct&quot;</bucket>
              <bucket>&quot;2023_TM160_IPA_42&quot;</bucket>
              <bucket>&quot;2035_TM152_FBP_Plus_24&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_08&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_minusModePref&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_PBA50aoc&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_PBA50landuse&quot;</bucket>
              <bucket>&quot;2005_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2015_TM161_IPA_09&quot;</bucket>
              <bucket>&quot;2023_TM161_IPA_35&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2035_TM161_EIR_Alt1_01&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_17&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2050_TM161_EIR_Alt1_01&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:run_set:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;RTP2025_IP&quot;</bucket>
              <bucket>&quot;RTP2025&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1eeyfid137qi091h9q2kb1olbl2h].[:Measure Names]</column>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]</column>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]</column>
            <column>[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:description:nk]' value='23' />
            <format attr='text-format' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:3]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:year:ok]' value='48' />
            <format attr='width' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:description:nk]' value='148' />
            <format attr='width' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' value='208' />
            <format attr='height' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:3]' value='p0%' />
            <format attr='wrap' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' value='on' />
            <format attr='font-size' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' value='8' />
            <format attr='text-orientation' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:run_set:nk]' value='-90' />
            <format attr='vertical-align' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]' value='bottom' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1eeyfid137qi091h9q2kb1olbl2h].[:Measure Names] / ([federated.1eeyfid137qi091h9q2kb1olbl2h].[none:run_set:nk] / ([federated.1eeyfid137qi091h9q2kb1olbl2h].[none:year:ok] / ([federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk] / [federated.1eeyfid137qi091h9q2kb1olbl2h].[none:description:nk]))))</rows>
        <cols total='true'>[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]</cols>
      </table>
      <simple-id uuid='{89074336-0C46-4673-8181-FB8E866C8017}' />
    </worksheet>
    <worksheet name='Model Boardings rel to 2015'>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline' name='federated.1s4t84l0axctkh198vk2z051usym' />
            <datasource caption='topsheet' name='federated.0h6syh50y1w4st19px68x1cnsq1v' />
            <datasource caption='VehicleMilesTraveled' name='federated.10ey18i0433zc21cseiur1x6w735' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6syh50y1w4st19px68x1cnsq1v'>
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10ey18i0433zc21cseiur1x6w735'>
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1s4t84l0axctkh198vk2z051usym'>
            <column datatype='string' name='[Common.Agency.Name]' role='dimension' type='nominal' />
            <column-instance column='[description]' derivation='Attribute' name='[attr:description:nk]' pivot='key' type='nominal' />
            <column caption='Description1' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Model Run Directory1' datatype='string' name='[directory]' role='dimension' type='nominal' />
            <column-instance column='[Common.Agency.Name]' derivation='None' name='[none:Common.Agency.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[directory]' derivation='None' name='[none:directory:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[pcdf:sum:total boardings:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.1s4t84l0axctkh198vk2z051usym].[directory]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Total Boardings' datatype='integer' name='[total boardings]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:status:nk]' member='&quot;current&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.1s4t84l0axctkh198vk2z051usym].[none:status:nk]' />
          </filter>
          <filter class='categorical' column='[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_set:nk]' member='%null%' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025&quot;' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025_IP&quot;' />
            </groupfilter>
            <target field='[federated.1s4t84l0axctkh198vk2z051usym].[none:run_set:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Common.Agency.Name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Common.Agency.Name:nk]' member='&quot;ACE&quot;' />
                <groupfilter function='member' level='[none:Common.Agency.Name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2015_TM161_IPA_07&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2023_TM160_IPA_55&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2023_TM161_IPA_18&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2023_TM161_IPA_19&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2023_TM161_IPA_20&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2023_TM161_IPA_21&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]</column>
            <column>[federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk]</column>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]</column>
            <column>[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1s4t84l0axctkh198vk2z051usym].[pcdf:sum:total boardings:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]' />
              <tooltip column='[federated.1s4t84l0axctkh198vk2z051usym].[attr:description:nk]' />
              <lod column='[federated.1s4t84l0axctkh198vk2z051usym].[sum:total boardings:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk] / ([federated.1s4t84l0axctkh198vk2z051usym].[none:run_set:nk] / [federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk]))</rows>
        <cols>[federated.1s4t84l0axctkh198vk2z051usym].[pcdf:sum:total boardings:qk]</cols>
      </table>
      <simple-id uuid='{2874EC5D-E1B6-4234-92C8-D21E60023F92}' />
    </worksheet>
    <worksheet name='TazData vs PopSyn'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='8'>Notes: </run>
            <run>Æ&#10;&#10;</run>
            <run bold='true' fontsize='8' underline='true'>Tazdata.Tothh</run>
            <run fontsize='8'>Æ </run>
            <run fontsize='8' italic='true'>does not</run>
            <run fontsize='8'> include 1-person GQ households</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='8' underline='true'>Popsyn.Tothh</run>
            <run fontsize='8'>Æ </run>
            <run fontsize='8' italic='true'>did include</run>
            <run fontsize='8'> 1-person GQ households, but was modified  (</run>
            <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/travel-model-one/commit/346829917f81447c7ebee9a4294d0f6b57102ec0&amp;quot;'>https://github.com/BayAreaMetro/travel-model-one/commit/346829917f81447c7ebee9a4294d0f6b57102ec0</run>
            <run fontsize='8'>) on Jan 27, 2025 to filter GQ.</run>
            <run>Æ&#10;&#10;</run>
            <run bold='true' fontsize='8' underline='true'>Popsyn.Empres</run>
            <run fontsize='8'> was modified (</run>
            <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/travel-model-one/commit/e609473e9581eda9c6e5282516f83c4703273693&amp;quot;'>https://github.com/BayAreaMetro/travel-model-one/commit/e609473e9581eda9c6e5282516f83c4703273693</run>
            <run fontsize='8'>) on Dec 16, 2024 to expand empres to include  part-time workers; previously, it only included full-time workers.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='topsheet' name='federated.0h6syh50y1w4st19px68x1cnsq1v' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6syh50y1w4st19px68x1cnsq1v'>
            <column caption='Totpop Diff' datatype='integer' name='[Calculation_1368531389994086400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[popsyn.totpop] - [tazdata.totpop]' />
            </column>
            <column caption='Totpop Pct Diff' datatype='real' default-format='p0.0%' name='[Calculation_1368531389994242049]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1368531389994086400]/[tazdata.totpop]' />
            </column>
            <column caption='Popsyn.Empres / Tazdata.Empres' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1456914505388314624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[popsyn.empres] / [tazdata.empres]' />
            </column>
            <column caption='Popsyn.Empres / Popsyn.Totpop' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1456914505389617153]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[popsyn.empres] / [popsyn.totpop]' />
            </column>
            <column caption='Empres Pct Diff' datatype='real' default-format='p0.0%' name='[Tothh Pct Diff (copy)_1368531389994995717]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Totpop Diff (copy) (copy)_1368531389994635267]/[tazdata.empres]' />
            </column>
            <column caption='Empres Diff' datatype='integer' name='[Totpop Diff (copy) (copy)_1368531389994635267]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[popsyn.empres] - [tazdata.empres]' />
            </column>
            <column caption='Tothh Diff' datatype='integer' name='[Totpop Diff (copy)_1368531389994622978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[popsyn.tothh] - [tazdata.tothh]' />
            </column>
            <column caption='Tothh Pct Diff' datatype='real' default-format='p0.0%' name='[Totpop Pct Diff (copy)_1368531389994881028]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Totpop Diff (copy)_1368531389994622978]/[tazdata.tothh]' />
            </column>
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Directory' datatype='string' name='[directory (ModelRuns)]' role='dimension' type='nominal' />
            <column caption='Landuse Path' datatype='string' name='[landuse_path]' role='dimension' type='nominal' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[directory (ModelRuns)]' derivation='None' name='[none:directory (ModelRuns):nk]' pivot='key' type='nominal' />
            <column-instance column='[landuse_path]' derivation='None' name='[none:landuse_path:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Popsyn.Empres' datatype='integer' name='[popsyn.empres]' role='measure' type='quantitative' />
            <column caption='Popsyn.Tothh' datatype='integer' name='[popsyn.tothh]' role='measure' type='quantitative' />
            <column caption='Popsyn.Totpop' datatype='integer' name='[popsyn.totpop]' role='measure' type='quantitative' />
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1368531389994086400]' derivation='Sum' name='[sum:Calculation_1368531389994086400:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1368531389994242049]' derivation='Sum' name='[sum:Calculation_1368531389994242049:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1456914505388314624]' derivation='Sum' name='[sum:Calculation_1456914505388314624:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1456914505389617153]' derivation='Sum' name='[sum:Calculation_1456914505389617153:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tothh Pct Diff (copy)_1368531389994995717]' derivation='Sum' name='[sum:Tothh Pct Diff (copy)_1368531389994995717:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Totpop Diff (copy) (copy)_1368531389994635267]' derivation='Sum' name='[sum:Totpop Diff (copy) (copy)_1368531389994635267:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Totpop Diff (copy)_1368531389994622978]' derivation='Sum' name='[sum:Totpop Diff (copy)_1368531389994622978:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Totpop Pct Diff (copy)_1368531389994881028]' derivation='Sum' name='[sum:Totpop Pct Diff (copy)_1368531389994881028:qk]' pivot='key' type='quantitative' />
            <column-instance column='[popsyn.empres]' derivation='Sum' name='[sum:popsyn.empres:qk]' pivot='key' type='quantitative' />
            <column-instance column='[popsyn.tothh]' derivation='Sum' name='[sum:popsyn.tothh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[popsyn.totpop]' derivation='Sum' name='[sum:popsyn.totpop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tazdata.empres]' derivation='Sum' name='[sum:tazdata.empres:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tazdata.gqpop]' derivation='Sum' name='[sum:tazdata.gqpop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tazdata.tothh]' derivation='Sum' name='[sum:tazdata.tothh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tazdata.totpop]' derivation='Sum' name='[sum:tazdata.totpop:qk]' pivot='key' type='quantitative' />
            <column caption='Tazdata.Empres' datatype='integer' name='[tazdata.empres]' role='measure' type='quantitative' />
            <column caption='Tazdata.GQpop' datatype='integer' name='[tazdata.gqpop]' role='measure' type='quantitative' />
            <column caption='Tazdata.Tothh' datatype='integer' name='[tazdata.tothh]' role='measure' type='quantitative' />
            <column caption='Tazdata.Totpop' datatype='integer' name='[tazdata.totpop]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Totpop Diff (copy) (copy)_1368531389994635267:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Tothh Pct Diff (copy)_1368531389994995717:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:popsyn.empres:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Calculation_1456914505389617153:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Calculation_1456914505388314624:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:popsyn.tothh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:popsyn.totpop:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.empres:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.gqpop:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.tothh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.totpop:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Totpop Diff (copy)_1368531389994622978:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Totpop Pct Diff (copy)_1368531389994881028:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Calculation_1368531389994086400:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Calculation_1368531389994242049:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.totpop:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:popsyn.totpop:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Calculation_1368531389994086400:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Calculation_1368531389994242049:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.tothh:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:popsyn.tothh:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Totpop Diff (copy)_1368531389994622978:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Totpop Pct Diff (copy)_1368531389994881028:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.empres:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:popsyn.empres:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Totpop Diff (copy) (copy)_1368531389994635267:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Tothh Pct Diff (copy)_1368531389994995717:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.gqpop:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2005_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2015_TM161_IPA_09&quot;</bucket>
              <bucket>&quot;2023_TM161_IPA_35&quot;</bucket>
              <bucket>&quot;2035_TM152_FBP_Plus_24&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_15&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2035_TM161_EIR_Alt1_01&quot;</bucket>
              <bucket>&quot;2035_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2050_TM152_FBP_PlusCrossing_24&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_17&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2050_TM161_EIR_Alt1_01&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;RTP2021&quot;</bucket>
              <bucket>&quot;RTP2025_IP&quot;</bucket>
              <bucket>&quot;RTP2025&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]</column>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]' value='68' />
            <format attr='width' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:year:ok]' value='44' />
            <format attr='width' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' value='216' />
            <format attr='width' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:description:nk]' value='212' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]' value='on' />
            <format attr='vertical-align' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]' value='bottom' />
            <format attr='text-orientation' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' value='-90' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#ddebf0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk] / ([federated.0h6syh50y1w4st19px68x1cnsq1v].[none:year:ok] / ([federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk] / ([federated.0h6syh50y1w4st19px68x1cnsq1v].[none:description:nk] / [federated.0h6syh50y1w4st19px68x1cnsq1v].[none:landuse_path:nk]))))</rows>
        <cols>[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{4E1FD77B-7486-4E88-8BC6-95C372DD80CA}' />
    </worksheet>
    <worksheet name='Topsheet'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='8' underline='true'>network,VMT</run>
            <run fontsize='8'>: Volumes on network links x link distances.  Includes auto classes (da, s2, s3, plus tolled versions of those, and av/tnc da,s2,s3 classes) and truck classes.  Also includes air passenger travel and ix/ex travel.  Zero passenger miles (from av and tnc) are included in da av vehicle class.</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='8' underline='true'>network.VMT.auto</run>
            <run fontsize='8'>: Volumes on network links x link distances.  Includes auto classes (da, s2, s3, plus tolled versions of those, and av/tnc da,s2,s3 classes) but </run>
            <run fontsize='8' italic='true'>not truck classes</run>
            <run fontsize='8'>.  Also includes air passenger travel and ix/ex travel. Zero passenger miles (from av and tnc) are included in da av vehicle class.</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='8' underline='true'>resident.trip.table.VMT</run>
            <run fontsize='8'>: Created by taking disaggregate resident trips and multiplying by skims.  Does not include air passenger travel, ix/ex travel, truck trips or  zero passenger miles (from av and tnc).</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='8'>scenario config: </run>
            <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/travel-model-one/blob/master/utilities/RTP/config_RTP2025/ModelRuns_RTP2025.xlsx&amp;quot;'>https://github.com/BayAreaMetro/travel-model-one/blob/master/utilities/RTP/config_RTP2025/ModelRuns_RTP2025.xlsx</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>topsheet script: </run>
            <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/travel-model-one/blob/master/utilities/RTP/metrics/topsheet.R&amp;quot;'>https://github.com/BayAreaMetro/travel-model-one/blob/master/utilities/RTP/metrics/topsheet.R</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>summarize across runs: </run>
            <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/travel-model-one/blob/master/utilities/CoreSummaries/copyFilesAcrossScenarios.py&amp;quot;'>https://github.com/BayAreaMetro/travel-model-one/blob/master/utilities/CoreSummaries/copyFilesAcrossScenarios.py</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='topsheet' name='federated.0h6syh50y1w4st19px68x1cnsq1v' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6syh50y1w4st19px68x1cnsq1v'>
            <column aggregation='Sum' caption='AOC CentsPerMile' datatype='real' name='[AOC_CentsPerMile]' role='dimension' type='ordinal' />
            <column caption='Popsyn.Empres / Tazdata.Empres' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1456914505388314624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[popsyn.empres] / [tazdata.empres]' />
            </column>
            <column caption='Popsyn.Empres / Popsyn.Totpop' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1456914505389617153]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[popsyn.empres] / [popsyn.totpop]' />
            </column>
            <column caption='network.VMT per capita' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_471752122210299904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[network.VMT]/[popsyn.totpop]' />
            </column>
            <column-instance column='[Calculation_1456914505388314624]' derivation='Attribute' name='[attr:Calculation_1456914505388314624:qk]' pivot='key' type='quantitative' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Directory' datatype='string' name='[directory (ModelRuns)]' role='dimension' type='nominal' />
            <column caption='network.VMT.auto per capita' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[network.VMT.auto per capita (copy)_886364766628569093]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[network.VMT.auto]/[popsyn.totpop]' />
            </column>
            <column datatype='real' name='[network.VMT.auto]' role='measure' type='quantitative' />
            <column datatype='real' name='[network.VMT]' role='measure' type='quantitative' />
            <column-instance column='[AOC_CentsPerMile]' derivation='None' name='[none:AOC_CentsPerMile:ok]' pivot='key' type='ordinal' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[directory (ModelRuns)]' derivation='None' name='[none:directory (ModelRuns):nk]' pivot='key' type='nominal' />
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_471752122210299904]' derivation='Sum' name='[pcdf:sum:Calculation_471752122210299904:qk:4]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:13]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Popsyn.Empres' datatype='integer' name='[popsyn.empres]' role='measure' type='quantitative' />
            <column caption='Popsyn.Tothh' datatype='integer' name='[popsyn.tothh]' role='measure' type='quantitative' />
            <column caption='Popsyn.Totpop' datatype='integer' name='[popsyn.totpop]' role='measure' type='quantitative' />
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1456914505389617153]' derivation='Sum' name='[sum:Calculation_1456914505389617153:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_471752122210299904]' derivation='Sum' name='[sum:Calculation_471752122210299904:qk]' pivot='key' type='quantitative' />
            <column-instance column='[network.VMT.auto per capita (copy)_886364766628569093]' derivation='Sum' name='[sum:network.VMT.auto per capita (copy)_886364766628569093:qk]' pivot='key' type='quantitative' />
            <column-instance column='[network.VMT.auto]' derivation='Sum' name='[sum:network.VMT.auto:qk]' pivot='key' type='quantitative' />
            <column-instance column='[network.VMT]' derivation='Sum' name='[sum:network.VMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[popsyn.empres]' derivation='Sum' name='[sum:popsyn.empres:qk]' pivot='key' type='quantitative' />
            <column-instance column='[popsyn.tothh]' derivation='Sum' name='[sum:popsyn.tothh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[popsyn.totpop]' derivation='Sum' name='[sum:popsyn.totpop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tazdata.empres]' derivation='Sum' name='[sum:tazdata.empres:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tazdata.tothh]' derivation='Sum' name='[sum:tazdata.tothh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tazdata.totpop]' derivation='Sum' name='[sum:tazdata.totpop:qk]' pivot='key' type='quantitative' />
            <column caption='Tazdata.Empres' datatype='integer' name='[tazdata.empres]' role='measure' type='quantitative' />
            <column caption='Tazdata.Tothh' datatype='integer' name='[tazdata.tothh]' role='measure' type='quantitative' />
            <column caption='Tazdata.Totpop' datatype='integer' name='[tazdata.totpop]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:popsyn.totpop:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.empres:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.tothh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.totpop:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:network.VMT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210299904:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Calculation_471752122210299904:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:network.VMT.auto:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:13]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:network.VMT.auto per capita (copy)_886364766628569093:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:network.VMT.auto:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:network.VMT.auto per capita (copy)_886364766628569093:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:network.VMT.auto per capita (copy)_886364766628569093:qk:13]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:network.VMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Calculation_471752122210299904:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[pcdf:sum:Calculation_471752122210299904:qk:4]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:popsyn.tothh:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.tothh:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:popsyn.totpop:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.totpop:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:tazdata.empres:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:popsyn.empres:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[attr:Calculation_1456914505388314624:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h6syh50y1w4st19px68x1cnsq1v].[sum:Calculation_1456914505389617153:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2005_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2015_TM161_IPA_09&quot;</bucket>
              <bucket>&quot;2023_TM161_IPA_35&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_15&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2035_TM161_EIR_Alt1_01&quot;</bucket>
              <bucket>&quot;2035_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_17&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2050_TM161_EIR_Alt1_01&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025&quot;' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025_IP&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;RTP2021&quot;</bucket>
              <bucket>&quot;RTP2025_IP&quot;</bucket>
              <bucket>&quot;RTP2025&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]</column>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]</column>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]' value='91' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:year:ok]' value='44' />
            <format attr='width' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' value='28' />
            <format attr='height-header' value='20' />
            <format attr='height' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]' value='96' />
            <format attr='width' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:AOC_CentsPerMile:ok]' value='52' />
            <format attr='width' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' value='208' />
            <format attr='width' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:description:nk]' value='232' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]' value='on' />
            <format attr='vertical-align' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]' value='bottom' />
            <format attr='text-orientation' field='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' />
              <text column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk] / ([federated.0h6syh50y1w4st19px68x1cnsq1v].[none:year:ok] / ([federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk] / ([federated.0h6syh50y1w4st19px68x1cnsq1v].[none:description:nk] / [federated.0h6syh50y1w4st19px68x1cnsq1v].[none:AOC_CentsPerMile:ok]))))</rows>
        <cols>[federated.0h6syh50y1w4st19px68x1cnsq1v].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{7EAC45BC-ABA7-460A-BF80-F3A128CC2A78}' />
    </worksheet>
    <worksheet name='Transit Daily Boardings'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline' name='federated.1s4t84l0axctkh198vk2z051usym' />
            <datasource caption='topsheet' name='federated.0h6syh50y1w4st19px68x1cnsq1v' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6syh50y1w4st19px68x1cnsq1v'>
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1s4t84l0axctkh198vk2z051usym'>
            <column datatype='string' name='[Common.Agency.Name]' role='dimension' type='nominal' />
            <column caption='Description1' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Model Run Directory1' datatype='string' name='[directory]' role='dimension' type='nominal' />
            <column-instance column='[Common.Agency.Name]' derivation='None' name='[none:Common.Agency.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[directory]' derivation='None' name='[none:directory:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Total Boardings' datatype='integer' name='[total boardings]' role='measure' type='quantitative' />
            <column caption='ModelRun Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]'>
            <groupfilter function='level-members' level='[none:Common.Agency.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2005_TM161_IPA_01&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2015_TM161_IPA_09&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2023_TM161_IPA_35&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2035_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2035_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2035_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2035_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2035_TM161_FBP_Plan_16&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2050_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2050_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2050_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2050_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2050_TM161_FBP_NoProject_17&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2050_TM161_FBP_Plan_16&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2005_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2015_TM161_IPA_09&quot;</bucket>
              <bucket>&quot;2023_TM161_IPA_35&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2035_TM161_EIR_Alt1_01&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_17&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2050_TM161_EIR_Alt1_01&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1s4t84l0axctkh198vk2z051usym].[none:run_set:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2021&quot;' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025&quot;' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025_IP&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1s4t84l0axctkh198vk2z051usym].[none:run_set:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;RTP2021&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;RTP2025_IP&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1s4t84l0axctkh198vk2z051usym].[none:status:nk]'>
            <groupfilter function='member' level='[none:status:nk]' member='&quot;current&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]</column>
            <column>[federated.1s4t84l0axctkh198vk2z051usym].[none:run_set:nk]</column>
            <column>[federated.1s4t84l0axctkh198vk2z051usym].[none:status:nk]</column>
            <column>[federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1s4t84l0axctkh198vk2z051usym].[none:description:nk]' value='50' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1s4t84l0axctkh198vk2z051usym].[none:year:ok]' value='52' />
            <format attr='height-header' value='36' />
            <format attr='width' field='[federated.1s4t84l0axctkh198vk2z051usym].[none:run_set:nk]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk]' value='on' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1s4t84l0axctkh198vk2z051usym].[sum:total boardings:qk]' />
              <text column='[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]' />
              <lod column='[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]' />
              <color column='[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1s4t84l0axctkh198vk2z051usym].[none:year:ok] / ([federated.1s4t84l0axctkh198vk2z051usym].[none:run_set:nk] / ([federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk] / [federated.1s4t84l0axctkh198vk2z051usym].[none:description:nk])))</rows>
        <cols>[federated.1s4t84l0axctkh198vk2z051usym].[sum:total boardings:qk]</cols>
        <join-lod-include-overrides>
          <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[run_set]</column>
          <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[status]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{15338BFE-601B-4A65-9912-5CB3F0ACD78E}' />
    </worksheet>
    <worksheet name='Transit Trip Purpose'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance' name='federated.1eeyfid137qi091h9q2kb1olbl2h' />
          </datasources>
          <datasource-dependencies datasource='federated.1eeyfid137qi091h9q2kb1olbl2h'>
            <column datatype='string' name='[Transit Trip Modes]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[trip_mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Commuter Rail&quot;'>
                  <value>13</value>
                  <value>18</value>
                </bin>
                <bin default-name='false' value='&quot;Express Bus&quot;'>
                  <value>11</value>
                  <value>16</value>
                </bin>
                <bin default-name='false' value='&quot;Heavy Rail&quot;'>
                  <value>12</value>
                  <value>17</value>
                </bin>
                <bin default-name='false' value='&quot;Light Rail or Ferry&quot;'>
                  <value>10</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Local Bus&quot;'>
                  <value>9</value>
                  <value>14</value>
                </bin>
                <bin default-name='false' value='&quot;Non-Transit&quot;'>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>7</value>
                  <value>8</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                </bin>
              </calculation>
            </column>
            <column caption='Trip Mode (bigger group)' datatype='string' name='[Trip Mode (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[trip_mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Auto&quot;'>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                </bin>
                <bin default-name='false' value='&quot;Non-Motorized&quot;'>
                  <value>7</value>
                  <value>8</value>
                </bin>
                <bin default-name='false' value='&quot;Transit&quot;'>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                </bin>
              </calculation>
            </column>
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Directory' datatype='string' name='[directory]' role='dimension' type='nominal' />
            <column caption='Number of Trips' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[directory]' derivation='None' name='[none:directory:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column datatype='string' name='[tour_purpose (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[tour_purpose]' new-bin='true'>
                <bin default-name='false' value='&quot;atwork&quot;'>
                  <value>&quot;atwork_business&quot;</value>
                  <value>&quot;atwork_eat&quot;</value>
                  <value>&quot;atwork_maint&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;discretionary&quot;'>
                  <value>&quot;eatout&quot;</value>
                  <value>&quot;othdiscr&quot;</value>
                  <value>&quot;social&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;maintenance&quot;'>
                  <value>&quot;escort_kids&quot;</value>
                  <value>&quot;escort_no kids&quot;</value>
                  <value>&quot;othmaint&quot;</value>
                  <value>&quot;shopping&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;school&quot;'>
                  <value>&quot;school_grade&quot;</value>
                  <value>&quot;school_high&quot;</value>
                  <value>&quot;university&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;work&quot;'>
                  <value>&quot;work_high&quot;</value>
                  <value>&quot;work_low&quot;</value>
                  <value>&quot;work_med&quot;</value>
                  <value>&quot;work_very high&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[tour_purpose]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Trip Mode' datatype='integer' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Drive alone free' />
                <alias key='2' value='Drive alone toll' />
                <alias key='3' value='Shared ride 2 free' />
                <alias key='4' value='Shared ride 2  toll' />
                <alias key='5' value='Shared ride 3+ free' />
                <alias key='6' value='Shared ride 3+ toll' />
                <alias key='7' value='Walk' />
                <alias key='8' value='Bicycle' />
                <alias key='9' value='Walk to local bus' />
                <alias key='10' value='Walk to light rail or ferry' />
                <alias key='11' value='Walk to express bus' />
                <alias key='12' value='Walk to heavy rail' />
                <alias key='13' value='Walk to commuter rail' />
                <alias key='14' value='Drive to local bus' />
                <alias key='15' value='Drive to light rail or ferry' />
                <alias key='16' value='Drive to express bus' />
                <alias key='17' value='Drive to heavy rail' />
                <alias key='18' value='Drive to commuter rail' />
                <alias key='19' value='Taxi' />
                <alias key='20' value='TNC Single party' />
                <alias key='21' value='TNC Shared' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Transit Trip Modes]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Commuter Rail&quot;</bucket>
              <bucket>&quot;Heavy Rail&quot;</bucket>
              <bucket>&quot;Light Rail or Ferry&quot;</bucket>
              <bucket>&quot;Express Bus&quot;</bucket>
              <bucket>&quot;Local Bus&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group) (copy)]'>
            <groupfilter function='member' level='[Trip Mode (group) (copy)]' member='&quot;Transit&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2005_TM161_IPA_01&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2015_TM161_IPA_09&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2023_TM161_IPA_35&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2035_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2035_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2035_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2035_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2035_TM161_FBP_Plan_16&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2050_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2050_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2050_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2050_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2050_TM161_FBP_NoProject_17&quot;' />
              <groupfilter function='member' level='[none:directory:nk]' member='&quot;2050_TM161_FBP_Plan_16&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2005_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2015_TM161_IPA_09&quot;</bucket>
              <bucket>&quot;2023_TM161_IPA_35&quot;</bucket>
              <bucket>&quot;2035_TM161_DBP_Plan_08b&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_NoProject_06&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2035_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2035_TM161_EIR_Alt1_01&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_17&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2050_TM161_EIR_Alt1_01&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:status:nk]'>
            <groupfilter function='member' level='[none:status:nk]' member='&quot;current&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group) (copy)]</column>
            <column>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]</column>
            <column>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:1]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:1]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Transit Trip Modes]' value='36' />
            <format attr='width' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:year:ok]' value='40' />
            <format attr='width' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' value='176' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' value='on' />
            <format attr='text-orientation' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Transit Trip Modes]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[tour_purpose (group)]' />
              <text column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1eeyfid137qi091h9q2kb1olbl2h].[Transit Trip Modes] / ([federated.1eeyfid137qi091h9q2kb1olbl2h].[none:year:ok] / ([federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk] / [federated.1eeyfid137qi091h9q2kb1olbl2h].[none:description:nk])))</rows>
        <cols>[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:1]</cols>
      </table>
      <simple-id uuid='{2D0B9479-6E12-4428-B5BC-F31A1D83BFE1}' />
    </worksheet>
    <worksheet name='VMT Bars'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled' name='federated.10ey18i0433zc21cseiur1x6w735' />
            <datasource caption='topsheet' name='federated.0h6syh50y1w4st19px68x1cnsq1v' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6syh50y1w4st19px68x1cnsq1v'>
            <column datatype='string' name='[Asana Link]' role='dimension' type='nominal' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Directory' datatype='string' name='[directory (ModelRuns)]' role='dimension' type='nominal' />
            <column caption='Landuse Path' datatype='string' name='[landuse_path]' role='dimension' type='nominal' />
            <column caption='Model Machine' datatype='string' name='[model_machine]' role='dimension' type='nominal' />
            <column caption='Network' datatype='string' name='[network]' role='dimension' type='nominal' />
            <column-instance column='[directory (ModelRuns)]' derivation='None' name='[none:directory (ModelRuns):nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column caption='Urbansim Runid' datatype='string' name='[urbansim_runid]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10ey18i0433zc21cseiur1x6w735'>
            <column datatype='real' name='[AOC_CentsPerMile]' role='measure' type='quantitative' />
            <column caption='Resident Trip Table VMT per Capita' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_2629539297121230850]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' />
            </column>
            <column-instance column='[AOC_CentsPerMile]' derivation='Attribute' name='[attr:AOC_CentsPerMile:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description]' derivation='Attribute' name='[attr:description:nk]' pivot='key' type='nominal' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Directory' datatype='string' name='[directory]' role='dimension' type='nominal' />
            <column caption='Number of Persons' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[directory]' derivation='None' name='[none:directory:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2629539297121230850]' derivation='User' name='[pcdf:usr:Calculation_2629539297121230850:qk:7]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2629539297121230850]' derivation='User' name='[usr:Calculation_2629539297121230850:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2005_TM161_IPA_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM161_IPA_09&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_35&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM152_FBP_NoProject_24&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM152_FBP_PlusCrossing_24&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_17&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_Plan_16&quot;' />
            </groupfilter>
            <target field='[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:status:nk]' member='&quot;current&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.10ey18i0433zc21cseiur1x6w735].[none:status:nk]' />
          </filter>
          <manual-sort column='[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2015_TM152_TRR_00&quot;</bucket>
              <bucket>&quot;2020_TM152_TRR_00&quot;</bucket>
              <bucket>&quot;2020_TM152_TRR_01&quot;</bucket>
              <bucket>&quot;2020_TM152_TRR_03&quot;</bucket>
              <bucket>&quot;2020_TM152_TRR_04&quot;</bucket>
              <bucket>&quot;2020_TM152_TRR_05&quot;</bucket>
              <bucket>&quot;2020_TM152_TRR_06&quot;</bucket>
              <bucket>&quot;2020_TM152_TRR_07&quot;</bucket>
              <bucket>&quot;2028_TM152_TRR_UNF_02&quot;</bucket>
              <bucket>&quot;2028_TM152_TRR_FAV_02&quot;</bucket>
              <bucket>&quot;2005_TM152_IPA_03&quot;</bucket>
              <bucket>&quot;2015_TM160_IPA_03&quot;</bucket>
              <bucket>&quot;2015_TM160_IPA_03_AOCplus10pct&quot;</bucket>
              <bucket>&quot;2023_TM160_IPA_42&quot;</bucket>
              <bucket>&quot;2035_TM152_FBP_Plus_24&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_08&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_minusModePref&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_PBA50aoc&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_PBA50landuse&quot;</bucket>
              <bucket>&quot;2005_TM160_IPA_04&quot;</bucket>
              <bucket>&quot;2005_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2015_TM161_IPA_09&quot;</bucket>
              <bucket>&quot;2023_TM161_IPA_35&quot;</bucket>
              <bucket>&quot;2035_TM160_DBP_Plan_08b&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_15&quot;</bucket>
              <bucket>&quot;2035_TM161_DBP_Plan_08b&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_NoProject_06&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2035_TM161_EIR_Alt1_01&quot;</bucket>
              <bucket>&quot;2035_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2050_TM160_DBP_Plan_08b&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_17&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2050_TM161_EIR_Alt1_01&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_set:nk]' member='%null%' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025&quot;' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025_IP&quot;' />
            </groupfilter>
            <target field='[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]' />
          </filter>
          <slices>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]</column>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]</column>
            <column>[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.10ey18i0433zc21cseiur1x6w735].[pcdf:usr:Calculation_2629539297121230850:qk:7]' value='34' />
            <format attr='height' field='[federated.10ey18i0433zc21cseiur1x6w735].[usr:Calculation_2629539297121230850:qk]' value='34' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]' value='22' />
            <format attr='text-format' field='[federated.10ey18i0433zc21cseiur1x6w735].[pcdf:usr:Calculation_2629539297121230850:qk:7]' value='p0.0%' />
            <format attr='text-format' field='[federated.10ey18i0433zc21cseiur1x6w735].[usr:Calculation_2629539297121230850:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]' value='204' />
            <format attr='width' field='[federated.10ey18i0433zc21cseiur1x6w735].[none:year:ok]' value='52' />
            <format attr='width' field='[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]' value='84' />
            <format attr='width' field='[federated.10ey18i0433zc21cseiur1x6w735].[attr:description:nk]' value='260' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.10ey18i0433zc21cseiur1x6w735].[usr:Calculation_2629539297121230850:qk]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]' />
              <text column='[federated.10ey18i0433zc21cseiur1x6w735].[pcdf:usr:Calculation_2629539297121230850:qk:7]' />
              <lod column='[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]' />
              <lod column='[federated.10ey18i0433zc21cseiur1x6w735].[attr:AOC_CentsPerMile:qk]' />
              <lod column='[federated.10ey18i0433zc21cseiur1x6w735].[usr:Calculation_2629539297121230850:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Directory:&#9;</run>
                <run bold='true'><![CDATA[<[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Run Set:&#9;</run>
                <run bold='true'><![CDATA[<[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.10ey18i0433zc21cseiur1x6w735].[none:year:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>AOC_CentsPerMile:&#9;</run>
                <run bold='true'><![CDATA[<[federated.10ey18i0433zc21cseiur1x6w735].[attr:AOC_CentsPerMile:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Description:&#9;</run>
                <run bold='true'><![CDATA[<[federated.10ey18i0433zc21cseiur1x6w735].[attr:description:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Resident Trip Table VMT per Capita:	</run>
                <run bold='true'><![CDATA[<[federated.10ey18i0433zc21cseiur1x6w735].[usr:Calculation_2629539297121230850:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Resident Trip Table VMT per Capita from the First along Table (Down):	</run>
                <run bold='true'><![CDATA[<[federated.10ey18i0433zc21cseiur1x6w735].[pcdf:usr:Calculation_2629539297121230850:qk:7]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.10ey18i0433zc21cseiur1x6w735].[none:year:ok] / ([federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk] / ([federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk] / [federated.10ey18i0433zc21cseiur1x6w735].[attr:description:nk])))</rows>
        <cols>[federated.10ey18i0433zc21cseiur1x6w735].[pcdf:usr:Calculation_2629539297121230850:qk:7]</cols>
        <join-lod-include-overrides>
          <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[Asana Link]</column>
          <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[category]</column>
          <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[description]</column>
          <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[landuse_path]</column>
          <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[model_machine]</column>
          <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[network]</column>
          <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[status]</column>
          <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[urbansim_runid]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{ABD24D22-BB55-4F59-9E5A-02541A8B0C2D}' />
    </worksheet>
    <worksheet name='VMT County Bars'>
      <table>
        <view>
          <datasources>
            <datasource caption='VehicleMilesTraveled' name='federated.10ey18i0433zc21cseiur1x6w735' />
            <datasource caption='topsheet' name='federated.0h6syh50y1w4st19px68x1cnsq1v' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6syh50y1w4st19px68x1cnsq1v'>
            <column caption='Directory' datatype='string' name='[directory (ModelRuns)]' role='dimension' type='nominal' />
            <column-instance column='[directory (ModelRuns)]' derivation='None' name='[none:directory (ModelRuns):nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10ey18i0433zc21cseiur1x6w735'>
            <column caption='Resident Trip Table VMT per Capita' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_2629539297121230850]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([vmt]*[freq])/SUM([freq])' />
            </column>
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Directory' datatype='string' name='[directory]' role='dimension' type='nominal' />
            <column caption='Number of Persons' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[directory]' derivation='None' name='[none:directory:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2629539297121230850]' derivation='User' name='[usr:Calculation_2629539297121230850:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vmt]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2005_TM161_IPA_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM161_IPA_09&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_35&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM152_FBP_NoProject_24&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM152_FBP_PlusCrossing_24&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_17&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_Plan_16&quot;' />
            </groupfilter>
            <target field='[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:status:nk]' member='&quot;current&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.10ey18i0433zc21cseiur1x6w735].[none:status:nk]' />
          </filter>
          <manual-sort column='[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2015_TM152_TRR_00&quot;</bucket>
              <bucket>&quot;2020_TM152_TRR_07&quot;</bucket>
              <bucket>&quot;2028_TM152_TRR_UNF_02&quot;</bucket>
              <bucket>&quot;2028_TM152_TRR_FAV_02&quot;</bucket>
              <bucket>&quot;2005_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2015_TM161_IPA_09&quot;</bucket>
              <bucket>&quot;2023_TM161_IPA_35&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2035_TM161_EIR_Alt1_01&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_17&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2050_TM161_EIR_Alt1_01&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_set:nk]' member='%null%' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025&quot;' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025_IP&quot;' />
            </groupfilter>
            <target field='[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]' />
          </filter>
          <slices>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]</column>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]</column>
            <column>[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]' value='204' />
            <format attr='width' field='[federated.10ey18i0433zc21cseiur1x6w735].[none:description:nk]' value='152' />
            <format attr='height-header' value='56' />
            <format attr='width' field='[federated.10ey18i0433zc21cseiur1x6w735].[none:year:ok]' value='44' />
            <format attr='width' field='[federated.10ey18i0433zc21cseiur1x6w735].[none:county_name:nk]' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.10ey18i0433zc21cseiur1x6w735].[none:county_name:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]' />
              <lod column='[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.10ey18i0433zc21cseiur1x6w735].[none:county_name:nk] / ([federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk] / ([federated.10ey18i0433zc21cseiur1x6w735].[none:year:ok] / ([federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk] / [federated.10ey18i0433zc21cseiur1x6w735].[none:description:nk]))))</rows>
        <cols>[federated.10ey18i0433zc21cseiur1x6w735].[usr:Calculation_2629539297121230850:qk]</cols>
      </table>
      <simple-id uuid='{8F5C2A6F-B0D7-47B1-A900-064062B83576}' />
    </worksheet>
    <worksheet name='Work ModeShare Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance' name='federated.1eeyfid137qi091h9q2kb1olbl2h' />
            <datasource caption='topsheet' name='federated.0h6syh50y1w4st19px68x1cnsq1v' />
            <datasource caption='VehicleMilesTraveled' name='federated.10ey18i0433zc21cseiur1x6w735' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6syh50y1w4st19px68x1cnsq1v'>
            <column caption='Directory' datatype='string' name='[directory (ModelRuns)]' role='dimension' type='nominal' />
            <column-instance column='[directory (ModelRuns)]' derivation='None' name='[none:directory (ModelRuns):nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10ey18i0433zc21cseiur1x6w735'>
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1eeyfid137qi091h9q2kb1olbl2h'>
            <column datatype='string' name='[Trip Mode (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[trip_mode]' new-bin='true'>
                <bin default-name='false' value='&quot;Bicycle&quot;'>
                  <value>8</value>
                </bin>
                <bin default-name='false' value='&quot;Drive Alone&quot;'>
                  <value>1</value>
                  <value>2</value>
                </bin>
                <bin default-name='false' value='&quot;Drive to Transit&quot;'>
                  <value>14</value>
                  <value>15</value>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                </bin>
                <bin default-name='false' value='&quot;Shared Ride 2&quot;'>
                  <value>3</value>
                  <value>4</value>
                </bin>
                <bin default-name='false' value='&quot;Shared ride 3+&quot;'>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Taxi/TNC&quot;'>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                </bin>
                <bin default-name='false' value='&quot;Walk&quot;'>
                  <value>7</value>
                </bin>
                <bin default-name='false' value='&quot;Walk to Transit&quot;'>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                </bin>
              </calculation>
            </column>
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Directory' datatype='string' name='[directory]' role='dimension' type='nominal' />
            <column caption='Number of Trips' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[directory]' derivation='None' name='[none:directory:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[tour_purpose]' derivation='None' name='[none:tour_purpose:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[tour_purpose]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Trip Mode' datatype='integer' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Drive alone free' />
                <alias key='2' value='Drive alone toll' />
                <alias key='3' value='Shared ride 2 free' />
                <alias key='4' value='Shared ride 2  toll' />
                <alias key='5' value='Shared ride 3+ free' />
                <alias key='6' value='Shared ride 3+ toll' />
                <alias key='7' value='Walk' />
                <alias key='8' value='Bicycle' />
                <alias key='9' value='Walk to local bus' />
                <alias key='10' value='Walk to light rail or ferry' />
                <alias key='11' value='Walk to express bus' />
                <alias key='12' value='Walk to heavy rail' />
                <alias key='13' value='Walk to commuter rail' />
                <alias key='14' value='Drive to local bus' />
                <alias key='15' value='Drive to light rail or ferry' />
                <alias key='16' value='Drive to express bus' />
                <alias key='17' value='Drive to heavy rail' />
                <alias key='18' value='Drive to commuter rail' />
                <alias key='19' value='Taxi' />
                <alias key='20' value='TNC Single party' />
                <alias key='21' value='TNC Shared' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2005_TM161_IPA_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2015_TM161_IPA_09&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2023_TM161_IPA_35&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2035_TM161_FBP_Plan_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM152_FBP_NoProject_24&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM152_FBP_PlusCrossing_24&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt1_02&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_EIR_Alt2_01&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_16&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_NoProject_17&quot;' />
              <groupfilter function='member' level='[none:directory (ModelRuns):nk]' member='&quot;2050_TM161_FBP_Plan_16&quot;' />
            </groupfilter>
            <target field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:status:nk]' member='&quot;current&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:status:nk]' />
          </filter>
          <filter class='categorical' column='[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_set:nk]' member='%null%' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025&quot;' />
              <groupfilter function='member' level='[none:run_set:nk]' member='&quot;RTP2025_IP&quot;' />
            </groupfilter>
            <target field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:run_set:nk]' />
          </filter>
          <manual-sort column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2015_TM152_TRR_00&quot;</bucket>
              <bucket>&quot;2020_TM152_TRR_07&quot;</bucket>
              <bucket>&quot;2028_TM152_TRR_UNF_02&quot;</bucket>
              <bucket>&quot;2028_TM152_TRR_FAV_02&quot;</bucket>
              <bucket>&quot;2005_TM152_IPA_03&quot;</bucket>
              <bucket>&quot;2015_TM160_IPA_03&quot;</bucket>
              <bucket>&quot;2015_TM160_IPA_03_AOCplus10pct&quot;</bucket>
              <bucket>&quot;2023_TM160_IPA_42&quot;</bucket>
              <bucket>&quot;2035_TM152_FBP_Plus_24&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_08&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_minusModePref&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_PBA50aoc&quot;</bucket>
              <bucket>&quot;2035_TM160_IPA_09_PBA50landuse&quot;</bucket>
              <bucket>&quot;2005_TM161_IPA_01&quot;</bucket>
              <bucket>&quot;2015_TM161_IPA_09&quot;</bucket>
              <bucket>&quot;2023_TM161_IPA_35&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2035_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2035_TM161_EIR_Alt1_01&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_16&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_NoProject_17&quot;</bucket>
              <bucket>&quot;2050_TM161_FBP_Plan_16&quot;</bucket>
              <bucket>&quot;2050_TM161_EIR_Alt1_01&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:tour_purpose:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:tour_purpose:nk]' member='&quot;work_high&quot;' />
              <groupfilter function='member' level='[none:tour_purpose:nk]' member='&quot;work_low&quot;' />
              <groupfilter function='member' level='[none:tour_purpose:nk]' member='&quot;work_med&quot;' />
              <groupfilter function='member' level='[none:tour_purpose:nk]' member='&quot;work_very high&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:tour_purpose:nk]</column>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]</column>
            <column>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]</column>
            <column>[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:3]' value='p0%' />
            <format attr='height' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:description:nk]' value='49' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:3]' value='p0%' />
            <format attr='wrap' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' value='on' />
            <format attr='font-size' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' value='8' />
            <format attr='vertical-align' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' value='bottom' />
            <format attr='text-format' field='[federated.1eeyfid137qi091h9q2kb1olbl2h].[sum:freq:qk]' value='n#,##0,.0K;-#,##0,.0K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]' />
              <lod column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:3]' />
              <text column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:3]' />
              <text column='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='7'><![CDATA[<[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='7'><![CDATA[<[federated.1eeyfid137qi091h9q2kb1olbl2h].[pcto:sum:freq:qk:3]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1eeyfid137qi091h9q2kb1olbl2h].[none:year:ok] / ([federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk] / [federated.1eeyfid137qi091h9q2kb1olbl2h].[none:description:nk]))</rows>
        <cols>[federated.1eeyfid137qi091h9q2kb1olbl2h].[sum:freq:qk]</cols>
      </table>
      <simple-id uuid='{0E4F5C96-1B0F-496E-8840-C248D85504CE}' />
    </worksheet>
    <worksheet name='trnline files'>
      <table>
        <view>
          <datasources>
            <datasource caption='trnline' name='federated.1s4t84l0axctkh198vk2z051usym' />
          </datasources>
          <datasource-dependencies datasource='federated.1s4t84l0axctkh198vk2z051usym'>
            <column caption='Category' datatype='string' name='[Calculation_1340383890632048644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([category],&quot;NTD&quot;)' />
            </column>
            <column caption='Description' datatype='string' name='[Calculation_1340383890742616071]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([description],[Calculation_1340383890632048644])' />
            </column>
            <column caption='Hours per Timeperiod' datatype='real' name='[Calculation_2503719977291898880]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_2503719977292058625]&#13;&#10;WHEN &quot;ea&quot; then 3.0&#13;&#10;WHEN &quot;am&quot; then 4.0&#13;&#10;WHEN &quot;md&quot; then 5.0&#13;&#10;WHEN &quot;pm&quot; then 4.0&#13;&#10;WHEN &quot;ev&quot; then 8.0&#13;&#10;WHEN &quot;24&quot; then 24.0&#13;&#10;else 0&#13;&#10;end' />
            </column>
            <column caption='Timeperiod' datatype='string' name='[Calculation_2503719977292058625]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='left([path id],2)' />
              <aliases>
                <alias key='&quot;24&quot;' value='24 Hours' />
                <alias key='&quot;am&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;ea&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;ev&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;md&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;pm&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Vehicle runs per period' datatype='real' name='[Calculation_2503719977292230658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2503719977291898880]*60.0/[frequency]' />
            </column>
            <column caption='Vehicle revenue hours per timeperiod' datatype='real' name='[Calculation_2503719977292685315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2503719977292230658]*[line time]/60.0' />
            </column>
            <column caption='ModelRun Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column caption='Description1' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Model Run Directory1' datatype='string' name='[directory]' role='dimension' type='nominal' />
            <column caption='Frequency' datatype='real' name='[frequency]' role='dimension' type='ordinal' />
            <column caption='Line Time' datatype='real' name='[line time]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1340383890742616071]' derivation='None' name='[none:Calculation_1340383890742616071:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2503719977292058625]' derivation='None' name='[none:Calculation_2503719977292058625:nk]' pivot='key' type='nominal' />
            <column-instance column='[directory]' derivation='None' name='[none:directory:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_set]' derivation='None' name='[none:run_set:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Path Id' datatype='string' name='[path id]' role='dimension' type='nominal' />
            <column caption='Run Set' datatype='string' name='[run_set]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2503719977292685315]' derivation='Sum' name='[sum:Calculation_2503719977292685315:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total boardings]' derivation='Sum' name='[sum:total boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Total Boardings' datatype='integer' name='[total boardings]' role='measure' type='quantitative' />
            <column caption='ModelRun Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s4t84l0axctkh198vk2z051usym].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1s4t84l0axctkh198vk2z051usym].[sum:total boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1s4t84l0axctkh198vk2z051usym].[sum:Calculation_2503719977292685315:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_2503719977292058625:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;24&quot;</bucket>
              <bucket>&quot;ea&quot;</bucket>
              <bucket>&quot;am&quot;</bucket>
              <bucket>&quot;md&quot;</bucket>
              <bucket>&quot;pm&quot;</bucket>
              <bucket>&quot;ev&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1s4t84l0axctkh198vk2z051usym].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1s4t84l0axctkh198vk2z051usym].[:Measure Names]' value='73' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1s4t84l0axctkh198vk2z051usym].[:Measure Names]' value='72' />
            <format attr='width' field='[federated.1s4t84l0axctkh198vk2z051usym].[none:year:ok]' value='64' />
            <format attr='width' field='[federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk]' value='148' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1s4t84l0axctkh198vk2z051usym].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1s4t84l0axctkh198vk2z051usym].[none:run_set:nk] / ([federated.1s4t84l0axctkh198vk2z051usym].[none:year:ok] / ([federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk] / [federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_1340383890742616071:nk])))</rows>
        <cols>([federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_2503719977292058625:nk] / [federated.1s4t84l0axctkh198vk2z051usym].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{18B2FA36-E943-4022-AA9B-AD676A73E95D}' />
    </worksheet>
  </worksheets>
  <windows source-height='93'>
    <window class='worksheet' maximized='true' name='Topsheet'>
      <cards>
        <edge name='left'>
          <strip size='241'>
            <card size='48' type='filters' />
            <card size='144' type='measures' />
            <card param='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' size='144' type='filter' values='relevant' />
            <card param='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]' size='52' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='170'>
            <card size='811' type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:AOC_CentsPerMile:ok]</field>
            <field>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:Path:nk]</field>
            <field>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:description:nk]</field>
            <field>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]</field>
            <field>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]</field>
            <field>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B9157C17-5A5D-48A4-99D2-55591BA1E301}' />
    </window>
    <window class='worksheet' name='TazData vs PopSyn'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:description:nk]</field>
            <field>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]</field>
            <field>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:landuse_path:nk]</field>
            <field>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:run_set:nk]</field>
            <field>[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{937E3436-E437-4276-A539-2C9615BD7B65}' />
    </window>
    <window class='worksheet' name='VMT Bars'>
      <cards>
        <edge name='left'>
          <strip size='216'>
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[attr:description:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:Calculation_1957940005550874628:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:Description:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:Model Year:ok]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:Plan:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:Scenario:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:category:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:county_name:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:description:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:status:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B4AE49E7-3CFA-45D7-AC17-098A04D874A5}' />
    </window>
    <window class='worksheet' name='VMT County Bars'>
      <cards>
        <edge name='left'>
          <strip size='216'>
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:Calculation_1957940005550874628:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:Description:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:Model Year:ok]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:Plan:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:Scenario:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:category:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:county_name:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:directory:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:run_set:nk]</field>
            <field>[federated.10ey18i0433zc21cseiur1x6w735].[none:status:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D8FE685-EAF2-4910-B33E-4B89A1BC0792}' />
    </window>
    <window class='worksheet' name='ModeShare Chart'>
      <cards>
        <edge name='left'>
          <strip size='217'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='checkdropdown' param='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wq8aqc1i7pomc1h0w6w91t04k22].[none:Trip Mode Description:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Calculation_1318428845111218183:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Calculation_1957940005551828997:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Calculation_2629539297139294217:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Description:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Model Year:ok]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Plan:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Scenario:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Table Name:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:run_set:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:status:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F39D6212-3B49-49C8-9EEE-AE4D0B74B6E0}' />
    </window>
    <window class='worksheet' name='ModeShare Table'>
      <cards>
        <edge name='left'>
          <strip size='228'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:status:nk]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.0h6syh50y1w4st19px68x1cnsq1v].[none:directory (ModelRuns):nk]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wq8aqc1i7pomc1h0w6w91t04k22].[none:Trip Mode Description:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[:Measure Names]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Calculation_1957940005551828997:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Calculation_2629539297139294217:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Description:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Model Year:ok]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Plan:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Scenario:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Table Name:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:category:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:run_set:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:status:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49036011-D665-4CDA-8951-4A0FBC170172}' />
    </window>
    <window class='worksheet' name='Work ModeShare Chart'>
      <cards>
        <edge name='left'>
          <strip size='150'>
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='21'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wq8aqc1i7pomc1h0w6w91t04k22].[none:Trip Mode Description:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Calculation_2629539297139294217:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Description:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Model Year:ok]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Plan:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Scenario:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Table Name:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:run_set:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:status:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:tour_purpose:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30813465-FDC5-4B36-B450-C2C1D766262A}' />
    </window>
    <window class='worksheet' name='Average Trip Distance'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1eeyfid137qi091h9q2kb1olbl2h].[tour_purpose (group)]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='21'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group)]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Description:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Model Year:ok]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Plan:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Scenario:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:status:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[tour_purpose (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C723F9B-576A-4483-AC3A-D742BBA818C5}' />
    </window>
    <window class='worksheet' name='Transit Trip Purpose'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1eeyfid137qi091h9q2kb1olbl2h].[tour_purpose (group)]' type='color' />
            <card param='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:status:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[Transit Trip Modes]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[Trip Mode (group) (copy)]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:Calculation_1318428845111218183:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:description:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:directory:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:status:nk]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:trip_mode:ok]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[none:year:ok]</field>
            <field>[federated.1eeyfid137qi091h9q2kb1olbl2h].[tour_purpose (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7AF39CFB-0668-4FA6-A5CC-A49DA4FCBC62}' />
    </window>
    <window class='worksheet' name='Transit Daily Boardings'>
      <cards>
        <edge name='left'>
          <strip size='172'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='checkdropdown' param='[federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk]' type='filter' />
            <card param='[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='21'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_1318428845116801033:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_1340383890632048644:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_1340383890741764102:ok]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_1340383890742616071:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Description:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Path:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:category:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:description:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:run_set:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:status:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FBE7AC9C-413C-4983-B672-8AA58E779265}' />
    </window>
    <window class='worksheet' name='Model Boardings rel to 2015'>
      <cards>
        <edge name='left'>
          <strip size='162'>
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='21'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_1318428845116801033:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_1340383890741764102:ok]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_1340383890742616071:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:description:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:run_set:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DDCB6D3-C255-4373-B570-BB57B43671EB}' />
    </window>
    <window class='worksheet' name='trnline files'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='21'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_1318428845116801033:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_1340383890632048644:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_1340383890741764102:ok]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_1340383890742616071:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Calculation_2503719977292058625:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Common.Agency.Name:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Description:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Path:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Transit Mode Name:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:Transit Mode:ok]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:category:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:directory:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:path id:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:run_set:nk]</field>
            <field>[federated.1s4t84l0axctkh198vk2z051usym].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93AB47A8-91E5-4A09-A3B6-406865BE31EE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Trip Distance' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V5Nc15mu+ez03mdlee9QqAIKlgBBB5KiJKql7mk7MdFzMRNxZmIuJmLu
      5moi+jdMTMQ50dERp0+f9pI6Wq2W6EkQ3lShvK+szKxK773dZi4AgYBAUARBEWJXPldZWTv3
      Xtt8e5nvXe8SFEVRaNPmkKJ63gVo0+Z50g6ANoeadgC0OdS0A6DNoaYdAG0ONe0AaHOoaQdA
      m0NNOwDaHGraAdDmUNMOgDaHmnYAtDnUtAOgzaGmHQBtDjXtAGhzqGkHQJtDTTsA2hxq2gHQ
      5lDTDoA2h5p2ALQ51LQDoM2hph0AbQ417QBoc6hpB0CbQ007ANocatoB0OZQ0w6ANoeadgC0
      OdS0A6DNoaYdAG0ONe0AaHOoaQdAm0ON5uE/RFGkUCg8r7K0afONIzy8QIYsy7RaredZnjZt
      vlGE9goxbQ4z7T5Am0ON+i/+4i/+4vP/JRNau8nP3/kE0eyj0y7wwb/8mI2UwshAB+G16/z8
      43lcPQO00lv89Mf/xvz6Pr0jQ5h1ms/f5ecdY32emwtbODr7aKZ2uXJnDUdnD0IlwbWrdxCs
      HgytHJcvf8puvExftw+1SgAUknsrfHr9Dtv+fdR6AwehA9wdXuRymtXdGG63mZ3FBRRHJyYN
      hLfucntlD09XD8XINgdFBY/d/EiJ4vE4JqOJ+cu/YHkngtndiUWnsL22js7mRa8RPttYUdhb
      ucmCP0tvTwfF+B67iSo+l+2r3ItnYvXmh9xeXGd3L4De7mJrdYuOnk5UUo3Fu0sYnR00C1E2
      /AncXjcqpcXa7ass+zP0DHRSjO2xHS3T6bEDILeqLN6+xnowTWe3j/zBOlfnNnB396GTq8xd
      u0K8qqHTY2Zr7hq3l9aoqmx0uizf+Lk/C09+UuU65ZaTP/6Tt/gv//lfkUc0NCd+iHvjx3yy
      YmT7up8/eXuWn/7yEqcdJXpefJvXp7qf8vBN9M5hXh+ssbCxj1hN8tLZIyxurGESaxw/d4rt
      5W2kThODk6fp7nSjVf+q0hLoGD7Gq1qZqHmWLiXDXOiATGEUMZOimClQK9swqCHflHG2ouzl
      zbxwehw9LSqSRFVqPlaiZDKFx+1F5+rnzdFebq3t4BzvJF3Io0qmsfV3PNhWKe0Rkfs41Zdk
      xV/Ap5VotepPeQ2+HqbPvYl45RqjL19AW8sSSAQ4yB3F20oSjh7gHpmEEqjlMpICqbU7tLqP
      c9FnQhJFSvUmUkt+sL9yqUjvxBmG8xvsxOJkAg1eOzfJzYVVhs1V7BNnUSJLhDMmioqH7739
      8oPmhCyKSIqEJKtQq0CjUSNKMmoU6s0WiqDCaNCjEoTPP5lvkCc3gVQmJo70cffjD+g6epbY
      QYupCTfjk0NsbK1iNg/g9XahKebJikVuvv+v/PTdq1Qfuoi/GQN2c4vVtRQTR72YLR0YDGYE
      pY5sdOKw2LDrWuiMRmLBLS7fnKPxBft3OTwUiwkqdQGbxYDB7sVrMyIAUjFNqpDhzq0b7Gca
      dHd2fMHJK4Q353j/01tYXV7y6TB2t49kPIP0UI+plqvh7e/A3OlDLlbo6e7+nWlT2rv7KcUP
      yGbTeDp8gI7+oV506nsPXbRUp7B1i0u3lmkJWgb6+x8pu83lw6KpsJfVMWSpYuseQmdyo9c2
      qDQN9PqsuLt9tFI5krEt3n//Ew4yZRQgvbHCBzeuEoikmF9YQKoVmF/ZJL51kw+vzfHp5Svk
      a0/znPz2ePL9khu8/+O/pdRxlj/57gncLoFkukEymcLn66HZylKrlGka9Jz7zp/zf/+f/wlh
      7y7b6eKXP7pUZmk5iLe7A6WpplYKE9oPoda7MDQzbPt3ycpmNLJC79AIVr2A/AV9dr3dQTMa
      QrJ70KmgUS2SzOTIJBO0LD58VhsDfT7EepVUMkUumyJf/rw3tkDv5Gne/v73mRlycRAtUMpn
      qRWi5GrSg61MXiex9U0Ca3tYuhykkwly2QzZYvXLX4PfEnqTHaWcIFE30WF7vKI3600cPX+R
      E70ym/vlx/5fLyTZDhc4MjuNzWKlns8iiXUUWY1OaFCotKiVyqjsPt783tu8ceEIext+fnV1
      jp5+mfFeN4qiIIstRElBY7Ry6twrTI91g/i7EQBPbgJV02zsZ7DUr/GPiRg/eutN/ukn/x1M
      Hv74z06wUvTz3/7lI05ceIvo6g1urQZpWvt4zWF+4i4fQ1HjsBtIJxOIgpHZY1PshHNMTYyg
      kzrY2T1g4sgYZir4A2F6BicIb9xgN1oEQWDy1Cv0uwfp0oBesdBlNCJZbGjMDmSLBrlaoqC2
      oCunEPtmmeyrk6iqGemxEtyK49BB7GCP+f0gDQnM3n5mxvpRqVUMDAzcL6OK8dkz2K0WatUi
      gbVr3E7de2DGT77M9ECVZN3JRIcG/3oRh0lHtlTFZTM9y335SpgsFlSASqXGYLLgVBWIaF0Y
      VTIqaty+fIVgNEmwAK9MD3Hz+sc0BSOnzipc+/hj9rM1yg2Z86cmyMQPCG5HiQR3GD/5Ei5h
      g/c+3GHy1Mt06Qtc+fR9tI5uznQLrNy5QrrUYuDoadSAxmjFrFejQkFdTXPpRh5DxxAaPQgq
      kPRG1Orn3/yB9jBom0PO70qTtU2b50I7ANocah7pA7RaLdLp9PMqS5unRJIk2i3YZ6PdB/gW
      U6/XkeXfjdGUbyvtJlCbQ007ANo8VzKpJM0vmROoZdMUm+LXevwna4GUKu/949/z8fUr3NrM
      MWLL8v/+5U+4deMuQzPTzL/7d/zVv85z7qWT+D/9Kf/5H97DH0o8pRaoxq2PLrG8sUIRF4n1
      y8wtb1BTOxCKIa5eW8AxMEotssH7n17lIFN7TAv0wbv/zp3dLAaVwvXrV+gcnqAe3eG9ayt0
      ujVcf+9Dmp2juDR1rrz/HpuhGE5PB9tzH7GRVTHU6XykRMvLK7hdbt796V+zHYiQberotsO7
      776HwTmA3az9bGOpyAc/f4fVjS3Mvg7ufvIBazsB9I5OHGbdV7ohT4Moig/6AKG5OWreDizI
      rG1u0eH1Pv6DeoKVQBWf+7NcjSSVyGQkzA+f129EJp1IobOYn+IN2mJrZRurz/ug46m0CmwF
      cnR3uhDuyyKatTTXPrnKxvY2dY2demyNa3cWieQkhoY8bK4G8HV6Hmz/rHxBAKgZmj7O0REP
      t29tUg0EOPu//B+cNAS5lungBy9Osb0b4vipGYILd3CceIMfvHIKh0n/FIXT0jM4iNOkQtbo
      aYk6XnnxFPvhAyaOzGCQymicnVRTe8SSNboHR+jy2u9rSATMTh99DhX2sRfpNSlUxAparZ1K
      KYtapaVvbIIuvUTF5MFa3GL+QMRoMNI/2M+Az0mhLtDpflS4lkgk8Xo7qDREjk9PkMqVsRsU
      tDorZVGiw2XnV2fXjO3Q7H+BF6dtrC+G0Fh7mR3vIpYr0eV1fdV78qV5OAAK0Sjqzk4sAqQy
      WQxiiduLK8RydXxeB+HtJeaX1hCNXVjEGDduL1DXWMkG7nD9zjZqqx05f8CdpW2MDi8Wg5Zi
      JsbG6jJre0m6e32EN+ZZ2IpgMcGn739MvFhDqwK13khwexODzUUmEUMlVbhx4zYF0YDLJnOw
      u48/kUenKJhMKpK5OjaLkcyeH3V3P9pCnJLGiqaWIteyMzbSi0kj01ILVPIC5169QCt/gNHR
      Sy0bxeTpQKf6ehovX6AFEkjuzPM3/3yJ3/uzP0Qlq9DpwGAwUq8/Kh/oPzJFPbTEf/n//pJQ
      4SnEYIrMwd4mBcXNaJ8LSWohyxLwaAB1DZ/gh3/wNkolRr0uff6+AKfLQSkTpiY4sOh//dRU
      9E+e5MwRD/uh1G8qGJnoHmv+GJOTo0S3V1je3WVrdYfaQ2IgQaOm1WgiNZsYHAN0Wcssb+wi
      fUGC/beFcK/YKIqCoijUSwX6j52ny1wluL1PVmXntZfPYtNrEFsiCjKLSysMT89w8uQFxjsM
      3FlYollJs7gZBKCSz2HtO8KUXU+uGODKwgH1YozdhMTx4yd46aUXMAoNkuEg+XyFZDpEIi+z
      vrnL6ZdeRZvaJV4pEAxXmJ4copwKcHV+B6fLgQAU6i0sGjVmh5bATpSDQBSjVUPqYI9Ito7J
      oAGNBjUgqFQosoJLo6XE1zdu8+Q71Ujzj//8Ief/4I/QSlUmjnm5dmkBWzTA9HdfJ3qwSz6f
      JRpNoMLEzPHjVOMJ6q2naKOJOVZXdkEfolSfxaoq8u7HVxk7/gK7izdZ3PRjSjaY7DSxsxdG
      6+ymUc1RzN87htXpRa01oFODSlGjN7kRivtoOweQUxWy+xvMzS1T0YUwX7yIsnaZ65KW6ekp
      Ln96lYOihCydpsehR1ZAozeh19+rwQYmTzI+MYHSqhLzHOGPLwwTDW6QjMTQa+8FqNXeS235
      Kh+2NJx79VWC84s0MTHU/7Sq2GfH0WFiZTOAaKpTVayg1CnmU0iFBk6PllYuRyJRpiF5iSWz
      jE0epbG5g6AI5NIxim4fTm8fg6PDqDXGeztV6bBZDAgFLaJaQ2fvEDMTnWhMZjI7CeLJNJ1W
      G4vbG8xMj7B9d4v+s+coVkOkkknKooBLo6F3YAC9GizeAexakXgqz0i3C4NGTUOREQxdaBrX
      KRnc9FWzpA1Oer0FwqkaDjnLbjBApiAxoFeTkSQcfH0yiicPgzbL3JlfoFRrobX7OD87xub8
      bVr2QWaGHCzcuk2pBSZ7NyO9BrY2g9i7R5ka7UH9W5S5xoIbxHP3apnu4Sl8dv0z7a9RzrK9
      G0JUQG/1MDHch/oLatdEaIto9p7YrWtokk6H8ZmO/yw8OgwqE9nbJtfUMjY2TH57ju2akYHu
      Hvp8dlLhANmqhKezD4OYI5go4/S46PY42Pdvo3H2YlVK7CfyeHoG6HRaqFfKCHoj1KooZjOl
      6B7xQovewRH0rRyhRImhkSGKqQR2bxe5VBSXtwu1VGF7J4jVN0CXS0utpsZi0VAqVDBZ9ORy
      VVxuB3I5ylpM4NhYF9VcjJrWjVMvEtgL0EDP4NAgOrnKXiCMp28Yt0XN4tIGM8dm7vcDn512
      HuBbzBflAZqVEorBil79DRfqqVAI+v10DQyj1/zmNn0tEyWt2Oj1WL62OqAdAN9i2omwZ+eR
      PoAkSRSLT6Hnb/NcaTabbSnEM/KYLUqj0Xie5WnT5hul3QRqc6hpSyHaHGq+wBZFIbI1x89+
      8QmCo5sOu4pP/vWf2cypGe114V+8wr9/dAtzRz9ydpef/ewdYlUtAz3ep5jtr3CweZebC9u4
      uvtoZQJcub2Gs6sXMR/m2tVbNPQOTFKB69euk6qp6fQ67u//vi3KjXl2/CFUOgPRcBRXhwe5
      nGV9L47LZWF3aQnF3oFJIxDZXeT2sh9Pdy+l+A7hgoLb/ujUxWQyidFo5O6Vd1jejmD1dmHR
      KexubqL9dVsUucHSzass78bo7OkiuHyTWwsbqKxuXBbDV7kfX51KikTTiEX3fKYapmIHqI12
      NCpIJhKYLF/fSM1vky+YFF8lXTLyR3/yJh/99Cfc/fnfURp6Hev+R1zezVIWnPz+G8f4t39/
      D8Hg4kd/+mdklj9mL1N5isM3UFsGef3lcbbXQixvR3jx9AQbaxs0RC3nX32Z+kGAqkbP7Avn
      kYpxGs3PRj28QzO8OtPN2Nk36DLryWYCZAot4okk2WSCSiGLBpFcU0YsH7CXN/PS+VMYlAa1
      eoNy/fH+TjyeQJYUtI5e3rxwjN2tLRrFPPFMhkTy1+ZKSCJdE6c41qvCf5CnKJh5882LDPns
      T3ENviYqCWIlGUmSaDWbtMR7cwXEVotmS0SWZSRRRJRkJLFFs9lCUZT7n5tIsoIsS/c/yyiy
      TLPZRJTke3lX5f6+RRFZEh9sV8rEiGdKJKJB6vdzoPFo5LPfKjKtZhNRlB58bokStWyEcLqE
      f3mJZLmCJCu0mk2arfvlun+Mx/bxoIxfT8v9yZlglZnp46PMf/RTPOMniQTnmfmeB7tqmJ+H
      C/z5+UE++cVPGZ44i1mr8K//8Jek9QP0OJ5mMrgBt6PE8lKMiWNjhDYljEYLKiGOy+1gd3MT
      +9AoHp2aG3fmEXWuhyZTC3xW0dz74HR4KBSTKHUFu8WA0enDl08RA6RCkmiyzCef+BmdvcBY
      dyeZyOO+QPe4Z4sSDofpGj1OPhvF29VHOplluNfLgxyM1kw1fptAosbIjIFsMs2lS5fom5zl
      SP/niNF+6ygsXv+YQlOgWDdw8cIwt64vYXD56LBKBIN5hqcniG1tkK9VGZ19A3Vqgc2DPF0T
      x3GVg6wmaxw5fg5TcYcFfxyDs4eLL55CVwvw8w/38A4N0qPKsrQbwTYwwxG3SJlHk5GZ8DZX
      0ilUtl6OeSVurAVR6xxMH+ng7twmvsEpRh0tihqJ0OYGYizBmfPn2Pj0EgVJ4cSFV9ibv46k
      Atk6wpSzzEooS2f/JPqyn51oEVv3OBfPHHnmK/YF1jhNPvrx35CwzvI//eAMTgdkci0y6QwO
      i4af/e1/RTP2Jr//8hQqk4c//vP/RFcjSjD7uMXGE5ErLK/u0zs8gEbRUSuFicaiqDQGgtsb
      qOxdOI1qcsUKwxPTmKlT+wI5rMHhpBkJItq86FTQqlfIFUsUczkkawc9Hh9T432IlQr5XJ5S
      MU+59nlBcN8W5e23mR31sr+fIh45IJ/aJ/eQFkms5tG6hjgy6iMZjWLvmODoaD+t5ziSprZ2
      8vobrzPV46CYT9F37BVeOnsCg1bP7PlXGNCXiZRlnE43aqFFvlTFYTUQT6Rxd/fgMOkoFnME
      /fsYbQ7MRj3cHyfpGjvJi9ODZMtVHA4z8Xjyc8vg6Zvk9Tffwm1sEvIH0Vrs2GwGDCYPPo+d
      Rq1ISwQ0FqamjnLhtYt45Sw1vQ29ukkqXcbZN8Gbb71Kh1FLvtTgxdfe5PhEBwF/BLvDiUH3
      9WT4nlwDVJIs7MaxV2/xj9kUP/zORf7+x/8VDE5+9CORv/pJil7VBxSSR+nXZ1najtHUueiw
      PkXbVxYw6BQC/l3cPWMcnx5nPZjhyNEpCvtbhKNBykU3/T4T4cA+tq5BElu3uR57yBbF1Y9P
      Azos+AwGZJMZtcWObFbRLKaJ1gTk2h513wuM+raIlfVMjJjZWQ2hlSCwt00yvP/AFuXoSC8q
      tUBfX9+9MiowOvsCTruVarlAYOUat9L3gnxs5hTNzAF1wcL00WES/nUSdS2TT+2Q9zWg0WMQ
      BDDoAQGdQY/D6yZw/QqxoIeBHicGnQa9dYBec5BypUGXWoVGgKaixWE1UKvVqDeaWNV6BscG
      WPan0Zvd99S9Kh12qwEEAa0KGqKAy2ZBrdWhQ41iMPGryllvuPcMGPRGvJMjRBYCtLRGFLFG
      tVZHbbOj0enQadTYrSouf/QBp08eh2YVrdmOSa9BJSmACoNBi9ft5ubH7+IemGZotIdAooLO
      +fUEQHsYtM2hpj0M2uZQ0w6ANoeati3Kt5i2Lcqz0+4DfItpq0GfnXYTqM2h5gsmryrEdhe5
      Or/L0fOvc6TPwtV3fkHTe5SLJ4dZvvERW/Em5157HbsY46OP79DQOfju22/iNv32HRHa/Mcg
      l0ljcbgeWvjkydTzWVomG9Yv7Trym3myFkiusrub5eTZMf7lH36OKbfJgfs8pp1fErdP0+W0
      Mdqp5ccfLuIohWkOneV7F45jMeiewhXiM1uUsuAmuXmVO0vrNLQOapENrs8tsh+vYhbyfHTp
      yufaonz4/i+Z28mgVyncvHmdzuFx6tFdPrixSqdLzY33P0LsHMWpbXLtg3fZeGCL8jFbOTWD
      v2aLcvOjn7G0sUdDZWJn7hKrW7vshnLYjHU+ev8TtneCGDu6sRs/C/Jf/tNfYxs5Tmb1BlVH
      H9YHDiMl3v+Xd9ja2yFV09HT6XxMH1OrZMmXZMyf89KoBFYIa7w49Z9/PR92hdi/e5eax4sZ
      mY3tHbwez+M/qCdZC1bpcD1si1ImlxMxmZ7OFiWbzKA1m56iCSGys7aDtcPDgxF8scimP01n
      p/uBfuyBLcrODk2tnWpkkcu3N0gVa/T0etjaCOHzefi6Zt1+gRhOi6/Lw9b1d8mbxmmEwhz/
      vYsMqLPciBrobvr5yTvXOH7hLcTYXa4u7tJU9Az2dT3FfE0NPUNDeMxqmmhpiRpeefEUoYMD
      Roa7iR8kcPYMommmiCfr9A2P0+mx3g+w+7YoduGBLUqpVUKnc1AuZVApGvpGx+nSS5RNHmyF
      TeYORExGM4PD/fR1OMjXecwW5WBvg5qsxdPVRzm1TwsdTl8vHpsee8cgIy4NecGE1/bZXOBK
      o0wxU8Mol5HMNhYuf8jyuh+T2wPYOXt6kkQkTtQ/z/J6HEVMcP32Av54mQ63impewr9xmzt3
      N9C77Kxdv8JqIE0ussLKXhxX5wA2w+OJn4cDIB+JPLBFSaYzGOUKc4vLxPMtfF470Z0V5hZX
      EY2dWMQ4N24v0NTZyezd5trtbdRWBxQj3F7cxuzyYtZrKGUTbK0tsxZI093jI7p1l4WtCFaz
      wCfvfUS8WEOnVqE2GNnf3cJgdZFNJVArVW5cu0VJMeG0yMSCYXZiWbSyjNmqJZmpYrUYye7t
      InT1oysmqegsaOoZ8i0bE+ODWLUSVQxomhWGj59jrL8TrVZPIRHG5PF+A7YoiHzyk78moJ3m
      f/798zisCvmCSC6Xw263MDh7kf/1T7/Lyvwcp//gf+f/+b/+N+prV1hPPsVC24pCZG+DVMvO
      eL8bWZaQFRkQ0Jm8vPL6y1BI4B4+zY/+4G3EUpjaF9iiuJwOipkINexYDCoefk0oisDAkdOc
      nnQRDCSfqFQ0+4b43ve+z2SvA1vXGN/77uvYxDzlZoONxdvsltSM+B6tNQS1hS5znXCxRbVZ
      pG/sRd44O02xnCe9v8n1O2uMHJ1C0Lt463svUalrefv732dYJ1EGxEqBg2Qek1mHlE1gHDnL
      9984x+z0CV54/S167L/57fyoLQrUCjl6Z87TYSgS2A6RlC288vJZrHoNkiiBIHN3YekhWxQ9
      t+YXaJSTzK3uAVDOpTF1TzBpVZMtBfh0PkgtH2Er0npgi6KnRioSJJ0ukcruE8u0WF3d4uRL
      ryLEtohX82z7cxyduGeLcuX2Jo77tij5WgurVo3ZrsK/FePAH0ZvVhP1r+OPl7GZDej1Otbn
      r3Pp+r3lsb45W5RKnJurB7hLav6pmOX33nqVv/n7v0Klt/GH/6PAz/72v5FtNekdPcXunY+Z
      3whTUrt52f4UYjgxy+LiDipjiGpzFqOc5d0Pw4zMnGV3+RZ78QJWzwD5/TWu70bR2HyIzTKZ
      6r0gMFkdCBodGhUIigqtyQ35EJrBXuRkmcz+BvO3lyjrg5gvXqS18inXFS1T00e5fOk6oaKE
      Ir/AoNeMrIBaa0Cr/VVTRKCeDvLOuyEMti5mDGZOnHuZHp+TZr1CtlBHAXRGCzqdjo6hAdZW
      38FmPE1o/RqbTQ2nzp9ANWFmauqerCJrdyAIAj02Ne+++y5G9yDHZJmyxUG3y0amJqN29qBs
      LvBuwMKFYx5WP3kPw4ULSJUqTkOTlrkHj+Xx22b3GFjfPUAw16lIetDWqVUKtMpNrA41UrlM
      LtOgKTmJJjIcmT5OY2UDFIFiLkXF68HZ0c/Y5DiCcD/gVHrsViNCUYcoCHT2j3NyqhtBpyW1
      kyKdK+C1Wlme3+Lo0UF2F3fpPfMCheo+hVyOmqTCpdbQPzyMQXPPFsWqapLMFDF3OtCr1TQV
      GcHQjaZ5g6LeSV8tT8Hezbgpjz8ep9/q4Oh0N/7dXURJoSpJ2L4RW5TfUcK7y4TTVRAE+seP
      0+18Nt19vZhifdNPUwaDw8fM+NAX2qIA5ONBtoNxZMDVPcpYv+cr3RK5VWPu1g36Zl6iy/70
      Awe/bouyv71GpqHlyNQEhe3brBW1DPYNMNTlIB7cJV2V6OgexCRm2I2WcHV46Pe5CGytoXEN
      YFMK7EWz+AZG6XFbqZVLCHojQrWCbLVS2N8mkmsyODaBvplhL1ZkbHyUfDyGs6uXTHwfT2cf
      GrHE2oYfe/cwPW4dtZoaq1VLMV/CbDWQzlTwel3IpQjrCTUzo52UM2FqWi9uQ4udnV1qip7R
      sTGoJPGHEnj7R+h2m1haWmP62DE0bVuUNl+UB2iUCyhGO5/TdfgdQmFvZ4eeodEvaYsSISlZ
      6e/4+uqAdgB8i2knwp6db9zEUhRFKpWnmTXW5km0bVGenW88AARBQKP55s1j/yPSvo7PTrsJ
      1OZQ09YCtTnUfEEm+JtAIbKzzNyqH2dnD63sPjfvbuL0dVFLBbk9t0RTa8UiVLh18waBZJlu
      n/eBFCId3OD63BJ7wQNUOiOxaBynx4VcybEVSuF0mgiuraHYPBjVAvHAKvNrQdy+birJPaJF
      cNkedXcObcwxt7RBXWWhFF5nfmWLsmLArq1z6/oNDjJVOjo8jwzDrdz8iLXdKGZ3B/V0CrXN
      +pvblopCORfDHy3iddloVXPM3bpFGQuep8ml3KcQiyGazGhRyGQymEyfsw+xQqogYjY+jezh
      60Imm8qie0Q+IbO+vILV7X1wPaVWldW5m2zup3B6Oqhngty4OU80V8WurhHMybjtxq9tFOg5
      1wANZF0n50/1s7kaYnkzxOxUH+vrWwhaGydOTJEOhYhncvSPn+T8iSNo1Z+duqtvnFPDDrqn
      zuPRqUgkdsgWRRKJBMlIhEohi9SokmnIiJUIezkDL5yeQa80KJfL5CvVx0qUbwpceOklxnvs
      FEQ9L50/RS2yT7Zap3P4KKM2GX8i98hvRK2d8ycn2dlcJ74XpFwvc/vyB9xc9tMo5Vldus0H
      l+eoP7wWliKRzRcpVyqAyM7GDoPTZxj4ipYq2dA+RUlGkSWi8fjnbyQWiSRLj3zVbMbY3Hza
      OSAS28vrPMVSKIBEIhLnYUuDZjZI09SF/qHEi6LIdI0c59iAg83dENlMirGTFwUypeIAACAA
      SURBVDhzbBJbRz+VhB9J+iYywd8IBjq9FZaW9xk7Pk54U8JmcyKQQa8XuX51AVvvJGZti/mF
      m6wYXbz+0lkM2ntaIJVag06rQavToVJUuB1eCoUkSlXGbjNidProdt23RcnFCYTzpKObTJ15
      jdHebrKfY4tSTe3zcSTJyPRpSok9PonHcPmG0Up1bt9ZQmOwcvzCyCO/ifuXiSUSeAanoB5H
      QUaWFUI7y3QbpijrOplxFUmLTXo19xN3Kg39/f1kNyOg1EnE0hwkP0Ft7eXVF2fRPuOrKbZy
      mev7NdSKwoUXz7I6d4NavYyx/wLRnbvMre1j6BimR3PAnfU6TfVppPQeB8kC3UfOcnq8m+j2
      Ane3w1SKEm/80UU2Pr5KtiUzPDbC6p1b+LM5+j0mnN2DrFy7wezLF4juBrHoKmzu51A0dl55
      uZ8bv1zGPDqCRxHZ31xENPUw2e8lelDAN9JFObhAyHSEnuoWGes4QmSVzViZ2bMvklpaIRDM
      Mz41y5HBDjwaDTlZwqv+eh7d5xsAcpWVtQNGjkxgUBmolCKkMzoEQUu1oebMi+cJbG5TdnVz
      6vyLBHa3kSUFnlCDG5wOGpEAQs84+kwEsdWgUqtRrVRQbF4Guu0Md4jkyxUq6jr1Wot6U8Tw
      kLzW7Bvi7NFZ1LSopgc4MTpMaGODktLLiRcvMtDtfuy43eMnOT47C0isXYlTyEYx+yaZsIYR
      FBVOlw1NtsLDKiZFkalXy9RrVaoNFZ4OF+6hUWKBe4t1PG0jRaOBRktC0YrUGxIai41zr78M
      yXWSgRQ9R08y5lRYPFBTKJQwmc0cRMO89sNZMGsZ61Tz7wsRrK5OkO6/p9UWzr76BsJ+gGYu
      wGZGZKjTgtbi4cTJUwzMziClwmzt7tI/3E00sIXKPUomtsb3vv82kbtXSdYFeiZOceyYhzsf
      vEsi6+a1V1wIQEtRMCkC1qFJKjfXCWpgZkCH4DyLtyPAeiTGqZd+j2Mqhds3r1PyudGp1Hyd
      60Q+5wCQQaqysrSIt3+S41MjLPuTHJ09Ti3uZyOcoW/0KF59ndWNNZx9E4Q3b7Ab/cwWpc/Z
      R4cGdJjp0OuR9CY0NgeSSUUtHWE7XUNOL1M+/RJDzjXCWQ1HJ4xsLG7TFGFjs0Y2Fn5gi3Jk
      qO++8ZUat0lgYWmFrqEj9Lj0NOV7lysZXOPueggZ6Bw5zsCvLFQQ6BodxuAysR3dwODqxemy
      Y9UZMOg6aST3eGc1iAI4e0axNOM0a7C1n2VqaoyVlR06x6cxfoXsbdfkIO9//B7rCIyeeo1W
      +i7XPnwXh9XJuVMTLNy4QUiRsPafxiRAU1LhclhRCSb2ty4h60/T1+EhWRNRq+8VQK3R3Fvt
      R6tF7epl2BagKcqo1WrUSoFLn17npTMz5ApbDB05z9KVK8yMm2m0zLz/7i9Rm31cMGlIWQyA
      gLNnglGfke2tIMenR/DY9CRrLbxWKw5diYplDDEX5dM7q0gy9B05RmBlDn8ii97ejVGvZr/V
      ZFT4+lru7WHQ/6Bkg5uInZN0fMMWpU+FVOHuUpBjs1NfStsj1rIs72SZnRnla5ICtQOgzfOl
      WMhjstjQfIkZYY1SEclgxqT9+gRO7QBoc6j5xvsAzWaTTCbzTR/2PySS9OTJQW2+HO0a4FtM
      Ww367LSlEG0ONe0AaHOoec5aoBp3PvmUpfVVahoPqa3r3F5cp6lzUotscGNugXCqjpkCH316
      hf109XFblA/e5e5OGp0K7ty+SefQGI34Hh/dXMfn0nDzo08QfcM4tE1ufvwBG4EIDo8P/8Il
      tnNqBnyOR0p0+5N/Y3HDT6auxi1F2BftbF55n5WtLaJZid5e7yNvjaJ/iV+uxznS38H2zTkU
      p4X9SBKP00JwfYm55RA9w70PdbYUktt3+fD6AskqeI0NLl29icbkw2F5ummRD7tCZLYX+XB+
      iYPgPraOHkKBAE6jwEcff4DfHyTb1NHltSMAUnGff/lwhfHRPqRmgrX1Ak5TkwomNFKF1eXb
      bEUaD5J+rWKCRFWD1fjZWbRqRZK5KmqxQkttQqtUOYgVsNpMD3Q6YrPA8uoBnZ2PJw9/V3ju
      UoiTr7xOObVLuNqgofXx9lvD3FnzMzzcjX4/jcPlpFw8QGqp6erqfmi4TKBj+BhvamWi5ll6
      lAzZvJlCtkirVMFtNaK3d3JyaogEIKV3CVd1uBxmDEY9U0ePsRJ/PKcoSRIo9y+LLCLJYOoY
      5vzMIAu3V2gq8PAyYYGSzKRRpCiD1GqR2N/kzryfautVjk8co95cedTDQIFwGX74e99l7dYi
      im2UmZkakvhsXTFF0nP29Tfo1GhAbhITJVAEeidOMDnYydrcGg36MQIH+3lm+3XslyR6DTLN
      Wo25K58QUfq4cP40R4/PsL7+md5JkUUEtYZ42M9+4ABd5xhTPVakRokbNy5TNAzxyguTKIKK
      Ri7K7YV17H1TTPebEMV7HfVmvUw2nSJZbOK2uejqdZIIZ7AaBQLhAOmyjgsvnuCbXuLs+TaB
      FIiHNohUrBwZfPQtYbB28srrF1AKCTrGz/EH/8PbNPP71OpPToS7XQ4K2QhVxY7VoEJQqR4Y
      LsmyzMD0C5yacLIXSKB+wriz2TfE977/fc5NDz34rhTd5u/++z+i7RvD+NANUqQ8O0ur+PfW
      WfHnAfD2TXD63HlOjHWjVqt/s2rxoTI+GxVuffwRH370MekHGj+Z0Poc77/3IXWrB8O9QpOp
      Vuka7CG+HbxXBK2e6WPHOXPhFbqcpgeZ4F8hFuOkKjKxcJzJM+cQSxlatTL5GkwfO86Fl17E
      ZRCJJAtIsoSAwNLcHA8rrRrVPFv+BKNjXcQPEkiIRA9ilNNx1J3jzLhkoo9rE3/rPN8aoJVm
      fn4bjVlPQ5pF10rwy/dDDB89w/biDQKJAmZnH+nAEld2Y6isXsbkBqVSDRDQG00Iag1qAQQE
      NEYXciSIZqgHJVG8Z4tya4GiIYj54mvUly5xTdFyZHqay5cuE8hLwAXGumzICqg0Wurpfd59
      N4qrb5Ljbg1qFTj7j3D+YgcrmwEylhH095+PZjLCyd//UwatCgvLW6i1WjRaNWn/KouijJLZ
      Z2N3n3hLw+zkICoUENT0WODn//4err5x6vvrXLmzhCy4efXNV+iwfdXUrZFjL5zDq9ZgMEAM
      ABUDR05gbpVoWgwoioJcihCO5ynXGmQqCrIyDoAsK5QKBVpmM2KzQqNRo1ZvYjB81izTmG3Y
      DBr02s++k0SRarGEy36vBjsIxxmbmUVuLtJ6uHiChv6REUxaNbLYpJBOkq+16MGG02lGX9Hx
      FItrfW1864ZBQ5vzhJIVEASGj56m12X8zT/6AmqFBEsrWzRlMLq6OTk1+gW2KBKBtUUO7q+E
      OXb83JezM6kXuLWwSqMlIegcnDt37KnFbp+724eGQeu5KIubQRRBzeTx0yj1Eg6LkUKthdNm
      JpOIY3L5UNUK1HUW7AYthUQSrdtMNa9gN0usrfnx9feTCG1TbYHN08+R8V6UcoqCyoVQL+By
      Ochmi1hNWkp1BZO6xvp2lJGJIep1Abu2ysrWAXZPJ4MDXgrZGl6vg1ajSr0lYLUYSO1vE8q2
      6PB04LHowGpFUynQMLoespX8ZvjWBUCbz2jnAZ6d9jBom0PNN94HkCSJavU59Hb+A9JsNts1
      wDPS9tX4FqPTtddheFbafYA2h5p2H6DNoea526LEAxssbgSxd3Qi5SPMr+xi9/qoZw9YWFyn
      pbVgFqrMz80RSlfo7PA8kEJkDnaYW1ojdBBFpTWQTCRxuJzI1QL+cAaH3cTB1iaK1Y1RDcn9
      TZa3D3B6fVRT+8TL4LA8Ou4e3l5icW2bXEOFRy9SlPUkdlZY2dpDZbRjN+sf2V6upNmOV/DY
      TeRiSTBoKVVqGPV66sU0gYMsDpftkTeNVM8zf2cRwezCKNRZWbhLqirgcdm+8kwnpVlmYe4O
      0VyLjg7XE/bTIBErYbJ+fbYin0+LTKaMyfT0OQ2xVadYbjySf3haqsUCoqBGq/7iiTOVSuF5
      1wB1GoqNmUkPm6v7LK37GR1ws76+g4SB8fEBYv4AsXQGT+84xyaGeNhE2O7rZ8Knwz4wg02l
      ED7YIFMSScZjhEMhyoU09VKedF1CrMbYTQocnRxBIzXI57OkC4+nXtKVBsdnTzDe76OZPyBZ
      EclUBI7PTBDf3qL2aw3G4O4+B9EAMgrxXT/BwAq/fOcdlv0RMrkypUzi0YSQorCxtELXyDB7
      G2vUqmVcAxNoqhHSpa8+3XttcQnv8FF67SqqrSdtVWNvN/r48hJSg9WNna903FohRTRdYD+w
      SaHyq/I3CR+kvtL+xGaZRDL3mzd8CLlZIRCOPfi7kElRrD3u+PHr5POp590JNtLbbWZxcYeR
      mXEi2yIedwf+6C5Go8L1K0tY+45g0jSYX5pny+Lh4oUzGDT3bFE0OgMWkwGT2YJWaeB2eikW
      U8g1CafNhNHZSa8nfc8WJRslGM2Tie9y9OxrDPf3kv8cW5RaJsLVaBpX/yTH7y8EU0mGuJoK
      Y/UM/1oCS6akqDnlFggW743GuDqHmD5u58hAJ1qNmnIu/9gxmnoLvV43pb0QitOHfn+bjM6H
      2/rVp/r1dDm5fP0yPZMnmVVyfPjzy8gWFzNHR9iYX6Shs3LhwlEAiokgC0ubNBQrr333AmJi
      j1s375DKVBjtF1hZitE7fRQ54ieaLzJ08iI1/zWSZZmSYOc7R618cvcA39AkRxwCuVoT//Jt
      RG2UV777Eh4jxPyLhA/W8YycYNhYYG4jhME5yFSvijsLu3j6jzDSIbCyukNd7eSNVya4/MtL
      VAWB7tFTAMS257izFUdtdPDCmIfLK7toqiUm3/xjxl0atuZuEsqXGB4eI1dt4dJWuXZ7nVJN
      5sLrFm5fvk22WmPk2Mvk966Rq2oY7vewuh2hc3iKPnP5OQeAUmN1I8Lk8WPotFq2SksUiyYE
      NNRFPRcuvsb2ygpVdx/nX7vI7uYqkijDE7zkjS4n9XAAoWsMfSuCLIk0RZFWq4VgczPQ52a8
      s0WqVKaplxHFFqIkPzIf1eTtZ3ZiGo1GQyu+AoC1e5Rxm0xa5bwnZ7jfgJDye2ztHBA2yZgL
      JnyAoFIhtlooikKr1aQlirRaInqN5sGKTZp6mUShRE4W6EwGyShOjow4n6k6tvdM8qPeSfbn
      P2V9z4Vr5g1ODJjJhdepypBNxihVRgHwb61RqitoNTXqTXD6hjh1WuD49ATx0CpTZ15mwNHg
      0m4DxDKB/RQ99i6++9IMS0trGGxuLLoIrWqNpt2AyuBg5sRJnJ0T2A0aoEXXyCwz073MLa+R
      rzdQUEgEghw9chKTQUOjUWV3I0ChpkavqVNNBeg4+0PGrVlCsQYgkkqJvPaDH5DeWiJfaDD9
      wquMKSGWGveawChqzrz2HSy1FJlAlkqxwonXfgApP2I6xEY0j9emp9GooehcvHHhDM18hEAg
      RqtaQ3RannMAiCL1cpob1+L4hqY5NjnA3fUDZs+cphrdYiGUYnByFo+hysLcLdyD00Q2bz5q
      i+LowaMFrWLCo9MhafVo7HZkI5TjAZZDaeRQGs/51+k3L7EV1jB7VM/8nXkqIizU8xST0Qe2
      KH0mhWtXr2DvHmW2rwevRoPY48PrdaCKHrBw4zKJ/D0pxNDYLD/4w7cxqSCRTKETrZhMVhzs
      sh2KIGfDJIs1KvPzFEt5Wi0JQe/mtRenWbizTN/RUyi1MJHdFSL7Fs6cPoX9qVZr/IzIzgKr
      /gSKoOfsxCBrVy/xYcDBaJ8DRVFhs1lRCyq0Wg3D3QMcLATRaHX3glJQI2VDXLrWYGzYiEGn
      BRoosozebEWl06C+b0Sl0Who1evIKEitFqjNqFGhazS4+vEVzn3nJTxGgVRwmXfDm/QePYuS
      20ZQ67BZdYiNOpIMithiZGCAxFoYjU6LxtlH5L1/I2Yy0TlwDNDQ0ann01/+Ao3ZzdmRDvIq
      AUFRo1EABDRGCwaNgCCo0KjVGE1mrn3yC2RBz+lzx+i2xGkJarRaFSaLGbUg0LxfdrHVQlAZ
      28OgbQ437WHQNoeadgC0OdS0pRDfYtpaoGenHQDfYmRZbgfAM9JuArU51Dx3KURyf4e1nQNs
      7g6kYozljQBWt5dGLsLK2hYtjRmTUGN5eYlIporX43oghchFAyytbRGOJlBp9aSTGWxOO0qt
      SCiWxWY1EvXvopidGNSQjuyy4Y9id3upZSOkKgp286Pp+ujeGmtbexSaKly6FmVFRyqwwYZ/
      H8Fgw2Z6NEUvV7PsJau4bEYKyTTotJSrNQx6Lbl4iNXNPfQ2F6aHLNilRpHlpVUwOTFpIbwf
      QtBZ0D+l5+XDrhD1QoKltU1i8ThmZwf1chmdWmFnY4VQNIPB6sCou79/qYY/lMTpsKLINXL5
      Jkbj/fNSZJJhP1vBGGa785Eypfc3KQk2auUCZtNvmomnkM8XMBierztvaGsDrcOD7gkak+cu
      hSg3dAz1mlhf22dpdYtOj4n19R1aooqebi8HO3vEU0nMzm6G+7sema5odnbQa2mh9QxjlEX2
      Aitk70shAv4A5UKaYjpBsi4h1uL3rD76u1BJDbKpOLFs8bESJXIlRkbH6O1w0sztEy+LJHJN
      RoZ6iGxuPiaFCO0E8e/7kVGIbu0QCq3x3vsfsB6MUKrCQJ+T3Y17VuoAKApby8vYOzvZWVuj
      Ws6SyOco5p5uvZVfpxxNYe0fYHhoCJNa4iASQ27UqaCnv9PG5urWA0lGKRxkey9ESVIQxTzB
      YJZybItwEVq1MsWmil6vjs3d6ENHaLKfatJhUtgNhL5UmQ4OIs90Tk+imQ8Tzn+R1KHBzlYA
      CejtsbHjTwAgtRrsh6OPbPncpRAD/U5WlncYmhwhuttLd1c3B+ldTGY7i1fWsfZNYVDXWFtd
      IWj38er5k+jvSyF0RgtOu5Wa2YleyeBxeSgU0yhV8YEUYsD3mRQiFM+RS+0z/cKrDA0OUPgc
      KUQ9F+N2PPuIFKKWjbFYzGCw9/zaBZMpKmpOuSFUuveI29zdjIzrGeryoVc12Vjdond4/BHx
      WV1rZqq7k/pBFNnuo7+7QuuJ+p0vS4Od1VXiag3Tp1548K3BbMXptKEJ5R5ogA4KdV6ctOEP
      VzjaBXKrwfLCHSJKnAsvnmFkqI/97Q28Hb7Pdl88oGXufXAejUqKOzeWaGhNnJ4dY/7mEjI1
      7INn6SLMWjBDrqVlZuYozXKBrXCCyW4b64kWlmqI3USdkZkz6It7bIUzOLpGOT01SD6yTk43
      grUZoia4iAdWyFZUnHjxOAd3F8nJJk4MQMnaQ2R7iY1gAlvvBIPaBLf3yqgEgckhD3N31khU
      6pyfnUSpLgKdyKJIrpDH1IhyY7eImucdAEqdrZ04k8dn0WtVbJdWqNXsoKhoKiZee+tN1ufv
      UvcO8dpbY2yszCO2ZPRPkEKYnE4akQCKbwRD69FIV1kdDAx0MNXVIJovg/nJtihnj86iVkE1
      vHjvu45+BkwtCgbPI55AcjHI1naIsEnGUrLSAai1OlRqDXqtwt72AX0T01iN2kcCQF0rk63W
      yUswCk+51taTMHLshSP4NBo0arj37pUJrd3i7jWJl3/wo3s6JrnC7toaB24nZanM0a7+B7Yo
      3ZYZum0Ntje2cPSM4rU/1Mxp1FEemoDTqhSpSgrFUoJ8sRfP4BQz40ZWV6vkFQ1vfOc7bKyt
      A6AoCqIkgSIjShIWmx11sk69VmJvdQvF5qZ8f5ag2dVDcHeH/7+9N2uO60rX9J495DwgBwCJ
      xDyD8zyJUpWkKtUpndMRp8Mn7Ajf9IX9Gxy+8d+wI3zhO0fYEW1H9wn36aqSSkWJMwgCIOYp
      RyQSSCRynoc9+QIQRYqkRIlssnWE94ZkMvfaa+fea6/he9fz1XWBgSGNaFNBKZfYy1cRbD4+
      vnyWVnwaTdMpVcqARmw7yehJNxc/uIqR38DuH+D8eStTZyeQAPHbYcNRPUTZwoUbnyKXNt+3
      FaJNPr1NPBEhOH6Bc5N93J/d5MoHN6gm15iOphk5cxWfqcb07b/ROXaB3c3nrRD9HUH8JjAZ
      NvymAKpswuTxoFkNiol15tcT6CRw/fZz+kyzLIRNXDnv4869aarqIRWintt/aoXotTT44i9/
      wjtwgitDQfwmiY6+IN3dXsy7cebur3JQOrxZw2Pn+Id/+jc4JIHUfhqzYsNhd+JorbMUktFy
      KbaiUXy+bqrVHO32kRXig1M8ejDNyPnrlBNrzK7EQUpgct342VgUQWzy5N5d7JKJC9c/QhRF
      QGLkzA0+9dtYj0bodJyC7C7DH/0DZ/u9LD16RMMQEEUBRInF+7dQJoKsh7aw76XoHDzJ+an+
      w3Gypwt5Nw8EEEURXVNQdbDZbQgCSKKIIByWZW6V+epvt2gYFs6eBdkkUdoN8822gbn3LG3a
      GIZGqwXBPj+7JTCbDi0gstWJuZqj3TOJbOhomobZakcSBCx2B5IoIIgigsChnUEyYZPNCKKI
      JAroooiATPVgiwdPNG6eH0FTjxqAAKIgIoggiocWimMrxC9Y75oKsfJknonzF7G8rfQs70DF
      7VWyjjHGO1/+YjleBj3Wa+vE1DD15i8r7qA5A4z5La/8/+Me4BesYy7Qm+u5OYCiKGSzPzVp
      8rHelzRN4/j99WY67gGO9avW8RzgWL9q/UADMMjvRbhz+w7bB2UMQ2Fl5h5PNpMYhkpkeZZb
      t24xt7GD1qwwP32Pje0M+nF/cqyfoEqpiKq93jymVSlTV95uYsBXe4GMBkvzW/gCDv70n+/i
      aUaZK/tprn1Fs3OCr//yF85dv0an18PWg38hJXQSnrlL1/gp3NbXDS+0eHLvLk9WVlEt3eTD
      MzxaWMOwdaGlFvniwRLFOrjEMrfvPCBZaNMX7DrMXn6UIeZvf/uKhfABZknkyfwcgaFR2gdx
      bs9tEfCZmP3mDmr3CB2ywtzdW6xEkni7eoiv3CdclBjo6niuRvN3/8T8aoiW4GB76R6LayES
      +zU6bE2+/uvXhGN7OLuDuKzfbV382//3/+AZPkV+c56Guxfn08uv8s1/+pK1SJiKZifQ6X4B
      R9Ko5SlWdBz2FzEg9Z1NUrKPjtfIGrG7uEjT34kdna1IhE7/S7KytDJs7DTp9NqffqRpdSoV
      Detr3zMAnXK+hGyz/oQhhEp0I4qj08dTd5FWY3V9h0Cw+2mOBKWR5/6tb1jZiiDY/dR3F/n6
      wSKpYp2+gIuNUIpAt4+3klKBHzTDyfQND1CMPWGn7qW9vcPFf/o3TMgZbsc0Uhv3MFk89PQH
      2Xwyy6VP/i22gw0KzkEGfPaXF/mCRHyBAfr9JvI1g3pD4zc3LhCJb6MVDmjavEyOj1HLJBk6
      /yFGaRdHR9eRQUvA4Q3Q79Jxjt+k36qRq2aw2vxUSxmUtk5waAiv2KZm78RdDTO73abT56Ov
      vwefw0ypJdDjdz9Xo0RsE9Hipqunl9JBErPdhc3Rgcdlxds7zliHwYFmpdv93TUWi2lKZTC3
      8mguL6sPbrG8GcfV5UczPHx44yTbkQT51AbLK7tIYpH7D2dJ5hW6vBLNKuxEFphfCmH3e9ic
      uc9i5IBCYoHFyD6+niHc1h82yuXi24jBXpyCQSqdxiUpLK2tk6nodPldZLY3WVxZpSZ10kGO
      uSer6NYOcrEZ7k5HMHu8iLV9FlajOLyd2MwStVKeWGiNULJIT08nB9EVViJpXE649eevyDYV
      LLKEZLWxn4hhdnRQLmSRaTE3M0dddNBhN8juHRDdz2M0mri9dnLFOg67lWI8hNI5iKNZoGly
      ICklSm0b45MT+K0qmYaISakydfUTTo0EMZltZJNROrp7ML2lWMSrG7Bg8OhP/xczGQ//7r/7
      FLtFp92GZrOB09fD//Q//y9cm/Tz//6HL9FEA1XTaSoaJvNPcTSKFNMRtgtmToz6kSQToigh
      CDB5/RM+ODfJ/tYWDQRkSUKSxB9c9fD7vJQKKeqaA5dNQjKZMR+FwXWlRffISQY7JWLbWayW
      l4OXLB3dXLhwgV6fA5s3yIXzZ3DSoNFu8OTB1yym24x0P59XTLJ46RSLpOs6tWaBwPA1Pr44
      Ra6YZz+8wBe3ZuifmqKpiHz0uw8olDQ+//xzeo06JV2lWcyyGUuiKTXKqW2EgYt8/rvrnD9z
      kRu//yP9np8OiSqnk9h6J5EbSWJb28QKCqdPTWAzSajNOoVClrsPZwkODzM+foo+l8Ddew9I
      7WxyZ24TgFI6Scvahb9dIVuJ8+U3i+zGVlgIVxgZHeP0qSn0Rp6D3TjR8C6ZfJLYTomFJ4sM
      njhDMbTIfi3D3FyMvt4A1UyMOw+XsdgOXx7ZcguvzYTVXGdj64DkVgSsMjtrs8xHMnT53AiG
      wvStP/Pl3VlaqkGnyUzReHtLv6/u9yo7/PNf5xg41eI/fqHy+e+v8H/87/8bsijx3/4PEl/8
      h38mUy3hHbrGxb5O/uP/+b8iWLr4H7vdryzyBbUzPHiwgsVtRxEuQC3Bv3wRYfDEFULLs8TT
      JWxdYww6De59+Z8wdQQZO/VqaoJo86AkopjGL6KnSuQS68w+mKVoj+P49Dc0528zJ5qYOuXi
      ztfThPIaovQp50a/M32Jshmn04WEQi2zzd39PSSLn7O9XVy8+enTxHHPSyA4PsbCv/9nAqfO
      EVu8x2pb4uLNi/SMX+DChcN0S0VXB2ZZpNuq8Kc//xnJ1cs1oGZ30el2UFUlTJ4gjdUZ/hz1
      cPN0B3Nf/QXLbz5Eq9XxWtsojj46nS/eNneHSHSvhK+jRr4m0uMx4+5wUcuAqmqYbHbsZhHd
      MNhO5fnwk0+4e/8xZosVQTAwiwLOrmGuXb9Eu3U0zpZs9HR3IrQrKFoT/9glPrs2RFPT2Fsv
      YbJacXk6uD0f5tTJINGFCD2XrpJbT2B3OjEJBrogM3riJD6nmX1/P7LW1jVmewAAIABJREFU
      oNJU8DrMmAQBTTCQXCNQnaZgdtCnVhHHL/HxwD6PonEme8b4wyk/89MPaLU12rrG644vXkev
      XgY1jBcJYq9X5OuPz37GOcKL9wk94wUa6bJzyOn5ebWtF/aYfrz41Av04eXTSIKAwMvrJggC
      B/FV5tcOLc49Y+e5ONn7g+cQjn6Qw5/6u7oaapNH92/Td+4TBryvjla+qrxnZRga64/vkqxZ
      +fCj65Q37nIv0WBi4gznJwJEluZIlhSGJ8/hau8yF8rRNzzAyeEgi9P3MPedocs44MlWipHT
      l5ns91Ep5BHtLoRyEc3nI7s2w+Z+k7NXruNo7PIknOXKjSuko2GCo1PsRtYYGDuJrOS5d3+e
      zomLnOi3Ui6b8PvNZNN5PH4Hyd0iA4O9aIUoa3kX58e6KOxuULYM0u9o8/jxLFXdzuVrV6C4
      zdxKjMFTh3Wan5vl/MUryNLbGQIdxwH+lapeyKC7unhJZ/FfkXTWllYYPXUG6yscvs+qntkm
      0XAxNeh7a2zT4wZwrF+13vn7Qdd1Wq3Wuz7tsY71Ur2XBtBsvp0tIL92tdvtYy/QG+p4CPQL
      1rEb9M117AU61q9a73mNwCC7GyOZazB+4iRS/YBQssDY5BRi/YCNWAq7p4fxAQ/RUARb5xB9
      Xa6jFQCDUjpBdC8PgkRv/wCtRoO+gV5oVtnN1ekL+jhIJHD2DuMyCeT34yTzLcYnp9DK+1Rw
      0ut3PVejdGKLvVwNf3AEUzPNfqGBJzBAn0cmFIqCzcvE2ODTABvAdixG/8gIzUIW0d2J7Wks
      UGF7Y4t8y2B4fBKv48WAVrtZpanIuF0v7lhSayWaZjdO04+vebQqGbZiKRDtTJ4Z5/UXVd+C
      lAa5hoHf/TZX6N+N3jsWpVjW6fLC6uoOC0truG2wuhElu7ON2d+D3+NkL7pBHRvxrRWa7e+6
      fIujgw6KtGwBpHaTra0nFKoamdQuW5shqqUs2d0d9hsaWuOA9XiJLl8HKE0OUjvsvCQTyW46
      Q3egB7dDZvegSKDLy+5WiFy5iCpaMdUOiB6Unjsmsf6IyF6VTHSdfEtjL7rO0nqEttYglW0T
      8NtZX9kgV8gRXdug1iqzMDdLMltB09uoik4+FeXJ8hZNRSe3G2ZucZO16a+49WCGTPXHM8dU
      kmmkTj/d3V5ol0gm8691B5RKmp3cq9PWJhMx1B8bZTULbCVffx9JObNPrvJ254F7W1vUfsZx
      7x2LMjLazdpKiKHxXvaj/QwN9rO/HEKVNWKrTyj3TNJpNhieGGVfrdBsK9jMFkDA6vQQ6PSi
      OQLYv8WilLLodRVfhwObt4fR3kMsippPkjgoUCjsc+7abxkbHaHyEixKq3TAQqbM2Jkr1Asp
      FvNFvIFRTIZCaieOSTYxNvD8z+buGaORCiMA7XKaSkGnw1wiuidQze8T1gqYOoZYm7mNb/JD
      osur+PqH2V5dRTrbQzNdZGVjlma9jSYptKswNtyDLvSgesZwW1/nPdUmGYtRtvk56/JQLqmE
      KymcXg91zcpon5/d6BKboTQNTcVps6A7AtwckiipDmpz99kpKEydP0MutEK2LnH+xlVKhQLd
      fjN/ub2BKNYYPPspcm6V6H4RzR7k7z86/7QG2cQ6TzZ2MMxebp7qIKn1I6TnwXcKW20fz8Qp
      3DLUamUQXTy5+xdybQmTe4Cro1buPd7EHhhiwFxlczePwzfARK+Z5ZUwDUXD5bDRFF18cn6Q
      Rwsr6IKNCzc+wNo+YHZmBvNBgZP93eztxLAHprDWYySydQYmr2IubBLL12grdq5e7mPh8Tqu
      wMh77gGMFlvhPUZPnyPg7qBWPaDZrIEh4gpO8sfPPsHcLKGhUSrXqDYamOVXt1m7z0tzL07L
      8eww5FCis4Oh4RN8eHmcSqHyyjIcgRE+//zvOdHvwR2c4PO/+z0eNUdJMzMydZobH33EoN/5
      vcJNjA24iCQK6LqG2eaiw2lH1TQ8PcNcvHydq2dH6AgMc2KoG00Hn9eHWdDRAEPXcAfH+ewf
      /sio34ZgceLzuHE4bFgcbsyvFfW0MHHmLGemhhENjbYqEAy4mZ3dINjjA0AVrVy68RvGhvu4
      /uHHdNp10Nq0NbDbbYgitBUDu82CJOq02zrtVgvD0AiOX+R3v7+KmivRkDr47NOP8HzPoJfK
      Frnx8Wec9etkrEHquyEU0UmrmKCgy1RjC9ybWaLeVtA0Has7yG9/9xk+q0I8fMD1P/yBm6cH
      2Gua+OyzzwiYi+TqMlMXr3PqxCgXL99kwG9lb2OVbFOl3apSbyhYnd2cP3+eDz+6jl1U6Rw5
      w7kJP9VyGwyFWHQHQ7Rz7befcrrHiWa2YTFL6Hr7fWNRWmT3toltRwmOX+D0aDf3Zta5dOMD
      tEyIr+f3GD9/hUGPwONHj3ANnmF34+HzWBR3AK8JTNjwyQE0QUb2edAt+iEWZS2ORgLXx38k
      ID7mScjE5XNe7tybpqy8iEUZ7w8cWTlEbGqRP3/xFX0T5xj0OGjrJhx26wtWiGAggKOzi6GR
      IkF/DwcHs6yVbFy9MkXJ0sTldAAQ6AkiCHDq1Bj379wmeOIyllaWlrObUbnK47lVzl29zoB1
      nW8eZvjNtXGy975h99J11OoPe4FAxOZw4JRlmnUwNIXdVI2LF4YJx1KcGe8FQUAUBARRemo/
      BsAwUFQVtdWgUq1h1nTajSrV1ne0LlGSDo+XZFrFXb76JkFd9D1XA7/bxv2v/4oq2PndKQf5
      xjZy98cou/MIPT30jkzSCyTDq4dlHqFUBAH6Bz3c//IrnIEBAkKVL//6VyzOAFN+AY5QKOLR
      d7uG+xCmQ0geN6ajV7im5rl3e4YTA504PTYEdBqNFpLNhoABHJopRQF0tY2m6TQr5V/eMuj3
      q/syX8yblPc6XqYXjhGEnxWa15UGKysbjJ29gEP+6SU8uwz6bZ0EQXh5bEAQ4G3cakNjY+ER
      yWwVV98UN04Pv7an63lP1Nur18uu+aXFvuTDX1wDONZ3Oo4DvLmO4wDH+lXrnc8B2u02uVzu
      XZ/2X6WOsShvruMh0LF+1ToeAh3rV63jBnCs96pqpYz6miyddq1CQ31XWJR3ohZLD+4zv7KG
      Ye+mEJ1j+skagqMLdX+ZLx4sUqiDW65y9+4D9ooqfT2dR2vYh1iUW7dusRhOY5JElhYX6B4c
      RskmuDcfostnZv7uPbSuITpMCgv3b7Mc2sHXHWRndZpwUaS/6/k9zAv3/8LcyhYtwcHOygMW
      VrdIZhp0WJt8/dU3hLdTuLuDOC3fTZ+++Zf/m7XILk3JRjW+jSkY+HEvjq4R31xgMV5guLeL
      3M4Gdx8+pia46PE5f+zoF7S3vELT58OOTjgWw+/zvfilVpat3SZ+z3fcf11vUKnoWCw/ZTpo
      UClWkK2Wn4RFiW3Fcfi9z2BR6qysbdPd8y3qBpRmgQe3brO6FUV0+qnvLfH1/QVSxTq9XQ42
      I2kCXe8Ei/IuJOD29zLQbSZT0qjW23x04zzh2DZ6MYPq7mZybIRKOsHA2ZtohR0cnu7vYVG0
      p1iUbDmN1d5FpZCm2VTpHezHbTSpOrpw1yLMbSsEujsJBjtxWyWKLZHgC1iUEFaXn65AD4WD
      PRwdHkxmOx0uK97gGKNunbRmeQ6LUqprfHD1LNFYArnRwNrdwcK9r9naK+KVFe4+mmFlOUL3
      yCA2+bvoqdlqplprE+x2sDy3itnlIRAM4nZYfnJcIRuLIRxhUfb293GbdNa3QuRqOn6vi+xu
      hLX1dcp48YglllY20S1u8olZHszEsXg8iPUMK1vb2Du8WE0S9UqBRCxEdK9EV5eP7PYmm/ED
      nHa4/cXXFBQNiyQhWaykdxOY7W4qpTwSbZYWlmiIdlw2g3w6SyJTRK3W6fA6KJSb2G0WSokQ
      Ld8ALqVCy2RHapcpty2Mjk/QaVNJV8GkVJm4+gmnR4KYLHYyO+8Ki/JOJFHJbxPPSJwY9yOb
      rEiijCDAyMWbnBvtJbmxRRMBk0lGlqUfXPXweY+wKKoDt11GMluxmiQEQG818fSN0OlQie3k
      sdusL33ITE4v4+PjdLqtWFw+xsdGsQstWsohFmUh1WToezCtva15vrozy8DoOADtVoVmUyef
      2aVSbdF34hI3J/ppGM9034KI3WY/rIOhYcguRscGSUU2ab6FXr6UioOnD7UUJx5OEE5XGRrq
      wyKJtGpl0uk97jycxdfTQ2/vEJ1WnXv375OIrHJ3PgRAMZWgbDiwlXNkqwn++s08sdAiC+Ei
      wWAvI8ODtCsZ0nsJQhtxMoVdovE8S08W6OwfJrO+QLp2wOOZLbx+L7Vcgvszy4imw/4xW2zi
      s5sxi2XWQ1mSoQiq2URyfZa50AHd/g7QWkzf+jN/u/+ElmbQJZsovRMsyruQkmX64Ro2rxPD
      bMWoJvjy1jaB0bPEN5dJ5iqYOgYZdOhM3/oLksPPmPXVWBTJ7kXdiWEavYC+XyK/G2Lh8QJF
      +x7Oj66iLj5kXZYZnfTy8N4cobyKyfxbTg91fVeG2YrP50dCoVFI8aRYAMmFv7fzlViU3slL
      nL9wAdBYBZRWnZYm4XSYwBCQTfILEWtdbbEwfZuVeAlFNNHt0ViYX8Lm6eU19oe/IJdbYHu/
      jM9dp1AX6emw4Ov0US9JtNttLE43HpfIdhl29vNcu/khD2YWsDucmC0GVlnE4gly8/IFVFX4
      9gelLxhE0JsoSg33wFk+uTyAIgikN8vYXS6sRgd3FyNMngiyvRih+/xl8ps7eHw+CpKBiszI
      1GkCHTayHd0IepumoiEA0hEWRfaMYGzOkDfbOKPVME9c4rf9KWbi25wITvHHM17mph/Qamko
      hsHbzDv5fpdBDR1FUdENA1GSkcRDho1sMoGuoWo6kiwjCqAqKoIkE1t+8DwWpdOGIYiHGBPD
      OAx1i+Lhn4aOqmoYgMlsxtBUNANkSUJVFQwDmuUDZueXn3qBbl48hSwdlqdqKpqmI8kmJBGM
      o3RC3/cCnZ8IIokiYKBrOoIoHNZXFA9TFQkCgmFQ3AsxvRTBAPxDJ7k00YtugCjJyKKAoqpI
      snxU1k/9KRWWH91jv2HmxocfUNu8x71Eg7Hxk1yYDBJenGW3rDA4eR53K8l8JE9Pfx9nx/t4
      8uAu1oGzeNU0S5E0I6cuMTXgp5zPIjk6oJhH6/STXn5E5KDNmSvXsNeTLETzXL1+mb1wiP7x
      EyRCKwxOnkZuZrn/cAH/2HlODtkpl0x0dlrIpLJ4Op3sJIsMDfeh5sKsl72cH/WT216jYhui
      39Hi8eM5qoaNi1euIBS3ebK2Td/UBU4MdbEwP8vZC1cwHWNRjvVDqufSaO4Arld3mO9fhs7K
      4iLjZ86/JhYlTrzm5ORQ51ubBB83gGP9qvVeqBDKmyfFPdax3oreeQPQNI1qtfquT/uvUoqi
      HLtB31DHQ6BfsI7t0G+uYyvEsX7Ves8NwKCQTrC2HqKu6DTLGTY2w0//vrq6SnTnAE1tEg9v
      sp+vPrPzyKCS3WV1dZXVtQ2yhRJ7qTQaoLVq7O3n0A2Ng+QOVUUHw6B4kGRjK0JDNagWDjgo
      vDgUy+7FDs+7m0Vrlqm1dQ52YqyubZApvUhP0JtlkpkSYFAtFGmrCtV6A4B2vcxeKsv341p6
      u0ZoY5N8tYWhqxyk9qg1f5z88ENqV/NsbmywsblJtaVTqdbQ1TaJ6BaboQiV5jPzLr3F7l4G
      wzDQ9SblcuOF8pRWjb1U+seJED8mXaNYKr9hIf/l9N6xKJlMHZu5zspakoWFJUSjzspGnOx2
      BMXixGY1k4ptkG8YbK0vP4dFkUxWpNoeec2BXquxujJLoaaRTSVZXd2gUjwgFQuRqmlozQyr
      oTQ2qwm91SS1EyWaehEdktjZwe5wYreaaGWj7FYU4okDHDaZ8Mo6ze8NGHdDYZa3ttAx2FlZ
      I7Eb4tbtO0RTGdKpfbYjUZ6b8hsG4eUFWoLAytIqtXKWSDJBPvfiQ/hTVN7ZpWm14nA4kASV
      +HYSvVljv1DBKqmsLG/xbROr7cWYX9miphmoSp5wOEstHSb1lBWgsbeTZG93m8bTdlkjHjt4
      /qRKg1gyTS2TIVU6RMXsfB+jorVZD8fe6Nr+S+o9NwAbY5N9NCo6/YNOrK5+JsbG0ZUKbU0j
      GVolkSrQaOuMTU0RcNtotr99nATsHX4Ggl309A3gtFno7OykXMpRrqv4O+zYvEHG+7sRhCMs
      Sq7AyuoGhRZMjI9hNb2YzaZVybG2ukps77tNO2qzwn46g2Gy8vwROnlN4pJfYrd2eNctNhde
      vx+v08nA2CQ+54swrKpk58zkGJ2ihuHpYWyo+y3cCJX8wQEHBwe0n3Y5Ai5fN/39vZgNlW+f
      y0S+wc0TbqKpw0anKy0W56a5d+c2e4U6IDE0PoXfbXum/BalUov9tXn+eucWX/z1HtV2i1Kt
      TGh5nnvffMPWbpFKqYShlnnw9d/4299uk3uWg9wo8Hh2hgePF1hbW6Hc0FhbW6FdTvDFn7/m
      yy/+M5H0m70IfqrerxXCaBEK79I/cQqXXSZeW6fV8oMh4hk4yR9PW1maXUdz65QrdWrNJib5
      1SmYHF4Pjb04Rucgtvb+c/8n2l0MDfdwMlBnL1emv+/lj5wjMMK10xeQRKgnFwCwuHw45Baq
      P8Cze9f16g6bG1GSdh1X00sXYLE7cbqadDhfHbAXm3VKzTYVHSzA27nlJvpG+umSZexP76rO
      9uoMi9M61z77HBOAXiceCpML+Mg1Wpzo7kU0WThz7jy9zrP0el5VvkqjoaBLEudufowRWaXW
      1mi04MyJs3gtFob8HuZ3G6iNKg0VlOou25lnrs7Q0EwdXDkzQWR1Hs0waDYbGLqN7rELnBys
      E0/UIWB7VSXeut4zFqVJOhknGj/EokwN+rgzvcLF6x/QzoS5NbvH6JnLDHsFHs88xNl/mnRo
      jul0BQSBifMfEHR14TGDbFjxit2oiJj8HjSTRiGxzvxKDFVM4Pzt39GlzzC/ZeLSOQ937k5T
      bEOzkkEpZmnpYPf34zMqfPGXP+EdOMHlgS48JglHXz+9QR+7iRgLjzbJVQ5v6sDABH/3T/9I
      hww7u3tY3EEcNgfm6gpLWxJ6dpvdXIWDWgNNaaKqGoLFx/Vzo8zcu8fA6StUEmvMLEVAcmJy
      fUC3++c6XVqEVlbYl2TOXL5+9JnI0Omr/KbDTHh3h4bnBEI2SefZDzjZ62H1ySKNoyGdIQgs
      P7qL9cYVejokNucXWItGcWR1Prl2FvPRkyIgIssSmig8nY/JZo2NuVm0czcA0FoNWoZIh9P+
      gnnR4XJjlkQsosrs9D0yxRqnRn3IsowgiO98SPKLWwZVlTba0QYK2WRGekNbrKFrKKqKYYAg
      Sphk+QfC7Aaqovz08xs6bUU9fBgEEbPZ9FYynDyHRdE1lKPNIrLJBIbxFBciisKRR+nQI2Uc
      8YF0TUMQBXT90D6lKirike9JPfJoIQhPfxNNMxAEDsvRdRCEQx+XIKCqCoIoI2AgiiKqoiCI
      IoIogWEgHZqpDr1PovC0voIoIUsChiE8pZaIb8nq/Dr6xTWAY32n4zjAm+s4DnCsX7WOsSi/
      YKnqm8UOjnU8BDrWr1zHQ6Bj/ap13ACO9avWe6ZCtFmZvs/c8hqCs4dS/AnTT1aRXAG0/RW+
      uL9AoQ4ec517dx+Qquj0BvzPY1G+/obl8D4mWWJ1ZZmu/iHauR0eLkbo8llYuHcfrXMQt0ll
      efoOi0dYlN2NGSJFkb7O56kQiw++ZG55k1xTokvIktJcRB59zZO1TYotEz3dnufeGvXdTb4J
      ZRnr9bG9tIrhtrN/kMPrdrAf22RxPUnPQM8zEWSD0u4Wt+7NUtYteIQyd+49JL5fojvY85q5
      AF5UJR3jzv1HRBMZAgMDmF/6aquwupSiM+B5fhnW0ChXG1gsL0atf0xKo0q1pWGoLRDko2Xh
      BuFQGt/3iBuvo1ajxF66Qofb8drH6GqbfKmK3XYYQ8mlkrQEEzbzD2+Hy2SS77sBGDg8QYZ6
      rKRzbSrVJjevnyMc3UYvZcHXy+TYMKVUnL7TN1DyCZzfx6I4VRxjN+mzaqSLe9js3VSLaWp1
      hWB/EIfeoObowl2PMr+t0tcbINDlw2HipViUnXgEly+Ax+fHpefJi52oLZ2Pbl5kPxrD29/H
      sym7tqI7WPQmHT29ZEMRyu0sDx7Mo1t99PZ00yrn8ASD3602GLC+FeHazZtkwxF8w0MMDY+g
      V7NY3QFsL39yf1ShlUW6T17l3HgQSZbJJsPE9wrY7DLRjQ0KDQNPh0Q0lKOvv4PIxhqFpoiv
      w0GjkOTL24/QMWN3SJSyBxQaOpX9BNFkBpfXR72YIRGLUmiJuK0Gm2trlFUTdlGlUquzPP+A
      vUwbb8CPRVLZWFwjX6li9/hRKwesb0ZQJTt2SWFrY51yW8ZtEwhvrFNSZTxOG5lkmM1IHEVw
      0tPpRm1W2NrYpKqZcMoayd0E8UQat9+PSYRqsUQhn6beNqg1FTocZrbDG2xFduno6aGV2yGU
      yOL1e6mWC2RTO+iSmejmOlXNDGrxfadIkmmU46SKIicmO1lfriBLJgTBYPDMJdyVCvH1TVxu
      Aa/FhMkkHwZnXiGf10epmALFhtumIFvs2M0yJUBv1rF39WEXcsR3C5wM2BGKL6ZIkqwOAj09
      WO0OODKLVva2+Pdr80xe/wzrs69OvUY8EsVl01lLnsABdA1McdUc4PRY/2F5L4mqGZIZqyxh
      EQU0AXa3NnAGxvHaX23z+DFNnTvPk7lZwoqDq+d62Eg2mBjpQms12NtJsF+P4fHdBGB7dZbF
      UJpmeY2Of/ff47E48Hp9dPk9lFKbbOxIXLzsYTe8RzyZpCx5cRTX8PRPsB2P4lMlNpJVzvj6
      aZaKFDUzHR4vdm/X0+SBuiDjd5tYWtrgVEAksR0htF3k2jkP4Z0sJ9y9RFZmWIrmqFZC+P6b
      S6wmWgz3eDlMiaYTXV1C8/azH1tH8rmJVAVG5Szh7DjneiQS6wuUHT2c7DURz5WxtdPk2g68
      bgdGdZev7y8jS01KmgMpO0/H4HmE1Dpbuw3O+A1Q33eGGCXHo0frOP0dRO1OtMoOX9/bw9c3
      RTIWJlWsIVgDDNp1Ht+5BRYXo5ZXd2uyw0NrZxt59BzSfpliKsrKwgoFRxb3tXMIy7NsmyUG
      RrqYnVliK6dis1qZGvgOdaLUCoTDITp6Rpg8Yl+5eif5xw+9rMUOaLT9OMyHD2o1Gaf3wocM
      uHVC8QgAoiRwEF1HFCSMUorV9TAlk5tLJ0ef4k665CZf3rqD2dWNN7LAxk4Tb1XD7TqH2/bz
      drHXWzoXPviUzMptdgotrB1dBLr8pCPLdE5eQk6uoSqHkeJqvcWJC9fpshrYDDBZHTgdDvz+
      DjJNOydOj+I1sqxYerhywcZ6sUmHy8/oYB+VQhFH9wAX9DTxjU3sEwEEyYzT6cTT6cN8FMV1
      eDoJdPmJpeMk9hQuXr3KxtwW9u5hzuo2otENrKLCyYs38MsGUiuPtWuALl+VWhrAoN3S6QoE
      oZhC1QT6hoYYMmBBOzyHbPVw5uwUlmrm8N612/gCEwjZBnqzhr1ngmunejBEK0ljgNMTg7Sr
      Ls7LaeIbWwye6HrfWBSNeq2BZhjIZitmyaDRVLDZ7Rham2ZLwWy1YRKh0WgimSwk1qafx6L4
      LeiCjIiObhgYuoYgmTB0DQyNZrONAdgcTvR2E0UHq9VMs15HN0Cp5XmyuPoUi3LtzCiqqiGZ
      LNhMIpogga4hyxKq0mRrYZZ45tA3fOrKxwx2HcKtVFVFAERZRmk2MEQZQ1MO0S5qlem5JZpt
      DcHi5/efXkapNzFZ7Yh6m0ZLOQRl2e0/29pR2o/yeHETW9co186NElmaYbcqc+7kIKuLq1j8
      AU5PDpJPN+jrMfHw4Ryq2c8HNy9jE3V2NheI5mTOnA4gm/y4bRrLM9NUBAudwUmccpPeYA97
      e2l8doOHj5fpGDjJVMBOTTBjVwvMzG9z4eMP8Ft1nty9x0HLxOUPPoBsiCeRDN3+IIODThZn
      l3H1n+B0n43pmSfotgAf3jjF+qO75DU7E5MnGQh4aBT3mZldxNE7xZleB2XZTTd5dvVu+twi
      md0UHX29SK0qyVyNoNvE48dzqBY/5y+cJL0xRyzT5PSVG4itMn29vdRySabnVvENnWa4x3Ic
      BzjWr1vHy6DH+lXrnc8BDMM4DuEf678avfMGoKoqxWLxXZ/2X6UURTlOkfSGOp4D/IJ1bId+
      cx3PAY71q9Z7x6KUsnuEI3Eaik6rmica26ahHv49FAqxk8qhaS2S2zEyxfpzWJRaIU0oFCIU
      jpIvVTg4yKIDervBQbaAbmjk9lPUj7Aoldw+0ViClmpQL+fIvQRzUkjvHJ43XUBrVWkoOrnU
      DqFwhHyl+eIVtKrs5yuAQb1Upq2p1BrNw/oVM0QiseeRJICu1IlHoxRrbQxdJZdJU2+92bxI
      qReJRiNEozHqbZ1arY6hKeztxIjGE9SeLV9vkz7IH2FRWlSrz+xcN3RK2X1i8R3q7efrVNqP
      cVBRKFdeh+xnUKvV3uia3oaSsQhN7dWDnPeORdnbzaO1syyv77EwP0+jmmNlY5tMbJPC0XOz
      H9tgL1dhdWWJpvJ8l988CJMsQ6tcZmFhmkJdI7uXYGFhlUrxgO2NVZI1Da2VY3FtG01XUFpN
      ktENtpKZF2oUjYb5NmVVKxNmp6wQDicwtBbrS2svYFH2QlvMrW9gYLC9tEJyL8Lt+w/YOciy
      v5dBaZdYWd1+SmTAMIgsP6FQb7C4tEqtnGEjGiabfbOt8aXtBHntCAdhqETjO2iNKonUAVqz
      zNIzWJT6fozpJ2vUNQNVybG1dUD9IMp+FZRGheT+Ae16htVQ6pkzqER3y3TadFY3Q69Vp2g0
      /kbX9Cq1i0mSL4niP/MN4tEkOtDtkQhtH+4/0ZQWieTec998z1a0X4BMAAAFdklEQVQIG1On
      RghthOjts5HVBjh1YoBHKyFahko6GUY0TuFBY+rMRfY3F2m1VGwmM996gUYHg1gdo3QYOTo7
      OykV8+h1Bb/Hgc0bZGooR0oALZcgWahSrlVw+PqYnJxkYffFH7FdKxLON/ANSvi9h5/paptq
      rY5osn7vjaGTVSUueWG3/t0+YZvNhtVsp29ylHg4TLCv8znzWUW0c+n0CdYePcHwBJkYafDm
      vGCdRq1GVTKhPW1tAh1dvYz1e6k8iaBxeMMT2QY3p9xE002mOg+xKAuz0+waO3x48yqnTp0i
      nQghmZ7JVVZLotiCT6+/Vc8y+3ABxebhyrlRludXqbcqdI5fJyikWQrtkm2ZOHsWlHqFaCrL
      WMBJKKvibCRZT5YZO3sVRz3BaixN19BJzo33UkptUbEM41D2aBgu9qLLFJomLt04y/76Btm6
      yLlhE01HH6nwMquxNJ3DJxkwZZmLFhEEmYlBNw8frpIsnueDC5Oo8WWgE0PTqDXqFLaXeRzJ
      IyC9byxKm3A4QffQFB6XmZ2NLVqtTtBFfKNn+fuzZhZn11HdBpVqg3qrhfwDHHmnz0MjtQ2+
      fuzfw6IINidDI0FOdNfYyxbp7Xu57+ZlWBST1Yms1DH3DD9nhNNru2yuR9ix67gVH12A1enB
      61fxu80kIlEc3UN0eZ3PNQCx1aDSalPVjbeIRZHxd3vxSybMTy/tEIuyPAOXPvkDZgC9QSIa
      pRTsJFPdYOqjnuexKG6FeCSM5OphJPAMI6VeQ7d2Pv2n2qjT0iGf3iFX7MbqH+TaCScraw3S
      WpPf/u73bK6tHdZC06g3mxiahXqzjUsUMZnN6GqD5YUVdKeP/fQB58Z7sbk7icejVDWVniEn
      LUWlmcuQzA3TbgpcvXERfWeGpmJg1GtgtNmKbNM35eDExQ8RCls4ugY5f97K1NkJJA7tKQCG
      rlNvNDBMOhMXPsRc3nrfWJQ6u9txwrEYwfELjPW6uP1wifPXbtDIhpmZ2Wfo1EVGvTAzcx9H
      /0kysSXmM1UQBEZPX6HL6cdtBtmw0CF0o2rCIRZFVg6xKMsRFDGB8+M/4G0/Ym7DxMVzHdy5
      +4h8y6BVzWPUCrR1sPl6cbTK32FR+v10mEVs/QP09/rZ2Y6xPB+lWD2cCwQDg3z2T/+I1wTx
      xC5WewCHzY5Y2mMpJNJMJciHIvg6gxhaHUXREMweLkwN8ujOPQZOXqKSWOPRYvgIi3LzDbAo
      bZKxGCXJxAnXxaPPDrEo/S6ZWHqPps8JuSTuiYtMBDvQniHdGQisz03DiI/VrQheb55qY5Sp
      kZ7Dt77bi5QqAYeNQG1UUCUbbpcGhnFIyJBERARktcr0o0cU6xpnz4Iki5RTcR7tg+qbJOg2
      I+p5coUG/oCfmuHA7j3Mu2ayuxFLyzS6xzCpTRRdxO12IWBgdx8l7wMMDKrVOnanm3pDQhBF
      TLKMLoqARCUTZWFd4sLUANr3plffflcUxV/eMmirUaOtfkthc2D+OQm1npGuKdQbzUMch2zC
      brX+IBal1ag/Pb/V7sAkvcb5dY1avXGEGZFwOu1vHYuiq23qzfbTeqFrSJKIphvIkniEPJFB
      1zAECUkU0BQFQRbRNZCO/Fay2YzabqEbIJksWC3fIlx0FucWOH3pIoaqIUsCjUYTQZYxyzKG
      ISDLoKoGoqDTaLYRZRM2ixnDMGi3Gmi6gGw2IxoqrZaK2WZDNFSazTaS2YLVbOJb9Iwhysgi
      NBsNECRMZhMYIMkSaAqaIIPaoqXqyLIJkyRgiDLoKoIgoSlNFENEz8VIiv2cCDoPg7CahiSA
      IcgIhvrLawDH+k7vOg7QLqcpiZ10OX++bftdK72fojPQ81JbOsD/D1q1CRfcFRYAAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ModeShare Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ModeShare Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Model Boardings rel to 2015' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TazData vs PopSyn' width='192'>
      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
      Don+9/f2DwEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Topsheet' width='192'>
      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
      cFlMZLMZtJ0i95+skKn28LsMPH1wj/XwHu7AOKmtBZY3othtEr/81ZdUGjJWs8DCw0eUZR0B
      t41WvcDi/CNWt+P4hn3EVh6zvJNEosGtL+9Q7mvpd+qY9QrL63Hsuj7FTo/I8mNWd+I4vC5S
      kQhb0ThawGAzkEwVcTqs5CNhJP8wYilOXWenXYgj2ofw2y30u22sbg/1RovjJ88QdNuwO3WE
      tosE/W89I+x3o56Ls1cROHvuGBZRS6VRoVoooTNLaGyjfPLhJfLxON6J0/zpn3xKPx154xlh
      qtxhJ7SN4J9h2Hzgx0cQD+rsyG1qjQ5ajYDNHUSr1Fl69JjqG0ojCjorDqnNRqzC+PDLCX0q
      faqlIjsrj0jVXl8aUel1KZdL1FtdlH6XSqkMiPRRSO4u8fmNuxj8wZeOkvWNTlFLRWn3VcKr
      Wxy79jHDlhbJfIud5ft8cfM2/vEZMpkck3OnyCf3OPXuRzibSdKNHtV6kcX5pzR7HUKhHTbD
      Ka5//CNOnzjF+QsX+PDK6deek6uoCr12i3w2xtOVCG+tlvS8H5W+rNBptjl++UPMVEmtb2M9
      fon3L51E7PdodXrI5QhbZRMXLrzDR9cvsrf6iEKzy1YoBBxsdDf7pnhn1Eu1GOLeapJGOUMN
      O+cvXOK9iydQKkUSmQztdoNQKoNSiNCwH+fa2Ski4RDpVJETJ0+iU6rcvHEfh8+PANQ6PUyS
      BqPdSHwnQjJdxagXqFeraLRaVFFP0GUlHV1nJZJDkJxI6kFg7HsVQKWUJ769ypdf3qQhupBa
      cR6Hm0wPWdhdnufW3ae4h4boVNJ8feMGgn/ijTvCsnubhPfzpKLblNsWqtlV7j5YxerSs7MV
      pdlqUizVqJaLNFoteirPz4l9NQIuh41UsYbNqANVIbq1zEYoxNrGDgGfj3qjiaxqUNpFFpfW
      Ca0vEc+/mJ6tM9s5cfI0YwEnqnpQEblaqtBVVIamz/HTn3zKqYmXTQZBMjHm1bGfreHyWFh/
      skAkVcdi1jFz9ho//cmnTPgsmBweXBY9VrOBjaUF9mpg1QJIOH1uHA43o0MBnEaBJwsLJAp1
      mpU0SxuRF4qUtSpZniyuE9pYotzVYjGItFpdtDrtW80Nm9vO3voSD+7eomvw0u+12Fh5Qq7a
      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
    </thumbnail>
    <thumbnail height='192' name='Transit Daily Boardings' width='192'>
      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
      xnLw/wHlSvGiArAmPwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Transit Trip Purpose' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VMT Bars' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VMT County Bars' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Work ModeShare Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='trnline files' width='192'>
      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
      oQXhpl1Yh/7/l+o8TLerM+sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
