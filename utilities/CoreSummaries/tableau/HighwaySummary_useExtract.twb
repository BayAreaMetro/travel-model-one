<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Effective Hours' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='8.0'>
        <calculation class='tableau' formula='8.0' />
      </column>
      <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
        <calculation class='tableau' formula='1454' />
      </column>
      <column caption='Occupancy' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
        <calculation class='tableau' formula='1.5' />
      </column>
    </datasource>
    <datasource caption='avgload5period Extract' inline='true' name='avgload5period.tde' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='avgload5period Extract' name='avgload5period.tdeleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='avgload5period.tde' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='avgload5period.tdeleaf' name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>a</remote-name>
            <remote-type>5</remote-type>
            <local-name>[a]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>a</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12251</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>b</remote-name>
            <remote-type>5</remote-type>
            <local-name>[b]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>b</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12255</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>385</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>lanes</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gl]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>gl</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ft]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ft</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>at</remote-name>
            <remote-type>5</remote-type>
            <local-name>[at]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>at</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cap]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>22</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ffs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ffs]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ffs</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fft]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>fft</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>544</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cspd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cspd]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cspd</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6241</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vol_tot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vol_tot]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vol_tot</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>203294</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctim</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctim]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ctim</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1302</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vc]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vc</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11402</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeperiod</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timeperiod]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeperiod</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>129</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]&quot;' value='Growth in Roadway Lane Miles from Baseline' />
          <alias key='&quot;[avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' value='Share of Vehicle-miles Traveled' />
          <alias key='&quot;[avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]&quot;' value='Share of VMT' />
          <alias key='&quot;[avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;' value='Share of VMT for Link Type' />
          <alias key='&quot;[avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;' value='Share of Roadway Lane Miles' />
          <alias key='&quot;[avgload5period.tde].[pcto:sum:Calculation_6350905173822671:qk:3]&quot;' value='Share of Total Roadway Seat Miles along County' />
          <alias key='&quot;[avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;' value='Share of VMT by Congestion Category' />
          <alias key='&quot;[avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' value='Vehicle Miles Traveled per Hour' />
        </aliases>
      </column>
      <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Delay' datatype='real' name='[Calculation_2320829171401165]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([ctim]-[fft])*[vol_tot]/60' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Scenario Position' datatype='real' name='[Calculation_3680912112348791]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [src]&#13;&#10;WHEN &apos;2010_04_ZZZ&apos; THEN 1.5     &#13;&#10;WHEN &apos;2040_03_116&apos; THEN 2.0&#13;&#10;WHEN &apos;2040_03_127&apos; THEN 2.5&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
      </column>
      <column caption='Non-recurring Delay' datatype='real' name='[Calculation_429812310551937025]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.00 AND [vc] &lt;= 0.01 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.00 AND [vc] &lt;= 0.01 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.00 AND [vc] &lt;= 0.01 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.01 AND [vc] &lt;= 0.02 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.01 AND [vc] &lt;= 0.02 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.01 AND [vc] &lt;= 0.02 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.02 AND [vc] &lt;= 0.03 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.02 AND [vc] &lt;= 0.03 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.02 AND [vc] &lt;= 0.03 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.03 AND [vc] &lt;= 0.04 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.03 AND [vc] &lt;= 0.04 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.03 AND [vc] &lt;= 0.04 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.04 AND [vc] &lt;= 0.05 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.04 AND [vc] &lt;= 0.05 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.04 AND [vc] &lt;= 0.05 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.05 AND [vc] &lt;= 0.06 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.05 AND [vc] &lt;= 0.06 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.05 AND [vc] &lt;= 0.06 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.06 AND [vc] &lt;= 0.07 AND lanes == 2) THEN 0.000000162400 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.06 AND [vc] &lt;= 0.07 AND lanes == 3) THEN 0.000000014120 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.06 AND [vc] &lt;= 0.07 AND lanes == 4) THEN 0.000000000203 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.07 AND [vc] &lt;= 0.08 AND lanes == 2) THEN 0.000000282500 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.07 AND [vc] &lt;= 0.08 AND lanes == 3) THEN 0.000000026290 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.07 AND [vc] &lt;= 0.08 AND lanes == 4) THEN 0.000000000399 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.08 AND [vc] &lt;= 0.09 AND lanes == 2) THEN 0.000000402700 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.08 AND [vc] &lt;= 0.09 AND lanes == 3) THEN 0.000000038460 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.08 AND [vc] &lt;= 0.09 AND lanes == 4) THEN 0.000000000595 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.09 AND [vc] &lt;= 0.10 AND lanes == 2) THEN 0.000000522800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.09 AND [vc] &lt;= 0.10 AND lanes == 3) THEN 0.000000050630 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.09 AND [vc] &lt;= 0.10 AND lanes == 4) THEN 0.000000000790 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.10 AND [vc] &lt;= 0.11 AND lanes == 2) THEN 0.000000522800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.10 AND [vc] &lt;= 0.11 AND lanes == 3) THEN 0.000000050630 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.10 AND [vc] &lt;= 0.11 AND lanes == 4) THEN 0.000000000790 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.11 AND [vc] &lt;= 0.12 AND lanes == 2) THEN 0.000000643000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.11 AND [vc] &lt;= 0.12 AND lanes == 3) THEN 0.000000062800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.11 AND [vc] &lt;= 0.12 AND lanes == 4) THEN 0.000000000986 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.12 AND [vc] &lt;= 0.13 AND lanes == 2) THEN 0.000001146000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.12 AND [vc] &lt;= 0.13 AND lanes == 3) THEN 0.000000146000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.12 AND [vc] &lt;= 0.13 AND lanes == 4) THEN 0.000000004229 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.13 AND [vc] &lt;= 0.14 AND lanes == 2) THEN 0.000001650000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.13 AND [vc] &lt;= 0.14 AND lanes == 3) THEN 0.000000229300 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.13 AND [vc] &lt;= 0.14 AND lanes == 4) THEN 0.000000007472 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.14 AND [vc] &lt;= 0.15 AND lanes == 2) THEN 0.000002153000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.14 AND [vc] &lt;= 0.15 AND lanes == 3) THEN 0.000000312500 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.14 AND [vc] &lt;= 0.15 AND lanes == 4) THEN 0.000000010710 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.15 AND [vc] &lt;= 0.16 AND lanes == 2) THEN 0.000003160000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.15 AND [vc] &lt;= 0.16 AND lanes == 3) THEN 0.000000479000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.15 AND [vc] &lt;= 0.16 AND lanes == 4) THEN 0.000000017200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.16 AND [vc] &lt;= 0.17 AND lanes == 2) THEN 0.000004488000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.16 AND [vc] &lt;= 0.17 AND lanes == 3) THEN 0.000000787200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.16 AND [vc] &lt;= 0.17 AND lanes == 4) THEN 0.000000039960 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.17 AND [vc] &lt;= 0.18 AND lanes == 2) THEN 0.000005816000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.17 AND [vc] &lt;= 0.18 AND lanes == 3) THEN 0.000001095000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.17 AND [vc] &lt;= 0.18 AND lanes == 4) THEN 0.000000062720 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.18 AND [vc] &lt;= 0.19 AND lanes == 2) THEN 0.000007144000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.18 AND [vc] &lt;= 0.19 AND lanes == 3) THEN 0.000001404000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.18 AND [vc] &lt;= 0.19 AND lanes == 4) THEN 0.000000085480 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.19 AND [vc] &lt;= 0.20 AND lanes == 2) THEN 0.000008472000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.19 AND [vc] &lt;= 0.20 AND lanes == 3) THEN 0.000001712000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.19 AND [vc] &lt;= 0.20 AND lanes == 4) THEN 0.000000108200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.20 AND [vc] &lt;= 0.21 AND lanes == 2) THEN 0.000009800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.20 AND [vc] &lt;= 0.21 AND lanes == 3) THEN 0.000002020000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.20 AND [vc] &lt;= 0.21 AND lanes == 4) THEN 0.000000131000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.21 AND [vc] &lt;= 0.22 AND lanes == 2) THEN 0.000012560000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.21 AND [vc] &lt;= 0.22 AND lanes == 3) THEN 0.000002854000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.21 AND [vc] &lt;= 0.22 AND lanes == 4) THEN 0.000000230800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.22 AND [vc] &lt;= 0.23 AND lanes == 2) THEN 0.000015320000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.22 AND [vc] &lt;= 0.23 AND lanes == 3) THEN 0.000003688000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.22 AND [vc] &lt;= 0.23 AND lanes == 4) THEN 0.000000330600 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.23 AND [vc] &lt;= 0.24 AND lanes == 2) THEN 0.000018080000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.23 AND [vc] &lt;= 0.24 AND lanes == 3) THEN 0.000004522000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.23 AND [vc] &lt;= 0.24 AND lanes == 4) THEN 0.000000430400 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.24 AND [vc] &lt;= 0.25 AND lanes == 2) THEN 0.000020840000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.24 AND [vc] &lt;= 0.25 AND lanes == 3) THEN 0.000005356000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.24 AND [vc] &lt;= 0.25 AND lanes == 4) THEN 0.000000530200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.25 AND [vc] &lt;= 0.26 AND lanes == 2) THEN 0.000023600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.25 AND [vc] &lt;= 0.26 AND lanes == 3) THEN 0.000006190000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.25 AND [vc] &lt;= 0.26 AND lanes == 4) THEN 0.000000630000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.26 AND [vc] &lt;= 0.27 AND lanes == 2) THEN 0.000028520000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.26 AND [vc] &lt;= 0.27 AND lanes == 3) THEN 0.000008032000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.26 AND [vc] &lt;= 0.27 AND lanes == 4) THEN 0.000000960000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.27 AND [vc] &lt;= 0.28 AND lanes == 2) THEN 0.000033440000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.27 AND [vc] &lt;= 0.28 AND lanes == 3) THEN 0.000009874000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.27 AND [vc] &lt;= 0.28 AND lanes == 4) THEN 0.000001290000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.28 AND [vc] &lt;= 0.29 AND lanes == 2) THEN 0.000038360000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.28 AND [vc] &lt;= 0.29 AND lanes == 3) THEN 0.000011720000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.28 AND [vc] &lt;= 0.29 AND lanes == 4) THEN 0.000001620000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.29 AND [vc] &lt;= 0.30 AND lanes == 2) THEN 0.000043280000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.29 AND [vc] &lt;= 0.30 AND lanes == 3) THEN 0.000013560000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.29 AND [vc] &lt;= 0.30 AND lanes == 4) THEN 0.000001950000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.30 AND [vc] &lt;= 0.31 AND lanes == 2) THEN 0.000048200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.30 AND [vc] &lt;= 0.31 AND lanes == 3) THEN 0.000015400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.30 AND [vc] &lt;= 0.31 AND lanes == 4) THEN 0.000002280000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.31 AND [vc] &lt;= 0.32 AND lanes == 2) THEN 0.000056240000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.31 AND [vc] &lt;= 0.32 AND lanes == 3) THEN 0.000019000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.31 AND [vc] &lt;= 0.32 AND lanes == 4) THEN 0.000003174000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.32 AND [vc] &lt;= 0.33 AND lanes == 2) THEN 0.000064280000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.32 AND [vc] &lt;= 0.33 AND lanes == 3) THEN 0.000022600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.32 AND [vc] &lt;= 0.33 AND lanes == 4) THEN 0.000004068000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.33 AND [vc] &lt;= 0.34 AND lanes == 2) THEN 0.000072320000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.33 AND [vc] &lt;= 0.34 AND lanes == 3) THEN 0.000026200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.33 AND [vc] &lt;= 0.34 AND lanes == 4) THEN 0.000004962000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.34 AND [vc] &lt;= 0.35 AND lanes == 2) THEN 0.000080360000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.34 AND [vc] &lt;= 0.35 AND lanes == 3) THEN 0.000029800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.34 AND [vc] &lt;= 0.35 AND lanes == 4) THEN 0.000005856000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.35 AND [vc] &lt;= 0.36 AND lanes == 2) THEN 0.000088400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.35 AND [vc] &lt;= 0.36 AND lanes == 3) THEN 0.000033400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.35 AND [vc] &lt;= 0.36 AND lanes == 4) THEN 0.000006750000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.36 AND [vc] &lt;= 0.37 AND lanes == 2) THEN 0.000100500000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.36 AND [vc] &lt;= 0.37 AND lanes == 3) THEN 0.000039760000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.36 AND [vc] &lt;= 0.37 AND lanes == 4) THEN 0.000008860000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.37 AND [vc] &lt;= 0.38 AND lanes == 2) THEN 0.000112600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.37 AND [vc] &lt;= 0.38 AND lanes == 3) THEN 0.000046120000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.37 AND [vc] &lt;= 0.38 AND lanes == 4) THEN 0.000010970000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.38 AND [vc] &lt;= 0.39 AND lanes == 2) THEN 0.000124800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.38 AND [vc] &lt;= 0.39 AND lanes == 3) THEN 0.000052480000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.38 AND [vc] &lt;= 0.39 AND lanes == 4) THEN 0.000013080000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.39 AND [vc] &lt;= 0.40 AND lanes == 2) THEN 0.000136900000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.39 AND [vc] &lt;= 0.40 AND lanes == 3) THEN 0.000058840000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.39 AND [vc] &lt;= 0.40 AND lanes == 4) THEN 0.000015190000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.40 AND [vc] &lt;= 0.41 AND lanes == 2) THEN 0.000149000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.40 AND [vc] &lt;= 0.41 AND lanes == 3) THEN 0.000065200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.40 AND [vc] &lt;= 0.41 AND lanes == 4) THEN 0.000017300000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.41 AND [vc] &lt;= 0.42 AND lanes == 2) THEN 0.000166600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.41 AND [vc] &lt;= 0.42 AND lanes == 3) THEN 0.000075760000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.41 AND [vc] &lt;= 0.42 AND lanes == 4) THEN 0.000021780000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.42 AND [vc] &lt;= 0.43 AND lanes == 2) THEN 0.000184200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.42 AND [vc] &lt;= 0.43 AND lanes == 3) THEN 0.000086320000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.42 AND [vc] &lt;= 0.43 AND lanes == 4) THEN 0.000026260000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.43 AND [vc] &lt;= 0.44 AND lanes == 2) THEN 0.000201800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.43 AND [vc] &lt;= 0.44 AND lanes == 3) THEN 0.000096880000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.43 AND [vc] &lt;= 0.44 AND lanes == 4) THEN 0.000030740000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.44 AND [vc] &lt;= 0.45 AND lanes == 2) THEN 0.000219400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.44 AND [vc] &lt;= 0.45 AND lanes == 3) THEN 0.000107400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.44 AND [vc] &lt;= 0.45 AND lanes == 4) THEN 0.000035220000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.45 AND [vc] &lt;= 0.46 AND lanes == 2) THEN 0.000237000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.45 AND [vc] &lt;= 0.46 AND lanes == 3) THEN 0.000118000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.45 AND [vc] &lt;= 0.46 AND lanes == 4) THEN 0.000039700000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.46 AND [vc] &lt;= 0.47 AND lanes == 2) THEN 0.000261400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.46 AND [vc] &lt;= 0.47 AND lanes == 3) THEN 0.000134200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.46 AND [vc] &lt;= 0.47 AND lanes == 4) THEN 0.000048460000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.47 AND [vc] &lt;= 0.48 AND lanes == 2) THEN 0.000285800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.47 AND [vc] &lt;= 0.48 AND lanes == 3) THEN 0.000150400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.47 AND [vc] &lt;= 0.48 AND lanes == 4) THEN 0.000057220000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.48 AND [vc] &lt;= 0.49 AND lanes == 2) THEN 0.000310200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.48 AND [vc] &lt;= 0.49 AND lanes == 3) THEN 0.000166600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.48 AND [vc] &lt;= 0.49 AND lanes == 4) THEN 0.000065980000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.49 AND [vc] &lt;= 0.50 AND lanes == 2) THEN 0.000334600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.49 AND [vc] &lt;= 0.50 AND lanes == 3) THEN 0.000182800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.49 AND [vc] &lt;= 0.50 AND lanes == 4) THEN 0.000074740000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.50 AND [vc] &lt;= 0.51 AND lanes == 2) THEN 0.000359000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.50 AND [vc] &lt;= 0.51 AND lanes == 3) THEN 0.000199000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.50 AND [vc] &lt;= 0.51 AND lanes == 4) THEN 0.000083500000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.51 AND [vc] &lt;= 0.52 AND lanes == 2) THEN 0.000392000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.51 AND [vc] &lt;= 0.52 AND lanes == 3) THEN 0.000223600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.51 AND [vc] &lt;= 0.52 AND lanes == 4) THEN 0.000099400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.52 AND [vc] &lt;= 0.53 AND lanes == 2) THEN 0.000425000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.52 AND [vc] &lt;= 0.53 AND lanes == 3) THEN 0.000248200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.52 AND [vc] &lt;= 0.53 AND lanes == 4) THEN 0.000115300000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.53 AND [vc] &lt;= 0.54 AND lanes == 2) THEN 0.000458000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.53 AND [vc] &lt;= 0.54 AND lanes == 3) THEN 0.000272800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.53 AND [vc] &lt;= 0.54 AND lanes == 4) THEN 0.000131200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.54 AND [vc] &lt;= 0.55 AND lanes == 2) THEN 0.000491000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.54 AND [vc] &lt;= 0.55 AND lanes == 3) THEN 0.000297400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.54 AND [vc] &lt;= 0.55 AND lanes == 4) THEN 0.000147100000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.55 AND [vc] &lt;= 0.56 AND lanes == 2) THEN 0.000524000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.55 AND [vc] &lt;= 0.56 AND lanes == 3) THEN 0.000322000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.55 AND [vc] &lt;= 0.56 AND lanes == 4) THEN 0.000163000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.56 AND [vc] &lt;= 0.57 AND lanes == 2) THEN 0.000568200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.56 AND [vc] &lt;= 0.57 AND lanes == 3) THEN 0.000357400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.56 AND [vc] &lt;= 0.57 AND lanes == 4) THEN 0.000190800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.57 AND [vc] &lt;= 0.58 AND lanes == 2) THEN 0.000612400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.57 AND [vc] &lt;= 0.58 AND lanes == 3) THEN 0.000392800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.57 AND [vc] &lt;= 0.58 AND lanes == 4) THEN 0.000218600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.58 AND [vc] &lt;= 0.59 AND lanes == 2) THEN 0.000656600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.58 AND [vc] &lt;= 0.59 AND lanes == 3) THEN 0.000428200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.58 AND [vc] &lt;= 0.59 AND lanes == 4) THEN 0.000246400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.59 AND [vc] &lt;= 0.60 AND lanes == 2) THEN 0.000700800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.59 AND [vc] &lt;= 0.60 AND lanes == 3) THEN 0.000463600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.59 AND [vc] &lt;= 0.60 AND lanes == 4) THEN 0.000274200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.60 AND [vc] &lt;= 0.61 AND lanes == 2) THEN 0.000745000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.60 AND [vc] &lt;= 0.61 AND lanes == 3) THEN 0.000499000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.60 AND [vc] &lt;= 0.61 AND lanes == 4) THEN 0.000302000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.61 AND [vc] &lt;= 0.62 AND lanes == 2) THEN 0.000806400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.61 AND [vc] &lt;= 0.62 AND lanes == 3) THEN 0.000550600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.61 AND [vc] &lt;= 0.62 AND lanes == 4) THEN 0.000347800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.62 AND [vc] &lt;= 0.63 AND lanes == 2) THEN 0.000867800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.62 AND [vc] &lt;= 0.63 AND lanes == 3) THEN 0.000602200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.62 AND [vc] &lt;= 0.63 AND lanes == 4) THEN 0.000393600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.63 AND [vc] &lt;= 0.64 AND lanes == 2) THEN 0.000929200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.63 AND [vc] &lt;= 0.64 AND lanes == 3) THEN 0.000653800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.63 AND [vc] &lt;= 0.64 AND lanes == 4) THEN 0.000439400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.64 AND [vc] &lt;= 0.65 AND lanes == 2) THEN 0.000990600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.64 AND [vc] &lt;= 0.65 AND lanes == 3) THEN 0.000705400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.64 AND [vc] &lt;= 0.65 AND lanes == 4) THEN 0.000485200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.65 AND [vc] &lt;= 0.66 AND lanes == 2) THEN 0.001052000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.65 AND [vc] &lt;= 0.66 AND lanes == 3) THEN 0.000757000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.65 AND [vc] &lt;= 0.66 AND lanes == 4) THEN 0.000531000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.66 AND [vc] &lt;= 0.67 AND lanes == 2) THEN 0.001148000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.66 AND [vc] &lt;= 0.67 AND lanes == 3) THEN 0.000836000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.66 AND [vc] &lt;= 0.67 AND lanes == 4) THEN 0.000605200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.67 AND [vc] &lt;= 0.68 AND lanes == 2) THEN 0.001243000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.67 AND [vc] &lt;= 0.68 AND lanes == 3) THEN 0.000915000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.67 AND [vc] &lt;= 0.68 AND lanes == 4) THEN 0.000679400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.68 AND [vc] &lt;= 0.69 AND lanes == 2) THEN 0.001339000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.68 AND [vc] &lt;= 0.69 AND lanes == 3) THEN 0.000994000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.68 AND [vc] &lt;= 0.69 AND lanes == 4) THEN 0.000753600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.69 AND [vc] &lt;= 0.70 AND lanes == 2) THEN 0.001434000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.69 AND [vc] &lt;= 0.70 AND lanes == 3) THEN 0.001073000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.69 AND [vc] &lt;= 0.70 AND lanes == 4) THEN 0.000827800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.70 AND [vc] &lt;= 0.71 AND lanes == 2) THEN 0.001530000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.70 AND [vc] &lt;= 0.71 AND lanes == 3) THEN 0.001152000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.70 AND [vc] &lt;= 0.71 AND lanes == 4) THEN 0.000902000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.71 AND [vc] &lt;= 0.72 AND lanes == 2) THEN 0.001710000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.71 AND [vc] &lt;= 0.72 AND lanes == 3) THEN 0.001296000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.71 AND [vc] &lt;= 0.72 AND lanes == 4) THEN 0.001025000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.72 AND [vc] &lt;= 0.73 AND lanes == 2) THEN 0.001890000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.72 AND [vc] &lt;= 0.73 AND lanes == 3) THEN 0.001440000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.72 AND [vc] &lt;= 0.73 AND lanes == 4) THEN 0.001149000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.73 AND [vc] &lt;= 0.74 AND lanes == 2) THEN 0.002071000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.73 AND [vc] &lt;= 0.74 AND lanes == 3) THEN 0.001585000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.73 AND [vc] &lt;= 0.74 AND lanes == 4) THEN 0.001272000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.74 AND [vc] &lt;= 0.75 AND lanes == 2) THEN 0.002251000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.74 AND [vc] &lt;= 0.75 AND lanes == 3) THEN 0.001729000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.74 AND [vc] &lt;= 0.75 AND lanes == 4) THEN 0.001396000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.75 AND [vc] &lt;= 0.76 AND lanes == 2) THEN 0.002431000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.75 AND [vc] &lt;= 0.76 AND lanes == 3) THEN 0.001873000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.75 AND [vc] &lt;= 0.76 AND lanes == 4) THEN 0.001519000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.76 AND [vc] &lt;= 0.77 AND lanes == 2) THEN 0.002844000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.76 AND [vc] &lt;= 0.77 AND lanes == 3) THEN 0.002216000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.76 AND [vc] &lt;= 0.77 AND lanes == 4) THEN 0.001775000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.77 AND [vc] &lt;= 0.78 AND lanes == 2) THEN 0.003258000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.77 AND [vc] &lt;= 0.78 AND lanes == 3) THEN 0.002560000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.77 AND [vc] &lt;= 0.78 AND lanes == 4) THEN 0.002031000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.78 AND [vc] &lt;= 0.79 AND lanes == 2) THEN 0.003671000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.78 AND [vc] &lt;= 0.79 AND lanes == 3) THEN 0.002903000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.78 AND [vc] &lt;= 0.79 AND lanes == 4) THEN 0.002286000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.79 AND [vc] &lt;= 0.80 AND lanes == 2) THEN 0.004085000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.79 AND [vc] &lt;= 0.80 AND lanes == 3) THEN 0.003247000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.79 AND [vc] &lt;= 0.80 AND lanes == 4) THEN 0.002542000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.80 AND [vc] &lt;= 0.81 AND lanes == 2) THEN 0.004498000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.80 AND [vc] &lt;= 0.81 AND lanes == 3) THEN 0.003590000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.80 AND [vc] &lt;= 0.81 AND lanes == 4) THEN 0.002798000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.81 AND [vc] &lt;= 0.82 AND lanes == 2) THEN 0.005301000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.81 AND [vc] &lt;= 0.82 AND lanes == 3) THEN 0.004317000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.81 AND [vc] &lt;= 0.82 AND lanes == 4) THEN 0.003376000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.82 AND [vc] &lt;= 0.83 AND lanes == 2) THEN 0.006104000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.82 AND [vc] &lt;= 0.83 AND lanes == 3) THEN 0.005044000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.82 AND [vc] &lt;= 0.83 AND lanes == 4) THEN 0.003954000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.83 AND [vc] &lt;= 0.84 AND lanes == 2) THEN 0.006906000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.83 AND [vc] &lt;= 0.84 AND lanes == 3) THEN 0.005770000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.83 AND [vc] &lt;= 0.84 AND lanes == 4) THEN 0.004531000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.84 AND [vc] &lt;= 0.85 AND lanes == 2) THEN 0.007709000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.84 AND [vc] &lt;= 0.85 AND lanes == 3) THEN 0.006497000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.84 AND [vc] &lt;= 0.85 AND lanes == 4) THEN 0.005109000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.85 AND [vc] &lt;= 0.86 AND lanes == 2) THEN 0.008512000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.85 AND [vc] &lt;= 0.86 AND lanes == 3) THEN 0.007224000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.85 AND [vc] &lt;= 0.86 AND lanes == 4) THEN 0.005687000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.86 AND [vc] &lt;= 0.87 AND lanes == 2) THEN 0.009319000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.86 AND [vc] &lt;= 0.87 AND lanes == 3) THEN 0.007952000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.86 AND [vc] &lt;= 0.87 AND lanes == 4) THEN 0.006260000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.87 AND [vc] &lt;= 0.88 AND lanes == 2) THEN 0.010130000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.87 AND [vc] &lt;= 0.88 AND lanes == 3) THEN 0.008680000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.87 AND [vc] &lt;= 0.88 AND lanes == 4) THEN 0.006833000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.88 AND [vc] &lt;= 0.89 AND lanes == 2) THEN 0.010930000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.88 AND [vc] &lt;= 0.89 AND lanes == 3) THEN 0.009407000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.88 AND [vc] &lt;= 0.89 AND lanes == 4) THEN 0.007406000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.89 AND [vc] &lt;= 0.90 AND lanes == 2) THEN 0.011740000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.89 AND [vc] &lt;= 0.90 AND lanes == 3) THEN 0.010140000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.89 AND [vc] &lt;= 0.90 AND lanes == 4) THEN 0.007979000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.90 AND [vc] &lt;= 0.91 AND lanes == 2) THEN 0.012550000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.90 AND [vc] &lt;= 0.91 AND lanes == 3) THEN 0.010860000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.90 AND [vc] &lt;= 0.91 AND lanes == 4) THEN 0.008552000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.91 AND [vc] &lt;= 0.92 AND lanes == 2) THEN 0.013260000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.91 AND [vc] &lt;= 0.92 AND lanes == 3) THEN 0.011510000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.91 AND [vc] &lt;= 0.92 AND lanes == 4) THEN 0.009059000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.92 AND [vc] &lt;= 0.93 AND lanes == 2) THEN 0.013980000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.92 AND [vc] &lt;= 0.93 AND lanes == 3) THEN 0.012160000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.92 AND [vc] &lt;= 0.93 AND lanes == 4) THEN 0.009566000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.93 AND [vc] &lt;= 0.94 AND lanes == 2) THEN 0.014690000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.93 AND [vc] &lt;= 0.94 AND lanes == 3) THEN 0.012810000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.93 AND [vc] &lt;= 0.94 AND lanes == 4) THEN 0.010070000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.94 AND [vc] &lt;= 0.95 AND lanes == 2) THEN 0.015410000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.94 AND [vc] &lt;= 0.95 AND lanes == 3) THEN 0.013460000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.94 AND [vc] &lt;= 0.95 AND lanes == 4) THEN 0.010580000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.95 AND [vc] &lt;= 0.96 AND lanes == 2) THEN 0.016120000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.95 AND [vc] &lt;= 0.96 AND lanes == 3) THEN 0.014110000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.95 AND [vc] &lt;= 0.96 AND lanes == 4) THEN 0.011090000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.96 AND [vc] &lt;= 0.97 AND lanes == 2) THEN 0.016870000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.96 AND [vc] &lt;= 0.97 AND lanes == 3) THEN 0.014780000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.96 AND [vc] &lt;= 0.97 AND lanes == 4) THEN 0.011600000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.97 AND [vc] &lt;= 0.98 AND lanes == 2) THEN 0.017620000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.97 AND [vc] &lt;= 0.98 AND lanes == 3) THEN 0.015440000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.97 AND [vc] &lt;= 0.98 AND lanes == 4) THEN 0.012120000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.98 AND [vc] &lt;= 0.99 AND lanes == 2) THEN 0.018360000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.98 AND [vc] &lt;= 0.99 AND lanes == 3) THEN 0.016110000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.98 AND [vc] &lt;= 0.99 AND lanes == 4) THEN 0.012640000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.99 AND [vc] &lt;= 1.00 AND lanes == 2) THEN 0.019110000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.99 AND [vc] &lt;= 1.00 AND lanes == 3) THEN 0.016770000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.99 AND [vc] &lt;= 1.00 AND lanes == 4) THEN 0.013160000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 1.00 AND lanes == 2) THEN 0.019860000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 1.00 AND lanes == 3) THEN 0.017440000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 1.00 AND lanes == 4) THEN 0.013680000000 * [Calculation_4420828151331817]&#13;&#10;ELSE 0.0&#13;&#10;END' />
      </column>
      <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
      </column>
      <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
      </column>
      <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
      </column>
      <column caption='Congestion (volume over capacity)' datatype='string' name='[Calculation_5010829191108792]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [vc] &lt;= 0.00001 THEN&#13;&#10;  &apos;0 (dummy)&apos;&#13;&#10;ELSEIF [vc] &lt;= 0.75 THEN&#13;&#10;  &apos;Light&#13;&#10;(v/c &lt; 0.75)&apos;&#13;&#10;ELSEIF [vc] &lt;= 1.0 THEN&#13;&#10;  &apos;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Heavy&#13;&#10;(v/c &gt; 1.00)&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='VHT' datatype='real' name='[Calculation_5810829165448827]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ctim]*[vol_tot]/60' scope-isolation='false' />
      </column>
      <column caption='Roadway Seat Miles' datatype='real' name='[Calculation_6350905173822671]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[distance]*[lanes]*[cap]*[Parameters].[Parameter 1]*[Parameters].[Parameter 3]' scope-isolation='false' />
      </column>
      <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='vcRatioTimes100' datatype='integer' name='[Calculation_6530829180003764]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT([vc]*100)' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Time Period Duration' datatype='integer' name='[Calculation_7220911171450081]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [timeperiod]=&apos;EA&apos; THEN&#13;&#10;  3&#13;&#10;ELSEIF [timeperiod]=&apos;AM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;MD&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [timeperiod]=&apos;PM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;EV&apos; THEN&#13;&#10;  8&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
        </aliases>
      </column>
      <column caption='VMT (Congestion non-dummy)' datatype='real' name='[Calculation_7680829191605709]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [Calculation_5010829191108792]==&apos;0 (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='VMT Per Hour (Daily)' datatype='real' name='[Calculation_7880911172232239]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_4420828151331817])/24' scope-isolation='false' />
      </column>
      <column caption='Vehicle Seconds of Delay per Mile' datatype='real' name='[Calculation_8200829171900729]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Calculation_2320829171401165]*60*60)/Sum([Calculation_4420828151331817])' scope-isolation='false' />
      </column>
      <column caption='Lanes' datatype='string' name='[Calculation_9060829180125573]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [lanes]==2 THEN&#13;&#10; &apos;2&apos;&#13;&#10;ELSEIF [lanes]==3 THEN&#13;&#10; &apos;3&apos;&#13;&#10;ELSE&#13;&#10; &apos;4 or more&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Facility Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_7550828155717668]' new-bin='false'>
          <bin value='&quot;Collectors&quot;'>
            <value>&quot;Collectors&quot;</value>
            <value>&quot;Expressways&quot;</value>
            <value>&quot;Major Arterials&quot;</value>
            <value>&quot;Other&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_6500829184447940]' new-bin='false'>
          <bin value='&quot;1.0 to 7.5 mph&quot;'>
            <value>&quot;1.0 to 7.5 mph&quot;</value>
            <value>&quot;7.5 to 15 mph&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='San Francisco' />
          <alias key='2.0' value='San Mateo' />
          <alias key='3.0' value='Santa Clara' />
          <alias key='4.0' value='Alameda' />
          <alias key='5.0' value='Contra Costa' />
          <alias key='6.0' value='Solano' />
          <alias key='7.0' value='Napa' />
          <alias key='8.0' value='Sonoma' />
          <alias key='9.0' value='Marin' />
        </aliases>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
          <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
          <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
        </aliases>
      </column>
      <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
          <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
          <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
          <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
          <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[vc]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_6500829184447940]' derivation='None' name='[none:Calculation_6500829184447940:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcto:sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_6350905173822671]' derivation='Sum' name='[pcto:sum:Calculation_6350905173822671:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_7680829191605709]' derivation='Sum' name='[pcto:sum:Calculation_7680829191605709:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Scenario,Speed Bin,Time Period)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:src:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_6500829184447940:nk]' />
          <groupfilter function='level-members' level='[none:timeperiod:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.413479' group-percentage='0.0418944' measure-ordering='alphabetic' measure-percentage='0.429872' parameter-percentage='0.114754' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:gl:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>4.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>9.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>6.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>1.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>8.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>7.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>3.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>5.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2015_04_136&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2015_04_135&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2015_04_134&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Year 2010&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Year 2035, 1 - Main Streets&quot;</bucket>
            </map>
            <map to='#609f80'>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Year 2035, 4 - Draft Preferred&quot;</bucket>
            </map>
            <map to='#8d9876'>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Year 2035, 3 - Big Cities&quot;</bucket>
            </map>
            <map to='#cbb345'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Year 2035, 2 - Connected Neighborhoods&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;CG 07 Baseline&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CG 07 ShortTrips &quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Year 2035, 0 - No Project&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:gl:ok]' direction='ASC'>
          <dictionary>
            <bucket>1.0</bucket>
            <bucket>2.0</bucket>
            <bucket>3.0</bucket>
            <bucket>4.0</bucket>
            <bucket>5.0</bucket>
            <bucket>6.0</bucket>
            <bucket>7.0</bucket>
            <bucket>8.0</bucket>
            <bucket>9.0</bucket>
            <bucket>10.0</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Effective Hours' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='8.0'>
          <calculation class='tableau' formula='8.0' />
        </column>
        <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
          <calculation class='tableau' formula='1454' />
        </column>
        <column caption='Occupancy' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
          <calculation class='tableau' formula='1.5' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across.Chart.Fwy Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Freeway Speed (in miles per hour) by Time Period</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[avgload5period.tde].[none:Calculation_7550828155717668:nk]'>
            <groupfilter function='member' level='[none:Calculation_7550828155717668:nk]' member='&quot;Freeways&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[avgload5period.tde].[none:Calculation_7550828155717668:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[avgload5period.tde].[none:Scenario:nk]' value='101' />
            <format attr='width' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='79' />
            <format attr='title' class='0' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='Average Travel Speed (mph)' />
            <format attr='subtitle' class='0' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' field-type='quantitative' max='65.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[avgload5period.tde].[none:Scenario:nk]' value='72' />
            <format attr='text-format' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[avgload5period.tde].[none:Scenario:nk]' value='false' />
            <format attr='font-family' field='[avgload5period.tde].[none:timeperiod:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='1710'>Scenario:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='1710'>&lt;[avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run indent='1710'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='1710'>Time Period:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='1710'>&lt;[avgload5period.tde].[none:timeperiod:nk]&gt;</run>
                <run indent='1710'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='1710'>Speed:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='1710'>&lt;[avgload5period.tde].[usr:Calculation_4000829170355183:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[avgload5period.tde].[usr:Calculation_4000829170355183:qk]</rows>
        <cols>([avgload5period.tde].[none:timeperiod:nk] / [avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Roadway Speed (in miles per hour) by Time Period</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[avgload5period.tde].[none:Scenario:nk]' value='101' />
            <format attr='width' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='79' />
            <format attr='title' class='0' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='Average Travel Speed (mph)' />
            <format attr='subtitle' class='0' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' field-type='quantitative' max='65.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[avgload5period.tde].[none:Scenario:nk]' value='72' />
            <format attr='text-format' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[avgload5period.tde].[none:Scenario:nk]' value='false' />
            <format attr='font-family' field='[avgload5period.tde].[none:timeperiod:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='1710'>Scenario:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='1710'>&lt;[avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run indent='1710'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='1710'>Time Period:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='1710'>&lt;[avgload5period.tde].[none:timeperiod:nk]&gt;</run>
                <run indent='1710'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='1710'>Speed:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='1710'>&lt;[avgload5period.tde].[usr:Calculation_4000829170355183:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[avgload5period.tde].[usr:Calculation_4000829170355183:qk]</rows>
        <cols>([avgload5period.tde].[none:timeperiod:nk] / [avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.Supply'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Roadway Lane Miles by County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column datatype='real' name='[lanes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:8]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Pane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <manual-sort column='[avgload5period.tde].[none:gl:ok]' direction='ASC'>
            <dictionary>
              <bucket>1.0</bucket>
              <bucket>2.0</bucket>
              <bucket>3.0</bucket>
              <bucket>4.0</bucket>
              <bucket>5.0</bucket>
              <bucket>6.0</bucket>
              <bucket>7.0</bucket>
              <bucket>8.0</bucket>
              <bucket>9.0</bucket>
              <bucket>10.0</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
            <column>[avgload5period.tde].[none:gl:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='Growth in Relative to Base Scenario' />
            <format attr='subtitle' class='0' field='[avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='28' />
            <format attr='height' field='[avgload5period.tde].[none:gl:ok]' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[avgload5period.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[avgload5period.tde].[sum:Calculation_4890829192148691:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' value='p0.0%' />
            <format attr='font-family' field='[avgload5period.tde].[none:gl:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[sum:Calculation_4890829192148691:qk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[avgload5period.tde].[sum:Calculation_4890829192148691:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1530'>County:&#9;</run>
                <run bold='true' fontsize='14' indent='1530'>&lt;[avgload5period.tde].[none:gl:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1530'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1530'>&lt;[avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1530'>&#10;Lane Miles:&#9;</run>
                <run bold='true' fontsize='14' indent='1530'>&lt;[avgload5period.tde].[sum:Calculation_4890829192148691:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='2430'>County:&#9;</run>
                <run bold='true' fontsize='14' indent='2430'>&lt;[avgload5period.tde].[none:gl:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2430'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='2430'>&lt;[avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2430'>&#10;Pctt Diff in Supply:&#9;</run>
                <run bold='true' fontsize='14' indent='2430'>&lt;[avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([avgload5period.tde].[sum:Calculation_4890829192148691:qk] + [avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8])</rows>
        <cols>([avgload5period.tde].[none:gl:ok] / [avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.VMT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled Intensity by Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Time Period Duration' datatype='integer' name='[Calculation_7220911171450081]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [timeperiod]=&apos;EA&apos; THEN&#13;&#10;  3&#13;&#10;ELSEIF [timeperiod]=&apos;AM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;MD&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [timeperiod]=&apos;PM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;EV&apos; THEN&#13;&#10;  8&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[avgload5period.tde].[none:timeperiod:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[avgload5period.tde].[sum:Calculation_4780911171654236:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[avgload5period.tde].[sum:Calculation_4780911171654236:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[avgload5period.tde].[sum:Calculation_4780911171654236:qk]' field-type='quantitative' max='14000000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[avgload5period.tde].[none:Scenario:nk]' value='75' />
            <format attr='text-format' field='[avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
            <format attr='height' field='[avgload5period.tde].[none:timeperiod:nk]' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[avgload5period.tde].[none:Scenario:nk]' value='false' />
            <format attr='font-family' field='[avgload5period.tde].[none:timeperiod:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[sum:Calculation_4780911171654236:qk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[avgload5period.tde].[none:Scenario:nk]' />
              <lod column='[avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[avgload5period.tde].[sum:Calculation_4780911171654236:qk]</rows>
        <cols>([avgload5period.tde].[none:timeperiod:nk] / [avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.VMT by Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled by Speed Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]' new-bin='false'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column datatype='real' name='[cspd]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[avgload5period.tde].[Speed Bin (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' value='78' />
            <format attr='title' class='0' field='[avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' scope='rows' value='Share of VMT' />
            <format attr='subtitle' class='0' field='[avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[avgload5period.tde].[none:Scenario:nk]' value='69' />
            <format attr='text-format' field='[avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[avgload5period.tde].[Speed Bin (group)]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[avgload5period.tde].[none:Scenario:nk]' value='false' />
            <format attr='font-family' field='[avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[Speed Bin (group)]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[avgload5period.tde].[none:Scenario:nk]' />
              <lod column='[avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='2250'>Scenario:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='2250'>&lt;[avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run indent='2250'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='2250'>Speed Category:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='2250'>&lt;[avgload5period.tde].[Speed Bin (group)]&gt;</run>
                <run indent='2250'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='2250'>Share:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='2250'>&lt;[avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]&gt;</run>
                <run indent='2250'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='2250'>Amount:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='2250'>&lt;[avgload5period.tde].[sum:Calculation_4420828151331817:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]</rows>
        <cols>([avgload5period.tde].[Speed Bin (group)] / [avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Fwy Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Freeway Speed (in miles per hour) by Time Period</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[avgload5period.tde].[none:Calculation_7550828155717668:nk]'>
            <groupfilter function='member' level='[none:Calculation_7550828155717668:nk]' member='&quot;Freeways&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[avgload5period.tde].[none:Calculation_7550828155717668:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[avgload5period.tde].[none:Scenario:nk]' value='74' />
            <format attr='width' field='[avgload5period.tde].[none:timeperiod:nk]' value='106' />
            <format attr='text-format' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[avgload5period.tde].[none:Scenario:nk]' value='324' />
            <format attr='height' field='[avgload5period.tde].[none:timeperiod:nk]' value='72' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[avgload5period.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:timeperiod:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[avgload5period.tde].[none:Scenario:nk]</rows>
        <cols>[avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Roadway Speed (in miles per hour) by Time Period</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[avgload5period.tde].[none:Scenario:nk]' value='74' />
            <format attr='width' field='[avgload5period.tde].[none:timeperiod:nk]' value='106' />
            <format attr='text-format' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[avgload5period.tde].[none:Scenario:nk]' value='324' />
            <format attr='height' field='[avgload5period.tde].[none:timeperiod:nk]' value='72' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[avgload5period.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:timeperiod:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[avgload5period.tde].[none:Scenario:nk]</rows>
        <cols>[avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Supply'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Roadway Lane Miles by County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column datatype='real' name='[lanes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;</bucket>
              <bucket>&quot;[avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <manual-sort column='[avgload5period.tde].[none:gl:ok]' direction='ASC'>
            <dictionary>
              <bucket>1.0</bucket>
              <bucket>2.0</bucket>
              <bucket>3.0</bucket>
              <bucket>4.0</bucket>
              <bucket>5.0</bucket>
              <bucket>6.0</bucket>
              <bucket>7.0</bucket>
              <bucket>8.0</bucket>
              <bucket>9.0</bucket>
              <bucket>10.0</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
            <column>[avgload5period.tde].[none:gl:ok]</column>
            <column>[avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[avgload5period.tde].[none:gl:ok]' value='88' />
            <format attr='height' field='[avgload5period.tde].[none:Scenario:nk]' value='47' />
            <format attr='text-format' field='[avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]' value='p0.0%' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[avgload5period.tde].[none:Scenario:nk]' value='212' />
            <format attr='width' field='[avgload5period.tde].[:Measure Names]' value='116' />
            <format attr='height' field='[avgload5period.tde].[none:gl:ok]' value='56' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[avgload5period.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:gl:ok]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([avgload5period.tde].[:Measure Names] / [avgload5period.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[avgload5period.tde].[none:gl:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.VMT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled Intensity by Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Time Period Duration' datatype='integer' name='[Calculation_7220911171450081]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [timeperiod]=&apos;EA&apos; THEN&#13;&#10;  3&#13;&#10;ELSEIF [timeperiod]=&apos;AM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;MD&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [timeperiod]=&apos;PM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;EV&apos; THEN&#13;&#10;  8&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[avgload5period.tde].[none:timeperiod:nk]' value='163' />
            <format attr='height' field='[avgload5period.tde].[none:Scenario:nk]' value='54' />
            <format attr='text-format' field='[avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[avgload5period.tde].[none:timeperiod:nk]' value='60' />
            <format attr='width' field='[avgload5period.tde].[none:Scenario:nk]' value='288' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[avgload5period.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:timeperiod:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[avgload5period.tde].[sum:Calculation_4780911171654236:qk]' />
              <lod column='[avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[avgload5period.tde].[none:Scenario:nk]</rows>
        <cols>[avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.VMT by Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled by Speed Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]' new-bin='false'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column datatype='real' name='[cspd]' role='measure' type='quantitative' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[avgload5period.tde].[usr:Calculation1:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[avgload5period.tde].[none:Scenario:nk]' value='52' />
            <format attr='width' field='[avgload5period.tde].[Speed Bin (group)]' value='117' />
            <format attr='text-format' field='[avgload5period.tde].[usr:Calculation1:qk]' value='p0.0%' />
            <format attr='text-format' field='[avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[avgload5period.tde].[none:Scenario:nk]' value='360' />
            <format attr='width' field='[avgload5period.tde].[:Measure Names]' value='92' />
            <format attr='height' field='[avgload5period.tde].[Speed Bin (group)]' value='72' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[avgload5period.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[Speed Bin (group)]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[avgload5period.tde].[Multiple Values]' />
              <lod column='[avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([avgload5period.tde].[:Measure Names] / [avgload5period.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[avgload5period.tde].[Speed Bin (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle &apos;Delay&apos; by Facility Type: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='Delay' datatype='real' name='[Calculation_2320829171401165]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([ctim]-[fft])*[vol_tot]/60' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column caption='Vehicle Seconds of Delay per Mile' datatype='real' name='[Calculation_8200829171900729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_2320829171401165]*60*60)/Sum([Calculation_4420828151331817])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column datatype='real' name='[fft]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2320829171401165]' derivation='Sum' name='[sum:Calculation_2320829171401165:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_8200829171900729]' derivation='User' name='[usr:Calculation_8200829171900729:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[sum:Calculation_2320829171401165:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[usr:Calculation_8200829171900729:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[avgload5period.tde].[sum:Calculation_2320829171401165:qk]&quot;</bucket>
              <bucket>&quot;[avgload5period.tde].[usr:Calculation_8200829171900729:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[avgload5period.tde].[:Measure Names]</column>
            <column>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[avgload5period.tde].[none:timeperiod:nk]' value='39' />
            <format attr='width' field='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='126' />
            <format attr='text-format' field='[avgload5period.tde].[usr:Calculation_8200829171900729:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[avgload5period.tde].[:Measure Names]' value='152' />
            <format attr='width' field='[avgload5period.tde].[none:timeperiod:nk]' value='192' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='height' field='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='60' />
            <format attr='height' field='[avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='32' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([avgload5period.tde].[:Measure Names] / [avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols>([avgload5period.tde].[none:Calculation_7570828154404546:nk] / [avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Non-recurring'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle &apos;Delay&apos; by Facility Type: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='Non-recurring Delay' datatype='real' name='[Calculation_429812310551937025]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.00 AND [vc] &lt;= 0.01 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.00 AND [vc] &lt;= 0.01 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.00 AND [vc] &lt;= 0.01 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.01 AND [vc] &lt;= 0.02 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.01 AND [vc] &lt;= 0.02 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.01 AND [vc] &lt;= 0.02 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.02 AND [vc] &lt;= 0.03 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.02 AND [vc] &lt;= 0.03 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.02 AND [vc] &lt;= 0.03 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.03 AND [vc] &lt;= 0.04 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.03 AND [vc] &lt;= 0.04 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.03 AND [vc] &lt;= 0.04 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.04 AND [vc] &lt;= 0.05 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.04 AND [vc] &lt;= 0.05 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.04 AND [vc] &lt;= 0.05 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.05 AND [vc] &lt;= 0.06 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.05 AND [vc] &lt;= 0.06 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.05 AND [vc] &lt;= 0.06 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.06 AND [vc] &lt;= 0.07 AND lanes == 2) THEN 0.000000162400 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.06 AND [vc] &lt;= 0.07 AND lanes == 3) THEN 0.000000014120 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.06 AND [vc] &lt;= 0.07 AND lanes == 4) THEN 0.000000000203 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.07 AND [vc] &lt;= 0.08 AND lanes == 2) THEN 0.000000282500 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.07 AND [vc] &lt;= 0.08 AND lanes == 3) THEN 0.000000026290 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.07 AND [vc] &lt;= 0.08 AND lanes == 4) THEN 0.000000000399 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.08 AND [vc] &lt;= 0.09 AND lanes == 2) THEN 0.000000402700 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.08 AND [vc] &lt;= 0.09 AND lanes == 3) THEN 0.000000038460 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.08 AND [vc] &lt;= 0.09 AND lanes == 4) THEN 0.000000000595 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.09 AND [vc] &lt;= 0.10 AND lanes == 2) THEN 0.000000522800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.09 AND [vc] &lt;= 0.10 AND lanes == 3) THEN 0.000000050630 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.09 AND [vc] &lt;= 0.10 AND lanes == 4) THEN 0.000000000790 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.10 AND [vc] &lt;= 0.11 AND lanes == 2) THEN 0.000000522800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.10 AND [vc] &lt;= 0.11 AND lanes == 3) THEN 0.000000050630 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.10 AND [vc] &lt;= 0.11 AND lanes == 4) THEN 0.000000000790 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.11 AND [vc] &lt;= 0.12 AND lanes == 2) THEN 0.000000643000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.11 AND [vc] &lt;= 0.12 AND lanes == 3) THEN 0.000000062800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.11 AND [vc] &lt;= 0.12 AND lanes == 4) THEN 0.000000000986 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.12 AND [vc] &lt;= 0.13 AND lanes == 2) THEN 0.000001146000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.12 AND [vc] &lt;= 0.13 AND lanes == 3) THEN 0.000000146000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.12 AND [vc] &lt;= 0.13 AND lanes == 4) THEN 0.000000004229 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.13 AND [vc] &lt;= 0.14 AND lanes == 2) THEN 0.000001650000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.13 AND [vc] &lt;= 0.14 AND lanes == 3) THEN 0.000000229300 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.13 AND [vc] &lt;= 0.14 AND lanes == 4) THEN 0.000000007472 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.14 AND [vc] &lt;= 0.15 AND lanes == 2) THEN 0.000002153000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.14 AND [vc] &lt;= 0.15 AND lanes == 3) THEN 0.000000312500 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.14 AND [vc] &lt;= 0.15 AND lanes == 4) THEN 0.000000010710 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.15 AND [vc] &lt;= 0.16 AND lanes == 2) THEN 0.000003160000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.15 AND [vc] &lt;= 0.16 AND lanes == 3) THEN 0.000000479000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.15 AND [vc] &lt;= 0.16 AND lanes == 4) THEN 0.000000017200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.16 AND [vc] &lt;= 0.17 AND lanes == 2) THEN 0.000004488000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.16 AND [vc] &lt;= 0.17 AND lanes == 3) THEN 0.000000787200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.16 AND [vc] &lt;= 0.17 AND lanes == 4) THEN 0.000000039960 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.17 AND [vc] &lt;= 0.18 AND lanes == 2) THEN 0.000005816000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.17 AND [vc] &lt;= 0.18 AND lanes == 3) THEN 0.000001095000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.17 AND [vc] &lt;= 0.18 AND lanes == 4) THEN 0.000000062720 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.18 AND [vc] &lt;= 0.19 AND lanes == 2) THEN 0.000007144000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.18 AND [vc] &lt;= 0.19 AND lanes == 3) THEN 0.000001404000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.18 AND [vc] &lt;= 0.19 AND lanes == 4) THEN 0.000000085480 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.19 AND [vc] &lt;= 0.20 AND lanes == 2) THEN 0.000008472000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.19 AND [vc] &lt;= 0.20 AND lanes == 3) THEN 0.000001712000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.19 AND [vc] &lt;= 0.20 AND lanes == 4) THEN 0.000000108200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.20 AND [vc] &lt;= 0.21 AND lanes == 2) THEN 0.000009800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.20 AND [vc] &lt;= 0.21 AND lanes == 3) THEN 0.000002020000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.20 AND [vc] &lt;= 0.21 AND lanes == 4) THEN 0.000000131000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.21 AND [vc] &lt;= 0.22 AND lanes == 2) THEN 0.000012560000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.21 AND [vc] &lt;= 0.22 AND lanes == 3) THEN 0.000002854000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.21 AND [vc] &lt;= 0.22 AND lanes == 4) THEN 0.000000230800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.22 AND [vc] &lt;= 0.23 AND lanes == 2) THEN 0.000015320000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.22 AND [vc] &lt;= 0.23 AND lanes == 3) THEN 0.000003688000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.22 AND [vc] &lt;= 0.23 AND lanes == 4) THEN 0.000000330600 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.23 AND [vc] &lt;= 0.24 AND lanes == 2) THEN 0.000018080000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.23 AND [vc] &lt;= 0.24 AND lanes == 3) THEN 0.000004522000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.23 AND [vc] &lt;= 0.24 AND lanes == 4) THEN 0.000000430400 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.24 AND [vc] &lt;= 0.25 AND lanes == 2) THEN 0.000020840000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.24 AND [vc] &lt;= 0.25 AND lanes == 3) THEN 0.000005356000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.24 AND [vc] &lt;= 0.25 AND lanes == 4) THEN 0.000000530200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.25 AND [vc] &lt;= 0.26 AND lanes == 2) THEN 0.000023600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.25 AND [vc] &lt;= 0.26 AND lanes == 3) THEN 0.000006190000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.25 AND [vc] &lt;= 0.26 AND lanes == 4) THEN 0.000000630000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.26 AND [vc] &lt;= 0.27 AND lanes == 2) THEN 0.000028520000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.26 AND [vc] &lt;= 0.27 AND lanes == 3) THEN 0.000008032000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.26 AND [vc] &lt;= 0.27 AND lanes == 4) THEN 0.000000960000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.27 AND [vc] &lt;= 0.28 AND lanes == 2) THEN 0.000033440000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.27 AND [vc] &lt;= 0.28 AND lanes == 3) THEN 0.000009874000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.27 AND [vc] &lt;= 0.28 AND lanes == 4) THEN 0.000001290000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.28 AND [vc] &lt;= 0.29 AND lanes == 2) THEN 0.000038360000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.28 AND [vc] &lt;= 0.29 AND lanes == 3) THEN 0.000011720000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.28 AND [vc] &lt;= 0.29 AND lanes == 4) THEN 0.000001620000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.29 AND [vc] &lt;= 0.30 AND lanes == 2) THEN 0.000043280000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.29 AND [vc] &lt;= 0.30 AND lanes == 3) THEN 0.000013560000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.29 AND [vc] &lt;= 0.30 AND lanes == 4) THEN 0.000001950000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.30 AND [vc] &lt;= 0.31 AND lanes == 2) THEN 0.000048200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.30 AND [vc] &lt;= 0.31 AND lanes == 3) THEN 0.000015400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.30 AND [vc] &lt;= 0.31 AND lanes == 4) THEN 0.000002280000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.31 AND [vc] &lt;= 0.32 AND lanes == 2) THEN 0.000056240000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.31 AND [vc] &lt;= 0.32 AND lanes == 3) THEN 0.000019000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.31 AND [vc] &lt;= 0.32 AND lanes == 4) THEN 0.000003174000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.32 AND [vc] &lt;= 0.33 AND lanes == 2) THEN 0.000064280000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.32 AND [vc] &lt;= 0.33 AND lanes == 3) THEN 0.000022600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.32 AND [vc] &lt;= 0.33 AND lanes == 4) THEN 0.000004068000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.33 AND [vc] &lt;= 0.34 AND lanes == 2) THEN 0.000072320000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.33 AND [vc] &lt;= 0.34 AND lanes == 3) THEN 0.000026200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.33 AND [vc] &lt;= 0.34 AND lanes == 4) THEN 0.000004962000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.34 AND [vc] &lt;= 0.35 AND lanes == 2) THEN 0.000080360000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.34 AND [vc] &lt;= 0.35 AND lanes == 3) THEN 0.000029800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.34 AND [vc] &lt;= 0.35 AND lanes == 4) THEN 0.000005856000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.35 AND [vc] &lt;= 0.36 AND lanes == 2) THEN 0.000088400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.35 AND [vc] &lt;= 0.36 AND lanes == 3) THEN 0.000033400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.35 AND [vc] &lt;= 0.36 AND lanes == 4) THEN 0.000006750000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.36 AND [vc] &lt;= 0.37 AND lanes == 2) THEN 0.000100500000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.36 AND [vc] &lt;= 0.37 AND lanes == 3) THEN 0.000039760000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.36 AND [vc] &lt;= 0.37 AND lanes == 4) THEN 0.000008860000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.37 AND [vc] &lt;= 0.38 AND lanes == 2) THEN 0.000112600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.37 AND [vc] &lt;= 0.38 AND lanes == 3) THEN 0.000046120000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.37 AND [vc] &lt;= 0.38 AND lanes == 4) THEN 0.000010970000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.38 AND [vc] &lt;= 0.39 AND lanes == 2) THEN 0.000124800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.38 AND [vc] &lt;= 0.39 AND lanes == 3) THEN 0.000052480000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.38 AND [vc] &lt;= 0.39 AND lanes == 4) THEN 0.000013080000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.39 AND [vc] &lt;= 0.40 AND lanes == 2) THEN 0.000136900000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.39 AND [vc] &lt;= 0.40 AND lanes == 3) THEN 0.000058840000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.39 AND [vc] &lt;= 0.40 AND lanes == 4) THEN 0.000015190000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.40 AND [vc] &lt;= 0.41 AND lanes == 2) THEN 0.000149000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.40 AND [vc] &lt;= 0.41 AND lanes == 3) THEN 0.000065200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.40 AND [vc] &lt;= 0.41 AND lanes == 4) THEN 0.000017300000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.41 AND [vc] &lt;= 0.42 AND lanes == 2) THEN 0.000166600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.41 AND [vc] &lt;= 0.42 AND lanes == 3) THEN 0.000075760000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.41 AND [vc] &lt;= 0.42 AND lanes == 4) THEN 0.000021780000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.42 AND [vc] &lt;= 0.43 AND lanes == 2) THEN 0.000184200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.42 AND [vc] &lt;= 0.43 AND lanes == 3) THEN 0.000086320000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.42 AND [vc] &lt;= 0.43 AND lanes == 4) THEN 0.000026260000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.43 AND [vc] &lt;= 0.44 AND lanes == 2) THEN 0.000201800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.43 AND [vc] &lt;= 0.44 AND lanes == 3) THEN 0.000096880000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.43 AND [vc] &lt;= 0.44 AND lanes == 4) THEN 0.000030740000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.44 AND [vc] &lt;= 0.45 AND lanes == 2) THEN 0.000219400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.44 AND [vc] &lt;= 0.45 AND lanes == 3) THEN 0.000107400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.44 AND [vc] &lt;= 0.45 AND lanes == 4) THEN 0.000035220000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.45 AND [vc] &lt;= 0.46 AND lanes == 2) THEN 0.000237000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.45 AND [vc] &lt;= 0.46 AND lanes == 3) THEN 0.000118000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.45 AND [vc] &lt;= 0.46 AND lanes == 4) THEN 0.000039700000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.46 AND [vc] &lt;= 0.47 AND lanes == 2) THEN 0.000261400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.46 AND [vc] &lt;= 0.47 AND lanes == 3) THEN 0.000134200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.46 AND [vc] &lt;= 0.47 AND lanes == 4) THEN 0.000048460000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.47 AND [vc] &lt;= 0.48 AND lanes == 2) THEN 0.000285800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.47 AND [vc] &lt;= 0.48 AND lanes == 3) THEN 0.000150400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.47 AND [vc] &lt;= 0.48 AND lanes == 4) THEN 0.000057220000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.48 AND [vc] &lt;= 0.49 AND lanes == 2) THEN 0.000310200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.48 AND [vc] &lt;= 0.49 AND lanes == 3) THEN 0.000166600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.48 AND [vc] &lt;= 0.49 AND lanes == 4) THEN 0.000065980000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.49 AND [vc] &lt;= 0.50 AND lanes == 2) THEN 0.000334600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.49 AND [vc] &lt;= 0.50 AND lanes == 3) THEN 0.000182800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.49 AND [vc] &lt;= 0.50 AND lanes == 4) THEN 0.000074740000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.50 AND [vc] &lt;= 0.51 AND lanes == 2) THEN 0.000359000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.50 AND [vc] &lt;= 0.51 AND lanes == 3) THEN 0.000199000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.50 AND [vc] &lt;= 0.51 AND lanes == 4) THEN 0.000083500000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.51 AND [vc] &lt;= 0.52 AND lanes == 2) THEN 0.000392000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.51 AND [vc] &lt;= 0.52 AND lanes == 3) THEN 0.000223600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.51 AND [vc] &lt;= 0.52 AND lanes == 4) THEN 0.000099400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.52 AND [vc] &lt;= 0.53 AND lanes == 2) THEN 0.000425000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.52 AND [vc] &lt;= 0.53 AND lanes == 3) THEN 0.000248200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.52 AND [vc] &lt;= 0.53 AND lanes == 4) THEN 0.000115300000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.53 AND [vc] &lt;= 0.54 AND lanes == 2) THEN 0.000458000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.53 AND [vc] &lt;= 0.54 AND lanes == 3) THEN 0.000272800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.53 AND [vc] &lt;= 0.54 AND lanes == 4) THEN 0.000131200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.54 AND [vc] &lt;= 0.55 AND lanes == 2) THEN 0.000491000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.54 AND [vc] &lt;= 0.55 AND lanes == 3) THEN 0.000297400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.54 AND [vc] &lt;= 0.55 AND lanes == 4) THEN 0.000147100000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.55 AND [vc] &lt;= 0.56 AND lanes == 2) THEN 0.000524000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.55 AND [vc] &lt;= 0.56 AND lanes == 3) THEN 0.000322000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.55 AND [vc] &lt;= 0.56 AND lanes == 4) THEN 0.000163000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.56 AND [vc] &lt;= 0.57 AND lanes == 2) THEN 0.000568200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.56 AND [vc] &lt;= 0.57 AND lanes == 3) THEN 0.000357400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.56 AND [vc] &lt;= 0.57 AND lanes == 4) THEN 0.000190800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.57 AND [vc] &lt;= 0.58 AND lanes == 2) THEN 0.000612400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.57 AND [vc] &lt;= 0.58 AND lanes == 3) THEN 0.000392800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.57 AND [vc] &lt;= 0.58 AND lanes == 4) THEN 0.000218600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.58 AND [vc] &lt;= 0.59 AND lanes == 2) THEN 0.000656600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.58 AND [vc] &lt;= 0.59 AND lanes == 3) THEN 0.000428200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.58 AND [vc] &lt;= 0.59 AND lanes == 4) THEN 0.000246400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.59 AND [vc] &lt;= 0.60 AND lanes == 2) THEN 0.000700800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.59 AND [vc] &lt;= 0.60 AND lanes == 3) THEN 0.000463600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.59 AND [vc] &lt;= 0.60 AND lanes == 4) THEN 0.000274200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.60 AND [vc] &lt;= 0.61 AND lanes == 2) THEN 0.000745000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.60 AND [vc] &lt;= 0.61 AND lanes == 3) THEN 0.000499000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.60 AND [vc] &lt;= 0.61 AND lanes == 4) THEN 0.000302000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.61 AND [vc] &lt;= 0.62 AND lanes == 2) THEN 0.000806400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.61 AND [vc] &lt;= 0.62 AND lanes == 3) THEN 0.000550600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.61 AND [vc] &lt;= 0.62 AND lanes == 4) THEN 0.000347800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.62 AND [vc] &lt;= 0.63 AND lanes == 2) THEN 0.000867800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.62 AND [vc] &lt;= 0.63 AND lanes == 3) THEN 0.000602200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.62 AND [vc] &lt;= 0.63 AND lanes == 4) THEN 0.000393600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.63 AND [vc] &lt;= 0.64 AND lanes == 2) THEN 0.000929200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.63 AND [vc] &lt;= 0.64 AND lanes == 3) THEN 0.000653800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.63 AND [vc] &lt;= 0.64 AND lanes == 4) THEN 0.000439400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.64 AND [vc] &lt;= 0.65 AND lanes == 2) THEN 0.000990600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.64 AND [vc] &lt;= 0.65 AND lanes == 3) THEN 0.000705400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.64 AND [vc] &lt;= 0.65 AND lanes == 4) THEN 0.000485200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.65 AND [vc] &lt;= 0.66 AND lanes == 2) THEN 0.001052000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.65 AND [vc] &lt;= 0.66 AND lanes == 3) THEN 0.000757000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.65 AND [vc] &lt;= 0.66 AND lanes == 4) THEN 0.000531000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.66 AND [vc] &lt;= 0.67 AND lanes == 2) THEN 0.001148000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.66 AND [vc] &lt;= 0.67 AND lanes == 3) THEN 0.000836000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.66 AND [vc] &lt;= 0.67 AND lanes == 4) THEN 0.000605200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.67 AND [vc] &lt;= 0.68 AND lanes == 2) THEN 0.001243000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.67 AND [vc] &lt;= 0.68 AND lanes == 3) THEN 0.000915000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.67 AND [vc] &lt;= 0.68 AND lanes == 4) THEN 0.000679400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.68 AND [vc] &lt;= 0.69 AND lanes == 2) THEN 0.001339000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.68 AND [vc] &lt;= 0.69 AND lanes == 3) THEN 0.000994000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.68 AND [vc] &lt;= 0.69 AND lanes == 4) THEN 0.000753600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.69 AND [vc] &lt;= 0.70 AND lanes == 2) THEN 0.001434000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.69 AND [vc] &lt;= 0.70 AND lanes == 3) THEN 0.001073000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.69 AND [vc] &lt;= 0.70 AND lanes == 4) THEN 0.000827800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.70 AND [vc] &lt;= 0.71 AND lanes == 2) THEN 0.001530000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.70 AND [vc] &lt;= 0.71 AND lanes == 3) THEN 0.001152000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.70 AND [vc] &lt;= 0.71 AND lanes == 4) THEN 0.000902000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.71 AND [vc] &lt;= 0.72 AND lanes == 2) THEN 0.001710000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.71 AND [vc] &lt;= 0.72 AND lanes == 3) THEN 0.001296000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.71 AND [vc] &lt;= 0.72 AND lanes == 4) THEN 0.001025000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.72 AND [vc] &lt;= 0.73 AND lanes == 2) THEN 0.001890000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.72 AND [vc] &lt;= 0.73 AND lanes == 3) THEN 0.001440000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.72 AND [vc] &lt;= 0.73 AND lanes == 4) THEN 0.001149000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.73 AND [vc] &lt;= 0.74 AND lanes == 2) THEN 0.002071000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.73 AND [vc] &lt;= 0.74 AND lanes == 3) THEN 0.001585000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.73 AND [vc] &lt;= 0.74 AND lanes == 4) THEN 0.001272000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.74 AND [vc] &lt;= 0.75 AND lanes == 2) THEN 0.002251000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.74 AND [vc] &lt;= 0.75 AND lanes == 3) THEN 0.001729000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.74 AND [vc] &lt;= 0.75 AND lanes == 4) THEN 0.001396000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.75 AND [vc] &lt;= 0.76 AND lanes == 2) THEN 0.002431000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.75 AND [vc] &lt;= 0.76 AND lanes == 3) THEN 0.001873000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.75 AND [vc] &lt;= 0.76 AND lanes == 4) THEN 0.001519000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.76 AND [vc] &lt;= 0.77 AND lanes == 2) THEN 0.002844000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.76 AND [vc] &lt;= 0.77 AND lanes == 3) THEN 0.002216000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.76 AND [vc] &lt;= 0.77 AND lanes == 4) THEN 0.001775000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.77 AND [vc] &lt;= 0.78 AND lanes == 2) THEN 0.003258000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.77 AND [vc] &lt;= 0.78 AND lanes == 3) THEN 0.002560000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.77 AND [vc] &lt;= 0.78 AND lanes == 4) THEN 0.002031000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.78 AND [vc] &lt;= 0.79 AND lanes == 2) THEN 0.003671000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.78 AND [vc] &lt;= 0.79 AND lanes == 3) THEN 0.002903000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.78 AND [vc] &lt;= 0.79 AND lanes == 4) THEN 0.002286000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.79 AND [vc] &lt;= 0.80 AND lanes == 2) THEN 0.004085000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.79 AND [vc] &lt;= 0.80 AND lanes == 3) THEN 0.003247000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.79 AND [vc] &lt;= 0.80 AND lanes == 4) THEN 0.002542000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.80 AND [vc] &lt;= 0.81 AND lanes == 2) THEN 0.004498000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.80 AND [vc] &lt;= 0.81 AND lanes == 3) THEN 0.003590000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.80 AND [vc] &lt;= 0.81 AND lanes == 4) THEN 0.002798000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.81 AND [vc] &lt;= 0.82 AND lanes == 2) THEN 0.005301000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.81 AND [vc] &lt;= 0.82 AND lanes == 3) THEN 0.004317000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.81 AND [vc] &lt;= 0.82 AND lanes == 4) THEN 0.003376000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.82 AND [vc] &lt;= 0.83 AND lanes == 2) THEN 0.006104000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.82 AND [vc] &lt;= 0.83 AND lanes == 3) THEN 0.005044000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.82 AND [vc] &lt;= 0.83 AND lanes == 4) THEN 0.003954000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.83 AND [vc] &lt;= 0.84 AND lanes == 2) THEN 0.006906000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.83 AND [vc] &lt;= 0.84 AND lanes == 3) THEN 0.005770000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.83 AND [vc] &lt;= 0.84 AND lanes == 4) THEN 0.004531000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.84 AND [vc] &lt;= 0.85 AND lanes == 2) THEN 0.007709000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.84 AND [vc] &lt;= 0.85 AND lanes == 3) THEN 0.006497000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.84 AND [vc] &lt;= 0.85 AND lanes == 4) THEN 0.005109000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.85 AND [vc] &lt;= 0.86 AND lanes == 2) THEN 0.008512000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.85 AND [vc] &lt;= 0.86 AND lanes == 3) THEN 0.007224000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.85 AND [vc] &lt;= 0.86 AND lanes == 4) THEN 0.005687000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.86 AND [vc] &lt;= 0.87 AND lanes == 2) THEN 0.009319000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.86 AND [vc] &lt;= 0.87 AND lanes == 3) THEN 0.007952000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.86 AND [vc] &lt;= 0.87 AND lanes == 4) THEN 0.006260000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.87 AND [vc] &lt;= 0.88 AND lanes == 2) THEN 0.010130000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.87 AND [vc] &lt;= 0.88 AND lanes == 3) THEN 0.008680000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.87 AND [vc] &lt;= 0.88 AND lanes == 4) THEN 0.006833000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.88 AND [vc] &lt;= 0.89 AND lanes == 2) THEN 0.010930000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.88 AND [vc] &lt;= 0.89 AND lanes == 3) THEN 0.009407000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.88 AND [vc] &lt;= 0.89 AND lanes == 4) THEN 0.007406000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.89 AND [vc] &lt;= 0.90 AND lanes == 2) THEN 0.011740000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.89 AND [vc] &lt;= 0.90 AND lanes == 3) THEN 0.010140000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.89 AND [vc] &lt;= 0.90 AND lanes == 4) THEN 0.007979000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.90 AND [vc] &lt;= 0.91 AND lanes == 2) THEN 0.012550000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.90 AND [vc] &lt;= 0.91 AND lanes == 3) THEN 0.010860000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.90 AND [vc] &lt;= 0.91 AND lanes == 4) THEN 0.008552000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.91 AND [vc] &lt;= 0.92 AND lanes == 2) THEN 0.013260000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.91 AND [vc] &lt;= 0.92 AND lanes == 3) THEN 0.011510000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.91 AND [vc] &lt;= 0.92 AND lanes == 4) THEN 0.009059000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.92 AND [vc] &lt;= 0.93 AND lanes == 2) THEN 0.013980000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.92 AND [vc] &lt;= 0.93 AND lanes == 3) THEN 0.012160000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.92 AND [vc] &lt;= 0.93 AND lanes == 4) THEN 0.009566000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.93 AND [vc] &lt;= 0.94 AND lanes == 2) THEN 0.014690000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.93 AND [vc] &lt;= 0.94 AND lanes == 3) THEN 0.012810000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.93 AND [vc] &lt;= 0.94 AND lanes == 4) THEN 0.010070000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.94 AND [vc] &lt;= 0.95 AND lanes == 2) THEN 0.015410000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.94 AND [vc] &lt;= 0.95 AND lanes == 3) THEN 0.013460000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.94 AND [vc] &lt;= 0.95 AND lanes == 4) THEN 0.010580000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.95 AND [vc] &lt;= 0.96 AND lanes == 2) THEN 0.016120000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.95 AND [vc] &lt;= 0.96 AND lanes == 3) THEN 0.014110000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.95 AND [vc] &lt;= 0.96 AND lanes == 4) THEN 0.011090000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.96 AND [vc] &lt;= 0.97 AND lanes == 2) THEN 0.016870000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.96 AND [vc] &lt;= 0.97 AND lanes == 3) THEN 0.014780000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.96 AND [vc] &lt;= 0.97 AND lanes == 4) THEN 0.011600000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.97 AND [vc] &lt;= 0.98 AND lanes == 2) THEN 0.017620000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.97 AND [vc] &lt;= 0.98 AND lanes == 3) THEN 0.015440000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.97 AND [vc] &lt;= 0.98 AND lanes == 4) THEN 0.012120000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.98 AND [vc] &lt;= 0.99 AND lanes == 2) THEN 0.018360000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.98 AND [vc] &lt;= 0.99 AND lanes == 3) THEN 0.016110000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.98 AND [vc] &lt;= 0.99 AND lanes == 4) THEN 0.012640000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.99 AND [vc] &lt;= 1.00 AND lanes == 2) THEN 0.019110000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.99 AND [vc] &lt;= 1.00 AND lanes == 3) THEN 0.016770000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.99 AND [vc] &lt;= 1.00 AND lanes == 4) THEN 0.013160000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 1.00 AND lanes == 2) THEN 0.019860000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 1.00 AND lanes == 3) THEN 0.017440000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 1.00 AND lanes == 4) THEN 0.013680000000 * [Calculation_4420828151331817]&#13;&#10;ELSE 0.0&#13;&#10;END' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column datatype='real' name='[lanes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_429812310551937025]' derivation='Sum' name='[sum:Calculation_429812310551937025:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='real' name='[vc]' role='dimension' type='ordinal' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <manual-sort column='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[avgload5period.tde].[none:timeperiod:nk]' value='39' />
            <format attr='width' field='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='126' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[avgload5period.tde].[none:timeperiod:nk]' value='252' />
            <format attr='height' field='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='60' />
            <format attr='height' field='[avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='32' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[avgload5period.tde].[none:timeperiod:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[avgload5period.tde].[sum:Calculation_429812310551937025:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[avgload5period.tde].[none:timeperiod:nk]</rows>
        <cols>([avgload5period.tde].[none:Calculation_7570828154404546:nk] / [avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Supply'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Roadway Lane Miles by County: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column datatype='real' name='[lanes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcto:sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;</bucket>
              <bucket>&quot;[avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <natural-sort column='[avgload5period.tde].[none:gl:ok]' direction='ASC' />
          <filter class='categorical' column='[avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[avgload5period.tde].[none:gl:ok]</column>
            <column>[avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[avgload5period.tde].[none:gl:ok]' value='38' />
            <format attr='width' field='[avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='92' />
            <format attr='text-format' field='[avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]' value='p0.0%' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[avgload5period.tde].[none:gl:ok]' value='132' />
            <format attr='height' field='[avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='40' />
            <format attr='height' field='[avgload5period.tde].[:Measure Names]' value='80' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[avgload5period.tde].[none:gl:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[:Measure Names]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[avgload5period.tde].[none:gl:ok]</rows>
        <cols total='true'>([avgload5period.tde].[:Measure Names] / [avgload5period.tde].[none:Calculation_7570828154404546:nk])</cols>
        <pages>
          <column>[avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.VHT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Hours Traveled - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='VHT' datatype='real' name='[Calculation_5810829165448827]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ctim]*[vol_tot]/60' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5810829165448827]' derivation='Sum' name='[sum:Calculation_5810829165448827:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[sum:Calculation_5810829165448827:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[usr:Calculation_4000829170355183:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[avgload5period.tde].[sum:Calculation_5810829165448827:qk]&quot;</bucket>
              <bucket>&quot;[avgload5period.tde].[usr:Calculation_4000829170355183:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Road&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='82' />
            <format attr='height' field='[avgload5period.tde].[none:timeperiod:nk]' value='30' />
            <format attr='text-format' field='[avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[avgload5period.tde].[none:timeperiod:nk]' value='192' />
            <format attr='height' field='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='32' />
            <format attr='width' field='[avgload5period.tde].[:Measure Names]' value='112' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[avgload5period.tde].[none:timeperiod:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([avgload5period.tde].[:Measure Names] / [avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>([avgload5period.tde].[none:Calculation_7570828154404546:nk] / [avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.VMT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Time Period Duration' datatype='integer' name='[Calculation_7220911171450081]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [timeperiod]=&apos;EA&apos; THEN&#13;&#10;  3&#13;&#10;ELSEIF [timeperiod]=&apos;AM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;MD&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [timeperiod]=&apos;PM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;EV&apos; THEN&#13;&#10;  8&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[avgload5period.tde].[none:timeperiod:nk]' value='29' />
            <format attr='text-format' field='[avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]' value='p0.0%' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[avgload5period.tde].[:Measure Names]' value='144' />
            <format attr='width' field='[avgload5period.tde].[none:timeperiod:nk]' value='180' />
            <format attr='height' field='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='52' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[avgload5period.tde].[none:timeperiod:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([avgload5period.tde].[:Measure Names] / [avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>([avgload5period.tde].[none:Calculation_7570828154404546:nk] / [avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.vc Ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle &apos;Congestion&apos; by Time of Delay: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Congestion (volume over capacity)' datatype='string' name='[Calculation_5010829191108792]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [vc] &lt;= 0.00001 THEN&#13;&#10;  &apos;0 (dummy)&apos;&#13;&#10;ELSEIF [vc] &lt;= 0.75 THEN&#13;&#10;  &apos;Light&#13;&#10;(v/c &lt; 0.75)&apos;&#13;&#10;ELSEIF [vc] &lt;= 1.0 THEN&#13;&#10;  &apos;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Heavy&#13;&#10;(v/c &gt; 1.00)&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT (Congestion non-dummy)' datatype='real' name='[Calculation_7680829191605709]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_5010829191108792]==&apos;0 (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5010829191108792]' derivation='None' name='[none:Calculation_5010829191108792:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7680829191605709]' derivation='Sum' name='[pcto:sum:Calculation_7680829191605709:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='real' name='[vc]' role='dimension' type='ordinal' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[avgload5period.tde].[none:Calculation_5010829191108792:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;0 (dummy)&quot;</bucket>
              <bucket>&quot;Light&#13;&#10;(v/c &lt; 0.75)&quot;</bucket>
              <bucket>&quot;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&quot;</bucket>
              <bucket>&quot;Heavy&#13;&#10;(v/c &gt; 1.00)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[avgload5period.tde].[none:timeperiod:nk]' value='37' />
            <format attr='width' field='[avgload5period.tde].[none:Calculation_5010829191108792:nk]' value='127' />
            <format attr='text-format' field='[avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[avgload5period.tde].[:Measure Names]' value='164' />
            <format attr='width' field='[avgload5period.tde].[none:timeperiod:nk]' value='188' />
            <format attr='height' field='[avgload5period.tde].[none:Calculation_5010829191108792:nk]' value='64' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[avgload5period.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:timeperiod:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:Calculation_5010829191108792:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([avgload5period.tde].[:Measure Names] / [avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>[avgload5period.tde].[none:Calculation_5010829191108792:nk]</cols>
        <pages>
          <column>[avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.VMT by Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled by Speed Category - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='avgload5period.tde'>
            <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[cspd]' role='measure' type='quantitative' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6500829184447940]' derivation='None' name='[none:Calculation_6500829184447940:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[avgload5period.tde].[usr:Calculation1:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[avgload5period.tde].[none:timeperiod:nk]' value='30' />
            <format attr='width' field='[avgload5period.tde].[none:Calculation_6500829184447940:nk]' value='111' />
            <format attr='text-format' field='[avgload5period.tde].[usr:Calculation1:qk]' value='p0.0%' />
            <format attr='text-format' field='[avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[avgload5period.tde].[:Measure Names]' value='116' />
            <format attr='width' field='[avgload5period.tde].[none:timeperiod:nk]' value='208' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[avgload5period.tde].[none:timeperiod:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[avgload5period.tde].[none:Calculation_6500829184447940:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[avgload5period.tde].[Multiple Values]' />
              <lod column='[avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([avgload5period.tde].[:Measure Names] / [avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>[avgload5period.tde].[none:Calculation_6500829184447940:nk]</cols>
        <pages>
          <column>[avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Indiv.Table.Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='98'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2010&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde].[:Measure Names]</field>
            <field>[avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:src:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{E4C25DEA-AA59-4BD5-9580-9E7501B76735}' />
    </window>
    <window class='worksheet' name='Indiv.Table.Non-recurring'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='98'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, 3 - Big Cities&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde].[:Measure Names]</field>
            <field>[avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:src:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{4CF9A85E-AECD-4093-8D96-5638D451DD9E}' />
    </window>
    <window class='worksheet' name='Indiv.Table.vc Ratio'>
      <cards>
        <edge name='left'>
          <strip size='195'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='123'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, 4 - Draft Preferred&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde].[:Measure Names]</field>
            <field>[avgload5period.tde].[none:Calculation_5010829191108792:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:src:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{96188E47-F9C8-4BDA-8D44-2E03C7602813}' />
    </window>
    <window class='worksheet' name='Indiv.Table.Supply'>
      <cards>
        <edge name='left'>
          <strip size='185'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='140'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde].[:Measure Names]</field>
            <field>[avgload5period.tde].[Facility Type (group)]</field>
            <field>[avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:gl:ok]</field>
            <field>[avgload5period.tde].[none:src:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{2CBD39AA-867C-4CAA-890B-AC1D734EB417}' />
    </window>
    <window class='worksheet' name='Across.Table.Supply' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='94'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde].[:Measure Names]</field>
            <field>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:gl:ok]</field>
            <field>[avgload5period.tde].[none:src:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{6D06BCA9-E0AA-40C8-A001-7926780C2C24}' />
    </window>
    <window class='worksheet' name='Across.Chart.Supply' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='82'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde].[:Measure Names]</field>
            <field>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{A05E91A9-39F4-4AB2-A147-C237FEB0C3A6}' />
    </window>
    <window class='worksheet' name='Indiv.Table.VMT'>
      <cards>
        <edge name='left'>
          <strip size='202'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='119'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2010&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde].[:Measure Names]</field>
            <field>[avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:ft:ok]</field>
            <field>[avgload5period.tde].[none:src:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
            <field>[textscan.41879.461103888891].[none:Calculation_4320828142204452:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{EFA22D39-09FD-4341-884F-CF36F3105911}' />
    </window>
    <window class='worksheet' name='Indiv.Table.VHT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='95'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde].[:Measure Names]</field>
            <field>[avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:src:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{6207B698-9973-4414-818C-11797B6ED71C}' />
    </window>
    <window class='worksheet' name='Across.Table.VMT' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='85'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde].[:Measure Names]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:src:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{41B34EAA-AE7A-4B41-9A49-C929DC72C343}' />
    </window>
    <window class='worksheet' name='Across.Chart.VMT' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde (copy)].[:Measure Names]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{2DD6E770-0A8A-41CF-847F-6C71D40CE258}' />
    </window>
    <window class='worksheet' name='Across.Table.Fwy Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='107'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:src:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{F4DAB8C7-061F-4141-80B3-E2CA340C609A}' />
    </window>
    <window class='worksheet' name='Across.Chart.Fwy Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='96'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde (copy)].[none:Calculation_7550828155717668:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{534AC90C-3BA0-4818-BE15-1692342E1F6E}' />
    </window>
    <window class='worksheet' name='Across.Table.Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='107'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:src:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{AF3CDFA6-ADFE-4F1B-9170-B4BE2A174830}' />
    </window>
    <window class='worksheet' name='Across.Chart.Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='96'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde (copy)].[none:Calculation_7550828155717668:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{ABB249F2-DDB2-4348-8A78-07DC0103CDAE}' />
    </window>
    <window class='worksheet' name='Table.VMT by Speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='104'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde].[:Measure Names]</field>
            <field>[avgload5period.tde].[none:Calculation_6500829184447940:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
            <field>[avgload5period.tde].[none:src:nk]</field>
            <field>[avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{AA621227-1259-4A78-A0EB-ECEAF4E1B28E}' />
    </window>
    <window class='worksheet' name='Across.Table.VMT by Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='118'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde (copy 3)].[:Measure Names]</field>
            <field>[avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
            <field>[avgload5period.tde (copy 3)].[none:src:nk]</field>
            <field>[avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{42093372-27B7-4785-A03B-3F75FF7182C5}' />
    </window>
    <window class='worksheet' maximized='true' name='Across.Chart.VMT by Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='82'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[avgload5period.tde (copy 3)].[:Measure Names]</field>
            <field>[avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
            <field>[avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
            <field>[avgload5period.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{7E3337FF-28E1-48F3-B76C-8EB1DE960DDA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Across.Chart.Fwy Speed' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Speed' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAYLklEQVR4nO3daXCd133f8e+z3BXAxb6DIAkCIMEFJLiAIGmJkmxZspZYViRHsZ20bqKo
      zYtOPJnpeDrpRDNtpk09TVK7HdeRs1iJLcudyrJiLdTKRaQIEhQIEgRXESAIgtgvcHH3e5/n
      9AVISjQAkQRwARD3/3mFu51zHtzn92zn3PNoSimFEGlKX+gGCLGQJAAirUkARFqTAIi0Zi50
      A8RdRNkEAgEse+K6idvjxjCdOE3jlh8NBwPEEhZubyYel2PS67FYFIfTha5pNz2fiEXRTBem
      oU36zFyQPYC4fcpmaKCPX/30p5zv7WV8bIzxcJxYLEYkGiMeixFPJFFKEYtGSCStGx/98Ne/
      oPdKD2+98RaRpCIamXjdtpJEo1FGR8ewbUUsGiUWT1wrI8qJA29wfjCWskWSPYC4fbpJVc0a
      zn3cRu26ddgXDtPRqdNy8jyV3hhm8SqCgyNs31jG2d4Y0fEgjz3xCE4NvN4sVq+p5cLp05w/
      8RG9fotoMMT6Cp3mHhOPFmbL6graOkfQo2PU1tVw+sJVRi9dpHF9ChcpdUWLdFG6rJr66mqq
      12/Cp8c5ceo0mqnjsCMErm28xwN+jrYcp/GBh+k5fwbN1DDsKMGExrotTWS7dbo/6WFDUxP1
      Kwo40NzKmoYmttWvSWnbJQBiztWsrkVXOkndRaZz4jmfL5cdTdspzfdRU1uDjoGlO8lwcOO4
      f1lVBe3NzZy8NMwXtjdw9ngzH7efS2lbNekJFncqEY9jOJ1gJbEUKAWGpkA3sJJJTIdJLBJB
      N124nOaNzzicE2lQyiYaiaA7XJiaQukmykpgmg5i0QjoDlxOk1g0gkLD6XJj6Kk5CZYAiLQm
      h0AirS1YAGzbXqiq54xSasksx1I4EJjJd7FgAQgGgwtV9ZxRShEKhRa6GbMWj8eJx+ML3YxZ
      m8k6tWgOgSwrSSKRIHGtI+WzlG1jTZFuZVtYlg1KkUwksJUimUxgX+uptG0bW9k3XrsdyraZ
      /E6FlUzeKPdzPk0yOdF+27JIWha2bZFMWijAti0SicTE4ymK+s3lVEph2TaWlZxYzttpv1JT
      LqtSCsuyUEqRSCRuucVXtk0imUQpm0QiiWVZ18pVWNeW5+a/p27L9Toty0LZ9o3/z20syJRb
      9OvtuZ0yJt776TqVSCRQfLr8SimM559//vlbt2buxWIxXC7Xjcdv/ewH/N+3D9NxsZeG+rU3
      nfWPXDjMa61DbFhVelMZLXte4p/3XmDX+lL+/M/+I9mV6/jxX/4HMmrupTzPw943XmVk+Cov
      /P0/EXEUUltZdItWWbz1i19Ssn4trs88Gx66xA++/784O2TTULfyxvPX/6nXlyMZHuTPvvvn
      rNpyD+f2vsyL753DM9zO373Vxn1NG+k48Crff/E1Dh1spq5hK5mum/shu1rf5XCXomZZPgDD
      XSc4dKqb9175KftP9bJzy617hC617eVsIJOKgozPPKvo7jjEz95spdzl569+8AKJrGVUl0/U
      Y1kTPbam+Wl7/Bea+c5//wmblnl4/nsvUJjlJunNJcdr8vMfvkBl41bcRHnhh//MpsaGKbek
      KhHglV/vI9f08+NfHiZ5tY1/fPkNKuo2kZ/pmuITn0pExviXPfupW1190/Nt+17jRy++jKd0
      DcsKsm567TfXqfH+8/yXv/gfHGn+COXz8jff/Qvqdzfw3X/7n9j40BfxhvsWV0+wYTrI9mXT
      /NbLvPVROw9/9bfZ8+rP2bKpnkDY4sVXxnD5z/Klbz1HvtOivctPVkIxHLbwFRXRf+E4upl/
      rbQoXb3jfOsrX2X0ykWC1sTW68PX/ok3ms/x1JOP8+LLr+E1IdNtsPOJP2T7CgcHPtyLoySf
      w/v24ypYxXf+3Te5fOEUMTOHquXln9v+ro5Wlq+upbXtHOW6C5IhLoVMCl2fhnnNxkaSPe2c
      aH6PHx8+Rt32LxE8f4BzfTZPP76Zj99/hVjsQZ64fzNtJ9opqFjJwXGNTfUrAPBfbuf7f/sS
      ZRsfgK699AQUnsxsXAVVfOfbX6P50EEGs0N07OmgZ8zimWf/mNpCF51XRnDqirOn2/nGs8/y
      /r6T0Fj7uctT4DQ4fn6A/KIsRq72ENaSvPi/9xEKwMpD/8I7e0+hOQvY84sX+Kith/vub2Rc
      Lyb0SStf/fazjHW0kFleQ/eVNkx0ugcCPP3INs529VNd4OQffvg3XBw0ePS+Kt48cApl64DG
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Supply' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbWElEQVR4nO3daXAc553f8W/P9NwnBvdFHARB8CZFWTxEibIlO/JVTlybzaaySWVTm0pV
      KlWuSl7kTSpRVby7SWorb7JbeWHtbmzJa1mHbUm2pNVB8ZBIkCAAggQvECDu+xgM5sBc3Z0X
      oKmD05LIAYbA4P95Q2LQ8/A/rP5NP/109/MohmEYCLFJWR52AUI8TBIAsalJAMSmJgEQm5oE
      QGxqEgCxqUkAxKYmARCbmgRAbGoSALGpSQDEpiYBEJtawQIQj8cL9U+timQySTabfdhlfGW6
      rpNIJB52GfdlPewTBQvARtqZADRNY6PdKLvR/o/XQ73SBRKbmgRAbGoSALGpSQDEpvbQAzDV
      383/+os/4/mX/wH9C046R3s/5rn/+hw//vP/wXj0q7WdnOnjzdM9q1SpGYPTb77Ij//sLzh3
      dYQvOm3+7Yt/xRunr9Dx3iv85OX30D+plFMnzqGtcaUYGqfe+Dn//cd/zvkb4yYbJTl14uw9
      taRis/zdX/9v/uIv/w/DE1O8+Orra11tTuff+QWvn74MRHjpxd/d1//ZeO9HnOoZ+sxr1uee
      e+65VazPVCqVwul03vP6pVNvEw80oy5OU14X4ud/83cs6F5mbl7kxMkTLBpBGqtDzA71Mpkt
      4/jxJ3Ev9fHCK+9itab45S9+iTVUQ8/Jt/nw9Bk81VvpPflr3v74Kq3NtUyFE1z9+C0+6Ohj
      x7Z6Xnvhb7k6lWKLP8vzz/8tsxkP2xqqUD5XVyaTwWq1YrVav+STZfjNy79m76FDTM9EcMZH
      +Okv36SkppbTv/0VJz66SH3rDnxOG+3nTrIYt7CcGCO8oBJSZ/nZS2+Sii/w0svv0bqrjldf
      fJFFJYAS7uenP38NNVRPdZn/nvo+zzAM0uk0DofDfCMtzquvvsOhYwcZnYhijw/xs5feoLyp
      gRO//g1nzp4jm1ri53//No3bKnj5hb9n2VFGY3UpXR+8gaPtmzy1s4xE1kJP7w3qvWmef+E1
      POW1nH33Na7cnmfk8hnePXeDPft2Y/uSr1ezfcKUvswbr73O8GyCo4e3cfL9HkocYX76i9cp
      r63hd6++wkdnzzPQ18tQGKyLt/jpS29S3rCV82+/zKkLl3FVNdP/0et82D3Ezl07H/4RoHn/
      EapsSfoHbzE+PomiqrR3XGSy/xatBw5w4+rVu9smE1Ei0ThL85NU7TyEmozgthl8fLGH4dvj
      7N9Ry5WudjrGDJ49todYeIahsTFGJuYY77tM5/mPMaoOsKfWx/tvvcmhH/wx413vMbecxwfQ
      4dgzTxMeH2RoYoaJqRnU1Dyd1wYYmoixvdzC7anIyrYWD87MLFGLBxWYnJrGkppnCjfbW9qY
      vtwO/koGrvXw7gdn+P4Pf8Dp995htUZjdex845knmB4ZZmJikompKSzpMN3XbzEyGqGt1kvU
      FaK1pQ1bIoLdaaG9/RI6sBSPU1leRnVjG01VJYDB5Pg0NiXOxUs3GZhY4h8d281cPMt0XzsT
      S6tT86fND/YS9TYSyozRP7VyzWNyagprZpHu3puMz2u0VjkItuxl4MI53nn3JNVVATo/+oBr
      ERdH9zZBOspszGD05kVmltIPPwBD17oYWVjG63IyOXiLsdkwmq6BYScY9GH5VIUtew/xzOOP
      AODz+xnpv8ZMJIGhaaiqi4DfBXYf6tIY7504TTiexjAM7HYnXpcVXXUzdqOT0+1dlFSU037i
      HSK6H7ctn0+Q5cKZs+h2Nw6rws1rPSzG0+iahtPpweP+9DeyQtCeQbOXANB3tYdIIgUoxGZH
      Sasu4tEIbm+IMr+DkydO4AxUfOm3/1empzh39jwWhxvVAjd7e1laTqFpGjanG5/HiWJVic+N
      0XWph4m5JQxdwzCgbcd2/uFXP+cn//evuNg/BYbBrZvXCC8to2saqtOJmk1w4+Yt0pqGpq/y
      NRTDoLujC6/LgtPj5kJXL6DR13uVpUQaTdNweP34XS78wRB2KwSCbhYXY1TUNZKdG+Zi7wDZ
      6CxX+m6T1Qx03UAp1LQokUiEQCBwz+taNslg/23sgQoq/SpDY9PY3D68io6ntITFSILaqnIS
      kTnihovyoIdYeIaU1Y9TW2JsPorb6cGiZwmWuIhlHdgzi8zGDJpqAkwvaTi1KPMJ2NZcx8TQ
      AIa7lLoyL/19/ZRUN1AW9NxTVzwex263Y7N9eTrii7MMjc9S17QVLTrDXCyNzxdAS6XxuSwY
      rhKCHgeT42O4HCopi51MIoNLTROOp/H4S0lFpglV1zM7NkKotgmPNcXtoQnqmrbidX55Dbqu
      E4vF8Pv9X1rr4NgMW7a2ko1MEY6ncQWCaIkUQa9KxuYjOj2COxBkbiGG1+uirqYG0JkaHSKm
      2Wmur2R8apaAU2E6nMDr85PNpqmvqWT49gCaolJR24jP+cXdR7N9IifDYHxkhLK6elRtmfHp
      MIphxW3PshhP4/L6yGZ0Ak4wXAFi8/OUhjwMjc3R0tpCZGqEpaSGL1RGbGYCXXVQVVv/8AOw
      Xt1PANaDrxqA9WQ97BMPvQskxMMkARCbmgRAbGoSALGpqb//i2EYLC2tweDtHRvtXvVUKkUq
      lfoKF8LWB8MwSCaTG+oW7vWwT9wNgKIoa35G/rDP+O/HRhwFslgsG2oUCB7+PiFdILGpSQDE
      pqZ++SZio9EzGomumbzasNf5sNd67/1F50/B0O99/asq3w4NRx/8/atMAlCEjKTG4q/782rD
      /82G3AH43X8EPY9neQ/+640dgNPv/xbD5mPXwccp8yi0n3yfuViWrx39Gl3nO9AdJTy6NcjF
      3kHKGnZwaE/zWtQtxKq4z3OALIvhCKrTj99lxUgtESbAk3trONveTeXWg4SyMS4Nj3L0608R
      mRhem6qFWCX3fRL8yKGvs6sszdkbsxiahg5YrVZSySQoClYDUtksisWKYWhkMhkikQjJZHIN
      yhciP/fXBdIyXOu9jNeeoWpHK+G0gSu1SOe1MI8+uodbfdfIorK7soTLXZ04Syqx2WwPfaxX
      CDP3FwCriyePHyWWMgi5Da6NRDl2/AmiSY1Q0EdlMAg2D16nSmAhjC9YskZlC7E67vsk2Onx
      47zz/Mju1iAApa6Vn32B0N3tSsvK8q9OiDUmF8LEpiYBEJuaBEBsahIAsalJAMSmJgEQm5oE
      QGxqptcB+nvOMTKzyNjcEm37j/DYji2FrEuIgjANQCqjMbkQY9+2epb1T8/BaxCPJ3C73SiK
      QioRZWlZoywUILo4D3YvPpfK3OwC/lApDtvGeKZWPFzZ+WWMPKZTVOxW1ECOiYEXRyFrPvmr
      aQC2bKmlo2+KyFKCrc0VnxSajPKT//dLfvTv/xT0NB+fOYvdqrPYsp2BgVGyGY0ddT6molky
      g1M8dXjvA38osXnMPn8FLZx64Pc7t5dQ9ie77/3Fa38Ko+2m7zM9B7h6dYjt2+vZtr2FWwND
      d141uNl7DV9o5eY2PRll2R7gQFstnZ29VGxpo4IsV6dn2bX/AKnF/J5KEmKtmQbgwMFdTA8N
      c67zOjtbVx5qyURnuTkyyeLkKCPTERSLBYWVFRUdTgfoBpoCDqsVQ9dQFKvcDi3WtZwBGLze
      xan2S7h9QbxOK/PhlfmCbL4KfvjDf0JbWxtbQjYGZ5YpVZY4fXmSx48cYGagk7DNx4HGes6e
      PEWwtuHu7dD3tRCCEAWS8xzAEaxmt8NJb/9Yzjd99zvfRU/HsNkcHHrqW3dff/Y73/1km8ad
      q1yqEKsvZwBmBnq4OpGgMrQyyZKSY4UGi91LfXWOh6aF2EByBqB132GcgUGm55fAqhL03buA
      hBDFIGcAbHb7ytI4GKBrpDMPf0l7IdZCzgB0nnqLvnmF6rKVLlBi+cHHZ4VYz3IG4PC3/oDD
      ha5EiIfA9DqAnk1y6VIPExOTpLN5TIUnxDpmGoBL588xMTdLZG6C8735TbMnxHplGoDayjJm
      Jse5PjBCSOb1EUXKNACqw4nP5SKr6eifuRtUiOJhejfo+OAArYeeZmdNEEX5fU4MwpPD9M+m
      eHRPK4oC4alhbs+mObC7hcHrlyFQR1OFm+7uXpp37aPEk+MWVSHWCdMjQHltLT0fvskLL/yM
      9t7BO69m6R9dwBu5xUAEyC5zvmeQkuwUF3t6GF92cftKJ5e6OgjV1tBxvrswn0KIB2QagOnp
      WUIlflSbA/3uwms2Duxv5UrfBE6rhpZKkLU5qa4sob9vCK8vSIkBw9EoJaEyjEwUTdNIpVJk
      s3IxTaw/pgEIBnyEahvw2Kyf7LxaitGJCN95+hFuDM5isdmwGgaJ+DKhshBaNkPCohByOMmk
      UyiWle6PrsswqlifTM8BGnd9jS26Trp1K4upO3fDWW3EZgYZiGY5dNjLtcE5msusdI9mePLo
      o1y6cB61vJ59DX7OXeigsW0fVqsVl8tFOp0u1GcS4iv7wslxLRYLTqvOzcFJqkoDgIU9jx1j
      D6Cn41RWVVAWaGL7ne2PPvmNu+995pu1a1e1EKskZwAGr3dxa3Ru5YdsEqPk3mWOLHYPZfY1
      rU2INZczAE07HqFpR6FLEaLwTE+CF6bHGJmc+9QIkBDFxzQA3kAIbWmCN3/zG06d7WBhKVHI
      uoQoCNMAhGfGGZuL0bprL/t2bmVyaqqQdQlREKYBiC/OM9x/g9MfvkfP4AK7WmW9X1F8zAOw
      nOGxo4eor2/C0DKFrEmIgjG9DtDctoPpSJrdbXZ8FfWFrEmIgjF/IkzLEpkbp/1cO0OTC4Ws
      SYiCMT0CzE8McvJUB617DtBQ+cl6v7HwDOMLSbY112NRFBKRWaaWsjTVVTEzPgyeUir8DoYG
      R6mob8DjuO+VWNed9ESM2NmJvNrwPVGLrfJz08ssjsCp/5lXu+z/Y2g4kl8bm5jp3lle18Lj
      hzKEownmInFCfheQoavrGjVBnY4BL4eaPJxtv0SpR+FqYpGp2RiZWD+NlW5SNj+DHZf5xrFH
      Cvhx1oa2mCJxcTqvNtx7y+8NQGIBul/Mq122HJYA5CFnF+hG10e8/Oqv6R+bZTkR/9S0KDae
      +MZxsskkTqcNLRklafOyvamCK1duEqrYQhkaN+fDNG5tIRNbwDAMdF3HkAtqYh3KeQRoe+QY
      8ViaxkPH8SQm6bi9BKzc3Dbe18mtTAXfq/VCSsOKQiadweP1Yhg6aUXBa7dh6FkUi0o2m2V5
      eVnuBhXrkmkXqG1HC6+/8iIZHBx7+s4EuFqCM2cvU9HYzMTUDPFkhipnko9vxHjy2EE6z50H
      TzkHmwO0nzpDzbY92Gw2bDabHAHEumQagOGhIZwOO6l4ionpMFurQ2B188//5N8AoKdjTEWy
      tB59igN33vP0t569+/5v17SsaeFCrAbTYVCbTWXLtu0EPW7SmXu7Lxa7l5ry4JoWJ8RaMw1A
      Y2sbkZkZVKeHPa1NhaxJiIIxDUDPxUvseOxxjh1s5Ub/oNlmQmxopucALc11nDpzEgWF3Y8+
      XsiahCiYnEeApdkxrg7PcfyZZ9nZWMnSUqzQdQlREDkD0HPlBm27d/L+az9jYtnJjuaaQtcl
      REHk7AJlLQqKpuMqrWF3Sy2apsEqrvieGl4iPRbNqw3voWoU9XP5ne6FwY/yape9fwjuUH5t
      iA0j95XgpnoGBgaoKCtb+bN+Kw1Vq7dTJK8vED05mlcbnoOV9wZguB3e+c95tUvzcQnAJpIz
      ANUNrVQ3FLoUIQrPdBjUjKFnGRgYZOXOBoPp4Zuc67xCRstw7dIFrt0eJ7Mcof3js0yF46tf
      sRCr6L4DcKv7NL95//zKD9kE3X3T1NkjXOi6RJgQk31XudTTTW1LM5e7ela7XiFW1X0HYNv+
      IzRXrqwYo6WWyVptlJUGGbo9itPtI2gYjEZj+PxBjGycbDZLPB6Xu0HFunTfAfj0ovEWmwOr
      liUSiVJdW0kmtUzUolDpdrGciKNYXVgsFux2O1br6o0iCbFa7jsAKCpNTVsgE+Vy/ww76/3c
      XLBx9LGD2ONj+Ou28sjuvdy60sv2PbuwWCzYbDYJgFiX7v+BXYuN/ft2oacTNGypJeh18vsB
      o0cOH7u72ZNPHV+lEoVYOw/8xLrF7iYos0OLDe7+u0BCFBEJgNjUJABiU5MAiE1tTQKgpeNc
      PH+BhVhyLZoXYtWsSQCudV+krL6WixdkoWyxvq1JAMLRKMGSUoyMPEkm1rc1CYDL6SSTTqJY
      nGvRvBCrZk0CsHPnTi53dNK0Q5aaFOvbmsxd7gnV8PQz8hyxWP/uBkDTdfqG5tbsH7Lyye3Q
      yXIF49FAXu0txaMoqc8dwLzNsP/f5dUuWRtEIqRSKVKpFFarlYw9nXe9cTVFKhL57Iu6M/96
      XQ0QiWAYBslkcmU27pSWd73JEBifrxdg378FQ3/whisPwJ12E4lPVh7Vdnkxkg/eZc6UOYjk
      qrf5e1C6z/R9inFn1tp4MssT/+nCZ3+prNz+rK/CvLY/POTlv/yrvfk3VCDxeBy73Y7NZnvY
      pXwluq4Ti8Xw+/0Pu5SvLBKJEAjkF9R8mXaB6hoCfK/NS0aBS1fm6BxPmW0qxIZlGoCGSifn
      Ls8RczjZUWoHCYAoQjlHgVSrwsXeBWoaAuypUDl3Sx5uF8UpZwAqgnYe2VdGmaKT0hUqAxt/
      oTshcskZgIn5FItRjbpKJ067BZtVybWZEBue6Vf77dthOux+7BYFLY9RLyHWM9MrwU/sLyWj
      WKkpsbEltDGGAoW4X6YB6B1J4EimSKsq6awscCeKk2kXyGIY1NX4UDFYTksfSBQn8+sAW7wM
      3JznwlSarJwEiCJl2gUaHYnxtceq+KPjleyocBSyJiEKxjQA1ZUu4ktpbs1lqJbrAKJIme7Z
      0UQWv89Ns64wOpww20zkIzYNl36RXxvbvgmVu1annk3INAADQ1Eue0C3WOgdk4fb18TSJLz/
      3/Jrw1MqAciDaRfoyYOlXLq6wOm+OEfbfIWsSYiCMT0C3BqO8+zxOqp8Fl75YKKQNQlRMDmP
      ALt2lnKk0opuV+m8naBRRoFEkcoZgLqgyvlJnSpjmY7RJG6nzO0vilPOLtCZnjDHd/n5mzML
      HGnxc/rKQqHrejAj7XD9jfzaePxH4K1cnXrEupczAIl4mrcvrDwg/1bnfEELystUL5z76/za
      OPAvJQCbiOlJsNfv5F8cKeH6dIr+W4tMxOV2CFF8TIdBD+8OMDyTYWQmxddavYWsSYiCMQ3A
      hetLbN3i4Tv7Alwe/OyVYJvNSrlPvbtipGqzUO5f+TngteG0gs1mQZUHycQ6Z9oF8nhtXB+K
      0lbrIuC2wOLvf6PwvSMVaLrBwPVZrs5rfOuxCqyGwfxknNZtAVLRBFMZKxe754hqhfkgQjwI
      0yPAzloXO5t8XByI01D+yYxdit2KjywnbsbZWu0Eq4VSB3x4PcqWaheKRcFb4iaARnWprKIn
      1jfTI0DHrRi7y20c3hnkYtfU3dcNAwzAalHQdAMMA90wsFgUEvEkb3aHOba7hLpSN0dDTmJn
      p9lap1IT0Onv7wfAGtaosATzKnwmGEf7/BR9vkNo3/8tmr5y2FFQvnBmt3Tmk+kaVauKxWKB
      RQss9aOqKrquo+s66fkEDWp+I0OxkixRffnuz5qmoWUs8N3Xv6ROg3Qmc2+dv+f0Q38/iqKg
      KApjY2MYWZ3GTHle9eohlWktTDabRddX/p8VRaEtdYl8erZ6SRN9y0F0XcdutzM5OYmqqpRG
      XNjzmKrWGnBwO71yx4LFYkFVV9qq+OBH+Jf6TN9n+i8e2u6jfTBJW7lK0PepzTJZpjNWfrDH
      y8eds7SUOxiLwT8+EOB81wwpRUWPJRi2qWz36kzFdCZupCkP2GlpaXngD/h5TavWUm6fmRpx
      Fcr2AGs5uLoWUyP6KM3xan4zfluAtjt/X+2pEXeS40v1VBbiM6bvMQ1A9+0Y+0NWsnYXieRn
      v2nfPTf1qZ8y9E9/+m7RLO9dB4jz/lerW4iHJuc5QCDg5HCDk6RiIRVPMzKfzrWZEBtezgAc
      3R2g++YS22pdvHU5wq4Gd6HrEqIgcnaBPB47R/eU0Fjl5ruPKriW5YkwUZxyBuDVd0cBeOXM
      dEGLEaLQvnCNsFDATqVfzWvYS4j1zHQUqHV7iIMhK8uqlbmxCB8NLpttKsSGZRoAv1tlPpIk
      ZncQdMsDMaI45QyARYGZiSgxt4ontUx/LJNrMyE2vJznAKEyN3/4ZCVt1S7qq9y45AAgilTO
      I8DcbIK/fGWowKUIUXimo0BOt50/eqKCR7cHKHXKOJAoTqYBOLKvhETSYCmlc3S7TIwlipNp
      AK4NJ9jR5OPZ3QH6J2QIVBQn02FQRdPpuR0BHbKFrEiIAjI9AuisPABhtUBSVogRRSr3zHDl
      TrwuFZtVwapaCHpkfQBRnHLu2TOLKVq9KqevLGCxqTQGv/CWISE2rJwB8PpdHNsdAsNAVaCj
      Z7bQdQlREDm/2hfmE3RPJMlo4HVYqfRLF0gUJ9O+TXRZY2Q8zmJGR1WlCySKU86v9poqD35D
      I5GFgbEEI+NyHUAUp5xf7dFYmplolj0NHqwWWShbFC+TAGTYUuthbjHDWDjLXnkoXhQp0879
      jbEEW+s8fL3Nx9hsqpA1CVEwOc8B/H4HO0pVfvLbYSpr/Pgd8kCAKE45jwCP7y1hZHKZf/bt
      BvaWWbg2IesEi+KU8whg1XUmImlm5xK81b1IRjMKXZcQBZHzCHBjMsXTB0pJpnS+caCU7bJM
      qihSOY8A/YMR+gcLXYoQhWd6j0OozM33D5RgVeB63wLnhuRimCg+pgHY2Rrgcvc03XPyOIwo
      XjkDEPCoxOIa//Q7jXxfM+jonuLta/FC1ybEmssZAEWBoaEIv1hcmRV6PiwXwkRxyhmAxVgW
      yLIYkR1fFDfTc4CmpgBPbfWgWBQ5CRZFK2cAfF4b2xt9LExG6JzOEIvLEkmiOOW8EOb32tGX
      lpnVLWypdNEiF8JEkcoZgIwOR3aXUFvmpK7ciVuVqRFFccoZgJmZOM+/N8VyWsdmgdmoTI8u
      ipPp8wBev4Mj231kEmliabkZThQn0wDcvr3Ih30Jmrb4aSyRWSFEcTK/FyhgZ34mzq8GwwxM
      y/UAUZxMjwDllW62BFQaGgIc3ybPBIviZBoAq9WCalmZINcuo0CiSJl2gVJZg+V0lv6ZGIPz
      MgokipPpESC9nKWq3sfXD5ZzsN5ZyJqEKJicAaiq9vF4tZXOyQw21YrDIsOgojjlDMAjTS5e
      PjtPeC7OS2dnKQnKEUAUp5znAH0zGb59oIS+uQy7Gn1MDIcLXZcQq+Pof4DoH5j+OvdD8f1h
      lkqdVPtVeq7NMxGRxyLFBrXj+1/4a9NRoJn5JDPzq16OEOvK/wfhyFUPyprwfQAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.VMT' width='192'>
      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
      xNpaZgTQOPPWqxxNGqmqqcPp9vD0gV1yKYTYkJYGwFzEv/v2d4jOTXP29IdMhK3rUJYQa2Np
      ADIJjr3xK6ZjOQKVQbb6g0ufpWVoP/sxE+EEQbeJMcXP8zv9/OSfjvNH/+HrmNegcCHyYWkA
      tBzprEZ5hR+/34e9eOl3fTPxCKPTUdxuD7lUlEhqhvG+JDmbTa4bEo+UpYdBzUX8zu99jZZ6
      P6N9N2nruLpklVwuh1JYgscUIRTJUGyCW9MJKksK5L5A4pGyzKUQWfp7bnDtRi8Gm4Od25uX
      rGIpclKqqHRPpPCU2GiqL2d8DgqsZkyKgsPhwGaTy6jFw2/ZKZDV6eX539qO8kVHfowWDh5+
      9q5FtVWbV6M+IVbVMucBzFT6K5ZZVYiNRy74EbomARC6JgEQuiYBELomARC6JgEQuiYBELom
      ARC6JgEQuiYBELomARC6JgEQuiYBELomARC6JgEQuiYBELomARC6tvIAaBozM7PEZqeYjsSB
      HKHRELn81SbEqltxAObDg7z6+rsMXWnnZPtV0pERXn3tJJl8VifEKlv+r0TeQy6jcnNgggpX
      MQajGaOWordvguqqcrRcjmQqRSYjURAPvxWNAGl1gVgkyvDQILOxDAG7mRvTSUpsi3mS+4iK
      R8WKRgBrkZvDzz5DubeSskIFa7kb61AUpymDyWhEsVpRVTXftQqRdysKwCKFrS2/vmnWrq3u
      PJQjxNqSw6BC1yQAQtckAELXJABC1yQAQtckAELXJABC1yQAQtckAELXJABC1yQAQtckAELX
      JABC177E1aD3T8tpjH+/PW/tOV+ooXB7+dIHchn44H/n7ffQ/DL4duSvPfHQWZMAAGTD+fvD
      2Voyu/wDuSx8+Fd5+z2U1koANjiZAgldkwAIXZMACF1b2T6AluVy+znCCQPVbjMzipc9jeWc
      eKeNwy8+vXY7FkJ8SSt7r+ayuIINFAxf4npPmnhRik0FEXrH5ziU5wKFWE0rmwIpFly2LNfG
      NWrcVqzGHDfH56n12slms0SjUZLJ/B31EWK1rCgAWibBG68fo76xgWxWY3PAQc9kGpvJiKIo
      OBwObDZbvmsVIu9WNgUymDl85HnSOXDueoyCIhuBygwKWcx5LlCI1bSiABgUExX+yruWme3y
      1hePHjkMKnRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0C
      IHRNAiB0bYUB0Bi4dYWOK91M9N/g5uAUaGkunO3gC+7YI8RDaUUByCWj3J5MUBAb4erNAbp6
      elkYv825K30SAPFIWVEAMikVzajgsJuZj2uYydI9MkedvyTf9QmxqlYUAJOtkJyaYHxGpbzE
      wiZPIdcnVIosskshHi0r+kqk0WJn79ZqZlIWPIVGTMV2PBVJzIaM3BNIPFL+PyCcFwfVZmSo
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.VMT by Speed' width='192'>
      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
      NyEBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Fwy Speed' width='192'>
      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
      0IX2+2dg4wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Speed' width='192'>
      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
      0IX2+2dg4wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Supply' width='192'>
      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
      mhgAUVT7/wHhVSfDCR/6QQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Table.VMT' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Table.VMT by Speed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Delay' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Non-recurring' width='192'>
      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
      JgIgxLX/D1ycswY5WmqaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Supply' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29aXAcZ37m+cus+0IBhcINgrgI8ABP8RIlSmpZR1vdre522+3bYc/uzthe
      z3gnZmI3YmMjth0T3tiJ2Zgdj9fjdm/39Lbdh6VRS6IokuJNghd44AaIGyhchaPu+8pjP1Cs
      FtuUeKhAgEL+vgiAiplv5r+efN/MfN7nFVRVVdHQWKeIq90ADY3VRBOAxrpGE4DGukYTgMZT
      i9/vByCXSZHOSr/4H3KKnr6R/K+ZVJShoSGGhoZIZJV7tqEJQOOppf1SOwAx3xzeQJx4LMKy
      L4AsZZianicZj5JTVERRz0T3dVIGO5lkAkVViMcTJOMx9Kt8DBoan5tEcBkfKuePX2JjeRGl
      rXtJBuc5267y6usvYzZZcRc7qarZwMCFIzTs3E3fwDTJhVGtB9B4ilEVstksysdP8t01Dezb
      sYlgKAyoSIqA4Ze+4Tvamjl1/DQNW7aBzqj1ABpPL9s3beTq1atU125gY3EpZU4r5hITrWao
      L3djE1OEkzKlNj31W3fgMIC1uh6Dro/mmiJG9QKC9iJMYz0hp8IMz0XZ1lzL8NDoF0sAiUQC
      m8222s3Q+ARrvSZfqHsASZIe/CGNJ8par8kXSgAaGo+KJgCNdY0mAI11jSYAjXWNJgCNdY0m
      AI11jSYAjXWNJgCNdY0mAI11jSYAjXWN5gZ9TKJ+L5Nzy4gGCy0tmzD/su82j8KsZ47q+jp0
      D7FdVUkzMxuibmMVwkO2JbQ0SyBjoLZEz4Q3SrnDhM5qJpkWqK10PeRW1i7ZZITRiRmq65tR
      48sYSjZQZH60a3c2EWJ8PszmTfUEvB7mfREMVqcmgMdlovsiFz3gzM4zG3uTF7eUEknKVFa4
      iQaWyWCi3GVnacnL+//tQ37tv/st3FYzWUkkm0lhM+vwhRK4nDZyghG9lEK0FmEkxNGj7fzp
      n/0mqAqB5UVUgx2bQSWRziAarBTb9Cws+XFXVGE26LjdcYbjE/Bbu4v4/sVp/ui1/ejsAjdG
      cvzW6zuIJGUqyopZXljA4iyj2GFZ7dP3SBx7+0dEdCUsX+pljzuCccub7GhwY9PLLCyHqaiq
      IBzwIxosGNQ0WcFCWakTAYgElkjJOoYvvkt3qprWTfXcvHCcBSqIzw5oAvg8TI/24bAVsbdM
      z3/9279D1evYfvg1Bi6eYDFl4JsvtnCue5qFxRDdF09itpmZiVghFaFUDNA/tsju557FG9JT
      nJrg2a//IZWfME6mQjP88Ac/I6Gz8eo2N5fHA0iincP1Bq7cnqF262F+/83DgI5iQ4a+2TTV
      bgOL0xNYGzaAKvOT7/0Ny0nYu287p89dp7ppO//qX/wOhoftXtYAVRVldF4boqJxDyoRrp9+
      j1slG3jGGaJ9cIY9L75B18kP2Pfyi3Rdvoakt/DP/+zPcQtL/M13f0J5mRUhEaWkqQ1BEECW
      GLndha2oXLsH+Dy88Zt/SIlJxSQkUYo38ZWXdzPjmcVktZMMh5md9/HCr36NulIHO7Y3c61z
      gvhsL+UNbQiCiKimkW0bEIJ9eGNmKpzme7afS6ex2O1EImEkBQ68+DpFxhwzs1627NhNmfMX
      aqlwGxnzZyj6REVVYiwFYffOrRQVl7GlpZFYeJlM7t6J4WudYEbHn/7JPyc7PUYceO2rb4KS
      IqsYMIsS4XAUW/UmXmgpJWWtoG1zI6KgkvB5KWk5wAv7d1JSVUtb25Y7X3ijjd/5g99HkCRN
      AI+LvaQcd2k5v/aVw4zO5tjqjvNe+xQvHdqBlE5R19DAzkOHuH7854jOMsob2ti1bSf7d29j
      1/YW9CKYS6pwOexsKNJRuXUPBhEEwYgUGOEv/92/o71/jkwyQUNjE05XOcV2KzXVVbzwpRcZ
      HRigsrYaAGdpBa0trWxpbqK6pgZXeSXOomKqyxt4/sBGRrxxGuqqSUUDNG/eiVn/FF3+gdaN
      lfz9D39Ezb5DbCyrxm4xs6GqApNJRGcpxV1SxIaaSiw1W2krzhDMmnDajBQ17MQdHeRij5em
      2kocljsDHld5Fa6KjXz1cPMXa0JMJBLB6XSudjMeifTyGP/++x/wL/7sX1JZZFzt5hSctV4T
      TQAaK8par4k2BNJY12gC0FjXaALQWNdoAtBY12gC0FjXaALQWNdoAtBY12gC0FjXaALQWNdo
      AtBY12gC0FjXaALQWNdoAtBY12gC0FjXaALQWNdoAgBQVRamxxmZmufTpkek4nHkX/6jlGI5
      FAMgtLREWn64qYapiI/Ozk46Ozvx+qP5v4f9PpYXfWQBpAyD/T10dnUTiqfw+fyPflyPgKoo
      DPd30tnZxdxy+DM/u7C4sKJt+bhBzE+NMurxfmpNkverSS7JcigOQHBxkcwDprtoAgC84z1M
      hhR0wXH6ZkJEg8t4l4NkEjEWF7wEIzFOfvAes4t+fH4/yUSM6Zl5ZFVAFARCvgU6zl8kkPsn
      5bgvJlsxNQ6VqGqj1GnBtzBHIJJgoq+LruvdxAEyYSZ9aVqaN3L10jk6u/pJx8NMTc+STMaY
      mpxkxrtMJhnFMz1LJpdjYW6aYDT5WOdAVSSm5pdoaWmi6/oVclKGmelpUjmZZDSIZ2YeWZFZ
      nJ/j7IV24vEEmWScVDZHPJ4k5FtgfilALB5HVVXi8fhjteMus8NdzMVFWB5mwBsjElhkwRci
      Hb9Tk1AkzkdH3mNu0Y8v4CcZjzI940VGQBQFgsterpy+QOQBAtBSIYCF+UVaDnyZMmM9ocAS
      Zy71UyQmES02FpNGrKKEosLc4DXmsjYc2SRNTWVcmRgjnAMDCulU6qH3J+oNWK0WzDkrmeUx
      uibTEOvDJAjwifQg3/wUXWISh7uCVDDEzRtd2MQY84lnKMsu0DcsU2uXMYpZRifHWPKG2bSl
      hf272xAfY9pvYGGamzdNlNU00nXlIo6KWm63X8YiqBizy0zN1INOTzItMTTYjz4xj9/Wgl2N
      kUzIpGKLlLqraNqxjbHbszx3cMejN+JjFhZ8bDr0DC5DHSGfl7OXh3AISXRGA8uKE4uaQQU8
      PZdY1pdiTURpbCilY3IUfxaMovBQNdF6AMBmMxNPZpAzIQb6x8goYLXb0alG9h58FotRwWK1
      Y7eWcODZneiMdjZv3UzSv0w2HcfhqqZhQ81DB1l9knjYT2V9C+5iE6nMvetpVTVs4cWXXuaF
      fW0IioJepxKKRJFkhcnZIK996SB6USUQiiCLNlqbq5kYG+MhR2L/hIq6FnY0lLEcihNKyWzZ
      vAU1FUIUJELRGL6lEDWNzdRUlFDpsDCbNROa6KPI6SaXSxNNpKioraHv7DnKWzY/XiM+xmo1
      kkhlkdN++vrHyCBicdgRMbH/0CHMBhmL1Y7NWsKzz25HZ3TQurWVuG+JTDKK011L/YYHh4tp
      AgCa2vYw3X2Jc1cG2fHsQeqKDUQlK/V15ViNOkpdbhrqyommBSx6G03VFk6dusrm/fupa2hB
      TMwx6YtifITLrt5kw2k3U960A//QFaJKEfV1VZSWuTAA6Iy4ix0ff1rEVVpMNidhtLtIeoeJ
      ZgX6ewdI5XIYrUXYbWZi4QgbG5rQPU5VBQGXy0Vp/XYqdBE2NdZx6tQpqprayOVkrE43TVub
      me3tIJbVU9tYjd2xgbrqCqoqi5BkhSKnC0dxKUFJT1PJ55vg37JjD+Od7Zy9Mswzh5+n1i6Q
      UGxs3FCBRS9Q6nKzsbaMRE6PSWenvtLImTPX2XLgAPXNW1HCk8wEExgeIAFtUrxGQQnOjzMe
      hP3bm4G1XxPtHkCjoLhqmtlfs9qteHi0IZDGukYTgMa6RhOAxromfw+gKAqxWGw12/K5ST3C
      s3iNJ8Nar0leAKIorum79Yfli3AMXzTWck20IZDGukYTgMa65r7vAVRVRVXVO6tpCMKnvku7
      +zkAQRARHuJF6C8+/3Rl1Gt8MblvDzB+6yx/8Rd/wb//Lz8m9xnGkv7zb/Nv/9f/nf/wH79L
      KPdwO/QOXefGiPexGvskiUQiHDlyhFzuzoHJsszp06c5ffo0mUyGSCTCsWPHiEajnD59mvb2
      9k+17T4J5ubmOHbsGAMDAwVvhyRJnD17lrm5OeDORayzs5OjR48SiURQFIUjR46QSCTI5XK8
      ++67+fO2Eng8Hs6fP8/y8jJw59jPnDnDwMAAw8PDXLx4kXQ6/VDn4r49QCwcwlJcjtMA06O3
      +Ok/fkjz/tewBAaZXvDRePDrfP3F7QCUllfTumMXE+d/yl/1Rnl+SzHt1wd5/bd+k1vvf0hc
      lvjWH/4B5976B9KODby+s4JQNsdf/MNf49iwg9/4lS386Gfv07z3dRqNXk5cGWTvr3yLN55r
      e6geZaWQJAlJkpBlGYPBwNTUFE6nE0EQmJqaYm5ujlgshsVi4fDhw7z99tscOnQIvX51Xq7f
      uHGD119/nePHj7NlyxZ0uodZk/LhkGUZs9lMJBKhtrYWgA0bNuD1eolEIszPz7O8vEw2m2V0
      dJTl5WUUZWWWYVJVlWvXrnHo0KH8zXVvby/PPvssp0+fxuVykcvl6OjooK2t7YEjjfv2ALby
      Ol598VmSi1MsBBM47BYmJqZIJXK8+rXXCX5iQkRz2zPsbWsmm0nx6jd+A5tJh1UvMTnrRTCV
      8aVnmvHc7kbX+By/++aXUHNpspKKy1XKsneKzlvdvPJbf8yhbVX09M/xx3/+PzLRc/WfTnR4
      wpSWlmIymfK/JxIJbDYbVquVqakpdDpdXiAej4empqaCfukelVwuh8lkwmAwFLwHMJlMlJaW
      5n8XBAGDwYDD4WBxcZGRkRHKysrw+XzMzs5SXFy8Yo8/FUUhlUoRCoW4du0aADt27KCnp4dY
      LMbBgwcpLS0lkUhw4cKFB85LuK8A1FSIox8cJaZ3kgvM44+m0YkqiDoMet09V+bSihpqK8sA
      MOgNzE2OkUWPIkmIOj16vYi1op7o7XN87yfvkcwpKIpMJBrDanfQ3LKJEz/+W45dGqSp3sl3
      /9NfU9G866HW1F1J5ubmGB8fZ2hoiO7ublwuFzdv3qS/v5+WlhacTieRSISJiQk++OADcrnc
      inb7D6KyspKjR49itVoLLsRUKkV3dzcDAwN4vV76+/vp7u5mcXERs9lMY2MjoVCIeDxOXV0d
      4XCYSCRS0DbcRafT4XQ6mZqaoqioiPPnz5PJZEgmk7S2tqKqKrlcjoqKioeqyX3doKqqIsvy
      nZUMBZAVJd+ViKKAooJOFD/u5u7MwFEUGQQRVAVFURFEET5xI63e/awAKgKqKgMioiggyzKi
      qEMQVGRZQafTPdZNciGdh4qi5Lvxnp4e9uzZk7+yiqKIIAj5/3/3v4/b7kJwt2Yr0Ya72waY
      nJykrKyMoqIiVFXN70/5+Dvyyz+vhBv0bm10Ol1+X3d//yQPcz40O7TGirLWa6K9B9BY12gC
      0FjXaALQWNfkH1qrqko2m13NtnxuJEkik8msdjM0PsFar8k9b22e9vvhT1ozNNYGa70m2hBI
      Y12jCUBjXXP/N8GKTDwWI53N8Vmdl5TNEE+mUeQc0Xjinq5OkqQ13fVpaMCnCGDk5ln+9nv/
      L//P939G9jPcoMPXjvGX//nHzI9c48+/81fIysdfeFXmyJEjZKSVMUQ9CYLBIG+//fY9DwYC
      gQDvv/8+sixz/fp1rl69Sjgc5sSJE5w8eTL/tnQ18Hg8HDt2jO7u7oJfeMLhMCdPnuTChQv5
      Mf3k5CTHjh1DURTOnj3LuXPniMVi3L59m7NnzxZ0/59EVVWuXLnC6dOnCQQCAMTjcS5cuEB/
      fz+Dg4OcP3+eVCpFX1/f47lBpWyGnCJSajQwPXSNf3znNPW7X8ISGGTeH2bD3q/wrZd3AeC0
      qAyOeqkoK2Vu8Ao/+vkZNm7eyuC1KzhKyxm8cQm1uIlf3V3Czz+6QdXmA/zRb7y65sdeer0e
      u92etzmoqkpvby+5XA6fz8fCwgI7d+5kcnKS5uZmFhcX8fl8VFZWrkp7e3t7+fKXv8xHH33E
      jh07CuoHcjqdvPrqq7z11lt5e0FpaWm+l4/FYrS1tWGxWCgrK8Pj8RRs37+MJEksLy9z8OBB
      BgcHeeGFF+ju7sZqtVJRUcHg4CCpVIqOjg727NnzeG5Q0VbK17/2BkpwmoWohKvEzvz8Aqpi
      4Mtff4NUKJj/bLnLSZ8nRLlTR04GV4kdX1SlZft2ak0xRFcDNUVmuvqn+P0//RPUhUkeL7/4
      yVJUVIQo/uL0TE9Pk8vlSCaThEIhbDYb09PTeDwe9Ho9er1+VYd8d7+YoiiuSDu6u7tpa2vL
      e2vu2hsEQeDll18mEonQ3d294rYHvV5PU1MT/f39+fokk0lKSkq4ePEiBw8epLKykmw2y+nT
      px8Y9HBfAVh0Mh+8+w4xcznGVJBgLIvFrEdvNGEw6DEY7lxdRJ2esqoyDCYbTqOBaGCJcCKH
      yWTAKcSZjJmRfBMEJJH9uzbxk+9+F2NdK9YCn5SVYHZ2lqmpKYaGhrh16xZ6vZ7m5ub81S8Y
      DOL3+9mxYwc3b97E6/XeYxl+0tTW1vLhhx/idDoL7gadnp6mo6ODcDjM/Pw8AwMDDAwMMDMz
      g8fj4datW3g8HioqKujt7cXj8bC4uFjQNtzlrsEuHo/T2trKhQsXqK+vp7+/H6vVSjabRZZl
      qqurH+oRbN4Mp6rqmn5h8TDE43HsdntBt6mqKoODg2zduvWeHmG9MjU1hdvtxuFwPPjDrExN
      CokmAI0VZa3XRLukaaxrNAForGs0AWisa+55D/DJSeBPI+l0+qk/hi8aa70meQF8EYKq7s5D
      1Vg7rPWaaEMgjXWNJgCNdc19BaDIOZYWvETiqU91g2bTae5ndUsnoni9i2RlhUg4hPS4a3Zq
      aDwBdN/5zne+88t/7L/0Ie+euUbHrUH27t2FlEmDICJLElIui4rM2z/8KfW7diBkMsgq6HU6
      cgk/P/jeDxi63cOoX2Ci6xzlDW3o1dydf5/LkpVkBFUhnc2h1xc2wyaTyWA2mwuyraGhIdrb
      21EUhfLycjKZDCdOnGB0dBS328358+cZGRmhrq4Or9fL6dOn2bp16xMd74ZCIX7605/S2trK
      1NQUly5dIhQKUVtbW9B2+Hw+PvzwQzKZDFVVVaiqytWrV7ly5QoVFRWcP38ej8dDeXk5iqLw
      wx/+kO3bt6PT6QpSk7sO0CtXrlBdXc2ZM2eYnZ3F7XZjMpkIh8O0t7cTi8Xwer309PRQWVnJ
      wMAAVVVVn3ku7usG1et1hAIh3BX1TPW189aRi9RuO4Qt2M9CJImraQfD3Z2UX27kxoWzKM4m
      /rd//YcseW5Ttu1lvvVKG+FwmpNH+lkYvsZ3T16gvPEAtvAtwtbNFGVn8Hhj/N6/+l9oKbd9
      rpOzUlRXVzM1NZV/Oy5JEvF4HJvNRiaTIZFIYDKZyGazDA4OrkomqMlkorq6GlmW6e/v5803
      3+To0aPIslzQ9ty1hJeXlwN3gsGee+45RFEkEAjkfTkWi4WbN28WPJ5REASef/55rl27hs/n
      I5FIsGHDBiwWCwBdXV3o9XpcLhejo6Ok02k6Ojp49tlnH88NmhWt/OE/+yMssRm8cZWSIhML
      i0sg2PjqN7+KqBpoatnKtk2VlLqKCSwskgWMRjOJWIRMIszU7BIAkiLiclpZXlhCtLv49jff
      oNhZTC7hIxBdu5PwHQ4H+/btY2pqCrjjOLTZbGSzWXw+H1arlUwmQ0dHB4qisLS0RDL5ZH2u
      n4xBvJuQthJ+paqqKr7xjW9w6dKlfOan3+/H7/fT3NzMt771LQwGAx999BETExPkcrl8cnOh
      WF5exu/3s2nTJn79138dvV7PjRs3gDs9f0tLC1euXOGll16ivr6ebDbL+++/Tzgc/szt3vcy
      Ueq08g8/+f8wuhooIUk0peIqs2M36DAaTThsNopLFC5dG8AXTFDhLkdRwd3QhuPqj/gP/+ky
      h7/y29gcDqR0nGBMoazGhs2uRyeoBJYXcZRWohfW7oyxW7du4fV6qaur4/Lly1RWViLLMkaj
      EaPRiCRJmEwmtm3bhiiKZLNZDAbDE23j0tISHo8Hm81GY2MjH3zwAZWVlQV3g87Pz9Pb20tR
      URE+nw+/309vby/l5eXMzMwwOTlJOBxm//79mM1mOjo6sNkK17MrisLRo0cpLy9nbm6OoaEh
      4vE4Bw4c4OzZs2zatImOjg5KSkpIJO7MTGxoaCCZTD7wXGjRiA9AVVVGRkZobW1d08+znxTT
      09OUlpY+tMFtrUcjagLQWFHWek209wAa6xpNABrrGk0AGuuae7JBn/YZYblcjnQ6vdrN0PgE
      a70mWg+gsa7RBKCxrtEEoLGu+VQBhHwLhBMZlFyGxeXAI2007F8kmdVcoBprn3vcoHezLVU5
      w0+/938zlXCwpVzgrVM3aGuqJRRJYDKIRKMx4qksUiaJIhpQMknCsRQWs5FoOMTV0+9B+Vb0
      2TCSqsNkfDJGsWw2i9FoLMi2RkZGuHTpEtlslsrKStLpNGfPnqW7uzvvgBwbG6OoqIj29nZu
      3779xNcK9vv9XL58mXQ6jdvt5sSJEyQSiYLHM6qqyujoKBcvXmTr1q2oqsrw8DDnzp1j69at
      5HI5vv/977Np0yaOHz/OwsICVVVV6PX6gtREVVU6Ojq4fPkyFRUVTE5O0t7ezrZt2wAYGxuj
      s7OTqakpAoEAvb29uN1ubt++/Xhu0HhgFrl0MxFPP7n9laDmeP9nP2Jy0c/hV3+Vs8dPgpzG
      XeamuGEnysIgi8EYz37pV7h28TLpuB9X8xBHz55GLNrIv/mT337qxloVFRWMjY3lT57ZbOa1
      117j3XffZXFxEbfbTTKZxOfzkUwmMRqNT9wq0dnZidlsxmq1srCwkLcfF5psNsv8/Pw94q6v
      r2d0dBS4k0taWlqKLMvkcjkcDkdB3aiCIHDw4EEAYrEYjY2NeZMi/OJJk8PhIJVKIUkSnZ2d
      7Nu374Hbvu/3cqznJhMT40yODDLmS4IiY7bbUVJxwrEUjdsPsauhkte//jVivjm84TTbtrUS
      883TvPcVdrfUkM3JOB1Wwv4Aq7d89ONTXFzMiy++yNjYGHDnKtTZ2UlLSwtbtmzBarXi8/lI
      pVKUl5eTy+VIJBJPtI2SJLFr1y56eno4c+YMuVyOubm5fKBvoejs7CSVSjE/P08ymUQQhLwV
      OR6PMzg4SDQaxev18u1vfxuLxUJvb29B27CwsEAsFqOhoeGfzC+IRqPU1tbi8/k4fPgwGzdu
      RJZlTp48+ThuUJnFqMq//PP/idx8H0NzS5S5Ssj6xrG7q3FYregEsBkqMBlNVG6op7VUT5cn
      xO/99tf48K1/JKkIHDSIxBMSG6prUFXgKfORdXZ2srCwQEtLCxcvXqShoYGenh6am5vz6dBl
      ZWXU1NTkcymfdPrB9u3buXDhAm63my9/+csEAgF8Pl/Be6K9e/ciSRJXr15leXmZUCiEwWAg
      GAwSCoX49re/nR92nDlzhkQiwZe+9KWC7V9RlPxxzs/PEwwGCQQCeSeqy+XC7/fjdruJRqMY
      DAaampoYGhp6YE20aMQHoKoqHo+H+vp6zQ0KeL1eSkpK8j3Ag1jr0YiaADRWlLVek6ft3lRD
      o6BoAtBY12gC0FjX3BONWKhIkdWikLEoGoVhrddE6wE01jWaADTWNZoANNY1n7JSvMTEcD9D
      E7OfmvClqiqRSPRTN6zkkvR1dzK7FPrUz6STMTI5zTWqsXrcPxu0/Sjn++YYu9VOUdNu9OkA
      vkgKh0lk0RcgHI6RnO/mx+dHaa5y4A9EEQWJuQU/DocDUVD44Mc/YCEhc/n8JbY9s5ewd5qU
      rMckSnimZzGYzLz1o+9irdmKmvARSSvYbZbP5Zgo5A3X7du3OXfuHPF4nNraWjKZDKdOneLq
      1ats2rSJM2fOsLi4iMVi4cKFC1y/fp22trZVW0nS4/Fw7do1JEnC7XYX9K11OBzmzJkzdHV1
      5d2gx48fp7e3F0mSmJiYoKOjg8XFRa5evcrS0hLV1dUYDIaC1aS7u5tTp06xa9cufvazn7G0
      tJTPBl1cXOTixYskk8m8M7S0tJT+/n5qamoe3Q065pnla7/2x5Sbc2RjS/zdD99BT5ZnX/oS
      R0+2Y1FT7Nm5mWVfgjPv/ZSwtZli2cuEZ44v/fafc7CxiIWUyH//e99EyqQIjF3lx2f6EWSJ
      to1FXOoapnX3iyws+ZifHubE5YtEFQP/9t/8axymtTEqu2t4u+s6NBqNlJeXEw6H8fl8BAIB
      iouLKS4u5rXXXuOdd95Z1fbeXaR6JezYdrudkpKSvFMgk8mQy+V44403uHDhAm+88QanTp1i
      586dBINBzGZzwS8Era2t+RXojUYjJpMpf6x9fX35xcrvxkN2dnaye/fuB273vq20m00sLPsY
      uNHO0OQ0JXU7eHF3I96lEDWbdrCzuZyqmg1s2NiIyebgtVdeRBRAkLNE4ykEUUTMpgjG41y5
      eJ4Jzxy7Dr9BQ4ke0VHGpuYGAv4Y9fUbqC21ozdbicejaypKPZFI0NXVxcGDB/PDwD179uBw
      OPD7/dTV1SGKIjMzM7S3t3PgwIFVX0d479699Pb2FtwNqtPpePbZZ8lms6RSKQRBQFVVZFlG
      FEXS6TTJZBKXy8W3vvUtiouL6enpKWgb7s4pUFWVb37zm1RUVNDZ2YmiKKiqyq5duxgcHOTQ
      oUPU1NQAcOXKFQKBz57Mdd+KHX71DfpO/SPXxyNs2bEXtzJD+2SOF/Zto66qjLKqOkrKq0ku
      TWEvrcZq0mM3G7GV1+GyGRB0Rt584yV+8r3/QlBxsv+lV5i5+i459xZ2bKojHAize98uGmsq
      GJqcR5AyNG3ajG4Nec06OjowGo2Mjo5y6tQpZmZmOHbsGKIosnXrVmKxGIFAAFEUWVhYYGpq
      ilxu9Yzfu3bt4ty5czQ2NhZciF6vlxMnTlBeXs7CwgL9/f2UlpZy/vx59uzZw+sRdDAAABOc
      SURBVOzsLPv27UOSJE6fPs34+Hh+skqhGBgYIBaLMTMzw+nTpxkaGmLbtm1cuHCB7du3c+3a
      NWpra4nFYhQVFbF582aMRuMDfUhaNOIDUFWVubm5gmfuP60sLi7icrkeepbXWo9GfPKh9k8Z
      giCwYcOG1W7GmqHQ0y1Xm7Vxx6mhsUpoAtBY19wTjfi03w6oqlrwJyAan4+1XpN77gHurgX1
      tCJJ0lN/DF801npNtCGQxrpGE4DGukYTgMa65r4C8M/c5j//x/+Lt45fRv7EjfF453n6pj/d
      3flFRlVV+vr6GBkZQVVVcrkcAwMDKIrCwsICfr9/VdsXCoW4du0asVis4NtWVZXZ2VlCoVD+
      98HBQS5fvkwsFsv/HI/HmZqaylsUVop4PE5HR0fe5hCLxejo6CAYDLK8vMzt27dRFAWv1/vA
      Bzv3N8P1dlHatIPM0jQ+fz3nPvyI4uZnqM76iBgiHH37KHHbRp5vtNAxMI2xdCMvbXXz8w9O
      s2n/yxzetanwR73KeDwestksoVCIkpISxsfHmZiYoKGhge7ubsrLy3G73avWvlwuR21tLWfP
      nuUb3/hGQbedSqW4ceMGW7ZsoaSkBFVV8Xq9HD58GIPBwNzcHC+99BKZTIaRkREaGxvp6+tj
      165dBW3HXc6fP88rr7ySX5Y2m81SV1fH6dOnKSsrQxRFMpkMTqfzgW/v7xuOazAbCXhnGB71
      kIv5KWt7jvnrZ9CVOJBEG8HFWfp6xthYZSBhqmFyZIi4Z4Str36NntPH2fTMPlbD1FnIcNxf
      RhRF+vv7CYfDGI1GcrkcsiyzdetWbDYb8Xic6urqFdn3w2C1WhkZGaG2trbgQjQYDOj1ehRF
      oaysDPiFWVAURcxmM52dnfm0uFgshizLbNy4seA1kWWZS5cuEY1GicfjVFVVYbFYmJ2dxel0
      UldXRygUIhwOk0gkqK6u/kyH7H2/pp7bPSwnVOwWI06Xk+HuG/glEzYdJMKLjE3OI8syCuB0
      uTDqdJS6HXRevUxaX7QqX/6VxmKxsGfPHiwWCyaTiVQqxfT0NIFAgFAoRDQaXdXn3f39/QQC
      ASoqKgr+PkeWZcLhMNFolGg0yvz8PDabjbKyMiKRCHa7nfLycpLJJLt370YURRobGwvahruI
      okhJSQmVlZXE43GGh4cZHx9nfHycjRs3Ul5ejiiKOBwOJEkiEol85vbumwwnSxmmxicwOiuo
      LS/CMzmB1VWNlSQ5vY3Q0jwIJlylVtDbiUci1Fa5GBubpKy2AZfj4WLzCs1KppDlcjlGR0ep
      rq6mpKQEAJ/Ph9PpZHx8HEVR2Lx5c0FTkR+Fu5mZRUVF1NXVFdS4l8lkGBsbQ6fTkcvl8ua2
      XC5HfX09c3NzSJJEfX09Ho8Hi8WStySvRE2CwSA+n4/GxkYCgQCCILC8vJzfr6IoiKLI3Nwc
      zc3Nn3kutGhEjUfibu/ysAJb6zXR3KAaj8QXzRL+BRyta2g8PJoANNY19wyBVusGrlDodLqn
      /hi+aKz1mtyTDbqWG/owiKL41B/DF421XhNtCKSxrtEEoLGu0QSgsa657+Ds+om3CBTvYENu
      lFzdi+ypL37S7VpzyLLMzZs3MZlMbNu2ja6uLqxWKzU1NfT19ZHL5Xj++eexWq2r3dQVR1EU
      bt68mY+NrKqqYmJigp07d3Ljxg3S6TQHDx5csXUBhoaGCAQC7Nu3D5PJRDAYpL+/n02bNqEo
      CsvLy+zYsYO5uTk2btz4me8u7tsDJGIhTnxwBF84TDIR42ff/2v+5kfvM9x5lr/6q7/i749c
      IDAzwP/5l/8H7b2TK3KQaw1VVdm0aRODg4NkMhlaWlro7u7GZDJx6NAhYrHYE10lfjURBIE9
      e/bgcrnyi2gPDw+jKAqhUIhDhw6t6JKxbrcbSZIYHx8H7jxpam1t5cKFCwwNDREOh7l161a+
      rZ/F/YdAOiuHtlfw0aV+MokoWUHPdFcX84FFWp/7KtLkLW7PLuCwm+nsHSzs0a1RdDodHo8H
      g8GAIAgoioLL5cJqtRIMBh8pLOpp5+4Tw8nJSVpbW2lpacFisSCKIlVVVbz33nv3rOReaJxO
      J8FgkPr6egCKioqYm5tj27ZtbN++HUEQCAQCDA0NkU6nP3Nbn3oP0Lr/V3AJcZLRZUbH5+5k
      Qapw6+JxliU7Ic8w/lhyTc/4LySxWAy9Xo8sywSDQd555x2am5uRJImbN2/yzDPPfOFsAp+F
      x+OhsrISg8HA0tISgUAAv9+PIAgUFRUhSdKK7FdVVX7+859TUVFBNpulu7ubgYEBxsbGKCkp
      wel0IooixcXFyLJMPB7/zO3dNxoxFgqgszrJxvzorMVEA8sg6pntP4/PvpND2xuw6XMsB+OY
      LDYq3CUrcrCPykrG8MmyzNzcHDabDYfDwfz8PIIgUFNTQzwex+Vyrch+1yrRaBSLxYJer2d5
      eZlEIoHL5SKZTAJQVVWFIAgFr8nd2WmSJFFaWoosywiCQCgUwmg0UlZWlneD+ny+B8ajP1I2
      aMQ3j2R2U+pYufHd52Gt51CuR9Z6TR7pFZ2zrGal2qGhsSpo7wE01jWaADTWNfdkg67mAg+F
      YK3H8K1H1npN7rkHeNofaa71INb1yFqviTYE0ljXaALQWNdoAtBY19w3GW52sIO/+6//QP90
      iJ1tLeieklf8hUwhSyaTXLt2jZqaGkRRRFVVhoeHicViOBwObt26lU8ju3nzJsFgkIqKilWz
      Q/j9fq5fvw5AcXFxQdshyzI9PT2IoojdbkdRFG7dusXIyAipVIrS0lLa29upqKjA7/czNjZG
      VVUVUPi0PkVRuH79OiMjI2SzWdxuN8FgkM7OThKJBIlEgrGxMcrKyvB4PJSUlDz6QtlLc9PY
      K+qxSCkW50Y58vOjOBv2sK9a4mKPB1NZM1/dU86P3jpG/a4XqVRmuDU8j9leTDIl8Wtfe4F3
      336Puj2/wq+9su9zrf6+WsRiMRYXF5EkKR8LGIlEkGWZ4uJiAoEAOp2OTCbDzp07OXLkCG1t
      bas2/a+jo4Pnn3+ec+fOUVdXV1Bnai6XIxQKYTab8yLfs2dPfoFqj8fD8PAwO3bsIBaLMTc3
      x549ewq2/08iCAJ79+6lr68vf4xjY2MUFxczMTGRt6N3dnY+0AoNnzIEKmvYwq5NNSzNTnLl
      4lUOvPm76L39eAJhmnYfIrI0z/WLF/jqP/szEpM3mFmO8NLrrxHPWWmrMjE+NY/ZZmKofxi5
      wCfgSVFRUUFRUVH+d51OR0NDA4IgYDAYCIfDLC8vYzabCYVC1NbWrqodOp1O43A4MBqNBY9G
      NJvN96yUeXc19unpaWpqahgbG6OpqQlFUaivr1/Ri4AgCAiCwOzsLA0NDcCdHq+3txdBENi1
      axcWi4VIJEJ3dzepVOozt3fflkaXZrjW5UEx2mhpqePckbfAUEyTETImEzpRoGlTI0d//APM
      9krqzVHMFjMmkwmjQcY7P40/LmMwyagqPI1dgN/vx+v1Mjs7iyzLVFdXMzY2htfrxe1243K5
      kGWZiYkJrl27xqFDh5BledV6ALfbzeXLl9Hr9QUXYiaTYWJiAkEQKCsrIxqNoqpqXvQOh4Pb
      t29TVlaG2WxmYWEhn6K9EoyNjbFx40ZEUcxPzNm8eTNTU1MYjUYURaG0tJTFxUVSqRQWy6dH
      dd43GlFVJMLhCHqTFbvFSDQSQW+2YyCHojOSzWRw2C2Eg2HM9iKQ0uhNZlKpHEadCqJIIpnG
      oNfjcDh4UsPiQsbwpVIpEokEBoOBoaEhnnnmmXzhnU4niUQCQRCwWCxEo1EAXC5XwVdpf1ju
      BsEWFRXlY8MLhSzLhEIhBEHA5/Phcrny+7krtnQ6jcFgIB6Pk8vlsNvtmM3mFYlGvLsvURRJ
      JpMYjUai0ShWqxWDwYCqqgiCQCwWe+D9kJYNqrGirPWaaI9BNdY1mgA01jWaADTWNfc8sij0
      zdOTRq/XP/XH8EVjrdfknmzQpz3W44twDF801npNtCGQxrpGE4DGukYTgMa65r4COP/fvstf
      fvcdBi6+z//8nb/ml7O1pHSMD46dfALNWzuoqkp3dzdXrlwhnU4TjUY5ceIE4XCYY8eOcfPm
      zYJ7cB6F+fl5Tpw4we3bt1e8Haqq0tXVxZkzZwiFQly8eJEzZ84QjUa5ceMGH3744Yq+VJVl
      mePHj+dDrxYWFvjoo4+4ffs2o6OjXLp0iXQ6/VDn4r7GFVU0I6cjeMJmSs0iA5c/5IOTN3jl
      23/A4NF/wNz8DDopzdGf/YCJuSXq932Fb7y0s/BHuoYIh8NMTU3x3HPPYTAYuHz5MuFwmGQy
      iclkorm5eVXbd+PGDV555RU++ugjWltbV/TGM5fLMTU1xcGDB+np6SESiXDgwAFsNht1dXVM
      T0+TSCRWLB90eHiYpaUl0uk0drudoqIiNmzYkI+ulCSJ69evs2XLlsfMBkWkyizhiQhY9TqS
      mSxWvcy4ZwaMbr7+5eeIxxMkY2lefuN1At75FTjMtcVdv093dzdXr17Ne06Kioqor6/n2LFj
      q2olyWazWCyWfLtWEr1eT21tLf39/UiSxP79+xkeHr5nzkAwGFyRfedyubzf/+75vmtAzGQy
      HDhwgJKSEuLxOJcuXSKRSHzm9j71HqCmpoRETo9ehNnJUXKiHkWSEUU9Ot3H/0zUYTDon0az
      5yNTVlZGLBYjEongdruxWCwEAgFmZ2eZnJzMW4RXi4qKCk6cOIHZbH5ijx1jsRitra2Mjo4S
      CAQwm80MDAwQCoVW7Nn/XReqz+fD7/dz8eJFJiYmmJuby39GkiTKy8sfKpHivtGIkpRDEARk
      BQRVRRRBkhVEUQeqit6gR5IkBEDUiciyisGw+utArWQM3ydjY+4mREuShCiKZLPZvA15tWaE
      KYqSn3210kL85XORy+VQVRWj0XjPzyuRDXqXu5mgsiwjiiK5XC5fl7vkcrl8Oz6NR8oGXeus
      9RzK9char4n2GFRjXaMJQGNdowlAY12Tv3NVFIVwOLyabfncpFKpfLSLxtpgrdfkHjfo077C
      oaIoT/0xfNFY6zXRhkAa6xpNABrrmk99e6XIMumcjMloQCc++OWOoshIChh1IulsDlm5E01h
      NhkQP34RoShKPtgIQJYlFEQMOk2HGqvDfbNB5Wyan75/nvNdI4yGVHY0lj2wq/CODnFhVmJL
      hZn3T1zmex9cwxvNsa25BuPHAjp76RbFFZVYDXe21t1xE49sp67k04OLHoXPm0OpKArtXSNE
      EynsVjPHL/USjqWoKitGAGYWA1zqGmFTXQUAR853UVpsx+sLc3NgkqYN5U/0TXA2J3Ghc5ix
      6UWK7Vau9IwxNe+jvqbsc7dDVVWu9o7TedtDbYWLzsEpuoamqSgtwmIyMrMY4ObAFJF4imQq
      y6XuEXKSjNmo50r3KOlMDneJI/829nGIJdN8cKGLuqpSAuE47V3DhKJ38pjaO0eIxJPUlJeQ
      zUmcvzVE//gcbqed9q4RHHYL014/dqsZg/7TrSH37QGmx8aw1m/md2vN9Ews8+HxswwHBLZv
      tHOtb55vfOUAxz+8REoW+NZXn+Pc+Zsk0hm+9utfB52RN1/dxULKwv/w5e38/dvHmY5KfPXw
      Vt6/NIzOXkR3zxDF9ZspSSbYtcX2WCdnJZAVFYNOh8mgZ3YpiNlkoLW+Mt+DWUxG5I97sRsD
      k8SSaYwGPTaLEUV58i/UQ7EkyVQGnShiMRs5vKeV98933THDFUCI+9saOXm1H8+8D0VVaamv
      ZH45RLHDSudtD68928bJq/288EwrDquZXE7iTMdtWjZW0liIi8HHJgWz0cC567d59dk2Tl0b
      wOsL8/qhOz/v2wYD43PUV7mZWQzQNz6Loqof/60Ui+mzPUn3vbCHIklKiiyMjY7RNRvFH8rw
      O1/bj5QVKLUbkGJhShq2sL+hjIXZadoO7qfG6WSj+47Sk/4QljIXYd8iorueX99TxWI4w5ad
      bRSTpaG6BASVcFzB5Vg7E6YNeh1ZScJd4qC+qpStjTWcvDpwz7Ct1Glnat5HIBxHFAX0Oh2K
      olJabH+iV39VVZlbDGIyGkhlcuh0Ipd7RnlhT0tesJ+Xocl5KkudJFJZNlaVEowkKHXeCbna
      0ljN+ZtDOGwWLCYjiqoiCgKSLKMTBTr6Jj73/q1mE0a9HllW7hgwVRVBAFEQkGUFi+nO9205
      GKXC7SSWTHOgrQl3sYNEMkPnkIdU5rOX/bqvAJpbNnL94hUujwbY0+wmZSqmwiTROTxHUhWQ
      kxlaGisJSTKN5SVcvXyTaVlHie7OifcuR9hQWYK9qBj/9AhHBoJsrrIR9AcYnJhjZC5ErctE
      wujAoV87XtIRzwI9IzMs+MLcGJyic8jD1qZqLnePEoomOHm1n+VgFLvVTH2Nm0xWIhRLcLpj
      EH849sR7gZnFAAa9jmKHlXdO32A5ECWdzRVEiJ1DHi52jqCoKk67hSs9Y8QSKSLxJB6vn2mv
      H0VRaGuu4WLnMEv+CBVuJ5IkMzAxT8vGys+1f1lWuNIzhsfrJ55ME44lOXGln71bG4jEU5zu
      GKS1voprfeNYLSZOXR3AXewgGIljMxspLrKi0+nQP+D+UotGfACReIr55SBbG7U1khVVpWvI
      w+7Wjb+wxD+AtR6NqAngAdw1y66WzXkt8TjnYq0LYPVN/Gsc7Yv/C76I50J7AK+xrvn/ATbT
      CmxiQkfaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.VHT' width='192'>
      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
      6mGePB/m/wH3lHnVJXCVDwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.VMT' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.vc Ratio' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table.VMT by Speed' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
