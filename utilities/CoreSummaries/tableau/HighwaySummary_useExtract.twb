<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Effective Hours' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='8.0'>
        <calculation class='tableau' formula='8.0' />
      </column>
      <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
        <calculation class='tableau' formula='1454' />
      </column>
      <column caption='Occupancy' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
        <calculation class='tableau' formula='1.5' />
      </column>
    </datasource>
    <datasource caption='avgload5period Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' version='8.3'>
      <connection class='dataengine' dbname='.\avgload5period.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>a</remote-name>
            <remote-type>4</remote-type>
            <local-name>[a]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>a</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12010</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>20443.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>b</remote-name>
            <remote-type>4</remote-type>
            <local-name>[b]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>b</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12015</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>20443.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>384</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>12.800000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>4</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>lanes</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>7.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gl</remote-name>
            <remote-type>4</remote-type>
            <local-name>[gl]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>gl</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>10.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>use</remote-name>
            <remote-type>130</remote-type>
            <local-name>[use]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>use</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;   ?&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;   ?&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ft]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ft</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>7.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>at</remote-name>
            <remote-type>4</remote-type>
            <local-name>[at]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>at</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>7.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cap</remote-name>
            <remote-type>4</remote-type>
            <local-name>[cap]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cap</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>22</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2000.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ffs</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ffs]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ffs</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>10.0</statistic>
              <statistic aggregation='Max' datatype='real'>100.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fft]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>fft</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>544</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>19.370000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cspd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cspd]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cspd</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5473</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>65.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vol_tot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vol_tot]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vol_tot</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>232183</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>48734.489999999998</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctim</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctim]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ctim</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1195</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>24.739999999999998</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vc]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vc</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10442</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1.3995</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeperiod</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeperiod]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeperiod</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AM&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;PM&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2015_04_134&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2015_04_136&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]&quot;' value='Growth in Roadway Lane Miles from Baseline' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' value='Share of Vehicle-miles Traveled' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]&quot;' value='Share of VMT' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;' value='Share of VMT for Link Type' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;' value='Share of Roadway Lane Miles' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_6350905173822671:qk:3]&quot;' value='Share of Total Roadway Seat Miles along County' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;' value='Share of VMT by Congestion Category' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' value='Vehicle Miles Traveled per Hour' />
        </aliases>
      </column>
      <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Delay' datatype='real' name='[Calculation_2320829171401165]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([ctim]-[fft])*[vol_tot]/60' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Scenario Position' datatype='real' name='[Calculation_3680912112348791]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [src]&#13;&#10;WHEN &apos;2010_04_ZZZ&apos; THEN 1.5     &#13;&#10;WHEN &apos;2040_03_116&apos; THEN 2.0&#13;&#10;WHEN &apos;2040_03_127&apos; THEN 2.5&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
      </column>
      <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
      </column>
      <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
      </column>
      <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
      </column>
      <column caption='Congestion (volume over capacity)' datatype='string' name='[Calculation_5010829191108792]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [vc] &lt;= 0.00001 THEN&#13;&#10;  &apos;0 (dummy)&apos;&#13;&#10;ELSEIF [vc] &lt;= 0.75 THEN&#13;&#10;  &apos;Light&#13;&#10;(v/c &lt; 0.75)&apos;&#13;&#10;ELSEIF [vc] &lt;= 1.0 THEN&#13;&#10;  &apos;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Heavy&#13;&#10;(v/c &gt; 1.00)&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='VHT' datatype='real' name='[Calculation_5810829165448827]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ctim]*[vol_tot]/60' scope-isolation='false' />
      </column>
      <column caption='Roadway Seat Miles' datatype='real' name='[Calculation_6350905173822671]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[distance]*[lanes]*[cap]*[Parameters].[Parameter 1]*[Parameters].[Parameter 3]' scope-isolation='false' />
      </column>
      <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='vcRatioTimes100' datatype='integer' name='[Calculation_6530829180003764]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT([vc]*100)' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Time Period Duration' datatype='integer' name='[Calculation_7220911171450081]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [timeperiod]=&apos;EA&apos; THEN&#13;&#10;  3&#13;&#10;ELSEIF [timeperiod]=&apos;AM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;MD&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [timeperiod]=&apos;PM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;EV&apos; THEN&#13;&#10;  8&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
        </aliases>
      </column>
      <column caption='VMT (Congestion non-dummy)' datatype='real' name='[Calculation_7680829191605709]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [Calculation_5010829191108792]==&apos;0 (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='VMT Per Hour (Daily)' datatype='real' name='[Calculation_7880911172232239]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_4420828151331817])/24' scope-isolation='false' />
      </column>
      <column caption='Vehicle Seconds of Delay per Mile' datatype='real' name='[Calculation_8200829171900729]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Calculation_2320829171401165]*60*60)/Sum([Calculation_4420828151331817])' scope-isolation='false' />
      </column>
      <column caption='Lanes' datatype='string' name='[Calculation_9060829180125573]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [lanes]==2 THEN&#13;&#10; &apos;2&apos;&#13;&#10;ELSEIF [lanes]==3 THEN&#13;&#10; &apos;3&apos;&#13;&#10;ELSE&#13;&#10; &apos;4 or more&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Facility Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_7550828155717668]'>
          <bin value='&quot;Collectors&quot;'>
            <value>&quot;Collectors&quot;</value>
            <value>&quot;Expressways&quot;</value>
            <value>&quot;Major Arterials&quot;</value>
            <value>&quot;Other&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
          <bin value='&quot;1.0 to 7.5 mph&quot;'>
            <value>&quot;1.0 to 7.5 mph&quot;</value>
            <value>&quot;7.5 to 15 mph&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='San Francisco' />
          <alias key='2.0' value='San Mateo' />
          <alias key='3.0' value='Santa Clara' />
          <alias key='4.0' value='Alameda' />
          <alias key='5.0' value='Contra Costa' />
          <alias key='6.0' value='Solano' />
          <alias key='7.0' value='Napa' />
          <alias key='8.0' value='Sonoma' />
          <alias key='9.0' value='Marin' />
        </aliases>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
          <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
          <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
        </aliases>
      </column>
      <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
          <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
          <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
          <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
          <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
        </aliases>
      </column>
      <column-instance column='[Calculation_6500829184447940]' derivation='None' name='[none:Calculation_6500829184447940:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcto:sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_6350905173822671]' derivation='Sum' name='[pcto:sum:Calculation_6350905173822671:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_7680829191605709]' derivation='Sum' name='[pcto:sum:Calculation_7680829191605709:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Scenario,Speed Bin,Time Period)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:src:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_6500829184447940:nk]' />
          <groupfilter function='level-members' level='[none:timeperiod:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.396226' group-percentage='0.125416' measure-ordering='alphabetic' measure-percentage='0.354051' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:gl:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>4.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>9.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>6.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>1.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>8.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>7.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>3.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>5.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2015_04_136&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2015_04_135&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2015_04_134&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#609f80'>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            </map>
            <map to='#8d9876'>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
            </map>
            <map to='#cbb345'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:gl:ok]' direction='ASC'>
          <dictionary>
            <bucket>1.0</bucket>
            <bucket>2.0</bucket>
            <bucket>3.0</bucket>
            <bucket>4.0</bucket>
            <bucket>5.0</bucket>
            <bucket>6.0</bucket>
            <bucket>7.0</bucket>
            <bucket>8.0</bucket>
            <bucket>9.0</bucket>
            <bucket>10.0</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Effective Hours' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='8.0'>
          <calculation class='tableau' formula='8.0' />
        </column>
        <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
          <calculation class='tableau' formula='1454' />
        </column>
        <column caption='Occupancy' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
          <calculation class='tableau' formula='1.5' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across.Chart.Fwy Speed' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Freeway Speed (in miles per hour) by Time Period</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]'>
            <groupfilter function='member' level='[none:Calculation_7550828155717668:nk]' member='&quot;Freeways&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='101' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='79' />
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='Average Travel Speed (mph)' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' field-type='quantitative' max='65.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='72' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1710'>Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1710'>&#10;Time Period:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1710'>&#10;Speed:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.Speed' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Roadway Speed (in miles per hour) by Time Period</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='101' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='79' />
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='Average Travel Speed (mph)' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' field-type='quantitative' max='65.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='72' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1710'>Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1710'>&#10;Time Period:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1710'>&#10;Speed:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.Supply' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Roadway Lane Miles by County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:8]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Pane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC'>
            <dictionary>
              <bucket>1.0</bucket>
              <bucket>2.0</bucket>
              <bucket>3.0</bucket>
              <bucket>4.0</bucket>
              <bucket>5.0</bucket>
              <bucket>6.0</bucket>
              <bucket>7.0</bucket>
              <bucket>8.0</bucket>
              <bucket>9.0</bucket>
              <bucket>10.0</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='Growth in Relative to Base Scenario' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='28' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4890829192148691:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4890829192148691:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1530'>County:&#9;</run>
                <run bold='true' fontsize='14' indent='1530'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1530'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1530'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1530'>&#10;Lane Miles:&#9;</run>
                <run bold='true' fontsize='14' indent='1530'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' y-axis-name='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='2430'>County:&#9;</run>
                <run bold='true' fontsize='14' indent='2430'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2430'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='2430'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2430'>&#10;Pctt Diff in Supply:&#9;</run>
                <run bold='true' fontsize='14' indent='2430'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4890829192148691:qk] + [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8])</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.VMT' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled Intensity by Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' field-type='quantitative' max='14000000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]' value='p0.0%' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='75' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.VMT by Speed' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled by Speed Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' value='78' />
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' scope='rows' value='Share of VMT' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' value='p0.0%' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='69' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='2250'>Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Speed Category:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Share:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Amount:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Fwy Speed' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Freeway Speed (in miles per hour) by Time Period</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]'>
            <groupfilter function='member' level='[none:Calculation_7550828155717668:nk]' member='&quot;Freeways&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='74' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='106' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='324' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='72' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Speed' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Roadway Speed (in miles per hour) by Time Period</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='74' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='106' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='324' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='72' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Supply' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Roadway Lane Miles by County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC'>
            <dictionary>
              <bucket>1.0</bucket>
              <bucket>2.0</bucket>
              <bucket>3.0</bucket>
              <bucket>4.0</bucket>
              <bucket>5.0</bucket>
              <bucket>6.0</bucket>
              <bucket>7.0</bucket>
              <bucket>8.0</bucket>
              <bucket>9.0</bucket>
              <bucket>10.0</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='88' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='70' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]' value='p0.0%' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='236' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='116' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='56' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.VMT' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled Intensity by Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='132' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='79' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='60' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='288' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.VMT by Speed' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled by Speed Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation1:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation1:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='84' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' value='117' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='360' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='92' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' value='72' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle &apos;Delay&apos; by Facility Type: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Delay' datatype='real' name='[Calculation_2320829171401165]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([ctim]-[fft])*[vol_tot]/60' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column caption='Vehicle Seconds of Delay per Mile' datatype='real' name='[Calculation_8200829171900729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_2320829171401165]*60*60)/Sum([Calculation_4420828151331817])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2320829171401165]' derivation='Sum' name='[sum:Calculation_2320829171401165:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_8200829171900729]' derivation='User' name='[usr:Calculation_8200829171900729:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_2320829171401165:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_8200829171900729:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_2320829171401165:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_8200829171900729:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='39' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='126' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_8200829171900729:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='152' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='192' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='60' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='32' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Supply'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Roadway Lane Miles by County: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcto:sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='natural' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC' />
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='47' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='92' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]' value='p0.0%' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='132' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='40' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='80' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.VHT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Hours Traveled - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='VHT' datatype='real' name='[Calculation_5810829165448827]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ctim]*[vol_tot]/60' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5810829165448827]' derivation='Sum' name='[sum:Calculation_5810829165448827:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_5810829165448827:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_5810829165448827:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Road&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='82' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='59' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='192' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='32' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='112' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.VMT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='29' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]' value='p0.0%' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='144' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='180' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='52' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.vc Ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle &apos;Congestion&apos; by Time of Delay: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Congestion (volume over capacity)' datatype='string' name='[Calculation_5010829191108792]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [vc] &lt;= 0.00001 THEN&#13;&#10;  &apos;0 (dummy)&apos;&#13;&#10;ELSEIF [vc] &lt;= 0.75 THEN&#13;&#10;  &apos;Light&#13;&#10;(v/c &lt; 0.75)&apos;&#13;&#10;ELSEIF [vc] &lt;= 1.0 THEN&#13;&#10;  &apos;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Heavy&#13;&#10;(v/c &gt; 1.00)&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT (Congestion non-dummy)' datatype='real' name='[Calculation_7680829191605709]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_5010829191108792]==&apos;0 (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_5010829191108792]' derivation='None' name='[none:Calculation_5010829191108792:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7680829191605709]' derivation='Sum' name='[pcto:sum:Calculation_7680829191605709:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;0 (dummy)&quot;</bucket>
              <bucket>&quot;Light&#13;&#10;(v/c &lt; 0.75)&quot;</bucket>
              <bucket>&quot;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&quot;</bucket>
              <bucket>&quot;Heavy&#13;&#10;(v/c &gt; 1.00)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='51' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]' value='158' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='124' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='216' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]' value='80' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.VMT by Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled by Speed Category - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_6500829184447940]' derivation='None' name='[none:Calculation_6500829184447940:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation1:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='46' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation1:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_6500829184447940:nk]' value='111' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='116' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='208' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_6500829184447940:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Indiv.Table.Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='89'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.vc Ratio'>
      <cards>
        <edge name='left'>
          <strip size='195'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='114'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.Supply'>
      <cards>
        <edge name='left'>
          <strip size='185'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='131'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Facility Type (group)]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Table.Supply'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='85'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.Supply'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='73'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.VMT'>
      <cards>
        <edge name='left'>
          <strip size='202'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='110'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:ft:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          <field>[textscan.41879.461103888891].[none:Calculation_4320828142204452:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.VHT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='86'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Table.VMT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='76'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.VMT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Table.Fwy Speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='98'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.Fwy Speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='87'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Table.Speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='98'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.Speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='87'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[none:Calculation_7550828155717668:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.VMT by Speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='95'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Table.VMT by Speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='109'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.VMT by Speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='73'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Indiv.Table.Delay' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.vc Ratio' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Supply' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Supply' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Supply' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.VMT' width='192'>
      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
      mDA90p3KAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.VHT' width='192'>
      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
      CRrl8jcUx5G333jPgwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Table.VMT' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.VMT' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Fwy Speed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Fwy Speed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Speed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Speed' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAUZElEQVR4nO3dWWxc133H8e/sGznkcIbkcF+1yxa1xLvlJE3jNEgKBAHaAg1QoGnf05f2
      qYDfirZAUHQHmiBI2yBJA7RJbMuObcWyZEkWqYUSJZHUcN+G2+z7cu/tgxy7o7FFsUOOPLz/
      DyDAM+S5/B/P/OacOXPPHYOmaRpC6JTxcRcgxOMkARC6JgEQuiYBEBXLZxJcPvcO71+9yUYo
      gqZpn/iPXIK3zp5jbGwURf34fiWfJZnOlfzu6OhoVWo3V+WviD3N6qins9lLoaWP6am7DK8F
      KRQUXC4XrsZGDJqKu7mXIx1OovEkLU0uLl98D7WooqHicDhJZgqYbTaMSo5sAcLRGENDQ7te
      u4wAYsfVNTTR3dFFb0cLwbU18kWFolIEoLW9m6HjnyMW3qRYLIDFRl93B9l0Gn9XL+l4iDpP
      C/VOW1VqNcgyqNgJuVQS1WqnkEmjqiomoxGzyYBmsrC6vEJ3bx9mQ5FoMk+j20U2FWctnMLn
      qcNqsZBTIby6QnNHN/HNIIrJQXurb9frlgAIXduVKdBezZT0q7Y8Sr92JQCZTKbsvtXlecbG
      xlgMbpTcn08n2IgkSu5Ti3mmpmfRNIWpwD3yhQKBe/coqPd/Fo7EmJ8JkEjntqhEI5lMPnCX
      xuryPOF46tNbKQU2w7Et+6VpCoHANKqmsTATIJUtMhuYIFNQSUY3GRsbY2U9zIOPQy4VIxT7
      uK7Q5iaFXJp703Nlv/sgpZgjnc0/UIfG2toamqYyMxUgr6if2j6bjJHMlLb/pMcrvBFkdTPK
      5uoSwbV11jbCAKwFV1A0yD7Qh5L+pePE0znCoQ0KRZXg4hyxZPah/dI0lWSy9DHR1CKBe5Pk
      CspDGhbZDEU/8UcP9quQSTA2NsbsYpDQ+gproRimV1555ZWHVvb/UCgUsFgsJfe98d8/xeXv
      oaHOyd1rl5jfTLMyPcbEnZuMTi7R4G1mfmYKv7+VhfERfvCT1zgy9CT/9t2/xuHx8v3v/ZAX
      f+srzN+8wGrWxPTYCBPLcY7s6+HO9Q+4MbFINrbC8LUxlhZmMTg82Enxt3/zj3T2tHH+wmXa
      unsxZEP8+49+hmqpp6+rjclbIwyPTaOkI3wwfJWV5UXyRgcfvPcuh44cwWD49H5Flyb5l+/9
      iN6jJ3n9P/6BtNnNj/717znywldZH3+fe5sKF8+9Q2uDjSu3pmhyaLzx9jnMSoqROzOomGnx
      NvDqq6+xODXO5PQ8g4eOYiwkeO2117A6XVy+cIHFlSATUwsMDPRw/tWfcGMxSXx5guVIno62
      ZqbvXOM//+ctuuuKXLx+h8XNPPt7/bx/9k3WEgpLU2PcuhNgdnqS+oY63h++y8HBnoc+XpfP
      /pJf35hj4cZZFuMK2VSOpanbnHnzXVpaG3nnzKuECnamx4ZJ5RTC8TTry3N4mlu58NYZLA4n
      3//BDzm4v5833n6XycAcQ08e5t7YVa7fDrCxPM3YxDTTgUl87T3EFm7zzz8+Q2u9iSujk/T1
      dpOJrfPuO78iqrnpa3fzzutvcG9pDTUV5dLIVYLLi2Rx8MGF3zxWhpI+lD9eE7x9dYrxKxfY
      DC0zPLFevVUgTSkSmJwgHIkSmJ3nwoX3uT0+xROH9+Gqd3H+zV8wv54ANIZHruJxGrly/S7t
      PX38+vUz9A30ArC4tonf28ThJ4fIJeKgqUxMBrh26QK37kzgMuVRLQ5ujN7GXu9h8OA+rl+6
      xNCRHt67dJ1sOo61vomZwASgMT5xj+vDF7kzdpdGt4WsYmL42hhGLUf+IS88AFeHP8DjbeDS
      5RHqW3sYO/cq/t79H/18aX6G509/kTdef535iVEuXR1jaW6cwFKYN3/5c+qamoE8hQJshqO4
      jFmWQ0k2l+dYX13h0vAIG0kD04EpUsuzpIE2fzsdDUbmE3ZmblwhCwwePUGP30M0Gmfw8CGy
      8QTFXILpuSUuvH+R8cAcSnwJm8XE7HqOeGzj07r0MYMVNblK1uhEKWSZn55gMaLQ5q3n/LnL
      DB0/SiIUZHF5lZGxCUavnOf21AIWo4FwJE1X3wCnnthPLpPE09qDSct9+P97ktm7V5iYXiAd
      XsFl1RifX8fb4mdwsJ/LIzdptye5NbOBwWzjxPEhIuFNoMDscgx1Y57LI6N4GhxkVRPDw6Og
      FShu8Vj9xnpwiYNPvYjbbEDJhqr3OUBLWxvBhEI0FsVstNLT46fRacLpaqC9w83EzE1OnDyO
      phRw+Q/wnW+9wBtvvUvfgaO0tsXweFyYjeBz1xFLJbl9ZZj+o08DGiaTme6+Hvx+H61eN5rD
      gzOWAYzUWTR8bb1cuHyT01/+Gm6vgzb3CO7Ogx+2NdLV3YvP76e1pQm3asdsTxBeimIxPaxH
      Goqjle/82R/xqzNvYOropcnjw+Opx24xQqOXl7/6NAe7mlBjC8yspfG6bSRbO2nyePjjP/02
      c5Pj9PpOYDbDs88+xfnr92hvcpHKGnE0emnzeTGa3ah5Fw5NxQQ0tfoJ3FvHmlrG1NaDHQAD
      fr+ffUcP87Ofn+G53/5d0DSMFge9Lc00uiw02DTqm1rJAE5H3ZaPl6e5hRN1jRgtDnKKigkL
      4dVZYkY7x470cP3WFG1dfeRT9fj8bRg2J2k6fBwAV52VXE7B19xCU0sXXL1G78H7a/omkwl/
      Vz/Oeg8umxmfp56Cy4bJZkdJx+lp93F3Oc3XP9eEmlrnyvW7nHrpywCEgnO4Gg5zoM+Dt9WL
      u2DFYooSWktgeuhjdZ/FUccXvvQVnhvaz7XzYYaaHTu/CqRpGul0GqfT+cht8qkwl0ZneOn5
      Uxi2+t10jGAkT09Hc2WFPoxaIDCzzL7B3pK7t9uvRzUVCDCwb9+Wfd8J6cgaEcVBh8/98X0V
      9ksr5jh38QovvPAiFpOByOoiiqsZX719J0r+UIGbo/c4NnTkwT9OYGqBffv6y1o8Sr8qC4Cm
      sbQwQySt0OQ0E00X6OvvI5dOYbNV54OMasrlctKvGvIo/apoCqSqBW6MjtHS0UM4uIHP333/
      TYfNtiuvlJ8F0q/aslW/KnsTrIGnpQ1jNsWBE0/hs+WYX//05UUhPmsqGgGMZgt97c0ki0aM
      6QShoov9rXXkMumdqk+IXVXhKpCBjp6P33y0VFiMENUmZ4MKXZMACF2TAAhdkwAIXZMACF2T
      AAhdkwAIXZMACF2TAAhdq+xkOCXP6I2bYHViyCXIqGaeffrUTtUmxK6raATIbMyzEMpi0BSy
      mgVrPkM8nyeX22qvrhCfDRWNABanm442SMaCYDChahouq5V8sbhT9QmxqyoKgNXdQr9fxTLw
      FGo2Tl6zYgbyW7YU4rOh4rNBvS1t9//TtZPb34SoDlkFEromARC6JgEQuiYBELomARC6JgEQ
      uiYBELomARC6JgEQuiYBELpW0akQmqYyE5jE3tD84enQFgZ6O3eqNiF2XUUjgFrMMD45g9Nh
      5/aduzicjp2qS4iqqCgABoOZ50+/xN2xm5x8+jkWpibIyH4AUUMqmwKpRaYDk7S2d7E8P0Od
      pwWH1Yom+wFEjagoACari1OnTn54q3sHyhGiumQVSOiaBEDomgRA6JoEQOiaBEDomgRA6JoE
      QOiaBEDomgRA6JoEQOiaBEDoWsX7AW5ev4a3vYdMdI2MYuHY0YM7VZsQu67C/QBZloMbFHMZ
      wvEchViIjKqiqupO1SfErqpwP4CRZ194keDSApqmoWoamqqiKMpO1SfErqpoCmQwWQmvzTBw
      8CjZ+AZZzYbTbCZtsexUfULsqsoCYDAyeODw/Rs+z07UI0RVySqQ0DUJgNA1CYDQNQmA0DUJ
      gNC1Cr8k7+Hy+Rw//vk/bbvdMye/xIGBJz+6XchFmLz859s+Tuehb9PY+sxHtzcSEf7u7I+3
      fZw/fPp3ONzWt+124rNvVwOgaSqhyNq222Vz6dLjqEWyyfltH0cppEpuF1WFlejG9uspyIW+
      9iqZAgldkwAIXZMACF2r+D2ApqkUigpqIU9BM1Dvcu5EXUJURcUBmLl7lZmIGXNmnf5DQxIA
      UVMqmgIV0lHm1uKYlDwd3T0szE6TlcujixpS2X4As519/fevCp1KJLDYHdisVmw2244UJ8Ru
      q2gKZLba6e7dT3fvDlUjRJXJKpDQNQmA0DUJgNA1CYDQNQmA0DUJgNC1sgAUi0XeOncJTdMe
      Rz1CVFXJ5wDrGyH+65e/IhJNcGhfP10d/sdVlxBVUTICGI1GbFYrf/CNr8iTX+hCyQjgdtfx
      J9/6Jqoq0x+hDyUjgMVkIrg0z927EyTT2cdVkxBVUxKA4NI8BSz4/T4W56bJFLa+yrNazLG6
      vklwaY6ZheVdK1SI3VAyBWrr6uXiubcpGqwMHnoSh2WLVVJN487oVYJJqLNZMCl5uro7drNe
      IXZUyTN8ZnKMpbXIIzfOp8LMrERIJWIYjCZMQEb2A4gaUjIC9B94gnQmRzpXxG63b9nYWufl
      6199mcDsPIV0nJytEbfVSrpY3LWChdhJZfsB1jY26eps58a1a5w+/Tw288OnQUazhQP7Bnet
      QFE98USEpeDsttsN9h3Bavl4E1Q2tUIqMr6tY5gsrpKLmAFMrM4RTsW3dZx6m5MnOh/9+VgW
      AJfVyO3xKfr2H8FoMGzrj4vaFlxf4M13f7rtdt9u+4uSACRCt5i/9d1tHcNe11MWgLfvXuH6
      wsS2jtPv66gsAIrRyrFjx/C1tmMxSQDE3lY2v1FVDavVitEoT36x95WMAKqq0lDvYmNjA5vL
      jcthxyRBKBNLRLhy7Z1ttzt57DReT+tHt5ORCWZv/NW2jzNw8i9xNnw8zC+G13h7/Mq2j/ON
      oc/jcbm33W4vKQnAZnCRVK6IquRZnJ+jseEYJjlhukw2m+L25NVttzswOFQSAE3Nk0sHt30c
      VS2U3A6nYlwI3Nj2cb58+BkJwP+90drZS2tn72MqRYjqKwnA9MQtbk/O4XJY6Tl4nH3drZ/W
      ToiaMb8UIJX+5OXUsg/CNiJJujv8RLKZqhQnxG4bGX2PheXAJ/6sZIZvAJrqrIyOz9Dd3VmN
      2oR4rEoCoAGRdJE2n4uZme1/IihErfnEEWAxGKG/X74TS+x9Je8BNGAzmsTb6GRhcYkj+3of
      2lgppBkeGcVe30Q2tkpL5yADvTJ1ErWjbJW/zmEjGk3g8/q2bGyyODl8oI9YNIrJZGF9fY2c
      nA4takhZAJLpDM0+H5lHWAVSckmWN5KYjSoNnia0YgGLXB5d1JCyk+HCoU3q3A3cuDpC88sv
      47KZPrWxyeqi0+9jYKAPJZehs6dfrrQlakrJ83U2cIcnjw0Rz8HTzzz70Cc/AAYD7kYPNosZ
      Z109Loe88ovaUhKAZKbIxJ0JPv/Sc4Q3t/+F0kLUmtJPgns7cTb4UFIJegf6H1dNQlRNSQDM
      VictTVYAtroghBB7Qenp0GsrzC8uk84pHD1+ijavvk+VFXtfyet8R88ARqMRl8NIOBR6XDUJ
      UTVly6BGo4EmXxtNLc2Pox4hqqpspt/d4efi+fNsRJOPox4hqqosAPNz85x87iU6WxofRz1C
      VFXZFCiTjrA8nqaomTl+WJZCxd5WFoD65h5sqThNjbICJPa+sgCEgkvY6jyYHuFyEJqmMhuY
      xOVtp5gKkVEsDPZ17UqhQuyGkgAsLC7w8te+8ciNNbWI1e5k4s4YVqsVk1IgLwEQNaQ0AFPj
      zH64FXLw0JN0tjY9tLHBYMTd6EFTZsBgx6BpZPN5lFwOp9O5e1ULsUNKAnDgiRO0NLc8cmNN
      U5mdnqKzd4B8MkROa5LLo4uaUhKAluYW0skYqaxCk9eDaYurQxtNVo4dP/Hhre7dqlGIXVO6
      J1jTuHnrFqDi9nVzZL9sjBd7W9lST73TTjSaonkbUyEhalVZAKYCAYwGhfPvniWZl+8LFntb
      2ecAbe0dGM026nMZMkWVOusW2yKFqGFlI4BByTK7sEhT92GanfLkF3tb+TfEWKy0+lrIpxOP
      ox4hqqpsCtTROYjLYae+0fs46hGiqspGgInRDzh77jwrm9HHUY8QVVU2AtR526hHJRGLgf/h
      p0IIUevKRgCrCSLRJC2t8jmA2PvKAuC021FVhVRaviFG7H3lO8IyGfxdfXgbXFs2LmbjjNwY
      x2i1U0yF8Xfvk8uji5pSMgJkU3FUjMzPTpPO5rdsbLa7OXHsAJqqYrPZWQ0G5fLooqaUBGDi
      9iihZIGO7l783oYtGxcyUX7x2lm6e7pwuupAU+Ty6KKmlEyBjj9zmnwuy73xOyyvR+ho8Ty0
      scnq4uWXv4TJYsXrHkAzWOTy6KKmPPAewIDV5uDo0KlHamw0WWho2HqkEOKzSl6wha5JAISu
      SQCErkkAhK5JAISuSQCErkkAhK5JAISuSQCErkkAhK6VnQ69LZpGaGMNe30Taj5JXjPjle8V
      EDWkogAohTSheIbVySsYDUZQVZ45/eJO1SbErqtoCmSyuvDVm2nwNGO22rEDSdkPIGpIRQEo
      ZqK8/d4w9fV1GJUMGbONBtkPIGpIRVMgs6OR3/+9bwLQ3yNbIUXtkVUgoWsSAKFrEgChaxIA
      oWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrFe8HmB2/gbllP6H5O9R7O+Ty6KKmVDQC
      aJpGIhoikc4SiyVIJpMUCgXy+a0vrS7EZ0FFATAYjbT5W9EwMHjwCNlEGIPJhNlc2cAiRLVU
      /Ex1t/ZiN9rJRNboGTyE2WjEaJS3FqI2VBwAm8uNDah3dO1AOUJUl7xUC12TAAhdkwAIXZMA
      CF2TAAhdkwAIXZMACF2TAAhdkwAIXZMACF2TAAhdq3A/gMrIuTPYuk8RXxonq5r44hdO71Bp
      Quy+CkcAA/19vShKEbOjgUYjxOXy6KKGVDYCGAz3z/0vmsglwyQ1M26rlWyxuEPlCbG7Kt8P
      0LGfY5oBra8ZTTPImwpRUyoOgMFgxGDYkUMJUXXygi10TQIgdO1/AZ788S7pPlIjAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table.VMT by Speed' width='192'>
      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
      oAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Table.VMT by Speed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.VMT by Speed' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
