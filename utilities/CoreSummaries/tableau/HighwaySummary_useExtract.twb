<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0811.1521                                -->
<workbook source-build='9.3.6 (9300.16.0811.1521)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.3'>
      <aliases enabled='yes' />
      <column caption='Effective Hours' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='8.0'>
        <calculation class='tableau' formula='8.0' />
      </column>
      <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
        <calculation class='tableau' formula='1454' />
      </column>
      <column caption='Occupancy' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
        <calculation class='tableau' formula='1.5' />
      </column>
    </datasource>
    <datasource caption='avgload5period Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' version='9.3'>
      <connection class='dataengine' dbname='.\avgload5period.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>a</remote-name>
            <remote-type>4</remote-type>
            <local-name>[a]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>a</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12291</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>20511.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>b</remote-name>
            <remote-type>4</remote-type>
            <local-name>[b]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>b</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12293</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>20511.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>388</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>12.800000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>4</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>lanes</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gl</remote-name>
            <remote-type>4</remote-type>
            <local-name>[gl]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>gl</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>10.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ft]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ft</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>10.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>at</remote-name>
            <remote-type>4</remote-type>
            <local-name>[at]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>at</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>7.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cap</remote-name>
            <remote-type>4</remote-type>
            <local-name>[cap]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2250.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ffs</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ffs]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ffs</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>10.0</statistic>
              <statistic aggregation='Max' datatype='real'>100.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fft]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>fft</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>555</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>19.370000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cspd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cspd]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cspd</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6229</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>65.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vol_tot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vol_tot]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vol_tot</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>394230</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>55209.339999999997</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctim</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctim]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ctim</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1594</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>76.739999999999995</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vc]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>vc</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11403</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>3.5228000000000002</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeperiod</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeperiod]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeperiod</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AM&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;PM&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_05_003&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2035_06_665&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2010&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2035, 4 - Draft Preferred&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]&quot;' value='Growth in Roadway Lane Miles from Baseline' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' value='Share of Vehicle-miles Traveled' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]&quot;' value='Share of VMT' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;' value='Share of VMT for Link Type' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;' value='Share of Roadway Lane Miles' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_6350905173822671:qk:3]&quot;' value='Share of Total Roadway Seat Miles along County' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;' value='Share of VMT by Congestion Category' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' value='Vehicle Miles Traveled per Hour' />
        </aliases>
      </column>
      <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Delay' datatype='real' name='[Calculation_2320829171401165]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([ctim]-[fft])*[vol_tot]/60' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Scenario Position' datatype='real' name='[Calculation_3680912112348791]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [src]&#13;&#10;WHEN &apos;2010_04_ZZZ&apos; THEN 1.5     &#13;&#10;WHEN &apos;2040_03_116&apos; THEN 2.0&#13;&#10;WHEN &apos;2040_03_127&apos; THEN 2.5&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
      </column>
      <column caption='Non-recurring Delay' datatype='real' name='[Calculation_429812310551937025]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.00 AND [vc] &lt;= 0.01 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.00 AND [vc] &lt;= 0.01 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.00 AND [vc] &lt;= 0.01 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.01 AND [vc] &lt;= 0.02 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.01 AND [vc] &lt;= 0.02 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.01 AND [vc] &lt;= 0.02 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.02 AND [vc] &lt;= 0.03 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.02 AND [vc] &lt;= 0.03 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.02 AND [vc] &lt;= 0.03 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.03 AND [vc] &lt;= 0.04 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.03 AND [vc] &lt;= 0.04 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.03 AND [vc] &lt;= 0.04 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.04 AND [vc] &lt;= 0.05 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.04 AND [vc] &lt;= 0.05 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.04 AND [vc] &lt;= 0.05 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.05 AND [vc] &lt;= 0.06 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.05 AND [vc] &lt;= 0.06 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.05 AND [vc] &lt;= 0.06 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.06 AND [vc] &lt;= 0.07 AND lanes == 2) THEN 0.000000162400 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.06 AND [vc] &lt;= 0.07 AND lanes == 3) THEN 0.000000014120 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.06 AND [vc] &lt;= 0.07 AND lanes == 4) THEN 0.000000000203 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.07 AND [vc] &lt;= 0.08 AND lanes == 2) THEN 0.000000282500 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.07 AND [vc] &lt;= 0.08 AND lanes == 3) THEN 0.000000026290 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.07 AND [vc] &lt;= 0.08 AND lanes == 4) THEN 0.000000000399 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.08 AND [vc] &lt;= 0.09 AND lanes == 2) THEN 0.000000402700 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.08 AND [vc] &lt;= 0.09 AND lanes == 3) THEN 0.000000038460 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.08 AND [vc] &lt;= 0.09 AND lanes == 4) THEN 0.000000000595 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.09 AND [vc] &lt;= 0.10 AND lanes == 2) THEN 0.000000522800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.09 AND [vc] &lt;= 0.10 AND lanes == 3) THEN 0.000000050630 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.09 AND [vc] &lt;= 0.10 AND lanes == 4) THEN 0.000000000790 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.10 AND [vc] &lt;= 0.11 AND lanes == 2) THEN 0.000000522800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.10 AND [vc] &lt;= 0.11 AND lanes == 3) THEN 0.000000050630 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.10 AND [vc] &lt;= 0.11 AND lanes == 4) THEN 0.000000000790 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.11 AND [vc] &lt;= 0.12 AND lanes == 2) THEN 0.000000643000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.11 AND [vc] &lt;= 0.12 AND lanes == 3) THEN 0.000000062800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.11 AND [vc] &lt;= 0.12 AND lanes == 4) THEN 0.000000000986 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.12 AND [vc] &lt;= 0.13 AND lanes == 2) THEN 0.000001146000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.12 AND [vc] &lt;= 0.13 AND lanes == 3) THEN 0.000000146000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.12 AND [vc] &lt;= 0.13 AND lanes == 4) THEN 0.000000004229 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.13 AND [vc] &lt;= 0.14 AND lanes == 2) THEN 0.000001650000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.13 AND [vc] &lt;= 0.14 AND lanes == 3) THEN 0.000000229300 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.13 AND [vc] &lt;= 0.14 AND lanes == 4) THEN 0.000000007472 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.14 AND [vc] &lt;= 0.15 AND lanes == 2) THEN 0.000002153000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.14 AND [vc] &lt;= 0.15 AND lanes == 3) THEN 0.000000312500 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.14 AND [vc] &lt;= 0.15 AND lanes == 4) THEN 0.000000010710 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.15 AND [vc] &lt;= 0.16 AND lanes == 2) THEN 0.000003160000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.15 AND [vc] &lt;= 0.16 AND lanes == 3) THEN 0.000000479000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.15 AND [vc] &lt;= 0.16 AND lanes == 4) THEN 0.000000017200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.16 AND [vc] &lt;= 0.17 AND lanes == 2) THEN 0.000004488000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.16 AND [vc] &lt;= 0.17 AND lanes == 3) THEN 0.000000787200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.16 AND [vc] &lt;= 0.17 AND lanes == 4) THEN 0.000000039960 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.17 AND [vc] &lt;= 0.18 AND lanes == 2) THEN 0.000005816000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.17 AND [vc] &lt;= 0.18 AND lanes == 3) THEN 0.000001095000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.17 AND [vc] &lt;= 0.18 AND lanes == 4) THEN 0.000000062720 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.18 AND [vc] &lt;= 0.19 AND lanes == 2) THEN 0.000007144000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.18 AND [vc] &lt;= 0.19 AND lanes == 3) THEN 0.000001404000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.18 AND [vc] &lt;= 0.19 AND lanes == 4) THEN 0.000000085480 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.19 AND [vc] &lt;= 0.20 AND lanes == 2) THEN 0.000008472000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.19 AND [vc] &lt;= 0.20 AND lanes == 3) THEN 0.000001712000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.19 AND [vc] &lt;= 0.20 AND lanes == 4) THEN 0.000000108200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.20 AND [vc] &lt;= 0.21 AND lanes == 2) THEN 0.000009800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.20 AND [vc] &lt;= 0.21 AND lanes == 3) THEN 0.000002020000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.20 AND [vc] &lt;= 0.21 AND lanes == 4) THEN 0.000000131000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.21 AND [vc] &lt;= 0.22 AND lanes == 2) THEN 0.000012560000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.21 AND [vc] &lt;= 0.22 AND lanes == 3) THEN 0.000002854000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.21 AND [vc] &lt;= 0.22 AND lanes == 4) THEN 0.000000230800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.22 AND [vc] &lt;= 0.23 AND lanes == 2) THEN 0.000015320000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.22 AND [vc] &lt;= 0.23 AND lanes == 3) THEN 0.000003688000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.22 AND [vc] &lt;= 0.23 AND lanes == 4) THEN 0.000000330600 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.23 AND [vc] &lt;= 0.24 AND lanes == 2) THEN 0.000018080000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.23 AND [vc] &lt;= 0.24 AND lanes == 3) THEN 0.000004522000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.23 AND [vc] &lt;= 0.24 AND lanes == 4) THEN 0.000000430400 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.24 AND [vc] &lt;= 0.25 AND lanes == 2) THEN 0.000020840000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.24 AND [vc] &lt;= 0.25 AND lanes == 3) THEN 0.000005356000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.24 AND [vc] &lt;= 0.25 AND lanes == 4) THEN 0.000000530200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.25 AND [vc] &lt;= 0.26 AND lanes == 2) THEN 0.000023600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.25 AND [vc] &lt;= 0.26 AND lanes == 3) THEN 0.000006190000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.25 AND [vc] &lt;= 0.26 AND lanes == 4) THEN 0.000000630000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.26 AND [vc] &lt;= 0.27 AND lanes == 2) THEN 0.000028520000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.26 AND [vc] &lt;= 0.27 AND lanes == 3) THEN 0.000008032000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.26 AND [vc] &lt;= 0.27 AND lanes == 4) THEN 0.000000960000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.27 AND [vc] &lt;= 0.28 AND lanes == 2) THEN 0.000033440000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.27 AND [vc] &lt;= 0.28 AND lanes == 3) THEN 0.000009874000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.27 AND [vc] &lt;= 0.28 AND lanes == 4) THEN 0.000001290000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.28 AND [vc] &lt;= 0.29 AND lanes == 2) THEN 0.000038360000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.28 AND [vc] &lt;= 0.29 AND lanes == 3) THEN 0.000011720000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.28 AND [vc] &lt;= 0.29 AND lanes == 4) THEN 0.000001620000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.29 AND [vc] &lt;= 0.30 AND lanes == 2) THEN 0.000043280000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.29 AND [vc] &lt;= 0.30 AND lanes == 3) THEN 0.000013560000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.29 AND [vc] &lt;= 0.30 AND lanes == 4) THEN 0.000001950000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.30 AND [vc] &lt;= 0.31 AND lanes == 2) THEN 0.000048200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.30 AND [vc] &lt;= 0.31 AND lanes == 3) THEN 0.000015400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.30 AND [vc] &lt;= 0.31 AND lanes == 4) THEN 0.000002280000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.31 AND [vc] &lt;= 0.32 AND lanes == 2) THEN 0.000056240000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.31 AND [vc] &lt;= 0.32 AND lanes == 3) THEN 0.000019000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.31 AND [vc] &lt;= 0.32 AND lanes == 4) THEN 0.000003174000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.32 AND [vc] &lt;= 0.33 AND lanes == 2) THEN 0.000064280000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.32 AND [vc] &lt;= 0.33 AND lanes == 3) THEN 0.000022600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.32 AND [vc] &lt;= 0.33 AND lanes == 4) THEN 0.000004068000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.33 AND [vc] &lt;= 0.34 AND lanes == 2) THEN 0.000072320000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.33 AND [vc] &lt;= 0.34 AND lanes == 3) THEN 0.000026200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.33 AND [vc] &lt;= 0.34 AND lanes == 4) THEN 0.000004962000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.34 AND [vc] &lt;= 0.35 AND lanes == 2) THEN 0.000080360000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.34 AND [vc] &lt;= 0.35 AND lanes == 3) THEN 0.000029800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.34 AND [vc] &lt;= 0.35 AND lanes == 4) THEN 0.000005856000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.35 AND [vc] &lt;= 0.36 AND lanes == 2) THEN 0.000088400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.35 AND [vc] &lt;= 0.36 AND lanes == 3) THEN 0.000033400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.35 AND [vc] &lt;= 0.36 AND lanes == 4) THEN 0.000006750000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.36 AND [vc] &lt;= 0.37 AND lanes == 2) THEN 0.000100500000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.36 AND [vc] &lt;= 0.37 AND lanes == 3) THEN 0.000039760000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.36 AND [vc] &lt;= 0.37 AND lanes == 4) THEN 0.000008860000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.37 AND [vc] &lt;= 0.38 AND lanes == 2) THEN 0.000112600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.37 AND [vc] &lt;= 0.38 AND lanes == 3) THEN 0.000046120000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.37 AND [vc] &lt;= 0.38 AND lanes == 4) THEN 0.000010970000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.38 AND [vc] &lt;= 0.39 AND lanes == 2) THEN 0.000124800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.38 AND [vc] &lt;= 0.39 AND lanes == 3) THEN 0.000052480000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.38 AND [vc] &lt;= 0.39 AND lanes == 4) THEN 0.000013080000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.39 AND [vc] &lt;= 0.40 AND lanes == 2) THEN 0.000136900000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.39 AND [vc] &lt;= 0.40 AND lanes == 3) THEN 0.000058840000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.39 AND [vc] &lt;= 0.40 AND lanes == 4) THEN 0.000015190000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.40 AND [vc] &lt;= 0.41 AND lanes == 2) THEN 0.000149000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.40 AND [vc] &lt;= 0.41 AND lanes == 3) THEN 0.000065200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.40 AND [vc] &lt;= 0.41 AND lanes == 4) THEN 0.000017300000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.41 AND [vc] &lt;= 0.42 AND lanes == 2) THEN 0.000166600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.41 AND [vc] &lt;= 0.42 AND lanes == 3) THEN 0.000075760000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.41 AND [vc] &lt;= 0.42 AND lanes == 4) THEN 0.000021780000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.42 AND [vc] &lt;= 0.43 AND lanes == 2) THEN 0.000184200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.42 AND [vc] &lt;= 0.43 AND lanes == 3) THEN 0.000086320000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.42 AND [vc] &lt;= 0.43 AND lanes == 4) THEN 0.000026260000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.43 AND [vc] &lt;= 0.44 AND lanes == 2) THEN 0.000201800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.43 AND [vc] &lt;= 0.44 AND lanes == 3) THEN 0.000096880000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.43 AND [vc] &lt;= 0.44 AND lanes == 4) THEN 0.000030740000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.44 AND [vc] &lt;= 0.45 AND lanes == 2) THEN 0.000219400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.44 AND [vc] &lt;= 0.45 AND lanes == 3) THEN 0.000107400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.44 AND [vc] &lt;= 0.45 AND lanes == 4) THEN 0.000035220000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.45 AND [vc] &lt;= 0.46 AND lanes == 2) THEN 0.000237000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.45 AND [vc] &lt;= 0.46 AND lanes == 3) THEN 0.000118000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.45 AND [vc] &lt;= 0.46 AND lanes == 4) THEN 0.000039700000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.46 AND [vc] &lt;= 0.47 AND lanes == 2) THEN 0.000261400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.46 AND [vc] &lt;= 0.47 AND lanes == 3) THEN 0.000134200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.46 AND [vc] &lt;= 0.47 AND lanes == 4) THEN 0.000048460000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.47 AND [vc] &lt;= 0.48 AND lanes == 2) THEN 0.000285800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.47 AND [vc] &lt;= 0.48 AND lanes == 3) THEN 0.000150400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.47 AND [vc] &lt;= 0.48 AND lanes == 4) THEN 0.000057220000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.48 AND [vc] &lt;= 0.49 AND lanes == 2) THEN 0.000310200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.48 AND [vc] &lt;= 0.49 AND lanes == 3) THEN 0.000166600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.48 AND [vc] &lt;= 0.49 AND lanes == 4) THEN 0.000065980000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.49 AND [vc] &lt;= 0.50 AND lanes == 2) THEN 0.000334600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.49 AND [vc] &lt;= 0.50 AND lanes == 3) THEN 0.000182800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.49 AND [vc] &lt;= 0.50 AND lanes == 4) THEN 0.000074740000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.50 AND [vc] &lt;= 0.51 AND lanes == 2) THEN 0.000359000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.50 AND [vc] &lt;= 0.51 AND lanes == 3) THEN 0.000199000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.50 AND [vc] &lt;= 0.51 AND lanes == 4) THEN 0.000083500000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.51 AND [vc] &lt;= 0.52 AND lanes == 2) THEN 0.000392000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.51 AND [vc] &lt;= 0.52 AND lanes == 3) THEN 0.000223600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.51 AND [vc] &lt;= 0.52 AND lanes == 4) THEN 0.000099400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.52 AND [vc] &lt;= 0.53 AND lanes == 2) THEN 0.000425000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.52 AND [vc] &lt;= 0.53 AND lanes == 3) THEN 0.000248200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.52 AND [vc] &lt;= 0.53 AND lanes == 4) THEN 0.000115300000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.53 AND [vc] &lt;= 0.54 AND lanes == 2) THEN 0.000458000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.53 AND [vc] &lt;= 0.54 AND lanes == 3) THEN 0.000272800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.53 AND [vc] &lt;= 0.54 AND lanes == 4) THEN 0.000131200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.54 AND [vc] &lt;= 0.55 AND lanes == 2) THEN 0.000491000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.54 AND [vc] &lt;= 0.55 AND lanes == 3) THEN 0.000297400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.54 AND [vc] &lt;= 0.55 AND lanes == 4) THEN 0.000147100000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.55 AND [vc] &lt;= 0.56 AND lanes == 2) THEN 0.000524000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.55 AND [vc] &lt;= 0.56 AND lanes == 3) THEN 0.000322000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.55 AND [vc] &lt;= 0.56 AND lanes == 4) THEN 0.000163000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.56 AND [vc] &lt;= 0.57 AND lanes == 2) THEN 0.000568200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.56 AND [vc] &lt;= 0.57 AND lanes == 3) THEN 0.000357400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.56 AND [vc] &lt;= 0.57 AND lanes == 4) THEN 0.000190800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.57 AND [vc] &lt;= 0.58 AND lanes == 2) THEN 0.000612400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.57 AND [vc] &lt;= 0.58 AND lanes == 3) THEN 0.000392800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.57 AND [vc] &lt;= 0.58 AND lanes == 4) THEN 0.000218600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.58 AND [vc] &lt;= 0.59 AND lanes == 2) THEN 0.000656600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.58 AND [vc] &lt;= 0.59 AND lanes == 3) THEN 0.000428200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.58 AND [vc] &lt;= 0.59 AND lanes == 4) THEN 0.000246400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.59 AND [vc] &lt;= 0.60 AND lanes == 2) THEN 0.000700800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.59 AND [vc] &lt;= 0.60 AND lanes == 3) THEN 0.000463600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.59 AND [vc] &lt;= 0.60 AND lanes == 4) THEN 0.000274200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.60 AND [vc] &lt;= 0.61 AND lanes == 2) THEN 0.000745000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.60 AND [vc] &lt;= 0.61 AND lanes == 3) THEN 0.000499000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.60 AND [vc] &lt;= 0.61 AND lanes == 4) THEN 0.000302000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.61 AND [vc] &lt;= 0.62 AND lanes == 2) THEN 0.000806400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.61 AND [vc] &lt;= 0.62 AND lanes == 3) THEN 0.000550600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.61 AND [vc] &lt;= 0.62 AND lanes == 4) THEN 0.000347800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.62 AND [vc] &lt;= 0.63 AND lanes == 2) THEN 0.000867800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.62 AND [vc] &lt;= 0.63 AND lanes == 3) THEN 0.000602200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.62 AND [vc] &lt;= 0.63 AND lanes == 4) THEN 0.000393600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.63 AND [vc] &lt;= 0.64 AND lanes == 2) THEN 0.000929200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.63 AND [vc] &lt;= 0.64 AND lanes == 3) THEN 0.000653800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.63 AND [vc] &lt;= 0.64 AND lanes == 4) THEN 0.000439400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.64 AND [vc] &lt;= 0.65 AND lanes == 2) THEN 0.000990600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.64 AND [vc] &lt;= 0.65 AND lanes == 3) THEN 0.000705400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.64 AND [vc] &lt;= 0.65 AND lanes == 4) THEN 0.000485200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.65 AND [vc] &lt;= 0.66 AND lanes == 2) THEN 0.001052000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.65 AND [vc] &lt;= 0.66 AND lanes == 3) THEN 0.000757000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.65 AND [vc] &lt;= 0.66 AND lanes == 4) THEN 0.000531000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.66 AND [vc] &lt;= 0.67 AND lanes == 2) THEN 0.001148000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.66 AND [vc] &lt;= 0.67 AND lanes == 3) THEN 0.000836000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.66 AND [vc] &lt;= 0.67 AND lanes == 4) THEN 0.000605200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.67 AND [vc] &lt;= 0.68 AND lanes == 2) THEN 0.001243000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.67 AND [vc] &lt;= 0.68 AND lanes == 3) THEN 0.000915000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.67 AND [vc] &lt;= 0.68 AND lanes == 4) THEN 0.000679400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.68 AND [vc] &lt;= 0.69 AND lanes == 2) THEN 0.001339000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.68 AND [vc] &lt;= 0.69 AND lanes == 3) THEN 0.000994000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.68 AND [vc] &lt;= 0.69 AND lanes == 4) THEN 0.000753600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.69 AND [vc] &lt;= 0.70 AND lanes == 2) THEN 0.001434000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.69 AND [vc] &lt;= 0.70 AND lanes == 3) THEN 0.001073000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.69 AND [vc] &lt;= 0.70 AND lanes == 4) THEN 0.000827800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.70 AND [vc] &lt;= 0.71 AND lanes == 2) THEN 0.001530000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.70 AND [vc] &lt;= 0.71 AND lanes == 3) THEN 0.001152000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.70 AND [vc] &lt;= 0.71 AND lanes == 4) THEN 0.000902000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.71 AND [vc] &lt;= 0.72 AND lanes == 2) THEN 0.001710000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.71 AND [vc] &lt;= 0.72 AND lanes == 3) THEN 0.001296000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.71 AND [vc] &lt;= 0.72 AND lanes == 4) THEN 0.001025000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.72 AND [vc] &lt;= 0.73 AND lanes == 2) THEN 0.001890000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.72 AND [vc] &lt;= 0.73 AND lanes == 3) THEN 0.001440000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.72 AND [vc] &lt;= 0.73 AND lanes == 4) THEN 0.001149000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.73 AND [vc] &lt;= 0.74 AND lanes == 2) THEN 0.002071000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.73 AND [vc] &lt;= 0.74 AND lanes == 3) THEN 0.001585000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.73 AND [vc] &lt;= 0.74 AND lanes == 4) THEN 0.001272000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.74 AND [vc] &lt;= 0.75 AND lanes == 2) THEN 0.002251000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.74 AND [vc] &lt;= 0.75 AND lanes == 3) THEN 0.001729000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.74 AND [vc] &lt;= 0.75 AND lanes == 4) THEN 0.001396000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.75 AND [vc] &lt;= 0.76 AND lanes == 2) THEN 0.002431000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.75 AND [vc] &lt;= 0.76 AND lanes == 3) THEN 0.001873000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.75 AND [vc] &lt;= 0.76 AND lanes == 4) THEN 0.001519000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.76 AND [vc] &lt;= 0.77 AND lanes == 2) THEN 0.002844000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.76 AND [vc] &lt;= 0.77 AND lanes == 3) THEN 0.002216000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.76 AND [vc] &lt;= 0.77 AND lanes == 4) THEN 0.001775000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.77 AND [vc] &lt;= 0.78 AND lanes == 2) THEN 0.003258000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.77 AND [vc] &lt;= 0.78 AND lanes == 3) THEN 0.002560000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.77 AND [vc] &lt;= 0.78 AND lanes == 4) THEN 0.002031000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.78 AND [vc] &lt;= 0.79 AND lanes == 2) THEN 0.003671000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.78 AND [vc] &lt;= 0.79 AND lanes == 3) THEN 0.002903000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.78 AND [vc] &lt;= 0.79 AND lanes == 4) THEN 0.002286000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.79 AND [vc] &lt;= 0.80 AND lanes == 2) THEN 0.004085000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.79 AND [vc] &lt;= 0.80 AND lanes == 3) THEN 0.003247000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.79 AND [vc] &lt;= 0.80 AND lanes == 4) THEN 0.002542000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.80 AND [vc] &lt;= 0.81 AND lanes == 2) THEN 0.004498000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.80 AND [vc] &lt;= 0.81 AND lanes == 3) THEN 0.003590000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.80 AND [vc] &lt;= 0.81 AND lanes == 4) THEN 0.002798000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.81 AND [vc] &lt;= 0.82 AND lanes == 2) THEN 0.005301000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.81 AND [vc] &lt;= 0.82 AND lanes == 3) THEN 0.004317000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.81 AND [vc] &lt;= 0.82 AND lanes == 4) THEN 0.003376000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.82 AND [vc] &lt;= 0.83 AND lanes == 2) THEN 0.006104000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.82 AND [vc] &lt;= 0.83 AND lanes == 3) THEN 0.005044000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.82 AND [vc] &lt;= 0.83 AND lanes == 4) THEN 0.003954000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.83 AND [vc] &lt;= 0.84 AND lanes == 2) THEN 0.006906000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.83 AND [vc] &lt;= 0.84 AND lanes == 3) THEN 0.005770000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.83 AND [vc] &lt;= 0.84 AND lanes == 4) THEN 0.004531000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.84 AND [vc] &lt;= 0.85 AND lanes == 2) THEN 0.007709000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.84 AND [vc] &lt;= 0.85 AND lanes == 3) THEN 0.006497000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.84 AND [vc] &lt;= 0.85 AND lanes == 4) THEN 0.005109000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.85 AND [vc] &lt;= 0.86 AND lanes == 2) THEN 0.008512000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.85 AND [vc] &lt;= 0.86 AND lanes == 3) THEN 0.007224000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.85 AND [vc] &lt;= 0.86 AND lanes == 4) THEN 0.005687000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.86 AND [vc] &lt;= 0.87 AND lanes == 2) THEN 0.009319000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.86 AND [vc] &lt;= 0.87 AND lanes == 3) THEN 0.007952000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.86 AND [vc] &lt;= 0.87 AND lanes == 4) THEN 0.006260000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.87 AND [vc] &lt;= 0.88 AND lanes == 2) THEN 0.010130000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.87 AND [vc] &lt;= 0.88 AND lanes == 3) THEN 0.008680000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.87 AND [vc] &lt;= 0.88 AND lanes == 4) THEN 0.006833000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.88 AND [vc] &lt;= 0.89 AND lanes == 2) THEN 0.010930000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.88 AND [vc] &lt;= 0.89 AND lanes == 3) THEN 0.009407000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.88 AND [vc] &lt;= 0.89 AND lanes == 4) THEN 0.007406000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.89 AND [vc] &lt;= 0.90 AND lanes == 2) THEN 0.011740000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.89 AND [vc] &lt;= 0.90 AND lanes == 3) THEN 0.010140000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.89 AND [vc] &lt;= 0.90 AND lanes == 4) THEN 0.007979000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.90 AND [vc] &lt;= 0.91 AND lanes == 2) THEN 0.012550000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.90 AND [vc] &lt;= 0.91 AND lanes == 3) THEN 0.010860000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.90 AND [vc] &lt;= 0.91 AND lanes == 4) THEN 0.008552000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.91 AND [vc] &lt;= 0.92 AND lanes == 2) THEN 0.013260000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.91 AND [vc] &lt;= 0.92 AND lanes == 3) THEN 0.011510000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.91 AND [vc] &lt;= 0.92 AND lanes == 4) THEN 0.009059000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.92 AND [vc] &lt;= 0.93 AND lanes == 2) THEN 0.013980000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.92 AND [vc] &lt;= 0.93 AND lanes == 3) THEN 0.012160000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.92 AND [vc] &lt;= 0.93 AND lanes == 4) THEN 0.009566000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.93 AND [vc] &lt;= 0.94 AND lanes == 2) THEN 0.014690000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.93 AND [vc] &lt;= 0.94 AND lanes == 3) THEN 0.012810000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.93 AND [vc] &lt;= 0.94 AND lanes == 4) THEN 0.010070000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.94 AND [vc] &lt;= 0.95 AND lanes == 2) THEN 0.015410000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.94 AND [vc] &lt;= 0.95 AND lanes == 3) THEN 0.013460000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.94 AND [vc] &lt;= 0.95 AND lanes == 4) THEN 0.010580000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.95 AND [vc] &lt;= 0.96 AND lanes == 2) THEN 0.016120000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.95 AND [vc] &lt;= 0.96 AND lanes == 3) THEN 0.014110000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.95 AND [vc] &lt;= 0.96 AND lanes == 4) THEN 0.011090000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.96 AND [vc] &lt;= 0.97 AND lanes == 2) THEN 0.016870000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.96 AND [vc] &lt;= 0.97 AND lanes == 3) THEN 0.014780000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.96 AND [vc] &lt;= 0.97 AND lanes == 4) THEN 0.011600000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.97 AND [vc] &lt;= 0.98 AND lanes == 2) THEN 0.017620000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.97 AND [vc] &lt;= 0.98 AND lanes == 3) THEN 0.015440000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.97 AND [vc] &lt;= 0.98 AND lanes == 4) THEN 0.012120000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.98 AND [vc] &lt;= 0.99 AND lanes == 2) THEN 0.018360000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.98 AND [vc] &lt;= 0.99 AND lanes == 3) THEN 0.016110000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.98 AND [vc] &lt;= 0.99 AND lanes == 4) THEN 0.012640000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.99 AND [vc] &lt;= 1.00 AND lanes == 2) THEN 0.019110000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.99 AND [vc] &lt;= 1.00 AND lanes == 3) THEN 0.016770000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.99 AND [vc] &lt;= 1.00 AND lanes == 4) THEN 0.013160000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 1.00 AND lanes == 2) THEN 0.019860000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 1.00 AND lanes == 3) THEN 0.017440000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 1.00 AND lanes == 4) THEN 0.013680000000 * [Calculation_4420828151331817]&#13;&#10;ELSE 0.0&#13;&#10;END' />
      </column>
      <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
      </column>
      <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
      </column>
      <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
      </column>
      <column caption='Congestion (volume over capacity)' datatype='string' name='[Calculation_5010829191108792]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [vc] &lt;= 0.00001 THEN&#13;&#10;  &apos;0 (dummy)&apos;&#13;&#10;ELSEIF [vc] &lt;= 0.75 THEN&#13;&#10;  &apos;Light&#13;&#10;(v/c &lt; 0.75)&apos;&#13;&#10;ELSEIF [vc] &lt;= 1.0 THEN&#13;&#10;  &apos;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Heavy&#13;&#10;(v/c &gt; 1.00)&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='VHT' datatype='real' name='[Calculation_5810829165448827]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ctim]*[vol_tot]/60' scope-isolation='false' />
      </column>
      <column caption='Roadway Seat Miles' datatype='real' name='[Calculation_6350905173822671]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[distance]*[lanes]*[cap]*[Parameters].[Parameter 1]*[Parameters].[Parameter 3]' scope-isolation='false' />
      </column>
      <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='vcRatioTimes100' datatype='integer' name='[Calculation_6530829180003764]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT([vc]*100)' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Time Period Duration' datatype='integer' name='[Calculation_7220911171450081]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [timeperiod]=&apos;EA&apos; THEN&#13;&#10;  3&#13;&#10;ELSEIF [timeperiod]=&apos;AM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;MD&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [timeperiod]=&apos;PM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;EV&apos; THEN&#13;&#10;  8&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
        </aliases>
      </column>
      <column caption='VMT (Congestion non-dummy)' datatype='real' name='[Calculation_7680829191605709]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [Calculation_5010829191108792]==&apos;0 (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='VMT Per Hour (Daily)' datatype='real' name='[Calculation_7880911172232239]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_4420828151331817])/24' scope-isolation='false' />
      </column>
      <column caption='Vehicle Seconds of Delay per Mile' datatype='real' name='[Calculation_8200829171900729]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Calculation_2320829171401165]*60*60)/Sum([Calculation_4420828151331817])' scope-isolation='false' />
      </column>
      <column caption='Lanes' datatype='string' name='[Calculation_9060829180125573]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [lanes]==2 THEN&#13;&#10; &apos;2&apos;&#13;&#10;ELSEIF [lanes]==3 THEN&#13;&#10; &apos;3&apos;&#13;&#10;ELSE&#13;&#10; &apos;4 or more&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Facility Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_7550828155717668]'>
          <bin value='&quot;Collectors&quot;'>
            <value>&quot;Collectors&quot;</value>
            <value>&quot;Expressways&quot;</value>
            <value>&quot;Major Arterials&quot;</value>
            <value>&quot;Other&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
          <bin value='&quot;1.0 to 7.5 mph&quot;'>
            <value>&quot;1.0 to 7.5 mph&quot;</value>
            <value>&quot;7.5 to 15 mph&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='San Francisco' />
          <alias key='2.0' value='San Mateo' />
          <alias key='3.0' value='Santa Clara' />
          <alias key='4.0' value='Alameda' />
          <alias key='5.0' value='Contra Costa' />
          <alias key='6.0' value='Solano' />
          <alias key='7.0' value='Napa' />
          <alias key='8.0' value='Sonoma' />
          <alias key='9.0' value='Marin' />
        </aliases>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2010_04_ZZZ\\modelfiles\\avgload5period.csv&quot;' value='Year 2010 (v 0.4)' />
          <alias key='&quot;2040_03_116\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 Plan (v 0.3)' />
          <alias key='&quot;2040_03_127\\modelfiles\\avgload5period.csv&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
        </aliases>
      </column>
      <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
          <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
          <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
          <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
          <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[vc]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_6500829184447940]' derivation='None' name='[none:Calculation_6500829184447940:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcto:sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_6350905173822671]' derivation='Sum' name='[pcto:sum:Calculation_6350905173822671:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_7680829191605709]' derivation='Sum' name='[pcto:sum:Calculation_7680829191605709:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Scenario,Speed Bin,Time Period)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:src:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_6500829184447940:nk]' />
          <groupfilter function='level-members' level='[none:timeperiod:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.34' group-percentage='0.0522222' measure-ordering='alphabetic' measure-percentage='0.52' parameter-percentage='0.0877778' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:gl:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>4.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>9.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>6.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>1.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>8.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>7.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>3.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>5.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2015_04_136&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2015_04_135&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2015_04_134&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Year 2010&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Year 2035, 1 - Main Streets&quot;</bucket>
            </map>
            <map to='#609f80'>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Year 2035, 4 - Draft Preferred&quot;</bucket>
            </map>
            <map to='#8d9876'>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Year 2035, 3 - Big Cities&quot;</bucket>
            </map>
            <map to='#cbb345'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Year 2035, 2 - Connected Neighborhoods&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Year 2035, 0 - No Project&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:gl:ok]' direction='ASC'>
          <dictionary>
            <bucket>1.0</bucket>
            <bucket>2.0</bucket>
            <bucket>3.0</bucket>
            <bucket>4.0</bucket>
            <bucket>5.0</bucket>
            <bucket>6.0</bucket>
            <bucket>7.0</bucket>
            <bucket>8.0</bucket>
            <bucket>9.0</bucket>
            <bucket>10.0</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Effective Hours' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='8.0'>
          <calculation class='tableau' formula='8.0' />
        </column>
        <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
          <calculation class='tableau' formula='1454' />
        </column>
        <column caption='Occupancy' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
          <calculation class='tableau' formula='1.5' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across.Chart.Fwy Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Freeway Speed (in miles per hour) by Time Period</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]'>
            <groupfilter function='member' level='[none:Calculation_7550828155717668:nk]' member='&quot;Freeways&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='101' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='79' />
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='Average Travel Speed (mph)' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' field-type='quantitative' max='65.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='72' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1710'>Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1710'>&#10;Time Period:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1710'>&#10;Speed:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Roadway Speed (in miles per hour) by Time Period</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='101' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='79' />
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='Average Travel Speed (mph)' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' field-type='quantitative' max='65.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='72' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1710'>Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1710'>&#10;Time Period:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1710'>&#10;Speed:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.Supply'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Roadway Lane Miles by County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column datatype='real' name='[lanes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:8]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Pane' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC'>
            <dictionary>
              <bucket>1.0</bucket>
              <bucket>2.0</bucket>
              <bucket>3.0</bucket>
              <bucket>4.0</bucket>
              <bucket>5.0</bucket>
              <bucket>6.0</bucket>
              <bucket>7.0</bucket>
              <bucket>8.0</bucket>
              <bucket>9.0</bucket>
              <bucket>10.0</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='Growth in Relative to Base Scenario' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='28' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4890829192148691:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4890829192148691:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1530'>County:&#9;</run>
                <run bold='true' fontsize='14' indent='1530'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1530'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1530'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1530'>&#10;Lane Miles:&#9;</run>
                <run bold='true' fontsize='14' indent='1530'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' y-axis-name='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='2430'>County:&#9;</run>
                <run bold='true' fontsize='14' indent='2430'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2430'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='2430'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2430'>&#10;Pctt Diff in Supply:&#9;</run>
                <run bold='true' fontsize='14' indent='2430'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4890829192148691:qk] + [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:8])</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.VMT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled Intensity by Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Time Period Duration' datatype='integer' name='[Calculation_7220911171450081]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [timeperiod]=&apos;EA&apos; THEN&#13;&#10;  3&#13;&#10;ELSEIF [timeperiod]=&apos;AM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;MD&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [timeperiod]=&apos;PM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;EV&apos; THEN&#13;&#10;  8&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' field-type='quantitative' max='14000000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]' value='p0.0%' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='75' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:4]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.VMT by Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled by Speed Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column datatype='real' name='[cspd]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' value='78' />
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' scope='rows' value='Share of VMT' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]' value='p0.0%' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='69' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='2250'>Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Speed Category:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Share:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Amount:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk:2]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Fwy Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Freeway Speed (in miles per hour) by Time Period</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]'>
            <groupfilter function='member' level='[none:Calculation_7550828155717668:nk]' member='&quot;Freeways&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='74' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='106' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='324' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='72' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Roadway Speed (in miles per hour) by Time Period</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='74' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='106' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='324' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='72' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Supply'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Roadway Lane Miles by County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column datatype='real' name='[lanes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcdf:sum:Calculation_4890829192148691:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC'>
            <dictionary>
              <bucket>1.0</bucket>
              <bucket>2.0</bucket>
              <bucket>3.0</bucket>
              <bucket>4.0</bucket>
              <bucket>5.0</bucket>
              <bucket>6.0</bucket>
              <bucket>7.0</bucket>
              <bucket>8.0</bucket>
              <bucket>9.0</bucket>
              <bucket>10.0</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='88' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='70' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcdf:sum:Calculation_4890829192148691:qk:2]' value='p0.0%' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='236' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='116' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='56' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.VMT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled Intensity by Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Time Period Duration' datatype='integer' name='[Calculation_7220911171450081]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [timeperiod]=&apos;EA&apos; THEN&#13;&#10;  3&#13;&#10;ELSEIF [timeperiod]=&apos;AM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;MD&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [timeperiod]=&apos;PM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;EV&apos; THEN&#13;&#10;  8&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='132' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='79' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='60' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='288' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4780911171654236:qk]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:1]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</rows>
        <cols>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.VMT by Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled by Speed Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Speed Bin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_6500829184447940]'>
                <bin value='&quot;1.0 to 7.5 mph&quot;'>
                  <value>&quot;1.0 to 7.5 mph&quot;</value>
                  <value>&quot;7.5 to 15 mph&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;1.0 to 7.5 mph&quot;' value='1 to 15 mph' />
              </aliases>
            </column>
            <column datatype='real' name='[cspd]' role='measure' type='quantitative' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation1:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Speed Bin (group)]' />
              <groupfilter function='member' level='[Speed Bin (group)]' member='&quot;0 mph (dummy)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation1:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='84' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' value='117' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' value='360' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='92' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]' value='72' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Speed Bin (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle &apos;Delay&apos; by Facility Type: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Delay' datatype='real' name='[Calculation_2320829171401165]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([ctim]-[fft])*[vol_tot]/60' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column caption='Vehicle Seconds of Delay per Mile' datatype='real' name='[Calculation_8200829171900729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_2320829171401165]*60*60)/Sum([Calculation_4420828151331817])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column datatype='real' name='[fft]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2320829171401165]' derivation='Sum' name='[sum:Calculation_2320829171401165:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_8200829171900729]' derivation='User' name='[usr:Calculation_8200829171900729:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_2320829171401165:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_8200829171900729:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_2320829171401165:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_8200829171900729:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='39' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='126' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_8200829171900729:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='152' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='192' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='60' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='32' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Non-recurring'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle &apos;Delay&apos; by Facility Type: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Non-recurring Delay' datatype='real' name='[Calculation_429812310551937025]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.00 AND [vc] &lt;= 0.01 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.00 AND [vc] &lt;= 0.01 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.00 AND [vc] &lt;= 0.01 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.01 AND [vc] &lt;= 0.02 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.01 AND [vc] &lt;= 0.02 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.01 AND [vc] &lt;= 0.02 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.02 AND [vc] &lt;= 0.03 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.02 AND [vc] &lt;= 0.03 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.02 AND [vc] &lt;= 0.03 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.03 AND [vc] &lt;= 0.04 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.03 AND [vc] &lt;= 0.04 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.03 AND [vc] &lt;= 0.04 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.04 AND [vc] &lt;= 0.05 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.04 AND [vc] &lt;= 0.05 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.04 AND [vc] &lt;= 0.05 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.05 AND [vc] &lt;= 0.06 AND lanes == 2) THEN 0.000000042200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.05 AND [vc] &lt;= 0.06 AND lanes == 3) THEN 0.000000001950 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.05 AND [vc] &lt;= 0.06 AND lanes == 4) THEN 0.000000000007 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.06 AND [vc] &lt;= 0.07 AND lanes == 2) THEN 0.000000162400 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.06 AND [vc] &lt;= 0.07 AND lanes == 3) THEN 0.000000014120 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.06 AND [vc] &lt;= 0.07 AND lanes == 4) THEN 0.000000000203 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.07 AND [vc] &lt;= 0.08 AND lanes == 2) THEN 0.000000282500 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.07 AND [vc] &lt;= 0.08 AND lanes == 3) THEN 0.000000026290 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.07 AND [vc] &lt;= 0.08 AND lanes == 4) THEN 0.000000000399 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.08 AND [vc] &lt;= 0.09 AND lanes == 2) THEN 0.000000402700 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.08 AND [vc] &lt;= 0.09 AND lanes == 3) THEN 0.000000038460 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.08 AND [vc] &lt;= 0.09 AND lanes == 4) THEN 0.000000000595 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.09 AND [vc] &lt;= 0.10 AND lanes == 2) THEN 0.000000522800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.09 AND [vc] &lt;= 0.10 AND lanes == 3) THEN 0.000000050630 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.09 AND [vc] &lt;= 0.10 AND lanes == 4) THEN 0.000000000790 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.10 AND [vc] &lt;= 0.11 AND lanes == 2) THEN 0.000000522800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.10 AND [vc] &lt;= 0.11 AND lanes == 3) THEN 0.000000050630 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.10 AND [vc] &lt;= 0.11 AND lanes == 4) THEN 0.000000000790 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.11 AND [vc] &lt;= 0.12 AND lanes == 2) THEN 0.000000643000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.11 AND [vc] &lt;= 0.12 AND lanes == 3) THEN 0.000000062800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.11 AND [vc] &lt;= 0.12 AND lanes == 4) THEN 0.000000000986 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.12 AND [vc] &lt;= 0.13 AND lanes == 2) THEN 0.000001146000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.12 AND [vc] &lt;= 0.13 AND lanes == 3) THEN 0.000000146000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.12 AND [vc] &lt;= 0.13 AND lanes == 4) THEN 0.000000004229 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.13 AND [vc] &lt;= 0.14 AND lanes == 2) THEN 0.000001650000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.13 AND [vc] &lt;= 0.14 AND lanes == 3) THEN 0.000000229300 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.13 AND [vc] &lt;= 0.14 AND lanes == 4) THEN 0.000000007472 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.14 AND [vc] &lt;= 0.15 AND lanes == 2) THEN 0.000002153000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.14 AND [vc] &lt;= 0.15 AND lanes == 3) THEN 0.000000312500 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.14 AND [vc] &lt;= 0.15 AND lanes == 4) THEN 0.000000010710 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.15 AND [vc] &lt;= 0.16 AND lanes == 2) THEN 0.000003160000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.15 AND [vc] &lt;= 0.16 AND lanes == 3) THEN 0.000000479000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.15 AND [vc] &lt;= 0.16 AND lanes == 4) THEN 0.000000017200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.16 AND [vc] &lt;= 0.17 AND lanes == 2) THEN 0.000004488000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.16 AND [vc] &lt;= 0.17 AND lanes == 3) THEN 0.000000787200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.16 AND [vc] &lt;= 0.17 AND lanes == 4) THEN 0.000000039960 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.17 AND [vc] &lt;= 0.18 AND lanes == 2) THEN 0.000005816000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.17 AND [vc] &lt;= 0.18 AND lanes == 3) THEN 0.000001095000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.17 AND [vc] &lt;= 0.18 AND lanes == 4) THEN 0.000000062720 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.18 AND [vc] &lt;= 0.19 AND lanes == 2) THEN 0.000007144000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.18 AND [vc] &lt;= 0.19 AND lanes == 3) THEN 0.000001404000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.18 AND [vc] &lt;= 0.19 AND lanes == 4) THEN 0.000000085480 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.19 AND [vc] &lt;= 0.20 AND lanes == 2) THEN 0.000008472000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.19 AND [vc] &lt;= 0.20 AND lanes == 3) THEN 0.000001712000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.19 AND [vc] &lt;= 0.20 AND lanes == 4) THEN 0.000000108200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.20 AND [vc] &lt;= 0.21 AND lanes == 2) THEN 0.000009800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.20 AND [vc] &lt;= 0.21 AND lanes == 3) THEN 0.000002020000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.20 AND [vc] &lt;= 0.21 AND lanes == 4) THEN 0.000000131000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.21 AND [vc] &lt;= 0.22 AND lanes == 2) THEN 0.000012560000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.21 AND [vc] &lt;= 0.22 AND lanes == 3) THEN 0.000002854000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.21 AND [vc] &lt;= 0.22 AND lanes == 4) THEN 0.000000230800 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.22 AND [vc] &lt;= 0.23 AND lanes == 2) THEN 0.000015320000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.22 AND [vc] &lt;= 0.23 AND lanes == 3) THEN 0.000003688000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.22 AND [vc] &lt;= 0.23 AND lanes == 4) THEN 0.000000330600 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.23 AND [vc] &lt;= 0.24 AND lanes == 2) THEN 0.000018080000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.23 AND [vc] &lt;= 0.24 AND lanes == 3) THEN 0.000004522000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.23 AND [vc] &lt;= 0.24 AND lanes == 4) THEN 0.000000430400 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.24 AND [vc] &lt;= 0.25 AND lanes == 2) THEN 0.000020840000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.24 AND [vc] &lt;= 0.25 AND lanes == 3) THEN 0.000005356000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.24 AND [vc] &lt;= 0.25 AND lanes == 4) THEN 0.000000530200 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.25 AND [vc] &lt;= 0.26 AND lanes == 2) THEN 0.000023600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.25 AND [vc] &lt;= 0.26 AND lanes == 3) THEN 0.000006190000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.25 AND [vc] &lt;= 0.26 AND lanes == 4) THEN 0.000000630000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.26 AND [vc] &lt;= 0.27 AND lanes == 2) THEN 0.000028520000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.26 AND [vc] &lt;= 0.27 AND lanes == 3) THEN 0.000008032000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.26 AND [vc] &lt;= 0.27 AND lanes == 4) THEN 0.000000960000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.27 AND [vc] &lt;= 0.28 AND lanes == 2) THEN 0.000033440000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.27 AND [vc] &lt;= 0.28 AND lanes == 3) THEN 0.000009874000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.27 AND [vc] &lt;= 0.28 AND lanes == 4) THEN 0.000001290000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.28 AND [vc] &lt;= 0.29 AND lanes == 2) THEN 0.000038360000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.28 AND [vc] &lt;= 0.29 AND lanes == 3) THEN 0.000011720000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.28 AND [vc] &lt;= 0.29 AND lanes == 4) THEN 0.000001620000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.29 AND [vc] &lt;= 0.30 AND lanes == 2) THEN 0.000043280000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.29 AND [vc] &lt;= 0.30 AND lanes == 3) THEN 0.000013560000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.29 AND [vc] &lt;= 0.30 AND lanes == 4) THEN 0.000001950000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.30 AND [vc] &lt;= 0.31 AND lanes == 2) THEN 0.000048200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.30 AND [vc] &lt;= 0.31 AND lanes == 3) THEN 0.000015400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.30 AND [vc] &lt;= 0.31 AND lanes == 4) THEN 0.000002280000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.31 AND [vc] &lt;= 0.32 AND lanes == 2) THEN 0.000056240000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.31 AND [vc] &lt;= 0.32 AND lanes == 3) THEN 0.000019000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.31 AND [vc] &lt;= 0.32 AND lanes == 4) THEN 0.000003174000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.32 AND [vc] &lt;= 0.33 AND lanes == 2) THEN 0.000064280000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.32 AND [vc] &lt;= 0.33 AND lanes == 3) THEN 0.000022600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.32 AND [vc] &lt;= 0.33 AND lanes == 4) THEN 0.000004068000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.33 AND [vc] &lt;= 0.34 AND lanes == 2) THEN 0.000072320000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.33 AND [vc] &lt;= 0.34 AND lanes == 3) THEN 0.000026200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.33 AND [vc] &lt;= 0.34 AND lanes == 4) THEN 0.000004962000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.34 AND [vc] &lt;= 0.35 AND lanes == 2) THEN 0.000080360000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.34 AND [vc] &lt;= 0.35 AND lanes == 3) THEN 0.000029800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.34 AND [vc] &lt;= 0.35 AND lanes == 4) THEN 0.000005856000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.35 AND [vc] &lt;= 0.36 AND lanes == 2) THEN 0.000088400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.35 AND [vc] &lt;= 0.36 AND lanes == 3) THEN 0.000033400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.35 AND [vc] &lt;= 0.36 AND lanes == 4) THEN 0.000006750000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.36 AND [vc] &lt;= 0.37 AND lanes == 2) THEN 0.000100500000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.36 AND [vc] &lt;= 0.37 AND lanes == 3) THEN 0.000039760000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.36 AND [vc] &lt;= 0.37 AND lanes == 4) THEN 0.000008860000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.37 AND [vc] &lt;= 0.38 AND lanes == 2) THEN 0.000112600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.37 AND [vc] &lt;= 0.38 AND lanes == 3) THEN 0.000046120000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.37 AND [vc] &lt;= 0.38 AND lanes == 4) THEN 0.000010970000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.38 AND [vc] &lt;= 0.39 AND lanes == 2) THEN 0.000124800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.38 AND [vc] &lt;= 0.39 AND lanes == 3) THEN 0.000052480000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.38 AND [vc] &lt;= 0.39 AND lanes == 4) THEN 0.000013080000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.39 AND [vc] &lt;= 0.40 AND lanes == 2) THEN 0.000136900000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.39 AND [vc] &lt;= 0.40 AND lanes == 3) THEN 0.000058840000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.39 AND [vc] &lt;= 0.40 AND lanes == 4) THEN 0.000015190000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.40 AND [vc] &lt;= 0.41 AND lanes == 2) THEN 0.000149000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.40 AND [vc] &lt;= 0.41 AND lanes == 3) THEN 0.000065200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.40 AND [vc] &lt;= 0.41 AND lanes == 4) THEN 0.000017300000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.41 AND [vc] &lt;= 0.42 AND lanes == 2) THEN 0.000166600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.41 AND [vc] &lt;= 0.42 AND lanes == 3) THEN 0.000075760000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.41 AND [vc] &lt;= 0.42 AND lanes == 4) THEN 0.000021780000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.42 AND [vc] &lt;= 0.43 AND lanes == 2) THEN 0.000184200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.42 AND [vc] &lt;= 0.43 AND lanes == 3) THEN 0.000086320000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.42 AND [vc] &lt;= 0.43 AND lanes == 4) THEN 0.000026260000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.43 AND [vc] &lt;= 0.44 AND lanes == 2) THEN 0.000201800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.43 AND [vc] &lt;= 0.44 AND lanes == 3) THEN 0.000096880000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.43 AND [vc] &lt;= 0.44 AND lanes == 4) THEN 0.000030740000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.44 AND [vc] &lt;= 0.45 AND lanes == 2) THEN 0.000219400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.44 AND [vc] &lt;= 0.45 AND lanes == 3) THEN 0.000107400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.44 AND [vc] &lt;= 0.45 AND lanes == 4) THEN 0.000035220000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.45 AND [vc] &lt;= 0.46 AND lanes == 2) THEN 0.000237000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.45 AND [vc] &lt;= 0.46 AND lanes == 3) THEN 0.000118000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.45 AND [vc] &lt;= 0.46 AND lanes == 4) THEN 0.000039700000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.46 AND [vc] &lt;= 0.47 AND lanes == 2) THEN 0.000261400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.46 AND [vc] &lt;= 0.47 AND lanes == 3) THEN 0.000134200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.46 AND [vc] &lt;= 0.47 AND lanes == 4) THEN 0.000048460000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.47 AND [vc] &lt;= 0.48 AND lanes == 2) THEN 0.000285800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.47 AND [vc] &lt;= 0.48 AND lanes == 3) THEN 0.000150400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.47 AND [vc] &lt;= 0.48 AND lanes == 4) THEN 0.000057220000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.48 AND [vc] &lt;= 0.49 AND lanes == 2) THEN 0.000310200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.48 AND [vc] &lt;= 0.49 AND lanes == 3) THEN 0.000166600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.48 AND [vc] &lt;= 0.49 AND lanes == 4) THEN 0.000065980000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.49 AND [vc] &lt;= 0.50 AND lanes == 2) THEN 0.000334600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.49 AND [vc] &lt;= 0.50 AND lanes == 3) THEN 0.000182800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.49 AND [vc] &lt;= 0.50 AND lanes == 4) THEN 0.000074740000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.50 AND [vc] &lt;= 0.51 AND lanes == 2) THEN 0.000359000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.50 AND [vc] &lt;= 0.51 AND lanes == 3) THEN 0.000199000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.50 AND [vc] &lt;= 0.51 AND lanes == 4) THEN 0.000083500000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.51 AND [vc] &lt;= 0.52 AND lanes == 2) THEN 0.000392000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.51 AND [vc] &lt;= 0.52 AND lanes == 3) THEN 0.000223600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.51 AND [vc] &lt;= 0.52 AND lanes == 4) THEN 0.000099400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.52 AND [vc] &lt;= 0.53 AND lanes == 2) THEN 0.000425000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.52 AND [vc] &lt;= 0.53 AND lanes == 3) THEN 0.000248200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.52 AND [vc] &lt;= 0.53 AND lanes == 4) THEN 0.000115300000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.53 AND [vc] &lt;= 0.54 AND lanes == 2) THEN 0.000458000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.53 AND [vc] &lt;= 0.54 AND lanes == 3) THEN 0.000272800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.53 AND [vc] &lt;= 0.54 AND lanes == 4) THEN 0.000131200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.54 AND [vc] &lt;= 0.55 AND lanes == 2) THEN 0.000491000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.54 AND [vc] &lt;= 0.55 AND lanes == 3) THEN 0.000297400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.54 AND [vc] &lt;= 0.55 AND lanes == 4) THEN 0.000147100000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.55 AND [vc] &lt;= 0.56 AND lanes == 2) THEN 0.000524000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.55 AND [vc] &lt;= 0.56 AND lanes == 3) THEN 0.000322000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.55 AND [vc] &lt;= 0.56 AND lanes == 4) THEN 0.000163000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.56 AND [vc] &lt;= 0.57 AND lanes == 2) THEN 0.000568200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.56 AND [vc] &lt;= 0.57 AND lanes == 3) THEN 0.000357400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.56 AND [vc] &lt;= 0.57 AND lanes == 4) THEN 0.000190800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.57 AND [vc] &lt;= 0.58 AND lanes == 2) THEN 0.000612400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.57 AND [vc] &lt;= 0.58 AND lanes == 3) THEN 0.000392800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.57 AND [vc] &lt;= 0.58 AND lanes == 4) THEN 0.000218600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.58 AND [vc] &lt;= 0.59 AND lanes == 2) THEN 0.000656600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.58 AND [vc] &lt;= 0.59 AND lanes == 3) THEN 0.000428200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.58 AND [vc] &lt;= 0.59 AND lanes == 4) THEN 0.000246400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.59 AND [vc] &lt;= 0.60 AND lanes == 2) THEN 0.000700800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.59 AND [vc] &lt;= 0.60 AND lanes == 3) THEN 0.000463600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.59 AND [vc] &lt;= 0.60 AND lanes == 4) THEN 0.000274200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.60 AND [vc] &lt;= 0.61 AND lanes == 2) THEN 0.000745000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.60 AND [vc] &lt;= 0.61 AND lanes == 3) THEN 0.000499000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.60 AND [vc] &lt;= 0.61 AND lanes == 4) THEN 0.000302000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.61 AND [vc] &lt;= 0.62 AND lanes == 2) THEN 0.000806400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.61 AND [vc] &lt;= 0.62 AND lanes == 3) THEN 0.000550600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.61 AND [vc] &lt;= 0.62 AND lanes == 4) THEN 0.000347800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.62 AND [vc] &lt;= 0.63 AND lanes == 2) THEN 0.000867800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.62 AND [vc] &lt;= 0.63 AND lanes == 3) THEN 0.000602200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.62 AND [vc] &lt;= 0.63 AND lanes == 4) THEN 0.000393600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.63 AND [vc] &lt;= 0.64 AND lanes == 2) THEN 0.000929200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.63 AND [vc] &lt;= 0.64 AND lanes == 3) THEN 0.000653800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.63 AND [vc] &lt;= 0.64 AND lanes == 4) THEN 0.000439400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.64 AND [vc] &lt;= 0.65 AND lanes == 2) THEN 0.000990600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.64 AND [vc] &lt;= 0.65 AND lanes == 3) THEN 0.000705400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.64 AND [vc] &lt;= 0.65 AND lanes == 4) THEN 0.000485200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.65 AND [vc] &lt;= 0.66 AND lanes == 2) THEN 0.001052000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.65 AND [vc] &lt;= 0.66 AND lanes == 3) THEN 0.000757000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.65 AND [vc] &lt;= 0.66 AND lanes == 4) THEN 0.000531000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.66 AND [vc] &lt;= 0.67 AND lanes == 2) THEN 0.001148000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.66 AND [vc] &lt;= 0.67 AND lanes == 3) THEN 0.000836000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.66 AND [vc] &lt;= 0.67 AND lanes == 4) THEN 0.000605200000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.67 AND [vc] &lt;= 0.68 AND lanes == 2) THEN 0.001243000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.67 AND [vc] &lt;= 0.68 AND lanes == 3) THEN 0.000915000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.67 AND [vc] &lt;= 0.68 AND lanes == 4) THEN 0.000679400000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.68 AND [vc] &lt;= 0.69 AND lanes == 2) THEN 0.001339000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.68 AND [vc] &lt;= 0.69 AND lanes == 3) THEN 0.000994000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.68 AND [vc] &lt;= 0.69 AND lanes == 4) THEN 0.000753600000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.69 AND [vc] &lt;= 0.70 AND lanes == 2) THEN 0.001434000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.69 AND [vc] &lt;= 0.70 AND lanes == 3) THEN 0.001073000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.69 AND [vc] &lt;= 0.70 AND lanes == 4) THEN 0.000827800000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.70 AND [vc] &lt;= 0.71 AND lanes == 2) THEN 0.001530000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.70 AND [vc] &lt;= 0.71 AND lanes == 3) THEN 0.001152000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.70 AND [vc] &lt;= 0.71 AND lanes == 4) THEN 0.000902000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.71 AND [vc] &lt;= 0.72 AND lanes == 2) THEN 0.001710000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.71 AND [vc] &lt;= 0.72 AND lanes == 3) THEN 0.001296000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.71 AND [vc] &lt;= 0.72 AND lanes == 4) THEN 0.001025000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.72 AND [vc] &lt;= 0.73 AND lanes == 2) THEN 0.001890000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.72 AND [vc] &lt;= 0.73 AND lanes == 3) THEN 0.001440000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.72 AND [vc] &lt;= 0.73 AND lanes == 4) THEN 0.001149000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.73 AND [vc] &lt;= 0.74 AND lanes == 2) THEN 0.002071000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.73 AND [vc] &lt;= 0.74 AND lanes == 3) THEN 0.001585000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.73 AND [vc] &lt;= 0.74 AND lanes == 4) THEN 0.001272000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.74 AND [vc] &lt;= 0.75 AND lanes == 2) THEN 0.002251000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.74 AND [vc] &lt;= 0.75 AND lanes == 3) THEN 0.001729000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.74 AND [vc] &lt;= 0.75 AND lanes == 4) THEN 0.001396000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.75 AND [vc] &lt;= 0.76 AND lanes == 2) THEN 0.002431000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.75 AND [vc] &lt;= 0.76 AND lanes == 3) THEN 0.001873000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.75 AND [vc] &lt;= 0.76 AND lanes == 4) THEN 0.001519000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.76 AND [vc] &lt;= 0.77 AND lanes == 2) THEN 0.002844000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.76 AND [vc] &lt;= 0.77 AND lanes == 3) THEN 0.002216000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.76 AND [vc] &lt;= 0.77 AND lanes == 4) THEN 0.001775000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.77 AND [vc] &lt;= 0.78 AND lanes == 2) THEN 0.003258000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.77 AND [vc] &lt;= 0.78 AND lanes == 3) THEN 0.002560000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.77 AND [vc] &lt;= 0.78 AND lanes == 4) THEN 0.002031000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.78 AND [vc] &lt;= 0.79 AND lanes == 2) THEN 0.003671000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.78 AND [vc] &lt;= 0.79 AND lanes == 3) THEN 0.002903000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.78 AND [vc] &lt;= 0.79 AND lanes == 4) THEN 0.002286000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.79 AND [vc] &lt;= 0.80 AND lanes == 2) THEN 0.004085000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.79 AND [vc] &lt;= 0.80 AND lanes == 3) THEN 0.003247000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.79 AND [vc] &lt;= 0.80 AND lanes == 4) THEN 0.002542000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.80 AND [vc] &lt;= 0.81 AND lanes == 2) THEN 0.004498000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.80 AND [vc] &lt;= 0.81 AND lanes == 3) THEN 0.003590000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.80 AND [vc] &lt;= 0.81 AND lanes == 4) THEN 0.002798000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.81 AND [vc] &lt;= 0.82 AND lanes == 2) THEN 0.005301000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.81 AND [vc] &lt;= 0.82 AND lanes == 3) THEN 0.004317000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.81 AND [vc] &lt;= 0.82 AND lanes == 4) THEN 0.003376000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.82 AND [vc] &lt;= 0.83 AND lanes == 2) THEN 0.006104000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.82 AND [vc] &lt;= 0.83 AND lanes == 3) THEN 0.005044000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.82 AND [vc] &lt;= 0.83 AND lanes == 4) THEN 0.003954000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.83 AND [vc] &lt;= 0.84 AND lanes == 2) THEN 0.006906000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.83 AND [vc] &lt;= 0.84 AND lanes == 3) THEN 0.005770000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.83 AND [vc] &lt;= 0.84 AND lanes == 4) THEN 0.004531000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.84 AND [vc] &lt;= 0.85 AND lanes == 2) THEN 0.007709000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.84 AND [vc] &lt;= 0.85 AND lanes == 3) THEN 0.006497000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.84 AND [vc] &lt;= 0.85 AND lanes == 4) THEN 0.005109000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.85 AND [vc] &lt;= 0.86 AND lanes == 2) THEN 0.008512000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.85 AND [vc] &lt;= 0.86 AND lanes == 3) THEN 0.007224000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.85 AND [vc] &lt;= 0.86 AND lanes == 4) THEN 0.005687000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.86 AND [vc] &lt;= 0.87 AND lanes == 2) THEN 0.009319000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.86 AND [vc] &lt;= 0.87 AND lanes == 3) THEN 0.007952000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.86 AND [vc] &lt;= 0.87 AND lanes == 4) THEN 0.006260000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.87 AND [vc] &lt;= 0.88 AND lanes == 2) THEN 0.010130000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.87 AND [vc] &lt;= 0.88 AND lanes == 3) THEN 0.008680000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.87 AND [vc] &lt;= 0.88 AND lanes == 4) THEN 0.006833000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.88 AND [vc] &lt;= 0.89 AND lanes == 2) THEN 0.010930000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.88 AND [vc] &lt;= 0.89 AND lanes == 3) THEN 0.009407000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.88 AND [vc] &lt;= 0.89 AND lanes == 4) THEN 0.007406000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.89 AND [vc] &lt;= 0.90 AND lanes == 2) THEN 0.011740000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.89 AND [vc] &lt;= 0.90 AND lanes == 3) THEN 0.010140000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.89 AND [vc] &lt;= 0.90 AND lanes == 4) THEN 0.007979000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.90 AND [vc] &lt;= 0.91 AND lanes == 2) THEN 0.012550000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.90 AND [vc] &lt;= 0.91 AND lanes == 3) THEN 0.010860000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.90 AND [vc] &lt;= 0.91 AND lanes == 4) THEN 0.008552000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.91 AND [vc] &lt;= 0.92 AND lanes == 2) THEN 0.013260000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.91 AND [vc] &lt;= 0.92 AND lanes == 3) THEN 0.011510000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.91 AND [vc] &lt;= 0.92 AND lanes == 4) THEN 0.009059000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.92 AND [vc] &lt;= 0.93 AND lanes == 2) THEN 0.013980000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.92 AND [vc] &lt;= 0.93 AND lanes == 3) THEN 0.012160000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.92 AND [vc] &lt;= 0.93 AND lanes == 4) THEN 0.009566000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.93 AND [vc] &lt;= 0.94 AND lanes == 2) THEN 0.014690000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.93 AND [vc] &lt;= 0.94 AND lanes == 3) THEN 0.012810000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.93 AND [vc] &lt;= 0.94 AND lanes == 4) THEN 0.010070000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.94 AND [vc] &lt;= 0.95 AND lanes == 2) THEN 0.015410000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.94 AND [vc] &lt;= 0.95 AND lanes == 3) THEN 0.013460000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.94 AND [vc] &lt;= 0.95 AND lanes == 4) THEN 0.010580000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.95 AND [vc] &lt;= 0.96 AND lanes == 2) THEN 0.016120000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.95 AND [vc] &lt;= 0.96 AND lanes == 3) THEN 0.014110000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.95 AND [vc] &lt;= 0.96 AND lanes == 4) THEN 0.011090000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.96 AND [vc] &lt;= 0.97 AND lanes == 2) THEN 0.016870000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.96 AND [vc] &lt;= 0.97 AND lanes == 3) THEN 0.014780000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.96 AND [vc] &lt;= 0.97 AND lanes == 4) THEN 0.011600000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.97 AND [vc] &lt;= 0.98 AND lanes == 2) THEN 0.017620000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.97 AND [vc] &lt;= 0.98 AND lanes == 3) THEN 0.015440000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.97 AND [vc] &lt;= 0.98 AND lanes == 4) THEN 0.012120000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.98 AND [vc] &lt;= 0.99 AND lanes == 2) THEN 0.018360000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.98 AND [vc] &lt;= 0.99 AND lanes == 3) THEN 0.016110000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.98 AND [vc] &lt;= 0.99 AND lanes == 4) THEN 0.012640000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.99 AND [vc] &lt;= 1.00 AND lanes == 2) THEN 0.019110000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.99 AND [vc] &lt;= 1.00 AND lanes == 3) THEN 0.016770000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 0.99 AND [vc] &lt;= 1.00 AND lanes == 4) THEN 0.013160000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 1.00 AND lanes == 2) THEN 0.019860000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 1.00 AND lanes == 3) THEN 0.017440000000 * [Calculation_4420828151331817]&#13;&#10;ELSEIF (([ft] &lt; 3 OR [ft] == 8) AND [vc] &gt; 1.00 AND lanes == 4) THEN 0.013680000000 * [Calculation_4420828151331817]&#13;&#10;ELSE 0.0&#13;&#10;END' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column datatype='real' name='[lanes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_429812310551937025]' derivation='Sum' name='[sum:Calculation_429812310551937025:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='real' name='[vc]' role='dimension' type='ordinal' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]'>
            <groupfilter function='member' level='[none:Calculation_7570828154404546:nk]' member='&quot;Roadway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='39' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='126' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='252' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='60' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='32' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_429812310551937025:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</rows>
        <cols>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Supply'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Roadway Lane Miles by County: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Roadway Lane Miles' datatype='real' name='[Calculation_4890829192148691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[distance]*[lanes]' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='County' datatype='real' name='[gl]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column datatype='real' name='[lanes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[gl]' derivation='None' name='[none:gl:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[pcto:sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4890829192148691]' derivation='Sum' name='[sum:Calculation_4890829192148691:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4890829192148691:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gl:ok]' />
              <groupfilter function='member' level='[none:gl:ok]' member='10.0' />
            </groupfilter>
          </filter>
          <sort class='natural' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' direction='ASC' />
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]'>
            <groupfilter function='member' level='[none:timeperiod:nk]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</column>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='47' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='92' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4890829192148691:qk]' value='p0.0%' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]' value='132' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' value='40' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='80' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.VHT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Hours Traveled - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Average Travel Speed' datatype='real' name='[Calculation_4000829170355183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[vol_tot])/Sum([ctim]*[vol_tot]/60)' scope-isolation='false' />
            </column>
            <column caption='VHT' datatype='real' name='[Calculation_5810829165448827]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ctim]*[vol_tot]/60' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5810829165448827]' derivation='Sum' name='[sum:Calculation_5810829165448827:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4000829170355183]' derivation='User' name='[usr:Calculation_4000829170355183:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_5810829165448827:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_5810829165448827:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation_4000829170355183:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Road&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='82' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='59' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation_4000829170355183:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='192' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='32' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='112' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.VMT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='VMT Per Hour' datatype='real' name='[Calculation_4780911171654236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4420828151331817]/[Calculation_7220911171450081]' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Time Period Duration' datatype='integer' name='[Calculation_7220911171450081]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [timeperiod]=&apos;EA&apos; THEN&#13;&#10;  3&#13;&#10;ELSEIF [timeperiod]=&apos;AM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;MD&apos; THEN&#13;&#10;  5&#13;&#10;ELSEIF [timeperiod]=&apos;PM&apos; THEN&#13;&#10;  4&#13;&#10;ELSEIF [timeperiod]=&apos;EV&apos; THEN&#13;&#10;  8&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Facility Type' datatype='string' name='[Calculation_7550828155717668]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [ft]==1 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==2 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==3 THEN&#13;&#10;  &apos;Expressways&apos;&#13;&#10;Elseif [ft]==4 THEN&#13;&#10;  &apos;Collectors&apos;&#13;&#10;Elseif [ft]==5 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;Elseif [ft]==7 THEN&#13;&#10;  &apos;Major Arterials&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Freeways&apos;&#13;&#10;Elseif [ft]==8 THEN&#13;&#10;  &apos;Other&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Link Type' datatype='string' name='[Calculation_7570828154404546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [a]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [b]&lt;=[Parameters].[Parameter 2] THEN&#13;&#10;  &apos;Centroid&apos;&#13;&#10;Elseif [ft]==6 THEN&#13;&#10;  &apos;Dummy&apos;&#13;&#10;Else&#13;&#10;  &apos;Roadway&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Dummy&quot;' value='Toll Plazas' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[a]' role='measure' type='quantitative' />
            <column datatype='real' name='[b]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[ft]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_7550828155717668]' derivation='None' name='[none:Calculation_7550828155717668:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570828154404546]' derivation='None' name='[none:Calculation_7570828154404546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[pcto:sum:Calculation_4420828151331817:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4780911171654236]' derivation='Sum' name='[sum:Calculation_4780911171654236:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Zone Number' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1454'>
              <calculation class='tableau' formula='1454' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4780911171654236:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Freeways&quot;</bucket>
              <bucket>&quot;Expressways&quot;</bucket>
              <bucket>&quot;Major Arterials&quot;</bucket>
              <bucket>&quot;Collectors&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Centroid&quot;</bucket>
              <bucket>&quot;Dummy&quot;</bucket>
              <bucket>&quot;Roadway&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='29' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_4420828151331817:qk:2]' value='p0.0%' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='144' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='180' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]' value='52' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
        <subtotals>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.vc Ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle &apos;Congestion&apos; by Time of Delay: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Congestion (volume over capacity)' datatype='string' name='[Calculation_5010829191108792]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [vc] &lt;= 0.00001 THEN&#13;&#10;  &apos;0 (dummy)&apos;&#13;&#10;ELSEIF [vc] &lt;= 0.75 THEN&#13;&#10;  &apos;Light&#13;&#10;(v/c &lt; 0.75)&apos;&#13;&#10;ELSEIF [vc] &lt;= 1.0 THEN&#13;&#10;  &apos;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Heavy&#13;&#10;(v/c &gt; 1.00)&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT (Congestion non-dummy)' datatype='real' name='[Calculation_7680829191605709]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_5010829191108792]==&apos;0 (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5010829191108792]' derivation='None' name='[none:Calculation_5010829191108792:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7680829191605709]' derivation='Sum' name='[pcto:sum:Calculation_7680829191605709:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='real' name='[vc]' role='dimension' type='ordinal' />
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;0 (dummy)&quot;</bucket>
              <bucket>&quot;Light&#13;&#10;(v/c &lt; 0.75)&quot;</bucket>
              <bucket>&quot;Moderate&#13;&#10;(0.75 &lt; v/c &lt; 1.00)&quot;</bucket>
              <bucket>&quot;Heavy&#13;&#10;(v/c &gt; 1.00)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='51' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]' value='158' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_7680829191605709:qk]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='124' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='216' />
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]' value='80' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.VMT by Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Vehicle Miles Traveled by Speed Category - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avgload5period Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde'>
            <column caption='Share of Vehicle Miles Traveled' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)) / TOTAL(SUM(iif([ctim]&lt;0.1,[Calculation_4420828151331817],0)))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='VMT (Speed Bin non-dummy)' datatype='real' name='[Calculation_1810829190347636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_6500829184447940]==&apos;0 mph (dummy)&apos; THEN&#13;&#10;  0&#13;&#10;ELSE&#13;&#10;  [Calculation_4420828151331817]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='VMT' datatype='real' name='[Calculation_4420828151331817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[vol_tot]*[distance]' scope-isolation='false' />
            </column>
            <column caption='Speed Bin' datatype='string' name='[Calculation_6500829184447940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [cspd] &lt;= 0.1 THEN&#13;&#10;  &apos;0 mph (dummy)&apos;&#13;&#10;ELSEIF [cspd] &lt;= 7.5 THEN&#13;&#10;  &apos;1.0 to 7.5 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 15 THEN&#13;&#10;  &apos;7.5 to 15 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 30 THEN&#13;&#10;  &apos;15 to 30 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 45 THEN&#13;&#10;  &apos;30 to 45 mph&apos;&#13;&#10;ELSEIF [cspd] &lt;= 60 THEN&#13;&#10;  &apos;45 to 60 mph&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Faster than 60 mph&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[cspd]' role='measure' type='quantitative' />
            <column datatype='real' name='[ctim]' role='measure' type='quantitative' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6500829184447940]' derivation='None' name='[none:Calculation_6500829184447940:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeperiod]' derivation='None' name='[none:timeperiod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1810829190347636]' derivation='Sum' name='[pcto:sum:Calculation_1810829190347636:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4420828151331817]' derivation='Sum' name='[sum:Calculation_4420828151331817:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[timeperiod]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak (6 am to 10 am)' />
                <alias key='&quot;EA&quot;' value='Early AM (3 am to 6 am)' />
                <alias key='&quot;EV&quot;' value='Evening (7 pm to 3 am)' />
                <alias key='&quot;MD&quot;' value='Midday (10 am to 3 pm)' />
                <alias key='&quot;PM&quot;' value='PM Peak (3 pm to 7 pm)' />
              </aliases>
            </column>
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column datatype='real' name='[vol_tot]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[sum:Calculation_4420828151331817:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\2010_04_ZZZ\\summary\\avgload5period.tde].[usr:Calculation1:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EA&quot;</bucket>
              <bucket>&quot;AM&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='46' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[usr:Calculation1:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[pcto:sum:Calculation_1810829190347636:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_6500829184447940:nk]' value='111' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]' value='116' />
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]' value='208' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[sum:Calculation_4420828151331817:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names] / [C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_6500829184447940:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' name='Indiv.Table.Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='89'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2010&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Indiv.Table.Non-recurring'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='89'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, 3 - Big Cities&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Indiv.Table.vc Ratio'>
      <cards>
        <edge name='left'>
          <strip size='195'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='114'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2035, 4 - Draft Preferred&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_5010829191108792:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Indiv.Table.Supply'>
      <cards>
        <edge name='left'>
          <strip size='185'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='131'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[Facility Type (group)]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Across.Table.Supply' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='85'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:gl:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Across.Chart.Supply' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='73'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Indiv.Table.VMT'>
      <cards>
        <edge name='left'>
          <strip size='202'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='110'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2010&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:ft:ok]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
            <field>[textscan.41879.461103888891].[none:Calculation_4320828142204452:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Indiv.Table.VHT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='86'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7570828154404546:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Across.Table.VMT' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='76'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Across.Chart.VMT' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Across.Table.Fwy Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='98'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Across.Chart.Fwy Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='87'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[none:Calculation_7550828155717668:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Across.Table.Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='98'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_7550828155717668:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Across.Chart.Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='87'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy)].[none:Calculation_7550828155717668:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Table.VMT by Speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='95'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Calculation_6500829184447940:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:timeperiod:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Across.Table.VMT by Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='109'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Across.Chart.VMT by Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='73'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:Calculation_6500829184447940:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde (copy 3)].[none:timeperiod:nk]</field>
            <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\avgload5period.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Indiv.Table.Delay' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Non-recurring' width='192'>
      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
      udXRrdoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.vc Ratio' width='192'>
      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
      EQWZ5dUNVODM5UcYHOhhqMeDanby6QfOcemBh8EWorZ1neDYRcwGAfkAf/OapTR7mfKbj7e2
      tu77Xk2Vee6XPyeaKuIK9jMY8VJKpUkmtnnyRz9mZWWVUqN738/L7SqbO3FefOYpNmMZUGV+
      /Yt/5Mc//WeSsR2e/NFPKNTunxUjvrNF520dpt4DHBIH2QN0mjXSxTpDA700C3tcX8pxeTJM
      raPRE3CTyRVxOp0YTBaUbhtBAE0Du8WIJppp1Sv8w5P/yL/98/+NZ//lZ3zr975Np906kF/Z
      p3/69zj7h/H6wyTTZeRWEbleoGUK8Iff/BLp2BY3bs1x6ZHP4pVTPLdSolHI8Gf/6rtIzSJ/
      /7MXGHQ22W15+Poj47yyXueLnzp7T22zLz1F1+pnJ1GhUy/xb/70e0jNIv/jZ88z5JbYrtn4
      4+98HaFb48UXr2MLDvLolWmefeEmgxEHsWQRmygTzTb5wz/6Dt1KTr8I/jhgsbsYtu+vBHYE
      hvjyZ4cACL/++pjrdy8cPe/4vNvl4n//i/8IwLe//Z0D1VZqyDxyboL//H/9Z/7gB/8L6XiT
      TFnjq185hwZkUwk6qoDdZkWraOwvLdv/zZ1/9TpXH32c4sYtJh0ym8U27VLpvvsqVyr0BAfR
      +G2xv4XXbnD5kceobt9l0iaxsJViwiuTL9c4M+zAYDTTyEWZKzrx+bxsRBN881tfBU2jXMwi
      /uVf/uVfHmiL6ACgKAoGgwGD4WSOMiVJwmT6oAt030kzF8UQOkdP0MP0YAh3aBi32CBVlRkZ
      6CHSP8y5M5MIgDsQIbO5xKWHH2NvdxuHzc3w2Ageq8BGssJMj5OmJcBA2HNPbWqrQsUUwdZO
      c/bKw8R393A4nQwNj+KxGdhIVPj0Q5dweXxcOH8Ol92M2Wwh4HXijQwRDoYY7vEwv55gcnwE
      XzCiD4EOi0/KmuD3Quk2qXUEvC7bR95WrVLE7PChdO89PFMViXK1hd/n/sj7eoOTeXR0PjaI
      Zjte88Fsy+XZXzPcvM91sEE04fd99F7rLds80K3p6HzM0A2gc6rRDaBzqtENoHOqMcJ+1q5m
      s3ncWj5RyLJ8om+DdjqdY4sJei+OUpsR9rN2ORyOI9nhaeGk3wYVBOHEFso+Sm0n8+dJR+eI
      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
      bY2tptusAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Supply' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Supply' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Supply' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.VMT' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.VHT' width='192'>
      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
      CRrl8jcUx5G333jPgwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Table.VMT' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.VMT' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Fwy Speed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Fwy Speed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Speed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Speed' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table.VMT by Speed' width='192'>
      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
      oAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Across.Table.VMT by Speed' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3dV5Ak+WHn92+a8qa7utp7P93jvdtZT2JBGLqjCYjHICWdTnEh6YV6UcQ9
      CHo7nU4XMqELMXgXwTjqSFgCWKwf73rae+9tdXnvszJTD72Y3cUOdgY47E4vKj9PEz1Zaary
      V/+sysxfCbqu6xgMZUp83itgMDxPRgAMZc0IgKGsGQEwlDUjAIayZgTAUNaMABjKmhEAQ1kz
      AmAoa0YADGXNCIChrBkBMJQ1IwCGsmYEwFDWjAAYypoRAENZMwJgKGtGAAxfDF0nEdzi7773
      5uM/TT64RzBb+NSkmqpw+82/Z2EvwdbMAP/m3/4f3BicfYaFqLz5/b8nmil95lSaWuLOW99h
      djuO/Mtuh8Hwq9A0lVs3brIV+HCHLyT5yZs/ojct4EquseZP85Xf/1P6W2vYnB9jdGqOl4++
      we78JHZvM0e6WgFYHPqA66OrCJIFWUlw+rU/YuHOd8kLFtpOvIBvc5nv/se/oar1GH/y9ZcQ
      nrAuWwvjjE7N8kLP68YIYPhiiJLMN//gj3GaPvyDxU1/ZzcX+jzMRa38V3/0Ch/cGACg88Rl
      Lh3vPJisooWXzjbxve+/A0A2GaP7/EsoiTCvXLvI0so6wXieP/vzf8rUyH0EycI3vvE11hbm
      +UXjQMfxi1w50XWwXp/nRhsMn8VhFxib28eS2uTvfvAB/cd6PzVNIRXkxq1BmjvbH//NYrFi
      tZqxWMwIAmiZMP/wD9+huqkHQRQxmUyfms8vIhitEIYviq5r5PMFbDYbAKVigaIKZglyxRJO
      hx1BODhoUQp5kM1IaGSyOewOJ5IoUCoW0EQZVSliNskoqs7/+a//Ff/NX/0VbqsdpZjHYrGQ
      zxex2W1PPAR6PH/JbATA8OWnKAqyyfQLd/bPYgTAUNaMzwCGsmYEwFDWjAAYypoRAENZMwJg
      KGtGAAxlzQiAoaw9vhiuWCxSKHz6yjyD4TeZcSLMUNaMQyBDWTMCYChrRgAMZc0IgKGsGQEw
      lDUjAIayJn3729/+9vNeCU3J8eDRGM0tTUwNDeCsacIif3Y2NxammFtaIqfbCW/OMbuwhOyq
      xmHSePhogtbmeu7fvkEolsJbU48sQiq4Szgv4rabP7Hshw8esLa9T1NzM5IooOs6w3du4qxv
      ZGtzB6/X84mbLcYfvE9cr6Sm0g7A2uwEmr0Ku1lmYmgIs81EIZthL5pFyWVxOh2fuS2p4AY7
      cahy21idG+O967dxVDcT3VlifmkVi7sap9XE/vo8Y7MLpAoimcA6U3OLqCY3VW47u4ujDM1t
      EQkFqKiuw/yU5w8gvr9JWDHhtpmJ+zcYnlxka3uXusZmZPFgiyM7i4SLDiocn77NcGlujsra
      2i/1u+ihaIUQTTY8pgz3HzygqDvoTu1za2ANR2U1jU6dTX8ES2Uj+cAyntZjHO9tx+lt4Epn
      F+/dfoAkWPjtq0e5PrlCzF5gdWuXKxeOsLsX4lRzDyZJBwTGZxfobqtnRekgvztH55lLFIOb
      yJ5OvLlNduNZOr0OojuLDIzN0Xn1t4j71ki2tFJhlQDQ1QxboTxidJSe+msMPBpmbXmFFyu8
      zIysMzM1z1fdEpFgjM28jV6vi+j+BsF4hubeUyyP3MRkc3Hs/BU25yZJ5RS6WyuJC1YA5hZX
      6eg+gtOsM7G1R19nI1u+EHWVbUwtb/PGV17n3fdvIAoSb7x6kXfvz9PVdJVUxE9r/xscqTWR
      ie1za2AJm7uajmoTi5t+PHVtnOxrR8lEGRiZQVEF7EqAdNUJmi/2MT81jbvrDC1uM4VsguHx
      cTDZaXGXSNsruDPzCEx2TvY2Mj6zQktHN/fv3KKqrYcap/kzXt3D7dCE99j5a2wuLHH1yinG
      BgbQzWZW5ucJRKOUSgUWF1fIFqC/px0BqK6pZn5qjJ7+4wiChCiK5PMFTpy7gsduQpQsvP47
      X8eW2WNpPwkoxNNFGpqbWJgYYcMXwiGBppSQTTISKvmiClqRe8OL9LZVk88XqHJZCcYzj9dz
      c3KIlG4hsLvG0sIcloY+TvS2szY9Tdupi/S2N5KJh3FU1lBfV0M4vM/qTpyXXrrI7NgYmmzj
      dEc1C2vbxOIp4nvb7Ceyj+f/2qsvs7YwzcLqFiZJJp7MoqkH/QYCICCgKAUERARRPLi39UPz
      kyOMTi8yNzpAXjezszrHrfuDSCYrC3MzoEMhkyCVybO7uYjFVUddXS0Al1/7CqXQJu+88x4L
      U2NsR4vE9rbYT2bZWxxnL6mR8q9y+8E4x6+8ypGuNhoaW6j4Eu/88IQRYGn0JjtaM6+drObf
      /8NNLJlVqk9/gx5riO/dWeH3XzvBe9fvUtRNvPTV3+fa6Z5fy4oIkoWammrMJom6+nrSDi9y
      q04kGKC9p4M13wai286H90wzfOMnhE2NXHI52CwlWFheo66+/vH8tGKGlZVN7LpGnd0MSJhl
      Ad3sQYjNY+v6bQDslVUEl1eJq3lO9QlkCyXOnD3F+MM7KEqJXKFIhaSRL5SwWiRmthP8F3/w
      +yR25rg3uY3dWSK156Pj6FF2VlfY8QWpq2tFlGQy8RQmTJiFDCtLy7i9dRRSPgCK2Tgl2Y3d
      HEItaY/Xe3Z2ntq6OnLZLFZJxu1ykMyWSKfTuMywuLqG1VWLuRhlcWmVypqPtvno6QscqTWx
      Ph1FKVXiMoGkpqjwViGIB4cwiXAAR3UDsf01BFEgnUoBVcxNTVBR18YJVDSbh2o1R4XsoMKm
      IchVaDkdjyhjt8usLy2Qr6tB0BWyeQWz9dlbGJ6NzvLCHK3dR1mcGKCIk9MXT6Ono/jiCh3N
      dYDO2sIMkZzA2ZNHmJucRLNUcOr4EbKxfeIlO821FU9d0qcuhUj5l/l/fzjI712oYyTsxv/o
      R2jtJ+iRYzxczvI//y//ExsDP2ZF7eQPXz35a93sdCqFw+VC0DWCgQD2iipMepFoKofNakOW
      BBxOJwIQDfnJFkpYHW6cZoFoKkttbS2yKJBKpXA5nSRiYUqiFW+lC4DlqWGcrceplIuIVjdW
      kwi6TiwSQpWseJxmCpqE3WIim05hsloYejTKyb4mQkoFXY0VpFIZnC4naCrpTA5NyVNQwVPl
      IRUNUxJMuO1mRJOVZDKJ1WLBYhIIx9LU1taQy2awmiWKmkQ2GUWQDuo9JJMVm0WmmM+wvrlH
      Z3c3KDkiiczjx9ksMoFQlKrqOkQ1Tzieoqa2FpMkUsimwOzEIgvoukYkFMTiqMRhlQgGQ1R4
      a7GZZXStRCAQwmy14rDbSGcLeD0VaKpCMBjEZHPjrTh47lTRissmoYkWcqkommTF47ITCgZx
      V9VQyqUQrS7sll/vkXQisM5f/91P+Of/7V9y4737vPDyNeqq7Lz3479H9Z7jm6+eArXA0rqP
      1NY0lf2XkAQzwcWH1B+7ysh736Hm5Dd4+UzbU5f16WuBdIX/+3/730ES+Ppf/A+8+e/+DSav
      g3TJipgv8C/+x7/63ALwedO1EkUVLKZne8F0TaVY0pAlAQQRSTw0R4y/sXS1yO3b98nnklx+
      4WV2fCG02DaeYy/iZZeBqQxvvHoKADWf5sYH79F96Q3aPRLvX7/La1/9KomtMVYSNVx7hgB8
      ek8QTJw/1swPJ+K0VVlBEOlur2U77SG1ufxr3+ADOmMDdyiINpKpAifbHCQdffQ1OQFQMlFG
      Fvfoaq6ltq7uV6q/ABBEGcsvsQ8LooTFLP2KSzP8KtRSEYfdyvrqAv5QBNnqRLZIqBoIH38p
      SllmVvY419/G3J6PuUcLXHntDaySQPKX2EGeeDWopqqomo4sS5RKJURRQEdA1zRk2YSuldAQ
      kaVf1zuixvs/+i5UtnDm1Cm2Rt4mUnEMNbCBrhVobG1jYslHS42TGpdMoiCiyg7iW3NU1VRh
      rmwh7NvEU93AlcsXMEm/akQMh4V/b4equkb21hYomirp7WimVEwRipWwq1HCogd7IUIoC10N
      bqYW1pBNFo6dOIVcSpAsWqitcj51OYfjcmhdp6SqRPw7vHP9Huf76inVHGd3foxiMkzLictE
      YgmkQpKiovDVr32dd976CWaTjZeuHOPe2DZOMU00A69/5XUcxrv2b7RCPoMgWTGb/vNf50Nx
      HgBUBu/dQrK76eg5QpVHZG5vi7wCsigiSBL5ZBynw0qr187DB/epqOtAy0QRBBFZBMlkRSZD
      SdMAIwC/ySzWzz6x+Ms4HCOAwfCcGF9rGMqaEQBDWTMCYChrRgAMZc0IgKGsGQEwlDUjAIay
      9lxPhBmnIAzP23M/E2zUMRqeJ+MQyFDWjAAYypoRAENZMwJgKGtGAAxlzQiAoawZATCUNSMA
      hrJmBMBQ1owAGMrac2+HVlUVTcnx9jsf0Nbdxb3336W6rQvLUypXJgbvsbG1xX68yN7SJKtr
      q+REN5ZSjB+9+5Bjfe28+9M3SeUUqqrrkEXYX58nrtqo+Fg7tJKLc+PmXVZWN2hqbcckiei6
      yo/+7m+p6elnfmaOhob6x11EU/feZXYvzsrsFN7mLmymz6pgKXDv7gg2uwW7w/HMfUalQobv
      f//75HI5Ftf2aG9r/sRjM6FVhpditDZUEQ0HMVkdiL9g5rsLg9weWycdD+Hw1B604R16OpOj
      w1RUNzLx6A77wRTVjXWgZBmZmKe58aAOcnpkgO39AO6qWlZnx1nd2qfa4+TR4CCpnEp1ddVT
      n/Pnfi0QHLRDn+tv4h+//wO6TlwiszPPo504INHk0IgVVXKak3xgkY5TL3Ksp5WTF15AL6a4
      9XAcQTDzW5f7eHd0C1uLB7NUQi0kiCaK1Ok6cNAOvbi+R39bjrF4K7mtCc6+8hXy4T2q247j
      Tq+zG8/RW+tkc26MtG4ByYqcjxJOK9Q4D/ovlWIRTYJ8NkcxG+b9u1Pk81mOdDWxFc5TV1eP
      Ftsho4nYPLUoRYX5uTn0iQFkh5ecaqGCBEVBxl3fzaneFgAe3r/N+SsvH9TC6zru6kbOnTvD
      O+9cZ3TgDiVdoyjVEdoYpae7jVhI4/qdIC4ph1oskTHZKeRUmlw66XyR/YyJP/3mq2glhfYj
      JznVUUkutstbdxYxSQK97bWs7kURRAsOIYUmWGjtP0tL9dO7dD5v4Z1l7jwap6O3m/XtCGev
      9GJGZ2rkITPbeS6dPwWUWFvfovv0JdTQAhvhIjUVZiL7W4QTCl393mc6vDk0bwcN3SdxyDKn
      jraxuLiMzWZBzeXI66CVSoTCYewVtfT3tB60JOsqjwaGOXvx3Ecz0aG9swuTJCBZq/jWn/0x
      taY8y74ooJApaNR1HcW3OEyiIGCXHj/soxmoGR6OLSEpKUKROG6njXgm97E1lTh+5jzHO6pZ
      2w6ioZNJxJArahELaeKJJMsbm9gsVjKpBHBQNCZanJy/+AKFhI/VzW2sFiupxMH/B3bWWVvf
      YHxm8fEVsuH9LcYnZ7n6ymtIuoaqawT9ISqrm+hubWB+eoKapnbQVDTRwpnzF6GYYD+e44Wr
      l3FaPnrvW12YYnRqnp3leVSTHRmFqak5ZIsdtZilrr6BVCpFMpX+HF7ZX46m5JhY3KW/qxGl
      JPHCq68gRleYmFskRgVVNhlN10HTOHv1FZrNST54NI+9qh6HmiSJmxdfusrazAiZovrU5R2a
      AICI0+VCFAT6+o5QLCjINivFbBZJltE1DbP5o0OXWz/5e2KalWgkhVPKcXdwgo6Ogy5Is9mM
      mk9w6+YddhIqrbUVgAmHRaCEFZcaoabrBAAubyPBjWlWIjnqLCWiWZF/+hd/Tm9XJ7XeChLp
      HA6xQDR5UENuMkvMT46yHS1QX2GhpItIQDabxV7hQSnmOdLdQaFYxO50YzKbMJlMmM1mBAHM
      Vis9ne0Ui0WcbjcAdS2dfPObv8elU/0IggCCQGNbN+fPnaXKZSOTzSHpIsg6ZrMFQZR44fWv
      EVybQhNNmMwmJEHAbLbS7HXyaHiEfOngpRVlE33HT3P+1FFaeo5i0vJogomTp46jKfmDEJRU
      qqpcZNMfD/rzoQNNDTWEQyFisQjBcJR8CWx2F1V2kXAkQi5fpKQUCQZDZHIKbd09yGqegqJR
      zCWJJxII0sFz8jTPtRdI1/Uv9HLowOYiRWfzMw/zWinP5OwKfW21JHQHDc9Qtfdc6Tqzk8Ok
      skUqGro42tn4vNfoVxaPRXG6PUQDOyiSk6a6KtA1IrEEciFOVPTgkXLE8wJtTXVEgz7ygo3G
      6gp2tjZxehuoctufupyyCoDhN4OiFBBE06+lm/ZQfAg2GH4ZJpPl1zavQ/QZwGD44hkBMJQ1
      IwCGsmYEwFDWjAAYypoRAENZMwJgKGtGAAxl7bmfCBOe4XoNg+HzYvxGmKGsGYdAhrJmBMBQ
      1owAGMqaEQBDWTMCYChrRgAMZc0IgKGsHYoAaEqOH//4TQolletvvUmq8PS7+cce3ubBvds8
      mlzi0Z0PuHX9XeY2gyRDO/zdd3+Kriq8+Y/fZ3R8kkLp4DG+tTm2Q59sPlCyMd55+x1++va7
      j1sEdF3le//hrwll8gyPTvDxEyXjt9/i/ftD3L7xAduhJIFA8InrF1idZHhqmqHJ5c/ekGyE
      v/3/vsPgwEPuDk7ys7MygUDgMx+mKRn+9q//HduR7GfP/5dw7969X9u8viye+5lgOOgFuni0
      me995zt0n7pKenuWB9sxQKbZqRItqGQ1F/nAPF1nXuZEbzunL72IrqT44N4oImbeuNbPW0Ob
      2No8WOUSpWKcaLxIvaajf9gLNL+6w7H2DMOxdnKbY5x//XcohPeobj9JRXqV3ViWI3UuNmaG
      D3qBZCtyPkIorVD7YS9Qqahy/NJFaolzc3ASWSsyO5ZFsrs5erSXwaFplGyco0e7UUoiaj7O
      2z/9KZKgI4sS3Rcvc/vtG5ztrqHxzMvUoFFR08zlqy9w/Z23mR0MsZZ2IOlpHFqJSy9e5sGj
      abRcEpMEvZe/QmuVFd/aHG1HTzI7M4+t3c7I0i7tPScIr02gmd2cONrJwPAUoiDS4LERU3Tq
      6jvZmh/EWVXP+csv4DCp3HzvAzQ1T0XrcaZn5rn4wktYpee6O3yhDsUIANDYexqnSebs8Xbm
      5xex2a2UctmPeoFCQRwVdRzrbT/oBULj4f1BLly++NFMdJ3Orh5MooBs9fLnf/Et6sw5lvai
      QJF0XqW+5wS++UESBQHHz73QOoCa4d7w4kEvUDhGhdNOPP2kd1kdQRBQVZ2mxhqSyQTxRBLQ
      ySVDpA5aVEjH/Djre7hysgPdamHkgxtIDifbWai2Sz83R0BXOXX+CiZdo72hgusf3KPa42Q3
      lsfpsBEJx9B1jYnpRURRYndljqWVXU6/8DL97XUkivDKy9dI7a6S0WVMmoqjpo58MkUilaah
      1ksiniRbUEBT0QXQlDxJxURzU11Z7fxwiALws14gQRA4eqyfYr6IyWalkMkgm2R0Tcds+ehm
      6Os//I9ENCuRSBKnnOXWw3E6uzoAMFvMqLk416/fZDuu0l5bAZhxWsUPe4FC1HafAsBV3Uhg
      bYLlUI56a4lIRuQv/9l/SV9PF3XVlcRSWRxCgUjioDNHNkvMjg3z8NEYR4+fxGw2oagCFQ4L
      yWQSVZAQJQlN0zDJMp7aFnKhNYZmtzl+9gqpTJpX+irQLNUf1vaJJEK7DD4awOptwmY2I4kC
      ZrOZ1p4+dnYD9B87Smu1g0y+QFVVBUomgrWuj5dfuMJr5ztRbU6mHt1nbnWPKrvEnbv3sTd2
      4pY0VElG0lQqvVUUcmk0QcZhFskXS6CpZPMlRElCV0tQzJJRvthX/Ul0XeXW9fdIF1R0tcBb
      b7+PWkxz/84dHg6OoeqArjF47xbXP3ifaKbIzffeYnR8mrB/h9t373J/cALtGS7yKatrgfzr
      8xRcrbTVPHsv0Pj0Mkc7aolpTpq8h7wX6DfE7vIkP3h/kL/8r/8Z29P3uTvr45//4TVuTOxj
      LkS5+sbXcBRDvDO4yUtdZgb3S+wtLHPu8iVaGzyY7W7uffA2L77xu9iecpB/aEaAUjGPz7dH
      OvvJnqBsOo32hOk/2Smkk4pH8PmDqJpOoZD/xLSKctAk5mroeuadH0CUrZw/exK7p97Y+b8g
      pUKKoel1GqvthH1rLAeKuGSFaCKN2SyDCMVCCUolkGQkSUIpmfn6738DKblFIC+T2FvCWtOJ
      9Rk+4R6SAOjcvXWDgqIyNjJCSVXxbW+RyhYYf/CQjFZib3uLdL5IqZBla3uPfDrGD3/0JooG
      uZiPByPz5BN+JmeX+cH3f0A6V2Rve5NwPMnAjbdZ2fKTyuRJxcLs7ofQSgX8Ph++QARNLbKz
      tUkqa5R0PW+ibOXqlYtIApgcXq6cOwYcXDYviSKiIFDMZ8jKTpTwNhMLG7TU2JiZWSCW08n5
      5nnz7iyNtRVoz3AMdEgOgXTG7n/Aqj9FZ98pHFkf+coWfKvLuCUBU4UJu6cN3+YGFrFIU1sn
      nuo6bt64yZ/8yR+h5RP89M23wermhWsvcvO9t3jx4gm2ogpLC0t01tuob+1hL5wglcxypEYk
      IbnY2EpSbUpQ6fWSFF10NDTQ1f7lrRP8TZLPZTFbbIiiQDabxWazkU7GQbaiJgMkJA+1doGs
      olNV6SaTSqBLFkyCSiqTQxBlqqoqEZ9yv8mh+BoUXaOl7zwnLtp5/+230dUiTtWMpgloEgQC
      ftyqHR3IFnU6e44gaQp2uxVJAEXVef0bf4hUjPDevRHsDjvpaJiSVI1NFjHZbNisZtRcEmtl
      M11tEu9O7NLU0o41vUJD7xnk9Rlm5pfoaG88LMNiWbPaPur1tNsP/u2q8ACg2VpwIyKKArYP
      p3G6Kz96rP3ZD1cPxwig6yxMjRDPa1jsFXQ3uhmbW8fursKNgqfBw9LSFs6qemqtRVZ3AvSf
      vcLy+EMuvPjbSKUEwyNTmCwW6lt7CG/OYHW4CMRypGIJjh1tJpMD0V5BPrhFRtE5cbwHfwzM
      +X0EewX7/gA2ZzXnTh155h+yMHz5HY4AGAzPiTHaG8qaEQBDWTMCYChrRgAMZc0IgKGsGQEw
      lDUjAIay9lzPBOu6jqY96VI3g+GL8dwvhVCUQ3ABuqFsGYdAhrJmBMBQ1owAGMqaEQBDWTMC
      YChrRgAMZe1QBEBTCmzt7KEDwb1tssrTm+GyiTDj45Mkcwrx4B7jkzPkiiq6ruPf96PrGitz
      U4xPTj9uhlMLGWKp3Cfmo+sa60tzLK5t8/jWCF0nsLdDrlgkEkt8atn726tEUx/dPxwN7pMt
      Hixkf3eXeDRIOpsnmU4TDIafui2FTIxo8mC9MvEgt2/fJ1MokYoFmJqZp1DSPpwuztjYGNFU
      nnQ0wPj4JOn8wdfIydAewyMjjI6Nk36GZj0AJZd+/HhNyTE9Oc7Kxh4fv0UkmwiR+AVdKYlY
      7ImFBV8mhyIAomxiY3aUnf19hqaWMaEwMzHOXjBGLhllfGyU/XCCzdUFVjZ20YHNbR/9va0M
      DAwwMjFPd4Od4ZlV5scf8pMP7qOrRTb2I/T1HcH84dmO6YkJMokQsWyJ0N4OeRWykW32kiLZ
      /TWC6SIASjbKd//Td8noMsuz0xTUj90zpKuMjY0wMjKBrqmsLsxw7849Iuks89MT3Lh5j3yp
      yPr0AO8PzqEUFRJhH2PjU2QKCisLU4yNT5EvqWytLjAxs0A8uM2m/yBod+49xGWX2d7e5dHQ
      BM0ekcmlHQAePRqi7+gRRoaGGBqd4khnLUNjcwDsr03jaT/N+XNnsYsl5qYn2PFHKGaTTI6P
      EU5kP1x9haXZKeaWN5h6eJ3BuQ0Ahu/cwtvRj1yIEMsWWVucZXljl5hvFV80x9rCDMsbu5QK
      WaYmxglFovzo+98lmil+AXvI5+dQBABB5OpL13j3H3/M+asvMPPwNqrTy+D9u6yuriAIKnfu
      DzE3t0RzSwMCcPTECdLRIJUeD4LJjtvpJhmP0Xf6Co1VNnS1gN1iZ2b0EfvxHKASiGWotmuM
      TiwyNjWDSYJ8Jo2johK3VSSSLoCuMTI8Sf+xXkDEYxfYj33UDBffnUN1dZIIbOLfWSZQtFHp
      MLM9O4rmacVugsDGApKjmrpaD4sLCzx4NEV/Tz337o8yPb9MgzXP2PwaW3sRdmZG2YpmHs//
      SGcrs/PLmKw2HGaB6cVNnI6DO19VXcRhsaLkEyCYcTic5FLxx49dnBlnYm6ZxfH7pAQ3k4P3
      uXHzFvaqGu7fvYuuQzbuJ5AoMPnoNrKrltraGgD6Tx5j6ObbjC/uktpdZCmQw7cwzn4yT2Rz
      isVgCd/8EHfu3cfZ0IUsm6lvaMbtMH8Re8jn5okB2FgY5823PyCZKzL84AG/allIPhnirbfe
      IZl/+kBpdnhpb23BW2lDUUoUCzkqPR72fPt4vV4ENGwOJ2b5oLvPv7nE7E6GC6f70Up5svkc
      DqcLSfqw20+Dps5uat1W0rmDdylN17F4Winsj4GtFgkw22zk0imyRR23zQRanhISwX0foUgc
      URD4+E2jY9Mb9HfW0tnoZmppD1GUMJlMaKqOJImYTKbH0x48TkcQRCRZBl3DXVmJxWI+OLTI
      Q6Xbifqxy0F0s4MzJ/tZnJkgp9t48eIpdnf3gIM6yIKiIFsc6HqRfD6P5WM3gPedOMuZY72U
      FAWlWMBV6UFXFfK5g+cSIB70oZldOO1mNE1/fLgTTRX5+u/+AWfbXazshikWi5gdbiyyiKoo
      lJQiZkclJhFMJhMmWUJAhy/yjlpdJxELE44mHi+2kE0RCEXRdZ14JEyuWKJYyKM+Sy0cIH37
      29/+9if/lOdv/p+/ob7ew35aYuz6m0TzafKaHTW+w3s37uGobmTy0XXm1wOQ9XNvaJam1jYs
      Jol0dJ933nmPnOhk4d6PuTXl59XXrmAWn3yruap+dLwqiAJVXi/1jQ2EfD7qWjpoqavEH0lT
      W1tHQ131wTs+sLa8AJJMXhFp9tpY3o1y8sRRrCYJURTw1tQS3FmlaPHS01aHKMzlDoUAABX9
      SURBVIjEgz7cdS24LSLN3UdxWmXMVheJ4DaqrYr2GgfJokTfkR6qKitoaGxgY32L5mor/iR4
      XGZUwUxPVyf1TU0gmLCUEhQEK8fPnCGytYJkr6SttZmK6gYK6SSN9fW0N1exuLbP6bOnsVtM
      eDwebBU1mEopTA43tbUNeDyVOG1mStkEyxs+zl+5Rr1bZnknzMkTR0nGorQ2eJlZWKWn/ySN
      VTYW130cPXEMu8WEIIjY3R5sJpGq2gbiIR/ehjZOHu0isO+ntbMXt9OG1e4kEtjHXVVDa3sb
      +WyOWm8lJkFlfmEJ7DWcPXMSIRdDdlXT1liLt7kHixLD5K7l9Ik+NpbmMDkrqbSJYK3Abvli
      rqgpZiPcH5ojEdjEVtOCwyIxMjRIPrpLSJGYGRnDF0mQT8Worq1H+gX73Mc94aZ4ncmHH/DW
      zSEuf/WPmH7nP/HKn/wTrn8wwaVeN+NTc1T1v87e6E/51r/47/ibf/W/YnY5OPbat/iT3zrL
      d/79/0XPC1/j1g9/yKuv9LEQ8/Jn37z2xKHmk+1unz8lEydRslBdYXv6xIBWKhCMpvE4Laii
      BbvV9PQHGT43Sf8Sc0ErTfouMU8fp1q9oBe59ZMf03j+Vfzzo0g2B25PLTW1tTTUVj214eNT
      +6WupLk7NM8L5/uZW1xDlGw0Nzcg6lnGR6dxuNwHw6bNRUutF5enhrPnL3CkvQEAkySw79uj
      iITDasPmcDzTBw3fxhLDIyNMza+Sjuzij38UDLWYZWPbRzAY5D9nwDU5Kp955wcQZQv1tV4s
      dqex8x8CoiyjKQqqJmAxyYBGMJTkxa+8wMbiNq/89ldwOlz4d9aZmxp5/O3fZ3niCBDxbbGw
      GeDkmTPsrS7R0dfN2uoulRaVeB7Mdif5VIxjx48T8W2yvp/kzJkTmCWRUj7NxOQ0DV3HqBSz
      RBQLbfVVT1z4RyOAxpv/+EOufeUbFBJRducHSHjO4NWCJHMlWuoreTC1zen+duoqLKzuBKhu
      6iK5u0hRF2jqOkZoe4UiZi5dPIf8DEOf4ctHKxV49PAhimjl4rlTZAoawa0FMnmNtr6TVMp5
      gmnIBtcJ5yUuXziD9JRd4bn2An38ECgV9fPw4SPCBROXOuzkvMfwzY5QyMRoPnaeSCyFXEhS
      VBRef+OrvP/OW8iSmZevHOfeyCr5dJjWnhOcPNrzTMd+BgM84RAosLXMdiABepHR0anHf9eU
      PJPTc49PfEyMj6N9LDubS3NE0nl+JXqJpZUtLl57lZYqKyoCudg+RXM1HocFTdMpFYtoOlhk
      nWAwgGhyYJJlEADJxOlzF4luLhLJfbm/lzZ8sT718V3NRXj7wQp/erWRh7PbtNTYmFr1c/F0
      L++8/Q6xSIC+UxdZW1/jWH8vjx4+pK7rJIsDd2l/1cvmzBK6s5Fzx7sRnlJM+pggc/x4Pzt7
      fk6ev0qFVcAXSdFclQZTK66KShqrKrDa7VQ4rWxu7fHqay9TSKcwO2xcPOemkIrSe/YyNXbL
      05dnMHzoU4dAWjHJv/63f8OxVifVZ7/Ozb/912gmOy3Hr7G1MM4rV46xlqrEvzTAiydaCVq6
      8dpEYmsTmOsauXVrCK1Q4L//l/8Sm1qkrqEB+Rd8Cv6ivwUyGH7ep3ZN0eymv97EjbkIp7pq
      kM0OTp87T2dLLTZ3Nd0dzWg/dxujrpY+PDTSqWnu5PyFc+jJAMMjEzzDOTCD4bl54ofgiG+d
      lUCRS6eP4N9cYmY9wOWLZ1laWaevo47NYJ5cIsDpk8d49OAh3rajWItR3E0dbM+No7saOX+i
      56mHQMYIYHjeDs23QAbD8/AM56h0Hlx/i7XleW4NzX3+a2QwfIE+9S1Q3L/Kj9++R1Gy4jUV
      qOy+gFRSyCZCrGwpOLObjK+G+IM//kMevfUDwpqTb33rj3GYjO/eDV8+nxoBCuk4BUs9juQG
      PVevMXJ/iO31ZbJFDTUT5odv3SDqX+fe4BirG3vkUxFiqV/x+3+D4Tl74iGQ3WbHbHbg8rj4
      +BUwotlOc2MDrW2d9He1Ud1YTybiZz/86bumDIYvg099CFbyGZI5DbGUxe6pIh5OIIslrHYH
      2aKOQ1YJJfO0NNWTjARJFnSaG+v5Va4+0HUd4xeaDM+T8RthhrL2qQ/BhVSYH/3kLfIlcNa2
      80dfe+WZZjQz/ABvzxkaPY5P/H1u7CEV7adp9jp+wSMNhufnU3eESSYL7TUO3n20yp997Tzf
      /cGbRHMaK+P3eDSzgZQPk8DN/NA9rE4LP/r+DyiYKtiefIhc08r47bdZ9KXoqHPxg+99h6GR
      Mep7z9Lgsf+CVTAYnp9PjQCCKOFyOpBNZhxSkUV/gT/8vXr+cXaYqblh+jv+CUN3PiARTRPz
      zbOwkWR88btcOVLB5uwAdwZm0LMP0dIvQs0xOnOx57FdBsMzeeqJMIfTRTGyx9J+igqnDU9r
      H4nFQTpPXcRT6aGn/xQvv3IFM2B3umlp7+LqK6/T31LLzuocm77QF7AZBsOv5skfgkt51nbD
      dDZ6WPcn6WyuYW1lBbPVTmVtA7mID0dNCw5ZZXFhibq2bpRkCHtVHXHfJrrdS0tDFRvLS6iC
      ibqmVtz2L3d9huE3k/EtkKGsHY5iLIPhOTECYChrRgAMZe1QBEBTcgyNTKAB8xOjpIpPbzfe
      W1vg4cP7bOxHWZ+f5O69ewRiWXRNYXRsCl1XGbx/m9Hxycf9MNmoH9/HejjhoGpjaOA+DwZH
      UdSP2qGnhwZI5vOsb+58YvqNuTHuDQzxYGDok6W5T6QwN7dEIBD4pfqMVCXPzQ/eYWjwEVOL
      G5/6/3xyn4U1PwCRUIDSZ9x1F9ld4sadBwwNDRHPPkNRzmGm6+xtrrK6ufe4GjEVDTC/vIGm
      62yvrxDPFMimkxQ/60n5mOf+K5EAomzFlPMzOjZOKF6iIx/hzsACFTWNNDp1lrf9uGvbyAVX
      cNZ1c6y3HSwuLp9v4b3bD5AEM69f7uPWzDL15hSTi/ucOdHJ5tY+Z17oedwOPT41R3tbPVta
      J3nfIs3HzqAEN9DsTXjy2+wlcrRX2UkG1vng9iP+4vQVAlvL1DQ24TIfvFeEdnfpevF3CU/e
      IpLMsLMwQaYIp/rbmVvexumppc5aZNUXob33CLs7PjStSGhvjXhWwVndQYUeZSeUpOvYWZq8
      B92eC3MzdPcdxyQJ6KpCTjPz2qXLvPPmT3HJWfZ9ITwtfYTXJ3A4zESKVaQie7gdJoL7ewST
      WayOahqdJdb3gmCv4eWLJ0hH9vG2nuJMpwdNyXD/zn1kh5eT3bWMTi/hrmmmUsqw54/QevQC
      rTXOX/AqPX/51D6z62GqpCR7FVU0e6wsLG/gNecYni8QXttAWNujwePm5LkzzzTPQzECIAic
      ufoqU0NDvHjtAsN371AymZkYHmbXH6BUyjM1PUcskaevpx0BaGxqYm1+irbuPgRRRpZlctks
      py6+SLXLjCCIXH31t5Fimyz7k0CJSCpPQ0MtU2NjLG3u4pCgVFQwWa2YBI1MvgR6iYejS5w5
      1oaqanhdFvyx9MdWtsT02DAbO/tEwn7C0RR7a8ts7u0TiMSprKzg9v2HWGWBoeERAPw+H/5w
      nDMXrrGxMMK9h4OYRI2hkfGD/99e5dGjAYYm5h5fHBja22B46BFNvceJ+v0oFJganyORUznS
      3siD936Mra6DSMBHwB+h9/QFfJsLTCxucvXiGaIB/+M1Xp6dYGhijo3JAfbSsLs8zlvv3SKv
      m5gdH2J3z0dGkXDZD3f7XSEVx+mtp9ZlJRDPAAIXL51lfWMft6saj9tEhVVAk2TWNvaeqbf3
      cAQAEGQrjQ0NWC0SHk8VDc3t9Pd1E/CH6e1qR1GKSCYTP7vNePrhdbbzDjqbatGLSXb2fHhr
      ah/PT1PyBEJh8iUdq0kGREwSYK2GyDRWbxcAdncFEf8OgWSRGqeMohRpbmnE7w8RT6QpKgpm
      UaD0eEiV6Ozto7utgWQ4gKmqGadZwOzycvXyOUYePaS6upbWjna6Otoer48ky4iCAAhU19TR
      3tFGV1sLAPWt3Vy7do1LZ449vo+6pqmDS5evcrq/E384Tk9LAwW1hEk+2Ekvv/YV1qZH0XRA
      kh+34dlkCAT85NWPLs/tPX6GS2eO4fJ4qKtvpKv7CO3NtTS2tNHb00NbVx+neqp4ODTz635Z
      f61kq5ViNku+pOO0mQGVjc19Xvmdl9hY2ODqSy9jtboI7m2xvTJN/hl+J+RQnQeIhsNUVlcj
      6iqb6+u4a5qw6Dl8kRQupwuLSXzcDr23tUYyW8RRUU2VXcAXTtLR0Y5JEgmHw1R7vQR92xRl
      J811XgDmxgao7jmLVUkgO6txWCTQNfZ3tyjJThqq7GRVGbfdQiIaxuauYGhgiJN9zQSKFfQ2
      e0jFguz6I9jcVbQ1eNna2EC2OKisqsC/u4unrhm3RWdj209rRzu5VBoEHUEAl7uSWDSCy25m
      ay9Ee2cHZunT70G6phKNJ/FWHVSaJ6NBQskCLocdWRKpcFpI5gElgyZISKKIw+UmEYsS9m3i
      D0XB1cgrF4+TT8cpSU6cNvng13N2N8BaRX2Vk63NDdw1TdiEAtu+EG1d3Vh/UYfNIaCrCqPD
      gxQFO+dP9ZHIqaQCG4STBXqPn8auZ4jlJfKRLYI5ifOnjj71Mv1DFYDPm14qki2Bw/psZ6V1
      tUS2oGAxSSDKyE/YWQ8XnUwiRiieoam5GdPTijEN5RUAg+HnHfa3NIPhc2UEwFDWjAAYypoR
      AENZMwJgKGtGAAxlzQiAoawZATCUNSMAhrL2XC+HNn4fwPC8GSOAoawZATCUNSMAhrJmBMBQ
      1owAGMqaEQBDWTMCYChrhyIAmpJjdGwKDViYGif9DL1Avo0lBgcH2PLH2Fic5sHDhwTjB71A
      ExMz6LrK8MA9xienH/cC5WIB9mOf7gUaHRxgYHic0sd6gWZHB0nm82xs7X1i+q2FSR4MjTA4
      NEK2qBIMPrn9OhnYZn1nh7Vt/xP//7Fimpu3bjEyPMjqzkf9QcFg8LMfpyncv3WDZO7X1/Wz
      trb2a5vXl8Wh6QWS8wHGJyYJJ0q056PcH1rCXd1Ag0NndTeAq7qFXHgNZ20X/d2tYHZy4Uwz
      1+8NIAtmXrnYy525VepMaaaW/Zw83sH2jp9Tl7oe9wJNzCzQ1lLHjtZOfn+Zpv5TKKEtNEcj
      ntwOvmSOVo+dVHCDm3eH+bMTlwhtr1DT0IDzZ71Ae7t0Xv06lfk9BkenqHVbifq3CMVzHDtz
      htWZKbIKdNbbCGZFNM1E0r9BuihQU2GnvucICxPTtNY6sTf24tHzZHUbr124xPvvvos138pa
      KI/DZSGwv8/R40eYnd9ELMaJ51TOXbqK3SSQDG4RSaSYWdrifJebkYk5qlv6kLL7+GN5zpw7
      xdzEOLrZRWedi9W9fTw17RSj26QKOmcvXcZuEliYGiMcT9HS2cuNm3doau/CKj3HneELdihG
      AASBU5deYmZklKtXzzH24D4l2cz02Ch7gQClUoHZuQUSiTy9Xa0IQENjI+uLM7R29oIoI0ky
      uWyOE+ev4nWZERC59OJrSPEtVgMpoEQsnae+voaZiQmWt33YJSgVi8hmCybxo16gR+OrnOpv
      RdV0qlzmDztoPslir0RT0vj9+wT299FNNmQlRSieJrA5S/DDKqFMeIekUMmxZhsb21tMDA8z
      teJjacuP62N7miAI2M0mohEfzUdOEwv6EXIRJiemSKeijMxvI+VCjMzvgK4zOTaGtcLDwtQY
      85OzdJy5wpH2WtZ2Q7x47QqJ9Sk2I3n2V+dZ3N4hlsxT4Xaw79tBtrkOalR0hUAgTCEZZCNc
      pLGxtqx2fjgsAeBnvUD1WM0SlR4P9U2t9PZ2EgxG6O5sQVGUT/QCzQ7eYjdvp72xBoop9vb3
      8VZXP56fpuQJhiPkS2A1SYB48KJbvejRWaxVHQDY3JXEAnsEk0WqnTKKotDU3EAgGCaRSFNU
      SphEgZL6UdVeJp1ia30Bb307AJ19J2iw5hgYnsBa04bDLKB9OL3J6iCTCOMPxmg7cY7F8Wmu
      HnESUR3IH26LUsiTiIXJaBJWUcAkHwxZnT3d3L03wpG+bmpqamlqaaOtsRq1mCYp1fDGa69w
      us1FrKASDuyzsxdE0FR2tzbQLC7q6urp7OmmtaWDC6f7GRocpu/kBSwZH2v+BBSzJBQzDV43
      qqqhl5TPrFl83nRdY21xhpmFVdSfFYj5NpmYnkdRVZbnpgjEUiRiEQrPuCHPtRXi568FikYi
      VHq9iLrK1sYG7ppGLHqe/UgKp9OJRRap+LAXyLe9TiqnYHd7P+wFStHe3opJEolEInirqgj5
      d1EkB421VQAsTAzh7T6NRUkgO7yPe4H8ezuUZAf1HtvjXqBkLILV5WZ0cITjR5oIKhV0N1aS
      ioXwBaPYXB5aGmuIxxJIepFgPEd7WxN7W5uYrA7sdjuifBA8LZ8kWRRpaaghEolQ4bCQLsl4
      XDZQFdY3NlA0kZb2doRCCsHmIZeO4alw4w9EqKuvJRUNEk6X6GhtRFNypHI6lW47Sj5NVhGI
      h/apamhFUtIE4nnaWhoI+3YomVzUVljY2N6lvqmdYipEsgBtLU2Igk5of5eCJmJ3VqKkI1TW
      t2I5pKNALr7L4HyUWimGs/s8bV47c7NzuLQYfrmO2NY2ukmmrrqKU6dOPtNP9x6qAHzuy1OL
      ZBUBh/XZKgAPeoFKWEzil6QX6Ddbcn+R+bCdRm2HSGUfZ9q8oBd58P67VPReQotuUijpCCYr
      Frub431dTw3BIXlFdebGBxkaHubOg2FU7aNMTg4Mkn3SI7QSI2MH3ZqlfJK7d+4w+PAec+s+
      RkaGPzHt2uIUoWiccLLwzDs/gCDJOOxWZJPZ2PkPAdnqIJeKk86XqHRYAJXFpU0uvHAG/06A
      E6fPIFscxIJ+wr41Cs9QjXgovgUCnb3dHSpa+jja1UJ0d5np9SCS2YYlk8G3Psf2TgSzrQKP
      nCWYKNLT08nk5AwnT59FzafYD0Q5e+EcjV4bf399nCq3nU1/gnyhgJjyUZPVKIlmZkb2EASd
      jt5OBoeXcNlE+rpb2QxEqa1v48SRtqevruG5sFU00uAKkxfq6XGJhGJZKu0ic2sJrl09TqmY
      ob2rm6ZqJ+G8+Ewf6A/NIVBJKbC9vsLD0TmqHSKOhjaS4Thus0QiH6GipoNMIommKrzxO28g
      qiXevX6Tr//OV0HXyaRiLMxO4svaEXMhzvW3MbMdZ297l77uGhqbOlheWUWoaOOVTpm3xzbw
      eDuwZ9dwNfWyvrKEt7GTC6eOYBQKlo/DMa7rJQYf3COUyNHc3MyRnk6KeQXZakMG2jvaUQoF
      TFYH9ZUWHty9SyhdJJ+KkVMgHdnlwdAkmB001XmRtDwb2/sIJpliLo8sS/iDEUzuGgrBNe6N
      L3Gks+lxE7OqaVRUVhINhX6pH7IwfPkdmhHAYHgeDscIYDA8J0YADGXNCIChrBkBMJQ1IwCG
      smYEwFDWjAAYytr/D5LdKcWifP90AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.VMT by Speed' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
