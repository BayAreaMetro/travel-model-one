<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='JourneyToWork Extract' inline='true' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\JourneyToWork.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>homeCOUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[homeCOUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>homeCOUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[home_county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>home_county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HomeTAZ</remote-name>
            <remote-type>4</remote-type>
            <local-name>[HomeTAZ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>HomeTAZ</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1442</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1454.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WorkLocation</remote-name>
            <remote-type>4</remote-type>
            <local-name>[WorkLocation]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>WorkLocation</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1454</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1454.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>workCOUNTY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[workCOUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>workCOUNTY</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>9.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>work_county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[work_county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>work_county_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>543</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>3013.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Income]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>305280</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>-20000.0</statistic>
              <statistic aggregation='Max' datatype='real'>1968504.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010 Base (v0.4)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040 Holy Moly!&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='real' name='[HomeTAZ]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[WorkLocation]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[homeCOUNTY]' role='dimension' type='ordinal'>
      </column>
      <column caption='County of Residence' datatype='string' name='[home_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[workCOUNTY]' role='dimension' type='ordinal'>
      </column>
      <column caption='County of Workplace' datatype='string' name='[work_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column-instance column='[home_county_name]' derivation='None' name='[none:home_county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[work_county_name]' derivation='None' name='[none:work_county_name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:home_county_name:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;San Francisco&quot;</bucket>
            <bucket>&quot;San Mateo&quot;</bucket>
            <bucket>&quot;Santa Clara&quot;</bucket>
            <bucket>&quot;Alameda&quot;</bucket>
            <bucket>&quot;Contra Costa&quot;</bucket>
            <bucket>&quot;Solano&quot;</bucket>
            <bucket>&quot;Napa&quot;</bucket>
            <bucket>&quot;Sonoma&quot;</bucket>
            <bucket>&quot;Marin&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:work_county_name:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;San Francisco&quot;</bucket>
            <bucket>&quot;San Mateo&quot;</bucket>
            <bucket>&quot;Santa Clara&quot;</bucket>
            <bucket>&quot;Alameda&quot;</bucket>
            <bucket>&quot;Contra Costa&quot;</bucket>
            <bucket>&quot;Solano&quot;</bucket>
            <bucket>&quot;Napa&quot;</bucket>
            <bucket>&quot;Sonoma&quot;</bucket>
            <bucket>&quot;Marin&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='JourneyToWork'>
      <table>
        <view>
          <datasources>
            <datasource caption='JourneyToWork Extract' name='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='County of Residence' datatype='string' name='[home_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[home_county_name]' derivation='None' name='[none:home_county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[work_county_name]' derivation='None' name='[none:work_county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='County of Workplace' datatype='string' name='[work_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:work_county_name:nk]' value='65' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:home_county_name:nk]' value='96' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[sum:freq:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:home_county_name:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:work_county_name:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='JourneyToWork'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;2040 Holy Moly!&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:homeCOUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:home_county_name:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:workCOUNTY:ok]</field>
          <field>[C:\Users\lzorn\Documents\2010_04_ZZZ\summary\JourneyToWork.tde].[none:work_county_name:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='JourneyToWork' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
