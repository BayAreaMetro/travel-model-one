<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='PerTripTravelTime Extract' inline='true' name='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde' version='8.3'>
      <connection class='dataengine' dbname='.\PerTripTravelTime.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>4</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>4.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;$30k to $60k&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;More than $100k&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_mode</remote-name>
            <remote-type>4</remote-type>
            <local-name>[trip_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trip_mode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>16</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>18.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_purpose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tour_purpose]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_purpose</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;atwork_business&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;work_very high&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1723</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1987857.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_participants</remote-name>
            <remote-type>4</remote-type>
            <local-name>[num_participants]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>num_participants</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1729</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>1987857.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trvlTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trvlTime]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trvlTime</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2343</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>7.7994739394935877</statistic>
              <statistic aggregation='Max' datatype='real'>137.16000000000003</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_fail</remote-name>
            <remote-type>4</remote-type>
            <local-name>[time_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>time_fail</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>72</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>269.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2015_04_134&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2015_04_136&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[pcto:sum:freq:qk]&quot;' value='Share' />
        </aliases>
      </column>
      <column caption='Simple Travel Mode' datatype='string' name='[Calculation_0180919155350154]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [trip_mode] &lt;=6 THEN&#13;&#10; &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10; &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10; &apos;Bicycle&apos;&#13;&#10;ELSE &#13;&#10; &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Tour Category' datatype='string' name='[Calculation_1210919154721266]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Calculation_2800919154031518]&#13;&#10;WHEN &apos;At work&apos; THEN &apos;At work&apos;&#13;&#10;WHEN &apos;Work&apos;    THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;College&apos; THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;School&apos;  THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;Eat out&apos; THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Escort&apos;  THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Shopping&apos; THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Social&apos;   THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Other&apos;    THEN &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Detail' datatype='string' name='[Calculation_1500919153120996]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [trip_mode]=1 Or [trip_mode]=3 Or [trip_mode]=5 THEN&#13;&#10; &apos;-- free&apos;&#13;&#10;ELSEIF [trip_mode]=2 Or [trip_mode]=4 Or [trip_mode]=6 THEN&#13;&#10; &apos;-- pay&apos;&#13;&#10;ELSEIF [trip_mode]=9 Or [trip_mode]=14 THEN&#13;&#10; &apos;-- local bus&apos;&#13;&#10;ELSEIF [trip_mode]=10 or [trip_mode]=15 THEN&#13;&#10; &apos;-- light rail/ferry&apos;&#13;&#10;ELSEIF [trip_mode]=11 or [trip_mode]=16 THEN&#13;&#10; &apos;-- express bus&apos;&#13;&#10;ELSEIF [trip_mode]=12 or [trip_mode]=17 THEN&#13;&#10; &apos;-- heavy rail&apos;&#13;&#10;ELSEIF [trip_mode]=13 or [trip_mode]=18 THEN&#13;&#10; &apos;-- commuter rail&apos;&#13;&#10;ELSE&#13;&#10; &apos;&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Tour Purpose' datatype='string' name='[Calculation_2800919154031518]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [tour_purpose]&#13;&#10;WHEN &apos;atwork_business&apos; THEN &apos;At work&apos;&#13;&#10;WHEN &apos;atwork_eat&apos;      THEN &apos;At work&apos;&#13;&#10;WHEN &apos;atwork_maint&apos;    THEN &apos;At work&apos;&#13;&#10;WHEN &apos;eatout&apos;          THEN &apos;Eat out&apos;&#13;&#10;WHEN &apos;escort_kids&apos;     THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;escort_no kids&apos;  THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;othdiscr&apos;        THEN &apos;Other&apos;&#13;&#10;WHEN &apos;othmaint&apos;        THEN &apos;Other&apos;&#13;&#10;WHEN &apos;school_grade&apos;    THEN &apos;School&apos;&#13;&#10;WHEN &apos;school_high&apos;     THEN &apos;School&apos;&#13;&#10;WHEN &apos;shopping&apos;        THEN &apos;Shopping&apos;&#13;&#10;WHEN &apos;social&apos;          THEN &apos;Social&apos;&#13;&#10;WHEN &apos;university&apos;      THEN &apos;College&apos;&#13;&#10;WHEN &apos;work_high&apos;       THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_low&apos;        THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_med&apos;        THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_very high&apos;  THEN &apos;Work&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average Travel Time per trip' datatype='real' name='[Calculation_3100919153931806]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([trvlTime]*[freq])/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='Travel Mode' datatype='string' name='[Calculation_7130919152735054]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [trip_mode] &#13;&#10;WHEN 1 THEN &apos;Drive alone&apos;&#13;&#10;WHEN 2 THEN &apos;Drive alone&apos;&#13;&#10;WHEN 3 THEN &apos;Shared ride 2&apos;&#13;&#10;WHEN 4 THEN &apos;Shared ride 2&apos;&#13;&#10;WHEN 5 THEN &apos;Shared ride 3+&apos;&#13;&#10;WHEN 6 THEN &apos;Shared ride 3+&apos;&#13;&#10;WHEN 7 THEN &apos;Walk&apos;&#13;&#10;WHEN 8 THEN &apos;Bicycle&apos;&#13;&#10;WHEN 9 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 10 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 11 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 12 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 13 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 14 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 15 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 16 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 17 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 18 THEN &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='real' name='[incQ]' role='dimension' type='ordinal'>
      </column>
      <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Calculation_1500919153120996]' derivation='None' name='[none:Calculation_1500919153120996:nk]' pivot='key' type='nominal' />
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Calculation_1500919153120996:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;&quot;</bucket>
            <bucket>&quot;-- local bus&quot;</bucket>
            <bucket>&quot;-- light rail/ferry&quot;</bucket>
            <bucket>&quot;-- express bus&quot;</bucket>
            <bucket>&quot;-- heavy rail&quot;</bucket>
            <bucket>&quot;-- commuter rail&quot;</bucket>
            <bucket>&quot;-- free&quot;</bucket>
            <bucket>&quot;-- pay&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Table.Income, Detailed Mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Per Trip Travel Time by Household Income ($2000) and Detailed Travel Mode - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PerTripTravelTime Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde'>
            <column caption='Detail' datatype='string' name='[Calculation_1500919153120996]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]=1 Or [trip_mode]=3 Or [trip_mode]=5 THEN&#13;&#10; &apos;-- free&apos;&#13;&#10;ELSEIF [trip_mode]=2 Or [trip_mode]=4 Or [trip_mode]=6 THEN&#13;&#10; &apos;-- pay&apos;&#13;&#10;ELSEIF [trip_mode]=9 Or [trip_mode]=14 THEN&#13;&#10; &apos;-- local bus&apos;&#13;&#10;ELSEIF [trip_mode]=10 or [trip_mode]=15 THEN&#13;&#10; &apos;-- light rail/ferry&apos;&#13;&#10;ELSEIF [trip_mode]=11 or [trip_mode]=16 THEN&#13;&#10; &apos;-- express bus&apos;&#13;&#10;ELSEIF [trip_mode]=12 or [trip_mode]=17 THEN&#13;&#10; &apos;-- heavy rail&apos;&#13;&#10;ELSEIF [trip_mode]=13 or [trip_mode]=18 THEN&#13;&#10; &apos;-- commuter rail&apos;&#13;&#10;ELSE&#13;&#10; &apos;&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Time per trip' datatype='real' name='[Calculation_3100919153931806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([trvlTime]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Travel Mode' datatype='string' name='[Calculation_7130919152735054]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [trip_mode] &#13;&#10;WHEN 1 THEN &apos;Drive alone&apos;&#13;&#10;WHEN 2 THEN &apos;Drive alone&apos;&#13;&#10;WHEN 3 THEN &apos;Shared ride 2&apos;&#13;&#10;WHEN 4 THEN &apos;Shared ride 2&apos;&#13;&#10;WHEN 5 THEN &apos;Shared ride 3+&apos;&#13;&#10;WHEN 6 THEN &apos;Shared ride 3+&apos;&#13;&#10;WHEN 7 THEN &apos;Walk&apos;&#13;&#10;WHEN 8 THEN &apos;Bicycle&apos;&#13;&#10;WHEN 9 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 10 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 11 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 12 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 13 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 14 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 15 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 16 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 17 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 18 THEN &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1500919153120996]' derivation='None' name='[none:Calculation_1500919153120996:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7130919152735054]' derivation='None' name='[none:Calculation_7130919152735054:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3100919153931806]' derivation='User' name='[usr:Calculation_3100919153931806:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Drive alone&quot;</bucket>
              <bucket>&quot;Shared ride 2&quot;</bucket>
              <bucket>&quot;Shared ride 3+&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Walk to transit&quot;</bucket>
              <bucket>&quot;Drive to transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='99' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='87' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]' value='38' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[sum:freq:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='32' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]' value='92' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]' value='124' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='84' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[pcto:sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Income, Simple Mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Per Trip Travel Time by Household Income ($2000) and Simple Travel Mode - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PerTripTravelTime Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_0180919155350154]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode] &lt;=6 THEN&#13;&#10; &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10; &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10; &apos;Bicycle&apos;&#13;&#10;ELSE &#13;&#10; &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Time per trip' datatype='real' name='[Calculation_3100919153931806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([trvlTime]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0180919155350154]' derivation='None' name='[none:Calculation_0180919155350154:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3100919153931806]' derivation='User' name='[usr:Calculation_3100919153931806:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='99' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='96' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_0180919155350154:nk]' value='78' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[sum:freq:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='48' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='84' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[pcto:sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_0180919155350154:nk]</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Purpose, Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Per Trip Travel Time by Household Income ($2000) and Tour Purpose - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PerTripTravelTime Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde'>
            <column caption='Tour Category' datatype='string' name='[Calculation_1210919154721266]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Calculation_2800919154031518]&#13;&#10;WHEN &apos;At work&apos; THEN &apos;At work&apos;&#13;&#10;WHEN &apos;Work&apos;    THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;College&apos; THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;School&apos;  THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;Eat out&apos; THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Escort&apos;  THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Shopping&apos; THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Social&apos;   THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Other&apos;    THEN &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_2800919154031518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [tour_purpose]&#13;&#10;WHEN &apos;atwork_business&apos; THEN &apos;At work&apos;&#13;&#10;WHEN &apos;atwork_eat&apos;      THEN &apos;At work&apos;&#13;&#10;WHEN &apos;atwork_maint&apos;    THEN &apos;At work&apos;&#13;&#10;WHEN &apos;eatout&apos;          THEN &apos;Eat out&apos;&#13;&#10;WHEN &apos;escort_kids&apos;     THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;escort_no kids&apos;  THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;othdiscr&apos;        THEN &apos;Other&apos;&#13;&#10;WHEN &apos;othmaint&apos;        THEN &apos;Other&apos;&#13;&#10;WHEN &apos;school_grade&apos;    THEN &apos;School&apos;&#13;&#10;WHEN &apos;school_high&apos;     THEN &apos;School&apos;&#13;&#10;WHEN &apos;shopping&apos;        THEN &apos;Shopping&apos;&#13;&#10;WHEN &apos;social&apos;          THEN &apos;Social&apos;&#13;&#10;WHEN &apos;university&apos;      THEN &apos;College&apos;&#13;&#10;WHEN &apos;work_high&apos;       THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_low&apos;        THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_med&apos;        THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_very high&apos;  THEN &apos;Work&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Time per trip' datatype='real' name='[Calculation_3100919153931806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([trvlTime]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1210919154721266]' derivation='None' name='[none:Calculation_1210919154721266:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2800919154031518]' derivation='None' name='[none:Calculation_2800919154031518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3100919153931806]' derivation='User' name='[usr:Calculation_3100919153931806:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mandatory&quot;</bucket>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Non-mandatory&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Work&quot;</bucket>
              <bucket>&quot;College&quot;</bucket>
              <bucket>&quot;Eat out&quot;</bucket>
              <bucket>&quot;Escort&quot;</bucket>
              <bucket>&quot;School&quot;</bucket>
              <bucket>&quot;Shopping&quot;</bucket>
              <bucket>&quot;Social&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='146' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]' value='34' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='64' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='116' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names] / ([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]))</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Purpose, Mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Per Trip Travel Time Tour Purpose and Detailed Travel Mode - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PerTripTravelTime Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde'>
            <column caption='Tour Category' datatype='string' name='[Calculation_1210919154721266]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Calculation_2800919154031518]&#13;&#10;WHEN &apos;At work&apos; THEN &apos;At work&apos;&#13;&#10;WHEN &apos;Work&apos;    THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;College&apos; THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;School&apos;  THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;Eat out&apos; THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Escort&apos;  THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Shopping&apos; THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Social&apos;   THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Other&apos;    THEN &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Detail' datatype='string' name='[Calculation_1500919153120996]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]=1 Or [trip_mode]=3 Or [trip_mode]=5 THEN&#13;&#10; &apos;-- free&apos;&#13;&#10;ELSEIF [trip_mode]=2 Or [trip_mode]=4 Or [trip_mode]=6 THEN&#13;&#10; &apos;-- pay&apos;&#13;&#10;ELSEIF [trip_mode]=9 Or [trip_mode]=14 THEN&#13;&#10; &apos;-- local bus&apos;&#13;&#10;ELSEIF [trip_mode]=10 or [trip_mode]=15 THEN&#13;&#10; &apos;-- light rail/ferry&apos;&#13;&#10;ELSEIF [trip_mode]=11 or [trip_mode]=16 THEN&#13;&#10; &apos;-- express bus&apos;&#13;&#10;ELSEIF [trip_mode]=12 or [trip_mode]=17 THEN&#13;&#10; &apos;-- heavy rail&apos;&#13;&#10;ELSEIF [trip_mode]=13 or [trip_mode]=18 THEN&#13;&#10; &apos;-- commuter rail&apos;&#13;&#10;ELSE&#13;&#10; &apos;&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_2800919154031518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [tour_purpose]&#13;&#10;WHEN &apos;atwork_business&apos; THEN &apos;At work&apos;&#13;&#10;WHEN &apos;atwork_eat&apos;      THEN &apos;At work&apos;&#13;&#10;WHEN &apos;atwork_maint&apos;    THEN &apos;At work&apos;&#13;&#10;WHEN &apos;eatout&apos;          THEN &apos;Eat out&apos;&#13;&#10;WHEN &apos;escort_kids&apos;     THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;escort_no kids&apos;  THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;othdiscr&apos;        THEN &apos;Other&apos;&#13;&#10;WHEN &apos;othmaint&apos;        THEN &apos;Other&apos;&#13;&#10;WHEN &apos;school_grade&apos;    THEN &apos;School&apos;&#13;&#10;WHEN &apos;school_high&apos;     THEN &apos;School&apos;&#13;&#10;WHEN &apos;shopping&apos;        THEN &apos;Shopping&apos;&#13;&#10;WHEN &apos;social&apos;          THEN &apos;Social&apos;&#13;&#10;WHEN &apos;university&apos;      THEN &apos;College&apos;&#13;&#10;WHEN &apos;work_high&apos;       THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_low&apos;        THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_med&apos;        THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_very high&apos;  THEN &apos;Work&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Time per trip' datatype='real' name='[Calculation_3100919153931806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([trvlTime]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Travel Mode' datatype='string' name='[Calculation_7130919152735054]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [trip_mode] &#13;&#10;WHEN 1 THEN &apos;Drive alone&apos;&#13;&#10;WHEN 2 THEN &apos;Drive alone&apos;&#13;&#10;WHEN 3 THEN &apos;Shared ride 2&apos;&#13;&#10;WHEN 4 THEN &apos;Shared ride 2&apos;&#13;&#10;WHEN 5 THEN &apos;Shared ride 3+&apos;&#13;&#10;WHEN 6 THEN &apos;Shared ride 3+&apos;&#13;&#10;WHEN 7 THEN &apos;Walk&apos;&#13;&#10;WHEN 8 THEN &apos;Bicycle&apos;&#13;&#10;WHEN 9 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 10 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 11 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 12 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 13 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 14 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 15 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 16 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 17 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 18 THEN &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1210919154721266]' derivation='None' name='[none:Calculation_1210919154721266:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1500919153120996]' derivation='None' name='[none:Calculation_1500919153120996:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2800919154031518]' derivation='None' name='[none:Calculation_2800919154031518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7130919152735054]' derivation='None' name='[none:Calculation_7130919152735054:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3100919153931806]' derivation='User' name='[usr:Calculation_3100919153931806:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mandatory&quot;</bucket>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Non-mandatory&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Work&quot;</bucket>
              <bucket>&quot;College&quot;</bucket>
              <bucket>&quot;Eat out&quot;</bucket>
              <bucket>&quot;Escort&quot;</bucket>
              <bucket>&quot;School&quot;</bucket>
              <bucket>&quot;Shopping&quot;</bucket>
              <bucket>&quot;Social&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Drive alone&quot;</bucket>
              <bucket>&quot;Shared ride 2&quot;</bucket>
              <bucket>&quot;Shared ride 3+&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Walk to transit&quot;</bucket>
              <bucket>&quot;Drive to transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]' value='31' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[sum:freq:qk]' value='n#,##0,.0K;-#,##0,.0K' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]' value='103' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]' value='36' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='112' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names] / ([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]))</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Table.Income, Detailed Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='130'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:trip_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Income, Simple Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='130'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_0180919155350154:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:trip_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Purpose, Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='98'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:tour_purpose:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table.Purpose, Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='94'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Table.Income, Detailed Mode' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy915Ncd5bn97n35k3vbWVVZRmUhSVIAjTNHnLY3szOzm7PzsSOjdnQKqQn
      xf4HoydJLwqFQhGrlTQzq5E2xmqmHclueoIkSBAgCijvvc2s9PZ6PRSKTTZhqhIgikTl54VA
      gfeXv3sqz8+d8z0/wbIsixYtjiniUXegRYujpOUALY41LQdocaxpOUCLY03LAVocax5pB7As
      i+N+yNWywd1t8Eg7gKIomKZ51N04UjRNQ9f1o+7GkaLrOpqm3fbfHmkH+DJjWSZf5YHZMpvv
      /5dpULIddQe+Krz00s/5wQ9+CIBhGEiShGkYCKKEZZkgCEiiwNzoFUzZy3ZV4utPDCFgYVp7
      I41pWbeeU/i//+P/Svjk8/jULTKKkydOBHl3ZJHzQ114O0/S3xFGEr+c41M1t8V//E9/xfO/
      9SNWxz7E1z6MQ9khXZeJySYXvvs9PJKIUthifL3Kk6dPYFkCkiSyuTDGf/67l/i9P/xDrl16
      nZ6zX2Nn7iqOWB96Jcv3v/99RFFEEISH8i4tBzgg6fQOAFsLN/nf/uJveeb5F7n67iV+43u/
      w/SHLxM6cZE//t3vc/PjKwi+JIubOSZGRzjZ5uD1yzM8fipKvmLRe/55Xny8i0ZDIxyJ8Mzg
      IP/pr3/C9WKaM/1Jxqbn2Xj3Kr//h39Kf0fkiN/69pi6imrZCIfC9D7/LC+/P43VyOG22dhU
      avzVX/4Ff/pHf0Z6cZrLN3cYff81NMvGH//7/xpVaSA5vVQ251jNVmmrbFM2Q5TX5qkW0/zn
      vy7yx3/yB9ilh/MuLQc4IKZS5+bNm9Sza0TaOnE63fR0tTM5NUV3qpvrM1OY/IBkMknZcjNw
      ppfc0jhjE0uIpoEh2njh+acYWytjGTqiTebGx1cprjhxijp2l5vJ2VUCPi+FSo268uVdt6uq
      gsvt4Nr7lxAlAb1eR9IbZBWZiM1ClmQMoC2ZxDObQ63bcNoMNGNvX+YUGsxtFYlGwqytbVMv
      FJHcXrBERNGChzP4AyA8yrlAjUYDWZaRpPsfTnY2VilWG8TakpSzuyRS3eR31nH6o1hKGcWy
      0xYLodTK7OZLuLwBdKWOhI5qgCRJ+HxeaqpJJOBhY2kWeziF06rTMG2EvHa2MkXCPgemZEdV
      NCLh4H33W1VVBEFAluX7butXWMxMTNA1MEw1l8buCyPqNWq6hGQouLwudFPG75ZZ29zB75Zp
      mDYS0RCWqTM+Mc2p06fJbK0TiCWpF3eRXAGUWhmX3YbsCeCUH9wUoGkalmVht9s/928tB3jE
      +WIc4KvF3Rzgy7nLatHiIdFygBbHmpYDfAWwLOvYB7O+KBu0ToG+AhS2FvnJO2P83r94EWQ3
      jWqZajGPL5aknNnE6QuSzRbo7elkdWWFUKyNWj5DINGJS340xrjK7hp//8pH/MGPvoMhOlHr
      FWrlAp5QgmpuG4c3QDabo7enm7WVFQLROI1SFl+kHY/zzl/z1ib4S4/FW6/8lHJD5cTJc+R3
      MyjlIiVDxm4Dr8NJyGdnZ3ODouXi2SdOcvXKNQR3GLtN5Fu/+dwjsAm2uPTLn1NqqKSGzlHK
      7KDVimTrIk67iM/lJBpwsrO9xW5d5GvPPM71Dz9EtwdwyBLf/ebzrU3wVxVTq2MPdfLDH/6Q
      7G6e9PIcg+fOEfZ76OpK4fF6aTQa2B02fF4PqysrOH1hgj43qVTqqLv/QDANFcmX4Ac//C3y
      6TS59Xn6zj5OJOilq3vPBvW6gsMh4/N5WVtZwe4NfmKju9GaAR4hcjvrLK/v0N47SFvYBxy/
      Y9BCZpPFtW3aUidoj+3FUVpxgEfIAXSlxvjoKA3Bxblzp3Hb77y+XVlZIZlMPnIOYGh1JkfH
      KBsyj507g8d553dbWVmhvb39jg7Q2gR/xbA53KSiPrbEBLM3P8LuCZDPFxCwCCa6aBS2UBQD
      2eNHV6okk8mj7vIDR5Jd9CSDzFV9LIxfw+YNkM/mQYBAOIlWzaIoKpLTh6HVaW9vv2NbLQf4
      FI1KkbnFFQTRztDpIbRyGbvPh63JzETLMlldWkByB3HbJcLh8APtr2aIJHx2sgUolXWK6cv4
      E12kcyX8monbdfhRX6mVmZtfwhJlhk4OYdSrSC4Pdqm57aJlWawtL4DDj9dpe+A2UHWBZMBF
      ejdPudSgmr2OO9JBOp3HFzDwuh13fb7lAJ/C6Q1gV8v4Tz7N7Oh1TMuO4IB6pUFnZ5KNjTT9
      p84SdB/si6UUNphaLTDYZWNpah6nN0h3d4r19Q2iiQSbK9sEQy40y8aZU0MHzgFzh9toE9wY
      9m78fjf+fJ1EIoDdShJPnWBzaQ7ZG8YuHX5163D78NBA7BhgYfImpiljySb1qkpnR5KNzW1O
      DJ8m7HUeqD2ztsPofIZTfSKTc4s4XH66e7tZX1sn2tbGxsI6obgfRRM4d2b4wDZw+GN0uu1Y
      3m78QS8hf5m2tg7cokoo2UN6bQHRFcBpu3uLLQe4A8WqQshmsFRq8J3H+3njwwUcdpNarX5g
      B7D7kwx1VBgZuUmoLUZX2M7I2Cwet8D09CSRYIrJqSlC/gD1oSHcn9uqWNRrdQzTRJZlbLKM
      JIq4AhFcAH4XAI+dO/eZp/qHT33yZ1VVm7ZBvlwn4baY3i7yzQunePejGWTZolatH9gBBGeU
      syeKXLt2g1B7gtNtbj4YmSYQtDM9PUHA0870xARBX4Dq8DDez30jf80GNhlJErF7Q8QBgp7b
      2sA3ePKTP99JDQYtB/gc3mAYpyQQjUZxCwLW4iwjU2ucGu4lm93B0A+uZlJrRXaLDfoGB3E4
      JBweB+GgCZaGI+wmHArjsPVQ1yUcd1hhFLNbXL42ybMXztGwRNR6HbssEYi2Ucvv4PTHiIZ8
      bK4tUzckOuJBVjfSJBNh0rkKne2JQ2cXewIhBFkiGo3ikW2IO1vcmFpmaOgEuewOhnFwGxhK
      hZ18lb6hIZwuG3aXi0hIQxQN5FCEsC+Ez9VHRQXXHc4qSvk07390k+cuPk5VB01pYLfb8Ifi
      KKUMNk+YeCTA9sYKFQVS7VGWV7foSEbZ2i3R03nnfVDrFOgebGxs0N7e/tAUSp/DaPDOBzc5
      mwry9o0ZTg71Uq6J5LfnKTds2J0yv/2D7/DG66/THvUzNr9GMuKjVNEYfurrpEKu+z4F2t7c
      INbWjiQekQ1MjXfev8qF/gS/+HCMk6eHKOQ1qoVVCiUDu8vBv/yt7/HG66/T3Rbk6tQKqUSQ
      cqlOz/ln6U/4W6dAzdLR0XHUXUC22RBFCYfTicfrRRBFGm4/Do+NQGhPNVavFtmV7fR2d2KZ
      0OYV8Tg//wtvhrb2L4cNECUcDicenxdT0zAULzGHgC8UBfY28Ns5mf6eFFjg9fjxuO6+VGvN
      AI8IExOTnD596nM/P06BsDvZoKUHOAac6O1C1Q0wdUrl6lF350joP9GNohlgGpTKlQM901oC
      PSKMXn0PPDFcTheyaDCWr9LW2UUqGT3qrj00pq5fpi6HcbpcuGWTsd0y8Y4UPZ2JOz7TmgEe
      EXz+IKamkohHWF1dxh/vYWd9+ai79VDx+gNgqERjMdbXV3CHOshsrt71mZYDPCJEojFsdgcu
      p4tI0MfC9DjR9kcjG/SghCIxbLIdj8tJJBRgaXaSSNvdN/CtTfAjiFIrUFZkoiHPsdoEfxqt
      USZftYhH/PfOBrUsC8MwjqCbXyyKomCz2Y6dA3waVVURRRGb7fhu93Rdx7Ks2w4Cn1jlUXQA
      0zS/VHUoj4L9938Uf78HZf/db2cDG4AgCDgcd8+a+yqy7/XHeQYQBOFYLoE+jSiKB4sDGJpK
      Pp+nWm/s/cCyqNVqd23csixqtfqhO6WrCnWl+UStFi0eBNKf//mf//n+X9Ynr/APr15hcuQj
      /JEYi0trTIyPIct2lHIBRdeZnJ4nnoiDqTPy8TUESeZnL71CIuhmeTOHoFWYmZtHcnpZX5xG
      wY7f4/rcB7/10o8pWTZ0TWd3ewNkF7mdDSoNE5/X/UBeTtd1JElCvEuV5d2tFT68OUtvVwcb
      C9NMzs5gOQJcefUXRAdOMHrlIzYzedbXllGLGTI1kUjQe6DPN7UGP335NSSjzszMNK5QO5KS
      4/LVmxTLRW58cBlddqAaIj7PwbIrf516Oc8v33yfoMtifHKGmmEn7LXx3nuX2crkSCbiCIJw
      11lwdOQq03NLtHd0UsrucPWDS+zkq6ytr7GbK5LP7nD5ynUK+SxGLcdWUScW8h+of5ah8uOf
      vULE7+K9t9/EEUnhMOtMjI0wvrDOws2rKJKThgoB7+e/JwdBqRZ5+bVLtIUcfHxjFE1wEfLK
      XP3oChvpPMlEDOC2NvjczujkYxcI1xd47+236Bi+wM5OmnopT8MQEBtZFjazyIE4Pe4Kly69
      TaDjFOgKr7xxiYhbYlQ1ibR38vHVv2VhaYVEzxD/4b/5E5R6DUXTMQyTQDCINxBDKWYwHDoT
      y1lsc3NUGzpOp4vED7/Hw1q0OLwhBH0JAKVeo1Gv0WiouN1ulPwGy7s1utqcbC5Os+KK829+
      +/zBGrYsJkZvItrtDJw8izbyIaZlYegK9XoDh8uNLxggvbODpeu0RQM0lWsmyjjsIvHOPgTL
      JK3qKJUinmgn5czagZo4d/4Cl99/D4BQrA1TcvLk44+hlDOML+6ScJkMnnuS2Su/ZHkjyO//
      q7MH7t7EzRuIDiexZAeyZ55UdG/wUOsKT118lskr75PZSYOmYSZCTdnAEiRcDhuBWCeduQzZ
      ShVBinHm1BDvXp2467OfGRol2c74tfe4uVxgqDdJqqMdt9vN48NdOCIp+k6coLN7gM54iGq5
      jOwO4nXa8Hh9+B0i2bpAIhqmu7eHYCjGYF83Z0/v5WUbho6qaZ/kp9sdDlwuL8FonKDHQar7
      BG2xCMn29ocanPD5/AjsnZaUVZ2BE10Ui1V8bic2T4D2WBilXiUQ6+RcV4CJpa0Dtmwh2R2U
      c2nGRq6SN9wEHFAoFGjvPoGh6Zw9M4zPZjIxMUWpydWgy+NFlkQy6wtcm9mktz2CJdko5TJY
      wsGGkSvvvoE32oFlaFh6BUH2o5QzvHbpOkMDPSxvFejriOKLJHmyP87o3MEcC0Cy26nk0tTL
      GWRfEtPQ0XSDmiHidzo499gZQg6T8bFx8kpzNnC6vcg2kXx6HcsRQq2WaNQrrG5mcd6jLlIr
      DgDUajV2Mzu0d3SSyxWJxiJojQY2p5N6uYgguxAsA7fbRblcxec72BJov21dbVCtqwSCAWw2
      mXIxjy8YBkPHZpcpFkoEQ8Gmq4LXajUEy6BQquDz+ZFsMmq9jM3pRZbuvQnOZnZQDdCUGon2
      FIZhYMMgmy/i8vhw2EScbjf1Wq1pGzjtNlRTxC6aaJaIoWm43S5URcFmlynki4TCofuygcvp
      IJvNEQyH0TQdrVFFcniw2+68CW45wCPOcQ2EfZpWNmiLFnfgCw8PHmVh1/3PPc7BME3T7noK
      dhzYjwTfTtX3UOLjRxWFNE3zWEdAYc8Gd/rlHxcMw8CyrNsOBMd7aGhx7Gk5wB3Ip3dQTYvV
      xTl2dgvs7OygKxU2trOHbqtS2GViagbdtDANlZnpKUrVOvMz09QV5b4UXNVilum5RZRGhYnx
      CYqVOobWYGZ6ionpuabbNXWFmalJ8uU6ywszrKxv37JBjY3tzKHbqxVzjE9Ooxl7Zy5qrUgm
      X2ZhZoqaolIsHUzBddu2y3mmZudRlBoT4+PkyzWwLDZWltjK5O767JGlCF5+5w1Em4NwPMb2
      xgaGJdA7MESpVOPcqf6j6tYeWoPXXnmVb//R7yPKTqanJrC0Gppm8tyL3zx0c5Mz8wx0hJhZ
      y9IflXE6bIxPjFJcX2MtW+bCE4833dWaolHdXWe2lifXkOixSUiync54gMm1ctPtKrUqbaku
      xkdvUs5lOHfxa0xPjqBrJk89/+Kh2xufnuV0T5TxpTTn++KMXH4TPTZMZWGMxZ0ST118oum+
      1uoqamGbOaXCTsmg2yaBqbKwuolkSxO7+OQdn31oM0Ahm2Z5ZZXZ2QV0EyzRTk97mMWldZxu
      J5LLz8fvvUm07c51HB8aspOTAyfAEggEg2CZlApFdNNsai1tIeCQbaiahiQ7CYXDWKbE137z
      BbzUeOfNN6jeuXbTXfH5A0TDPgxbiGfO9TI2PgPAzOwSJ082P5A4fUHW56fpGx7m6a+/wNri
      LKViEc0wEJo4rbcQcNjtqKpKcXuRQkOkUtN59hvfJGJXeOf11yg3GQz0+v1Eo0EU081zTwwx
      Nj6FrqnIdgemefc94EObAYKROMFP3fusKTVKRgfPPX2eja1dOgJBLKVKW+jB5AHdL6F4HIcA
      CwvzJDtSJNsS9HTEmFlY4ezwiUO1lWqLMLGWZ2AwTrlSZmVtg67ubjBN+oZPo80s0exFLvn0
      FkXVRixsZ3Z+jf4TKUqVGr5IHI9dQteaOwEr7W6QLqmENJXNnS0ibR2EIhF6OhPMLC1z9pDO
      1Z2MMTK/w9DQSWx2B996MchSATB0eofOUDdmm74cu7i7Q65qkYy6mZ1fpu9ENzXVJOBxIDru
      ftn4Fx4IsywLRfl8jFtpNHA4f5UAZhoaDdXE7XpwadmqqiJJ0rEOhGmahiAILUHMvQQxD5tP
      f/kBREnG3VwyYIsWTWODvVH6bgVE74cvsu17se/5xzkQpus6giDwCGe83JP9OMDt+GQG2N/c
      Td68hi3Qjk2tkBoc5O4ZJCazs4sMDt55PSgIAk5nc7nu98u+FvY4R0JbS6ADLIH2k6Uss8ar
      r75D39nH0XaWuDE9yZNPPMXIlffpPX2BpdH36ewbZm11g2e+9jQfvv8+a+kyp0+f/FzDXwYM
      wzj2ovj9KPBxToYD7ugAnx0adYsnnrrA4vwchiBzbjjFh1c+olAscGNsmpIqUlydJJPN8v5b
      bxDsOom/iVtIANRGjXK10dSzLVo8KD4jiUSUWJweJ9JxglRbjGRHEkGQ0Q2BEz0pYpEQ586d
      ZWe3wPPf/CbLkzcIxjsY7Os59Ae/9fJPqAk2NEUlvbmGaXOS3VqlWNcJHCLX/G4cRBL5abLp
      TS6/8waFmsrK6jqlSpmp8Uly5SpLC3PU89tkG7YDSyJ31hb44MYManmX+bk5XOEkTpvJqz/5
      R3xt3Vx66Wcokh3NkvA3KYmsFnd56bVLhF0WN8amqGgSUb+dK1c+YmMnRzIRu6ckMrO5zHtX
      x+nv7WJtfpLJqWlqisLH18fxB318fOVDVrcybKytoJYy7FTMA0sid7dWuPTRGEYtz8LcDHKw
      Ha9DYnH0MrOZOuPvvUFNsKPqYtOSyHo5x89+8RaDfSle+vGP6Rg4hV2ymLh2iY2SRDy89/u6
      pyRSECS+9cPf+cz/EG/r/dxDv/d7ez/7nX/9owN3slYpUWuo6LpBPJHAF4jRKGUxHQazG3nk
      5WXKdR2320NHe+KhSSI/TSTejuT0I1eyKN4oSr2MgY3lxQXMWpZ1dxv/5rcvHLg9XyiGTdhC
      azRQlAaaYSEgEg2HsEQ7kbYE+ezuJ5JIqYl8NZvDg9/jYHd3l7Pnz3PjxjSn+jo4e3KAyyMz
      B2rDG4xjF5cByOSKPP74Gd56+yMC0Ribq7PIviRGLc3W1iqr22F+/18dPHLtCcRwSEtoyp4N
      VN1AqxfZyeTRI3EiiTYKuSxoGu2JUFM2kGQXfq8LQRCJhILsH3nE2uKs5u4eCPvM0KgpdbZ3
      dnjjrbfRlDrTH1/izatTZDNpVN3EMg3+4f/9K/6vv/47DnuuItlkHA7HJxtip9uNx+MnHG8j
      6LbT3tVLMh4hnogfXYKSVkR0hIgn2/C4PTQUE6dkEI0lCCW6eKI3zM1DyAHdLhcCoCPQHg2S
      z+dRDQGny44oORgePIHfITA9PU2lySiow+lCEgW8HhcLc3N4/D6q5SKL62nsB4yuudxuBKDR
      qONy2JidXcAfjhAKBdEMkVphG80UCcY6eHo4yfWppQP3z3XLBpol0JmIkM/lKJZrOF1OypUq
      J08OEnaJTE5OUWxSEml3urBJAqLNjsNuA8uk3lBxH+Bc/TOBsNWxy/zs6hqSWSXuFkGEkiox
      PjbK2ae/yZ/86Lvk0uv808uX+K/+7A+blq89LA6tCDMNFMPCIUtUymVcHh9KvYrN4cIydBwO
      O/W6gusely58gmWhaBqyJFKpNfC6nZiIYGgINgeWoSHZJKq1Oh6Pp2l7KoqCXbZRLlfxeD0Y
      poWuNpDsTgTLPNAmWFEUcrtpwvEkjVoNn99HtVzG5fGiNWpgsyNiNWcDVUO2iZSrdXweF4Yl
      YhMtNMNCxEKy2ahWa3i892cDh8OBpipIsoyuG9gkgb1seOtgksjVscvM1kOsjn9Awm+nWK2h
      SV5yuTwXnnmBr18Y5n/5H/57Oh57kR/91jeOZJlyGFqSyJYkEg5xU7yhq+iWiKlr2GUbtXoD
      u8OJptRxur1IIpRLJSxBwu/3PXozwCNIywEO4ACWZVGvH76620E4ysK7mqYd6hToUWQ/Enyc
      B4H9798dT4EEQcDtdmOZCn/5v/+fyJFOAkaNx7/9LZLhKPnMNt5glGpxF4cnQK1SIZ6Ik01v
      8cs33uOP/uD37vjhd0qGe1gc92S4/dqgrUjwQZLhBAmv244iiNRrRa689Qs84RSTV98j1n+B
      9OJ1+jrb+GBkmotPXaTUMCmXmhddtGhx1HxmbWBpNUqqQHZnC0t0cP6xYTZXltAkF4amEE12
      09Ue58TgSbpTSTSlgdlkktXK7BTbudIDeYkHhVqrMDExQa1RY/TGKLuFMquLc2xs77K5uYlW
      L7G2tXvg9ixTZ2Nzm2Jmi4mpGRTNxDQ0xkdvkskVmJ4Yp1Kv35ccEMtiY2MDtV5hbGyM4q3o
      eqOSJ1s8vNRSqZaYmp6h3mgwNTFGvlxnaX6GpbXNPRs0yqxupA/RPZONjS3qlSLjE5Mouoll
      aExNjJErVpmZGKNSb1Ao3MdAessGulJlfGyUfLkOlsXywhzbu/m7PvqZGUC0+/iTP/kjLEFC
      sExsskR373k03cAm7VXXctjtDF+s4/G4OfvYEwgHLL/368zPzsLGJulojFJ5r6pXvVpBtLt4
      9ukLR7LBHhm5hsvtZX1xlvV8g9QJWFpew+bKodYKjKrwm9/+9oHbW1ucY3I1S9iu44l1IIhQ
      z22wlqkQT9ZYmJpis1Dn6fuQA+Yzm1y+eoPH+hIkO04wNT3PM0+eYvTa+9jbn+R07+EuyZue
      nqJ/oI9rIxP0tPuZnZnEshygL1OrVRjX4Ovf+MaB29tYXmB0fh2/bOLz+SjVVIKyhsfrYWZ2
      kuLqIqvZGs88dWfZ4r0o5XZ478p1nhpuJ9rex/T0LBdO95CpaBiZGaIX7hy8/LXdoYDD6WRx
      YR6H00mjlGMzW8Ljdu0FsRwOZsavs7i+c2vf4DnwefCvSyL9wQg+j5+IX6ZU16iU8mRyBRr1
      OkeVuGuYIsMDXWzkDF587iLTNz/A5g5jmQaVchVBMNGNg/euq7cfj0Ni8Mx5eoIiUysZbJ4I
      L3z9SRbm1/nN734LHzVe/8UvqTSZMR6Kd9AW8WNaFjabDdMwAJHBk0NNBRTb4nEW5ufRTIFQ
      NIlWyyGIIlhQrVRBMD8Rth+Ezp5+fE4bpigz3BNnaTOLINoIR+IYqsEL3/s+EbnB66+8TKnJ
      raI/0kZ7LIhpWthsMpZpYHO4ELUq6Wzhrs9+JhcoszLNP/zsTUr1OkI1wy9fe52SKjL28YcY
      kpd4NEAuvcFbl0foSQb5L3/3TwwMDeOw3/2IzTAMnG4PwWCASCSMKIDb7SEciRBNtONAo3vg
      FMmIn2iy87bl1JvBMAxEUTzwKVDA52JxdZveng5WV1fp6h1C0Cr4QnHi8Rjnzw6ztLpNLBI6
      cB90w0AyVbbydXraY2iqxtLSCqmeXkRDI9LWTkPVSXUkm0oDgL1NXmd7gpm5RXpOnMA0Teyy
      hGhz4XHJCIJwYBsYWoN8RWO4v4uV5VXauwYw61mcgQjJtgSPnz3F0uom8Wj4UP3r7mhjeTtP
      f1cSVVNZWlqhI9WNjEa4rZNGQyXV1XFfNujoaGd2do6u3l4s06RWLtHV24//Vrn92x2GfC4Q
      Nl0NsD55BZtg8dyTw7xyaYSKajIwdJZ//f3nmZya5sqVj3ju6fP888tv8Kd/9u9JRgN37NhR
      ngK1JJEtPQAc4hTIF0nS7Xfj5xQdES/XxmZ44ZvfYXFqlFNnT4EgUstv03/6cQZPPcZ/6D/1
      SF6t1OL48Ekg7IsapS3L+uROgIfNfjr0cS8LeJgl0KPIfnnIOy6BHlXdrKIoyLJ8rH/5rSXQ
      ASWRj+I6eX8D/Ci+20HZnwGOsw3uNgN8ZmgsFbIomrF3L1i1RLWxt3RRahXy+TyF8t1vjGzR
      4qvGZ45BZ669zcJWlv/jL/8ej5Wnarm4MTKCUd7moxtjzG1kkQSJWCR4hF0+OIeVRC7NTrKw
      ME+hVGFxeYXtdIZCdoe3L18nl9mmmt0kr9oPLIncXJ7h/evT9HV38Pf/5W8ZPHcWLb/FpSs3
      yeYzfPzuu9QFGwZy05LIcm6Hn/7ibeJegY/HJqkbMiGPyAcfXiOdK5KIRQ41A+wsTTIyt46s
      V7kxtUSlWsNuVnn1vRHSW2s0ijtkqhxYErm9tsA7V0bRyhkW52YwPHGCbjtz1y8xk6kz+s5r
      VCwZzZSalkRWCxn++aU36AjZuXJjgqoKEb+dd9+7zG6+TFt8Lxh4zxmgf3CQl3/8M1549jTv
      Tueob88zPvIBi1tFAN742T8huA/24l9FlpaWsNtEBGeIwa4YNqcPh9Hg4tdfIL22wMRakYGu
      +IHbi7Z14rTB0vQYsmfvqFg3dQxDwzBttHelqBTypDfXOERs6TM4fSEiQQ+GrqNrOppmUMlv
      kSup1O9xx/PtMAQZn6yzvLqJzW5ncWGWqcUtvHbIbi5zYyHDcO/B67eGE5147N7baBsAACAA
      SURBVFCq61w808/q+g5qNUe2UMOwbCS7u6iVCuxuraE3aQOHJ0As5MPUdQx97xI+TBMQWV6+
      u3rtMw7ginbT1d3F97/5LJ3JJKauE0+04/X5CIXC/O6//beszR9MZ/pVpL29HVmW2N1Y5JV3
      rtOeiLBRbNAVcRNOdnNxIM7Hh5AD2uW9/HO724deK1LIFyiWKvjDUSzToq+3i6BbZnZ2rmlJ
      pCzbEQUBRdOIRCKo9Qqm5CEc9NyzMOztEEQJp92O3ePHVOsk29rweV3s5gr445187XQnH40d
      vOz6vg2cksmN6SXiYS/FqorLJVMuVxno6yXslZmZmWk6EmyT7YiiQENVCEWiaI0qNVXHIYu0
      Je/urK1L8j7F/pGtzSahaTqSZEMUBURJwjQMJElE0wxk+YAnKpaFYZpIkvTJZhRA1zRssh3Y
      q9mjaRqy3d50/tN+xFtVVWS7jGWCaeoIog3T0A8liLEsE1XVsNvtaKqKzb7nYL/KqW/OBqIA
      iqbjkGVMBETBwjRBEHjwNpDtWJaJaRiIkg3TNFq3RB5XWoqw1i2RLVrckU+K47YkkY8mLUnk
      r4rj3i4Y+BlJ5BdBSxJ5tLQkkXePBB/fobFFC34tEJZemuRvfvwKk5MzeNwSmujG67z95umd
      X75KW3/fgW7YOKol0GH1APtYhsrM1CS65GJ7dZ6KalEq5HHaTNYzZYJ+z+HasyxWV1cJBoOY
      usrY6Cii3cnS7DROn59aXcHlbDKr1rJYWV3FLllMzczi9IZwyiKzUxOU6jp+n6epZLhGpcjc
      wgLpXIVSdpNcRaFaLuGSYXW7QChwuPqtn7aBodaYmJjEkpyszk1i9wepVWoHL7b1+cZZudX2
      1toKDl8QCYulhVnKdQPfXfQAn/n+NioF8pUGYiPN8qITcSvL/zcxzkB3B7o7QWl7GaOexxZM
      YeS2eOvlf+DDq9P8u//2v6M7/ugEyJbGR8iZbsRCFp/Xz8zCImajwJgm8u3vfefQ7RUym1y9
      MUl3dze13Dob2RrxZJXl2TnSFf2+5ID5zCZXb0zwvRe/Rl+qjcnFVc73hqhYTpSNFTqTsaba
      dXoDOK1FRF+Q7c065NapVIuMqwLf+M7BZaH7lLLbXLk+Tnd3N7qmc2JwiJFrH1La3majoPK1
      Zy821U/Yk0ReuT5GeyLM++99wHd/txu7qLG8tonNUaA9ced7wj43LCTaU7RH3Gzvlinldol1
      9tHWPcTqx6+QHDhLVTHpTEQwLdjeydCWiGOYj9ZJqq6Z9A2dJLO1itsfRkKnVlewSyZ19fCz
      WSjeQeJWhWLZG+M3f+MCS4ubfOe3vo/XqvLKz19q+obEvbZ9uFxOxqYWOT3Ui2UBD+BWmI1s
      hVTcDwiARb2uYLdZ1BT90G0FokmS0b1B0u72MnvzOicfe4bv/PZvE5EbvPzTn1K4D0lkMhpA
      dvro6+kAQFcbeIMxROsQt0TGek7xmLmCwz1MW9iD5Aqws7ZINOqnYYty8bEhznT6KWsSJ7o6
      8Ad9rG3u0pt4dEZ/gL5zjzE9N03f8GNsry/S2d1HKpUilYwxt7qOf6Dn0G2mUil0pYaiGawu
      zjEwPEy93uDU+ScQZ5dw3cceNZVKkd5YxebyUCuXsdsdOPQy/mSq+UaBVFcXos2L36khBttJ
      JNtJtceZXV4nNHi4mzL3+2modTLpNDXsKLUKdc1i6LELGPY5PPcRqkil9t410ZHCLhjUNAi6
      RMRw112fO1AgbE8vYCFJh98ztySRR0tLD/AAboncO0c+vqqqFo8uX3ggDDgySWQrEParQJiu
      H37d/qiwfwp5u9PITySRjyKKohz7S/JUVf3ktszjyoEkkY8q+5HQ48r+ux9nG+xzOxt8Zm2Q
      392hruqsrW1QLeUp1fY2r/VKkUwmw+4n9RstqtXD1538NKXSneuCKrUqimZQr5RRtKMJorU4
      HnwmErxw4z1mV7f5i7/+ZzwUqFlOrnz4IdRzfDw6wdzaLiAQ8Ur8T//j/0xnd4p3L71PW6oH
      p/1wU+yNGyOIhsri+hY2S2VmcR2HqDM1M0elkEVzBskvj3FzYQO3Q6ba0Mmmt9jZWKdY0wgH
      7330elhJZL20y9/84885e/Y0o++9xHpdZnJkhN1CkbnZaUrpNYq688CSyH0WZyYYGblOINmL
      pOZ49c0P8XptvP7Tn1OzJCzR0bQkcml2gusjN1E1jYW5GXJ1iPlsvP7mu6xt7pDqbD9UMlyj
      kudv/v4nnDxzhukrr7GYN1manmAnW2BudppqbpPdunhgSeQ+89PjTE/cxPImkRs7fDgyTbGU
      48obr1I092ShzUoiV+anGBm5QV3VWJyfI1PSiAccvHPpPdK5IsnEnorvnpLIvsFBXv7Jz/nW
      8+e4NJWjvrPA8twYS9t7ksg3X/pn7L4wksNL/+AgNy+/x4WLJ3n19Q/u2cnC7g5Ly8tMz8yh
      36rAsrC6Qdim8ssPxjh/9iSba2uUc+ssbtyq6CvJnD17iukb19jazbO8vMTu7i7VL2jD7vCG
      6emIU81vUVQEBCywYGV5hd2NJWa2q4eSRO7TO3gSjyzSUBV01SASC7K2kaN3sB+lWmJzZalp
      OWDvwEm8MvijKZIRPx6PG7VWJtrZC8bhj5/t7gC9qTYaxTS5molZzrBdUqhUyuS2VxlfyXPy
      EJLIffqHTuN17ZVq3Fiex7S5qFZVugcG0WpltlcX0ZqszNPdN4TfKeEJt5OKB3F73HCrwuzK
      8vJdn/2MAzgjXQyfGua7Lz7DQG8PkigST7QTCgWJxeL84Z/9OzYWZxAEgYBLpK27mzde+4Dz
      T5y+ZycDkTg93d0MDfYjCeDz+Yn4PWwUFZ4cSnF9dBLBJmN3eAgEfDhsEi6Xi/mpaTr6T1Hd
      3US0uwlHImjqFxNX2J8pLNGOSxYpVRq4XTKdXV1EO3p5ZjjJlUPIAfdZmJlEdrqoFotUGxog
      INvtdHUmCXqdLCwuUmuyOO7C7BSiw8ni+DXeH1vG7xBpmCI7qwtY4ucFIPdCFEUEAUzBhtsh
      UTVtJAIuREEg1NbFb5zr4fLI1KHbHbn8BisFHVGr4o12YLP2FGs9XR1E/E7mFxaaloUuzU1j
      2R2sTd3grWszBN0ylZqKy2En1fUAAmFfVVqKsJYiDA6hCNPqJVY3M/dscHZ8hK2tbTKF+9sI
      t2hx1Hxm5zo/+iGvThTxa5ucGDrD3NwS5x8/y8c3p4gmOvBTItOw0x0WuTk6ihgb4kfffuao
      +t6ixX3zGQdIJpP01EJkl6sE7Rb1Sp7l5RUSvafILU/iCjkpZfNsNESiiRTBnu57fsBRFsfd
      n/qOcyRY0zREUXwka78elH1J5O1W+59xAG+sG/fCKN1PPE4y7GGoYpJsT2L3RqiHHThFFVtA
      pTvhwR+KsbiRAZL37MBRbTP2i/4e5yDQvg2O8yCwXxv0dt/DL3wT3MoGPVpa2aB3T4X4TCDs
      i+J2SUhTU1PY7XbsdjumaTEzM0U4HCa7uUIdJy677ZNp27QsyqUSS0vLaI0q0zPT+IJRbJKI
      gPWJh4PALTUIgnAfkkizzvWPx7G7vawtzFBRDAr5LA5RZy1TIXRoSaTJwuIi4XAYQ60xNjqG
      YHexMDV2SxKpNi2JzO5sMLu4itctMzE5h9vnxylLzM1MUWno+LzupiSRlqlw4/oYNqebrZUF
      qqpFPruL02aysl0gHPAdrj3LYmFhzwaW3uDmzVE0S2JldgK7L0i1WsfdpCSykNlkan4Zv8/D
      7PQUyB7cTjvLC7PsFmqEbvX1npLIh0mlUmZ2ehJF0djZyuCL+khvboAAiQEvdmWbK+MZ/A6F
      pbVduk90IFkiAiZbG9sojQ/BAk03CEeCbGTLeJ1unDaLC089fV+3TFZ21klXVFKGRjAUZnJh
      BbOWZVyX+d4PmpFEbjE6OUd/Xx+GaRH0u1leXiCztEy2AU9ffJxb7nto7C4Pjfw0i3qdsiZh
      mBaWobK6sY3DXaU9cbhbIvepZbfYLtZJqgV2ywLk5ilXikxMSHynCVloObfNjYkZ+vv7yK3P
      400Osjp/ldJ2mp2KybPPXGjaBpLDg1Ge5qMraTzBKJVqFb9cZ3JunfbOuy/RH9rC8NdviQTA
      MhBkJ6GAF48/SHcygmR33RoJLLq6OymU6rjtIqYFGHUE2UM4FqVWKWGaJpLdQaq9jVTPAH6p
      imbzId7nkl/2xXnxuYsszExg9wSxoaNoJh67RaV++IhVKN5BLLg3a5iGQay9C62h871/8QN8
      VoVXfv5y05JI3bDo7+ugIQV59vwAMzPzaI0qwXgnotVkdA2wecK88PWnWVpaR7bKZIsVNM3A
      44Ri7fBLWn8kSSJ8a9YQ9mZFQXTx3d/5l/ctiTQMk4HBbra38wwM9rO1uQmWSVtHN7XS3e8J
      PrI9QKVSActk8ubHpKvwwnMXkUUwEWioBgGPHdWQqBTS6Mi4PS4EQ8Ph9qM0ajhsAplCjXDA
      g91uRzFgcfwabUNPEvPtLSea3QPoSpWZ+RWSnV3ktlax+yIIpkpHW5T51TSDffc+/fp11tbW
      SMYj1FWd1ZVVEh3d2FGxORzMzi1z5twZbE04bj6zxWamRGd7jI3NHVJdXViWSXprA9kTpD0e
      aWoPYKh1ZuaXSLSnyG2v4g7GMbUGHckY8yvbDPb1HLqva2trtCei1DWDhdk5Yh3d+GQLm8vF
      9NQ8Z8+fa8oGxd0d1tN5ulLte3bu6EISIZfeQnD46GiL3XEP0NoEP+K0NsGtwlgtWtyRhzIs
      HNUZ9H4a8HE+A99Lbjvet0SKonjHgOgX7gCCINw2CelhYJrmsU+GA459Mpxwq0ZSqzx6ixa/
      xlfSAfLZLF9oZotloarKreDaXnn3/XwSXT+8RNMyDRRVxbJ+lRtlWhaaqn6SqtB0V829G132
      290/09A0Ff1+arJaFqqiYFoWuqZhGOZ92sBEUfZssNe8iWGaD8QG8Kt8n0/bQNc0dOPu7R7Z
      0cDO+jIbuyViQS+aYdJoNKjUFNrbE2xt5fB7bWjIeCSDqi7itpnUdJHTJwe5ee1DXNEk7bEo
      wXCQra001VKRtu5+ktHAffetXkwzPr+MIEdIhUw+nNwk4LTwO0QCXafo6zhcvc0b166gayrx
      wQvExQIfTKzidgpsLyyRHD5Lqqub9khz1fVWFmZYWdvAHwphCTac3jDDqSCX3r+OJMt87ekL
      TbVbyW8zu5qmoek4MSk1NDAUwm4ZZ1s/g11th2rv5sdXMA0Vf/fj9Lf5mLryOruODorTI0QH
      z9GZ6iIVb+72UcvU+cf/56957jvfZX1lGU+0m7MnYlx69zI2h4tn71J79chmgJEbN6jvrpMp
      13n97Ss0KgW6eruZHLuO0+tnfGyKxakxtrIFVFUln9/7r2HuXTrX1x5g5MYEpVKR5dUNStUG
      qtJ4IH1z+KKk4mEatQLvXR1DqRUppNdZydRItR0+slrX4UxfJ+lcEd00wDRAdHNiaAC9XmZz
      eYEmym0CkOrtx20XUVSLzmSMjc0ttEaNYKIT0Wq+FpAn1EZb2E0oGGVwsA9FUSjubrGwVaSr
      /fAFd2uaxWNDPezs5qgWdpiYXaVc0egdHsZQKmyvLtBosrtT1z+gqBjgDNAe9aEoCqZpgWXu
      3Rh5Fx5KLtDtCAV8KKKLaMDH2TMDrK2sUKhbnD1zEr8/RCzsJhDrJOp3Ygo2gn43CDZi0TAY
      KpmiwuPnT7K5uU1bWxuyaOEPRfG6f5VPclhR/D71Uob59RzxRILnnn0aU9cIx9q4eK6fycUt
      kvE7Vxu+HUajzPxmjv7uDgzToqFqhCNR2iIBAsEg6xvbpHq6sTUxHK0uzqFaEtFQgM3tDEOD
      /SDZSK8v4wlEiEXDTd0QU0qv8tH4Mt2pJCtLSwTCMUKRKM+cH2Z8bv3QKRaWUmFmNc3giW5s
      Tj/nhroxbF46Yz6CwTCrq5t09vQgN2GDWHs3Qbcdh11kJ1shFgkjCBaK0sDjCxCLhIHb5wJ9
      aSSR9WoF2enB9gBLMLYkkS1JJNxdEvmlCQ+6PIcrNdKixYPgC3eAo55g7iSEOC5YlvXJOfhx
      556KsC+Ko8wFMgzjWC+B9nOBjuqaqi8D+7lAtztq/UrGAVq0eFAcmQPcT7lu0zDQbnl1ixb3
      w5Ftgq9duUwk0UlPVwfLK6ukurvZWlvB4w/icHpoVLI4fTEMtUY4HGZteR6nJ0gunycc8LGy
      tsLQmQv4nA9+eVMvprk5s0Q4kiCf2UFyuBEtjajPjuKMM5A6XHnEhelxdvNF+s9exEeZa+ML
      hEJ+thYX6Tp1Bo8n+Mn9WYdlZXacnCoz3N/N5Uvv8Nw3v4vDUhi5OQ6yi7MnB5pqVylnuTE5
      TyAcRzAaLKxskoiFaAu6qIhBhnruXQzh0yzNTJDJF+g+eYGArcH83CzZOlDcoX34HG6Xj45E
      qKm+bixMsF2TODnQw5VLb/PUN76Hy2pw/cYols3F42dP3vHZhzYDaKpCvV6nWq1hWWCYQD3H
      62++yXYmzfvvvc/S2ibXrt9gfHSE+cUVJkavM7+0BsDy2ibp9SU2Fie4PjZHtdnI0QFwBeKc
      SAbJl1UuXnwCpV5lY2maazNb9HcePgi0W6xyri/J0uYuhqZQq9X2Svd53Gxv7VAp5mj2nsGG
      oiPoVfKlKrJkw7SgnN9kO1vDsppPL3D4IvR1RsiXGwQdFr3D59hemeOD8RUGuw8XBQZIFyo8
      OdzFwto2Tk8AtaFw/vxZnG4PW1s7VMv5pm1Qa+hIVp18oYLtlg1E2ckTj59Hbdy9juxDcwC1
      UadULlMoFDEBt9eLy+kgHI3htDuJBrxIsgNBcqBXMrT1nkKv7JJI9QLg8XpRVBW7Y+8sV7bZ
      +KKqnVTz2yi2CGZ9lzdfe52Bk6fxRdo52e5ldu3elfN+HQmD7d0Cfo+TYqFA54lBDE3j3LlT
      eEWdyclJSk1KIt3+INGAk7oq4HHZARNJdpNIxKhX7lyC/l7Uixlqgh/UMitbefo6o3hDCc71
      hJla2jp0ezZMNtNZAj4PumFS0wUCLiePnT9LSNaZGJsg3+RZicsbIBHyUKmbeN0OwEJV6rz9
      1lv0Dw7f9dkvrSLMMnUmJmc4efo0zcbGmlaEWRY721uEIhF2dtLIDhc+jwuPx02xWCYQONxy
      RVPqZPJl4pEAhiVRzGcIhONgaMh2mVyuQCQaaUoQrqsNsoUK8ViURq2Kw+WkoehojTKS04fD
      JjanCLMs0jvbBKJxdKWB2+OhVq3eskGJQOBwOVe62iCdLZKIBdFMCUNT8Hg8KI0GssNONpsj
      Go02ZQNDU8jkSiTiMRr1Knani3qtSjFfQHS4iIWDLUnkcaUliWxJIlu0uCMPZVg4qtHHMAxk
      WT7WcsD9SPBxngFgzw63s8FDkUQelfH3s0GP8xJovzbqcXaA/XSY29ng+A6NLVrwFXOA7Y3V
      ewpHtEaVlaUlKuqDiRMYSpVssUo6ncZQa2zuZA/dRrWYY2JqFt20MA2NmckJ8qUK87MzNFSV
      UqXWdP/q5QJzC8vks2nGx0ZZ294FLBZnp1jd3Gm63V9hsbo4x2Y6e8sGdTa2D38UXC/nGZ+c
      RjctLNNgdmqCXLHCwuw0dVWjVK403cNGtcjs/CKq2mB6aoq6qmNZJiuLc2xlcnd99sjmxfGR
      a+AKIjQKlKoKAiZ1VcMSZDwuB/lCHsMw8fiChPxuHILB7MIinT15NKWOw2EjXxV5/rkneO/N
      VwlHY+Syu7h9PkolHU+8A+8DWPncuPwGSuw8je0pNNXga9/49qHbGJ2YYrAjxNRqloS1heBL
      cOPq+1RzBZZ3Cjx14Ynm+zc6zkBPnJ2yB1GrIcpOLKPBxPQCTz13uGjtbTE1bO4gc1PjGLqC
      qRlcfP4bh27m5tgkp3qi3FxIc8KZRXPFGbvxAbX0LnMbOZ5+qjnpJsCNm2MMDXRw/cYssYDA
      9MIGjw20YfeEmJ0cJ/q1Z+/47MOrDbp/S+T03i2RxarCQG+KXLnOifYA6zt5ek+kaEt2Usrt
      EoyniERCCKZKtVKhUi7hDYTJ7+6AKJDLZmjv6kUSwOH2Ixoqdhts72RQ9QcnmT9z5gwCUMhm
      UQwT2XZ4r7IQcDnsKIqKqmo4XG4k2cuzLzyPT6jx9htvUG2yjGdbLMTcwhINVWWnqNAe8WJZ
      El9/4QXmpsaba/TTiHZEtUi4rYtyPkdNM7A1sacyEXA7nTQaDTRVxeFyIwhOnn7xG0QcKu+8
      /mrT9VGTsQhzc4tYsptQMEi9UkS02bHqOaLtdy9j+dBmgGA0QfBTKrqTg70sr29x9uQAG7tl
      XnjuIk63m4Ah4nedQXb7wIjslTg3VXaLNVLhAIZgI7ebob/vBJLDDUDviV4ckgXbuyQ63dhk
      F167dCvf4v4QHR4iAYnA2fOcSMWZnlnk/On+Q7WRSkQYXc4yeDKOaKaYnBqjo/sEkgB9Q6do
      TC00JYeEvRM2h6+NwVSQFboQTJ1ipcLy4jKJ9rvfkHgQLK3G9bE5Bk6eov/UOfq72picW+Dx
      M0OHaqc7GeXa7BYnh///9s60ubHrTMzPXbCvBAmC4Npkk82lpV4lS7bj8WhmbI0zU06qkqqZ
      SqVS+U/5BcmHVCZ2vEiyFltuL5Kl3psrmgABglhIkABI7Ntd86G7ZWmmmxTRC1smnm/8cA8u
      D3DuPcv7vO8CEm7ykWWGxiaRMZk6d566sk4XzxYALBYZ2dHPWMjO1k6R8dFhDvbzLEUSTM8f
      XsH0pVEinwc9JbKnRMIxqkT26HHakIGHyY6eX3TlSaHrOoIgnOoCcZqmneqDQPhzKMTjasV9
      sQZ4XjOhk64Sedp/AJqmdZUW5S+JR1njHqeFyvB8E9iepJRumuapPwmGkz2Nfxl4lBTgyGA4
      TelQLBapNx5KBKZJvfH4avCmaaKq3ZfgUZQnR4hqqopmGGiqgn6Kpy89nj9fyQyXjdzk/127
      zf17N/D09RPfTHM/soYsy7RrJTqqykokxtDQEHvxe/yf39xl2CeR2C4SCvY/UVB53Kvn7t27
      OG0S2d19bJLBVjaP3QLxzS3qB3t0LF4OkiusZ/bxuhy0FI1apcR+fpeGauJxOY/857qtEvkF
      psatGzfJFUpsZ9Mo1QLFtki/73hVImNrS8Tjcay+EE4L/OGjd3EFR/ns4w/RJCuqIeFxdlcl
      MhFdYyO2QaPdJpVM0jEt+J0Sn312g91CiXAo+HT1AXSFaCzK57cWqZQP0BoH7NUMBvzHqxIZ
      jywTj8cQPSHcNoFPP3oHe+gMN3/zK9qSDUUFr9vR1S0mNyLEYzEkzwCb9z6lYQvQ55C4fv0G
      u/tlhgYfWHyPmwn8m16Ze/UKV+ZH+dMf/0BNk9nby3P3xud8/MkNfv2L/8vHH/2KSDKPy2HD
      Ybfx4bVPyERukio+/k3xiHarQaVS4eDgz+pbJBrH0trno0/vMhoeJL2ZoLAdJ5F9WNhMEBkb
      G2b51g3Su/vEovfZTCSpVLo3nY6FIHP+/CyVSoVcaoN7m4WulMhSvc2F6WHSuSImJh6XC0Ow
      4Ovro1goUj7Id60Dnp1dwO+0srmxgWCxoHQUOo0qroFhlFatu0a/jGTFa9E59+oVCtkEt9a3
      u1Ii92strs6fIZnZA0w8bhe6KePt62O/UKRSKqB32QeTM/MEPHbq5TyFgxqqZmCaBq1mi2bj
      8DCTrwwAyWJj7fanrKRqzE8NMzoSxuV2c2V+AufABDMz0wyPTTEy6MfhDdColvA7JIpNk4Dn
      iCeYaWJ8KTeL1WrDZbOwW2kzORQgltiirWpYbTYkWUISH8xb08lNAkOjlHfTKIbEUDjMwf7x
      43G6wlBIZfPYrBK+4AivjvmIdKkDpnJF/G47uiHhctoQJRvz8zN4LAbR9WjXp6Cx5dsUVStT
      4yP4vG7qtRqmKFE9KGAKz2btk96rMhkO4A6EuTI9yEo8c+w2LIJBMrtHn8+Jqgu4XHYEQWbh
      /Bx9NpP7kXUqXXpTm5F77DREnLKAzSpTq1ZpNRo4vH2IRyTS7xlhR1CvlpFsTgTTwG630Wg0
      cbmONwXS1A6Vegu/x4WBiKmrSBY7hqYgWWRq1Tpen7crHbBeLdPqqHh9fpqNOl6vF03XUVpN
      JJsTiyQ89SK43W5js9vptNtd94GuKZSrDfp8bjRDRDBUBIsdU1OQLRaq1VrXfdCoVWi2Fby+
      PmTBwBBEDN1AU1oIFjtWWfp6SqSutinVOgwEDvc9M8kN3H2DiLINn/vw6t7f9AHwTaenRB6u
      RH6lV2J3/8iv16qMOesMT86xGd/k8uULLK5EGAhP4DYqFNoWgtYW2c8/QwzO8p9+8OYL+0d6
      9HjWfGUAhMNhplr97CYWmaHJQSHHWkTGGhgjvRFhOOBkJ19HcQv0D47RNzX5tT7kpOJQDMNA
      luVT/QZ4VB3xNL8BgK/3BnAGwmgri8zPzeHxORmdmCI8HMbiDdG0G9iEDi3Jx0TIRSAYZjO3
      DWdDh37wSZ5CiqJ46qdAkiSd+pNgwzC+OBT91/SiQf/C6UWDvqTRoIlEnGq1+pW/AUr5bUqN
      f7torlarxOMJ8rltlpfuUW2+gIW11iGytsbi6n1yuRxqu0Ymd3wdsHaQZ3k1gqqb6EqLtdUV
      Dip1opE1mu02lerhZyiHtl0qsra+gW6Y5Hd30AzANB/ogPnDdcCjKOX3aGk6pqGRyebI5XJo
      nTrpnfyx26qXiyytrKHoJobWIbK6wn65TiyySqPdoVzp/syiUdln9X6UTrvJ2uoqjbYKpkly
      Y53U9uFa6IlNDIvFItVymU67zc5OAafPRia1hWBoDExfQW61ub6yg8+us1usMTw6iNZRURUX
      G9E4rVYTTTUBHafbRW6/hs/jwyGbXLpyFfFZpE2UbUyN9nM7VmR/dRFFMfn+D94+djOr6xvM
      jQW4ny4y3S8xOj7O3TvXqeWLpPfrvPn6k6sYHkVb1WgUsuwG/Pz+19f41Pd+TAAAD4ZJREFU
      j//lvyLTJpHKYbEW6e+2ba3Nbz/8iH/3n/+JVHyV6HYZt6yiqQbf7UILXYlEuTA1yHJil1fC
      NoYnpli8c51Gfo/NvSrffvP17u4TaHVUlFKOtNODTTbY2MrxyoSffE1F2Y0xPPjkjZoTUyIB
      lFYDRbAR8DpxePsYH/SDxYHH48I0VEbGxqhUGqitBs2OAkYHJAcDoUGKe7voapumajI+PMTw
      +DRWtURDlZ7Nj/8hy8tRLl9eoFquoJsG3cwXTQRsFguKquJw+9iKRjh/+dt8/4d/i4cGH3/0
      IfUuw6rcbi+hQR+1JsxMjgIPUjHaXB6MpymKIds5PzuNqTaIZ/J0mjXq1SqaYXRVo9lEwGa1
      PFBC3X4ysRVmL3yLv3r77+m3dvj4g/e7zo/qcnsZGuqnWmsTDA7SqBxgGgaiJMER39iJKZFn
      z06DaZCIRsi2db53dQanLOAfNunoCg7vICMOC07hDG1NwB/oQ1DbuPqCBPxu7BaB3YMGwT43
      LqeLCQfkanaGznSXDvxJ9IXCOCWRhQuXmRwdZD2xxYX5s8dq48xwkJV0idm5EDvpJPtNk2Cn
      jVXUmT1/AW09gbXLR1GpuEupLXF23I9NDSOj0dREfHYROTDSXaMP8Q+GcDq8/OM//IhoNArA
      1NgQkcQWF88fr5+nRkPc2dhjYX6BXHaLvZpGn9LGlA2mz1+kbaxj63KpVtnfo1AzCAetbKZ3
      mTozSlMXkLUGfQOHJwY44UWwSbNeB9mK095dMNiXaTabOBzOL4Lyeovg3iIYXuoqkQJO9/Gi
      Cg/D6Tw6QrRHjy/zQqpEnqQQ86TiaKeFR31/2vvgSb+DF/IGOEkl0jCMUz0FehQLdJoHwKNY
      oMc9iE+vLNujB9/QAdBqNrvajuzR41/zFSXyefE4JbKyn2czs4OpKTSbDQqFAtlsDlkWSSaz
      dNo1iuUGnUaZXLGM2qyQK1YI9Pm5+cnvKbdUZOFBqot8ochOJoVgdeG0W7/yuc9CiczuFcmm
      t2iV9jhQ5GMrkfeX75KIbyD7QjitJh+/+zPcoXE+/fB9OqIF3ZS7ViJTG/dZWbuP0mkSi8Wp
      qxIBl8jn129TrjUI9geeTok0VG7euEWuUCKdSqJUi+Qb5rGVyOjqIpvxGKYriMcu8rv3fooj
      PMXnH75DU7Ci6kLXSmQmEWV1LUJHVdhMJKi0DQZ8Tu7cvk1md5/hoQdVPb+WEvm8aNQqFAoF
      crlddBNu3rxJLZ+l1Gjxy19do76fIzgU4t7t6+jI3Lm9RDIWYTOVoVKpks1mqVSqmCbIdicj
      ARvXb96jVq+yHttgZ7dIo3l4RcBj81CJrNXq7GUSrKYPulIiqy2VSzOjZHb3ERAIDvSDaCMY
      DlEpHbCf3+laB5yYnsUmaGzn8py/cIH9vV1MXQPJQmor2V2jX0KrFdg+aKIoHQo7W9yL73al
      RJYbHa4uTJLefhBGMRgcwMDCwFCYarlEqZDrug/GpmZwSgaOvjBnwv0IgoggWViYn6F2RNbp
      FzYALFYbTqcLt9uNCIyNjSLb3ajNGufnJskfVIltxAmNjOD2eBkdDuELBAmHBuk0a/j7g3Sa
      dXQTLKJJIr3H2TOjJDaTOF0egv1+KuXKs71pQyGRzGK3yvhDY1yaDLC80Z0OGEvtEvDYUXQB
      u82CKFmZOXsGr018+OTu7hZTm3E8fi8iIvFYDJfXi6ILyOgMBA+P1P06SE4foYAXQ1Px9A/z
      +myYe+tbx27HJpmsb2YZ8LvoqCY2mwVBkJk5d5aAQyQajVHtMrwrnUzg9PvIRFf5fHmT8ICP
      Rr3KZmoHm/XwDZCXRonczSTxDI7j6vY48DE8CyOs3WoiylYETCwWmU5HwWY73nTF0DWabQWn
      3YqBCIaOKFswdQ1Rkmi329gdjq50QEPXaHVUnI4HqqLT6UQ3DHRVQbbaMJ9BhRil0wZRfvo+
      aHVwOe3opoBg6gjSn/ug1WrjcD5FH7QVrBaJdkfBarUhSiK6qiDKVkThyT7ASzMAngc9JbKn
      REKvSmSPHk/khTwWekrkydFTIg9PjfhCqkT2lMiTo6dEHq5E9qZAPU41JzYAYrFo19e2GnUS
      8ShN5fnFt+xlMrQNE6VRYne/RjabRWmU2do+vg5YLuS4t7SCopkYapuVpUX2KzXWlhapNZuU
      Kt1XSDzI77C8EqFZr7K6FqHRVjENnWhklfQROuBh6EqT1eUl8qUqG+trJDM7ZLNZ1FaVrczu
      sdur7u9xd3GZjvZgz6VdLbJTKBNZvke12eag1H26y3Ixx9LyGs1GndXVNeotBTCJRVZIZQ+/
      1xObGG6nEmynUwSCQZqtNg6Hm4NCDkWH/tAozWIS1+A0RrvGt771Gh+8+3PCIxNkUgn8g2Po
      pkpw9Hi1ur42aotrv/4tb//3/0bqzp9oBS7Q3F5mURH5wY/+/tjN3d9IsjDRz/10gbmQHbfL
      xvr6GsVkkp1Km+88hQ5oSlYCFoXffnqd77zxOovL93nz8jkGRyZYWbrHULC7vE1KR+HMzAx3
      b91m4ZWLRFaXUNp1lhX46x/+8NjtrUUTXJoOsRzP8dpsmDt/uoY+dJ5qdI30fovvfudbXd0n
      gC5YCLtNPv79J7zx7e+ytLzKd15bYH0jyaXXBw+99sSUSKc3wNRwP1upDKpuUsxlEZw+FF3i
      ILWMZ3iBUmoJR9+DU8e+wTCtepmA10652sJ4nru3FgcL56YAWJhfQADq9SaSaKB0UXjPBGRR
      RNN1BEkmODSCrsAP/vFHeGjwwXvvdZ0b1GWTSZUU3rgwy1Y8SlvVkCw2itkEo1Nz3TUK2N0e
      YsuLzF98jXoxQ2jsLK16E1E0uqrCaQKyJKHpOuVcgrpuo97Q+Lsf/5h+S5sPfvkO5S53y90O
      K7Fcne++9irpxDrNjoaJxPffeov05sah156YEnnu3DlsssjfTMyRy2YZuXyJ7UwW19QkNlHH
      7evndmGLsxPDAMyem0U0VfL7FSbdXqxWGYfl+Y3f4MgIdgEkh49wv0jw4hXOjAyynkzxytzx
      lMipsSHWsiXm5sI02222ttJMz55DaXeYv3gF1hPYu/wm4rF1nE4XpmABycbVCzPsF3bJ5MtM
      uAaObuAJVAs71FSRTq1IIlNgfNLD/IVLnBkbYn0zjX/+eG/f6Ylh7iYKnJ+fR5Rt/N1bAVIV
      UFptZi9eRZWiOLvcLNyMreN0u9BNCVGy8NrFGWr1JtuZFCPjU4de+/LmBTJNFE3D+hRbqD0l
      sqdEwkuaF+hIBOGpfvw9enwd/uKVSONhLMxpxTAMRFE81UZYT4k8xVOgnhLZUyJ79Hgi36gB
      oCodjnqQaUqLSqWG1sV2ZY/Tx4kpkYVclszePoLaJJHawVSbxJNbFItFFFUnmYyzt1ekUm+h
      dlq0G1VufPYJsstPeiuJJAkkktsMBPvZjK7RaHVIp7ZAEEjGN3EODGITeTolUu9w4+Ydkpkc
      2fQWjf0cZc16bCVy7d4tNhMbiJ4QLqvJ+z/7F7zhCf7w/ru0BAlDsHatRJqGzi9/8hP8gyEW
      b/yRYsfGoNfCnbv32MrkGBkeejolEvjjtd+AxcXayhLtcp5CSzi2EhlZukNyM4buCOJ1iHz0
      s/+Nc2SGP/3q59RMGd2UulYiTdPgvZ/+C95QmLVbn7JTFxgJevnDtWuIdtcXFUVPNBaoWt5n
      e2eHZDKNbkJ8K8PM5DjRRIphL3x2cwmv1w6Sk9jaMi3DSqNZp7CbJZvJsptNY3H6SEZXUbUO
      q8v3kJ0BRAEKpSpKbZ9aucjS8jLl+jNac0g2rl5+BUkUKW4nWd+pdqVENlSTS+fG2c4fIIgS
      E2MjiLKDkYlxmtUK+Z1M1zrg1kYEm9uPpy8IspOLs2NIVicXX5lDkp/FLpqGy+1jezvL/m6a
      ldQ+s10okfWOzmsLZx9m1xaZGB9FEKyEJyZo1ysUclm0LvsgE7+P7PDi8vWjCTauLExi6hpu
      n49sJnvotS9sALg8fgaDQUZGwohAv8/F/Y1NBvwuNnNVps6M4HS48LgceH0+vG4Xfr8Pj8eD
      TX5QZrPP5yEQDIEJg6Eh3E4bAuDz+UCUsNpsuFxufF4P8jPIkGuqTX7y018SCg/TNzTO1elB
      7t4/vmdrFXRW4lkGPDbaqoksiwiihTPjw/icFhKJBI0ulUib04PSrNCol8HiRjJ1ygcFfv6L
      9xkMHR4G8LUwTCTZgiiALzjCmwuj3FqNH7sZu2SwuJ4k1OeipejIsgSCxNTkOAG3lXg83vVp
      uNXhRuvUadQrIDuQMag1Wsiy5Ym1qx/RM8IOwTRNNFUFUUQSRURRQNePv6tkGgaabiDLIiYC
      mCaCIGKaD7ZodV1HkuWudEDgi61e0zQRBQHdMB5khhbFh5/1dEaYrmkgigjQfR+YBpr24vrA
      ME1MwwBRxHwYDt1TIk8hPSWyp0T26PFEZHjwlG61nnFOnYecZHLaRyP/tB8CPZoanFZ0XX/i
      ///yBsM9A3rBcL1gOPimBsP16PEC+OpBmGly484Kv7sdxbC6CPc9ueCEprT400qGIbfE/3zn
      E25Fd5iaGMZhebCyL9WaOGwPRtytuxE8/f3YpBcblKZpGpIkHXkItL65TcDvpVGtsJjI0dfn
      w+g0SBWb5HZ2aWhQLlexCjqpYpN+7xEHNqZJZu8AhyywHNvG5XGykchgylbcdpl0do+9apvy
      /gE11aRWreP1OLveAamUK3SQsGIQTRcZ8LsBk8zuAW6H7Ugpfie3RzJfpd/vplatsb6Zpa5L
      2I0OVU2msLfHXqVNs9FEwiBZaDBwVB8Amd19XFaRpWgGp8dNYjODLlrwOCxkt/PkKi2q5TLl
      tk691niqPiiVSmiiFQv6F32wvbNHulDF73EhCo8/CPvK1oDWrBApaLx1+SzFepP/8b/e5dXZ
      Myyvb3HxwjSfL6bw+T0EpA6Fcp2Lb7yJze1lst/B8PwF3vngGuWWwcKon2zHhketUMaBW9S5
      evnlfNlkMtvciu0wOzlCXTUYcwvEdyvs3F8hOL1AONhPJJahWirSwM4/v320vpjJbnNzs8SQ
      S+bSXIiff3iLt966wkZym8DcEOmSgqkcUKnUQLIyM32m6y9e7bR55/eL/Pjff497S6sU8TB3
      BlJbKe5mWvzDG0ef2C7HMgwNhxEFAZ/PSyu+zbTPxs8+us7bf32JT1ZSnJ8ZJ3p/k7Ju4Z/e
      Plpf3NnJ8fn6HqM+G1dfGeEn733O9/72DRLJFCH3GIl8A9HsUK/WMASZycmJrvtAaTX5xe+W
      +ef/8FfcWVyjJHiYO2OyvJFheCSM/GA3+LH8f1Me5Jx5FrX3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table.Income, Simple Mode' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Table.Purpose, Mode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table.Purpose, Income' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
