<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='PerTripTravelTime Extract' inline='true' name='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PerTripTravelTime Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tdeleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='M:/Application/Model One/RTP2021/Horizon_Round2/D4_FreeShortTrips/D4_ShortTrip_Summaries/PerTripTravelTime.tde' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tdeleaf' name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_mode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trip_mode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>20</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_purpose</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tour_purpose]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_purpose</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1527</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_participants</remote-name>
            <remote-type>5</remote-type>
            <local-name>[num_participants]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>num_participants</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1545</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trvlTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trvlTime]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trvlTime</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2002</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_fail</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>time_fail</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>129</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[pcto:sum:freq:qk]&quot;' value='Share' />
        </aliases>
      </column>
      <column caption='Simple Travel Mode' datatype='string' name='[Calculation_0180919155350154]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [trip_mode] &lt;=6 THEN&#13;&#10; &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10; &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10; &apos;Bicycle&apos;&#13;&#10;ELSE &#13;&#10; &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Tour Category' datatype='string' name='[Calculation_1210919154721266]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Calculation_2800919154031518]&#13;&#10;WHEN &apos;At work&apos; THEN &apos;At work&apos;&#13;&#10;WHEN &apos;Work&apos;    THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;College&apos; THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;School&apos;  THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;Eat out&apos; THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Escort&apos;  THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Shopping&apos; THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Social&apos;   THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Other&apos;    THEN &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Detail' datatype='string' name='[Calculation_1500919153120996]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [trip_mode]=1 Or [trip_mode]=3 Or [trip_mode]=5 THEN&#13;&#10; &apos;-- free&apos;&#13;&#10;ELSEIF [trip_mode]=2 Or [trip_mode]=4 Or [trip_mode]=6 THEN&#13;&#10; &apos;-- pay&apos;&#13;&#10;ELSEIF [trip_mode]=9 Or [trip_mode]=14 THEN&#13;&#10; &apos;-- local bus&apos;&#13;&#10;ELSEIF [trip_mode]=10 or [trip_mode]=15 THEN&#13;&#10; &apos;-- light rail/ferry&apos;&#13;&#10;ELSEIF [trip_mode]=11 or [trip_mode]=16 THEN&#13;&#10; &apos;-- express bus&apos;&#13;&#10;ELSEIF [trip_mode]=12 or [trip_mode]=17 THEN&#13;&#10; &apos;-- heavy rail&apos;&#13;&#10;ELSEIF [trip_mode]=13 or [trip_mode]=18 THEN&#13;&#10; &apos;-- commuter rail&apos;&#13;&#10;ELSE&#13;&#10; &apos;&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Tour Purpose' datatype='string' name='[Calculation_2800919154031518]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [tour_purpose]&#13;&#10;WHEN &apos;atwork_business&apos; THEN &apos;At work&apos;&#13;&#10;WHEN &apos;atwork_eat&apos;      THEN &apos;At work&apos;&#13;&#10;WHEN &apos;atwork_maint&apos;    THEN &apos;At work&apos;&#13;&#10;WHEN &apos;eatout&apos;          THEN &apos;Eat out&apos;&#13;&#10;WHEN &apos;escort_kids&apos;     THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;escort_no kids&apos;  THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;othdiscr&apos;        THEN &apos;Other&apos;&#13;&#10;WHEN &apos;othmaint&apos;        THEN &apos;Other&apos;&#13;&#10;WHEN &apos;school_grade&apos;    THEN &apos;School&apos;&#13;&#10;WHEN &apos;school_high&apos;     THEN &apos;School&apos;&#13;&#10;WHEN &apos;shopping&apos;        THEN &apos;Shopping&apos;&#13;&#10;WHEN &apos;social&apos;          THEN &apos;Social&apos;&#13;&#10;WHEN &apos;university&apos;      THEN &apos;College&apos;&#13;&#10;WHEN &apos;work_high&apos;       THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_low&apos;        THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_med&apos;        THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_very high&apos;  THEN &apos;Work&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average Travel Time per trip' datatype='real' name='[Calculation_3100919153931806]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([trvlTime]*[freq])/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='Travel Mode' datatype='string' name='[Calculation_7130919152735054]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [trip_mode] &#13;&#10;WHEN 1 THEN &apos;Drive alone&apos;&#13;&#10;WHEN 2 THEN &apos;Drive alone&apos;&#13;&#10;WHEN 3 THEN &apos;Shared ride 2&apos;&#13;&#10;WHEN 4 THEN &apos;Shared ride 2&apos;&#13;&#10;WHEN 5 THEN &apos;Shared ride 3+&apos;&#13;&#10;WHEN 6 THEN &apos;Shared ride 3+&apos;&#13;&#10;WHEN 7 THEN &apos;Walk&apos;&#13;&#10;WHEN 8 THEN &apos;Bicycle&apos;&#13;&#10;WHEN 9 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 10 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 11 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 12 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 13 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 14 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 15 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 16 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 17 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 18 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 19 THEN &apos;Taxi/TNC&apos;&#13;&#10;WHEN 20 THEN &apos;Taxi/TNC&apos;&#13;&#10;WHEN 21 THEN &apos;Taxi/TNC&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='real' name='[incQ]' role='dimension' type='ordinal' />
      <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[trip_mode]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_1500919153120996]' derivation='None' name='[none:Calculation_1500919153120996:nk]' pivot='key' type='nominal' />
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.517647' measure-ordering='alphabetic' measure-percentage='0.482353' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Calculation_1500919153120996:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;&quot;</bucket>
            <bucket>&quot;-- local bus&quot;</bucket>
            <bucket>&quot;-- light rail/ferry&quot;</bucket>
            <bucket>&quot;-- express bus&quot;</bucket>
            <bucket>&quot;-- heavy rail&quot;</bucket>
            <bucket>&quot;-- commuter rail&quot;</bucket>
            <bucket>&quot;-- free&quot;</bucket>
            <bucket>&quot;-- pay&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Table.Income, Detailed Mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial Narrow' fontsize='18' italic='true'>Average Per Trip Travel Time by Household Income ($2000) and Detailed Travel Mode - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PerTripTravelTime Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde'>
            <column caption='Detail' datatype='string' name='[Calculation_1500919153120996]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]=1 Or [trip_mode]=3 Or [trip_mode]=5 THEN&#13;&#10; &apos;-- free&apos;&#13;&#10;ELSEIF [trip_mode]=2 Or [trip_mode]=4 Or [trip_mode]=6 THEN&#13;&#10; &apos;-- pay&apos;&#13;&#10;ELSEIF [trip_mode]=9 Or [trip_mode]=14 THEN&#13;&#10; &apos;-- local bus&apos;&#13;&#10;ELSEIF [trip_mode]=10 or [trip_mode]=15 THEN&#13;&#10; &apos;-- light rail/ferry&apos;&#13;&#10;ELSEIF [trip_mode]=11 or [trip_mode]=16 THEN&#13;&#10; &apos;-- express bus&apos;&#13;&#10;ELSEIF [trip_mode]=12 or [trip_mode]=17 THEN&#13;&#10; &apos;-- heavy rail&apos;&#13;&#10;ELSEIF [trip_mode]=13 or [trip_mode]=18 THEN&#13;&#10; &apos;-- commuter rail&apos;&#13;&#10;ELSE&#13;&#10; &apos;&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Time per trip' datatype='real' name='[Calculation_3100919153931806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([trvlTime]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Travel Mode' datatype='string' name='[Calculation_7130919152735054]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [trip_mode] &#13;&#10;WHEN 1 THEN &apos;Drive alone&apos;&#13;&#10;WHEN 2 THEN &apos;Drive alone&apos;&#13;&#10;WHEN 3 THEN &apos;Shared ride 2&apos;&#13;&#10;WHEN 4 THEN &apos;Shared ride 2&apos;&#13;&#10;WHEN 5 THEN &apos;Shared ride 3+&apos;&#13;&#10;WHEN 6 THEN &apos;Shared ride 3+&apos;&#13;&#10;WHEN 7 THEN &apos;Walk&apos;&#13;&#10;WHEN 8 THEN &apos;Bicycle&apos;&#13;&#10;WHEN 9 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 10 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 11 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 12 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 13 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 14 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 15 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 16 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 17 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 18 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 19 THEN &apos;Taxi/TNC&apos;&#13;&#10;WHEN 20 THEN &apos;Taxi/TNC&apos;&#13;&#10;WHEN 21 THEN &apos;Taxi/TNC&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1500919153120996]' derivation='None' name='[none:Calculation_1500919153120996:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7130919152735054]' derivation='None' name='[none:Calculation_7130919152735054:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[trip_mode]' role='dimension' type='ordinal' />
            <column datatype='real' name='[trvlTime]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3100919153931806]' derivation='User' name='[usr:Calculation_3100919153931806:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Drive alone&quot;</bucket>
              <bucket>&quot;Shared ride 2&quot;</bucket>
              <bucket>&quot;Shared ride 3+&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Walk to transit&quot;</bucket>
              <bucket>&quot;Drive to transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='99' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='81' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]' value='35' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[sum:freq:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='32' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]' value='92' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]' value='124' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='84' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[pcto:sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Income, Simple Mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Per Trip Travel Time by Household Income ($2000) and Simple Travel Mode - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PerTripTravelTime Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_0180919155350154]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode] &lt;=6 THEN&#13;&#10; &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10; &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10; &apos;Bicycle&apos;&#13;&#10;ELSE &#13;&#10; &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Time per trip' datatype='real' name='[Calculation_3100919153931806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([trvlTime]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_0180919155350154]' derivation='None' name='[none:Calculation_0180919155350154:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[trip_mode]' role='dimension' type='ordinal' />
            <column datatype='real' name='[trvlTime]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3100919153931806]' derivation='User' name='[usr:Calculation_3100919153931806:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='99' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='96' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_0180919155350154:nk]' value='40' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[sum:freq:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='48' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='84' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_0180919155350154:nk]' value='96' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_0180919155350154:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[pcto:sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_0180919155350154:nk]</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Purpose, Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Per Trip Travel Time by Household Income ($2000) and Tour Purpose - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PerTripTravelTime Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde'>
            <column caption='Tour Category' datatype='string' name='[Calculation_1210919154721266]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Calculation_2800919154031518]&#13;&#10;WHEN &apos;At work&apos; THEN &apos;At work&apos;&#13;&#10;WHEN &apos;Work&apos;    THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;College&apos; THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;School&apos;  THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;Eat out&apos; THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Escort&apos;  THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Shopping&apos; THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Social&apos;   THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Other&apos;    THEN &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_2800919154031518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [tour_purpose]&#13;&#10;WHEN &apos;atwork_business&apos; THEN &apos;At work&apos;&#13;&#10;WHEN &apos;atwork_eat&apos;      THEN &apos;At work&apos;&#13;&#10;WHEN &apos;atwork_maint&apos;    THEN &apos;At work&apos;&#13;&#10;WHEN &apos;eatout&apos;          THEN &apos;Eat out&apos;&#13;&#10;WHEN &apos;escort_kids&apos;     THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;escort_no kids&apos;  THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;othdiscr&apos;        THEN &apos;Other&apos;&#13;&#10;WHEN &apos;othmaint&apos;        THEN &apos;Other&apos;&#13;&#10;WHEN &apos;school_grade&apos;    THEN &apos;School&apos;&#13;&#10;WHEN &apos;school_high&apos;     THEN &apos;School&apos;&#13;&#10;WHEN &apos;shopping&apos;        THEN &apos;Shopping&apos;&#13;&#10;WHEN &apos;social&apos;          THEN &apos;Social&apos;&#13;&#10;WHEN &apos;university&apos;      THEN &apos;College&apos;&#13;&#10;WHEN &apos;work_high&apos;       THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_low&apos;        THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_med&apos;        THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_very high&apos;  THEN &apos;Work&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Time per trip' datatype='real' name='[Calculation_3100919153931806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([trvlTime]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1210919154721266]' derivation='None' name='[none:Calculation_1210919154721266:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2800919154031518]' derivation='None' name='[none:Calculation_2800919154031518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[tour_purpose]' role='dimension' type='nominal' />
            <column datatype='real' name='[trvlTime]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3100919153931806]' derivation='User' name='[usr:Calculation_3100919153931806:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mandatory&quot;</bucket>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Non-mandatory&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Work&quot;</bucket>
              <bucket>&quot;College&quot;</bucket>
              <bucket>&quot;Eat out&quot;</bucket>
              <bucket>&quot;Escort&quot;</bucket>
              <bucket>&quot;School&quot;</bucket>
              <bucket>&quot;Shopping&quot;</bucket>
              <bucket>&quot;Social&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='146' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]' value='34' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='64' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='116' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names] / ([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]))</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table.Purpose, Mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Per Trip Travel Time Tour Purpose and Detailed Travel Mode - </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PerTripTravelTime Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde'>
            <column caption='Tour Category' datatype='string' name='[Calculation_1210919154721266]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Calculation_2800919154031518]&#13;&#10;WHEN &apos;At work&apos; THEN &apos;At work&apos;&#13;&#10;WHEN &apos;Work&apos;    THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;College&apos; THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;School&apos;  THEN &apos;Mandatory&apos;&#13;&#10;WHEN &apos;Eat out&apos; THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Escort&apos;  THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Shopping&apos; THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Social&apos;   THEN &apos;Non-mandatory&apos;&#13;&#10;WHEN &apos;Other&apos;    THEN &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Detail' datatype='string' name='[Calculation_1500919153120996]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]=1 Or [trip_mode]=3 Or [trip_mode]=5 THEN&#13;&#10; &apos;-- free&apos;&#13;&#10;ELSEIF [trip_mode]=2 Or [trip_mode]=4 Or [trip_mode]=6 THEN&#13;&#10; &apos;-- pay&apos;&#13;&#10;ELSEIF [trip_mode]=9 Or [trip_mode]=14 THEN&#13;&#10; &apos;-- local bus&apos;&#13;&#10;ELSEIF [trip_mode]=10 or [trip_mode]=15 THEN&#13;&#10; &apos;-- light rail/ferry&apos;&#13;&#10;ELSEIF [trip_mode]=11 or [trip_mode]=16 THEN&#13;&#10; &apos;-- express bus&apos;&#13;&#10;ELSEIF [trip_mode]=12 or [trip_mode]=17 THEN&#13;&#10; &apos;-- heavy rail&apos;&#13;&#10;ELSEIF [trip_mode]=13 or [trip_mode]=18 THEN&#13;&#10; &apos;-- commuter rail&apos;&#13;&#10;ELSE&#13;&#10; &apos;&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_2800919154031518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [tour_purpose]&#13;&#10;WHEN &apos;atwork_business&apos; THEN &apos;At work&apos;&#13;&#10;WHEN &apos;atwork_eat&apos;      THEN &apos;At work&apos;&#13;&#10;WHEN &apos;atwork_maint&apos;    THEN &apos;At work&apos;&#13;&#10;WHEN &apos;eatout&apos;          THEN &apos;Eat out&apos;&#13;&#10;WHEN &apos;escort_kids&apos;     THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;escort_no kids&apos;  THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;othdiscr&apos;        THEN &apos;Other&apos;&#13;&#10;WHEN &apos;othmaint&apos;        THEN &apos;Other&apos;&#13;&#10;WHEN &apos;school_grade&apos;    THEN &apos;School&apos;&#13;&#10;WHEN &apos;school_high&apos;     THEN &apos;School&apos;&#13;&#10;WHEN &apos;shopping&apos;        THEN &apos;Shopping&apos;&#13;&#10;WHEN &apos;social&apos;          THEN &apos;Social&apos;&#13;&#10;WHEN &apos;university&apos;      THEN &apos;College&apos;&#13;&#10;WHEN &apos;work_high&apos;       THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_low&apos;        THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_med&apos;        THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work_very high&apos;  THEN &apos;Work&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Time per trip' datatype='real' name='[Calculation_3100919153931806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([trvlTime]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Travel Mode' datatype='string' name='[Calculation_7130919152735054]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [trip_mode] &#13;&#10;WHEN 1 THEN &apos;Drive alone&apos;&#13;&#10;WHEN 2 THEN &apos;Drive alone&apos;&#13;&#10;WHEN 3 THEN &apos;Shared ride 2&apos;&#13;&#10;WHEN 4 THEN &apos;Shared ride 2&apos;&#13;&#10;WHEN 5 THEN &apos;Shared ride 3+&apos;&#13;&#10;WHEN 6 THEN &apos;Shared ride 3+&apos;&#13;&#10;WHEN 7 THEN &apos;Walk&apos;&#13;&#10;WHEN 8 THEN &apos;Bicycle&apos;&#13;&#10;WHEN 9 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 10 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 11 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 12 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 13 THEN &apos;Walk to transit&apos;&#13;&#10;WHEN 14 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 15 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 16 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 17 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 18 THEN &apos;Drive to transit&apos;&#13;&#10;WHEN 19 THEN &apos;Taxi/TNC&apos;&#13;&#10;WHEN 20 THEN &apos;Taxi/TNC&apos;&#13;&#10;WHEN 21 THEN &apos;Taxi/TNC&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1210919154721266]' derivation='None' name='[none:Calculation_1210919154721266:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1500919153120996]' derivation='None' name='[none:Calculation_1500919153120996:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2800919154031518]' derivation='None' name='[none:Calculation_2800919154031518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7130919152735054]' derivation='None' name='[none:Calculation_7130919152735054:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[tour_purpose]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='real' name='[trip_mode]' role='dimension' type='ordinal' />
            <column datatype='real' name='[trvlTime]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3100919153931806]' derivation='User' name='[usr:Calculation_3100919153931806:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\PerTripTravelTime.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mandatory&quot;</bucket>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Non-mandatory&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Work&quot;</bucket>
              <bucket>&quot;College&quot;</bucket>
              <bucket>&quot;Eat out&quot;</bucket>
              <bucket>&quot;Escort&quot;</bucket>
              <bucket>&quot;School&quot;</bucket>
              <bucket>&quot;Shopping&quot;</bucket>
              <bucket>&quot;Social&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Drive alone&quot;</bucket>
              <bucket>&quot;Shared ride 2&quot;</bucket>
              <bucket>&quot;Shared ride 3+&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Walk to transit&quot;</bucket>
              <bucket>&quot;Drive to transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]' value='30' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]' value='103' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[usr:Calculation_3100919153931806:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[sum:freq:qk]' value='n#,##0,.0K;-#,##0,.0K' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]' value='36' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='112' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names] / ([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]))</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Table.Income, Detailed Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='139'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:trip_mode:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{07E1F155-6AE0-43CC-98A1-3A22CC561022}' />
    </window>
    <window class='worksheet' name='Table.Income, Simple Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='139'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_0180919155350154:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:trip_mode:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{418A621F-00A1-4573-91FB-F2F9D9B55271}' />
    </window>
    <window class='worksheet' name='Table.Purpose, Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='107'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1500919153120996:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_7130919152735054:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:src:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:tour_purpose:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{BAF507A7-5954-4C8F-90B4-A09C0865F463}' />
    </window>
    <window class='worksheet' maximized='true' name='Table.Purpose, Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='103'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[:Measure Names]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_1210919154721266:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Calculation_2800919154031518:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:Scenario:nk]</field>
            <field>[C:\Users\lzorn\Documents\AcrossScenarios\PerTripTravelTime.tde].[none:incQ_label:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{DB274EF3-4203-44A4-B945-DF20270699ED}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Table.Income, Detailed Mode' width='192'>
      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
      CDo9zVKBwPIt5rcylCo15i6/z/y9+1y+Ok+jWgSa/P7d37N07zbleufcCwRB4NixY8iyzNbW
      FuXybvULs9nMqVOnWFlZaVdHVoLNZsNqtVKr1ahUKqRSKba3txkdHSUWix1YCW55gvV6PX6/
      v10Md3h4mEQi0f48+8Xr9eLxeEgkEtRqNdbW1ohGo4RCIWq1GpFIZF/LIB5GpVLhdDrbOR0Z
      GcFutzMxMYFWq21v+6oo9qMv6PUakskcNrsNu3eQRnKTzVAaq6qKZ/Q4Vl2DO0ubmMxW/D43
      DbTonnAB28OELMusr68TjUbx+XxUq1XUajXVahW73c6ZM2dYX19XvKQgHo+jVqvJZrMkEgks
      FguCIGA0Gjl69CjZbPZAHSCTyRAOh9nZ2eHixYvo9XoWFxfbHgClG1gkk0nC4XB7bwGdTofT
      6USWZcxmM5OTk/v2BLeo1Wqk02nUajWLi4ucP38etVqN0Wikp6cHs9ncXn6xX/amBMsV/p+/
      /xd+/D/+D9gML5Z21kn+173SSTnpmuI76MveK52Uk84Zu3Tp8iV0vCe4Vqt1jP91r3RSTrqe
      4A7yv+6VTspJdwjUpaN5pAM0iUbiJCIBiuUq8eQfKj83KkRiCRKpz+pGKp0v/sXlRSAAABph
      SURBVHIk8vkvN2I0xSqlSh2xWqJUVV4SsEuXL0P9s5/97Gef/Snwq9/8iq2Fy4TyIrFkifjO
      OmZdg99dmCMc2ERtsGISCvz7//sXDPhsPNiM4Pd59iz8PFzm+jNq3Ll9n2I+jUpvJry1iqTW
      s7OxQqmYI1UCTTnKpwsbWM0GmhKk4jGCgW00JgdGnfKpWVEU0Wq1e36/LMssLCwwNzdHLBYj
      nU6jUqmYm5vDZDJx9epVdnZ2GB4eViSGhUIhLl26hCzL2O125ubmuHLlCoFAgFKpRDQabXuD
      lRCPx3n//ffxer3cv3+fra2tdn3Tc+fO4fP50Gq1+8oJ7CrYH3zwQbvNGo2Ge/fuUSqVWF5e
      JpXaXVZjtVr33eZms8kvf/lLbDYbNputrZbXarX2OVr2yP3yyB1A2PUE98+yfvNTLIYmn3zy
      IVdu7xa1vfbR76iqzGiNJmxWPR99dIXk6h22kvu30cXDO2xsbLIV3N3fNRXcRGX3MXfh91RU
      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
      J/8/4Lol7mwm6YQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Table.Income, Simple Mode' width='192'>
      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
      /4LtDnCMawAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table.Purpose, Income' width='192'>
      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
      5/8HeJykYMKnZBIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Table.Purpose, Mode' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
