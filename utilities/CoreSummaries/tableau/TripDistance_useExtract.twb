<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='TripDistance Extract' inline='true' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>4</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Automobiles &lt; workers&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zero automobiles&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>4</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>4.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;$30k to $60k&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;More than $100k&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeCode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeCode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AM&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;PM&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeperiod_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeperiod_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeperiod_label</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AM Peak&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;PM Peak&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_mode</remote-name>
            <remote-type>4</remote-type>
            <local-name>[trip_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trip_mode</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>17</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>18.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_purpose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tour_purpose]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_purpose</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;atwork_business&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;work_very high&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4599</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>574151.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>23724</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.12</statistic>
              <statistic aggregation='Max' datatype='real'>63.950000000000003</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010_04_ZZZ&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040_03_127&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010 Base (v0.4)&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2040 Holy Moly!&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' value='Average Travel Distance (in miles)' />
        </aliases>
      </column>
      <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;atwork&quot;' value='At work' />
          <alias key='&quot;eatout&quot;' value='Eat out' />
          <alias key='&quot;escort&quot;' value='Escort' />
          <alias key='&quot;other&quot;' value='Other' />
          <alias key='&quot;school&quot;' value='School' />
          <alias key='&quot;shopping&quot;' value='Shopping' />
          <alias key='&quot;social&quot;' value='Social' />
          <alias key='&quot;university&quot;' value='College' />
          <alias key='&quot;work&quot;' value='Work' />
        </aliases>
      </column>
      <column caption='Tour Urgency' datatype='string' name='[Calculation_9010911152628957]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_5230911152243163]=&apos;work&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;university&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;school&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;atwork&apos; THEN&#13;&#10;  &apos;At work&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Single occupant, No HOT' />
          <alias key='2.0' value='Single occupant, Pay to use HOT' />
          <alias key='3.0' value='Two occupants, No HOT' />
          <alias key='4.0' value='Two occupants, Pay to use HOT' />
          <alias key='5.0' value='Three or more occupants' />
          <alias key='7.0' value='Walk' />
          <alias key='8.0' value='Bicycle' />
          <alias key='9.0' value='Local Bus' />
          <alias key='10.0' value='Light rail/ferry' />
          <alias key='11.0' value='Express bus' />
          <alias key='12.0' value='Heavy rail' />
          <alias key='13.0' value='Commuter rail' />
          <alias key='14.0' value=' Local bus' />
          <alias key='15.0' value=' Light rail/ferry' />
          <alias key='16.0' value=' Express bus' />
          <alias key='17.0' value=' Heavy rail' />
          <alias key='18.0' value=' Commuter rail' />
        </aliases>
      </column>
      <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1010911151419745:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Walk&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Walk to transit&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Drive to transit&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bicycle&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>%all%</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='AcrossScen  AutoModeShare' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Automobile Mode Shares for all Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_mode]' derivation='None' name='[none:trip_mode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:trip_mode:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:trip_mode:ok]' member='7.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='8.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='9.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='10.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='11.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='12.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='13.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='14.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='15.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='16.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='17.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='18.0' />
              </groupfilter>
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:3]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen  NonAutoModeShare' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Non-Automobile Mode Shares for all Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1010911151419745:nk]' />
              <groupfilter function='member' level='[none:Calculation_1010911151419745:nk]' member='&quot;Automobile&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Walk to transit&quot;</bucket>
              <bucket>&quot;Drive to transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:4]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen Purpose' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column caption='Tour Urgency' datatype='string' name='[Calculation_9010911152628957]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_5230911152243163]=&apos;work&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;university&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;school&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;atwork&apos; THEN&#13;&#10;  &apos;At work&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9010911152628957]' derivation='None' name='[none:Calculation_9010911152628957:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcva:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcva:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcva:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;work&quot;</bucket>
              <bucket>&quot;university&quot;</bucket>
              <bucket>&quot;atwork&quot;</bucket>
              <bucket>&quot;eatout&quot;</bucket>
              <bucket>&quot;escort&quot;</bucket>
              <bucket>&quot;school&quot;</bucket>
              <bucket>&quot;shopping&quot;</bucket>
              <bucket>&quot;social&quot;</bucket>
              <bucket>&quot;other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mandatory&quot;</bucket>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Non-mandatory&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen Purpose Chart' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Averate Trip Distance for all Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen Summary' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='79' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen Work' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Averate Trip Distance for all Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]'>
            <groupfilter function='member' level='[none:Calculation_5230911152243163:nk]' member='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AcrossScen WorkByMode' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]'>
            <groupfilter function='member' level='[none:Calculation_5230911152243163:nk]' member='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='75' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Dist by Mode,Income'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[distance]' role='measure' type='quantitative'>
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[distance]' derivation='Sum' name='[sum:distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[sum:distance:qk]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Dist by Purp,Mode'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column caption='Tour Urgency' datatype='string' name='[Calculation_9010911152628957]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_5230911152243163]=&apos;work&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;university&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;school&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;atwork&apos; THEN&#13;&#10;  &apos;At work&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9010911152628957]' derivation='None' name='[none:Calculation_9010911152628957:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;atwork&quot;</bucket>
              <bucket>&quot;eatout&quot;</bucket>
              <bucket>&quot;escort&quot;</bucket>
              <bucket>&quot;work&quot;</bucket>
              <bucket>&quot;university&quot;</bucket>
              <bucket>&quot;school&quot;</bucket>
              <bucket>&quot;shopping&quot;</bucket>
              <bucket>&quot;social&quot;</bucket>
              <bucket>&quot;other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mandatory&quot;</bucket>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Non-mandatory&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names] / ([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]))</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Trips by DetMode,Income'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_mode]' derivation='None' name='[none:trip_mode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Walk to transit&quot;</bucket>
              <bucket>&quot;Drive to transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Dist by Mode,Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Dist by Purp,Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Trips by DetMode,Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen Summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen WorkByMode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen Purpose'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen Purpose Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen Work'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AcrossScen  AutoModeShare'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='AcrossScen  NonAutoModeShare'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dist by Mode,Income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dist by Purp,Mode' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trips by DetMode,Income' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='AcrossScen Summary' width='192'>
      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
      iPmWXqYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='124' name='AcrossScen WorkByMode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AcrossScen Purpose' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AcrossScen Purpose Chart' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='AcrossScen Work' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='AcrossScen  AutoModeShare' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AcrossScen  NonAutoModeShare' width='192'>
      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
      5P4fY44qrGUQf5oAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
