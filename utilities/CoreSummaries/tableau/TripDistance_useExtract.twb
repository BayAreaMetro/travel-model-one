<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='TripDistance Extract' inline='true' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' version='8.3'>
      <connection class='dataengine' dbname='.\TripDistance.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>4</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Automobiles &lt; workers&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zero automobiles&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>4</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>4.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;$30k to $60k&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;More than $100k&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeCode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeCode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AM&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;PM&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeperiod_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeperiod_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeperiod_label</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AM Peak&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;PM Peak&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_mode</remote-name>
            <remote-type>4</remote-type>
            <local-name>[trip_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trip_mode</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>16</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>18.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_purpose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tour_purpose]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_purpose</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;atwork_business&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;work_very high&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>4</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7087</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>613912.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34436</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.17000000000000001</statistic>
              <statistic aggregation='Max' datatype='real'>55.590000000000003</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>130</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2015_04_138&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2015_04_142&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>2</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Year 2015 (v 0.4), Baseline&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcto:sum:freq:qk]&quot;' value='Share' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcva:sum:freq:qk]&quot;' value='Change in Trips from Baseline' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;' value='Trips' />
          <alias key='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' value='Average Travel Distance (in miles)' />
        </aliases>
      </column>
      <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;atwork&quot;' value='At work' />
          <alias key='&quot;eatout&quot;' value='Eat out' />
          <alias key='&quot;escort&quot;' value='Escort' />
          <alias key='&quot;other&quot;' value='Other' />
          <alias key='&quot;school&quot;' value='School' />
          <alias key='&quot;shopping&quot;' value='Shopping' />
          <alias key='&quot;social&quot;' value='Social' />
          <alias key='&quot;university&quot;' value='College' />
          <alias key='&quot;work&quot;' value='Work' />
        </aliases>
      </column>
      <column caption='Tour Category' datatype='string' name='[Calculation_9010911152628957]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_5230911152243163]=&apos;work&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;university&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;school&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;atwork&apos; THEN&#13;&#10;  &apos;At work&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
      </column>
      <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Single occupant, No HOT' />
          <alias key='2.0' value='Single occupant, Pay to use HOT' />
          <alias key='3.0' value='Two occupants, No HOT' />
          <alias key='4.0' value='Two occupants, Pay to use HOT' />
          <alias key='5.0' value='Three or more occupants' />
          <alias key='7.0' value='Walk' />
          <alias key='8.0' value='Bicycle' />
          <alias key='9.0' value='Local Bus' />
          <alias key='10.0' value='Light rail/ferry' />
          <alias key='11.0' value='Express bus' />
          <alias key='12.0' value='Heavy rail' />
          <alias key='13.0' value='Commuter rail' />
          <alias key='14.0' value=' Local bus' />
          <alias key='15.0' value=' Light rail/ferry' />
          <alias key='16.0' value=' Express bus' />
          <alias key='17.0' value=' Heavy rail' />
          <alias key='18.0' value=' Commuter rail' />
        </aliases>
      </column>
      <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcva:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1010911151419745:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Walk&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Walk to transit&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Drive to transit&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bicycle&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>%all%</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#02401b'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#81a88d'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            </map>
            <map to='#972d15'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No Parking Fees&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Housing at Key Stations&quot;</bucket>
            </map>
            <map to='#d8b70a'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Scenario:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Housing at Key Stations&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across.Chart.Auto' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Detailed Automobile Mode Shares for All Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_mode]' derivation='None' name='[none:trip_mode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:trip_mode:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:trip_mode:ok]' member='7.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='8.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='9.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='10.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='11.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='12.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='13.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='14.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='15.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='16.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='17.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='18.0' />
              </groupfilter>
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:3]' value='83' />
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:3]' scope='rows' value='Share of All Trips' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:3]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:3]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:3]' field-type='quantitative' max='0.55000000000000004' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='59' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:3]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1800'>Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1800'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1800'>&#10;Mode Share:&#9;</run>
                <run bold='true' fontsize='14' indent='1800'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:3]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:3]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.Mode' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Travel Distance by Simple Travel Mode for All Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='74' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' field-type='quantitative' max='25.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='39' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='24' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='38' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:  </run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14'>&#10;Avg Travel Distance (in miles):  </run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.Non Auto' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Non-Automobile Mode Shares for All Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1010911151419745:nk]' />
              <groupfilter function='member' level='[none:Calculation_1010911151419745:nk]' member='&quot;Automobile&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Walk to transit&quot;</bucket>
              <bucket>&quot;Drive to transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:4]' scope='rows' value='Share of all Trips' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:4]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:4]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:4]' field-type='quantitative' max='0.55000000000000004' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:4]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1710'>Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1710'>&#10;Mode Share:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:4]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk:4]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.Work' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Travel Distance by Simple Travel Mode for Travel on Work Tours</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]'>
            <groupfilter function='member' level='[none:Calculation_5230911152243163:nk]' member='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='74' />
            <format attr='subtitle' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' field-type='quantitative' max='25.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='39' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:  </run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14'>&#10;Avg Travel Distance (in miles):  </run>
                <run bold='true' fontsize='14'>&lt;[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]</rows>
        <cols>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Mode' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Travel Distance by Simple Travel Mode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='87' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='82' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='216' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='56' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Purpose' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Travel Distance and Number of Trips by Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column caption='Tour Category' datatype='string' name='[Calculation_9010911152628957]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_5230911152243163]=&apos;work&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;university&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;school&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;atwork&apos; THEN&#13;&#10;  &apos;At work&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9010911152628957]' derivation='None' name='[none:Calculation_9010911152628957:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcva:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcva:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcva:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;work&quot;</bucket>
              <bucket>&quot;university&quot;</bucket>
              <bucket>&quot;atwork&quot;</bucket>
              <bucket>&quot;eatout&quot;</bucket>
              <bucket>&quot;escort&quot;</bucket>
              <bucket>&quot;school&quot;</bucket>
              <bucket>&quot;shopping&quot;</bucket>
              <bucket>&quot;social&quot;</bucket>
              <bucket>&quot;other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mandatory&quot;</bucket>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Non-mandatory&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='48' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcva:sum:freq:qk]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' value='192' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]' value='52' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Mode, Inc'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Number of Trips and Average Travel Distance by Household Income Category and Simple Travel Mode for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[distance]' role='measure' type='quantitative'>
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[distance]' derivation='Sum' name='[sum:distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='51' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]' value='127' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]' value='52' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='136' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[sum:distance:qk]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk])</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Mode, Tour'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Number of Trips and Average Travel Distance by Tour Purpose and Simple Travel Mode for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column caption='Tour Category' datatype='string' name='[Calculation_9010911152628957]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_5230911152243163]=&apos;work&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;university&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;school&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;atwork&apos; THEN&#13;&#10;  &apos;At work&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9010911152628957]' derivation='None' name='[none:Calculation_9010911152628957:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;atwork&quot;</bucket>
              <bucket>&quot;eatout&quot;</bucket>
              <bucket>&quot;escort&quot;</bucket>
              <bucket>&quot;work&quot;</bucket>
              <bucket>&quot;university&quot;</bucket>
              <bucket>&quot;school&quot;</bucket>
              <bucket>&quot;shopping&quot;</bucket>
              <bucket>&quot;social&quot;</bucket>
              <bucket>&quot;other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mandatory&quot;</bucket>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Non-mandatory&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]' value='27' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='48' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names] / ([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]))</rows>
        <cols total='true'>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Trips'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Number of Trips by Detailed Travel Mode and Income Quartile for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal'>
            </column>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_mode]' derivation='None' name='[none:trip_mode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[C:\\Users\\lzorn\\Documents\\AcrossScenarios\\TripDistance.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Walk to transit&quot;</bucket>
              <bucket>&quot;Drive to transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]' value='40' />
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]' value='280' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[Multiple Values]' />
              <lod column='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[pcto:sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok])</rows>
        <cols total='true'>([C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk] / [C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names])</cols>
        <pages>
          <column>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.Mode, Inc'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='115'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.Mode, Tour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='63'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Indiv.Table.Trips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='74'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:incQ_label:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:trip_mode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Across.Table.Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='90'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Table.Purpose'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='67'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:src:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.Work'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[:Measure Names]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[usr:Calculation_2620911151847080:qk]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.Auto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='72'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Across.Chart.Non Auto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='60'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[C:\Users\lzorn\Documents\AcrossScenarios\TripDistance.tde].[none:Scenario:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Indiv.Table.Mode, Inc' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9Z5Ak6Xnn98ss711XdXW1d9Pj/awDsNgFsCAAgkeQVOjieDpRF3Ehc1KE
      IhQXoQvpw0GfLkKn04mn4IkWAEESxIHcBcAF1mLNeNPT095WtXflfVWWSaMPPTuLwVrs9PRs
      b+dvP+xMVU7m/83Kf77ueZ9X0DRNQ0fngCI+agE6Oo8S3QA6Bxrjoxagc/BYGr+GrfcCLrGG
      0WzFoCk0VQGr2UC5IuF02pGqEoJoQFEUnE475VIZu9OFKGjcuXUdTFYaioHzp45iMBppyjKa
      0kTWRCwGEUmqMjo5w9ChPpaXVjl/7jR1WcNpt92nRdD7ADp7TXTkIg2rn5VEGUGWsAoN2noO
      UU6sYXW7qdaqLC4XENUSbX4XBpcHi8NLrVrnyXPHuXJjkmeePs+NyxcRDBqDJ89x5+YIFoPG
      wsoWhzt8uNoHWJiboyXgRkSkIVVwWIz0nnuGsMt0T4veBNJ5ZHT3D2FEBoOZrkgr1YZMb08X
      lXKJlnCESCRCe4uHre04pXIFWVEQDSKKXCG5vc5WpoABjUatSqNaJlVq4LCZMJgd9Pb14nE7
      EQBQScYT1OoNFFm5T4NeA+jsOfnkJqrRimZyUMklMSGTqwt0BV3EVjbpH+ghV2hgpInDJNA0
      29haWSbcPUjI56SQSbC4skahInP25CAra3G8fi/lbJq6LBBqbaE13MZSdB67y41BEBDkGqlS
      k2NHhzAI72rRDaBzoNGbQDoHGt0AOgca3QA6BxrdADoHGt0A+xBVaVJrNHflXA1JQnnAcRBJ
      kh7o39ckCfUBJCjNOvWm8tEHvg+Gb3/729/+5JfW+TC++73vcub0GdA0Gs0GIKJpCs2mjMEg
      0mjUEUQRURCYG3mLzXyT196+xuHBXgzizvcIIrLcRJZlDAYDgqDxgz/7Q16+MkV30MT3vv8D
      FHuQW6/9PZdGFqhuz1BzdOOxGTCIH/5+q5dS/OG/+w8s5hvIiQX+9scv0drRwd//9fdYSkmM
      XXubwePHETWABi+++CoDgwM063VE0YAgCNy++BJ/9r2/pWPgCK/++IeMx+LI2RX+9vkXcTgt
      XB9doq8rjCiKCILwHg357Rj//t//v5QMLrZnbvLzN6/REfLwne98j7Jq4cpbb3D42BFEQaRR
      zvL65WH6ujpoygoGgwG1UeG7/99/4PL0NicG2vhPf/aXnDt1lB987zuMRbcwVDb5mx/9FLvL
      xtWbcwz0Ru7ToodCPERKpRIAua0of/gnf0Wg5wQhdZvFnMrvfP2L/M1//gee/NI3+M1nH2Nq
      bISau8jy/DT/8f+a4Bu/+zv84mc/xdZxnPzCME63g7Nf/ac8cTRCs9Gku7+fjoFTXDg8S6mw
      RVJy0W4vsJE2c+tH3+fLv/ktzgy2f6g+TVVoKhr9/X2cO9HP9MwsW4vTBI58nkx0mKZU5Ht/
      /mf87j/5A2yNJNev3sQqSizHC7hauvn9b32FZqOJJxjBVEsSW0tz+HQPU9NRvvbMeW5PzbMe
      W6LWrPNffvNZ3vv4gyo30YxWettDvPyjF/FHDhGdGeX8M19nauQ21fQqf/6d7/MH/80fkNtY
      5NqVa2xHx6mrAl/+1j+lv8VEU1bo7esnk06joVLObYGnG0N5nZu3G3z9uacYnpplY2ERqVnn
      93/nq/e06E2gh4iqNMnn8yS21rF4w7htJkIdPTjFOtv5OgN9nSzGYqhAR0cX3d1dhDoHOT3Q
      yvxcFNHqoFQoYvOF+crnz5HLl0CTcXmDrExe4+rVq5iCfWxvbKI2yuQrChYT1Os1jCbzR+pT
      5CbB1nZuXnqLt99+g4GhQbaSRcq5JLImIsg1arKA2WTCHWyjszNCMZnmc196lnxyCwDBZMNv
      LHFzepWO/kOkNxYQDQJb20nsDjtNWUYQRIT3ffyh0VToaG/l7bcv42tpJ2BpkpdU0oktBLOZ
      RrOJpoHJaCAY7qCjqwNJsXPmUITtdAFFkWkJtjJy8yotHQN4HRaMJiu1SoFaQ8VuM7K1ncBm
      d9CUFYS7/72DXgM8RM4dO8Tbb79N/5ETfO6UTLD3OC61QFWzc+7kUbRKjta+4wjA0OnHmYxt
      8cTZE/hMdQS7D6fLS0uLD01WaIn4MKouEMwcOTKIpe0IF04f4dKVm/zmN/4RudVpsoqTiEPm
      qa9EyGQKQPBD9dl9bQx0B3APnKXXA8PTK/zWb/8G4zcu4z/3TaTMFu2RAMVCGZ/dy7mThwj3
      DTIzPsFvfeu3ABg6coSl7Tzf+NrXWJq4ieY6TU/AzI3xKF954jhHD59ElgqomobhfZpAoc5+
      gt5JDj/+JZxylvnNAp9/7BRXLl7k3G88R3LzEC0eG8VyjYArwJGeVtpCAVbSNb54vBuzCH09
      XfgGIzjMBs6fv4DDH+GxIx2orsfoD1m5OjLDc0+f5sjgMWgWkVUN093pYH0mWOdAozeBdA40
      ugF0DjS6AXQONLoBdA4090aBJElCUT7ZbJqOzn5FHwXSOdDoTSCdA41uAJ0DjW4AnQPNe6JB
      L7/2U1567S3W02WODPayGZskXTPjc9k+4BSPnvjaIg2DE5vZsPOBppHL57HZPlyzqkgkkiWc
      Thu5XJZSoYjV6Xxkb4ViNsnC0jqBlgAisLYcJZmv4rabmJmexeb2El9bJJmr4vd5QJOJzc3Q
      FCxU8wnWE3kMSpX5hRjZUo1gwPdAehqVPMliA5fdwvrSAotLSygGK/G1RZqClWY5S3R5A38g
      gKA0mJ6eZmVlE5vDzPx8FJevhY2lOTLlBj6Pm/eJhPiYaMTmpohnKgRafEjFLPOLq3h9fham
      RslVZSxCk+jyBj6/D4MIm6tLpAoSDjNMTc1gdfuxmETWNzbxeNz3zvweA3T3H2bk+g2+9fXH
      +b//6LsozSbNeoW/+/E/MDG1gFUr8aMfv4jZ10E44Prkd3eX0FSFm9cvsZ2RcAkNVLuT5Zkp
      Xr90g6DHwsz8EiaDxuT0LOvrG8STGewmhYnpeQwmlddfuQJmE6gN1haXMVpgZjaKyxfEajLs
      ZUlIJFJQSZAXA/hskK/IJFdnmV/cwOmyUClLbKSKKKUE7tYu4vNjbEsadamGwSCSXJ6n7cgZ
      jNUkRc1BW4vnAeSoXHv1BbYVL32RAB5fgLXoLP5gEEx2picmcLpceIwVlrMibUEPLQEvUzML
      eFwOOju9XHnzBpLBQTm1RrizG6P4yRygKXWuXB2m/9AQboeNG9euM3Soh6mZaWKxbQ4fPcLE
      2ChD/WFmFtNEgm7S+Spr0RlSiRR9J44zNjyGoZ7hjVuznDlx+N65P/Blp8p1/J1H6PQZKRaL
      tHQfI2ItkyipGA0CmUzmExVmtykml4iXDGwuz7G9sU5VkVnbzNARDjEXW+XC0TbeevMiFl8H
      klRHKSa4NDLL+bNHGB8dp6f/MM30FnMrG2gaXL12A5MqMTm7vMclEejq7qLWVKiViohGC5Gg
      E0mzU68W6e7pYnVxCbPFgsEg0GjKZDIZWts7SSe26OpoR9UUiiWJ6dgWJw51PJCajegEisV3
      b7GLJlfI1k20hlrxWqGpanR3d7K4nqW3ww/AVnSCyNBpOru7iU0v0DfYhcVmB1SUB1jxomkG
      LjzxBBsL45TqKi1+N7Ozc6SzEk89/TkmRocJeBzMzi2QK5ZBNNLV5qfRUMhLTZwOJ1Jxk8nF
      BC6zdp+W9zVAd28vRouDnvZW3C1h/G4bizMjlK2d9Ld5MFus+DyP/u0PMD23yre+9U2+/MRR
      tgtlxm/doaZp1KUKViPcHJ2nvSOMwWDAYjYjCCJBr51bw2P4QmE2V2Nkaip2o4AgCrRHwjRU
      gXC4ZY9LojF5Z5iaKmISZJKpJH/1/b/B4XHT19NNdGGRQKSDQmKdZL4O9TKR3gESq0uY7S5u
      37qOYLRgEGVEkwPjJ29vABBo72OwM4go7Lzsysl1fB19NEspRqZi2GxWXv3JDympZuRamWy+
      zPp2kb6uFkYvv8LctoTNbie1Ok+pDmbjJ29YamqTxegCNc1MvZADTUXRBAZ6IszPz2G0OHc+
      w8ShvjYymSw3bo1gslhpCzi4dvky/vajXDh7EkG4X8fHmgeo5beZ3qxy7lj/Jy6EzsdHkyus
      JyW6Ih9swtTGGo62Lux70EpbW1ujq6vrA7/XFIn17TJdHR8efr0bJNbWaP0QLag11jYLdHW2
      fqzz6RNhOgcafRhU50CjG0DnQKMbQOdAs2/XBGuapkev6jww+9YAqqoiy/KjlqGzz9GbQDoH
      Gt0AOgca3QA6B5p9bwCpWkVjJw2hBlSr1Xe/kySqd7/fj9SqZfLFMqrcJJVKo6gaxXyWVCa3
      UyZNJZtOIdWbNGpVcoUSmqaSzaRpyLs7QNCoVUkkktSbCoV8FqnepFmXSGdzvDOVWi0VKFUk
      VFUmnU6jaBqaplKrN3ZVi6o0SaczKOrO+atSDYBarXbvmPo7906RSaVSNBWVYj5D+p17d5d9
      2wl+h9jEMOETF/jZ3/yA3/1n/5g7I1F6I24snhBLC9PUag3Onj6B3RPA8gDxKHuN2pS4fWcC
      m9WM3W7FahZY3EghZbc4euI0AOm1eRbzAlIxhqhI2AwaDl+QqmaisbTFUxdO7pqeqfFRfJEe
      LJlVJtYqmKnjtpnQ5AqZymGG2l3MR5fI5nK0+W0IDjdLGwWEwhxFczdffvL4LinRmLgzgs3p
      2Ikxqq5xbaHEs6c7+cmbt/gX/+wfo8k1bt2ZwG41Y1QbmP0tRFc2qRUyHDt15r6z7Z8n4gPo
      6etk+sZNjj12gbFrN/CF/Kxspbl06RIaUMltcWN0AbNhfxW1Xs2TSOUoFYt09B3GgoLL5cDh
      dDI/N43UUChkSnQO9KDUKwiaTKHSxGgSKWbTCB+RGfrXxeF0UkxtsbyZRFMUVlZWOXriFJqi
      4XZaQTRx/HA/VamOYDCSTqQxWowcP3cak7qrUljf2KAm1Shk46wkSvgcZvzhLnraAgA0KkUS
      6QylQpFksU7/wCEqmQ2cLidzM9PUm+8K2l9Pxfvg8Lezur7G8aOHWVpPErJIGB1eBEVBA6yu
      Fixahbq8y7/CQ8ZsdRFua8VpNbKyMM5coklfxI/b68dhMdJsyjg8NhLrcUSTFQwWutu8LG5k
      GRw6RKNa2lU9BpOFcCiAZrBgM4uE28JM3LpE3RKixWWmWa+ysBqn1W0nWahx+NgxKrkk4i4b
      EaA13Ea4tYVCPo/NamY7mUY0vLMYSkUwWQm3tuGyGrGYYHNrA7Pdh9vXgs0sov5S+Nu+DYZT
      FIVmswlo5HMFPD4vxUIBt8vBxsYWVocLi9kIqobZKIDZvscLXB6cUj6DpBgwqjVyxQoefxCD
      IqEYbNTTm7h6DlHc3sDTEsagSGTLDdpbA2xubOBvjWC3mD76Ih+TRq1CPF2go72N5PYGLn8r
      pUyCSq1BS4uH7VSNsNdEQ7QScNvY2Nwm0tGFQWhSqci4XPZd06I0a2zGM7R3RDCgUihJeNxO
      CoUCHqeR2cUMna1OKk2BFo+d9c1t2jq6qOSSaCYHAe+7ofyfAQMcTFRVRRDFD0g6vrdomoam
      gfgJV3ztshjUX0PLvu8EH1QeRtPikyIIwgOs991lBIFfx4efnruoo/MI0A2gc6DZt02gnWr3
      01Lv6uxX9m0nWEdnN9CbQDoHGt0AOgca3QA6BxrdADoHmn07CvQOidgow6tVLEqNM2dO4PC1
      oDXqmExGDEYjiiyjqQqCwcTt27d47Px56k0Fm9Wyb0aR1qPTbGTy2FxBCqlNGrLGF5/9Eo3c
      BqMLGxhMNrRKCoc/zJEjh3jjxRc4++XfI+zZvVCId5ClHFduTYPRjNfUpImBjv7jtAWsXHrz
      bZqihd6wi3i2jDvYw9bCKJ2HjnN4sHfXZ63rlQKz8wtMLGxwZqCVXEWifeAsfW0ubl2/QanW
      pK/dz1a2jMvTSj65jiyYePaZz9978+/7GkCVm8iKSrFUZDM6x/DtW0zMzLE4PcrM8ibXrl/l
      zTfeZnVjm0ajweW332Dq9lVWM9Kjlv6xmZyZxWY2Y7U5+OIzz2IWZDQgOjOLYjBgsezsqN6o
      liiVJVxu530BX7vJVmyKkmLCarGQL9fpiXiYj62DtrP+QqpWaTbq1OsSUrmILFoo5POoD5Ab
      9IOwODz4bSJnH3+KTLnBY2ePs7G6RrOcZWkridViRW7WqdUk6qqRxy+coVgo8Mu3Zt8bAEGk
      f+gYA+1e8uUG5UqNQ0OH6Tt6gpkrr9DS1obZGaK9dSdUNpmI02w2kfdRHJHT7efoiSOsLy0x
      evMynUNnsRjA5nAyMHSUbGKTwaMnafeaSFcFvM7dCzz7Vaw2Bz39hyjlkrSFfCyvxXG7nVAv
      YfZ3EnFZiMVLPP75p8klVjlz/gKKVKCpPBxDLm2kGegKIWoqtUYNs8WKaDQR6ejBY2gyu5bj
      iS88TX5rjmy5SdhnpVJ/N5nCvp8HqGS3mVrcwunyEPZYweZgZWmZoWMnufX2azz1la+zEZ1C
      sAewiComZLYyZY4fP4bJsD+aQLVynvnFVdo7O5ibnsHlC+A3izg6e4gvLuAJdYCUJS/B4aEB
      cvE1rP52nJbdj37VVJmF2Vks3hAOsc52tsrhgQ5W1rOYqVJVzXS1elhcXqerb5DU5jJGR4De
      zraHEi+0urpKd3c36fg6K5spDh85xOZmBqepSaEh0B32E1tapaN3gNz2KqrZxWBv1z0t+94A
      H0RTKpEqNYiEAo9aykOhWq1is9k/FUFomtpAaojYrZ+CLqXaoNoQsFs/Xv/nM2sAHZ2Pw/7v
      A+joPAC6AXQONLoBdA40n4JeyyfjoC+J1Nkd9BpA50CjG0DnQKMbQOdAoxtA50CzbzvB75Df
      WmR8NYfDJHL89GmsRpFcLofP53vf46PRKIODgx/52XtRyWVzpLMFBgf6dkn9x2N7Ncp6Iku4
      a4Dc1jIGm4ejhwdRpAKTszFMDh8muUhNMXL0+DFyG3PkCTLUvft7HWuqwrUrl2jrGUJsFMhX
      mvQfOozLamBsZATZYKOv3c/y6gaB9l7y26tgdnLq+JFdm7VWlSY3bt3hycdOcfPmHUwOL2eO
      DXDz9hhPPvEYaCoLs1NkSg36O4KsJbN0dPSQja9SqmucP3caw10x+94AtUqBlvY+Osw5ZsdG
      WExWaPfbMIgGIj4L24UmitLAG+zkcE+IkVvDNKolyrUGnlAXh7sCDA8Pk9pex+kPUcwXaapg
      FSRAwO4Lkc+X6OrpJL26yNx6lv7+XsQ9jEFwt0Q42+Lm4s1ZbG43tmKcfLWHxMw4Zc2BD41E
      psChNiex9QSro3fwDXzhoWhRKnE20jVau1Q2NpOcPdHL9Pwaj5/qpae3h8s3R8nFVwhGIqiN
      GolUDsFUReUIuxWZlE8nWN2McyrpwxTsp7Q5SzblZG0rwZOAXM0zubBKRyTCwsIy5575Am+8
      8LfI5iCRttBONOjdn+8z1ATSEDSFcEcfmtxEbFYYjcXJpTax2SzkshkQTYTCraRzRS5cOMn2
      6hoYLIRbW8Fgpq89QL2hkNjapi5aOHOkm2wFjGqDdCZLQxVpb23Z04cfwGISuH57jsefOo9F
      lVjbSiIKAooiMHT0OOmtVQIeB/OLayzOTmK0u8jlcg9Fi2AJ8NvffI6NlRiRkJ/p2SiaIIIG
      JpubsNNMGTPHT55mYew67tYuHGYNWdm93Kz+1g6CXgfcTXSuaRotbV0E3DZgJ2tesK0Tt1DH
      FQ4yMzaB1FRp6+xHbJao1t9NHb/vawCrw0N6dYma2cCxoT5WciKYW2gPOJBWChxpd7K0mSIc
      6QAg6PNgdzm4fXua/sNDAAS8blSTDYPRjM1mxt8SoMUfwGB24nPIKCYXNrsdl9lMoVBEUTUM
      e5gGcGHyDprZQSFfBDT6hk6gFuNEDh9nJTpDW1c/SjmFOzzA504dRy5us1EwPxwxaoOJiSnC
      Hb0IchGjzc+hgRCb8RSp7XUM7haeGvAwOTbO0QtfJJvYRHUHdz3yNhQKYQ91U4vdxu1vvfcZ
      ap1kSSbkECg3HHQ4bayWJb7w5d8ivbVKw+7HYX23Ltq3wXAHfSKskM3g8AUwfhqiQZUa2aJC
      wOd41FJArZMpNAn4nB/rcN0AOgeaz1AfQEfn10c3gM6BRjeAzoFm3/YBNE1DVffXtkc6nz72
      rQF0dHYDvQmkc6DRDaBzoNENoHOg2fcG2FxdRdZgcmICVVNZXV1797vNDVZXV3mnk6M0qqRz
      9++f26gWyJVqH3mdYiFHMZ+hLO3R5JumEpufZmZ+kXq1yNidO2RLEvPTY0zPxVDZ2U1+7M4I
      a9spQCMajSLXyoyPj5MrVXdVTnp7nTuj41QbTaKzkyyubQEaKysr945RmhJrG3GqxQzj4xNU
      ag0WZiZZXN1iNzua2cQmd+6MUak3WJieZGUjTnp7jTuj4xSrdVS5wczkOFevXieRjDMyMkKu
      XGM5OsvC0vp9WvZ9LJCUXWfDbGF0eAR/i5vYappUMo5ocVHOJ6nV6lSKBfqOHCe3MsOtdZlu
      r4hisHPm1DFWZkdYrQWwNDOE2zrI59K0RjpYWl7D5fHhNslkKwqtIQ8b85PYex/j3KHIQy+X
      qsjY3EHS0QneXIrR1hYgnUoyO7fE6cefQtBgfX4KR/shotMjOLRufvaLK3zp3CEih08xMTrK
      F5/+3K7pqSsC3UEzV994naY1QNALNqXEL66M8y96egCYuH2DjbKRFpPMyc89xfDlK/QPHWFm
      aore7siuJcetyRp9HS4mR8co1gSMyTmsWg1rsAebxYRoEDly9Aivvn4RtSlz7FgPV68Mo4pg
      Ebbp6enEfPfVv+9rgM7+fu5cvsITzz7Njbev097pJ1OoMj83iwYUEissxUtYjSIutwe7qY6k
      eRCkNLmKjMfjwed2INp8VPNJmvUCs9NzmNyt5FKbFAp5Go06iXgcu9uL3+vZk3KJRjMBpwEJ
      F0pT4tDQIKtLa3z+mWfJrM+Tl5o0agpWuwVFbnD52ggBpwl/S5DY/CyJdH5X9UQiYWZj27T6
      LIS7+sin40R6h+gMue8dc+LMY9hM0N4eYmZyirykEvTaUVQFWd69Ieu2tjZmZ1fp7gwiIFOX
      VQ6fPM9gh4vbY/MAxGPjtB46QzgSYW5smoEj/QiaTK2poCjvRoPuewOYnUFkVaG3uwvZaCJk
      VhAMRjQVjGYzwc5DhGwN8tUmRosNRRap5tfJSwJOmxGLzUmpkMdqtVCr1xEEA4JBxGo1YzFb
      cHt9yJUcDc2I3W4nn9/dB+uDUBoVfvifX8DlcXCov5eZ6TlaWoPMTU9Q0ywo5Rye9lZmbt3E
      5g7x3Ne+QSjYgklQaTSaHDl2dBfVaLz58+epClYC7X2UtmKYHTsvArPZgqbUSGWLIAiYzWYU
      uUGj0eDwQC83b49hd7h3cRNtjcuv/oS8bEJVNIyihsVqY3t9ifnYOm2tPlKZApvJKoM9LUzd
      eINYug6KjMVkwGS23BfOrs8D7FPSWxs4wh3YPgWvME2R2EpWaW/7FORhVWtsxEt0RIIf63Dd
      ADoHmk/B+0NH59GhG0DnQKMbQOdAc28eQJKk+4aH9gN6NKjOg7JvO8H6kkid3UBvAukcaHQD
      6BxodAPoHGjeYwC1UeTFn79KrfmAHUylxsv/8BOef/55hiejH3l4NRdnKrr2kce9H6V8Bqnx
      Sx14TaNW++gIT01tUrobNVkulyiXSuyXbnWzVmFpaYlipQ7s3IOtRBpVbrCyvEQmX/qIM+we
      mqaRim9SqLy7+Xi5XAYgm4qT3+XI1A+jIZVZWlpiZX0LAFVusLqyQl1WyWcSZAvl+443fPvb
      3/72L38Qu3OZizcncYZ7iE6MYEYitpXl6huvkJYElqeuMx7dZGNhjFtTS/isKi++8jorm1mk
      1DJv3hind2AAs9FIi8/K9dEYR9ttvPjaJRS5xquvvA5ak1RZZWrsDrXcFq9evIXHBncW05w4
      1P2xCvrOmmBNU7l28VW2CwI+i4ZqsZBcXeHlN6/Q1eYnurKJwyyyuLRMvlAglSngsonMzi9i
      sar84tXr2Dxu1EaNxbl5nD4XsdgqHr8Po/jprSCXJoap2YKEfG6MBpHF2CKF7SXylRrJCnS0
      BTEbd3+f4PejFI8ytyVRzGWJhEOUs3G++8OfcuHUEEvrSaLzc/T09e5aNOiHIYgiglJlbHaV
      wb4uZkduYvL5mLozSjIvUckn8YciGO9mqvuVX1jjxo1hLFaBG9dvo5WTvPDyJaqpFSaX44xP
      TLK0vMZTj59hK5FhZuwmb73xJo8//Qyr0QVeevVNcvFV1hJ5EETsDjsmkxkpn6TjyAWKiQ0K
      qTUydYErr7xAstjglZdfoZDZZmkj+YkKXCtsEy8aWI9NsrkUpdRsMh/boC0YYHR8mt6gkdff
      eJuSaiMWWyG/ucRb10fo621jeHgcbyBManmemaVlNA0uvvUmUmGbG2OxB/0tHipWbxCbVmRi
      ehGAI8eOUmkKeD0eAk4j4+NTe6YlvrGOZjBTKOwECtq9IY70dyKa7PR3Bqk1ZFR1bwYbRYOR
      9aUlzpw/B0CpphCJdFCv5pFrFVZW16g3PyAaVK6V0AKD/E//8n/Eo+Q4eeECqsnD2VMnCLkt
      RCIR3L4AJlGlVKzQ0hqmq7uDn//kJ9QEE6eOD2GwuGj1uwAQBCNulxOLzYHbZadaLuLwBLA6
      AoQ9Fk6fP8/p0ycQDFbaI2FcDtuvXeCZqQWe+8bXeOxYJ5vZIutLa0iKQrPZQBRU4skcLqcd
      m82O2+XCIAqYTUbi8SRWh4NKKU+1odxLMej2+vD6g3S07X5q8d2k2VSwWkwIgFSr8cbPf4Ir
      3IPabGC2mBH3sPYKtXdgMYoIQE2SEO5eW6mXWVjexmk375kBADJVhZDbSk2ScNuNRKPzOP3t
      uNwuwm0RbJZ3l8E88DzA+sIYr1wc5si5L/D5s4cfWPzH5Z15gGq1it1uR1Wa1BZjVbcAABpx
      SURBVBsylWoVu82OLDewWiwUKxJelx0FA6osI6BiMpvJ5gr4fB5K+QImmwOjsHMbjCYDuXyJ
      QMC/51mgfx1UuUEmXyLg91FvNKgWC8ga+Px+SoU8bm8Ak3FvTKBpGsV8FrPdDaqM1WZDuvu7
      lAo5MNlw2a17ogW490zUJAmT2Ug2k8MbaKFeKSCY7DhslnvH/ooBVOKbW9Rklda2CLVSHpcv
      gPFuLLckSdhsv95bulDIoyoyTo8fk+GDf5ByIYsmmpA1EZ/7/iSrmtKgUJXxuuz3PtMnwnR2
      g1/pBDf50z/6Y8wWA7+4cge5lMbT0sLk2DhWu5k/+U9/St/gIDNTk9jdbmIzs6xvJwgGW5id
      GKUp2mgUkiysJQgFW9DkKs//5BVqxRSC0cLqygrFmkLA6yazvc7C4hJVqcbGdprs+izbySS3
      o2kcaoFMRcGsSYxOzuEP+vnxCy9y8uTxe7uM6ImxdHaD96wJNjt9fOkrX2f5T/6Y1Y0CRqPC
      G1cn+AJfw2g0EV+a5tJbl4imsqzcnqSv00Y8vk62KjKkiLzxwl+Rqar88//l39Bjy4LJS2Jr
      GbleY12yEl+5yL/+V/8zi5M3Wa2bmXv5Cn5Lk44uP05/J81Ckv/nj65iMDv44mOHmVzcwhqI
      IDYKSDLYTY/iNul8VnmPAeqlLK+/9hKKzY+1mcXpD9Hd5mV1PYlFlJkYn8Tq9qIpMp5AK51t
      FiomK+XcJmmPg0Coja6Wdtr8TsR6EXinxy3Q1XuI4vY7oysG+o8MUUw28YhZ3mmIiUYL7Z3d
      dPUO0NnuYjuZZGVtGwQDn+JRSZ19yq/0ATRS8Th1RSMYClErl7C7nKSTKXwtrdTLOTCYaMgy
      ZpMRRdawmgREi4NKPo3Z6cWoNShJCqEWH5rS4O0rNzl76jhGgwGMVupSGb/fj1QugtlCrVLH
      ICggChgMJmRNgGYVzWDDZTOSSGUJhgJcuniNL335mXtjyaqqIsvyI7lpOp8d9m00qI7ObqA3
      KnQONLoBdA40ugF0DjT73gC5bBYV2N7eRgOy2ey97/L5PNlsdlfzUn5akOtVZmfnqd/NuFbK
      pVjdTKCpMrFolFpz75a3aprGyuI8mbuRlkqzxsJCDEUDTVPJ/NJvsgdqWFtaIHU3B6wqN1hY
      iNJUNZJbayQyhfuO3vcG2IpOEM8V+PkLPyGTS3BnYpHZqQliq5tMTIxz+/ZtttZW7j0onxVu
      37xJMGjj5u1ZAG6NjKPm1hibjmKyGLkxPLFnWsrbc2xXLYwO3wLgzo0b+MMt3BoeZTM2wT+8
      dnXPtFSTi6wXRcZGdrSM3byOtzXE8PXrpEsNJm7f5JdfDfveAD39PUxcvcrZL3yO25euEYoE
      WNlMcfPGzZ3coMkV7sxtYP6QMIz9SE0VaAn4kO5GYJoEheWVFQRnEJNSQ9P2zvDlQgF/KIyi
      NABwOm0sxRbZXF8mtlWi1WtjrwYby8UCvpZWVGUnTMbltLMcW2Q7U6SvvYVaU74vT+m+fyrs
      vghbiTjHDh9iM10kZKpicftQm000wB3sxiWUKDc+W3MGbovAxMQc3tYg5UoVu9OFwxvEUk+T
      rQsY9nBpjzfYyvLMGILJTrlcxma3YbOa6OoZJOR3kUhn2KtgUE8gxOr8JBisVMplrHe1dLdH
      mJiN4bRbUX5JzGdgHkCjVqtjsVpp1OuYzSZKpTJGkxmDQQRNwyAIYDBi/AzVAqoiUypXcLpc
      KLICmkxTEbDbzJRKJewO156VV9M0KqUiJqsDARWjQaRckXC5XAho1BsNLBbLR59od9RQLpUw
      WmyIaBiNBsrlKk6Xk7pUQRNN2K0fGA2qo3Ow+Oy8EnV0PgG6AXQONLoBdA40+3aPMH1BjM5u
      sG8NoKqqviRS54HRm0A6BxrdADoHGt0AOgeafW8ATdtZGqmoKpqqfmjMyWep06xpGrKs3Fde
      9W75ZVlG3cP5TU3TUJR3r/muNlAUGVlR9jAi966WXwp30DT17qCJgvIrz8C+7QS/QyI6yp0t
      GVO9yImTx3D6g5SymZ2MdHYHtWoFuSFhsLgYH7/NhTOnyZXqtAb9CJ/ixFcfRXRmjHK5gujr
      4fShDuR6me/+4Cd88wtniKZLGEQbn3vs1J5oqWY3GY3GaTRkvvT0E6zHptlOprGFD7E9N0r/
      0ZP093buiRYpH2dkdoNavcFXnvkcaBqXf/63+I9+hfxmFE0QeeKpJzGJ75sbdH+iKAoVqUpy
      ZYnhkWGK1RqpzUWmFpYZHx9lZGyOUrEIwOWLF4nHxoklyh9x1k83h46dpj3kw2AwABpTE5ME
      WgLEc0XOnD5DrbR3MfiOQAdPnB66txl21+AxfDaRplTG4nQRj2/fF4D2MLF523ji7NF7cVDZ
      7WUkrFQKcZLZKqqmof2Slv1vAEGgb/AwfW0+SjUZWVbwer0Euw4RG36TUEcXBpMdm9UMQKVS
      RkH80Cx1+4HEWozFrMqxvjCgIisa5VwaVVbIl8qIxr0KPtvJKXvx6m0uXNhJSLu5ukzHsfPk
      t1fpHTiMUWvsmQHkeplLV25y7vx5AHLFKiZRpSI1ae/qwirINJTPQDToO6kRa6Usc0vreHwh
      WpwmRJudtZU1evt6uXH1Kk898yzp9SUEux+TqGAWVDYzZYYGej/VuT8/io3lKJmSRGu4HYvZ
      hM/rJpFI0OL3MD8fI9LTj9f56ycb/iRU8ikWVjaxu/2EfC7sViOxpQ36Dx0itbmMwe6nLehn
      L253tZhhfnEdm8tLOODB7fNRL2VpGlxIuS3qop3OcPCeln1vgA/8vlmnXJPxuBwfeIyOzmfW
      ADo6H4f93RDW0XlAdAPoHGh0A+gcaPZtH0BHZzfQawCdA41uAJ0DjW4AnQONbgCdA817dorf
      b6RXprk8tkhycx1vaxsWo0g2m/3A3SwnxsdpDYfv/2xinNbW8Pse/y4q2UyG6OIyra2hXVL/
      65PeiDIyvw2VJNHlNTSDHbfTyvjtG8Riy7S0d7M5e5OVvIFwwPUQlWhMjNwkGothNJu4NTxK
      IlOgMxJmIzbD3PIaqmBm7OZlJMVAS8D3EHeK15geHSYai2FwtrA1d4NUw0nQaye1HmV8ZoGq
      YsZrVfn561cZGuy99y/3fTh0sy4R6R2ix55n/vY1prclOgJmDIJIh9/Ker6B2Shi94Q5c6SL
      ibFx6tUSTQ2snghnh9oZHRsnublGoL2bTCJJodLAa1Uwm4wYnAEy2SJHjx1iY36GxUSJ48eP
      PqI4IpWqUqOSqbBSrvLkU6d44+IMHV99inw+R7XWRKoUmFlYxNvX+tDVHD11nvjiOPNTE0SO
      Pc3G9DUA1jcSnHzqCd5++SUamgW3JKFp2kMNPx86cZbM+gzxbA6lXEG170QJVMsFanWJQrHC
      yMYssnp/9MBnpgnUqNcxmk30DAxhEkVcRo2xlSz1YgabzUKlXAbRRKgtTKla54nHz5BNxMFo
      oS0cxup00xf2oIhWlLoEdjcXTg5SE5y0B+xsbm4jmKx0hEOPMIhOpKu7E0GAvs42ZmajiOad
      qE/VYOVEX5hr129jttnJZHMPWYtAObvNYlrjWG8IWZbv7U7f1d3G/Ow8gtnDM196lmo+Qb35
      MBcjCVQLSWY2JI4PdNDV1Xbvm3iqzGOf+zzp1VFy5SbZVIqm8q6WfV8DOLxBYsuLNK1WTh4b
      YjUHuDqIBBxo6yWGIk6mY2v09g0C0B0JY3c5uHV7mhNnTgLQ2RZCMdqwOr14HXEspjbaIq0Y
      bR5aXTmqZTNtbSFEpUmxUERRNQziozKBhe7uMA4HbOWqPHHhKNlcgZ72VuKlBl997ktolSTb
      pYe9n6zG7OwCLncAg7+T0swk4c5+ctksNruDZqrMU59/krXFeQKRXqymh/mu1Zibncft8JIt
      VLC5g7Ta7OSyWQ4fO8z8xASnnvgK7S1u5uYX7guF1yfCdA40n5kmkI7OJ0E3gM6BRjeAzoFG
      N4DOgWbfjgLpuUF1doN9awBN0/Zs4zWdzy56E0jnQKMbQOdAoxtA50Cz7w2wEl2gocHNa9dQ
      NJVodPHed8vLS0QXovcSs8q1Elup/H3/vlZKk8pXP/I6pWKebGqbQqWxm/I/MYXEGrdGxskW
      d7RHZycZHhknndpmfGyUW2PTe6ZF02RuXbvKykYcgEohzZ3bt9jOlhkfucl8bHXvkuNqMtPj
      o8wsLANQysa5eeMmmWKVqbE7jE7O3rdn8b7tBL+D2MyzurbG2toGrZEYm6kK2ewtNKMVpVak
      JtWolAocOXWW3EaUO+sNNu0aqmjh3LkzbMSmWZO8aFKCcChCtVrAG2hleW0Tp9ONyyRTU8x4
      vRYSy1GcvRc4PfBRodMPn+WFBTR3G0ajAYBAazvq8hR18zEc4iqOlt6POMPuIRe3WE1JtPfv
      xB+NDN/GGw5TzcVZXE1w+lwnaPAQ46HvkYiNs1kSaBFqAKiY6AhamZudx2C2YqqkqdQVXNad
      +7bva4Bwdx8TN27y2BeeZPjqCJ0dfspSg7WVZVSgkN4gXmhgNoi4XB7spiaaOYhVq1Coyrg9
      HrxuJ3ZfGKVWQm6UWVlaxR3spF7OYRChVMqTzuRwuL14Pe5HXWQABs88zvljndy5PQWAzaSR
      qFlpcxtYSZToa/PumRbRFuI3f+NporOTADRUODx0lNWVdb76G8+RWI9Rl5U90VKrSXT0DJJP
      bwPgdHtw+9uoZLYQBOHu6OFnKBrUZPfh9Lhpb4vgbmkhaBPZNJuwWm04nU6s/cewGzUKtSZ2
      uwuT0Y5cjSMbLLjtRmpOL41sEZfbgVqqYjBasTvMuBxWjDUXJosNq6mG2ebAaxWplAoQtD/q
      YpPcXKNQq9PX30UuX+Dy66/SPngcqV7D6wuxl8GqslRgdHadQLidXC7H0UP9TE1N0t7dzdTE
      OBaXH7Nxb9617QPHGZmcx+1vJZ/LUc7GiRdr9AwdI7m5SsNgxW55N1J230aD6qkRdXaDfd8E
      0tF5EHQD6BxodAPoHGh0A+gcaO6NAkmShKLszVDVbrCz699nZ9dHnUfDvh0F0tHZDfQmkM6B
      RjeAzoFGN4DOgeY9BojNTnDjxg3GphcAyKe2SBc+OlryUaEqEstjzxO98zzJrXcjQfmVFWNS
      boly+dO/ObYqS+RSKwA0KtusR6+hqCqappCNz9OsJlhfuIJ8N7uZpmmU81s7x5e3aMga2Y1h
      cpn4g0VgagrbC2+wtTKBBpRSM6xMv0RiK4qmqZTz28hSkpXpV8hnEwCUktOsTr9GvSmjKRVy
      qWXi0TdZnngRqVZ/EDGkVq6yPPkzisU8mqaSWrlGuZSnmJhgdeY16nWJrYWL1Os711GbRTai
      V5EVFU2tUymkUeq5++4dvI8B7E4XF3/xBiahxosvvsjInTFWV5Z4+eWXeOPKMNnEGj/96Yuk
      Pk2mqG+zMH0DUS0x+tr/yfZmlKlf/BumRl5h5tJ/ZHlhhMVb30GSP+UVnqayfPMPWVvZMXJ8
      ZQynucz6SozE/AvMjV0kl1zBoiWJb+889Bvj32V2/CJSfolLL/wfNIpTpHJ1tuZf4kEc0Cwv
      sbW5jC/UjwC4gkcxqmVEk4O1O3/M/PQNtmZfQrOEcHmDACxNvYQrNITZCLEr/46NrQStfU9S
      KSQwmR8kU51AsOcp6sUNzFY7mcVXaBhDrE39jOWpV3CHjpCY+zFWb4SlqdcBjfnhH+JxmliJ
      3mLy5f+VRLbIzJU/Rm2WqVTefRG+54mIdPbicbvpCFiIJmq4BIn4xgqrOZXU/A1u3B4nuhhj
      bnnzAQq0e4gGGyINuk//E5av/zGBwWcYe+svKBYrtIVD1Jowe/OvyRZq+D2PPojtg9HYmnme
      sqThbR0AoL3/PKuLC9i0NVLxDdythwn1nGFreRaPPwCANzRIIHICi7OdcP9jWEx2arl5Mom1
      B5Mj2uk59iwLIz/cUddIk68aaWlpwxPop6XjFO7IedzGHCvRMUChffA5UnMvszDy15SrKv62
      IVLRVwge/m2M4oO9fEobb2GNfBmr2Uw6uUmoNYyiakQOfYX49I9RTE7isV9Qq8uglpA1N5pc
      wmj24Ww5RSjkpCSJNIprCIZ3Y0A/VJXT5cFs2ombXo9NsVnQaG3xYhIV0snsAxVo99DYWpmn
      vecwTl8bs5f/lNa+JyilFli883fEl65htvvB2obhU74xvDt8hka1gsPaRKrmufrCv8YVPokz
      MIQoV3F6vczf+hFGR5BGJYUGFNNreFv7EJBAdFMvZzBZLHQc+foD7cxeSMyR3RzH5gpTKWVJ
      xt6i9dCXEQSBQjaFr6WVzOYEqa0YFpORhpQhtTlFTTXQ2vUktaaKxy6QymQJBYMPfG821pbp
      7B6gXNjC7vCwPPYC/rZ+khsz1DU7oiKDJtDRf5JaQ0BUC6ytrNDW2U9NlrFbXbjcbqSGisVs
      vnfe950HUBQFURRRVQ1BgPL2Aq9P5/jWlx9HFAUURcFgMDzUdNcfHw1VURBEw90/y4gGE5oq
      gyCiaSoCAggComh41GI/ElVVqGXnUR392Ew791c0mEBTd8pzt1yZzUlaOk+DqoCwU/Z3UpCr
      qowoGh/o99E0FVWRUZsZyhUBrz8IgrgTU68qIIigKWgaZLem8HecAlUGwXD32VEQRcO9/z8o
      71wzvTFOS8fJnfMaTGhKEwQDwt3yS5lZ8BzBZgIQ7mkQRMPOveP+50CfCNM50HzKe4U6Og8X
      3QA6BxrdADoHmn0bDQroqRF1Hph92wnW1wTr7AZ6E0jnQPMeAyhSlr/8qx9SaTxgc0iReP4H
      f82f//lfcGVk5iMPL6fWuDWx8GDX1NH5NXlPXqC5O9cpFXKMLaxTWJniSF+YuGQkOnmHlu6j
      aJl5JEsbJilJumbk6XMDXB6ewuwI0uNViW6X+dbv/R4+h41v/qPn+Mu/e4uwIcMf/cl3OHmk
      l6mpOU6dOoboCpNYiRLxGplcSvLEqX5imzKPnTz0KO6DzgHl/hpAU7l5axyVOsM3hvGZGvz9
      qzcwVFPENjIsL6+QyJR49vPnyJcklqPT3Lh+iy9+9Wvk4lu8feUGUjFFPFu677SVQpYjF75I
      o5hBKiSpmTwM/+LHNEQ7ly5eQqoU2Ex+sn1tNU1BKiWoFhM06h8coKc0JWRZ/kTX+NSiaTQb
      1bt/VKlVMqiqilwv0qhV9i4fJ9CsFaiWUvfybjZrBZqNGqpSR6rk9nTAQlVq1KqFe3+X60Ua
      jRqaKiNVsvdpua8GkOsVfAPn+OfffI6fPv8CR88/Rqw4zukzZ5lZWKa1rw/KNsxGA4IG/YND
      9EY8/OzHP6YpOnj6qceIJapEAjvpAwWDmUhbCKfXAk4H+YRAqL0bl8vP4f4eBi6cpdtVY2Ip
      RV9PN2Lu11/jqyll5t/+tyyvb3D+a/87FqGGK3yS4sZFmqZe7KYqRmcPqck/w37ov6Ut5P+k
      9/VTR3b55yytFzn/xd8ns/Q65TpY7F4y61Nogsqxp/4Fwl6kiNM0Fu/8kGDPF7A4gjQrqyzO
      3sLq8KFU1jGajFjaniPcujc5VZdG/gbR5KH9xH+BsblNdOIiVqcfsZkGgwNP1zN4PR5gF0aB
      UhtRXn7jGiefeIbTQ927UoCPwy+PAsUnv0uy0Yc5+xqSuZNcKom5uUL3uf+K7egl8oUyHpuR
      s7/9bzE9sg2ud5dqZpq1mdewtP0GvQNHGX3pf8Ph7cDR/gSJhTfBYOfMs//DnsRraVqTxds/
      oFKucPzZf0l87C/I1myYzU7k4gKNep3Bp/8VTpvl4WupLXPl5e/j8rZy6tn/nuT094kXDJiN
      kN+axOmN0P/kf4fdsqPlVzrBMq+88CP+8i+/z0R0nZEb136pM6wyNfXelNvBjkH+6z/4g/d9
      +DVNY/TOHe4MX6MoffiQZWzyFgsL84xML7/3PM0SI+PzH1RkEivjhHtPI5VLiGITi6MFWVbI
      rV2nWtzCbG9BNvg+Mw8/gFTOUi2mMJoNaKqKzdeH199KKTFJaOi3+f/bOZefuKo4jn/u5d65
      L+5jZu48mEuZwTa0JUWEFKi0W9OksYk1dmMXjXHR/i8ubWLiotFu1JiY6MLHprGIxBeQttjS
      SEBLCUyZQhlgcGbuw8XYarEbg85C57P6nZNfcr7JOb+cs/j+jqoZNOU7ZiDYvofpnUCSJAgD
      BEknWxgmrD9AUPPEk96enKl/hygMcfPHkOS2hoFOVMgWjkFQxc72o2vGE/m7boAal968zMUL
      53nr7Xfo6e4kX/C4NvYtfUNDfPL+h7z08mluzvxI//ETXL96jUiROfXiKa5+/hnp/f0YtWXm
      ixXOnD2L6q/x3sfj5F0Zy7KZvDWHEc/x6pmTzH4/xsTMHLJiUK9D3zM2gaixsA7q1l18PUtv
      TmV8apYXTr/C2Kcfce6115F/L9k/boCIh8U7WKkeIn+L+0t3SHUNslm8gaxn2NksIik2bbKK
      Fc81ZxeaRKW8jKI5VKs7SEKNcnkTN9vN6t1JzEwfqtqc/ocoilhb/A7N7SWqb6G3J1hdvE6y
      a4jKg1kC0cJJek3RArCxcgOpPQ9BBd10WV2cJtF5lOrGPD4GdqLjce5Tf4cWpRgxEVaWl8h4
      aaIoZKMSsr+nB41f8avbzM4tUAkUnutQmfh6nPThUYYPprj0xgckvTzF0iYd0jqS6nB/5SeC
      ep3CkVFuffMFcJLyeokjI8NMfjVDQtpgaWUHM7mP2toSP9yep9vbxkscJPCrFEtrxESfmg9y
      bLdaASdzqBHGLDq6hwCI5wYAaHf+W4f+z+hWYyN1WQPANRpv7FR+pKk6BEEg2fVoTROAdGG4
      MUodbqoWADv77KOooSXf0CIlDvwld1cBCDhKyJV3r3Bg4Hn80s/EJBlJltFUnaQhsrD8EM12
      yTgmeqeIk5Rx4nmmJ75krHyI46MjLJSqZFyTmO8T1m7jpjNYloNgt+PlGgfSdFzaLIt9XhZD
      0GnTJHTbIVIclKhOZOawVQlZVlBlGZ8Yyl666lq0eAr/qhUiikKmpqYZGBxE3Etzhr/N5M1f
      ODrQ+3iuZYVo8U/Q8gK1+F/zG5fU7qEl2uMYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Mode, Tour' width='192'>
      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
      K4xpZLnmKgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Trips' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Mode' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Purpose' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Mode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Work' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Auto' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Non Auto' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
