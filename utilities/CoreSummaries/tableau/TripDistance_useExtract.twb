<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='TripDistance Extract' inline='true' name='TripDistance.tde' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TripDistance Extract' name='TripDistance.tdeleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='TripDistance.tde' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='TripDistance.tdeleaf' name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>autoSuff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[autoSuff]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoSuff_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[autoSuff_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>autoSuff_label</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timeCode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeCode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeperiod_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timeperiod_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>timeperiod_label</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_mode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>trip_mode</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>20</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_purpose</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tour_purpose]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_purpose</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3913</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>21180</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>129</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[TripDistance.tde].[diff:sum:freq:qk]&quot;' value='Diff from Baseline' />
          <alias key='&quot;[TripDistance.tde].[pcto:sum:freq:qk:4]&quot;' value='Mode Share' />
          <alias key='&quot;[TripDistance.tde].[pcto:sum:freq:qk]&quot;' value='Share' />
          <alias key='&quot;[TripDistance.tde].[pcva:sum:freq:qk]&quot;' value='Change in Trips from Baseline' />
          <alias key='&quot;[TripDistance.tde].[sum:freq:qk]&quot;' value='Trips' />
          <alias key='&quot;[TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' value='Average Travel Distance (in miles)' />
        </aliases>
      </column>
      <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSEIF [trip_mode]&gt;=19 THEN&#13;&#10;  &apos;Taxi and TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;atwork&quot;' value='At work' />
          <alias key='&quot;eatout&quot;' value='Eat out' />
          <alias key='&quot;escort&quot;' value='Escort' />
          <alias key='&quot;other&quot;' value='Other' />
          <alias key='&quot;school&quot;' value='School' />
          <alias key='&quot;shopping&quot;' value='Shopping' />
          <alias key='&quot;social&quot;' value='Social' />
          <alias key='&quot;university&quot;' value='College' />
          <alias key='&quot;work&quot;' value='Work' />
        </aliases>
      </column>
      <column caption='Tour Category' datatype='string' name='[Calculation_9010911152628957]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_5230911152243163]=&apos;work&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;university&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;school&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;atwork&apos; THEN&#13;&#10;  &apos;At work&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
      <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
      <column datatype='string' name='[src]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Single occupant, No HOT' />
          <alias key='2.0' value='Single occupant, Pay to use HOT' />
          <alias key='3.0' value='Two occupants, No HOT' />
          <alias key='4.0' value='Two occupants, Pay to use HOT' />
          <alias key='5.0' value='Three or more occupants' />
          <alias key='7.0' value='Walk' />
          <alias key='8.0' value='Bicycle' />
          <alias key='9.0' value='Local Bus' />
          <alias key='10.0' value='Light rail/ferry' />
          <alias key='11.0' value='Express bus' />
          <alias key='12.0' value='Heavy rail' />
          <alias key='13.0' value='Commuter rail' />
          <alias key='14.0' value=' Local bus' />
          <alias key='15.0' value=' Light rail/ferry' />
          <alias key='16.0' value=' Express bus' />
          <alias key='17.0' value=' Heavy rail' />
          <alias key='18.0' value=' Commuter rail' />
          <alias key='19.0' value='Taxi' />
          <alias key='20.0' value='TNC, Single party' />
          <alias key='21.0' value='TNC, Shared' />
        </aliases>
      </column>
      <column-instance column='[freq]' derivation='Sum' name='[diff:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[pcva:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.544839' measure-ordering='alphabetic' measure-percentage='0.455161' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1010911151419745:nk]' palette='tableau-10' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Walk to transit&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bicycle&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Walk&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Automobile&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Drive to transit&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Taxi and TNC&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:src:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010_04_ZZZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2040_03_127&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>%all%</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2040_03_116&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' palette='tableau-20' type='palette'>
            <map to='#02401b'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;CG 07 Baseline&quot;</bucket>
            </map>
            <map to='#81a88d'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            </map>
            <map to='#85d4e3'>
              <bucket>&quot;Year 2020, No Project (v 3)&quot;</bucket>
            </map>
            <map to='#972d15'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + No Parking Fees&quot;</bucket>
            </map>
            <map to='#9c964a'>
              <bucket>&quot;Year 2020, Scenario 1 (v 3)&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;CG 07 ShortTrips &quot;</bucket>
            </map>
            <map to='#cdc08c'>
              <bucket>&quot;Year 2020, Scenario 2 (v 3)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Housing at Key Stations&quot;</bucket>
            </map>
            <map to='#d8b70a'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            </map>
            <map to='#f4b5bd'>
              <bucket>&quot;Year 2020, Plan Bay Area&quot;</bucket>
            </map>
            <map to='#fad77b'>
              <bucket>&quot;Year 2020, Scenario 3 (v 3)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Calculation_1010911151419745:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Walk&quot;</bucket>
            <bucket>&quot;Bicycle&quot;</bucket>
            <bucket>&quot;Walk to transit&quot;</bucket>
            <bucket>&quot;Drive to transit&quot;</bucket>
            <bucket>&quot;Taxi and TNC&quot;</bucket>
            <bucket>&quot;Automobile&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:Scenario:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Year 2015 (v 0.4), Baseline&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $3 fee at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + $6 fee at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + No drive access at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Housing at Key Stations&quot;</bucket>
            <bucket>&quot;Year 2020, Plan Bay Area&quot;</bucket>
            <bucket>&quot;Year 2020, No Project (v 3)&quot;</bucket>
            <bucket>&quot;Year 2020, Scenario 1 (v 3)&quot;</bucket>
            <bucket>&quot;Year 2020, Scenario 2 (v 3)&quot;</bucket>
            <bucket>&quot;Year 2020, Scenario 3 (v 3)&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across.Chart.Auto'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Detailed Automobile Mode Shares for All Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='TripDistance.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_mode]' derivation='None' name='[none:trip_mode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[TripDistance.tde].[none:trip_mode:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
                <alias key='19.0' value='Taxi' />
                <alias key='20.0' value='TNC, Single party' />
                <alias key='21.0' value='TNC, Shared' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[TripDistance.tde].[none:trip_mode:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:trip_mode:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:trip_mode:ok]' member='7.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='8.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='9.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='10.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='11.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='12.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='13.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='14.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='15.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='16.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='17.0' />
                <groupfilter function='member' level='[none:trip_mode:ok]' member='18.0' />
              </groupfilter>
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[TripDistance.tde].[pcto:sum:freq:qk:3]' value='83' />
            <format attr='title' class='0' field='[TripDistance.tde].[pcto:sum:freq:qk:3]' scope='rows' value='Share of All Trips' />
            <format attr='subtitle' class='0' field='[TripDistance.tde].[pcto:sum:freq:qk:3]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[TripDistance.tde].[pcto:sum:freq:qk:3]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[TripDistance.tde].[pcto:sum:freq:qk:3]' field-type='quantitative' max='0.55000000000000004' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[TripDistance.tde].[none:Scenario:nk]' value='47' />
            <format attr='text-format' field='[TripDistance.tde].[pcto:sum:freq:qk:3]' value='p0.0%' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='32' />
            <format attr='height' field='[TripDistance.tde].[none:trip_mode:ok]' value='86' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[TripDistance.tde].[none:Scenario:nk]' value='false' />
            <format attr='font-family' field='[TripDistance.tde].[none:trip_mode:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[TripDistance.tde].[pcto:sum:freq:qk:3]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[TripDistance.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1800'>Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1800'>&lt;[TripDistance.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1800'>&#10;Mode Share:&#9;</run>
                <run bold='true' fontsize='14' indent='1800'>&lt;[TripDistance.tde].[pcto:sum:freq:qk:3]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[TripDistance.tde].[pcto:sum:freq:qk:3]</rows>
        <cols>([TripDistance.tde].[none:trip_mode:ok] / [TripDistance.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.Mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Travel Distance by Simple Travel Mode for All Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSEIF [trip_mode]&gt;=19 THEN&#13;&#10;  &apos;Taxi and TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
                <alias key='19.0' value='Taxi' />
                <alias key='20.0' value='TNC, Single party' />
                <alias key='21.0' value='TNC, Shared' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='74' />
            <format attr='subtitle' class='0' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' field-type='quantitative' max='25.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[TripDistance.tde].[none:Scenario:nk]' value='39' />
            <format attr='text-format' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='24' />
            <format attr='height' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='38' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[TripDistance.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-family' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[TripDistance.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:  </run>
                <run bold='true' fontsize='14'>&lt;[TripDistance.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14'>&#10;Avg Travel Distance (in miles):  </run>
                <run bold='true' fontsize='14'>&lt;[TripDistance.tde].[usr:Calculation_2620911151847080:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[TripDistance.tde].[usr:Calculation_2620911151847080:qk]</rows>
        <cols>([TripDistance.tde].[none:Calculation_1010911151419745:nk] / [TripDistance.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.ModeShare'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSEIF [trip_mode]&gt;=19 THEN&#13;&#10;  &apos;Taxi and TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
                <alias key='19.0' value='Taxi' />
                <alias key='20.0' value='TNC, Single party' />
                <alias key='21.0' value='TNC, Shared' />
              </aliases>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[TripDistance.tde].[none:Scenario:nk]' value='164' />
            <format attr='text-format' field='[TripDistance.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='font-family' field='[TripDistance.tde].[pcto:sum:freq:qk]' value='Arial Narrow' />
            <format attr='font-size' field='[TripDistance.tde].[pcto:sum:freq:qk]' value='12' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[TripDistance.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-size' field='[TripDistance.tde].[none:Scenario:nk]' value='12' />
            <format attr='font-family' field='[TripDistance.tde].[pcto:sum:freq:qk]' value='Arial Narrow' />
            <format attr='font-size' field='[TripDistance.tde].[pcto:sum:freq:qk]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end-size' value='small' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' />
              <text column='[TripDistance.tde].[pcto:sum:freq:qk]' />
              <text column='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' />
              <lod column='[TripDistance.tde].[pcto:sum:freq:qk]' />
              <lod column='[TripDistance.tde].[sum:freq:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[TripDistance.tde].[pcto:sum:freq:qk]</rows>
        <cols>[TripDistance.tde].[none:Scenario:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.Non Auto'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Non-Automobile Mode Shares for All Travel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSEIF [trip_mode]&gt;=19 THEN&#13;&#10;  &apos;Taxi and TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
                <alias key='19.0' value='Taxi' />
                <alias key='20.0' value='TNC, Single party' />
                <alias key='21.0' value='TNC, Shared' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1010911151419745:nk]' />
              <groupfilter function='member' level='[none:Calculation_1010911151419745:nk]' member='&quot;Automobile&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Walk to transit&quot;</bucket>
              <bucket>&quot;Drive to transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[TripDistance.tde].[pcto:sum:freq:qk:4]' scope='rows' value='Share of all Trips' />
            <format attr='subtitle' class='0' field='[TripDistance.tde].[pcto:sum:freq:qk:4]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[TripDistance.tde].[pcto:sum:freq:qk:4]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[TripDistance.tde].[pcto:sum:freq:qk:4]' field-type='quantitative' max='0.55000000000000004' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[TripDistance.tde].[pcto:sum:freq:qk:4]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[TripDistance.tde].[none:Scenario:nk]' value='false' />
            <format attr='font-family' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[TripDistance.tde].[pcto:sum:freq:qk:4]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[TripDistance.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1710'>Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[TripDistance.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1710'>&#10;Mode Share:&#9;</run>
                <run bold='true' fontsize='14' indent='1710'>&lt;[TripDistance.tde].[pcto:sum:freq:qk:4]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[TripDistance.tde].[pcto:sum:freq:qk:4]</rows>
        <cols>([TripDistance.tde].[none:Calculation_1010911151419745:nk] / [TripDistance.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Chart.Work'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Travel Distance by Simple Travel Mode for Travel on Work Tours</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSEIF [trip_mode]&gt;=19 THEN&#13;&#10;  &apos;Taxi and TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[tour_purpose]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
                <alias key='19.0' value='Taxi' />
                <alias key='20.0' value='TNC, Single party' />
                <alias key='21.0' value='TNC, Shared' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[TripDistance.tde].[none:Calculation_5230911152243163:nk]'>
            <groupfilter function='member' level='[none:Calculation_5230911152243163:nk]' member='&quot;work&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[TripDistance.tde].[none:Calculation_5230911152243163:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='74' />
            <format attr='subtitle' class='0' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' field-type='quantitative' max='25.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[TripDistance.tde].[none:Scenario:nk]' value='39' />
            <format attr='text-format' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
            <format attr='height' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[TripDistance.tde].[none:Scenario:nk]' value='false' />
            <format attr='text-format' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-family' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[TripDistance.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Scenario:  </run>
                <run bold='true' fontsize='14'>&lt;[TripDistance.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14'>&#10;Avg Travel Distance (in miles):  </run>
                <run bold='true' fontsize='14'>&lt;[TripDistance.tde].[usr:Calculation_2620911151847080:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[TripDistance.tde].[usr:Calculation_2620911151847080:qk]</rows>
        <cols>([TripDistance.tde].[none:Calculation_1010911151419745:nk] / [TripDistance.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Travel Distance by Simple Travel Mode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSEIF [trip_mode]&gt;=19 THEN&#13;&#10;  &apos;Taxi and TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
                <alias key='19.0' value='Taxi' />
                <alias key='20.0' value='TNC, Single party' />
                <alias key='21.0' value='TNC, Shared' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Drive to transit&quot;</bucket>
              <bucket>&quot;Walk to transit&quot;</bucket>
              <bucket>&quot;Taxi and TNC&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='87' />
            <format attr='height' field='[TripDistance.tde].[none:Scenario:nk]' value='53' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[TripDistance.tde].[none:Scenario:nk]' value='216' />
            <format attr='height' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='56' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[TripDistance.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[TripDistance.tde].[none:Scenario:nk]</rows>
        <cols total='true'>[TripDistance.tde].[none:Calculation_1010911151419745:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.ModeShare'>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSEIF [trip_mode]&gt;=19 THEN&#13;&#10;  &apos;Taxi and TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[diff:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
                <alias key='19.0' value='Taxi' />
                <alias key='20.0' value='TNC, Single party' />
                <alias key='21.0' value='TNC, Shared' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TripDistance.tde].[diff:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TripDistance.tde].[pcto:sum:freq:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TripDistance.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[TripDistance.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[TripDistance.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[TripDistance.tde].[diff:sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[TripDistance.tde].[pcto:sum:freq:qk:4]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[TripDistance.tde].[pcto:sum:freq:qk:4]' value='p0.0%' />
            <format attr='font-family' field='[TripDistance.tde].[pcto:sum:freq:qk:4]' value='Arial Narrow' />
            <format attr='font-size' field='[TripDistance.tde].[pcto:sum:freq:qk:4]' value='12' />
            <format attr='width' field='[TripDistance.tde].[none:Scenario:nk]' value='98' />
            <format attr='width' field='[TripDistance.tde].[:Measure Names]' value='106' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[TripDistance.tde].[:Measure Names]' value='80' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[TripDistance.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-size' field='[TripDistance.tde].[none:Scenario:nk]' value='12' />
            <format attr='font-family' field='[TripDistance.tde].[pcto:sum:freq:qk:4]' value='Arial Narrow' />
            <format attr='font-size' field='[TripDistance.tde].[pcto:sum:freq:qk:4]' value='12' />
            <format attr='font-family' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='Arial Narrow' />
            <format attr='font-size' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end-size' value='small' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[TripDistance.tde].[Multiple Values]' />
              <lod column='[TripDistance.tde].[sum:freq:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[TripDistance.tde].[none:Calculation_1010911151419745:nk]</rows>
        <cols>([TripDistance.tde].[none:Scenario:nk] / [TripDistance.tde].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Purpose'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Travel Distance and Number of Trips by Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='TripDistance.tde'>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column caption='Tour Category' datatype='string' name='[Calculation_9010911152628957]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_5230911152243163]=&apos;work&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;university&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;school&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;atwork&apos; THEN&#13;&#10;  &apos;At work&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9010911152628957]' derivation='None' name='[none:Calculation_9010911152628957:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcva:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[tour_purpose]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TripDistance.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TripDistance.tde].[pcva:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[TripDistance.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;</bucket>
              <bucket>&quot;[TripDistance.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[TripDistance.tde].[pcva:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[TripDistance.tde].[none:Calculation_5230911152243163:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;work&quot;</bucket>
              <bucket>&quot;university&quot;</bucket>
              <bucket>&quot;atwork&quot;</bucket>
              <bucket>&quot;eatout&quot;</bucket>
              <bucket>&quot;escort&quot;</bucket>
              <bucket>&quot;school&quot;</bucket>
              <bucket>&quot;shopping&quot;</bucket>
              <bucket>&quot;social&quot;</bucket>
              <bucket>&quot;other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[TripDistance.tde].[none:Calculation_9010911152628957:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mandatory&quot;</bucket>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Non-mandatory&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[TripDistance.tde].[none:Scenario:nk]' value='38' />
            <format attr='text-format' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[TripDistance.tde].[pcva:sum:freq:qk]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[TripDistance.tde].[none:Calculation_5230911152243163:nk]' value='92' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[TripDistance.tde].[none:Scenario:nk]' value='132' />
            <format attr='height' field='[TripDistance.tde].[none:Calculation_5230911152243163:nk]' value='52' />
            <format attr='width' field='[TripDistance.tde].[:Measure Names]' value='136' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[TripDistance.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[TripDistance.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[TripDistance.tde].[none:Calculation_5230911152243163:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[TripDistance.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([TripDistance.tde].[:Measure Names] / [TripDistance.tde].[none:Scenario:nk])</rows>
        <cols total='true'>([TripDistance.tde].[none:Calculation_9010911152628957:nk] / [TripDistance.tde].[none:Calculation_5230911152243163:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Mode, Inc'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Number of Trips and Average Travel Distance by Household Income Category and Simple Travel Mode for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSEIF [trip_mode]&gt;=19 THEN&#13;&#10;  &apos;Taxi and TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[distance]' derivation='Sum' name='[sum:distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
                <alias key='19.0' value='Taxi' />
                <alias key='20.0' value='TNC, Single party' />
                <alias key='21.0' value='TNC, Shared' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TripDistance.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[TripDistance.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[TripDistance.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[TripDistance.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='26' />
            <format attr='width' field='[TripDistance.tde].[none:incQ_label:nk]' value='127' />
            <format attr='text-format' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[TripDistance.tde].[none:incQ_label:nk]' value='52' />
            <format attr='width' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='136' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#906800' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[TripDistance.tde].[none:incQ_label:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[TripDistance.tde].[:Measure Names]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[TripDistance.tde].[Multiple Values]' />
              <lod column='[TripDistance.tde].[sum:distance:qk]' />
              <lod column='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([TripDistance.tde].[:Measure Names] / [TripDistance.tde].[none:Calculation_1010911151419745:nk])</rows>
        <cols total='true'>[TripDistance.tde].[none:incQ_label:nk]</cols>
        <pages>
          <column>[TripDistance.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Mode, Tour'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Number of Trips and Average Travel Distance by Tour Purpose and Simple Travel Mode for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSEIF [trip_mode]&gt;=19 THEN&#13;&#10;  &apos;Taxi and TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average Travel Distance' datatype='real' name='[Calculation_2620911151847080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([distance]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Purpose' datatype='string' name='[Calculation_5230911152243163]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FIND([tour_purpose],&quot;_&quot;) &lt;&gt; 0 THEN&#13;&#10;  LEFT([tour_purpose], FIND([tour_purpose],&quot;_&quot;)-1)&#13;&#10;ELSEIF LEFT([tour_purpose],3)=&quot;oth&quot; THEN&#13;&#10;  &quot;other&quot;&#13;&#10;ELSE&#13;&#10;  [tour_purpose]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;atwork&quot;' value='At work' />
                <alias key='&quot;eatout&quot;' value='Eat out' />
                <alias key='&quot;escort&quot;' value='Escort' />
                <alias key='&quot;other&quot;' value='Other' />
                <alias key='&quot;school&quot;' value='School' />
                <alias key='&quot;shopping&quot;' value='Shopping' />
                <alias key='&quot;social&quot;' value='Social' />
                <alias key='&quot;university&quot;' value='College' />
                <alias key='&quot;work&quot;' value='Work' />
              </aliases>
            </column>
            <column caption='Tour Category' datatype='string' name='[Calculation_9010911152628957]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_5230911152243163]=&apos;work&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;university&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;school&apos; THEN&#13;&#10;  &apos;Mandatory&apos;&#13;&#10;ELSEIF [Calculation_5230911152243163]=&apos;atwork&apos; THEN&#13;&#10;  &apos;At work&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Non-mandatory&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5230911152243163]' derivation='None' name='[none:Calculation_5230911152243163:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9010911152628957]' derivation='None' name='[none:Calculation_9010911152628957:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[tour_purpose]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
                <alias key='19.0' value='Taxi' />
                <alias key='20.0' value='TNC, Single party' />
                <alias key='21.0' value='TNC, Shared' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2620911151847080]' derivation='User' name='[usr:Calculation_2620911151847080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TripDistance.tde].[usr:Calculation_2620911151847080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TripDistance.tde].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[TripDistance.tde].[none:Calculation_5230911152243163:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;atwork&quot;</bucket>
              <bucket>&quot;eatout&quot;</bucket>
              <bucket>&quot;escort&quot;</bucket>
              <bucket>&quot;work&quot;</bucket>
              <bucket>&quot;university&quot;</bucket>
              <bucket>&quot;school&quot;</bucket>
              <bucket>&quot;shopping&quot;</bucket>
              <bucket>&quot;social&quot;</bucket>
              <bucket>&quot;other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[TripDistance.tde].[none:Calculation_9010911152628957:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mandatory&quot;</bucket>
              <bucket>&quot;At work&quot;</bucket>
              <bucket>&quot;Non-mandatory&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[TripDistance.tde].[none:Calculation_5230911152243163:nk]' value='27' />
            <format attr='text-format' field='[TripDistance.tde].[usr:Calculation_2620911151847080:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='48' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[TripDistance.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([TripDistance.tde].[:Measure Names] / ([TripDistance.tde].[none:Calculation_9010911152628957:nk] / [TripDistance.tde].[none:Calculation_5230911152243163:nk]))</rows>
        <cols total='true'>[TripDistance.tde].[none:Calculation_1010911151419745:nk]</cols>
        <pages>
          <column>[TripDistance.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Trips'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Number of Trips by Detailed Travel Mode and Income Quartile for </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TripDistance Extract' name='TripDistance.tde' />
          </datasources>
          <datasource-dependencies datasource='TripDistance.tde'>
            <column caption='Simple Travel Mode' datatype='string' name='[Calculation_1010911151419745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [trip_mode]&lt;7 THEN&#13;&#10;  &apos;Automobile&apos;&#13;&#10;ELSEIF [trip_mode]=7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [trip_mode]=8 THEN&#13;&#10;  &apos;Bicycle&apos;&#13;&#10;ELSEIF [trip_mode]&gt;8 AND [trip_mode]&lt;=13 THEN&#13;&#10;  &apos;Walk to transit&apos;&#13;&#10;ELSEIF [trip_mode]&gt;=19 THEN&#13;&#10;  &apos;Taxi and TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Drive to transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Number of Trips' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='Income Quartile' datatype='string' name='[incQ_label]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1010911151419745]' derivation='None' name='[none:Calculation_1010911151419745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ_label]' derivation='None' name='[none:incQ_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_mode]' derivation='None' name='[none:trip_mode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Travel Mode' datatype='real' name='[trip_mode]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Single occupant, No HOT' />
                <alias key='2.0' value='Single occupant, Pay to use HOT' />
                <alias key='3.0' value='Two occupants, No HOT' />
                <alias key='4.0' value='Two occupants, Pay to use HOT' />
                <alias key='5.0' value='Three or more occupants' />
                <alias key='7.0' value='Walk' />
                <alias key='8.0' value='Bicycle' />
                <alias key='9.0' value='Local Bus' />
                <alias key='10.0' value='Light rail/ferry' />
                <alias key='11.0' value='Express bus' />
                <alias key='12.0' value='Heavy rail' />
                <alias key='13.0' value='Commuter rail' />
                <alias key='14.0' value=' Local bus' />
                <alias key='15.0' value=' Light rail/ferry' />
                <alias key='16.0' value=' Express bus' />
                <alias key='17.0' value=' Heavy rail' />
                <alias key='18.0' value=' Commuter rail' />
                <alias key='19.0' value='Taxi' />
                <alias key='20.0' value='TNC, Single party' />
                <alias key='21.0' value='TNC, Shared' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[TripDistance.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TripDistance.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[TripDistance.tde].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[TripDistance.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[TripDistance.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[TripDistance.tde].[pcto:sum:freq:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Automobile&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bicycle&quot;</bucket>
              <bucket>&quot;Walk to transit&quot;</bucket>
              <bucket>&quot;Drive to transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[TripDistance.tde].[none:incQ_label:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than $30k&quot;</bucket>
              <bucket>&quot;$30k to $60k&quot;</bucket>
              <bucket>&quot;$60k to $100k&quot;</bucket>
              <bucket>&quot;More than $100k&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[TripDistance.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[TripDistance.tde].[none:trip_mode:ok]' value='35' />
            <format attr='text-format' field='[TripDistance.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[TripDistance.tde].[none:trip_mode:ok]' value='204' />
            <format attr='height' field='[TripDistance.tde].[:Measure Names]' value='56' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[TripDistance.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='font-family' field='[TripDistance.tde].[none:trip_mode:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[TripDistance.tde].[Multiple Values]' />
              <lod column='[TripDistance.tde].[pcto:sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([TripDistance.tde].[none:Calculation_1010911151419745:nk] / [TripDistance.tde].[none:trip_mode:ok])</rows>
        <cols total='true'>([TripDistance.tde].[none:incQ_label:nk] / [TripDistance.tde].[:Measure Names])</cols>
        <pages>
          <column>[TripDistance.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Indiv.Table.Mode, Inc'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='124'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
            <field>[TripDistance.tde].[none:Scenario:nk]</field>
            <field>[TripDistance.tde].[none:incQ_label:nk]</field>
            <field>[TripDistance.tde].[none:src:nk]</field>
            <field>[TripDistance.tde].[none:trip_mode:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{A91EB904-B663-472F-9C82-1D2CAFAEC6F7}' />
    </window>
    <window class='worksheet' name='Indiv.Table.Mode, Tour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='72'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TripDistance.tde].[:Measure Names]</field>
            <field>[TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
            <field>[TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
            <field>[TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
            <field>[TripDistance.tde].[none:Scenario:nk]</field>
            <field>[TripDistance.tde].[none:incQ_label:nk]</field>
            <field>[TripDistance.tde].[none:src:nk]</field>
            <field>[TripDistance.tde].[none:trip_mode:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{C09EDBFF-9103-481A-8D85-3DD6CA9EF811}' />
    </window>
    <window class='worksheet' name='Indiv.Table.Trips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='83'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
            <field>[TripDistance.tde].[none:Scenario:nk]</field>
            <field>[TripDistance.tde].[none:incQ_label:nk]</field>
            <field>[TripDistance.tde].[none:src:nk]</field>
            <field>[TripDistance.tde].[none:trip_mode:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{E9E75DCD-FE8D-491E-9F7A-06617B699871}' />
    </window>
    <window class='worksheet' name='Across.Table.Mode' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='99'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
            <field>[TripDistance.tde].[none:Scenario:nk]</field>
            <field>[TripDistance.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{79D4782A-E04D-4ADE-AF39-AA464C4D3D52}' />
    </window>
    <window class='worksheet' name='Across.Table.Purpose' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='76'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TripDistance.tde].[:Measure Names]</field>
            <field>[TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
            <field>[TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
            <field>[TripDistance.tde].[none:Scenario:nk]</field>
            <field>[TripDistance.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{C84DDB82-0002-4228-8C62-67B904E895EF}' />
    </window>
    <window class='worksheet' name='Across.Chart.Mode' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[TripDistance.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TripDistance.tde].[:Measure Names]</field>
            <field>[TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
            <field>[TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
            <field>[TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
            <field>[TripDistance.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{1B2D49E5-2C09-4870-9740-1B0E28060955}' />
    </window>
    <window class='worksheet' name='Across.Chart.Work' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[TripDistance.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='75'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TripDistance.tde].[:Measure Names]</field>
            <field>[TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
            <field>[TripDistance.tde].[none:Calculation_5230911152243163:nk]</field>
            <field>[TripDistance.tde].[none:Calculation_9010911152628957:nk]</field>
            <field>[TripDistance.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{2B78377F-E70B-4179-A4ED-2B6D3898DF68}' />
    </window>
    <window class='worksheet' name='Across.Chart.Auto' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[TripDistance.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='81'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
            <field>[TripDistance.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{4C83CE38-2613-4AFA-B9B8-F54397E4AA89}' />
    </window>
    <window class='worksheet' name='Across.Chart.Non Auto' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[TripDistance.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TripDistance.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{E3C50E2B-5DD8-46CD-9673-F98C8FC63FEA}' />
    </window>
    <window class='worksheet' name='Across.Chart.ModeShare' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[TripDistance.tde].[none:Calculation_1010911151419745:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
            <field>[TripDistance.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87FFC998-4A30-489F-9EF5-B61056440A52}' />
    </window>
    <window class='worksheet' maximized='true' name='Across.Table.ModeShare' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[TripDistance.tde].[:Measure Names]</field>
            <field>[TripDistance.tde].[none:Calculation_1010911151419745:nk]</field>
            <field>[TripDistance.tde].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78EB483D-25A2-4DC1-856F-F34CFC2EEC44}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Across.Chart.Auto' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAax0lEQVR4nO3daXAb553n8W/jPgmAIAGCt0SJFEkd1C1Lju04ViZxysnG8WwOp1Kpmszs
      5s1W5dVW7VZt1b7Yd1v7IrszVZlUZpKZOJlMeTJxnMSWndhyHNmybks8xPsmSBAEQIK40d37
      QoljmpIoC7wk/D9VKpFAo58HTfz6ebr7wdOKrus6QpQpw1ZXQIitJAEQZU0CIMqaBOAhkExE
      6e3tZXoueudlkkl0XSUSiaKpBWLxxQ+e04p5kqnMZlR12zFtdQVE6VwVlSQHR9nRYODK9T7c
      FhWTxYGvuprlRIJYfJF0LsOxIx28+qs3+PSTHVwZSdNcZaaqtpHJgRtkrX4qzBrNuztw281b
      /ZY2jbQADwHFYMBoMFBYTqCYLUQXEoxMTNBz5RLdN3pYXo4xE00CUO2x0zeRwJkPo3kaOf/6
      b/DVNREZ62V+Kc3EVHiL383mUuQ06MNheGSEUKWLeE5ncngMq7sCs54nWF3J0PgMbl8lHa0N
      jN6cIFnI47KZScTjVFT6ic9HsHt8pJcW2dl+gIDXsdVvZ9NIAERZky6QKGsbGgBd1ykUChtZ
      xIavX8rYPuvfiDIe+ADk8/kNXb+UsX3WvxFlSBfogaGTy2ZIpVKomhy2rRe5DvAAuX7+dV57
      b5Rnn/sSAZ8DTVUxUiSrWwkFKlG2uoIPIAnAA0PhyIkTTKb9LE33c/bMTarrm8km5ili5GvP
      fx2LUSLwcW1pF2i45xI//snPGB7sZyaWWvGcthzhQvdIyWW8++YrvPjSGXq7eyh85IzvxM0r
      zCTWp085cP0C3/ve33N9YGJd1ndbihG3007b7mbq6+sIhHbgc1mxOn0YpTN7X7a0BViIzBJf
      mGNoaJhc300mp8Ls3beXm73Xqa+pZbGocO7Mz3nima9wsLX+vsoIz0wTjhUwKzrjE/2MTsbZ
      t7uO93v6CdUEsI7H+WlvH9/41reodtvu+7207jtM9/AsjkyYX7x0DaPRhMmgMTkd4S+f/wY+
      R+mbWrH6Of24H4BnPt9y68GjHSWvt5xt6X4jrxpoCPqYn4+SzmTY097G9MQ0bp+PXDbPcjyK
      ZrRhUO6zadeLmGwenGaVWGKZjGagpSHI7GwMb4WTgqoTmZ3D6Xaj3G8ZH9G4s5mpyUmm5xcp
      ZJJ47QpL2eK6rHstuq6xvJy64/OaWiSbzVIoFFBVbVPqtFF0XSeXy5HN5SgUi2iahqpqFAt5
      iqr6wXKqWqRQKKIWi3z0mq+mqRt7JVjTNLLZLA7H7S+tF7IpJsNRaqp9pLN5zGYz6aUFzp0/
      T6hpP+1tTaQX4wTr6jHfoY1PpVI4nc471iGZiJJIq7isZjQDGFGITo/wzqUbnPjkX1BX7SEW
      W6S+LsSdMrBWGQDoOgvxOP5KH4uLi4ARu0VhNrZMQ23NHdd9uzIKmUVeOfMGx059givn3+Hg
      seNceu8C+/e1U9CN5HNZhvsHaD90lJH336Ols4vBm714PW7e7R7lQKOP+o7jtDYFV5QxcOMi
      P/vFGR579AhzSyY+c/ok0alpXN4KVMWCXcmTN9gIVHqIzk6DrYJCcgGbpxoKaRaXUhhNRmpq
      AoyPz1Bb42N2YRmHScPuDWBCXXs7lehP20kr5njxR99jlhC21ChdJ04SS2pMjw9jcfv5+nOf
      R1HgX//p71lIG+jq6KC+oxU9nSEY8DM9HSY5N7K1AbgdXdfRNA2DwXBPe+V7+nDetgwdg9Fw
      T2dO7qeMj+vDZfSe/x0ph593X/sdnY88iR4dxl63Gz0+SVK3kk2nMVsrWFwYZzkWw1ldh8vp
      oqgWMZtNxGdGMVft4vlnP7OqjDOvvcbpk3v5ycu/J1hbT3hoBqMpgW6rRklHMVc28s3nnuKH
      P/klGA0Y8yk+99zXuHr214yGoyhGMygmgkE3y8kcBneAmf4rNHUe5y8eO7qp22my+13mLM1M
      XTrDxOwMPn8jex89TVvIjd3uQEHj7JmXuXZznOZQA3lLnmR0GafLBmoBTLbtdx1AURSMRiOK
      olBIJxgamwGgkI1z5vVzXL58kaJaWmZvlWFAyyzSPzoNQC4V5Uc/+Ed+88Y7rOcuob+/b9V5
      +/Nvvc70zDTXeodv+5qdHQcY673JM1/+MonpAZr3HWJmuJ+6XXtILS1SE/AwPDjAvq4j+IK1
      7N7RzK6WnbS07MRiNlNXW8uetibOnbu0at1OpxOD0cyevXtx2620tLWxo74OfyBIbU01VdXV
      YLLhMhVxeauoqd+B3+PE7q1iX0cHezvaqGsIMROO01BXQ3t7O4GqSqqrq+5pewx1X+L73/8+
      126OrXh8bryf6PLHu2hqstiwmk24/bUc6+qkcU8n3W//hpdff5sb77+PCmQyGVzuCpwuJ06P
      n87WFkKhIIn4IharfXNagLnRHl4/d40DB/Zx9ep19na00jMwzp6dDVgtJpLpNANDY3Tu38f1
      C+fpOnSQ7t4+qv0+lgyV/NVffoZsKsz//B//j5aD+2gLVXBzPMpzX/kqFj1PdKKPV9++SmfH
      Hnp6+una38bVG8Psaq7HZTeTV4vc6Bugfe8Bui++y4FDh+jp7SNQ7WNB9fCfvvI0qcQEL/zr
      WxisRkIujSQufBUVoOs8euoEZ1/9BbGig2qHSpIKrNkIJv9OTIUkugLJ6BTxvJ3WWhf9c3mC
      jjzhRQ19aYqqUBPTsRzf/ptvYjXCSz/7AbGUQmUwRCw8RUP7YR7parvnvWcuFSeWUggFvHde
      SC8SX8zg87o/eGijW7J77Sr+/Bcv8dSpLv7hxz/nyPGjXL7Sw9EDOwl1PMaOqrufiLjX9zA1
      NUVdff1tW/jZiSH6R6bZd/SRzWkBZuciBANehvqH8NfUEZmeobaxjnwmSU9fP+lUCo/Xw9Dg
      IHOROcJzUdrb92Cw2HHbzMzOxwA4ceokA719ROYTeKwKS5lbpzDnwhFqgpUM9g9RFaolMj1F
      bWMD2dQSPX0DZDJpPD4vI/39RObnCM9FaO9ox2ix47SbmY0sAODxVfHcF79AeHqSidk42YUR
      sPsASCxn0HNJIok01V4XyWwBr8vG7PQoEzPzZLNFDGqB6ZkZJsYmyBnsBHxOausbcdktxCLT
      TE5OU9DAYPdT44JEPI7JVUlsPvKRLaYzOthH981BtNvsnzQsBO/24QdQTCs+/OtF1zVS6dK/
      PbYUixKZmyFdVJiPLmDUCxRKbNk/rP5DH35d10ml/nxyoKZxF48/8TiVTsvmtAA2i5GxyTCN
      jfVMjk9Q31DH5NQsdTV+5iIxlsJDTKt+Hju0m3A4jMvpwmK1ogGpxALzyQJdHTtJLGUp5NNU
      uBxE4ika60OkUynsNjNj4zM0NtYxOTFFQ2MdExNhamsqiczHSc+PMZZ28vjRDsLhGVwuFxaL
      FQ2F1OICkUSOrs4dLC0X8HndhKfGUQ1G3vj1y3zquW/itWgUcykymhmXSSOZV7AZ8qhGJ1o2
      iWq08O5br3P80aewGQos53TsDisGwKSoFHQjqUye1HyYloOHScWiuBw2lrMa2WQMb6AW1MKH
      9mwa//LP/4zdpBLqfIT58CwNdUE8FoXqllZ++H/+N098/vOMjs5w+vSTREaHKBoVcoUiA8NT
      nDzczvkr/Zw+/QSWD508+PDeM59e5LXfvsWxk6e4cuE8B48c5dKFS+zb20ZRN5LP5RgeHKTj
      0BGGrl1gx55ORgaHqHCbuTYYp63GQuPeE7TUV992/Xek60QXFvC6HUxMhzGbLTgddnL5Ah5/
      AIfFeNeXr1VGbGaMc5d7OHzsCFcvXGDPnlZu9vfQOxLm6adOY1RU2trbPwjHtjgI1jQNUDAY
      VjdYuq6jwx1Phd7LRtc1Df0O60fX0XRWP6frFFUVo8lE+h7KUFUVo/Huf7w/Hdyv/T40/vHv
      vou7dje1PgtvvXuZve3thJcL/PXzX+JXL/4beV2lLuDB0XiEVP95UkZIZnX6u3sIBkM43XYe
      /fQXqPVYb1vGjXfOkLVX887Zs+w9/gTFyAiuul2o8QnSioNsKoXB5iE1P0I0uoC7KojXU4Wu
      5zGZK4iMXMdRv4+v/odP3eE9bIy1yhi6/BZTyzqDI+Mk52eoDjXReugE04M3MKvLFGw1PPu5
      P9d5y4dC5NMxfv/eAHo+QajKzcUbQ4SadjLb8x65yla+9ZVnMN7ug3sbmprjt799h8ceP06h
      CG6Xg3Q6jQIoBsgXwW5WyBZ03C4br/z6DAd2BxhJGBjsvorJWcmukJmz5/p4/q/+hsZAxT2/
      j3OvnuHQ6RO89cZ1UtExUkUDe1p3cPatc3zuS19lf2vTHT/8t3Pg+OMcOnyQ/vffo2nHLnY3
      BVgYSaOgUFvjRbNWMDIe5plHKknoOzh3+SatbbvIpvMcP9TBhevD+J13/m5vS8dBfvnK73jm
      2ee4cv4dDhw+wpWLlzhy7BBXrrxPfcjPe1cH+OQTJ+jrvkFdQxM+XxWqWmBmJkJtfR2B3c33
      /H42j07PwASfONFF9w0zTY3N1AX8LEyYMaXyhHavvHC45S1APhXlu9/9AWmDhX0t9Xz2i8/x
      m5f+nY56D2rtUTrr7/4hXHH+PBvn7/72pwRCLpYz8PVvPM9vX/4lRmAxF2VwqkBHjYmhSJHv
      fOc/89Pv/V+yhTx2Ty3Hnnqa2I032PXYad559SJffPbj7dlee/HHzGRyqAUT9bv20lWjM5Sr
      Ym7ofZ794hfW3FZrlTHY8z6VjW34S7ha/XH20NnkArGsidpqz4as/36tVcbi/AxFW+VttpPO
      5YsX2H/o6IprSlveAgB0HDqJlo8TqnTwwj/9kEB9K5D92KMbzTYXbocBdCjqt7pNxmKKmxMJ
      9nU1MTw9jsXmpLHZh9kA3pomDrfV0B/VefvXL2KwuDhmh/sZVmkwOvnSf/wsr71yibmhy7zU
      p/D5L3+NyPD6XGHe3bmfnu5ejFUulnDRf/ltnKHd6PFxxmbjPPn0s4R89nUpC8Dm9lO7/sfQ
      G85TXXuHZxQOHz2++tGtbgFKtR32OptThsaPvve3aLqK1VPL7kMnWej5A8efepI3/zDIs0+f
      WocySrM9ttPHs+0uhIk7c/trefRYF1ablehsmKV0AZP8BUuyLbpA4l4oHDl6FH+FDd9OB+HR
      Puyf+BRuewWH9+/e6so9sCQADwyFxqZGAJxA1cGjHzzTVH//B8blThpQUdY2rAUoFm+NPc/n
      86vGYa+nbDa7YeuWMrbX+jeijJICkFqYpXd8jsZgBeORZaoq7KTyOl6XjYaGBhwOBwaDYUPP
      AgEbfuZBytg+61/vMkoKwEI0QiabJTydJqeZWVwqEItGWHL58VYFcVrlEENsbyUdA9grfNRX
      OUjjpNatUNnUSW1dA3p2gcGx6fWqoxAbpqRdtL86SKqgcKzLz/RcnKZKK2nbDgJVfpy+6rVX
      IMQWKykABpOF5sZbszU0Ndy6DO9wOD7o898a5SnE9iWnQUVZkwCIsiYBEGVNAiDKmgRAlDUJ
      gChrEgBR1kq6DjB6s5u0YsekpkjmDVjUJSyuKmyOCpobatarjkJsmJICsLi8TE7PU9SKWE0G
      dF1nfGQEb6CGYLDq1vyLQmxjJXWB3B4veiEDmka+oLG/6zChgJeZyUkWMwXM5jtPyyHEdlBS
      C9DY2EQg1IjNbCCnAoqJ9q5j7Ni9jMttR9dlKITY3koKgNlqx/zHicf+tK83A+aKW3P5yD3o
      xXYnZ4FEWZMAiLImARBlTQIgypoEQJQ1CYAoaxIAUdYkAKKsSQBEWSt55qrk0hJqPs3cYo5q
      twWrpxqKuU2ZIUyIUpXUAizH5njt7DsMj4zg83oYHh3ivTdfI7ZcXK/6CbGhSgpAT28fhWwK
      j7+Gwf4+mhqasDvtXHz3LeYW06TT6fWqpxAboqQu0PFHn8DXP4BSyOCo8FFVVUleN6Mpo7js
      VuwmZVNmDBbifpV8DNDa1rri9/o6F/V1IUBmhhPbn5wFEmVNAiDKmgRAlDUJgChrm3ILF03X
      0db4fqSCgtGwPndVF+JebUoAfvD2KP/rN313XeZwk49/+/bJzaiOEB+QLpAoaxIAUdYkAKKs
      SQBEWSvpIFjXCly4dJ2qCiuLeQNWLYnFXY3V6qSxPrhedRRiw5QUgPGRERaXU4CK0Wggp+aZ
      7O+nqrb+1uS4mgyLFttbSV2gYrFAfGEeXdMoqDoHDx+jtrqCyfFxYqkcinJ/5/V1XSebV9f8
      t9a1BSHWUlILsGvPXkINOzAZdDIFBXSFtoMnqN+ZwOtxgK5RLH78VqCg6rxyJbrmck8d8MtB
      jChJyRfC/vTVR+ut+2RjBax+PwCa7KDFNic7UFHWJACirEkARFmTAIiyJgEQZU0CIMqaBECU
      NQmAKGsSAFHWSroSnMsss5RWsRmLxJbzeB1mLC4fqHnsdvt61VGIDVNSACKRKFPhCGajSn1z
      K/0D3aSTOXbsPUKTBEA8AErqAgUDVSQXYzg91QwM9NNQ14DZauLapfPML2Vkclyx7ZXUAkxO
      jOMP1EEhjdPlIRgMUNDNFEfHsFvNOMxWmRxXbGslBaClrXPVY42NLhobGwCZHFdsf3IWSJS1
      2wbg5dfOkkpJ/108/FYEIJPN8cKLv+LsHy5y8VrPVtVJiE2zIgBGgwFQOHX8IE+cOrpFVRJi
      86w4CNY0ja8++1lUOXgVZWJFC2CzWVF0jUwqRWIptVV1EmLTrDoIHunv5c0/nOPajRtbUR8h
      NtWqAAQDlaAWMVocW1EfITbVqgCEp2eorm1gfmqYyfD8VtRJiE2zIgBqPo2jMoiiFmhp6yQU
      qNyqegmxKVacBTKY7ejpOMlsEU+lGZPReNcXT4wMEEkW8DsMLOUNWLQkVncAs9lGQ11gQysu
      xHpYEYD8Ypi0o55HDlkxGNceJhQM1dI7dJ6C14PZqFDILzM2ESHYuIOamirQ1A2ruBDrYUUX
      SCvmGBkZYXR0lKlwZM0Xh2cjVFfYKag6qqZz+Pgp6qrdTIyOElnKoKoSALG9rdjNW331PHmq
      CYvp3sbIBav92FxePHYjy3kFXVXZ3XWSwEKEgNcJuibDocW2tiIAejFPT+8AAFaXl47dO+76
      YrvLg931x5/58//2UAiQyXHF9veRjr7+wRj+XC63BdURYnOt6OsoJitOm5nIfATjPRwEC/Gg
      WxEAvZgltphC1XQq3K6tqpMQm2bldQCLi0dOPoKCTiKxuFV1EmLTrBwOnU9z7sIVjOj4Qk14
      vd6tqpcQm2LlF2KsTpqDlfhq6ohH174OIMSDbvVo0FCIpVgUf7Xc51c8/Fad6rG4vOxoasBT
      KWN5xMNvVQsw2nuD7uEJLl26tBX1EWJTrWoBKlw20lNRmts71nxxLDLD3GIOn8NAIqPjNhew
      eUIoWoHKSt+GVFiI9bSqBTA7XDgtRuKJxJov1gwWcvEwvYOjWC0WpmemufSHsyQyReQm7uJB
      sCoA8XiC1PISs3P38G2wfJK81cfulhbmwpN0dB7AX+nk6oV3CcdTMjmu2PZWdYGCNTUsJDMs
      3cNQoIXYIg6LHV3N462qwWEz07znEGbHGFUVdkwGZDSo2NZWBSAyNUFGN9NYV7Xmi9v2dq16
      rKoSqioPADI5rtj+Vn4nOJdiciFJYXGe+ZgMhRAPv5XfCCtkUGwV5PJFFFW6LuLh95HBcHaU
      dIz65hbyxeJW1UmITbMiAEaLk5OPP7lVdRFi08kNMkRZkwCIsiYBEGVNAiDKmgRAlDUJgChr
      Jc19Mth7nfBCErfTSqZowKItYbL5cPsCtDSF1quOQmyYklqAXXs6MGgqqbyGxajjdDiJRuaY
      nhpnOZOX0aBi2yspAOfffBXV7sGmqKSyRdr2tBMMVBGZnSVT1HE45C4zYnsrqQt0/JNPA6Ao
      CjqgAHsPHKRzfxeKYkDXZTSo2N5KCoDB8OcGRPnQ44py6zf5VpjY7uQskChrEgBR1iQAoqxJ
      AERZkwCIsiYBEGVNAiDKmgRAlDUJgChrJV0J1nWN6EIcCmkWUipem47VU4Oi5vF6PetVRyE2
      TEkBiM1O8t6NUapdCqHmPUxM9JN4v4c9h0/heQiHQbx5M0JBvfv4poONPqrd1k2qkShVSQHw
      h5rwjU5R29DI9OQY7a3tDNzs5sK532N68ikqzPqK8UIPuu/87BqJTOGuy/zDN4/y5B65uciD
      ouSbAdfV1kEhg9tbhdtlp6m1C4NlBL/bjlkmxxXbXMkBaG5uXvF7oAoCVYcBmRx3IZlnKX33
      GfYcViNBr3SZtorcDn4DzcRyDIXv/q242kqrBGALPTwddCHugwRAlDUJgChrEgBR1iQAoqxJ
      AERZkwCIsiYBEGVNLoSVmXg6T66g3nUZh9VEhc28STXaWiUFIL0Y4ULPJDVuA4t5BYuaxOyo
      xFFRyc5GmRx3O/pvP7/BK92zd13mrz+xg//+uY5NqtHWKikAismBQcuwmLFgNBowmy2Ep6Zw
      eNMEA1XoxdxDNRpUPHxKCoDd6cJoUDArGqm8zuEj+9D1HgbHw6Q691PldMho0AfcbDzHu/2J
      uy5jMSl87siDOQS85GOA48eOo6Cj6goYDXR0HaG1M4/FYpXJccvEgzwHbMkBMJlurcL4x9+N
      gNF6a3Tjg7xhRHmQDrooaxIAUdYkAKKsSQBEWZMAiLImARBlTQIgypoEQJQ1CYAoa+syHHph
      bpr5ZIFKhwGbNwjFPBUV7vVYtRAbal1agJGREdxuF+OT47x39nWSORkDIR4M6xKAYF0TE2ND
      7GxuocLj4txbv2M2kSadvvusaEJstXXpAmn5NK4KPz5fBY27OsE0isdpw2qUyXHF9rYuAWje
      teeDn0NBF6FgNSCT44rtT84CibImARBlTQIgypoEQJQ1CYAoaxIAUdYkAKKsrc9YoNkpFvMG
      LFoKm7cGRS3i9/vWY9VCbKh1CcDIZBjFoKDml0l097Or6xiVMhxIPADWJQC6DgoKe/d2cfPG
      Va5dPI+r4tNUuyzrsfp7ksmrFNe48mwxGrCajXddRjyciqqOfpuJqtZnKER9kMWcAbvVRHP7
      YczOMXzOzfvwA/yXf7nK671zd13m24+38F8/e2vYRnQpz43x5F2Xt5gMnGrfvK5cOlfkyuTd
      pyEEOLGzEtMf51yNLxcoqHcPvstmwmF9eII/Hc/w7Rcur7ncC986jvuPs1yf64sTWy6sWub/
      A8w4qL5iyva0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Mode' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.ModeShare' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Non Auto' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Chart.Work' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='186' name='Across.Table.Mode' width='192'>
      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
      KlkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Across.Table.ModeShare' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Purpose' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Mode, Inc' width='192'>
      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
      B2+3Fs4YhySZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Mode, Tour' width='192'>
      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
      Iruf1Bm9AVWbu1v9WEWXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Trips' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
