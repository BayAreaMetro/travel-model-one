<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='ActiveTransport Extract' inline='true' name='ActiveTransport.tde' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ActiveTransport Extract' name='ActiveTransport.tdeleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='ActiveTransport.tde' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='ActiveTransport.tdeleaf' name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>5</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1443</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ptype]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>ptype</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zeroAuto</remote-name>
            <remote-type>5</remote-type>
            <local-name>[zeroAuto]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>zeroAuto</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2258</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>active</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>36562</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>more15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[more15]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>more15</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14956</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>more30</remote-name>
            <remote-type>5</remote-type>
            <local-name>[more30]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>more30</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14376</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wlk_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wlk_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>wlk_trip</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>17431</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bik_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bik_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>bik_trip</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11040</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wtr_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wtr_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>wtr_trip</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14168</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dtr_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dtr_trip]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dtr_trip</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7700</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>atHomeA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[atHomeA]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>atHomeA</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12548</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>129</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' value='Share of Total Population' />
          <alias key='&quot;[ActiveTransport.tde].[sum:freq:qk]&quot;' value='Population' />
          <alias key='&quot;[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' value='Share of population that does not leave home on a typical weekday' />
          <alias key='&quot;[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' value='Bicycle trips per person' />
          <alias key='&quot;[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' value='Average minutes of active travel per person per typical weekday' />
          <alias key='&quot;[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' value='Share of the population that engages in at least 15 minutes of active travel per typical weekday' />
          <alias key='&quot;[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' value='Walk trips which are part of drive to transit travel per person' />
          <alias key='&quot;[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' value='Walk trips (which are not part of a transit trip) per person' />
          <alias key='&quot;[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' value='Walk trips which are part of walk to transit travel per person' />
          <alias key='&quot;[ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' value='Walk trips which are part of transit travel per person' />
          <alias key='&quot;[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' value='Share of the population that engages in at least 30 minutes of active travel per typical weekday' />
          <alias key='&quot;[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' value='Average minutes of active travel per person for all those who leave home on a typical weekday' />
        </aliases>
      </column>
      <column caption='AtHomeFreq' datatype='real' name='[Calculation_0480828180930394]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[atHomeA]*[freq]' scope-isolation='false' />
      </column>
      <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
      </column>
      <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column caption='Active' datatype='real' name='[active]' role='measure' type='quantitative' />
      <column caption='At Home A' datatype='real' name='[atHomeA]' role='measure' type='quantitative' />
      <column caption='Bik Trip' datatype='real' name='[bik_trip]' role='measure' type='quantitative' />
      <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Dtr Trip' datatype='real' name='[dtr_trip]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative' />
      <column caption='More15' datatype='real' name='[more15]' role='measure' type='quantitative' />
      <column caption='More30' datatype='real' name='[more30]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Full-time worker' />
          <alias key='2.0' value='Part-time worker' />
          <alias key='3.0' value='College student' />
          <alias key='4.0' value='Non-working adult' />
          <alias key='5.0' value='Retired' />
          <alias key='6.0' value='Driving-age student' />
          <alias key='7.0' value='Non-driving-age student' />
          <alias key='8.0' value='Child too young for school' />
        </aliases>
      </column>
      <column datatype='string' name='[src]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
          <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
          <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Taz' datatype='real' name='[taz]' role='dimension' type='ordinal' />
      <column caption='Wlk Trip' datatype='real' name='[wlk_trip]' role='measure' type='quantitative' />
      <column caption='Wtr Trip' datatype='real' name='[wtr_trip]' role='measure' type='quantitative' />
      <column caption='Household Automobile Ownership Level' datatype='real' name='[zeroAuto]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0.0' value='One or more autos' />
          <alias key='1.0' value='Zero autos' />
        </aliases>
      </column>
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[ptype]' derivation='None' name='[none:ptype:ok]' pivot='key' type='ordinal' />
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
      <folder name='Active' role='measures'>
        <folder-item name='[Calculation_2310828180634107]' type='field' />
        <folder-item name='[Calculation_3570828180454696]' type='field' />
        <folder-item name='[Calculation_4530828180712947]' type='field' />
        <folder-item name='[Calculation_5180828180654215]' type='field' />
        <folder-item name='[Calculation_5750828180815438]' type='field' />
        <folder-item name='[Calculation_6150828180840224]' type='field' />
        <folder-item name='[Calculation_8120828180802260]' type='field' />
        <folder-item name='[Calculation_8230828180724803]' type='field' />
        <folder-item name='[Calculation_8380828180514207]' type='field' />
        <folder-item name='[active]' type='field' />
        <folder-item name='[bik_trip]' type='field' />
        <folder-item name='[dtr_trip]' type='field' />
        <folder-item name='[more15]' type='field' />
        <folder-item name='[more30]' type='field' />
        <folder-item name='[wlk_trip]' type='field' />
        <folder-item name='[wtr_trip]' type='field' />
      </folder>
      <folder name='Regional' role='measures'>
        <folder-item name='[Calculation_0480828180930394]' type='field' />
        <folder-item name='[Calculation_2100828180906930]' type='field' />
        <folder-item name='[atHomeA]' type='field' />
        <folder-item name='[freq]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.243781' measure-ordering='alphabetic' measure-percentage='0.756219' show-aliased-fields='true' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Scenario:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;CG 07 Baseline&quot;</bucket>
            </map>
            <map to='#5e8c6a'>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            </map>
            <map to='#88a65e'>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
            </map>
            <map to='#8c2318'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CG 07 ShortTrips &quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Scenario:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:ptype:ok]' direction='ASC'>
          <dictionary>
            <bucket>1.0</bucket>
            <bucket>2.0</bucket>
            <bucket>4.0</bucket>
            <bucket>5.0</bucket>
            <bucket>8.0</bucket>
            <bucket>7.0</bucket>
            <bucket>6.0</bucket>
            <bucket>3.0</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across.Chart.Person Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Person Type Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='ActiveTransport.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[ptype]' derivation='None' name='[none:ptype:ok]' pivot='key' type='ordinal' />
            <column-instance column='[src]' derivation='None' name='[none:src:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[ActiveTransport.tde].[none:ptype:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column datatype='string' name='[src]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2010_04_ZZZ\\summary\\ActiveTransport.rdata&quot;' value='Year 2010 (v 0.4)' />
                <alias key='&quot;2040_03_116\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 Plan (v 0.3)' />
                <alias key='&quot;2040_03_127\\summary\\ActiveTransport.rdata&quot;' value='Year 2040 TIP 2015 (v 0.3)' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[ActiveTransport.tde].[pcto:sum:freq:qk:5]' scope='rows' value='Population Share' />
            <format attr='subtitle' class='0' field='[ActiveTransport.tde].[pcto:sum:freq:qk:5]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[ActiveTransport.tde].[pcto:sum:freq:qk:5]' scope='rows' value='true' />
            <format attr='width' field='[ActiveTransport.tde].[pcto:sum:freq:qk:5]' value='87' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[ActiveTransport.tde].[none:src:nk]' value='53' />
            <format attr='text-format' field='[ActiveTransport.tde].[pcto:sum:freq:qk:5]' value='p0.0%' />
            <format attr='cell-w' value='42' />
            <format attr='cell-h' value='14' />
            <format attr='cell' value='14' />
            <format attr='cell-q' value='70' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[ActiveTransport.tde].[none:ptype:ok]' value='52' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
            <format attr='font-size' value='14' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[ActiveTransport.tde].[none:src:nk]' value='false' />
            <format attr='text-orientation' field='[ActiveTransport.tde].[none:src:nk]' value='0' />
            <format attr='font-family' field='[ActiveTransport.tde].[none:ptype:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[ActiveTransport.tde].[pcto:sum:freq:qk:5]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[ActiveTransport.tde].[none:Scenario:nk]' />
              <lod column='[ActiveTransport.tde].[none:ptype:ok]' />
              <tooltip column='[ActiveTransport.tde].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='1440'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='14' indent='1440'>&lt;[ActiveTransport.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1440'>&#10;Count:&#9;</run>
                <run bold='true' fontsize='14' indent='1440'>&lt;[ActiveTransport.tde].[sum:freq:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='1440'>&#10;Share:&#9;</run>
                <run bold='true' fontsize='14' indent='1440'>&lt;[ActiveTransport.tde].[pcto:sum:freq:qk:5]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[ActiveTransport.tde].[pcto:sum:freq:qk:5]</rows>
        <cols>([ActiveTransport.tde].[none:ptype:ok] / [ActiveTransport.tde].[none:src:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Auto Own'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Active Travel Summary by Household Automobile Ownership Level: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='ActiveTransport.tde'>
            <column caption='AtHomeFreq' datatype='real' name='[Calculation_0480828180930394]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[atHomeA]*[freq]' scope-isolation='false' />
            </column>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Active' datatype='real' name='[active]' role='measure' type='quantitative' />
            <column caption='At Home A' datatype='real' name='[atHomeA]' role='measure' type='quantitative' />
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Bik Trip' datatype='real' name='[bik_trip]' role='measure' type='quantitative' />
            <column caption='Dtr Trip' datatype='real' name='[dtr_trip]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='More15' datatype='real' name='[more15]' role='measure' type='quantitative' />
            <column caption='More30' datatype='real' name='[more30]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[zeroAuto]' derivation='None' name='[none:zeroAuto:nk]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
            <column caption='Wlk Trip' datatype='real' name='[wlk_trip]' role='measure' type='quantitative' />
            <column caption='Wtr Trip' datatype='real' name='[wtr_trip]' role='measure' type='quantitative' />
            <column caption='Household Automobile Ownership Level' datatype='real' name='[zeroAuto]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='One or more autos' />
                <alias key='1.0' value='Zero autos' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[ActiveTransport.tde].[none:zeroAuto:nk]' value='115' />
            <format attr='height' field='[ActiveTransport.tde].[:Measure Names]' value='47' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[ActiveTransport.tde].[:Measure Names]' value='416' />
            <format attr='height' field='[ActiveTransport.tde].[none:zeroAuto:nk]' value='40' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='right' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[ActiveTransport.tde].[:Measure Names]' value='normal' />
            <format attr='font-family' field='[ActiveTransport.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[ActiveTransport.tde].[none:zeroAuto:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#3f6a6e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[ActiveTransport.tde].[Multiple Values]' />
              <lod column='[ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[ActiveTransport.tde].[:Measure Names]</rows>
        <cols>([ActiveTransport.tde].[none:Scenario:nk] / [ActiveTransport.tde].[none:zeroAuto:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Table.Person Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Population by Person Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='ActiveTransport.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[ptype]' derivation='None' name='[none:ptype:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[ActiveTransport.tde].[none:Scenario:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[ActiveTransport.tde].[none:Scenario:nk]' value='54' />
            <format attr='width' field='[ActiveTransport.tde].[none:ptype:ok]' value='90' />
            <format attr='text-format' field='[ActiveTransport.tde].[pcto:sum:freq:qk:4]' value='p0.0%' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[ActiveTransport.tde].[none:Scenario:nk]' value='152' />
            <format attr='height' field='[ActiveTransport.tde].[none:ptype:ok]' value='68' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[ActiveTransport.tde].[pcto:sum:freq:qk:4]' value='p0.0%' />
            <format attr='font-family' field='[ActiveTransport.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[ActiveTransport.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[ActiveTransport.tde].[none:ptype:ok]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[ActiveTransport.tde].[Multiple Values]' />
              <lod column='[ActiveTransport.tde].[pcto:sum:freq:qk:4]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([ActiveTransport.tde].[:Measure Names] / [ActiveTransport.tde].[none:Scenario:nk])</rows>
        <cols total='true'>[ActiveTransport.tde].[none:ptype:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Auto Own'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Active Travel Summary by Household Automobile Ownership Level: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='ActiveTransport.tde'>
            <column caption='AtHomeFreq' datatype='real' name='[Calculation_0480828180930394]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[atHomeA]*[freq]' scope-isolation='false' />
            </column>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Active' datatype='real' name='[active]' role='measure' type='quantitative' />
            <column caption='At Home A' datatype='real' name='[atHomeA]' role='measure' type='quantitative' />
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Bik Trip' datatype='real' name='[bik_trip]' role='measure' type='quantitative' />
            <column caption='Dtr Trip' datatype='real' name='[dtr_trip]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='More15' datatype='real' name='[more15]' role='measure' type='quantitative' />
            <column caption='More30' datatype='real' name='[more30]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[zeroAuto]' derivation='None' name='[none:zeroAuto:nk]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
            <column caption='Wlk Trip' datatype='real' name='[wlk_trip]' role='measure' type='quantitative' />
            <column caption='Wtr Trip' datatype='real' name='[wtr_trip]' role='measure' type='quantitative' />
            <column caption='Household Automobile Ownership Level' datatype='real' name='[zeroAuto]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='One or more autos' />
                <alias key='1.0' value='Zero autos' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[ActiveTransport.tde].[none:zeroAuto:nk]' value='222' />
            <format attr='height' field='[ActiveTransport.tde].[:Measure Names]' value='47' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[ActiveTransport.tde].[:Measure Names]' value='416' />
            <format attr='height' field='[ActiveTransport.tde].[none:zeroAuto:nk]' value='40' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='right' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[ActiveTransport.tde].[:Measure Names]' value='normal' />
            <format attr='font-family' field='[ActiveTransport.tde].[:Measure Names]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#3f6a6e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[ActiveTransport.tde].[Multiple Values]' />
              <lod column='[ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[ActiveTransport.tde].[:Measure Names]</rows>
        <cols>[ActiveTransport.tde].[none:zeroAuto:nk]</cols>
        <pages>
          <column>[ActiveTransport.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.County'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Active Travel Summary by County of Residence: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='ActiveTransport.tde'>
            <column caption='AtHomeFreq' datatype='real' name='[Calculation_0480828180930394]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[atHomeA]*[freq]' scope-isolation='false' />
            </column>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Active' datatype='real' name='[active]' role='measure' type='quantitative' />
            <column caption='At Home A' datatype='real' name='[atHomeA]' role='measure' type='quantitative' />
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Bik Trip' datatype='real' name='[bik_trip]' role='measure' type='quantitative' />
            <column caption='County of Residence' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Dtr Trip' datatype='real' name='[dtr_trip]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='More15' datatype='real' name='[more15]' role='measure' type='quantitative' />
            <column caption='More30' datatype='real' name='[more30]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
            <column caption='Wlk Trip' datatype='real' name='[wlk_trip]' role='measure' type='quantitative' />
            <column caption='Wtr Trip' datatype='real' name='[wtr_trip]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[ActiveTransport.tde].[none:county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[ActiveTransport.tde].[:Measure Names]' value='51' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[pcto:sum:freq:qk:4]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[ActiveTransport.tde].[:Measure Names]' value='392' />
            <format attr='height' field='[ActiveTransport.tde].[none:county_name:nk]' value='48' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[ActiveTransport.tde].[:Measure Names]' value='auto' />
            <format attr='text-align' field='[ActiveTransport.tde].[:Measure Names]' value='auto' />
            <format attr='font-weight' field='[ActiveTransport.tde].[:Measure Names]' value='normal' />
            <format attr='font-family' field='[ActiveTransport.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[ActiveTransport.tde].[none:county_name:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#3f6a6e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[ActiveTransport.tde].[Multiple Values]' />
              <lod column='[ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[ActiveTransport.tde].[:Measure Names]</rows>
        <cols>[ActiveTransport.tde].[none:county_name:nk]</cols>
        <pages>
          <column>[ActiveTransport.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Overall'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Active Travel Summary: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='ActiveTransport.tde'>
            <column caption='AtHomeFreq' datatype='real' name='[Calculation_0480828180930394]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[atHomeA]*[freq]' scope-isolation='false' />
            </column>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Active' datatype='real' name='[active]' role='measure' type='quantitative' />
            <column caption='At Home A' datatype='real' name='[atHomeA]' role='measure' type='quantitative' />
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Bik Trip' datatype='real' name='[bik_trip]' role='measure' type='quantitative' />
            <column caption='Dtr Trip' datatype='real' name='[dtr_trip]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='More15' datatype='real' name='[more15]' role='measure' type='quantitative' />
            <column caption='More30' datatype='real' name='[more30]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
            <column caption='Wlk Trip' datatype='real' name='[wlk_trip]' role='measure' type='quantitative' />
            <column caption='Wtr Trip' datatype='real' name='[wtr_trip]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[ActiveTransport.tde].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='215' />
            <format attr='height' field='[ActiveTransport.tde].[:Measure Names]' value='38' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[ActiveTransport.tde].[:Measure Names]' value='668' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[ActiveTransport.tde].[:Measure Names]' value='normal' />
            <format attr='font-family' field='[ActiveTransport.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-size' field='[ActiveTransport.tde].[:Measure Names]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[ActiveTransport.tde].[Multiple Values]' />
              <lod column='[ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[ActiveTransport.tde].[:Measure Names]</rows>
        <cols />
        <pages>
          <column>[ActiveTransport.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.Person Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Active Travel Summary by Person Type: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport Extract' name='ActiveTransport.tde' />
          </datasources>
          <datasource-dependencies datasource='ActiveTransport.tde'>
            <column caption='AtHomeFreq' datatype='real' name='[Calculation_0480828180930394]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[atHomeA]*[freq]' scope-isolation='false' />
            </column>
            <column caption='At Home Share' datatype='real' name='[Calculation_2100828180906930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_0480828180930394] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_2310828180634107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_3570828180454696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_4530828180712947]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_5180828180654215]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_5750828180815438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_6150828180840224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_8120828180802260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_8230828180724803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_8380828180514207]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Active' datatype='real' name='[active]' role='measure' type='quantitative' />
            <column caption='At Home A' datatype='real' name='[atHomeA]' role='measure' type='quantitative' />
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Bik Trip' datatype='real' name='[bik_trip]' role='measure' type='quantitative' />
            <column caption='Dtr Trip' datatype='real' name='[dtr_trip]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column caption='More15' datatype='real' name='[more15]' role='measure' type='quantitative' />
            <column caption='More30' datatype='real' name='[more30]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[ptype]' derivation='None' name='[none:ptype:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='real' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Full-time worker' />
                <alias key='2.0' value='Part-time worker' />
                <alias key='3.0' value='College student' />
                <alias key='4.0' value='Non-working adult' />
                <alias key='5.0' value='Retired' />
                <alias key='6.0' value='Driving-age student' />
                <alias key='7.0' value='Non-driving-age student' />
                <alias key='8.0' value='Child too young for school' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2100828180906930]' derivation='User' name='[usr:Calculation_2100828180906930:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310828180634107]' derivation='User' name='[usr:Calculation_2310828180634107:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3570828180454696]' derivation='User' name='[usr:Calculation_3570828180454696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4530828180712947]' derivation='User' name='[usr:Calculation_4530828180712947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5180828180654215]' derivation='User' name='[usr:Calculation_5180828180654215:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5750828180815438]' derivation='User' name='[usr:Calculation_5750828180815438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150828180840224]' derivation='User' name='[usr:Calculation_6150828180840224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120828180802260]' derivation='User' name='[usr:Calculation_8120828180802260:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8230828180724803]' derivation='User' name='[usr:Calculation_8230828180724803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8380828180514207]' derivation='User' name='[usr:Calculation_8380828180514207:qk]' pivot='key' type='quantitative' />
            <column caption='Wlk Trip' datatype='real' name='[wlk_trip]' role='measure' type='quantitative' />
            <column caption='Wtr Trip' datatype='real' name='[wtr_trip]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[ActiveTransport.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[ActiveTransport.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[ActiveTransport.tde].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[pcto:sum:freq:qk:4]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]&quot;</bucket>
              <bucket>&quot;[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[ActiveTransport.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[ActiveTransport.tde].[none:ptype:ok]' value='84' />
            <format attr='height' field='[ActiveTransport.tde].[:Measure Names]' value='42' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_2100828180906930:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_3570828180454696:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8380828180514207:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_4530828180712947:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8230828180724803:qk]' value='p0.0%' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_5750828180815438:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_2310828180634107:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_6150828180840224:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_5180828180654215:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[ActiveTransport.tde].[usr:Calculation_8120828180802260:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='wrap' data-class='subtotal' scope='cols' value='auto' />
            <format attr='wrap' data-class='total' scope='cols' value='auto' />
            <format attr='wrap' field='[ActiveTransport.tde].[:Measure Names]' value='on' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[ActiveTransport.tde].[:Measure Names]' value='296' />
            <format attr='height' field='[ActiveTransport.tde].[none:ptype:ok]' value='56' />
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
            <format attr='font-size' value='14' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' value='auto' />
            <format attr='text-orientation' field='[ActiveTransport.tde].[:Measure Names]' value='0' />
            <format attr='wrap' field='[ActiveTransport.tde].[:Measure Names]' value='auto' />
            <format attr='font-weight' field='[ActiveTransport.tde].[:Measure Names]' value='normal' />
            <format attr='font-family' field='[ActiveTransport.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[ActiveTransport.tde].[none:ptype:ok]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[ActiveTransport.tde].[Multiple Values]' />
              <lod column='[ActiveTransport.tde].[attr:ptype:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[ActiveTransport.tde].[:Measure Names]</rows>
        <cols>[ActiveTransport.tde].[none:ptype:ok]</cols>
        <pages>
          <column>[ActiveTransport.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Indiv.Table.Overall'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='102'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[ActiveTransport.tde].[none:Scenario:nk]</field>
            <field>[ActiveTransport.tde].[none:dir:nk]</field>
            <field>[textscan.41862.719202812499].[:Measure Names]</field>
            <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{031407A1-A145-474F-94DD-780AC707417D}' />
    </window>
    <window class='worksheet' name='Indiv.Table.Person Type'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='91'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[ActiveTransport.tde].[none:Scenario:nk]</field>
            <field>[ActiveTransport.tde].[none:dir:nk]</field>
            <field>[textscan.41862.719202812499].[:Measure Names]</field>
            <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{7F885679-7BE9-42F7-9DDF-D7C903DD92A8}' />
    </window>
    <window class='worksheet' name='Indiv.Table.County'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[ActiveTransport.tde].[none:Scenario:nk]</field>
            <field>[ActiveTransport.tde].[none:dir:nk]</field>
            <field>[textscan.41862.719202812499].[:Measure Names]</field>
            <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{344719C7-4EA2-4B93-B4CD-2CB1765AE605}' />
    </window>
    <window class='worksheet' name='Indiv.Table.Auto Own'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='133'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;CG 07 Baseline&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[ActiveTransport.tde].[none:Scenario:nk]</field>
            <field>[ActiveTransport.tde].[none:dir:nk]</field>
            <field>[textscan.41862.719202812499].[:Measure Names]</field>
            <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
            <field>[textscan.41862.719202812499].[none:zeroAuto:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{6DEE8C15-E89F-464C-8F2F-3061CDF4CC53}' />
    </window>
    <window class='worksheet' maximized='true' name='Across.Table.Auto Own'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='133'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;CG 07 Baseline&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[ActiveTransport.tde].[none:Scenario:nk]</field>
            <field>[ActiveTransport.tde].[none:dir:nk]</field>
            <field>[textscan.41862.719202812499].[:Measure Names]</field>
            <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
            <field>[textscan.41862.719202812499].[none:zeroAuto:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{9FAE8B3B-7C93-417A-9968-39EC87CB9F93}' />
    </window>
    <window class='worksheet' name='Across.Table.Person Type' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='114'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='74'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[ActiveTransport.tde].[:Measure Names]</field>
            <field>[ActiveTransport.tde].[none:Scenario:nk]</field>
            <field>[ActiveTransport.tde].[none:dir:nk]</field>
            <field>[ActiveTransport.tde].[none:ptype:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{CF464536-C431-4FE7-98E2-D47D00D5424F}' />
    </window>
    <window class='worksheet' name='Across.Chart.Person Type' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='217'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[ActiveTransport.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='97'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[ActiveTransport.tde].[none:Scenario:nk]</field>
            <field>[ActiveTransport.tde].[none:ptype:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{1FC1597A-F3BD-45AA-9272-9429290915AD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Across.Chart.Person Type' width='192'>
      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
      kkxn2EosU6nqVCplFMXFK7/2m0Rb4tRKWe5MjFOtVqlWqw1tWojH0dhDIIuTZ597gdbWdjq7
      27lx/RbDR06glTJ09R8huzKJK96Ly+XCYrHImEA03b64EpzYLqNp9ZXRGnRi++TZkmIS1GJ9
      RXii4PDsm6ue++ks0H7ZJ7tdR9MnxAD827+dYCNXqWud//RPTtDi/8Qp1Mvfh/m362v4hX8N
      fc/Vt454ojT/rUaIJpIACFOTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOT
      AAhTkwAIU5MACFNr+O3Qt69eYjlV5qkjPVwYX+HIoWHmblwk3HMMq17k6NiRL96IEHuk4T3A
      wMhhLNUCK6vrGIYGFgW1qpGYvUVRVdguNv9zgIT4pYZPii+WVbpjHoqOVl567mvMTU7w/Muv
      Eo7HyaXu8eH1GxSLRQqFQmObFuIxNLwHWL83x3rZRXfYwgcXL9DZdwi7UibeNUTI6yLW0orH
      48Hr9Ta6aSHq1uAxgMLo8bOMfvSovavvwTP9HujvfqGxzQnxJclZIGFqEgBhahIAYWoSAGFq
      EgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoND0AumeD23Tl0
      TeXW9WvkKzUWpsZJF1SSyWSjmxPiS2n4pPi1zTRqJsnVy2tE+wa4euU9tFIR7q0RjHYSjUYb
      3aQQj63hPcBgfy/37i2zmSkSCIYxajXCfgd6DVLJFW5NLcqcYLFvNHxS/PUbN+k70EnQ52Fl
      cQ67O8Kxk6cJxuJY9BrJrU2ZEyz2jYbPCR4ZHmIrV2WsLcryvXuMDAyBXubw2BjlTAt2vxwC
      if2j4WMAtz9M90ffa9x9oPejpR48gKelvdHNCfGlyGlQYWoSAGFqEgBhahIAYWoSAGFqEgBh
      ahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqDQ9ApZhjNbGJXlNZWloklc2T3lqn
      VNUoFouNbk6IL6Xh8wHuTEygV4okE37y1jCHIxrvXXgfV6AFj8fD6ZNHG92kEI+t4T3A8VNn
      KJfK6LrB9sYik3MJPE4LpWyaXCHH3Mom5XKZcrnc6KaFqFvDAzBx9V08PWO0xaKcOn2KXHqT
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Auto Own' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Across.Table.Person Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Auto Own' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.County' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Overall' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V3McWZqm+bgIHQGERgQ0QGgSBLVmksxKXVk11aKqp223rW3+Sf+GNduL
      XdtZ27HuqdopXampkpoASWitdQQiAqG1dN8LMAUzk2RmqaxZxHMXHi6On+Ovn+Pu33s+QVVV
      lSpV9ini912AKlW+T6oCqLKvkb/8o1gsksvlvq+yVKnyV0f48jOAoigoivJ9lqdKlb8qQvUh
      uMp+pvoMUGVfUxVAlX1NVQBV9jXy8/7IJnd4cHeEAgL1XQMc62r8VjtMhjZIyW4a7IanS1Sy
      0RAFWU80nuFAc/2fo9xVqvxZeG4PkInuIFg7eeftt9h9fBNfQSWXSZPJ5VGVCrlsllQqTbmi
      UCwUUFTI5XLE/Yus7mYpFXIkkylK5TI3f/9bImUdjR4nSrlEKpWiWFYolwpksxky2TzVZ/Eq
      3wfP7QFAJRkN4fPpyKAl55viDyNryJU8A6cP8odf3eHQQS+KtR1teIkjr/+U3/7833nrRBtK
      PsG1j24hCSWytk5igV10c+PMFUrY8rukJD3xnJ7uml1uzqax6nT8p//1n3AbNH+9M69ShRc+
      A6hk0wnC0TgnXn+b7Nos/Zfe5crJdlbXd6jvGOCN114nE1il9NUtBYmGllbsViOxUI6G5npa
      GuugGCWQreW1N97GWwqxqxi58s5POOKxkCqX/6InWqXKN/ECAYh4W7o4euQIzXW1mMwmwrsR
      opEoRpOJaCRCPptA0ZgQ1TIR3zxb4T0pZOPbLKztUmM2UlYqSKKEqgKSAQoJcoUckayCSSeh
      11Tv+lW+P577ISwd3caf0NHV5gKgUkjz5OED0rKDc4cd/McvHtDY4mbgzAV06U0GJ7cwWGs5
      3lpLWKklsDCGWmNHQw3NljTrGS21tbV49QWGJpdo6TuNnV0EWzsl3zLGA9049VUxVPnr8sd9
      Cc5u87vbO/zdOyf/AkWqUuWvRzUUosq+pvohrMq+piqAKvuaqgCq7Gue+RBWfRyost94RgCK
      olAqffWzVpUq//+lOgSqsq+pCqDKvqYqgCr7mqoAquxrni8AVSWbirETCJIvVSjlM2SLlT/p
      YGqlRDi0S7Hyx848oZBKpr+yU4V8vkgunaL0kt2qqko+n6eUz5ErfHP0ablQoPyVt2G5dJJC
      +c80W8bT8qoASoVUOsMf/e5NKZNKZ//47f9YVIVCvvDc4yrlAuls4bmbZ9IpKsp3LbVKNp3i
      2WZQSCeT/ClN81wB5JM73Lz1AN/mMp/cekxw8RFj6/E//khAwjfDraFZit/55D8vFdeu3X52
      ye4iN4aXyWfSVF62W6XCR1evElwcY2It9I2rjN+8gS//7Juw6VsfshQt/pFlfpZibIMbQzN7
      F08pw81bD78WTv6tye5y7f4Yf9pt6btTSgW48YLjqpUimdzz62vw/i0S2e961mWe3L1OLP/l
      ZQXufPzhV5Z9N55riCkXMsRSBY6cOUhpcZqyUmbs7idsTlr4wVuvszV2F380g62lHyk4wWra
      wrEDFpa2Y1gcTVw4cxiNAJszg4wuh6lxNWFJzxLKONEKArnkBu/9fgitWcuhM1dQdyaZ98Wx
      NnRTp/qZ3E4hCnounmhlLWqgWefDr3gBSO+uc3twgpyiod2aZ2q6jEt10qjRMv9okGRB5eTF
      swx98HvKWjPtRy5wqreRfGyb6ek56swapteuszJq5vUf/4jA5F3WQkmsjQfYXJwl7O2m5WgH
      qeAqnw5OEVr1ceZUgYfXb7CbVeg6eh5DapnptV2MzhY6HSXG5nxIljrevHQSWS1w8w9/YLei
      Yqs/xKlWmbtPFpHNdjprc0yOBbh44TC1T+s67ltieHwBVbZw8cIxxu7fIZzI0X/+LAl/moFe
      J1OrIfT5XdaCCRythznb3wpAbHOG3/6PTeoPXqTDEObx9AZaWwNHPRU+nd5FLmapdVrJljRc
      PtnJw8ExVNnI6VdewWnSUIj7uH5nmIps5MzRbm7duoMoSnSceZNjbQ7Uco6he3cIReLUH3mN
      kx1OYv51JsZnkTVFXr14ntWxYcK5BIFwHkEy8erZVpY2VMLLIyxuR+k48QqG6DyzW2G0tlaE
      p+etVoqMjM/S01LLncldrvSamEvVElseI6dqOXbmNP7px4RSRRp6BgAIL48xr1pp0wR4vBwi
      EE5xNB3kk08fk84WOXjsMKpgpstRZGxHw4ne+s+P9008twcwOdu5dKyVh1d/zdRWFgGBxt6T
      DHhM7ISDCJZ2zh7pYGVliXgix6lzx3l0fxCNLLE8+YCdRBko8njaxw/ffQttYgXR1sThg31o
      ZRGlkkdT28w7lweYmnzC6GKKd374BqXtGbZCGTqOnedkfYnhxSCJTIFiNkEyu3dXSSWSHDl3
      BUM+imS209bXgxKPsbU4h67lCG+faWVodJ502cBbr57G59sGQGdroLmlgRaXifqu45xu07Cx
      m0Yx1nHxWAfr67t4PY10dzcBsLI4S/fpVznS1UglvIxfbOGdK8eZn3zMrdtPECSZleG7LG0G
      8IcTGE3GvcpWK6SyZS688Sa5wCpDD6Y4+847tBvzRCp62nu7sMjS53U9+ugeqZJAcmucJ/Pb
      uA4cpa9ew7K/SCrhIx7xoRSL3BudR9JoeHj3Dp/dX2Wzm7d+/Ao7MwuMja9y8Z0fYs0FWA8G
      sTT3c6jFRG3LMSxikie3brJbFMhF1hmZ2QRgdvAJHRff4FSHhfGpFYpaB+++eYKVub3/S7k0
      5oYezhyqZ2F+A4Bap5f27g7a9BU2Y1m2Ejk0xRzdxy/Sb0sytREjvONjKVrhh2+/QimZIqUa
      uHLuCKHlVT4bHAmijKEYY24jxNb6MpOzAdTIBAuhAkpqhzs3r/FgZhtJqPDgwRDZVJCPHsxz
      uLuZ4dlt3n77dVrrakhFY/ScvESTOUsorRIK7LC6vIXVWfPCix9e0AMEF4dZzjj46f/yXxj8
      /S/ZLtThcjmQIz6KhRyLsxNEPXVoZRW93ozdakFvb+TKlUusz3uxmySggioIiIKIJH79S7Ms
      y0iShCCoIIh76wlQQkSWJWRZQhWgXCySKaVRTHvbJXf9TM0GQXlWv6qqIIoSkiyjKAq1dhdG
      rQaEL44rIAAaXG47mtQ6aiXPytQ4ca8bUdZA5YsqU1QVURDQyBpQFARRQhQlBFXBYG/i0uXL
      bHrqkExa+g6f4saHH5Ma6MEqgd5gx1qrRxRAUUESRSRJRFVU+EqzCPoazp66hBD2klUrDA8P
      UWcqI3pU2iwqQzNhjh/vZj3QzeUrZ3DXzfOZc8Jid2E0aBBVFRUBURSRRIGKqmIxW9BkdMiy
      jCgIlCsaTly+TF3OT0K75/NQFBVJEpFkCVVRqHG5MWplhKdtVSqkmRt7QtJjQsD0WSUC0Hao
      nWs372BpPIyYmECWJCRJAhVUFQRBRNLp0YlhVpdmicS8SBoNfPb0IIh4mr1cuz1Oi8fOUrLA
      RavEwRMXGHBk8ft8TNuMXDrXgWdtk92ladqdAmvBJIqqIogisiSSS0QYn13CJkkY9FZqctvM
      Biu8ftj44qufF/QArraDiKEpPvjoY6I1bbRZjRi0Elq9EZ1GRpZEKqU8iFoMJjOSoONUbx0f
      fHSNzRQYNAKg43iXiz+89yEJXQuNLjMG3Rea214Y4/1PR+k7dIr+Vg3vf/AxZVcnTn2eJ3du
      8nBd4MLJPkq+ER4vhDAatZjNJgRRQhDKoIporW4qO5soJguNnT0klx7x3u05Th7txmw2Ikgy
      FuPeDBWCIFJnkvElK+i1Mhq9Gb0sIkkSxUoFnSrgaXaytrjXY3R2H2J28Doz23GM3m4cuQXe
      vz5IW98JjndZuX7tE7YyIlZNhcH797A0tGPWSCCImCwmBETMFjMnT/dw+733mIvAoZ5OhFiQ
      ZKkCgojZZOTIoV5G7t3g8VIMq0VGFgUqiKiKQkNPO+mChnp3HQdqC1z98H1ykn3vGhRkLCYD
      AjLm2hoGDjXy6XvvEcBGi8uJUSui1RvRa0QMRjP950+xcOcqd8dWsNXuXRwHzx5j+uZH3J8K
      0d/fjtmgB1GDxaR7WmcCsiiRLanoxb1Rv9ZUiy6XICZ4KEU2ae9uhHKWR3dvMLZrpL+5Fpvb
      Q5ulwvvvXSevM6KRJMqVMhqNik5nQhT3VFRb68JUY2Og24XN1UpDz3HSi/e5NTSD9cBh6is+
      rl27gap3YrU7uXDlFdZmZjh1sJkP3r9KKKciSxKiBBVVhkoFl12HqnFg0L78JeczfoBKpfJX
      C4XIxBa5N5zjrdcHvvbfxN1r6HvO0u22/FXKUuWPIxn2cW90hbffeIXRux9h77lEu9v0vZZJ
      KRWYeHQfU/txuuqtL13/exNApZwnlVGw1n69m8okE4gGMwaN9A1bVvlbIR0LUZRrsFv0pJNx
      ZIMF/ffcZkq5SCgcxemuQxZf9gTwPQqgSpW/Bapfgqvsa6oCqLKvqQqgyr7mmWcAVVWrrrAq
      +4rqtChV9jXVIVCVfU1VAFX2NVUBVNnXVAVQZV/zQgEktmb53//vX5B7mdXqz4JKcH2O6Avy
      dG9PDLIc+W7uh+25QX790V3y5ec/6yulHA/vP2Jnc53d9Iv3X8nHeTA0znfJZqBWSrz/8dXv
      sMX3S3xjhLG15HP/39lcIZZ5nuElwwcf3PjuB83t8OG1kWddZvFV/t9PHv9FHW8vzBCzsrKB
      Q1thLZrFUwyA6wDlyAayxcH65GNigp3Th1tYnJ9HsjTglGOMze/Qd+IcNcUdhucDmGy1nD3c
      yfDDB1Rqmjl1pAeNJBDemGF2PYyiMWNU4mDroElfJpsIsDqxSiie48zFi/jWl+jvbGFifoWF
      +/eo9BmxHtDyZGaLgyfOYir4eTS+TPvAWXqa7KCqBNamGZ3zc+TMWR4PDaE2XEKWBVSlzMyT
      e2wmRc6cO0sxuMDoQpD+Lg/Xbt7l7Xdfp1kDK2kHTTVl/OECSnKLBX+WMxfPYTNoiG3Oc/3m
      MGYjFPJ5PK3d+GcfkxLtnOpxk5A9uOQEuymRXGiR1ShcOHeUdCbzWUszOTTBTixK57GLNJiK
      PBp8jKG+l4EGmSfzPuyednpbXSzPThAIBdA4uzjR7WHi8SAxwc75Ex3Mjk2C3oqc32U7IXLx
      8lmS61NMrMc4ceYc4a15EsEd5Lo+ThxsQQBmJ4YIBWI4u47TU29gZGiIgqmB0/1epobnkR31
      DPS0MDF4h3EhSY16gANtXtaW10nEw4TDcZoPn8FYKaMoZWafDOErmLl89jBrU09Y9Gc4dfEo
      mXQWgHxil3BBgz67RcbShTGzBaZaZkaGMTcd5GhnHZOP7hMXHZw9ZCedyeNbnKBiP4ASmGVt
      fZ1oto583M+9h6PUNPbisUBdQyul6DpZUysey58WeyT927/927994+VfSjH4aJqDXW5GVjL0
      uMosBFXiWwvE/Sv4RS9eZZPRpRiTkzMcPtzKyFSQy6dauH7zHts7cV65dIwbN4cwpVYJm3sQ
      AxNENHU02E2sj98iaO6lvDqI4/CrTD+6hakYIi6YeDg0y/leC8M7EttLk/QfqOf63RkaXToa
      +vu599FtTpzq48HdYdZXpnEd6KeUzdDodVNJ+3jv/hpv/+Ao7398l542N97Oo9TV6MiHZpkM
      W+nQh5jdijC9HOW1Mw0MTkYxGzV4dSVyVgebs+vUssvyTpTZ9ThHO03cGNxkoLcFWaiwkwZ3
      ZZOJRC3uwgYl12FYG6XosrO2EEaf3WBjN8ZyoMghb4k7kwkoJ+nv6wXSvPfb+7z+4x9w65Pr
      RHwL6JsHCI3dRtEJfDy0ybmTh7AYtAxfew/78TfIzNxiftNHQnTjKS4xEZcY/fQOnQe8DE2u
      0d3qJF8pMvhki9fOtXH9zgzB+QeYe14hMDpEw8AhdMDVP/yGk2/+mOlbnxAMb5MztqLfGWZd
      1fPw6hOOnT2J1aKnkthG23SC5NYCDqvM9FaU2SejXPnR2wx+coO8kiAZ9LNNA50aH/PhIpGk
      wGFPnodrOZRUikOHuhErKYZn/YTWBlnd1ZGJ+NhYnKC2/Si+x9cJJ4P4Kl7cxXVWYiXC6yus
      xeF4h4X7E37O9nuZ3y5S2V2j+/wFZu5dR6fRkdHbWB8fpaGnG/2fOIh/7uaJ4BZZQUtaMZPc
      mEbrbCG1NU5KsiHkspQLCTKqCZfdQNuhAVo9Hhz6HHcGp8nls2CxUVvroqHOTDyWopiNoxqs
      WI17ceaSRkt9nQez04XVaECWvyhK78Ax6uy1KJUKqAplRUH5zEivpsmmK4RCcTwNdRw/cxE1
      vsWT8QXKQDmbRm93YTA5MAlFvtxRC1orSmSB8WU/xWQCncOFxd3JmcMNX6wkWdEpMZa203id
      EqVcnlCsRGOD4ys1ZOD0qWPU1TcQXBxmZSeOovMiFrZYDyvUGYsUCjkiGZEGz7Nh3VanB7Ox
      FqtUZDeRIx0LY3R6MMoyB4+fxmt7GlKst+F1Wqirq2XbF6KQS5ARrXgsWpq7D9Pb28PZI91s
      zI4zv7yB3uqlxu5CX8pRsjZzqqseo0bzuXdXZ3PiMBtx14r4dxPk0zHKJhcOvUzHwWO0ea2f
      W3UEUUOrU+bRxDreei81Tje1JhNOA2SKkIin8bidtB0+T0ddLULGx8jMOiXli+GyaHJRQ4iY
      0EglMomiN1BK5klFdzG76ykkYpQLGXKSCYfFSDSZoJzLUihk0Zmt2FxuLFoZp9vKyP37RDMF
      Gjqa8C/Pk1At1P4ZAk+fIwCVzZUVek9f4vTpM5zyqizENQipKCanm7aeDkqpDPFIGL3JvLdF
      JsScL4XDaqQomrGXI9y7+ymL22nae7vIJxNEYxkM3yURniDgEgv84ZNrRNJlzLUmdvxFWhp0
      ZDIpchWZwPoiRdmCy2FBALQ2L9rYKg/u3kRwtKL70u4SvgV2y0YsepGyxYk+tsaDW9cYX4sh
      lXNEknvj/263lvm8nhZvExZdmXQsjKDfO09Jq6eSjpPIlQAV3/IMJa0Ng1Yhn1NoMYkEJAsN
      jW0YKJCIhJCNzwogsrXEg8G7FKytHO5sIp9NE4oXMH/1dlaI8ODufWa2Clw8dwS1kCMcCmO0
      7AlEKaRZWt+m1uHCWteKFJ/j1u37aL1N6L/h4iiGt7j74CHbRTunD3dSymUJhRJYanTPrGeu
      qcW/vYWzoYmNlQ28dTZSO2vcf/CAmN6NXQf1be1sTD/ixtWPWVpdw5eoUGPWU8jlvzRml7Ab
      Sii6RmqIY/D00dbRQC6XIRgv0td/CCUdIxZJoDPqaWg/zslmhamAAPF1bt97RLJQZnpmFpvN
      jqKUUXR1sDmEpb3/219HL+A5X4L3UqJKOhNaWaSUS1MUDUiVLILGiE4WSMaiFAUdtho9+UIF
      k0FLIhqhLGrRkuXmzUf0H+/k3qNN/vVnb5CIRVE1RqwWE4IAxVwaVWNEKebQ6Azkchm0IqiS
      FkUR0MsKuYqERs2TyJTQ6/TotZDKVbDoRWLJLLU2O7JaJBJLYqq1Y3qaYqmYSxFL5rE6HFDK
      IWgMaGVxb1qWSBSN3oBGo0NDkXiqgM1hJ59KoAgSepMJrVoiVRSoMWnJpZOkchUcDhuSKICq
      kIjFETUyOqMZsVIgGk+h0+vR6U1oKJCryJj1GjKpOJmSgNNWQyabxWI2AzF+9R/3ufD6GWx2
      O1pRIR6NIRlrsGghW5EwPz2Pa7/9Fe1nL+CqsVFj1JKKRykJOmw1RrLZAmazgWwyTrqg4nDa
      KOdSJDJFrDY7xXwWk8lELp1BZzEjAb/55b9z/pU3sFjtGLUiiVgURWPEataSzVUwm/R7wioX
      iCTzWMQ0t8Z9vHX5EL/+xQe88uplamx2hEoBSaOnkEmQV2TsNUbisSiiRo8oywiKiuWpSCvF
      HAVFRqzkEPUWZMrEojE0xlosRs2XzslANlvCqBPIlAQ0aoF0voRWZ0RLkWSujF6vwWA0c++j
      Dzjx9o+okV8e7/9HCuBPRFXZWZ1idH6HgbMXabS/3Ju5f8gxO+Wj51AHL/NrLM/NUt/Zg1H+
      87ytnp2Zorv30J6QX4ZSYWr0Ec6Oo3itMjPTy/Qe7H1pmf/SxHyLrMR1HO9rRhD+VgVQpcr/
      JFQ/hFXZ11QFUGVfUxVAlX3N1zLEKMpfI+yhSpW/Db6WI6xc/i5RLlWq/M9NdQhUZV9TFUCV
      fU1VAFX2NVUBVNnXvFAA+fgOn95/TOmlqVf+HKiENheIvcAQkw5uEcp8t6kbE8FVPr33+IWG
      GFUps7m+SWh7g/BLDDFqpcDGhu87ZWVRlTJjk5PfYYu/DKGVST59MvPtVlbKTE1MsbI8Qzi1
      N6N/NrbNzm6ciemF72QIeh6VUoGJ6ReXZ3xiHOVPCFYYHR974f/P+AFUVX3mNejq1AijM0vU
      d/aiLWeoSHpKuRSKIBIL+ommS5j0EtFohGxRhWKKLX8ISW9ELaTY3gmTKxUxG7QEfVukCiom
      owFBgHwqSigcJZktkEtGyJZlzAYdkgiJWJTdcByD2UwiHsOolYnE4oze/JCwvh6PocKWP4hG
      b0ItpNja3kHQGtFr915q5VJRtv0hdEYTkw+ug6uX9norqCqxkI9ANIXRZKaUibG9E0auZPjt
      +5/SceggNVqBXFlEFspkskWK6Sj+UAKTxYIkCmQCS/z2xiitzW6y6RSKqCUW3CaaLmKQFXKK
      jKgUyOYrZBO7BKJpzCYDDx8/4WBPD1AmGtolFAojGcxoKOHf3iavSBjEMqFonFJFxKDTkIhF
      iUVCZMsSJp1MOOAjmi5hMWmI7IbJ5EvkU1GC0TQWi5l8MsJ2MIrBZCKVjJGM7JKtyJgMWijn
      +eTDq7QdPYW+lGJnN4HRZCIZj5BMpDGYTYiopKIhfDthdAYDo09GqSgpNLVN2E1anlz9BVsl
      G8GtdYxGLYJsQCsp+Lc2yasaDFrwb2+RzKtYTDqiIT/hZB6zyYgoQC6VRJW1JGNRtHoDiWiI
      0YlJagxG0BnRCCW2NrcoCTqMTwMCHzx8QE93N5HgNrFMCZPJQDaxy/bOLhq9gVwuj06nIRlP
      IgsVtrZ8qLLh82n47967g6PGQlHQYdBAYHuLdEnAIKuEd3dfIAAlz/jkAkd765kLgqO0wXqu
      lvDyMPHILvP+NKXICtvhDFc/+gCDzcrE6BRGbYmRmXV2VuZRNQIfffqIRl2KmUCJ6MY8ao0H
      u1nH8uMPGdossTV+n7zeysjoGJrEMsGCzAd/+ARNKUJAsTM9cp+DrXX84ZOHyGoa0dnEysgg
      Wr3M9Nw2a7ODZDAQjiRpaahDLcT46OoD9LoyT6a30CtxhNpmmj1WyrFVrg6uUo6uEcrB1Mg4
      shpjejVJIhZDW0iQ04ksLUaxibtMLgVYWl5HJySZ3cpzoMlJIbnLxGIQfWaF65N+TIUwS6E8
      gblxRLPAwmYZU26F2c0oS6vbaIpBlnZFssndpwJI8Iv/+ltq3GaGx1dREuv4MwLr0xMYNGn+
      r1/fpb61nTqbiQfv/4IANWxMDVOs5FncilEMLBBCz0f//b9TEQRGp+bRqDmKso5HdwbRSHlm
      1pMsDb3HRlpidWaB9v4eNJUS05NT2D1Whh9NoanEWQiVmbz5cwJZMy0dzYjpEDfuj6EvhxjZ
      KCPkExiMIhZnC3aTlo3ZJxRMTQTnH1OWYXYphhCeYzMnsT4zTjq+w8hShEpqF9Qco3M+lNgG
      O5Va6h0mdpZGCRclPvjNH2jp8jI6ss724hMUUWRxJ09qfYwEBhbHR7C3dmHSCMzNzeHW53i0
      lCAfWiGlwMjjKQxSirGlCNmQD7vHxODjNYIrYxS1RhamZ3A3t6OXBUZvvUdC1bG46EfIbrMa
      KROYHyYrCNz6dPj5Q6BcLMD69g7zG7ssTo9R420juTlJomgiF9omHAkQThYpFfO09p/i9OFe
      DjS6CAajRELbZPQujh87SVejjc2lZcKRIOlcjsLTTJOiRkfPoWM0Nns50NGLXvpiaNN3/AJn
      Bw6QfGqt20OmprYGpwNWFwL4/EEqSoGunoPsbiyyEYijAMV4CBwtDBw5jZjZxWh34HLZEQHR
      YMNjFQhHY0R9G6iOVo6ffZWLx7qw223UGHUIBg/kd9jZClNTU8a/HcQXSlIp7w2NdEYLdpcd
      o9bIK6+9RVf3AcxCjmg4QdHcTCW+zLY/Q62cxB8IsRPNUSk+O66zeVoZGDiOJR9kZmmdYGCH
      YjlPNi9w6MyrHG5z762os3H02AC9zRaGRyYJBoNEc2WKuSwN3cd49fI5urw1LMwvEA1tIdg6
      OX7yKJXdHQomL+/84CIOmT1TkMaA3ebAIabRNB7i+IkB0js7iI4W3n7jLCYBBJ2ZBpeZcCxB
      OvGVbJyA1WrD6bBjb+7j0pVTaHJZVncynDx1jB5vLUWjB5uYYH5pHd/6Mv7QLuHUXlZOELDX
      NRBcmsFaq2N2eBzrgU7cB/r5wdkjVIp5NhJ5Th05TIdXz074i+P7VxfYjUSIZXIUyhIt9VZC
      uzFS2RIOq8zy+DyOtlaWV+YJ+XzkKgrl0t4gTedu583LZzCpZZZCCY4dOczJvkaWt3Zp7Oh9
      viEmsLFG74V3ePdHP+GQKUVArSEb3EK2O3C7avG0Habbo0fVGpFlGSW2zsh2kd7OehRBh5RN
      EI3ssBFI4XA7aOo6gqfGgEb7hVNDFIWvZgsCQJLlp4sFNIUcM0uzhGLZveMoZhxeJ6dO9oMi
      sLy2zaU330XO7VIBNOYacuEAqUSQDIZnDDHB+UfEdE00u0xgrKEQDpIIb3DnyTyiKKAoKiDS
      YlAZTcu0O23YG1o51VdPBf3TMosICKiqgCwLLIwOovd246qRKJVFnGKJTXTUO6y4Gw5wtM1O
      WfNsOHhsN0A8GSEpmmhy2egZOIlJ0mAyCkjyl75N5mP4Qgn8gSQd7c00dhykzaZFYzQhSzKF
      eICo4OTdC33spATy0W2iwQBFvRmtRkb6prqtsZENbBIJ7CCYLWilvfRJAPGdBUi9WbgAACAA
      SURBVDbjGrqaXBQqXx/lyxoNSkVBlOTPw6IdBpXNYAx/OEZh14e1+wzHW/QUNDbqW7ro8tYg
      6wwIgMlqJ7Dt4+BAH0MTAbq9BqQv7ctMGX88hT+YxFbzRZ3ZXG68LT20uS2UIhvMRQR62jwU
      C2W8bgcjS35aXBYcDg8Dp09hREHW7g2hBEnmM9uAUy+yGYqzvuGjzmlDEqXnDYFUcoUy9Y1N
      6DUiTqeFAhYaXWacnibqW9sp7swTlRs4fbAZvcGE3V2PlPITqdTS2+6mnEviC8fIF0RefeN1
      EmtTiK5OelrciAJIshZzjZ1ak47aWhtmowG324PF7sZWY6G21oLeVENvs43NcIWBQz20dzQS
      CmU4M9DMxMw2x86corvJyfjYFP2nL2I36RC0FhpqVUanN7hw5TIWgw5LrRWDVsJsc7O7No/R
      20FzQzO9DXrGF0Kcv3SOGgooJgf1HhdetxWdyUVjYyNWMcWsr8TFs/1oRAFRq0fIJNE6PdS5
      XHjddtaXlmno6sFtd9LoMWOobaSxsRlDMcRyQs8rxzsx6PU4bDYgz+rcBslcgZMXXqHzQAvb
      85M4uo/R4rahN1qwmfdku7ayQqGQwtV5khP93eRDKyQNzRzvrEevN+BuaEZX2GUhouHK+eM0
      1CpMrkY5e/4kVpMBu82OTq/DarchAxqtBoe3jTptmjl/gfNnjmAx6rHb7AiCgN5USy6yRdZc
      T6fbgafejcvtwlpjQ6+RMNdaCYRitLc0YLdZ0WkNHDzez/rkKLVtA5w41kdsZZqio5cLxw8h
      JrfYVR2c6GtBEgUESYvVZsHT2kFTnROPy4FOt3d8rd7E8aN9zI6M4O49zYG6PRedVqulpfsI
      5d0F0rp6ThzvR41ukZDcdLc58DY0YDRYqPe4aG9tYHpsmgNHTuOp1X++vcPhQKPT03u4n+DC
      BGrdIY4eqENvNP+FEmSoZSYe3mJ9N4O3+ySnehtevs2+IcWdm3Ocv3KKl/lcnty9Q+fZC1ir
      mXL+YlQzxFTZ11Q/hFXZ11QFUGVfUxVAlX3N16ZG/HM47atU+Z+F6qwQVfY11SFQlX1NVQBV
      9jVVAVTZ11QFUGVf83wBqCqRnXUmJqZJ5ErkkmGi6edlBfl2KKUcCzPzpEsVVLVCIpkmEQmR
      Lvy5Z6Io4veHn12klkkk0+z6d3jZWaiqSiKZJBMPE89+89rZVOqZqcD/kijlIjuh8LdaL5X5
      LIK2gN8f+Vb7V1WFRDL1zLJ8cpd4tkylkGFuapzR0UlSL8gUFI8EybygHSvFNOncd7ERQTET
      Y2p+9cWGGFUhlUiRjvpJ5F/2PkclmUjy5d09VwDZ6Dp3Hi9QYxb56JNbhFfHmNl+ftqcb0Ns
      c4o5fxqNKFBIB7h26xGrk8NsxbIv3/g7keDe7YlnluT801wbWcNgMvKyyBqlkuDDj27jXxxn
      MfDN53znk4+IF79bg/6xCKKI0aB/6XrxrSnujq5/9utrdfA8yoUoH1+998XvXJR//z/+NxZC
      BVLBdTajBVwuB9oXzIyr1RvRSM+/ny4+usp86Lult1p+Mki0In1TwPAXZIJ8ePMx6ExoX9aw
      uQDvX3v8zKLnp0hSFUI722T7D9PTlKOkBLn7wS+ZfWDhnX/4O5bvf0w0W0DnOYjWN8RcxsWZ
      TgObkSJao4u33jiPToS5h58wsZ1Fa3HhZZ21XReoEPevMTO/gLWrholf/5zbGjP/9C8/ZPCj
      q2QVgc4TVxhod5PcGuP/+f0ITpuOY5ffJTZ1k+1MBYv3IDXJCZZjWtSKzFuvHGA2aOKAbpV1
      tQ6A0MowN4fXyBbhSL3K3EQZY3SVgUsDDN0YIl+qcPHt1/nov/6fyDYP7ccu84MTHaQD68wt
      LNBQ08rgw//BsN7CP/7Lz5i68XsimSLWph6WVhYwLu9w6VAzcd8C1x9MUlZELp7v4ef/7UOs
      HicnLr9Dev4uu3nYTMr8lzf7uP5ging8y7v/+Ca33/sEVc1Q2/sqtsQCgUwFk+cA7uI2S+EM
      OlsHP3r1OEouya3BKezFDSa3CuiNTv7lX/8OHbA5PcjQgp94ssLRZpX5VZlLp/swawFUFp7c
      ZGIjjtZSx+snW3jvkweUCjkGzp1lcWyMYrFM3+EOZhcWCMRfxWPVEwvt4mnYC2BMxqMEt3cw
      1dhoaNy7NEY//SWTASgko9R56sjLdjqseURZx817YzjsFk69+har80u8dbmbX30whzk2QzzT
      THkxgC+Zx+ztw5yYxZ8BS30Pb57rR1Ar3Hn/VwQK4GzqIT6/RBkP0EIuvs3HVx+QTKU4/6Of
      svbgA6I5FW+Di4XpORpMu+gOXKQcTXHQq7IQU9hdmqEANPad51RvA9HAJoszY9zQBpjww2tn
      u5/fA2hrGvjJOxdZfvwxN5+sUFEljr36Iy53ewlHd7E2HOJoXwfBwBZlycJPf/oWk6PT6GSR
      8PYswUQFKDC+nuY//+zv8AoBhNomjh4+hE4WqfU00dHWjtNi4tK7P+WkV2ZlfprZQB6dVGZy
      chEFUBWV9sPn+Ombp5kav8Nauo6f/f1/At8iuxUDl974IRday0xuZimWKyjlIqXKXkh3oaTh
      7PlzSOUkNfY62g/1oSkWWVmYpePsW/z0cg9Dk6sYPT38yz++QSwaAsBc10xbSyv1NjOnX/8J
      r3TUEEymcDT2c7SnEV+0QFNDM70dXgDmxgdJlUXkQpCJ5QCevgv8w+tHiKxO4FMb+MlPfkKT
      Q0O+LHDs9BlcQprpkSE8p3/MO69dxJDeYHBuB0mSWJucJlkuEI3lcDisgAqqQrFYolTR8M4/
      /jPtmiKJp+1UlI2cP3MSORzG1NxM+4Hupxc/qOUiDx6PotVq8K8vshmIcPTcJVpsMv5wilQs
      AgYrnuYW2lvb8Fj3ehlXSzctrr2EICZrHedefQ1T4Anj/j1jT0nRcurSmzTarbzy1pto8zEy
      pSLlUomO06/zsyuHWNncpVgsgaqQLxRpbm2n3WNlZH4ZjUbHzPQYSjFDJFXEbq3dK3B+C1+p
      mX/6+3fJbW7iajrAkf4uBAFK+TLdx8/QaqvgX55k19jP3/3kbRqdDlq6enAYQNRayaWCbO1G
      0GZ2WAhlkESRyekpAOx19TR19OM0wJUf/j31NuvzBRBZn+DJao53f/avHLcV2C2KmI2GvYrN
      xpmYnmInnkdAQavTodVoMTvqef2tNzl68DA2swyIiGqJfKlMrqCgeSahgYggAJLu84QQosbA
      gYPHePXCWfq6W54WTiWXy5PLZtEZLKilLKVSkaIiIislcsUS6WwZk0mmkMkQDASfGrZVtpbn
      mFvdBATUL33h1sgy+VyOdCaDTq/FaDJ9pSKEp2XTYDLsxeYrmRjjU1OEEgUElD0zz1N0JivH
      zl7h9PFjdDTYMZvMe922pEUoFyiX82RyRUKbS0zPr1AR9jLNFHI58tk0JUGLu6GDt956nUOH
      D2CtaeYf/vFtFiceUf7ysFurx6T9cqddYnNxjtllP6JGQEV4drggCNQ4GrnyxhucOtJHJbbD
      1MwChYpIsVDk+JUfc8JT4MlSlOcFAKSyaTSSBr1BR+WzyRFkCa0sIYpfH56YzOanzSugFgqE
      Q0EyxfKekUiUcDV288ablznV34vs7OCf373Awug4+af1pRSzFIsFSkjPGHpioQ2mZxbIVQRU
      SYuaT1MuFIinM5+ftSDrqTdkmN0q4qmz0dR9jDdePU9/R9vn9SEgIIoiRqOR0Pby8wXgajtM
      HTu8/8GHKC1H6KhzYjNpMdkc1FjtuMwy6byCy+nEXudBK2m5fKaXjz+8SkZnx6QB0PLKyW4+
      /uATpPrDtHid2C1PjQp6G3ZjkYKmBpNOptbtpa61D09li+uP5vC4HU9PSyW4NsXtyR1OHT/L
      yS49H1y9RcPAcSxikYmHn+LXtHO8rwN9eomtjJ46aw0erxOnu458KoHTUYfe3YQ+voPB46H7
      4DEyq8PcW8pxob8dj8eFoNHjcVr32k4y0+gQiSsmao1azI46asy1OCwSubKE22qho7OJ1dUA
      AD0DJwnM3GN8u4jXaafOaUFjqMHhacAtx/jk2l3SxQo2p4tKPo3Z7cbubiO+cJ87j2cQLM2c
      aNXy8cfXMLvbcFolHt55SPfhU8hPjSQelwOHqw6tLGL3eti7yYu4XA4y6QTuZg9GSxOa3A7p
      ogro8DZ6OHe8h1sffUROY8ftrUcophDNdrwuF/GNCWajRs70tOGtVdmJfzFGtzjrqTVIuJxO
      poc+ZaXopb9xz6VltbsxamWcHg8aUaLO48bucFNrd+CsMSAZrdS53PQ06nkwtkZbQx0Nbd3E
      4kn6m818/OENzO5GvDUSNx9M0H3s8J7fTuvhaJvAh9fu03b0GB63G9PTgb3J6kRTzqGx1GF0
      NHPImebm/TEcLT00GApkJDs1OgFvWwsOdz11LQdpws/VW09wNT4du+kdNBoSZHUeTBqwOl1/
      +6EQ8Y0xBrdNvH2+62v/3bn2Bw6ceINGu+F7KNm3QMny/i9/h67WQsncxg8vfpHXqhBZ4Rcf
      DlNrEOg9/yY99bXfY0H3L3/zAlAqZcoKaDVff14vFgtIsvbbpfz5nigX82QLJYwmM/KXyqmq
      KvlshoogYTToP/flVvnr8jcvgCpV/pJUvwRX2ddUBVBlX1MVQJV9zTNPltVZIarsN6o9QJV9
      TVUAVfY1VQFU2ddUBVBlX1MVQJV9zXMFUMpE+PB3v+L9937Hx/em2J78lAeL385h9DxS/hn+
      27//gWihTCkb5tqtISbuXmMh+KcZbb5OmN/88vYzS4rRVa4PzrGxsMTLbBlKJcPHV2+xMnyb
      kfVvPuehG9eIFP46b8yUUo7Ftc2XrpfaWeTeyNLTXyF+88s732r/lWKST65/YYiZfXiN3/zu
      N3x4d5xUcJlf//JX/PxXH5ItP98RFtheJZ59fn1sTd1icuu7GZ/WRz7lPz568GJHWD7G9ZuD
      7PoWCKVfEtRQjPPxtYfPOMKea4jJpUJkBBtvvHqex/duU67RsDz+kOiqhYuXzxNeGGZhK0Jz
      7zGE8CJbaS397Vam5jZwt/ZwpLcNSYDo1hxDk2u423pge4K07MQsiUQ3lxgem+JMt4vI0G0W
      DQ7eePUEC8ND+JIKR06dxms1ko1scPfRPIqk4eTZc+R800yt7dJ28ARyYpnNQBJMdZzutrER
      1+PRBNllLzguE9tmcGiCitFFk+RnZLyI9VQ7tbkEo0OPSalGzp49zMidO2QKCh3HztPT5CAV
      WGF4dALLiU42Nu6xPWfjtdfOsz01xJI/QXt3D2MTo5Tr+7jQ10ghFeHxk2EKsp3Th+t5cH+C
      gipw/NwrlPzTzPuSCCYrV460MvRohGTFyJVLx5l6eI9kUcHTcQRbaYeZ9V1a+45RU/AzsezD
      0z7A0e5GVKVCMpVmbnyQLX8ELA384OJRJCAZXOfR2CyKwY1XXWdsXeZYfyemp56AyPYiw1Mr
      2Jt7ONrhZPD+A5JFmROnjrI8OUK8qOFgu4XhsQmOnjpJXa0ec2M3Pz5q4/2bg6wthzh08U10
      G3eZDxY41mBgbfYxy9txKrIek5pDdBzAa8iQyy3xaHWTfAnOnD/D9oaPgb56hkZ9JOYekWi2
      Y81UmFkL0dp3HEN6jZn1CM29RzjU7kVAZXXqEXPbCTr7DjE3Po+h6xwCAuV8kidDj9jNwPnL
      rxBeeMJKKE+718iTJ+M4rYexiA7iwTLNdoXNlEApuMxmtED/ibM0OkzE/EuMDD/BVasSTiv0
      drc+vwewONvpcJT43S9/TkbjQlQqSBYvTfoCmwEf2wkt548dYGJinI2VZZwNDdy+cQun18Pi
      k9sE0xWgxK0HE1x67VUSSyNonM0cPtiHVhapqWukvbUNh17B6OnGkd5kYWWOx8txnPoctx9O
      o7DXEyVUO2e6rDwae8zDiTCvXTnL0pMh1ja3qOs9iS05x8xmmJ1wikzUTzCaA1R21tbpPHmR
      TGARncVJa283yY0tlmZHETx9HHGXuD+9zuKSj6NHuplbWAbA7G6ipakFr0VAY2ulgQgb0SjB
      tJ7TfV7Gl4I01jfS3b7nPFsYvUu4bIbQNI9mV1neKTDQaWdhZoLHS0kuXzxB0LdNyL+Ft+cE
      pugKExOPiJm6ONRsIbi9wrUHs9TV2Xl48wbTs9OUZSNKqYAKqOUCm/4AwbVFjK0DqFsLxJ+2
      08bmNgOnzxOfnUDX1ERbW9fnF79aKXH70zvUuOuYfXKflcUZzO0nadAmGZ2eZWEtiFkvorE3
      0NrUSt3TOfWbm1uYfnSDaEollk2jkSRMJi3ppwkEI74tatsHKPqWaTtxjuDKLDtBH9FwgM2k
      xOkDJkbnttjcDqBUsqys+2lsbqXdY+X20CTuOju3P/2U6bFRBKOZcvGp77oU4vFMih+8cpTZ
      kWk8Te30H+xAECC160df30uTZpf5xXlGNuHsQAuprEpzRxeGXIBEUYvPt8aO30c2uMSDhQju
      WplP7w4CYHN7aWzvQ06sUTJ5qMQCzxdAJuojqrj5z//8U8pbs8RUDW0H2jDqtFSSEeIViXIh
      QzpfxljroL2lAQnQG3QoqgatRgAEBBQqikpFAfFLRxMQ935rLHS0ejHoNCiIIAhoBNAadJ+b
      LSqKQqVcQdboUJUyiqqgqAIiCoqiUqoI6I0asokoK8trlABUlWAwhlarkklnnxpi9vYoigLl
      coVyuYwkibib2nHVGBGEp32j8LRsspED7U0Y9VrKyTDJkoZSIUc+X0SUJD7rSQVBQNJoqVQU
      TAYdTW2de+mWBJBQUdUK5YpCJLyLJEtks0kUVUJVVCrlMgoiqqpiNOhQRQmdtoamZi+rS3NU
      lC/112Y7XY1u9LKGvcFIkUgkhSRCJpOmwlcMKgKIqGj0OgRBIB6KoNFpyKQzFIslXA0t1Cgx
      lnbSiNJnxylx4+OP6Tz1Gk7S1NrshCNxNvxZGutMe6voDDhqzOjNNkx6GVkUP6+L9s4uLHr9
      XvnyWTZWVkjkS0iSxGeuG71OQpT1iEYrbR4ra4ure20mSKhKCUVRvmbuiUVCIGvIZTOUKiAo
      ZURBpFAqID3dr6g10WBKM7xaoMlrQ1UF9BoVWX4aLi+KSOy1VVdnJ6lU4vlJ8jQGC6T9DE8u
      0DZwlhaHCa3JRo1OxOD0Ugkus5Mz0NLgwu2wY3d56Wp1Mzu7QteJ87S4LAiINNVZePhwhPq+
      U7S4TMj6GmwWPaKkJR0LoK1x43K7MUhgb+nFKcTxZXRcPHMEg0aikAgws7BBTjRz5uRxmq0K
      g6MLHDx1lnxknVBg9/9r703b47jONM07InLfdwCZ2HeABECQBHdSpChKsmWrVW17qqau6f9S
      n+YvzDXzoa+eru7q8SZLtrWSIsUNAEns+74mkEACidz3zIj5AJAmS4RkuWRKNvL+lhknTpyM
      iDfOOXneJx4MVR2caKklGZinaK6gproKs85AZYWB0YklqqpqKaurJ+Vfx1Hto/nYcWLLE/hz
      Vi6eaEJAxON2IItqPE4bAmoK8S1koxuX241JI2J0V5EJTBIumvBVlNHgs7AVhQqXBaengujm
      EoK7ldOtXhANuO16BLUBORZkYX2XdCHPmeNNjI9P46muwW53E1ydZWs3hLn8GBfancwsbXH2
      tevUlhuZn1mkseM0ZXYTAgoFRcJpt2B3uJGQsZWXoUFELMQYnV6hvqmWsqpGUjvrOCuq0EhQ
      KKg5ebKZhZkFWk5dornKwcTwMJaKWnyVdZgKIbYLVs6faEVObCNZKzDptNgNCn1Pxmk5c4nW
      +iq25kcpOJs5XuNCEASKxQJmmwuNqOD0eBBkBafLjsVix2i2YzdpQO+kxlZgaTdPQ1U1jQ1e
      1nbSnGv3Mre0zfkrr9FQbmRyzk9rd/f+A0jU49SleTS2QufZs9h1EkaHE6NahVotMjc2hqm8
      BkdFPfWWJKNLe3SePo0U20K0unF5fHisagStjdr6emxClJXdIleunMegkUDSkgstIdprcJeV
      49DLP3yDjJh/kqEtA1dP131l26P7n1PTceWZlvUHh5Ln7kcfEskr2OvOcOVEzbNNhcQWv/ng
      NiqdnjOvv0W1w/A1FZX4a/GDD4ASJf6alNYBShxpSgFQ4khTCoASR5pSAJQ40pRE8SWONKUe
      oMSRphQAJY40pQAocaQpBUCJI80hAaCQTkTJ5mWK2RS74TgoColo7IW3FeczCRKp9HOuJPvI
      xQKZ3MGKsqIQi0b5Ri8VRSGdTH6lXDGXJpHKPq2ZaPRF7UAyHqMgf9fzeIVCNs3XGKJ8pXwu
      m6b40vIKe8EAicxh7ilft+9huxxci2KeTO7gXdiKQjrzJ6VDJhEjW3j+vMj7SYGlvzxe4NAe
      YGn0AePrYTYmHvF//fL3KIU0X3x++wUxydZMHw8HJ7nzaOSFfUNLI/SNrz/7nEqm+EbzmmKK
      h31DXykXD8xwf3j1aSmSyfQL2x/ducVu5jtO31AUHn3+EcHsNxfdJ8OXn94k/jI3pVyQP/zx
      PulD3WQy3Pn0Jt/OfUohnUyxuz5C7/C+UKaYj/Dxp38SwOTSKfLyiwEw1N9L4s+P6iPBIYIY
      AU9FOaPBXdLxNI26IoFUEsVoJrY4wq3JJZKKhYtP89PkPPc/+4iG82/gtahYmZtiPGQiNv+A
      iODBa5eoCEwwuhBHrdbzxmvHuf1FP4LGwOU3buAxadhbeITGe5yR/iFam5180r/GO2fLGJjb
      ZWayn53FQS6+fYPFiWnU2S3uDcxhqmhGLCT4+P1fYjB4eO+9t9CJsLs0yr2xZXJFPefandzu
      H6O98zS764sURB3nr12nzKxhc+JLPnqygcGg4/Ub15l/cp9gNEvbuR5GB0fJN1zA1+5l8fEt
      Hq0lUIsq3njzGtP9XxLYjVDe+RrxqduE80UWp9dwd16mu85GaG2au0+mEI0eOspzrO/sgUoL
      yEwP3GN2fQfR1si717pJR3eYGB1GY9SwuB6i48xpEivT7EZTdL52npHf3yRvMtLUfRH93iwr
      oTiO6i7Uu6vkxS1G1q2cP1lLOrDE6PgkPpvA5HIAj9VOy8UuHn3wJXqHgZbTVznm0zCwuMe1
      NhfJ4DIf3nyARlLTfvlt1NvjTKztYq9oxhxbYSoc5eobv6DKlOT9X3+MYFBhqznNcWeKh0Pz
      SCYPFxr1/OaLSarqKkhHoqC18cbFNu7e6SMvaLlwrpPbn98CSaKm+waXjnlf1X39Z3NoD2B1
      lJGIrZHIqDndbGF0chmTo4pEVuHK1atE1xZ5+ixeePwZQU015WYNIOGtrqaxqYl0Ks+NG5dI
      hMMkk2kaT17mtK/I6KyfpdUNJK0BzYGv1NriDuWVboxihPGZTdb8i8yOLOH0WXHVdnK1u5z1
      wB7hvTADj6e58u67VJpkslmZU1ffoUIJEzp4Yu8kZK5fv4qyvcBWJIaj7hRSYJzNlEw2vEb/
      yBIAuWQUT+t5ztQZGBwaJGWo5713LzLWN01tYx1NdfsXLB0L03jqGheazDweXcBY2cqlE1XM
      Ti0Ti2e59ON3aG5ooq7CDorM2KNxzv7oPeo0cZI6J42t3bgNQDFLXnJz9co5lucnAdBbHVTX
      NFFpFTHVdNHq1lHe0sNxn4aF9S2iBQvvvv0aW+uzbPnXCCUKmEw6YntRnFWVtDS2oFeLmMuq
      qK+twyZl8HVewKvLkc5nEc1VvPvmOWbGpzD7vAQX93tTOZ9B46rnP713haEvH3Dn3gNESWLw
      8X02NwK0nn+LCqsKlAI5zLz5k39ga7qX3i/vkkTF5vgTZje2UJW30VGmYXVjB53BxPLAQ7w9
      P+LKiQpGh2dIiTbe/dnrrI/Nffd373fAoQGgNttR+xeIWyuob29l6t59PNUVbK8ucPfBMKJK
      9Wy4Ul5/nMTmHKln3eu+QMFgtWM3H6T5CgKSJCKKEkVZ5Kf/+F8oV3aZWNkBQD7ort2+KuYW
      FjnucdIXylFrVONyu9Go/uSApgCSqEKjVaGoTZQ5jEiicDC+VQhtzHPnbj9otCiKBrfHiUrS
      cebqG9y4fo22+vJndZWVl6GSJBRZRhT2XUxQ/r0cQ0CSJERRJJ+NMzXQz8xmBBFQGx24rAb2
      33yuPGufKAqIooDy3KBOKeRYnhuhd3QFjVp5vnoAPOVlKJkYA/0PWA9nEQUFu9ODTq1CUIpU
      H7/Ee2+d5dHD+we7vdhGAFR6PC4n6gN7FUmUEAVx//XrAi86JEr7Li8iYC6v5623bvDm5fMY
      tFbKy6yopKcCov3fLokCap2T1268xfU3r+Gz6XGXlaM1u/nZL36OvDHDWiSJKImIkgSyjMXp
      Qa/XIP5AJx+HBoAgGXC5LVT7yhCt9XjMJqrLdKhUalBy6EQVRY0Ro0FPRW0bFxotzGzsC/VM
      rnLSwTUknRkBMFssCMUMA/dv8XhdoKejlsnez9nI6mjwOQCoaXAR2IhgszuxmO2cOFGNy1mN
      Sq3DpNeg0hgwajVYLBZOnW7m9ocfsBjMYbdbkQQBg9mCSgRQUKvVoBSRtCKCqEOvUdN27gwL
      Dz7j1qMZHLZ9Gx+13oReLaLWGfHVtqGKzfC7393h2PkevF47KysbB2dDYfDeJzyci3KyrRKV
      pCKdB51KwWwxI6Cj3CmxuhUGQaSzp50Hf3yf2YSOxgoXFvOBIkkQUKvVyNkUospwMOHXUe4Q
      2YjkMGhUCJKEShSRkVBkEbPFiCCpMJltyEk/dx8M0Hq8G6PFjM3uJRleJZ2TkVRmrJokoayE
      Ti2hNVrQSAKBhVE+vNlHc0cbiY1N3PVVz67x5uwgH/zuS7peu8SJOie//+CPBLMarHYL6uf8
      CqLBZT7+/W/xtJzn1OlWej/+gHF/DIvRjEmvwqDT8uT+bbJWL5euXWfl4R+483iF4ydasRgN
      CEhYLMbv5o79rlFeEaMPPlLG1qKHbpdzceXzz+8phVfVoG/B+M3fKeNb5LRkgAAAH8xJREFU
      qe+7Gd+abHJZef/9voNPBeXBrZtKNLt/hmP+KeWP94a+uZLMjvL+b24qmb9eM79XXlkuUCoR
      AY15X5r28kgkmUigN5t/cIsT6VgY9Fb06h9ay74eWc4Sjeax202ATDyewmQyIQj7fy/Hswo2
      8zco0eQ84Wgaq93yg7su3wWlZLgSR5q/x6AuUeLPphQAJY40pQAocaT5ikNMoXBYzkqJEn9/
      fCUVojQnLnGUKA2BShxpSgFQ4khTCoASR5pSAJQ40hwaAOGNcf77f/1ffPzRh3z2YJz4zhob
      4fRhxZ+RTQS4fW/wJVuKjA/2sZfY/5cpnwmzvBL8ixteosR3waEOMcViker2Hl47W8+vf/s7
      lMZuioLM5sIY4ytRTndUERU8VJvzrIfSaNJbjK/EOHWylnQ6Syy4wuPhOaqPnaa50kE+FaX/
      /h3aMaJRsigqDXaDlYmBJ2xHI9S0n8EthOgfnqOq7SRtNR5AZmTgAZFIlrrOM3hNBfr7BzB4
      W2kpUzM7t4alsommSgfrkyOs7kXQO+vobvEyPdDPTsHI2e5m5mdnyYs6iAWJKibOnT9FeHmc
      iZUIpy+cI7I4zVZ8D4OziROt1QepzSWOAl8zBCoyN9LLx398n5zKTSy4wuLyIv2zu/Q0WRha
      2WNpcordjSV2A2v0zcU432alb3gFCgm++KKfyuYm+j7/lDSgNpjwVdXT6BC52TuNzVxgcWGN
      8Yl5Ok6fpv/OLUZ67yE5yslEwxQAFIXR4Qm6ejoZedjLzU8/xVTZTHjqLiPzCwxOBbAatIDC
      6swo5pouEksjPLn/ObNJM271HvcejtDbO4hG3uXRUhS3WWRzZY4nizEu99Rz87N7zA4/RLHX
      sDk98HJZY4m/W74mACSaT1zgx++8hzMVIAxkMwmMFieOylZONDZiIMyifw+HTYfR4cTia+Vk
      vRPyWeK5AtG9PSp8Pv79A7Wx4yQ+hxkAk8WFyWLHopap6j6PMRdkdHyK7MF6nNHpxmG1YlLl
      CMVTZCIhtE4fZo2ato4uyhwmBEClMeJyOnBZjASCIYRimlRBS5nLTFldG80tXVzqqGJxcoyF
      tU1MVidGewVSMYLO6OPYsWr0GrEkGj9ifE0AyGwsTjEwMEhE0mMAjNZylMgqd2/fZHojQp1L
      Yi5moKaqCiW4xP3bN5najIHOTH25mWQiRjQvoAVAhVGrENiNvHCUyM4Kj+7fIW/xkVhfIF7U
      4LDbOBAjEdtY4O69XnJmH90t1USTKXZDCQwGzQv15DMxHvfeZSGcp+f0SQqJKJHQLmr9frqv
      kosxu7yF1eHEXVFDbneee7dvYfa1fWcns8TfHocaZBQLWSLhGDKgM1rQq2QKggaxkCaWKmCz
      W4muDTIT93Gxo4JsOk48VcBmM5PLFtCqIRJNYLDY0Gv2pxrZVJxcUUBQaTBoBDLJMF98Psip
      a2dwWGxohALhSBydyYpRp0aRi/zmt7/i+utvYrTY0EgKkXAEld6MQQ15WUSnVQMyfb//Lbae
      61RajZgMGlLRCFlFhc1iIJ3JYzBoScUiZIoSdpuZfDpBPJXHardRyKTRGA3kUik0euOz4Cvx
      989f7BCjKEke3Zuk61IP+r/0jilmmJvfpK61HvVLjyEzMztLW+s3PaUV/HMzWOrasLysohIl
      DqFkkVTiSFNaCCtxpCkFQIkjTSkAShxpXlgJFgQBlerQxeESJf7uKL0VosSRpjQEKnGkKQVA
      iSNNKQBKHGlKAVDiSHOoRdLa7DCbkSyJrQU+ezgCSoHJwWESzxmdhP3TTC2sMTa79MLe2XiI
      te29g6oU5mdm+bbry9nQCqPL+69Op5hhYXaZP72wRWZxYpBw5pCd/6MoCjurC0Rflhot5xi8
      9zlT63vfWE1qZ4WpVT+DA6MvbiikWVjeeMkeCtHgKjsvPfDhRDbmCEQyLCytPPtuY2mJ1Lfy
      XYKVuXGCsT/bFufvAulf/uVf/uWrXwuE12dYSerJ+ud5MDnP6Y4mHg6O09pQiX91lWRRJLs9
      w2JIJhSJUm7WUFDp0Uiw8OQL+pZTlNu0RGJJzGYTSjHDznaQaLqI2aAlsLbMXiKP2WxCFCAS
      CaNRq9gNR9GrYNc/y8h6Go2Sw2CxopIktBoB/8oqOVHDyngfaclKUVEwG3T7L3zNZ/CvrRDL
      gkHMEQxFycsC8d0AO/EcFrMBQRDIJmNsB7cJRdNYzUaSkSCrG0HUeiPJWIhwKMTtDz5AV3ec
      MrMW5AKbaytEswrq9CYf9S5x7twJdGKBWCKPkE+RzAvI6SSySmRrdZlwqoCY2GAmlGVzcZXG
      Gg+xnIBeqyK+/Jj/eWeJE+3VbK6tkhe0GHQakGXufviv7GkrMQoZ4qk8YiHJynoASWckk9gj
      FAySLKowqGXWV1dJFSRMRh255Da//fAeHV0daMjxm3/7n1hqGigm4qRyRYqpMGsbQbQmM6lk
      Ap1WRSSSRFDSrKz6kXRm1mYGEazVOE0a4qEdgqFdkjkwGbWEt/wEQknMZj17oR1iySwGgwE5
      G2dzK0goksRkMpFP7rGyvoXGaCIdC7EXSUAxw9r6JpLOhErJsra6SkHSo5KTbO+E2A0nD+6D
      V5+FeEgAgEiGRX+YTDqKT5UnbXeTicukA9OEClr67z2g0msinNOTivhZXQ1S09CATi2wuzbL
      ZkbF9Jd/YCtnZmV2lFx0iWF/gfD8MLKQ5uPeBXRKCp29HLNORd/d+9gc8D/++xd43RKrgR0e
      PZnEIsXZTArMDU0T3VsglFMx+mgAJbvDUlhmcWaK1rZW1JLA7JM7rCUkxh/3YVXv8V8/GEAv
      RlneSlEIzrEtleGz69mcus9ngwGE0CwhtYOR+w/QSmmGlmPM3/s161ENiWgQX/tJysxalge/
      ZDJUJDQ/RFoysb4V5nhHG1rSPHw0Qc7/iIebWtKBWTKhZWbDEuuTjxB1RpKCltTOJtvra1ir
      m7Dq1WT31hlYSaIOL7KnaJkaHqa8pgG9WmBh4jGSyc1nf/gA2WJn+vEARgP0T/jZHvmE2Yia
      mbExDIVNHi/GySQi5AJjrBYcBNb8nDzVhVYoMjQwQHm9k1//P++jsxmZml3CIO/yZClDZGOZ
      creO/vElFsZG0ZoNDA9Mo9MVMLlqcZo0DH7yb8ynTQRmhpHlDEOz26izARY3Etz9+H1SOie1
      vnKy6wP8t9vzmDMBtrMKY48GMZk1DIzNsz78BWNbAksjdxAMNnbDUbZmhoigYbBvAIsQ4F8/
      mYDoJoqjEo9Z94pv/6+ZA5isbvLhFWKyjRMdPkb6hzFV1FFeWUU2vE0oFHs2rFke7iOpL8Oi
      UwEiZqsVh9OF3dvIT948v7/apjHS0XmCM+0eNrMOGq05JifnSB6Yx7WVaRmZXsfs1DK6vEu5
      087xi9c5fayOdCwBwHoozukTJ3j3p29gMju59vobOE0ixQN3GZe3CiW+y24oSlaBU9fexi5H
      2dwKsJPIk08/1TRrae3s5MqZNhZWdqitdBHcDrIXS6F1VvPOO6/jddpx2i0ALPnDdJ8+walj
      tQT30rg8ZVj0akSVCZ2SIJhUQ3SFeMFAeVUD2kyInXCEzIGqZ3thksW4Cq9j3yjDYrFgdTgJ
      Rgv09JyiyaZhK5FCEAVsNicup42K5lO8fqaTpvoKtgNbhGJJNDYvN16/ilMLjvpj6DNbTM+v
      kS/KaE1WHDY7Zp0K1HqsFhtuh4WGzotc6umgym1iezdEPJ6lyiYzOB2gzKFmaTnA6so6UHwm
      QgIQJRNdPT20++yMjo6yvbXFxm4CuZjFWXuc6xe70aoEECQa20/Q091OYHaEuY0gK6sbCAUZ
      0VbGj966yqVzp1mfn2BlPUAwInHi9ClazHk20hJnr73FsWo36cz3I8U7NABEvQVpZxnBVYG9
      rpXA0AiVlSae9I9T234cg5zn6XSg5dJPsO5NsxHbH5SLKjUUi/sWPE97tWyK9a0gS2t7WIsb
      ZFzdXOqoJBTZv7k9bc1M3p/hZHcFa/4UdosG6d+tSls1Eht7Ee59+ikJWUQSn/MaUPIM9Q3i
      bTmORZQpKiBJKmwON5UNx2h0ap+JYyCLf32LxcU1ygwJhtaKtDZUouRzoFIhCgJqlUShuP8L
      PWaJZf8ua2t+7C7Hs0MKokitNc9ssZyy1DwFRxUjd+/jauvAqVdRkPfH4OUtpzhbkWNo8WDe
      oFIhyTJWVZ717V02ognsOh0goFJLFAtFJEmFkFynfzbBsdY6hHwWRZKQRAFQCCxO4T1xnQan
      RCJbQECFKBafPQz22y+jUqmIbE6zElHRWlNOtlDAXVnNwuQUnqo6HA4HFy6eoVAooHvudMvF
      BBv+LTb3otTXVeOqbqa73kFR0CGKqj8NV5QiG34/mxsb2KsacNtcXDrfTU4uoBdFRFFhbGaN
      t975KWIuhkaVYisYYiVcwG0UkaRD/CJeEYcOgRAkzDYHldWVmAw2HC47tbVVuMwSc8vbdHYd
      w1Xhw2Fz4nE5Od5SRTynxm7SojNaSIR3qKiqw+10oNfpyGci7O0lcNR1crKzC3aniagrOH2s
      bl+AIpmwlllprqmj3FeB22FDb7TgsBrRm6x4XHY6uztYHB3C13mB2jIbVrsTk16Lw+5AkiTs
      Nj3zi37aOtpxlXtx2OxU19ZS3F0ioqukp6USURCIbm3gD4VRORq4eKoTVdJPQnTSXFdJRbkH
      p8OFzaolFC9S5jBTVlPH7twIBXsLp9sq0ekNOGwWBAS0VjtldjdV1bVUVVdQU+VibmqBhrYO
      3GUe3E4XHqeDluPtZBIZnA4z6Cwo4S1az11gfWKYimNnqSuzIiBgNpsJhtPU1fhwenzos9sE
      swaONdVSVlGGw+7AaNBR13qcnbkRrLVdtNRUYLGXY1OlwOjCpFPhsmrYjgrU+MqoqKwks+cn
      ZfLRXOHC66tAb7ZR6fPSVG1jcGSWk5dew2U2YLHZ0aklNmZniMgyZXXH6e7qRJ/0s5owcfls
      K3qdHofdigjkIptM+SPorRWcO3WCJq+OwYk1zl++jM1sxGp3Ue+18mR4hpMXrtLRUs3s6Aj1
      py9R5bRhNNuwm/WYLPsiqFfNK0uFWBjrRSjroqHs+/eK2p4bZVtdQWed5/tuyg+WyXs3cfTc
      oEL/9eXSmxM8CTu5cqzi1TTsO6aUC1TiSFNaCCtxpCkFQIkjTSkAShxpXvifUVGUkkFGiSPF
      CwEgy3LprRAljhSlIVCJI00pAEocaUoBUOJIUwqAEkeaQwUxkd0AiWyRfDLMkj8IisxuYIvc
      cxqLdGyXnXCU7VD4hb3lfJZ46kCtoihsBwIU+XYU0xG2I6mnFbK9tftcHQrhYIDMX83SWCGb
      iJJ5WaMVmcDKHJt7yT99V8iysRk8aJ9CdHeT5Df8l6AoMrFY/KXbMukk2ey3+3HpyDaRVJ54
      LM7TS5SORvm2OZbhnSCp/Le9Wn+7HNoDBBcnmPaH2Zge5VeffoFcyNDbP0DxOc1CaGWM0Zkl
      BifmXth3Z2mEJ9Obzz4bjaaveAR8E9mdRZ7Mb+9/EESMRv1zdcjMDPcS+mbHpr8MRab/5qfs
      vezuyezROzSP7vnErUyEuw+GnqWHa/Um1N/QtxYiS3z+YOal20b7v8D/LeVuKq0RVT7GrTsP
      nynnHnz0CdFvVQvMjw4QTBwdVdghb8EScHnL8W/skkllaTeAP5FAZbKyPdHH0OI2eymBN47v
      m1woxQw3P/wdx669g9cisbGyyGxoi+DwJ0S11XitUOmCoeUMOkHijWud3Lw9iFar4eKNH+O1
      arl790vOdDfx698P8NOrLUwubjE51Edo2kzXhatsz67QXK9nYHoDtDbcmT0+/PW/YjA5+d//
      89toVQKB+WF6x1eJphXePunif3w6w8mzx0lubZEvKpy5/g7VDh0bkw/46PEaJjVc+vF7LPZ9
      RDhZwFJ3iszCTbYSVhI7y4htAbytFUT9k3zWN4cCnGzzsbDipydbxK4r0vfZ79hK5dmL6xn6
      9LeMBvbwmh1UtRxHY7DgyS6zqfWxMvQYRVLRfuYaLZU2tteWWFjYYnIUphfWyWPkvf90A62S
      ZWVhjhBWbv9qFGPjaWqkINvxNDpvB8pGP9txFTqrj/PtFp5MblBUmTlbJbOeczA9PcepK5ep
      NhWYW1xAeNLLQu9jak+chUiAdCaJteE06lyK8z113O9dxSj7CcSK6F31mJ/dAzJPPvlfzMSN
      SJKWn7x+glu3HiJKEq3dXQx8+jFFXyf/x08uE14e4De3Z7AaJc688RO2Bm+xmxOx+tpg6wlz
      6zKeSgNyQcRU0UyNapdJf5ii5OBcLfzyzhR2k5W3f/4zfBbtX/+uf45Dn1MWm4dUbJVkVs/J
      djujw7MYndUoGhM9p7ophnd5+oya6/+MhL2FCrMGkCivrKK+oRGN0cU//+JHkMtTQE3P5Rtc
      O2Zhai1GMrKHpDejU+/ng1dqYMbvJ5WMM7oSwmO3UHvyKu9dPUFwc4d8Ls/Q3Bpvv/NTzjZV
      kNOYefvdf8RtyJIvyIBCUdBw6vRpVKko8WyOpvM3qCgG2ckoaJUEo3P7OlylCO09V/jZtTae
      TM7i9B6js8lLYHuHvGjmF//lf6OtvoaGmv0Mx9GheS795B1e7/KyHhFoamvHa9cjFxNsZ038
      w49v4LUZKeZlXvvpP1NtkzE77OxuB5nfyWLYHcOfEpGUDJMLywB4KiupqqkjuLLBaz/+B066
      08zv5BHVerzV1TTVeTGUtfLzN7uxVDRwqrWGYGCHjKznvX/6JzxyijQK4XAEi82GIudRW8qo
      b6ij3G4EtZXqyioa6zx4Gk9x/VQT3pYu2pu97ARiWIU4S7MrmCv1DD5ZRq2WCCxMEn3+4S+p
      ufDGTznhFrh/9wuCWRUCWWZmF9E46vjFO5eRRAGlqNDUfZGfvX6C0eEHPJkIolYJrE3PEMlr
      +NE//QKvKkc4kcNulZhfTfL2O+/RoN5iOazQefnHvNbmYjfy1xJ5H86hAaAyWlAFlknbPHgb
      m1l8/ISyKiers7Msru8gCvB0zbim4xz5zWmiB+NWQRAQAK1eh0o6OIRcIJXJkkzlUCk5zrz1
      M+r0aeb8u/t1tFcyfG+W4yd8LK3sYbcYMJpeTJ3WiJDJF4iFd1FENVrtcy4xShH/whwLqwEQ
      BBTAaDSi0Zk4dvI8Z0910VTtPigsk0pnSCZS6JQ0Y5NT7MZzCIKMSmdAK4ov6FN1aoFkKk8q
      lUKtee6YgoRcyJLJ5cgXioAWo3G/U5UMTox5P3sZPRazicZjPVw6d4rmqoO0YUFEREAlKWSy
      ORLpAlr1/jFFYd+qSa83QSHO1MgUwWgaQVBAp8eo2j+nOUHDj959j/zqLKF8EQEB4bl2P/0N
      BoOBbHyHqckpopkCigJut4Ph6TWq3E7s3hquv36V9tZWjM/9PLlYJJPJkM4VsZgNNHSc5cr5
      UzRUVaDTGlE984VQSKUypFIpdEYznqoGrl+9QktbA3qDDoNaAnsNP//RBRZGp8iTJ1sokMjI
      aDUqjIZXL4V8yuEvAhV1VDXUoVSXIRjNtDTWUunUUfA4WIvG8JaXozI6calNWE0teKUo/p04
      tio7lrIqlM1FLM4yJEGgrKIcSdlhZrSfiNPDlXNt9H15l5zaytlKJwCSuYbquhWON9Qhk8Rs
      0uIp6FHpFdyOInm1ivraOgbu38bgrqGyXEAngcdTjkoUABGn281uMIbb7Tlom4aa+m78Dx7x
      WDFw5dqfAmpjbpic08mF8108Cm+TKUqUWc2YVAKiKFLbUMnG+ibeZi+d53u413sXWWvhUk8V
      Y3MBBECUjHQ3u7nTO4zF4cFhkdGLIhZXBQa1hK7chaDU4qk3YvzyLn27OnouXjr4veXYhUWq
      jnUy2XsT0VxHp2N/XlFTXc3yVhhPmR1RMuCya4jnRSrsZvR6HaIo4Kooo9zpZORxL4b6Nipd
      ReImMwWzmu1wkiq7kca2SvxrMdxOKxqjEYtGIZnX43Hp8JR7cboT2IwuznR6+PzWXapaurFo
      i+gPemXkPOOP7+N2e7l0qpH+e/fo3dTRc76LVFx5YV63tTTOw5SLs5cusaPt5/M7vTR0nEEr
      JNBIAhUWNff6xmk+0YNPG6P/9mfovZ3Ue2BHpcGguBH1r/69tK/MIGOi/zOEyvMcq7T8Ver/
      NvjHevFrajnX6v2+m/IDRmbg5vu4en5Ore3rS+7MDTCVdPNad82radp3yCsLgEIhB6L64Gn9
      /VIs5JEFCbVUWgY5HIVCPocgafmm0yQXCxSVfR313xoli6QSR5rSI7DEkaYUACWONKUAKHGk
      eWEOUFKDlThqfMUjrESJo0RpCFTiSFMKgBJHmlIAlDjSHJJ8ofD8fFhhP1L2vxJ49mLg5wo9
      P394+r0gCKAo+/sdJMj9uXx9HU/b96e2fLd8Tf2Kwn5r9tvyH/lt+7sKX3+8v6SNJf5sDu0B
      xu//npG1KFvjd/k//+9focgZPvr174g9pwjzj97i8weD/OFO3wv7hlfHeTi28uzz4twc31a8
      lVob4MNHB9ZLcpbF+dXnFGFFHn7yKzZeLqj6j6MoDN76iMDLsnPzMX71//43Jv1hUGQe/OFj
      It+y+rXFBeJRP5/cGTr4Js2nH92i8K0cjbLc+u2HLxftlPizOVQQU1ZewWRwl0w0g1eTJZRK
      kzOYkLcX+GRoCsXk5djTJCmlyGjfPTzHzlFhkVicHGEoZKa4M0usaMJjVcHMY2YXdxF0dl47
      28zDLx9S0Nq4ePkiVp3E2PgYbY1VPByY4+wxH/MbIbbml/ltYJIzly4SDceI76zS/2gMk68J
      JZfi4Rd/xOL0cuNSNypRIL6zxsPHIxR0bi42m7k74qe6sYHU5iIx2cDFyxew6lSEVqfon1im
      IOq4evUKGxO9zG1EaOg6R2ZjhJ1wgbnBR5zwncTb7iUXD3Lv/mOKBjcdFQLz2ynOmXQUMyH6
      Hj9B9nlIbwVx17Ui7yyyGcnQcfoMGxPDhNIpfK3n8YlbDEz7KW/sRJcKk9gLMji0zfkLp1DH
      1xh8/IgKr43VjRC1rc0k1ubYjhW4cPUMe9s56ssllsNFxMgq8/4IzSdPvnDFntz7nL1UFoO7
      iVONdvr6BijoXJzpqubJwwEs1e2c7WzAP36f0Y0MKq2ZK+e7mBnsZTNa5OTZHtZGnhBRGbDK
      aXbjWY6dvYKwO8v4QoD6rnNog9NM78TRGD1cu9yDVvrb73oO7QGsrjISUT+xjMCZOgNj8+uY
      7ZWsrwfovnCFjclhnioSN6Z6mY8b8JjUgIS3uprGpkbWFxaob27Cv7pGaGsDU00XNdIWQ2OT
      TKxFMGilgzx6yAe3WQsuM/hogoklP4KoIiOYONfmZmJ6Cf9agHsP++i69DpiaJ1otoCvpZvk
      9jyZXBGQ2Vxfo63nCrGVaYI7fjZSOpTtCZZjEobUMndG1wFIhreQLXWcqxK4Nz5LMKHnQoeP
      ofE5lqanqG7roq6hjqa6/WzR4fv38Z66QoMhzEJUQ/OxDnx2A5LOQX1tDT6XxHq4SJUxQ9JU
      T1eNgdGxWeYX/XRfPM/s0BMWJkbJSHqUQp5N/zo2XxXVdW3YdWByl1FV04JHFSGQNWCVYxiq
      jtNg3GNiPc/mxiLbAT+5yCY3nyxT5rFw6+adF3TW/sUV2i9eJ7c5zscff0ZcsqJsj3F/fJnl
      rQQN1WUARLZWsdSdolIV5uHdWwwsx3GZZG7efsDSwjKV1WVMjM9jNJtIhgIMzAW58eZVRvvv
      EVidQ1/ZiTaxzE78rybIfqUcGgBaix0xsEjMUEbzsSYm7vfiqPQh51I86n1MVuaZ+FqjM5MI
      BynILy6kWdxe6ivd+wdRabCajdhtRtKYeOPqOVKbiyxu7Q8g2ludPHqwQOPxcqYWtnHZzdQ2
      t2DU6+DA7TArg1mvpbGpDq3eQm2lD83T3HVFQc5nGe7vJ5FTkAWRupY2NKKIp6Icb10rDeVP
      U7FV2Gxm7DYb6ViC2O4KQ1NrIIDOWUFDdRnq5x5uqayCzazDarWSSb1ciFzT0ITFZGB3eZTJ
      9T1ERcHhqaXMbUUtylS2n6GzzsbU6DDpw/INBYn65lbMOjVLEwOs7aZAUuNSpZlej+KyGTA4
      PLjLfHS21b0w7xA1JqxmPSaDmmiqQEWFh+qmdqocBny1jbht+7psQRSxWq2YLSZi4QiOMi9l
      vipaayux2Cup9ZVz7vVr2DRJhkamEXV6dHoTaqGAKJloaqxGo5GQ/04WTQ8NAEFlQk8Ke5kH
      tasJORyiukLHTmCbfDFPIZogJQOCgKfhBF2OFMOr+xZAOouNndX5ZxdaAMgnePDFx9waj9BZ
      b2PoUT9RWYvbti9S0Za3EA+FOdlajiyYsOjEZxdYEAQQoLPBx0d/+JA7g/M8y7x9dhcohLa2
      yBQK5OMJ0kUZAahpbmN3foz+oTmsVtNB2RwD927xqy8mOdnkZDMYoVDIkU6kD+YqIjaTxPzS
      voSyo6ue2x9+yOdPVjjWXPncSRKw6BUWV3YQEMjFQ+zGsuQzGZK55wNFILO7ytDEEhaXD40K
      RKONXHCOcFoB9OiVIGuhNAiQiOwSSWbJ5/MkEhkqqyz4IxoqqurwyDsMPOolI1oQ95sAQCEd
      4I+/+S2rCRM3LncxNzrEwMQadqv+hUmyUsxz/9P3eTAV5MLV1yluz/KobxDJat8voJJYmxxi
      eTNKTXM7LnmP3/zql2g8LUii+OyU/+0PfvZ5ZQYZYw8/Rqi+REfV9y+IWRt5wLqmjovtvu+7
      Kd8ZH/5/v+SNf/pHvsl/Z/KLf0Pp+GeOl8xxgK+TRH7HVDV3IRi+wW/nFeGsbkYvmr654N8Q
      J8+d5c95n4Lv2Hn4/p9BPxhKFkkljjSlleASR5pSAJQ40vz/VJ0DrPaTxa0AAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.Person Type' width='192'>
      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
      d7h9+zbVapUvvviCmZmZQ3uwks1muXr1Ktvb2wCkUimuXr3Kzs4Om5ub3L17l2bz2xqez3Jo
      N8F6vchKtMjJiaHDWNwfKdJkfjnM6VOT312Nv2IikQiJRIJiscgbb7yBw+Hgs88+o9Vq8cEH
      HxAOh8lms1y4cOGlaz3xHb148SIbGxtcunSJX/3qV0xNTdFut1FVla2tLd55551DMeL66KOP
      eP/997l69eq+ReJbb721n1R/+vRppqamntsd7tCUZZLN890e/ACS2jn4/wS6rn8tTHp7e5tE
      IsHu7i7VapWVlRVeeeWVQ635tNL3H/7hH8jn82xsbCDL8qEEZD9B1/WvLdN4InU3Tex2O81m
      k3A4/NzLfeYK8HRQtvAkEFsA0wRBFDENHRMBURD2U8D3B0TA16cbBoji/jiCDt8tuq5z7do1
      rFYrgUCA3t5enE4ni4uLaJpGLpdjcnKSkZGRQ6n3RJV5/vz5/ZOsVqvx+uuvc/fuXbq7uzl3
      7tyhBGXHYjFmZ2c5duwYmUyGvr6+/XDseDxOuVzmrbfeeu6rzTMnQG5ngU+nw/h8DsRmjZYh
      IpsVRN8EP7n8Kv/+f/8PDk8fPb0+ypUaVofC4nwEp8UgOHIUt9ykUqtjscisR8v09ffxs3c7
      7s0dfpgcGJQ9eepVrFqBZKmOKkuIdi+XXz+NKEBgYITj/Q6WQkmcTjt62+S11y9x5vQUheQO
      8bLB5XMnSWfzXHjrf6AKhzcEr0OHw+bAfIDN5TlOnTlHTzlFsb0XlC1Le5exfGIXu+d1/vGd
      MRbWdxmfPEa7ZaFVKnFkbIrBgIPppV3OnzuH5FRQ+vu/503q0OHP55kmUC2fpKDb6e8+eOD2
      xuY6E+OHM6qoQ4e/NB0xXIcfNftNoE5SfIcfI8/cBCe2FtnJlPj4V/9JsZTnwdz6/nsPZmaY
      mflKuLazPEe+xZ9tjViOr7EaL3/DGrHNzMzsS2/IwtzcM2K4L7+4RrWps/Zojm9zqDGaFZLJ
      KEvrEUBnbm7hW2vuzM+Qef7Oxw4/IJ65CXa6XSxvr4OosLa6gWJz8MX1G5iyDclsotey3L6v
      cun1k2yuLNLajdLCjt9t4VY6g9vjx2JUacpurlw8T2RzFdmskBF60MILLOWWyYwdQRVM1pfL
      e2K4nU2iyRTv/+QnKI0Mt2ZWEVUnxZ0Fuo6MY5om/r4xTgx38dF/f4rqdDPY27UnhvN5Wd+K
      Uy+mGTx6Ej2zxdx2ArfDQThR4IIMy4tzRHNRWqIXOy3qbRGlmaGkyYyPDLCbzDE51EsoliDf
      dHJsxMvc7COi4XW8wX5ajTqi6sDv9iHSoFErU6nUEQ2BsaNQTazzu/sheoN+lHaVhi5iMavU
      LH28d/E0nV6QHy4HiOH8JHa2mDhxko2NbfxeF4qs7Ivh4qEVTNXNE2tEj9vBudfO0qzX8feP
      0W03kKwuisk4NU2n12vhfqhKdvE6in+QsxcuYTYqlPNZcPh5ZWqM7oEJRvs8NB6L4SyKhUw2
      i7tvBKNaQJYlyo/FcE5fHxN9blLFOrLQJpXOMfnqeUaGh3GqEqFQgvNvXqJaLjE0PIgqSfi7
      e3E67Zw9cwpZkSnlsphWP+eP91A17ViEJsl4AsnmJNjtR1Is9Pb2Y/f4OTV+BFm2kM0V0FtF
      Kg2DcDiESJtiuQGAqbcZnnoFrRglHEuhNevUNIFzr57qHPw/cJ65AgiKnS6fl76hYfq3wzgU
      A0038brdeDwuui79jHo9ickQ3T3dhLNVrBYZj8vB+vYK0tA4bptGM9iDKovYg0P0ujIIjmEm
      BrvJmCqyxwteiXajyGpIw9/lxWEXUSQBrVlHM8HrcuHzORjw9bGwGWP4SA8A6XgIURrCo0LV
      dOK2yngcVmSPjWpTZ/LYEA9u3SE4MIrW2mv4BAJuCrqJjEaj1cbjc+P1+lDtMk5dpGl10eXz
      0lKdVHIVQMbjsmCoTtqtBpoJbrebgMdCURrkmNwkka0xNurDIgKmwdrCDMcnJnG7M9R0hW6P
      iiJ1Dv8fOoc2Jlivl1iNFTgx/t2K4RZWdjh18of1GLae2SWquZno+8vq+5vNJp9++intdpt/
      /Md/pNVqMTMzw+bmJleuXGFpaYnJyUmOHTt2KPU+//xzKpUK586do7e3l2vXrtFutzl79iw3
      b97kwoULHDly5FBqra6usr29jcfj4dKlS6TTaX73u9/xi1/8ghs3bqDrOm+//TYOh+O5lnuI
      Yjj3d3vwA0jqD+7gB7B1H/mLH/ywp5cZHR0lGAxSrVax2Wy8+uqrHDlyhPHxcUZHRw9FlwN7
      YrRarcY777zD9vY2pmlSqVSQJIlMJsOJEycONXFoY2ODDz74gFKpBIDf76e/vx9d16nVavta
      p+el4zP4N4TL5SKXy1EsFqlUKjQaDR49esSZM2fY3d0lm80yNjZ2KLUEQUDXdeLxOHa7nUwm
      w3vvvYeqqnR3d+8/Vj+sviWbzUYqlcIwDKLRKPCV+vW9997DZrPhdrufe7n/H+xaF/0mzow1
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
