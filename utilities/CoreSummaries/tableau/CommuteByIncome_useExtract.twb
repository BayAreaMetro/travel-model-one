<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='CommuteByIncomeHousehold Extract' inline='true' name='CommuteByIncomeHousehold.tde' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CommuteByIncomeHousehold Extract' name='CommuteByIncomeHousehold.tdeleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='CommuteByIncomeHousehold.tde' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='CommuteByIncomeHousehold.tdeleaf' name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>res_COUNTY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[res_COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>res_COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>res_county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[res_county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>res_county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>res_SD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[res_SD]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>res_SD</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orig_taz</remote-name>
            <remote-type>5</remote-type>
            <local-name>[orig_taz]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>orig_taz</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1443</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_mode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tour_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>20</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>793</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totCost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[totCost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>totCost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>67876</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>67055</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parking_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[parking_cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>parking_cost</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>23683</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>80153</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>89541</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_fail</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost_fail</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_fail</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>time_fail</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>129</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Simulated Commuters' datatype='real' name='[Calculation_3060829135932889]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[freq]' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel distance' datatype='real' name='[Calculation_4410825184855996]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([distance]*[freq])/Sum([freq])' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel time' datatype='real' name='[Calculation_4740825184150011]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([freq]*[duration] )/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='Simplified Tour Mode' datatype='string' name='[Calculation_6900829131039739]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel cost ($2000)' datatype='real' name='[Calculation_7290825185129599]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.01*Sum([freq]*[totCost])/Sum([freq])' scope-isolation='false' />
      </column>
      <column aggregation='None' datatype='integer' name='[Freq (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[freq]' peg='0' size='1000' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='One-minute Duration Interval' datatype='integer' name='[duration (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[duration]' peg='0' size='1' />
      </column>
      <column datatype='real' name='[duration]' role='measure' type='quantitative' />
      <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Income Quartile' datatype='real' name='[incQ]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Less than $30k' />
          <alias key='2.0' value='$30k to $60k' />
          <alias key='3.0' value='$60k to $100k' />
          <alias key='4.0' value='More than $100k' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Orig Taz' datatype='real' name='[orig_taz]' role='dimension' type='ordinal' />
      <column caption='County of Residence' datatype='real' name='[res_COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
        <aliases>
          <alias key='1.0' value='San Francisco' />
          <alias key='2.0' value='San Mateo' />
          <alias key='3.0' value='Santa Clara' />
          <alias key='4.0' value='Alameda' />
          <alias key='5.0' value='Contra Costa' />
          <alias key='6.0' value='Solano' />
          <alias key='7.0' value='Napa' />
          <alias key='8.0' value='Sonoma' />
          <alias key='9.0' value='Marin' />
        </aliases>
      </column>
      <column datatype='string' name='[res_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[tour_mode]' role='dimension' type='ordinal' />
      <column-instance column='[incQ]' derivation='None' name='[none:incQ:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.457746' measure-ordering='alphabetic' measure-percentage='0.542253' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:incQ:ok]' palette='tableau-10' type='palette'>
            <map to='#4b574d'>
              <bucket>4.0</bucket>
            </map>
            <map to='#609f80'>
              <bucket>3.0</bucket>
            </map>
            <map to='#8d9876'>
              <bucket>1.0</bucket>
            </map>
            <map to='#cbb345'>
              <bucket>2.0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='CommuteByIncomeJob Extract' inline='true' name='CommuteByIncomeJob.tde' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CommuteByIncomeJob Extract' name='CommuteByIncomeJob.tdeleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='CommuteByIncomeJob.tde' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='CommuteByIncomeJob.tdeleaf' name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>dest_COUNTY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dest_COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dest_county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_SD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dest_SD]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_SD</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_taz</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dest_taz]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_taz</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1454</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_mode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tour_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>20</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[incQ_label]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>incQ_label</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1040</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totCost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[totCost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>totCost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>58142</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>58043</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parking_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[parking_cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>parking_cost</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2759</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>66512</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>75864</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_fail</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost_fail</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_fail</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>time_fail</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>129</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average one-way travel cost ($2000)' datatype='real' name='[Calculation_5280829140146715]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.01*Sum([freq]*[totCost])/Sum([freq])' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel time' datatype='real' name='[Calculation_5770829140308673]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([freq]*[duration] )/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='Simulated Commuters' datatype='real' name='[Calculation_6260829141119939]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[freq]' scope-isolation='false' />
      </column>
      <column caption='Average one-way travel distance' datatype='real' name='[Calculation_9140829140434765]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([distance]*[freq])/Sum([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='County of Employment' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Income Quartile' datatype='real' name='[incQ]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Less than $30k' />
          <alias key='2.0' value='$30k to $60k' />
          <alias key='3.0' value='$60k to $100k' />
          <alias key='4.0' value='More than $100k' />
        </aliases>
      </column>
      <column-instance column='[dest_county_name]' derivation='None' name='[none:dest_county_name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.247423' measure-ordering='alphabetic' measure-percentage='0.752577' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:dest_county_name:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;San Francisco&quot;</bucket>
            <bucket>&quot;San Mateo&quot;</bucket>
            <bucket>&quot;Santa Clara&quot;</bucket>
            <bucket>&quot;Alameda&quot;</bucket>
            <bucket>&quot;Contra Costa&quot;</bucket>
            <bucket>&quot;Solano&quot;</bucket>
            <bucket>&quot;Napa&quot;</bucket>
            <bucket>&quot;Sonoma&quot;</bucket>
            <bucket>&quot;Marin&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Indiv.Chart.Duration by Res'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Commute Duration by Household Income Category: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByIncomeHousehold Extract' name='CommuteByIncomeHousehold.tde' />
          </datasources>
          <datasource-dependencies datasource='CommuteByIncomeHousehold.tde'>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='None' caption='One-minute Duration Interval' datatype='integer' name='[duration (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[duration]' peg='0' size='1' />
            </column>
            <column datatype='real' name='[duration]' role='measure' type='quantitative' />
            <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Income Quartile' datatype='real' name='[incQ]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Less than $30k' />
                <alias key='2.0' value='$30k to $60k' />
                <alias key='3.0' value='$60k to $100k' />
                <alias key='4.0' value='More than $100k' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[duration (bin)]' derivation='None' name='[none:duration (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[duration]' derivation='None' name='[none:duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[incQ]' derivation='None' name='[none:incQ:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[CommuteByIncomeHousehold.tde].[none:duration:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>210.61000000000001</max>
          </filter>
          <slices>
            <column>[CommuteByIncomeHousehold.tde].[none:duration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[CommuteByIncomeHousehold.tde].[pcto:sum:freq:qk]' scope='rows' value='Share of all Commuters' />
            <format attr='subtitle' class='0' field='[CommuteByIncomeHousehold.tde].[pcto:sum:freq:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[CommuteByIncomeHousehold.tde].[pcto:sum:freq:qk]' scope='rows' value='true' />
            <format attr='height' field='[CommuteByIncomeHousehold.tde].[none:duration (bin):ok]' value='43' />
            <encoding attr='space' class='0' field='[CommuteByIncomeHousehold.tde].[pcto:sum:freq:qk]' field-type='quantitative' max='0.036721618359216904' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='6' />
            <format attr='cell-h' value='6' />
            <format attr='cell' value='6' />
            <format attr='cell-q' value='30' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='cols' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[CommuteByIncomeHousehold.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='font-family' field='[CommuteByIncomeHousehold.tde].[pcto:sum:freq:qk]' value='Arial Narrow' />
            <format attr='font-family' field='[CommuteByIncomeHousehold.tde].[none:duration (bin):ok]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[CommuteByIncomeHousehold.tde].[none:incQ:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='3330'>Duration Category (mins):&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='3330'>&lt;[CommuteByIncomeHousehold.tde].[none:duration (bin):ok]&gt;</run>
                <run indent='3330'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='3330'>Income Quartile:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='3330'>&lt;[CommuteByIncomeHousehold.tde].[none:incQ:ok]&gt;</run>
                <run indent='3330'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='14' indent='3330'>Share of Commutes:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='14' indent='3330'>&lt;[CommuteByIncomeHousehold.tde].[pcto:sum:freq:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#820000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[CommuteByIncomeHousehold.tde].[pcto:sum:freq:qk]</rows>
        <cols>[CommuteByIncomeHousehold.tde].[none:duration (bin):ok]</cols>
        <pages>
          <column>[CommuteByIncomeHousehold.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.by Employment'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Commute Characterstics by County of Employment: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByIncomeJob Extract' name='CommuteByIncomeJob.tde' />
          </datasources>
          <datasource-dependencies datasource='CommuteByIncomeJob.tde'>
            <column caption='Average one-way travel cost ($2000)' datatype='real' name='[Calculation_5280829140146715]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*Sum([freq]*[totCost])/Sum([freq])' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel time' datatype='real' name='[Calculation_5770829140308673]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([freq]*[duration] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='Simulated Commuters' datatype='real' name='[Calculation_6260829141119939]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[freq]' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel distance' datatype='real' name='[Calculation_9140829140434765]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[freq])/Sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='County of Employment' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column datatype='real' name='[duration]' role='measure' type='quantitative' />
            <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Income Quartile' datatype='real' name='[incQ]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Less than $30k' />
                <alias key='2.0' value='$30k to $60k' />
                <alias key='3.0' value='$60k to $100k' />
                <alias key='4.0' value='More than $100k' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_county_name]' derivation='None' name='[none:dest_county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ]' derivation='None' name='[none:incQ:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_6260829141119939]' derivation='Sum' name='[sum:Calculation_6260829141119939:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[totCost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5280829140146715]' derivation='User' name='[usr:Calculation_5280829140146715:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5770829140308673]' derivation='User' name='[usr:Calculation_5770829140308673:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9140829140434765]' derivation='User' name='[usr:Calculation_9140829140434765:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[CommuteByIncomeJob.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[CommuteByIncomeJob.tde].[usr:Calculation_5770829140308673:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[CommuteByIncomeJob.tde].[usr:Calculation_9140829140434765:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[CommuteByIncomeJob.tde].[usr:Calculation_5280829140146715:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[CommuteByIncomeJob.tde].[sum:Calculation_6260829141119939:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[CommuteByIncomeJob.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[CommuteByIncomeJob.tde].[usr:Calculation_5770829140308673:qk]&quot;</bucket>
              <bucket>&quot;[CommuteByIncomeJob.tde].[usr:Calculation_9140829140434765:qk]&quot;</bucket>
              <bucket>&quot;[CommuteByIncomeJob.tde].[usr:Calculation_5280829140146715:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[CommuteByIncomeJob.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[CommuteByIncomeJob.tde].[none:dest_county_name:nk]' value='37' />
            <format attr='text-format' field='[CommuteByIncomeJob.tde].[usr:Calculation_5770829140308673:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[CommuteByIncomeJob.tde].[usr:Calculation_5280829140146715:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
            <format attr='text-format' field='[CommuteByIncomeJob.tde].[usr:Calculation_9140829140434765:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='width' field='[CommuteByIncomeJob.tde].[none:incQ:ok]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[CommuteByIncomeJob.tde].[none:dest_county_name:nk]' value='104' />
            <format attr='height-header' value='28' />
            <format attr='height' field='[CommuteByIncomeJob.tde].[none:incQ:ok]' value='84' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[CommuteByIncomeJob.tde].[none:dest_county_name:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[CommuteByIncomeJob.tde].[none:incQ:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[CommuteByIncomeJob.tde].[:Measure Names]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[CommuteByIncomeJob.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[CommuteByIncomeJob.tde].[none:dest_county_name:nk]</rows>
        <cols>([CommuteByIncomeJob.tde].[:Measure Names] / [CommuteByIncomeJob.tde].[none:incQ:ok])</cols>
        <pages>
          <column>[CommuteByIncomeJob.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Table.by Residence'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Commute Characterstics by County of Residence: </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByIncomeHousehold Extract' name='CommuteByIncomeHousehold.tde' />
          </datasources>
          <datasource-dependencies datasource='CommuteByIncomeHousehold.tde'>
            <column caption='Simulated Commuters' datatype='real' name='[Calculation_3060829135932889]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[freq]' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel distance' datatype='real' name='[Calculation_4410825184855996]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[freq])/Sum([freq])' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel time' datatype='real' name='[Calculation_4740825184150011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([freq]*[duration] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='Average one-way travel cost ($2000)' datatype='real' name='[Calculation_7290825185129599]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*Sum([freq]*[totCost])/Sum([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column datatype='real' name='[duration]' role='measure' type='quantitative' />
            <column caption='Freq' datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Income Quartile' datatype='real' name='[incQ]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Less than $30k' />
                <alias key='2.0' value='$30k to $60k' />
                <alias key='3.0' value='$60k to $100k' />
                <alias key='4.0' value='More than $100k' />
              </aliases>
            </column>
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ]' derivation='None' name='[none:incQ:ok]' pivot='key' type='ordinal' />
            <column-instance column='[res_COUNTY]' derivation='None' name='[none:res_COUNTY:ok]' pivot='key' type='ordinal' />
            <column caption='County of Residence' datatype='real' name='[res_COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
              <aliases>
                <alias key='1.0' value='San Francisco' />
                <alias key='2.0' value='San Mateo' />
                <alias key='3.0' value='Santa Clara' />
                <alias key='4.0' value='Alameda' />
                <alias key='5.0' value='Contra Costa' />
                <alias key='6.0' value='Solano' />
                <alias key='7.0' value='Napa' />
                <alias key='8.0' value='Sonoma' />
                <alias key='9.0' value='Marin' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3060829135932889]' derivation='Sum' name='[sum:Calculation_3060829135932889:qk]' pivot='key' type='quantitative' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[totCost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4410825184855996]' derivation='User' name='[usr:Calculation_4410825184855996:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4740825184150011]' derivation='User' name='[usr:Calculation_4740825184150011:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7290825185129599]' derivation='User' name='[usr:Calculation_7290825185129599:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[CommuteByIncomeHousehold.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[CommuteByIncomeHousehold.tde].[usr:Calculation_4740825184150011:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[CommuteByIncomeHousehold.tde].[usr:Calculation_4410825184855996:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[CommuteByIncomeHousehold.tde].[usr:Calculation_7290825185129599:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[CommuteByIncomeHousehold.tde].[sum:Calculation_3060829135932889:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[CommuteByIncomeHousehold.tde].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[CommuteByIncomeHousehold.tde].[usr:Calculation_4740825184150011:qk]&quot;</bucket>
              <bucket>&quot;[CommuteByIncomeHousehold.tde].[usr:Calculation_4410825184855996:qk]&quot;</bucket>
              <bucket>&quot;[CommuteByIncomeHousehold.tde].[usr:Calculation_7290825185129599:qk]&quot;</bucket>
              <bucket>&quot;[CommuteByIncomeHousehold.tde].[sum:freq:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[CommuteByIncomeHousehold.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[CommuteByIncomeHousehold.tde].[none:res_COUNTY:ok]' value='42' />
            <format attr='text-format' field='[CommuteByIncomeHousehold.tde].[usr:Calculation_7290825185129599:qk]' value='C1033%' />
            <format attr='text-format' field='[CommuteByIncomeHousehold.tde].[usr:Calculation_4740825184150011:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[CommuteByIncomeHousehold.tde].[usr:Calculation_4410825184855996:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[CommuteByIncomeHousehold.tde].[none:incQ:ok]' value='72' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[CommuteByIncomeHousehold.tde].[none:incQ:ok]' value='68' />
            <format attr='width' field='[CommuteByIncomeHousehold.tde].[none:res_COUNTY:ok]' value='104' />
            <format attr='height-header' value='40' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[CommuteByIncomeHousehold.tde].[none:res_COUNTY:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[CommuteByIncomeHousehold.tde].[none:incQ:ok]' value='Arial Narrow' />
            <format attr='font-family' field='[CommuteByIncomeHousehold.tde].[:Measure Names]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[CommuteByIncomeHousehold.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[CommuteByIncomeHousehold.tde].[none:res_COUNTY:ok]</rows>
        <cols>([CommuteByIncomeHousehold.tde].[:Measure Names] / [CommuteByIncomeHousehold.tde].[none:incQ:ok])</cols>
        <pages>
          <column>[CommuteByIncomeHousehold.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='48'>
    <window class='worksheet' name='Indiv.Table.by Residence'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='102'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[CommuteByIncomeHousehold.tde].[none:Scenario:nk]</field>
            <field>[textscan.41876.773494374997].[none:Calculation_3230825183510611:nk]</field>
            <field>[textscan.41876.773494374997].[none:incQ:ok]</field>
            <field>[textscan.41876.773494374997].[none:res_COUNTY:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{0FFA42F5-0DA7-4857-BD94-1CF9C5EE5A85}' />
    </window>
    <window class='worksheet' name='Indiv.Table.by Employment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='101'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[CommuteByIncomeJob.tde].[none:COUNTY:ok]</field>
            <field>[CommuteByIncomeJob.tde].[none:Scenario:nk]</field>
            <field>[CommuteByIncomeJob.tde].[none:incQ:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{454DCB1A-6812-439F-AD90-EF308497DEC4}' />
    </window>
    <window class='worksheet' maximized='true' name='Indiv.Chart.Duration by Res'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[CommuteByIncomeHousehold.tde].[none:incQ:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='94'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;CG 07 Baseline&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[CommuteByIncomeHousehold.tde].[none:Scenario:nk]</field>
            <field>[CommuteByIncomeHousehold.tde].[none:duration:qk]</field>
            <field>[CommuteByIncomeHousehold.tde].[none:incQ:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{276C6991-D2E3-4749-8A46-C61EAE30187B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Indiv.Chart.Duration by Res' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.by Employment' width='192'>
      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
      R2t1oNfraWlpAo0OgxbCkRgmpxtzKc7EwirFShVRkrDUtVBZn+HUx6f4j7//P9Aazawt3Sae
      rWB3OvE0NZGNRNAa9ASX5xifvU2uWFGskvi9mJqaolAo0NvbSy6X4+WXX2Z1dZXNzU3i8Tg1
      NTW0t7ezsbGhSDxRFLl48SIdHR3yQzkwMMDa2hqrq6uUSiWee+45tFqtYn6k1WqV06dP8/LL
      LyMIAnv37sXj8RCNRllaWsLpdNLZ2Sn/rRKk02k+/vhjXn/9daLRqLzhaFt1urCwwD/6R/+I
      QCCgWMxP0tfXx4svvkhDQwO5XI5IJEKlcudZeli8e1ojSpKEf3EKf6LC888fpZreZHx6hYMv
      vERibQ5Pawcrm2k8hjzxig6hqmWgr5Wx4RE0Fge7+/fjshrIJUOMTd2mZ/8xmt0GJsdGsDbt
      pqfRysjNMZr7DuOSkqwmqhgKcUqSjtbdB2h2/+WhjhLWiNPT08RiMerr63G5XKyurnLkyBEy
      mQw2mw2v14tOp3tot/moCILA6Ogo+Xyerq4uCoUC6XSa5557jo2NDerq6piamqKlpYVdu3Yp
      NhzZnsfs3buXtbU1zGYzBw4cYHl5me7ubkZGRmhubqazs1ORmPF4nMnJSfR6PceOHcNqtbK6
      ukpraysbGxvY7Xbm5ubo6+uTzXqVtEYMh8MsLi5y6NAhBEGgUqkQi8UIhUJ0dnY+0AZe9QZV
      +dRRvUFVVJ4R1ARQ2dGoCaCyo/lL3qDPKoIgPNPtU3l0qtWqXMTis+Zz5Q36LLdP5dGRJEle
      r/+sUYdAKjsaNQFUdjT3TgBJIr2VIJnOctdLArFKKqPMG0sVlWeBeyZAYm2KP/jD7/KHv/d7
      LEc+oVHJhfnuj059Wm1TnHA4zJ/+6Z9SrVaRJIlLly7JJliCIHDixAnOnz+vmD2MJEl4vV5O
      nDgh1zd45513CIfDwJ3J4Llz55icnFQk3nbMGzducOXKFSRJ4tatW1y8eFFWvQaDQU6ePMnV
      q1cVi1mpVDh9+rTsDXrt2rW7VK8zMzOcPXuWqakpxWJ+kuXlZU6ePCkff1sFe/r0aS5evPjA
      z97TG1QUqhRLZZob6ylsbfL7/98PCWclfunvfBOQGDr5Z5wcvs3rP/9tlm6cZCuV48hbv0xx
      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
      dEl8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Indiv.Table.by Residence' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
