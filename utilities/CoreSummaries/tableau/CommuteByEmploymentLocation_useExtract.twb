<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='CommuteByEmploymentLocation Extract' inline='true' name='CommuteByEmploymentLocation.tde' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CommuteByEmploymentLocation Extract' name='CommuteByEmploymentLocation.tdeleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='CommuteByEmploymentLocation.tde' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='CommuteByEmploymentLocation.tdeleaf' name='Extract (Extract.Extract)' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>dest_COUNTY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dest_COUNTY]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_COUNTY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dest_county_name]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_SD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dest_SD]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>dest_SD</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>34</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_mode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tour_mode]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>tour_mode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>20</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>768</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totCost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[totCost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>totCost</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1039</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1039</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parking_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[parking_cost]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>parking_cost</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>71</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1184</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_fail</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_fail]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>cost_fail</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>src</remote-name>
            <remote-type>129</remote-type>
            <local-name>[src]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>src</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Extract (Extract.Extract)]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Commute Out-of-Pocket Cost' datatype='real' name='[Calculation_0520829125555187]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.01*Sum([Calculation_3260829125748748]*[freq])/Sum([freq])' scope-isolation='false' />
      </column>
      <column caption='Out-of-pocket cost' datatype='real' name='[Calculation_3260829125748748]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='2*[cost]+[parking_cost]' scope-isolation='false' />
      </column>
      <column caption='Drive Alone Mode Share' datatype='real' name='[Calculation_3380922165907243]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([freq]*IIF([Calculation_6150829121551210]=&apos;Drive alone&apos;,1,0))/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='Tour Travel Mode' datatype='string' name='[Calculation_6150829121551210]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSEIF ([tour_mode]&gt;=19) THEN&#13;&#10;  &apos;Taxi/TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average One-way Commute Distance' datatype='real' name='[Calculation_6430829125408368]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([distance]*[freq] )/(Sum([freq]))' scope-isolation='false' />
      </column>
      <column caption='Transit Mode Share' datatype='real' name='[Calculation_6710922170841129]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([freq]*IIF([Calculation_6150829121551210]=&apos;Transit&apos;,1,0))/SUM([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[dest_COUNTY]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Downtown San Francisco' />
          <alias key='11.0' value='Downtown San Jose' />
          <alias key='18.0' value='Downtown Oakland' />
        </aliases>
      </column>
      <column caption='County' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[tour_mode]' role='dimension' type='ordinal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.378109' measure-ordering='alphabetic' measure-percentage='0.621891' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Scenario:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;CG 07 Baseline&quot;</bucket>
            </map>
            <map to='#4b574d'>
              <bucket>&quot;Year 2020, Scenario 2 (v 3)&quot;</bucket>
            </map>
            <map to='#5e8c6a'>
              <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
            </map>
            <map to='#609f80'>
              <bucket>&quot;Year 2020, Scenario 1 (v 3)&quot;</bucket>
            </map>
            <map to='#88a65e'>
              <bucket>&quot;Year 2015 (v 0.4), Disallow Drive Access at Select Stations&quot;</bucket>
            </map>
            <map to='#8c2318'>
              <bucket>&quot;Year 2015 (v 0.4), Additional $8.00 Fee at Select Stations&quot;</bucket>
            </map>
            <map to='#8d9876'>
              <bucket>&quot;Year 2020, No Project (v 3)&quot;</bucket>
            </map>
            <map to='#af420a'>
              <bucket>&quot;Year 2020, Scenario 3 (v 3)&quot;</bucket>
            </map>
            <map to='#cbb345'>
              <bucket>&quot;Year 2020, Plan Bay Area&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CG 07 ShortTrips &quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Across.Chart.Mode Shares'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Commute Drive Alone and Transit Mode Share to Regional Job Centers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByEmploymentLocation Extract' name='CommuteByEmploymentLocation.tde' />
          </datasources>
          <datasource-dependencies datasource='CommuteByEmploymentLocation.tde'>
            <column caption='Drive Alone Mode Share' datatype='real' name='[Calculation_3380922165907243]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([freq]*IIF([Calculation_6150829121551210]=&apos;Drive alone&apos;,1,0))/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Travel Mode' datatype='string' name='[Calculation_6150829121551210]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSEIF ([tour_mode]&gt;=19) THEN&#13;&#10;  &apos;Taxi/TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Mode Share' datatype='real' name='[Calculation_6710922170841129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([freq]*IIF([Calculation_6150829121551210]=&apos;Transit&apos;,1,0))/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Downtown San Francisco' />
                <alias key='11.0' value='Downtown San Jose' />
                <alias key='18.0' value='Downtown Oakland' />
              </aliases>
            </column>
            <column datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_SD]' derivation='None' name='[none:dest_SD:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[tour_mode]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_3380922165907243]' derivation='User' name='[usr:Calculation_3380922165907243:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6710922170841129]' derivation='User' name='[usr:Calculation_6710922170841129:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:dest_SD:ok]' member='1.0' />
              <groupfilter function='member' level='[none:dest_SD:ok]' member='11.0' />
              <groupfilter function='member' level='[none:dest_SD:ok]' member='18.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[CommuteByEmploymentLocation.tde].[none:Scenario:nk]' value='78' />
            <format attr='text-format' field='[CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]' value='p0.0%' />
            <format attr='text-format' field='[CommuteByEmploymentLocation.tde].[usr:Calculation_6710922170841129:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[CommuteByEmploymentLocation.tde].[none:Scenario:nk]' value='false' />
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]' value='Arial Narrow' />
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[CommuteByEmploymentLocation.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='16'>&lt;[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='16'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[CommuteByEmploymentLocation.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='16'>&#10;Drive Alone Mode Share:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='16'>&#10;Transit Mode Share:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[CommuteByEmploymentLocation.tde].[usr:Calculation_6710922170841129:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[CommuteByEmploymentLocation.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Arial Narrow' fontsize='12'>&lt;[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='12'>Scenario:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='12'>&lt;[CommuteByEmploymentLocation.tde].[none:Scenario:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='12'>Drive Alone Mode Share:&#9;</run>
                <run bold='true' fontname='Arial Narrow' fontsize='12'>&lt;[CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial Narrow' fontsize='12'>Transit Mode Share:&#9;</run>
                <run bold='true' fontcolor='#ff0000' fontname='Arial Narrow' fontsize='12'>&lt;!Missing Field!&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[CommuteByEmploymentLocation.tde].[usr:Calculation_6710922170841129:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[CommuteByEmploymentLocation.tde].[none:Scenario:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='16'>&lt;[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='16'>&#10;Scenario:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[CommuteByEmploymentLocation.tde].[none:Scenario:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='16'>&#10;Drive Alone Mode Share:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='16'>&#10;Transit Mode Share:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[CommuteByEmploymentLocation.tde].[usr:Calculation_6710922170841129:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk] + [CommuteByEmploymentLocation.tde].[usr:Calculation_6710922170841129:qk])</rows>
        <cols>([CommuteByEmploymentLocation.tde].[none:dest_SD:ok] / [CommuteByEmploymentLocation.tde].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Across.Mode Shares'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Commute Drive Alone and Transit Mode Share to Regional Job Centers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByEmploymentLocation Extract' name='CommuteByEmploymentLocation.tde' />
          </datasources>
          <datasource-dependencies datasource='CommuteByEmploymentLocation.tde'>
            <column caption='Drive Alone Mode Share' datatype='real' name='[Calculation_3380922165907243]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([freq]*IIF([Calculation_6150829121551210]=&apos;Drive alone&apos;,1,0))/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Tour Travel Mode' datatype='string' name='[Calculation_6150829121551210]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSEIF ([tour_mode]&gt;=19) THEN&#13;&#10;  &apos;Taxi/TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Transit Mode Share' datatype='real' name='[Calculation_6710922170841129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([freq]*IIF([Calculation_6150829121551210]=&apos;Transit&apos;,1,0))/SUM([freq])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Downtown San Francisco' />
                <alias key='11.0' value='Downtown San Jose' />
                <alias key='18.0' value='Downtown Oakland' />
              </aliases>
            </column>
            <column datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_SD]' derivation='None' name='[none:dest_SD:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[tour_mode]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_3380922165907243]' derivation='User' name='[usr:Calculation_3380922165907243:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6710922170841129]' derivation='User' name='[usr:Calculation_6710922170841129:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[CommuteByEmploymentLocation.tde].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[CommuteByEmploymentLocation.tde].[usr:Calculation_6710922170841129:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:dest_SD:ok]' member='1.0' />
              <groupfilter function='member' level='[none:dest_SD:ok]' member='11.0' />
              <groupfilter function='member' level='[none:dest_SD:ok]' member='18.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]</column>
            <column>[CommuteByEmploymentLocation.tde].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='134' />
            <format attr='height' field='[CommuteByEmploymentLocation.tde].[none:Scenario:nk]' value='41' />
            <format attr='text-format' field='[CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]' value='p0.0%' />
            <format attr='text-format' field='[CommuteByEmploymentLocation.tde].[usr:Calculation_6710922170841129:qk]' value='p0.0%' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[CommuteByEmploymentLocation.tde].[none:Scenario:nk]' value='360' />
            <format attr='height' field='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='64' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[none:Scenario:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Calibri' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[CommuteByEmploymentLocation.tde].[usr:Calculation_3380922165907243:qk]' />
              <text column='[CommuteByEmploymentLocation.tde].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([CommuteByEmploymentLocation.tde].[:Measure Names] / [CommuteByEmploymentLocation.tde].[none:Scenario:nk])</rows>
        <cols>[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Indiv.Cost'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average Round-trip Out-of-Pocket Cost plus Parking Cost (in year 2000 dollars) by Employment Location and Travel Mode:  </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByEmploymentLocation Extract' name='CommuteByEmploymentLocation.tde' />
          </datasources>
          <datasource-dependencies datasource='CommuteByEmploymentLocation.tde'>
            <column caption='Average Commute Out-of-Pocket Cost' datatype='real' name='[Calculation_0520829125555187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0.01*Sum([Calculation_3260829125748748]*[freq])/Sum([freq])' scope-isolation='false' />
            </column>
            <column caption='Out-of-pocket cost' datatype='real' name='[Calculation_3260829125748748]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='2*[cost]+[parking_cost]' scope-isolation='false' />
            </column>
            <column caption='Tour Travel Mode' datatype='string' name='[Calculation_6150829121551210]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSEIF ([tour_mode]&gt;=19) THEN&#13;&#10;  &apos;Taxi/TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Downtown San Francisco' />
                <alias key='11.0' value='Downtown San Jose' />
                <alias key='18.0' value='Downtown Oakland' />
              </aliases>
            </column>
            <column caption='County' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6150829121551210]' derivation='None' name='[none:Calculation_6150829121551210:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_SD]' derivation='None' name='[none:dest_SD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dest_county_name]' derivation='None' name='[none:dest_county_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[parking_cost]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[tour_mode]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_0520829125555187]' derivation='User' name='[usr:Calculation_0520829125555187:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6150829121551210:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Carpool toll (2 occupants)&quot;' />
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Drive alone toll&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Drive alone&quot;</bucket>
              <bucket>&quot;Carpool (2 occupants)&quot;</bucket>
              <bucket>&quot;Carpool (3+ occupants)&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bike&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <natural-sort column='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' direction='ASC' />
          <manual-sort column='[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='85' />
            <format attr='height' field='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='21' />
            <format attr='text-format' field='[CommuteByEmploymentLocation.tde].[usr:Calculation_0520829125555187:qk]' value='C1033%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='40' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-family' scope='rows' value='Calibri' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='Arial Narrow' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[CommuteByEmploymentLocation.tde].[usr:Calculation_0520829125555187:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([CommuteByEmploymentLocation.tde].[none:dest_county_name:nk] / [CommuteByEmploymentLocation.tde].[none:dest_SD:ok])</rows>
        <cols total='true'>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</cols>
        <pages>
          <column>[CommuteByEmploymentLocation.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Distance'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Average One-way Commute Tour Distance by Employment Location and Travel Mode:  </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByEmploymentLocation Extract' name='CommuteByEmploymentLocation.tde' />
          </datasources>
          <datasource-dependencies datasource='CommuteByEmploymentLocation.tde'>
            <column caption='Tour Travel Mode' datatype='string' name='[Calculation_6150829121551210]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSEIF ([tour_mode]&gt;=19) THEN&#13;&#10;  &apos;Taxi/TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Average One-way Commute Distance' datatype='real' name='[Calculation_6430829125408368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([distance]*[freq] )/(Sum([freq]))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Downtown San Francisco' />
                <alias key='11.0' value='Downtown San Jose' />
                <alias key='18.0' value='Downtown Oakland' />
              </aliases>
            </column>
            <column caption='County' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[distance]' role='measure' type='quantitative' />
            <column datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6150829121551210]' derivation='None' name='[none:Calculation_6150829121551210:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_SD]' derivation='None' name='[none:dest_SD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dest_county_name]' derivation='None' name='[none:dest_county_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' datatype='real' name='[tour_mode]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_6430829125408368]' derivation='User' name='[usr:Calculation_6430829125408368:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6150829121551210:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Carpool toll (2 occupants)&quot;' />
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Drive alone toll&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Drive alone&quot;</bucket>
              <bucket>&quot;Carpool (2 occupants)&quot;</bucket>
              <bucket>&quot;Carpool (3+ occupants)&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bike&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='91' />
            <format attr='height' field='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='22' />
            <format attr='text-format' field='[CommuteByEmploymentLocation.tde].[usr:Calculation_6430829125408368:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='40' />
            <format attr='width' field='[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' value='104' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' value='Arial Narrow' />
            <format attr='font-size' field='[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' value='11' />
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='Arial Narrow' />
            <format attr='font-size' field='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='11' />
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='Arial Narrow' />
            <format attr='font-size' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[CommuteByEmploymentLocation.tde].[usr:Calculation_6430829125408368:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([CommuteByEmploymentLocation.tde].[none:dest_county_name:nk] / [CommuteByEmploymentLocation.tde].[none:dest_SD:ok])</rows>
        <cols total='true'>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</cols>
        <pages>
          <column>[CommuteByEmploymentLocation.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Commute Tours (round trips) by Employment Location and Travel Mode:  </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByEmploymentLocation Extract' name='CommuteByEmploymentLocation.tde' />
          </datasources>
          <datasource-dependencies datasource='CommuteByEmploymentLocation.tde'>
            <column caption='Tour Travel Mode' datatype='string' name='[Calculation_6150829121551210]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSEIF ([tour_mode]&gt;=19) THEN&#13;&#10;  &apos;Taxi/TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Downtown San Francisco' />
                <alias key='11.0' value='Downtown San Jose' />
                <alias key='18.0' value='Downtown Oakland' />
              </aliases>
            </column>
            <column caption='County' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6150829121551210]' derivation='None' name='[none:Calculation_6150829121551210:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_SD]' derivation='None' name='[none:dest_SD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dest_county_name]' derivation='None' name='[none:dest_county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[tour_mode]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6150829121551210:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Carpool toll (2 occupants)&quot;' />
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Drive alone toll&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Drive alone&quot;</bucket>
              <bucket>&quot;Carpool (2 occupants)&quot;</bucket>
              <bucket>&quot;Carpool (3+ occupants)&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bike&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='81' />
            <format attr='height' field='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='22' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='56' />
            <format attr='width' field='[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' value='100' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='Arial Narrow' />
            <format attr='font-size' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[CommuteByEmploymentLocation.tde].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([CommuteByEmploymentLocation.tde].[none:dest_county_name:nk] / [CommuteByEmploymentLocation.tde].[none:dest_SD:ok])</rows>
        <cols total='true'>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</cols>
        <pages>
          <column>[CommuteByEmploymentLocation.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Indiv.Mode Shares'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Commute Tours (round trips) Travel Mode Shares by Employment Location:  </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&lt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Page Name</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CommuteByEmploymentLocation Extract' name='CommuteByEmploymentLocation.tde' />
          </datasources>
          <datasource-dependencies datasource='CommuteByEmploymentLocation.tde'>
            <column caption='Tour Travel Mode' datatype='string' name='[Calculation_6150829121551210]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [tour_mode]==1 THEN&#13;&#10;  &apos;Drive alone&apos;&#13;&#10;ELSEIF [tour_mode]==2 THEN&#13;&#10;  &apos;Drive alone toll&apos;&#13;&#10;ELSEIF [tour_mode]==3 THEN&#13;&#10;  &apos;Carpool (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==4 THEN&#13;&#10;  &apos;Carpool toll (2 occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==5 THEN&#13;&#10;  &apos;Carpool (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==6 THEN&#13;&#10;  &apos;Carpool toll (3+ occupants)&apos;&#13;&#10;ELSEIF [tour_mode]==7 THEN&#13;&#10;  &apos;Walk&apos;&#13;&#10;ELSEIF [tour_mode]==8 THEN&#13;&#10;  &apos;Bike&apos;&#13;&#10;ELSEIF ([tour_mode]&gt;=19) THEN&#13;&#10;  &apos;Taxi/TNC&apos;&#13;&#10;ELSE&#13;&#10;  &apos;Transit&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Super district' datatype='real' name='[dest_SD]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Downtown San Francisco' />
                <alias key='11.0' value='Downtown San Jose' />
                <alias key='18.0' value='Downtown Oakland' />
              </aliases>
            </column>
            <column caption='County' datatype='string' name='[dest_county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6150829121551210]' derivation='None' name='[none:Calculation_6150829121551210:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_SD]' derivation='None' name='[none:dest_SD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dest_county_name]' derivation='None' name='[none:dest_county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' datatype='real' name='[tour_mode]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6150829121551210:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Carpool toll (2 occupants)&quot;' />
                <groupfilter function='member' level='[none:Calculation_6150829121551210:nk]' member='&quot;Drive alone toll&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Drive alone&quot;</bucket>
              <bucket>&quot;Carpool (2 occupants)&quot;</bucket>
              <bucket>&quot;Carpool (3+ occupants)&quot;</bucket>
              <bucket>&quot;Walk&quot;</bucket>
              <bucket>&quot;Bike&quot;</bucket>
              <bucket>&quot;Transit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Alameda&quot;</bucket>
              <bucket>&quot;Contra Costa&quot;</bucket>
              <bucket>&quot;Solano&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Sonoma&quot;</bucket>
              <bucket>&quot;Marin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='77' />
            <format attr='height' field='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='23' />
            <format attr='text-format' field='[CommuteByEmploymentLocation.tde].[pcto:sum:freq:qk]' value='p0.0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='40' />
            <format attr='width' field='[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' value='96' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial Narrow' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' value='Arial Narrow' />
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='Arial Narrow' />
            <format attr='font-size' field='[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]' value='11' />
            <format attr='font-size' field='[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]' value='11' />
            <format attr='font-family' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='Arial Narrow' />
            <format attr='font-size' field='[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[CommuteByEmploymentLocation.tde].[pcto:sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([CommuteByEmploymentLocation.tde].[none:dest_county_name:nk] / [CommuteByEmploymentLocation.tde].[none:dest_SD:ok])</rows>
        <cols total='true'>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</cols>
        <pages>
          <column>[CommuteByEmploymentLocation.tde].[none:Scenario:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Indiv.Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='106'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[CommuteByEmploymentLocation.tde].[none:COUNTY:ok]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:SD:ok]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:Scenario:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:src:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:tour_mode:ok]</field>
            <field>[textscan.41876.562641504628].[:Measure Names]</field>
            <field>[textscan.41876.562641504628].[none:COUNTY:ok]</field>
            <field>[textscan.41876.562641504628].[none:Calculation_4720825133305459:nk]</field>
            <field>[textscan.41876.562641504628].[none:SD:ok]</field>
            <field>[textscan.41876.562641504628].[none:tour_mode:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{84D6C2A1-4244-44A4-88E3-A7E04DE507F2}' />
    </window>
    <window class='worksheet' name='Indiv.Mode Shares'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='88'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Year 2015 (v 0.4), Baseline + Parking Fees&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[CommuteByEmploymentLocation.tde].[none:COUNTY:ok]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:SD:ok]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:Scenario:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:src:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:tour_mode:ok]</field>
            <field>[textscan.41876.562641504628].[:Measure Names]</field>
            <field>[textscan.41876.562641504628].[none:COUNTY:ok]</field>
            <field>[textscan.41876.562641504628].[none:Calculation_4720825133305459:nk]</field>
            <field>[textscan.41876.562641504628].[none:SD:ok]</field>
            <field>[textscan.41876.562641504628].[none:tour_mode:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{496EF1FD-C14C-4297-B189-99B2BE39FF6A}' />
    </window>
    <window class='worksheet' name='Indiv.Distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='124'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]</field>
                    <field>[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</field>
                  <field>[CommuteByEmploymentLocation.tde].[none:Scenario:nk]</field>
                  <field>[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]</field>
                  <field>[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]</field>
                  <field>[CommuteByEmploymentLocation.tde].[usr:Calculation_6430829125408368:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Drive alone&quot;</value>
                <value>&quot;CG 07 Baseline&quot;</value>
                <value>6.0</value>
                <value>&quot;San Mateo&quot;</value>
                <value>11.693128959518953</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[CommuteByEmploymentLocation.tde].[none:COUNTY:ok]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:SD:ok]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:Scenario:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:src:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:tour_mode:ok]</field>
            <field>[textscan.41876.562641504628].[:Measure Names]</field>
            <field>[textscan.41876.562641504628].[none:COUNTY:ok]</field>
            <field>[textscan.41876.562641504628].[none:Calculation_4720825133305459:nk]</field>
            <field>[textscan.41876.562641504628].[none:SD:ok]</field>
            <field>[textscan.41876.562641504628].[none:tour_mode:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{0651D712-CEB0-41F9-B12B-98F9B8CF7DA1}' />
    </window>
    <window class='worksheet' name='Indiv.Cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='120'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[CommuteByEmploymentLocation.tde].[none:COUNTY:ok]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:Calculation_6150829121551210:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:SD:ok]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:Scenario:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:county_name:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:dest_county_name:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:src:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:tour_mode:ok]</field>
            <field>[textscan.41876.562641504628].[:Measure Names]</field>
            <field>[textscan.41876.562641504628].[none:COUNTY:ok]</field>
            <field>[textscan.41876.562641504628].[none:Calculation_4720825133305459:nk]</field>
            <field>[textscan.41876.562641504628].[none:SD:ok]</field>
            <field>[textscan.41876.562641504628].[none:tour_mode:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{39A0B65B-4753-4667-B9B7-0AAB17E8F577}' />
    </window>
    <window class='worksheet' maximized='true' name='Across.Mode Shares' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='104'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[CommuteByEmploymentLocation.tde].[:Measure Names]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:Scenario:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:src:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{F1E08748-D0DB-4FAB-A7F9-2ECC716CE919}' />
    </window>
    <window class='worksheet' name='Across.Chart.Mode Shares' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[CommuteByEmploymentLocation.tde].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[CommuteByEmploymentLocation.tde].[:Measure Names]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:Scenario:nk]</field>
            <field>[CommuteByEmploymentLocation.tde].[none:dest_SD:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{BFE6C6B3-E630-49C6-9AAC-464CF080C3D3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Across.Chart.Mode Shares' width='192'>
      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
      1ob/D8WGDxTUWfohAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Across.Mode Shares' width='192'>
      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
      B0AW0/5/waXl7FhlYI4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Indiv.Cost' width='192'>
      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
      rcYnwBX+CEEQ0Ov1F0pHbnT8RsT8puzk1RzgCpcaDZsDNOpX7lWGKIpUCTiZJgAADqVJREFU
      q1WampoaEr9SqaDT6S5UqLYR7yzLMqVSCZPJ1PgiuJQ55ec/+xVlWeTZ4y95+PAJ2crlo0NL
      ksSLFy+Ynp5GEARFjHZvb4/Z2VlFRmZra4vl5WXy+TwLCwuqLahXKhUePXrE5uYm4XCYubk5
      pSMjSRKLi4sUi0Xcbjc7OzuqnOCiKLKwsMDMzAyZTIbnz58TCoWAmmDW8+fPSSaTLCws8PTp
      U9Xk+zc3N/nqq69qzQZVnlgHjBY7jnYTEhK5bIFKYp+j+MU6Fb4KKJVKRCIRxsfHlS9+pVKh
      q6uLTCZDNptFFEX8fj/pdJonT57Q09PD1taWKvu55wv4PT09rK6uYrPZFIWGg4MDvF4vR0dH
      lMtlPB6PKjHPGae3bt1SEnlnZwdAMbCIx+PcuXOHUqmksGPrwfmPyLvvvsvW1lbjE4D/k1Iv
      V2Q++uRTbB3X6Gq7fGzQ5uZmPvzwQ2ZmZpBlWdHBLJfLCvlMlmXeeecd0uk0kiRhNBpVu650
      d3crvmTvvfceyWQSrVZLqVTC7XYrQrlOp1M1XSCLxcIHH3zAs2fPlC+4JEmKGoUsy2QyGUKh
      EJ2dnaokAMAnn3yC2+3m7Oys8Qsx5UKavqEhkqdJKJwy9OZdOs3qvOj3CeVymbm5OZxOJ4Ig
      UCgUCAaDhMNhmpqaiEQipNNpSqUSvb29DA8Ps7q6yo0bN1TpyScSCRYXF3G5XErrc2JiAp/P
      x09+8hN2d3dxOBysra3x9ttvqxKzWCwyOzvL9evX6ezs5OjoiGvXrrG+vo7VaqVSqTA8PEw8
      HldNBVuSJGZnZ2lra2NiYuKKDv0qIZlMYrVaL7QI/SYSiYQq/f1XPWY6ncZisdTar430CLvK
      vSs0GleDsCtcavyZi5zM/tYyf5iaJvQXaMCbC8+I5dQphNInx8w8e8pBLINvfYnpGTfF6uUT
      B5VlmZ2dHdxuN7IsE4vFEEWRTCZDIBBQui6xWIzj42NkWSaXy5FMJlWLPzMzo6hRBAIBstks
      ULua7e3tUSwW2d7eVnx71Yjp8/lYXFxU4uTzeaB2QwgEAqTTaUKhkKrKEdFoVNEafSkBpFKS
      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
    </thumbnail>
    <thumbnail height='192' name='Indiv.Distance' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WZAd13nn+cvMezPvzbtU3dpQWAsbAZBYuIuUKFkSJVqiJblbdtvtjujo
      dnsmJibmbR7mbR7cD/Mw7ZiYnu7pnp6WPbbktmVtpmSSEiWIEkmAhAAQALGjsNSK2pe75r7N
      Q/kkCwKqAFLIwgWQvwhE1C3UrXPyVn55zvnO//w/KYqiiJSUhxT5XncgJeVekgZAykNNGgAp
      DzVpAKQ81KQBkPJQkwZAykNNGgApDzVpAKQ81KQBkPJQkwZAykNNGgApNxFFASfe+Qn/5Rvf
      ZKZhf6T3zlw7zaXrdQAunT3F0OBpvvHnf8VUzVy9Td/iJ3//N3zru69husFHavP8ifdYaPlL
      /T55inNHDvLN7/+UIIqYGB8nXEXsk/lILaU8FNj1CT4Ydfndzx1gcq7GhbffwiztoFdeYGLe
      JQgMIq2XF597hNd+/Aue/+JXMUdPcn4q4OnNEnPlfvZEOT44e41N60s8sauPM5cnWf+JnSu2
      OXb+CG73fp7I1ZlfnOf4mz9h8/5PUR39AC/SqDWa9G0/wJ4uj58fvczX/slXOfXW6/idO1Hr
      I5S2PUMhmGV4os6+7b3Yx44wPjXGj773Pb76R3/Mjg09t2w3HQFSbsI36+hdffQP7GHXhjxj
      1xc4efwYly4Ps2/vdmZaMjljnO+98hr7n32etw++zonBObZq85wZay79EnMBO1vi+U9+kqsj
      8zz56OZV22zW6/T2r2fX/qcohHVm5qucOPEBg+OL7N1UgMp2rp1+j4PvHOP5vf38wyvfZ1HZ
      QGvsFHOtpRHDnJtArfSxe+dWJMVnbrZKs2VQbxortpsGQJvhm/N8+1vf4vuvHsQJlsbu4XOn
      mTedVd/nNab5YHD8rvRB796KOXKU/+c//ydOnxvk4sgEYRiSzReolArMXb/C4GSDnVs2cOiX
      P6fcuwXZmePYpRn6OnNLv0TNowQeb/3D33JlusrcQn3VNgd27+f9N/6O//Sf/yuXrw1zfbaK
      HwSUOirktSxXzh7DjHL0FDO8efgkAzt2M3vtJJMNKGhLt3FW1/Ftkx9+//vUTYctuw7w+7//
      +zy+a2DFdqVUDt1eOItX+W8/GWRvd4t6YQdefQpV0Sn2lNm5dQsz800kax4708XTB3bh1Gf4
      8c8O8eS+bRwdCznQbTFuaOzf3MG5KyP079hP2V/get3nuWefInuHjzzHbFI3PXq6K9QW5kDR
      yGYksm6V7/7yPF976TN0FPMsLlYpV7oJHQPDiyjnFHxZI68q/PTVH/H48y9AEFDq6KKQV1dp
      MaJVr+KSpbOYY3GxRkbLIUtgjp3iV3NlvvDsHvLZiGrDoru7glGvEmXzZPDJ5orIgcmrPzvM
      yy++gOFGVDqKSJK06nWmAdBmOItX+ftD03z1iTw/PDTIvK2wtyNC6SkzN9uid8MmLp45Qz6r
      8od/8ifMnT/ED994i8079hFkVBbnqmzMuwRaFjvTRbNeJWzVKBc1PvmVf8n23vxv1L/Qd2mY
      Lp3l4m1/1jRaqDmdjPKbTTQ828AOs5T01QIIIKLZbFEqle74d6dToDZk+OJJvvfaIR7ZOUD/
      pq3oqsKmXXsZGxrlsd3bqPT0sWnzFnIZuD58hWrTwvc9yObAXOD6goGu5dn5yE5UTaWz0sXG
      jZvoKGq/cd/kjHrbm39h/CLXpprohSIZRebEkUO0vPBjt5nNFe7g5geQ0LM+J85cjr8zcv59
      RudXXgOkI0CbEXoWV66OoJYqbOkrs2gEaKFNttyFWa/S1dPN4vQEXrZEf3cHTqvG5FyVfD6P
      ohVQA4OGp9ClK4SZHKZpUciGLBgRAxv7btN6xIWjb/LGkct8/Q+/zjs/+i6VPS/Q643y/qjD
      C4+tp3PLTi5dG6IxNMicCV/73Zd4/Qc/YO9nvsL02TeZbulsLje4HmxAN6/TseM5DlQMmj2P
      8+zOdau2vjB+kb/5/hs8+8WvYVz9FcOtIi8+tZ5X3jjK117+LSbMAsHiFWTP4sKV67zw5d/l
      2tGf4lT20B9MMji1wK6Bjbz+7jBfeLLCcL3Av/7K4xw81+CfvfSJW7aZpkHbDDmbZ/ejj8av
      e1WApSE937OUyuvu3xT/v1bsZFuxc9lvKNGx/FVBB+CGH1kRl2Onx/nnX32Wn7z6Izp2/Rb7
      t1V46+en+MPf+RIXTx5BqvQzPTeHb2X4wjMbeO/4GbzIZ/DKKJGr8lhPRFgZ4Jn1e7lwaILL
      58/z3Ff2MTxXg9sEwIljJ3n56/+UX/z0IGq5l69+/nHe+emb/NEf/wuc8YvMLAZ4kxOokczL
      X/kCv3j3CFnHYXjwCmrF44VnHmNk0eXZTzyLZF9m6tpFbO3TNBeGVv687+RjSXlYUNm6LsNf
      fPtnHPjkCwwfeZU33j1DZ9bhv37z++QrHfz4lR9iuSHGwhiv/PwkvQWYqzkQOBQLRTRNo1As
      cfTwuzQti2KpgG04lDtvPy/fuWMz3/nr/0bfjr1k6iN88zs/YePWXv78P/4XZn2dC4dfY3zB
      gsDku999hb51PYxPzpMhhIxOuZxH1gpcOf4r5o0WOb1IaFvo5Y4V20ynQCkfA5O//MvX+Tf/
      5g/u6KcPH3ydx174El363ZlwvPKdv+XzX/sDOvXsbX/22geHsLr2sm9L1y3/Pw2AlI9BRBBE
      KHeY3QnDEEmWWT0heeeEYYgkSbdNcd7Jz8Yh6fs+prm6XiMl5UEjHQFSHmpuHsOigNe//Rf8
      7//u/+D82MIKb2vyf/7bf8uf/dl/ZLy6co5VcOrIIRZN92N1sDE3zKv/8FN+fvAg8y1v1Z+d
      GDrHXHP1nwFozI5y8M1f8ObbR1lJd3jkzTc49O67jM3UbvPbAmZm5m7b5lrgeR5RFOE4DrZt
      EwRLVxcEAbZtk+SzLggCgiAgDENs2yYMw7hPy18nQRiG+L4fX7u47iiKbvgcbsXNq5LIYXym
      yW+9+AV68z5//h/+DH3rMyjVK1yfXuSf/Q//MwOVEJ8s2/c8wtjxg/xopMnmClyZcvnUvl6O
      nRli9/Mv4V55h3Gvm8fW6/hnDvN/HzzCy1//Ay4c/jFS314erVj84vhVfv9f/ffs7C/f+uKC
      iJ17n2Cgy+XUyeOcsE1KXR0U1DLXRy6zddtmLpw7Tba0jiJ1st0WTrNGqdJJuVDh2rUrbNuy
      nktn3ifXu40vvfQijmlguQHbN/YyPXSBc5eH6K10cfLqJLt37ebTz+4HKcuWgQEKQZVv/u1B
      9mzbwNzcAj2dBUbn6zz62JPMjQyi9/YS1ub51VGPgZ27MWZG8bNF1MimZQU897nPU1aTT7YF
      QcDCwgK9vb1IkoRhGBQKBWRZplaroaoqqqre0bz5oxJFEfV6HU3T8H0fSZJwXZdyuUyz2SSb
      zaKqd7KR9fEwTRPXddE0jTAMMQyDrq4uDMMgDEMsy6JSqdzyvTf9ZSI0fvvlLzBy+hDvHD9L
      QJaxsVEajsyXPvUoY9NLoqZS9waeffIAge3wmd/+IpHn05gZZ75u8OmXf5upq2eZs3v4+hef
      w2g28EOZfDbk9Klj6Jue4XOPD/DB1UX+5Pc+zYlzV+/gMkOmRwbZ8fRncWpN3NplJhZspmsW
      nT397FyXQy31EJiL7H3uM5jVJo2ZC4zPWbQcj87+zawryzheCFqRpx7fx/XBk1xfMMjpCtdH
      xnnkwHO4raVRL4oifN8n8F0e2fcESuiRCW3GZxd4+lOfYeHKcTLr9/HkY9uxA5mKrjA/OYSd
      X8/z+7fSkso8urnIxPzarKsURUHTlnZ6M5ml55qqqkRRRBiGBEGA591+dPw4SJJEPp+P++E4
      DoqiAFAul4miCMuyEmkbIJ/PI0lSHAC+7wNLn4Poy0qj3y2mQB7H3n2H0TmT3g6N2VqDfE6j
      3NlJoVBEzciATKV3HVs2bUAvlihqCvPzc+QKeRQlR6lcppTroUOe5O9ee5uslkORIYgyDGzf
      TW3oCG/86hKPbS7wje+/zeOPbl/x4mQZrpw/xa9OXOW5Fz/H4LG3yJR70KIMTxzYiqL3kM/n
      yWRV9JxGNt/BmSPvUOjbgOJFPH+gn7C4gXw+TzarIkmQlQMunLuI1rkB2TNw7QBV18ipWVR1
      KbVWKFcY2LqVYl4jp2UwDBM/jMhpGmomQ65nC87EGX516iKKFBIqGmqxi2xrgnfeH0RzFzg/
      Wmd9l/4b/4HvhCAI4qmPbdvk83mCIMCyLBRFIQiC+Ka824gbXEw3stksQRDQaDSwbRvf9+Og
      TALLsnBdlyAIiKIIXddpNBp4nkc2m111+pUuglMeatpWCpHGZcpa0LYB4Pv+qqv3lJS7Qdtr
      gaIw4NrgeRYayS2iUh5e2j4AjOo0gVrm7KlT97orbU0YhtTrdcIwxHVdWq1WvCg0TZNms5nY
      tDKKIlqtFq7r4jgOzWYzVhXYtk2j0Uh0NLdtG9M08X2fZrOJbS85WbiuS7PZXDX71fYBUOze
      yIYySNrtTyClfHgzRlEU3/AiI5TkukpkmjRNQ1GUOOuTyWTiVGySbfu+j+d5SJIUB18Yhrdt
      u+0DwDOrvHfiCp94et+97kpbI8tyvMklyzLZbBbXdeOdWU3TkOVk/tySJMW/O4oiXNclm83e
      kI8XXyeBaDuXy8XX6fs+2WyWQqEQjwi3fG9ivbpLOKaBmlO5OjR6r7vS1gRBEO/Aiie+qqqx
      REHIFJIgiiI8z7shDw8fJjKiKIo36ZLAdV0kScLzPBzHoVgs4vt+vAtcKBRWfG/b7gOIDzQl
      JUnaNg2a1HCdkrKcth0BUlLWgrZ/zLrGIr/8+UHOD03c6660PSLrEUXRDVmf5RmhpBBtiKzL
      8vZ+/XUSbS/P+HyUtts+ACIpy+OP72Nhbv5ed6WtCYKAmZkZwjCk0WjEUmCRFq1Wq4m1HUUR
      i4uLmKaJZVk35N5Fv5LMArVaLWq1GpZl0Wg0qNWWznD4vh9/JivR9gGg6SU8s0a1urq35MOO
      oijkcku+nEKBKbIjuq4nuqYSbQCx7Fnk4g3DiP8vKXRdR5KkeM/BdZcOX2UymfgzWYm2D4Dq
      5BVODU7R0XHndncPI8vl0GITKgxDTNOMJdJJZdWWy6HFTSjLMs1mE1mWcRwnvimTwLZtHMch
      iqL4QdBsNvF9H8dxcJyVjYXbfhG8lGN2UTIqinz3TzM9KCyf50uSRBRF8cbY8u8ndSJspbbF
      a/F1Eogpzq+3LfoGK2cV2z4AUlKSpG33AXzfT3ThlJICbbwGuCGV5bvYTjLnWVMebto2AD4k
      4uKJw1waTdOgqxFFUZz6NE0z/hqInRKSbNu27ViL02q14tFbSLOTVIMut15ptVrxold8Jqst
      wNs+AKz6LC001HSlsioi/SeEafDhotC27USzMPDhlFV4E4mFqGmaKIqSqCuEOAMhBHAiACzL
      iv2CVqLtA6C+uECjVmV0avped6WtkWX5BisSIHZKEPsCSa2pJEkim/1HN41CgXw+j2mahGFI
      sVhMXNQo0r4i/brcCkbXdSzLWjEI2nYRLOjf9hiVvn4WmslYejwoCOmDOAMgboYgCOjq6sKy
      rMSsSZZvPjmOg+d55PN5bNuO04/CNygJxMgn+pLNZmNrGMuyYt+gW9G2adBUDp2yFtzgDp3k
      PO2jIg5xpKQkSTwCtOlAkJKSKPEiWGyTSxKc/dWb/NVff4e5prPs+8v/2bzy7R9Qqy3w/R/8
      PQ17qQhB4LYYvT67wns+3r/AaXH4nV9yaXjyrv7e9F/6T5KkWyyCA5PDxwb57Bc+TbNe48zb
      h8ht3I9iTDI5tcAXf/f36Mi5XDh1nL6t/Zw7d5EDj+/n9eOnGOjL8bNTC/yLl59gctHl2QPb
      +PHrB3nis19m96aejxWhZn0OJ8yzsf/jvf9hIQgC5ubm6O3txbKs2BFZURRarRa2bdPT04Mk
      JaMFWlxcjBebwpk6n88ThiFzc3N0dXXFmaK7TavVwvM8Ojs7aTQaAHR0dMR7AIVCYUV36pvT
      oIrOC88+wo9f+zHXpyYYHZvivSNHOX3qLJWczbnRJV15z7p1XDh7me6+biZHh5kcHmTajNix
      dTO/fOsd5kfO8oMfvM7WJ57gnZ+/xcfdBsloBTas7+LY0fc/5m94OJBlOT54XigUyGQyHz7l
      /lGhmSS6rhNFEfl8Hk3T4kAzDCPRA/FALHkWtigCEXCrqUFvtkf3TM5fHqO7UmBmfJgr4zP4
      YUCuo4stfd3xjp5W6aOxMEtPucD1kavUTQdZzTE9OkKx0k250seObX2cfPc91HLXx64P5ZhN
      Gi0TOZOcv/yDgLBz932fer2OoiixJQoQp0STQrQtvPozmQymacYp0iQ34kTCRLhQOI4Tt61p
      2qrXfcs0aKu+QLXpsK6/l4WZGWRNJytLFDQFT9Ep5iQWF1sQeciKQkaWqbcMisUyVqtJqZyn
      YYb095SZmpymsm49+ezHy+NHYcDs9DSl7j50LZkh9EFA7IaKvHsYhvETUNwASRWpWL4PIAJt
      uTFWEAQ3+BbdbcTehygAIvZBJGnJKkVV1VQOnZJyK9p2J/hBdoeu+RmM8N7sbOtyQCWTyswF
      bRsA8SmjKMIPAmRZQX5AToQ5QYR5j2JbViBS0kFf0PZiOKsxy+G33+LQ8bP3uittz9TYEIHv
      4zo2sxNjAAS+z+Dp9zn//nvYZnKSaCFdCYIAwzBu0OasloW5G4j1DxArUsX3l8vCb0XbB8Di
      1CjNIENPz61L3acsYRktzh47jOvazE1e5/LZkwAomQy7DjyNbZmJLULFoXghSpMkKb7pPc9L
      9CwCEJsBCP2/aDsMwzgbtRJtHwAoKnv2H2B+fORe96StyReK9KzbCMC6zQNksx9mfIxmY2mf
      IJ+MPYkkSXGuX5KkGzT4q2Vg7hYiuyW0bGIEkGX5tunXtl0DCPo2beP48VN09G+9111pa0yj
      SaO2wPTYCJlsFqNZZ3p8BNexCYOAHXufSKzt5dMcMcrIsoxhGHGVRlGxMQnEuQdd11FVFdd1
      MQwjTsWuVh2zbdOgD7IcetbN0AjuzbOnqAT0q+n5akHbjgBiG/9BJKtIrO5XlhyqnJw/z/1I
      244AKSlrQduOAILW4hSnL1xFLnTzyScfu9fdSXnAaPssULFrPY9t6yMk1QGtRhAEzM7OEgQB
      pmnGbtBRFFGr1VhcXEzUG7RarcYy7IWFhXhR3Gw2qVariYrhDMOgXq/HTtjNZhNYWhwL1+qV
      aPsAgIjzl0Z4fP/Oe92RtkYUxoMlefDyzR+xQZXk3F/TNMIwJJ/P39C+sElJ8ritaFsoQkXb
      qqpSKBRWdcNo/wAIHRypSDGTLtzuhOVLOiENliQJVVVXrZf7myJJUpwO9TyPXC6H4zh0dnai
      aVpiKdDlCIdo4QjteR6maVIsrlxit+3XAEQK+x9P5/63IwxDFEWJb/JsNksQBCiKEp/MSkoO
      DR/asgg7FjHlETUKkrZFEbUAdF2PRwFhl+44zortp1mglIeaG2xRVlssrDVrUdcqJaVtR4AH
      eSc4pX24eQ0Q+bz27b/i/PUaX/mjP2bflhvdGKzFcc5ed/nEgR3x9zyzyt9+61tMGzJfe/EZ
      JvxeXnr27mRtnOYc77z7Pt1b9vDUY9vuyu98UPF9P9a9iGOJyytGJrkQFVkmIYYTh/KFDkgc
      V0yCMAzjNZDrumSz2ViAJx6iK+mBbhEALtdnm3zm81+gL+/zjf/r36FvfQalepnr01V279rC
      sSGT+vBRTgw3+Z/+x/+O6uAp1j35Ml/ZpFGfH8M0q3zj3/8ZuYGnKJlXMDL9GLNX0TY9xb/+
      +osf6eI82ySTK9JqNj7ix/JwEQQBtVqNSqUS24V3dnbG/2cYBp2dnYkoM0X+XVVVMpkMjUaD
      rq4l+bqQQosUaRIIa/ZisUgURTSbTTo6OoiiiEajgaZpKxbqu9kVAo3ffvmLjJ17l3eOnSWU
      VMbHx2i6Gb78wl6kXDdPPf0snuNQX5jBtH2i+L1LX4V2C1/RGB8do+EqfOlzTyMpGcbHrn/k
      i7NMA61YJvKTtfe+31EUJc7yLLclEbYo4omcBJIkxdYk2Wz2BhNeWZbxfT9RSbS4XuEMLaTZ
      pmmSyWRWrRV8c68ij/ffO8TojMm6Sp65ehM9n6OjUqFYKFLu6ubqueNMT8+h6wW8MGTj7ieZ
      OvFj/vI7r+FGGbJSwNxig2IpR7mjghS6zNdMSvks/kdcceT0IkZtAU1fOZebsvSU9zwP13Xj
      HLjjOFiWRb1ej/P0SSBqEIh2RT8Mw4hTsUkuNZdfrziNZhgGqqquKoWGdBGc8pDT/jvBKSkJ
      0rYjQErKWtD2I0AU+gyeP0vdTBfBKXeftg+A6aGztKQC58+cu9dduW9otVrUarVYBRkEAYuL
      i2vStm3b1Gq12JPUNE1qtVriRfpgad1Yq9ViRYPrujf05Va0vRhO1XLMj01Qq6f7AHeKSCAI
      OcntvHHuJsLRT7QnTHPXon0hvGu1Wui6jqIo8cbcSrR9AOQKnWzZrFLIJacmfJAQFRKFO4Iw
      rvU8L96hTbJtz/PQdR3btslms/i+Tz6fjyXSSSKUoMIcS+xPrOZL1PZToFypE6u2wO7HUkn0
      nSJ2XFVVJYoienp6qFQqid78Al3X46IU4uYPgiBRObQgCAIsy6KjoyMedWzbplQqrfieNAuU
      8lDTtlMgMYdNSUmStg0AccYzJSVJ2jYABFEUMTb4AUrvLhaHzlD1VX7rk09/7JJLDzoi8yOO
      JgpJMpC4R6doPwzDuG3Rl7UwOvv1tn69L7ei7RfBoecwPTVJs9WiJeXoCS2qaX2HVXFdl0aj
      EZcOajabNJvNNRlRDcPANM04F29ZFqZprknbnufRbDbjSpGi7fvaFUJRc2zasC4ulpGRI7y1
      SWnflwinZlmW40Mosiyv2ZRSHEoRKszlTg1JI6TX4mkvZNKrbYS1fQAIlKyG35jnasOjJy0Y
      uSqO46CqamyLIs4CJJ0GFfsAmqbFdQHEqbS1mH4JB2pRGEM8+VeberVtGnS5HDoKQyJJgjAk
      BDK30Xg/7Kz0J10LU9zl8/C1bv9W13279cd9EQApKUnRtgHQpt1KecBo2zSoGLICz2ZyYppM
      oUx/7+oV5wPfJZKyZJTVh9ooDJidmUIrdtNZWnmL3mg1yRdKPCDFKVNuQdsGgKC5MMHoVIui
      NILhP0VX1iZf6oBIJgxcMoqM49h4oczU5ePktjxLJeOglzuQkPF9l4ws4zkWHlkqnSVmhy9w
      rSETtsZ55vknqS3UqVQ6aLUMcnqJQn5plX3m+HH2Pf8prJZBV6XM4sIind09GPVFtEIneq49
      Hatd18W2bQqFArIs02w2kSSJYrGY+DxcOFDkcjlUVcU0zdix4Xbnc39ThPJV2EGK4nmKoqzo
      D9r2AQAS3X39bOtbx7tv/ZLxngF8+xxlvcDFsxd5bN8eLl08Q0/fenLZCPnKB0xrJazWOTo7
      y5w+Pcjje3dw8ewpujZs5QsvfZlCZxfTJ9+l0LuFubFhLl0ZRAozDDUktvZ38tLnXohHmpNH
      36OQy3C2ZbJoBOwZ6GNoooqc0fjalz57Tz+ZlajX6zf4gLqum7gSUyBy8GIKKyTKa4Ft29i2
      HVugCHeI1c4i3DdpULtRw7At+rftRglAbl5HLvey6MCmge1s6SuRUQvgu2za8QhyJOPOXkPJ
      d2LJKpu2P0Jfh4YfhCwsLPDJL36VHqnGuaEpevu7adVbPLr/SeRw6cMaHx8DScL0InZu3YjW
      uZ5d/UUGBweR9U4e2bn13n4gqyDcoC3LIooiurq6Yplw0kRRRKlUis8glMvluC9JE4Yhuq5j
      mmZshWIYxoqeQNDGi2CBWZ/h6PELaKUyT+zfxan3T9K9+RF0ex6KJYywgGQtUMrJuH6E4SvU
      Zqfo374HqXodrbOEqawjbEygZSTWD+xC9hq8f/IcWkcvfXmf4elFOvQcev8j+I0Z9uzZzfkT
      7+FovWwsRVwem2Pbto0MXxtjYOdOJoeuUFy3lf27Bu71x3NLDMPA87xYiixu/FKplPjTWFix
      iDMA4kDKWkyBgiCg2WySzWaJoghd17EsC13X7780aErKWtC2a4DV3LxSUu4WbRsAoqxPSkqS
      tP0iOIoCRq6cZ6ZqcvXSGU6cPIebiuFWxfd9bNuOR9AwDNdkASzasiwrlmCLM8lrgbBoFNf6
      6325FW0fAKEfYNbnqNkBAzsexa9NY6czo1UxDCM+CC9uirUqfiKyPyLr43kerVZrTdoWvqTL
      HaklSbq/q0QqWZWO0tImxvTIBcKuzZRTLdyKCPGX+OMLefRaCeEURblBkqyq6pooQWEp/bu8
      GqYsy3EmaiXaPgAAsloeVfJ5/9R5sJtY6dLgtght/HLX5rXw5lkufRYjkXCuThpx+ku0Ldq8
      7+XQKSlJ0bYjwFptn6c83LTtCJCSsha07T7AcszGAp5SwpofpR4V2b11/b3uUsoDQttOgQSB
      a3HozTeYrLaYN0LGrl24111qe0RZJGEuVq/XqVariS+CoyjCsixqtRrNZhNY0gatlTO153nU
      6/W4Pdd1qVarqwrx2j4AFDXP3kcfQZKz7BnoZWpqkeTzCfc3zWYzLh0KrJkSVJIk8vn8DQX7
      hDBtLchms+Tz+fjwv6qqFAqFB0MOHfouF0dn2buhk2YaAauiKAqapsXlQ4U8ei1SkWLnV7hT
      r9UegGi71WpRLBZxXRff9zEMY1Vz3PsiADr7t7Khu0QlB7kte6i050GstqFYLN7gyJzL5WKf
      oKQJwzC+4cIwxHGc2CtoLRDSZ+GDJMvyqr5AaRYo5aGmbbNAy6uMpKQkRdsGQOoOnbIWtP0a
      IIpCrpw5yui8SeC2OHTkxL3uUtsjjkGK2e1anq2IouiGmmBCir0WM21hzRg7Cv5jX1Zru+0D
      IPQ9GvUqthdw7dJF7CCdFt2OZrMZLzrDMKTVamEYxpoEgXBmEG21Wq34nHDSCIUfP5kAAA+h
      SURBVCm0CD7TNHFdd1U5dtsHgJLV6O/rwbdrXLg8xszYaKoGvQ26rsdF8SRJQlGUNRsFROpT
      3PBRFJHL5dZkPZfJZNA0Ldb/C6Pc+9oeHUCSZdR8hX/6e/+E3bt2kE/PA6zI8hNYokicLMvI
      srwmRfIymQy+76MoCoZhIMsyrVaLbDb53LXY8JNlGcMw4iIZq3kitW0aNJVDp6wF98UIkJKS
      FPGY6Pv+mp0bvVPadHBKeYC45RQo9Byuzy6yZX0f03OL9K/rvf1vigImpubYuKH/rnfStQ18
      ScNYmGCuGbB793bSZUDK3eCWU6CZoVP8+//w59RNk5+8+RZWs8rw+BRmY5GxsTFmZmeZmqvi
      Wk1GxibwfY+J0Wt870dvYBs1hscmuVvP7tB3OPSzVxmbb3H56jjr1/Wk87ZVEIKwarWK67rx
      63q9viaZGMdxqNVq8ULcNE1qtdqapEF936der8dtideraYFumRY4f+Eanziwhctjc0DI2z99
      lSOnhvjMZ/ZxdnCShZZPpZhn54YipuWhFkqMTy8y13R57+DrvHPiAn/yv/xvbCn/5hclyRl2
      bB/ACn2q1VneO/I+L335RdT0xOQtETbotVotVmKKAnVrMaUUQed5Hqqqous6QRAk7gsKxBmv
      VqtFPp+n1WpRKpWo1+srOmPc9DCNvBYfnD7HlStXOXX6PIQB84tVXNvAC+C3Pvd5tj/2JL3F
      kGrdZPPW7aj4DOx6lJImM7dQxXdMXP/ufNiSrJDJKESRzGOPP8PGPDTT5NCqiLy3yP8v3wtI
      ElGXV0ivhZ5LFK9LGl3XyWazsT2KqFe2GjeNAK5t87nf+2OefnQL7x3/AC2/Gak1S6F3gI2b
      t9HV08OBjI5kaPT19nJ1bJYXXnyJ995+h30HnmSzbqN2b0KXXUC7KxdW6lqPquWpjg3jVTbQ
      1bYKpvYgCIJYEu37frwhtBb7AJqm4TgO+Xwe27ZRVXVNCnPAh/LrcrmMbdsUi0UMw6BQKKTu
      0Ckpt6Jtn6XLj/SlpCRF2wZA6g6dsha0bQAsZ2rkInQM0JoYZLIV8dnnn7rXXUp5QGj7lHrg
      Wly7cpl6o8XE3CJ6NsPaGH3fXwRBwNzcHEEQUK/X41y82AdotVqJTSmjKIpz/YZh0Gg0Yodm
      y7JoNpuJulKYphnvc8zPz8dteZ5Ho9GI08C3ou0DQFHzbNuykTAMML2IsDaLkUbATciyjKZp
      sTt0oVCID4M4joPv+4lOKcUBfN/3KZVKcVuiTkGSh+JFjl84YQvEBpjjOCumQ9s+AASKqlEp
      aDQ8UFMdxE2I00/iprdtG0mScF0XRVEStycR9QhkWcY0TRRFwbKsNWlbnH0Q2n/P8+647bZN
      gy6XQweeSyhniDwbN5Qp6mtT8/Z+IoqieNNL6OBlWY6ffOJ1Evl40TZ8uPmmKEo8GonXSe0F
      iE0vWZZvqItwJ23fFwGQkpIUbRsAd7KNnZLym9K2AbCcwPcIkTGbNfxIprNSQUnFcCl3gbZf
      BEeBx7sH/4Gr000W5qZ57Yev4qQbxDcRRVHsiOA4TmyQG0URpmliGEZiI6pYdIsyTMvbCoKA
      RqORaBrU8zxs2yYMQxqNRpxxEp/JfW2LEkWwfsM6JFlhfU+Rgb3PoKdZoJsQN56wQclkMnGJ
      UFE6NElzXNu243pgYg8AWJNzCCLrE0URuq7H1uxhGGKa5v1dJlXOZMlrS6auw5eu8si+3fe4
      R+2Joiix5FiSpDj9J8sy+Xw+0Tz88vx7NpuNtf9iHafr+g1BcbcRbQs3iFKpFGeFbqeAbfsA
      AMiXKhRzGcJSH/2F9PF/K4R2ynEcstkslmXFo4Dv+2ialpgmX2y2ua6L67rxNEwcTDEMI94o
      SwJhxCWmYaI28fLPZCXui0VwSkpStK0YTizgUlKSpG0DIJVDp6wFbb8GsJvzHH77MMdOnsEN
      Vh8RmrU5DPv2QRMGLudPn+D9U2dx/H/MEEQhQ9dGABi5NsRKTV0bGvoo3U9pc9p2BBA4Zove
      zbvoVRc4PzgGxjSVjZtQydFszNHZWWJqYhxXKuAtXCa36WloztCzaROaolOrzVEu6cxNjOBp
      PTy1fw9TQ5fIdA3wSLbB6QtX0IMGYa6TxZkpwihg+vo4GSVgfKbB5g3djI1NsHX3XuqTQ5y6
      OsGO7dvv9cdyE2EYUq1WqVQqcUqyVCrF4jTXdens7ExMC9RoNGJVpmVZ6LqOqqrxwnR58bq7
      jWmacUkoIcQTxfEcxyEMQzo6Om753rYfAQR6R4Wps4fJbdzL8KXLTI6f4fC773NteIKxiWky
      7gKS3oM9P0LX1t1cuzDI+MgZ3jp8ksmJaUYn5/CbU5huSKPVotLZQbmzG7NVwzBtTpw6ycLI
      GSZbChJgtFrUJi5z8tQFcuVOzpw6jiGV6NSTr7P1cZAkKa7ImM/n4zSoJEnoup64IlNIsTVN
      Q1XVeP0m5NBJboSJtoXoTbStqiqZTGZVc9z7IAAijFaD8aERegYGqC/MEslZpOYi67duphmq
      lDs6yKlL6kNkher8PLJWxJufYmBzH0amRLmzk4yypI7sX7eO4WvXuHb1CsWcgh3pSKFHZdNu
      nLlhImBsao6eSg43zNBVKSPJCmazhmGtnFK714hz1IZhxE9b13VpNpuJF8gTbYuzB5lMBsdx
      kGWZbDab6HpOtB0EAZqm4ft+fAZAVKxcibZNgwo1qO+aDF0bI9fRzeb13UyMDlPu20zGM0HN
      4IVZIs8iqyxFvumB3Vika/1msFoouQweOULHQJFBL3agyDA/fR0jUNmyvofrY6MoehldzUIU
      EiEhhzZ1K0DP5ykWdWzHxzNqmGGWgY3r7vXHcxPLKzIKfx6R9xdyYVVVExkJxD4ALG3IiQAQ
      kmTP81Y0probiL2HbDYbexCJESEIglWnXm0fACkpSdK2AZDuA6SsBW0bACkpa0HbL4KjKOD4
      W68zeH2Rgz95lZ/94t3UFWIFli/8hDoyiqLYrSHJZ93yKatIPcKHKtWkF8FCidpqtW4oEWUY
      xv1dIyz0A3Q9j++5SHqFbr/OQnLCxvuWIAioVqvx1NGyrBsqNSbpzRlFEc1mMxalVavVWHot
      zgIkGXymadJqteJzAeJahRRayKNvRdsHgJJV6SgXkbM5+ooZZpoembbv9dqjKEosCxZZIHHT
      ic2xpHLxkiTFas96vU42m43bEua8SVYfyufzsSS7o6ODer0OLH0momrlSgHY9jvBAFlNJ5eV
      qRkGhQ2bU3foWxAEQfwEDIIAWZYJggDXdW+wS08CcSIsiiLK5TKWZSHLcrw7bNs2uq4n0jYs
      mW+Ja3ccB03TaDQaKIpyWzeKdBGc8lATP0vFTlpKysNEHACirE27kMqhU9aCW06BmguTnDo/
      zIGnn6GzcHOVl0a9RqHUifJri9EoipgaucS1GYvnn32S7K95l4SBS9Pw6CgXbtsxkVaLApeL
      585R2fQIsjlL1c+xZ9vGj3iZKSm3RvnTP/3TP73hO4HF3/z1d+joyHFpvEFvzuXi6BzljMOl
      q8OYrsd3vvkXlHr6GR+9ThTaXLo6zrp1fXiN6/zNK29T8OeoqxtwZi6zYMlk3BqnLw5jTF/g
      tcNDbOyWuTK2QH9vNyutT2JLj/osvtrBlXOnqNkhweIslYEBsqkv0A2EYUitVkPTNCzLwjTN
      WARmmiaWZSWmxxEO1EDsCiEWoLZtYxgG2Ww2MUWqZVlxtkc4Y2SzWVzXjfc/VtID3fTd0KxD
      ZROf/+LvEDgtvvEX36RDDZnsXc/QvINkmiDLLI5f5PRExO5xk/dOX6Fn0w466xNs2Pssv/PZ
      /dizl/h///4cknuEimbyweAcn3/peRRZ49h77/LB+TG27Ppf6bmNSLFQWY/vDhGpRZAkOtSQ
      mg16cmes70tEITzhwtBoNGJnBPE6SUQdMiGFFhMLcTA/yVyLSLOKjI+YOnueF59PWEkSfVNI
      SnoHVMd586ev8srBo0s/JMtEwP5nPkelmKGzI08Uhex74nHGrl6mZdmEUYjeu4nJ80d57e/+
      P45engVZQZZg3ebtbOzJYQdZFK/F+UtXsGybO7GLcZpzHDk9zqefO0Do+9RcmUrqjXsTy5/s
      lmXF1RJ9349vgKQ2w4TqE4jPIziOE68pc7lc4rYssDQK5vP52BlC13V0XV81/bviGuCDi6Mc
      eOpp7PlRRhd99mwq05I7MecnUCWXpqfQ1b8Fb36IyarDI4/to6uoMTUyyMi8wyee3s/Q+ZOE
      xY1sLEecvjzBk/t3c+nSVXLZCMODR/c/SUm79bAo1gBGdYoPLg5T7l5PfyFi0cuxe9uGu/TR
      PTgEQRBboQh9vNgYE4UykjoYI9znYOkQiuu65PP5GwpVLD+kc7cRu96iQqU4ICPLclyxcqW2
      23YfIJVDp6wFbbunmqSffEqKoG1HgJSUtaDtZWV2Y5af/+xn/OqDSxiLkxw6dvped6ltEapL
      oQta7tC8/HUSBEEQrz3EmgM+LN2UJOKahRRcSLF//fWtaPsAULQSn/rMp2gtzFKrW7j2ytLW
      h5kgCJifn49vwHq9HtfNqtfrsVw4CZZXifQ8D8Mw4gJ1ruuysLCQSLsCwzCo1+ux+E+oQVut
      Fo7jUK/X798ieRlV5dKJo2zZvZf+jRvSwhgrsFwOrWkasiyjKAphGKIoyg1ZmbuNsF4R/Vie
      vNA0LTE/IIGQQ8uyjO/78drR930KhdVVB20fANXxC7x/dQ6rWQekxCS99zvCBdmyrPiJK4yh
      fN/HMIzErFHEAZzlO7KiMIbjOLFzdFJYlhW3I/rTaDRQVZVarXZ/FslLSVkL2n4ESElJkrbd
      B0g3wlLWgrYfAaIwYHz4GrWWTX1+irHJuXvdpZQHiLYPAKM6Td2J+OD9Y1wbn2Fq8Cy11Bfl
      JoQzQxiGWJZFq9WKVZnCNSHJKpGmacZp1uU2KEIqneRoLhb/4uvlKdhms7lq+rftA6DYvZHt
      63TQyjz5+F4MNyCfJoJuYvlmUCaTifcAxFHXTCaTaCYGiCtRCo8eID6Un2SuRfiPLjfnhQ/P
      lNzXZVI9q867xy7yzFN7OXXkMAP7n0ZL9wJuQpblGxSPIhW5fEc2KcRZBFg6fCOO1wqFahiG
      iR63FW0LZwoRgKqqUiwW49HhVrTtIlhgt2rIapaha8NYfoA7PsSGdV3pKPBrLH/iwocBEYZh
      LJFezSf/N2H5efJyuRxvRomiHK7rJrp/I65Z07S4JKxo03XdVS1Z2nYfIM0CpawFbTsCJF3R
      JCUF2ngEEESBx4WzZ+jasgu5NUM9KrBrYP297lbKA0LbP2aN2iz57o1cOHmMuZbP6NUL97pL
      KQ8Q/z+zjeuN5877WwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Indiv.Mode' width='192'>
      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
      g81m478ADCB+5/c/3A4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Indiv.Mode Shares' width='192'>
      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
      ZdbX1xkbG8PtdmOxWEilUrpDnCzLej9AOBzu63UrlUqRz+f1RJqRkRFi8oOv5QAACaBJREFU
      sRiLi4uDOgGGDDkbBmoPYDAYTuRtOWTISRmoFWDIkLNmYDfBSrfFUaFCvXjE6qNNpKEx0HOR
      JIl2u33q6TqapunuEN1u91Qd/LrdLp1O59SN0jRNG9wV4OmXH5JQglhaGa4uzZBvebmy0J8/
      zMtGLBZjd3eX69ev6wa4r732GiaTidXVVQwGg15CDIfDjI2NEQqFfvA4iqJw9+5dZmZmMJlM
      7O3tMTU1xeLiIrFYjJ2dHS5evMj29jbhcJh2u83Nmzf72pjKssydO3cIh8NcvXqVVqvF119/
      TTabxe/3IwgCU1NTTE1N9R2Vms/nefLkCZcvX2ZiYoIHDx4AcOHChcFdAeYuR7GNGBi1GXm0
      sUulXnvRl3Tm9CzCm80mW1tb1Ot1ut0u7Xabp0+fUqlU8Pl8mM1mkskkoiie6MlsNBqZnp6m
      2WyyubnJT37yE932ZG5uTm9Y8Xg8+pn6fp/Mvf6CYrGIqqq4XC5WVlYYHR0lGAxiNBrJZDJ0
      Op2+V5u1tTVUVdVPl1qtVhqNBkajcXAnQA/nWJDoxciPEpj8MrKyskIymcTv9+P1ekkmkzQa
      DSYmJjAYDExOTmKz2XA6nSSTyRPpAN8uPphMJprNpp4a0/sRXr58mXA4rCvR/fYDKIrCzZs3
      EUWRbDZLq9VifX2dK1eusLCwgMViwel0Eo/H+xoHvgnlPjw8JJPJEIlEmJ2dpVwuD+4rkCp1
      OK538Zi77KarXF2ax9hnOvnLRi6XI5VKsbKyQjabpd1uEwqF0DSNQqGA0WgkFArR7XZ1PWBm
      ZubEOoCmaUSjUTY2NlheXqZUKiGKIvl8nnA4zMjIiK4DLC4u9pUVrCgK6+vrnDt3DofDgdVq
      pVKp6GIYoOsA/R67aDabbG9vE41GqVQqusYwzAcY8sqj6wA9P8YXyTAfYMhZM1ArwFAJHnLW
      PGcTrPL5+//JO3/3Dne/2n/uP61+fp/nHY9XZZH/+vd/4W/f+Qdiufp3/t6uHvFw43tsajSV
      /e3HPN7ep3qc5jdfPET4PWf1X3UEQaBcLqOqKp1O59TG0TSN4+Pj39IdTot2u021WtVNgE8L
      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
    </thumbnail>
  </thumbnails>
</workbook>
