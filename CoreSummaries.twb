<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='ActiveTransport' inline='true' name='textscan.41862.719202812499' version='8.3'>
      <connection class='textscan' directory='C:/Users/lzorn/Documents/2010_04_ZZZ/summary' filename='ActiveTransport.csv'>
        <relation name='ActiveTransport#csv' table='[ActiveTransport#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='taz' ordinal='0' />
            <column datatype='integer' name='COUNTY' ordinal='1' />
            <column datatype='integer' name='ptype' ordinal='2' />
            <column datatype='boolean' name='zeroAuto' ordinal='3' />
            <column datatype='integer' name='freq' ordinal='4' />
            <column datatype='real' name='active' ordinal='5' />
            <column datatype='real' name='more15' ordinal='6' />
            <column datatype='real' name='more30' ordinal='7' />
            <column datatype='real' name='wlk_trip' ordinal='8' />
            <column datatype='real' name='bik_trip' ordinal='9' />
            <column datatype='real' name='wtr_trip' ordinal='10' />
            <column datatype='real' name='dtr_trip' ordinal='11' />
            <column datatype='real' name='atHomeA' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>taz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taz]</local-name>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias>taz</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ptype</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ptype]</local-name>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias>ptype</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zeroAuto</remote-name>
            <remote-type>11</remote-type>
            <local-name>[zeroAuto]</local-name>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias>zeroAuto</remote-alias>
            <ordinal>3</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active]</local-name>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias>active</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>more15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[more15]</local-name>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias>more15</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>more30</remote-name>
            <remote-type>5</remote-type>
            <local-name>[more30]</local-name>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias>more30</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wlk_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wlk_trip]</local-name>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias>wlk_trip</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bik_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bik_trip]</local-name>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias>bik_trip</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wtr_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wtr_trip]</local-name>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias>wtr_trip</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dtr_trip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dtr_trip]</local-name>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias>dtr_trip</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>atHomeA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[atHomeA]</local-name>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias>atHomeA</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[ActiveTransport#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.41862.719202812499].[pcto:sum:freq:qk]&quot;' value='Share of the population' />
          <alias key='&quot;[textscan.41862.719202812499].[sum:freq:qk]&quot;' value='Population' />
          <alias key='&quot;[textscan.41862.719202812499].[usr:Calculation_0690811180905109:qk]&quot;' value='Walk trips which are part of drive to transit travel per person' />
          <alias key='&quot;[textscan.41862.719202812499].[usr:Calculation_0810811180654407:qk]&quot;' value='Bicycle trips per person' />
          <alias key='&quot;[textscan.41862.719202812499].[usr:Calculation_1160811175518335:qk]&quot;' value='Share of the population that engages in at least 15 minutes of active travel per typical weekday' />
          <alias key='&quot;[textscan.41862.719202812499].[usr:Calculation_1830811180540254:qk]&quot;' value='Walk trips (which are not part of a transit trip) per person' />
          <alias key='&quot;[textscan.41862.719202812499].[usr:Calculation_1990811175150080:qk]&quot;' value='Average minutes of active travel per person for all those who leave home on a typical weekday' />
          <alias key='&quot;[textscan.41862.719202812499].[usr:Calculation_2330811180245097:qk]&quot;' value='Share of the population that engages in at least 30 minutes of active travel per typical weekday' />
          <alias key='&quot;[textscan.41862.719202812499].[usr:Calculation_3270811180740697:qk]&quot;' value='Walk trips which are part of walk to transit travel per person' />
          <alias key='&quot;[textscan.41862.719202812499].[usr:Calculation_6840811173510993:qk]&quot;' value='Share of population that does not leave home on a typical weekday' />
          <alias key='&quot;[textscan.41862.719202812499].[usr:Calculation_7630811180945337:qk]&quot;' value='Walk trips which are part of transit travel per person' />
          <alias key='&quot;[textscan.41862.719202812499].[usr:Calculation_9200811175001625:qk]&quot;' value='Average minutes of active travel per person per typical weekday' />
        </aliases>
      </column>
      <column caption='County' datatype='integer' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
        <aliases>
          <alias key='1' value='San Francisco' />
          <alias key='2' value='San Mateo' />
          <alias key='3' value='Santa Clara' />
          <alias key='4' value='Alameda' />
          <alias key='5' value='Contra Costa' />
          <alias key='6' value='Solano' />
          <alias key='7' value='Napa' />
          <alias key='8' value='Sonoma' />
          <alias key='9' value='Marin' />
        </aliases>
      </column>
      <column caption='AvgDtrTrips' datatype='real' name='[Calculation_0690811180905109]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
      </column>
      <column caption='AvgBikTrips' datatype='real' name='[Calculation_0810811180654407]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgMore15' datatype='real' name='[Calculation_1160811175518335]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgWalkTrips' datatype='real' name='[Calculation_1830811180540254]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_1990811175150080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
      </column>
      <column caption='AvgMore30' datatype='real' name='[Calculation_2330811180245097]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([more30]*[freq] )/SUM([freq])' scope-isolation='false' />
      </column>
      <column caption='AvgWtrTrips' datatype='real' name='[Calculation_3270811180740697]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='At Home Share' datatype='real' name='[Calculation_6840811173510993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_9470811171931981] )/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_7630811180945337]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AvgActive' datatype='real' name='[Calculation_9200811175001625]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
      </column>
      <column caption='AtHomeFreq' datatype='real' name='[Calculation_9470811171931981]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[atHomeA]*[freq]' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Active' datatype='real' name='[active]' role='measure' type='quantitative'>
      </column>
      <column caption='At Home A' datatype='real' name='[atHomeA]' role='measure' type='quantitative'>
      </column>
      <column caption='Bik Trip' datatype='real' name='[bik_trip]' role='measure' type='quantitative'>
      </column>
      <column caption='Dtr Trip' datatype='real' name='[dtr_trip]' role='measure' type='quantitative'>
      </column>
      <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column caption='More15' datatype='real' name='[more15]' role='measure' type='quantitative'>
      </column>
      <column caption='More30' datatype='real' name='[more30]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Person Type' datatype='integer' name='[ptype]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Full-time worker&#10;' />
          <alias key='2' value='Part-time worker&#10;' />
          <alias key='3' value='College student&#10;' />
          <alias key='4' value='Non-working adult&#10;' />
          <alias key='5' value='Retired&#10;' />
          <alias key='6' value='Driving-age student&#10;' />
          <alias key='7' value='Non-driving-age student&#10;' />
          <alias key='8' value='Child too young for school&#10;' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Taz' datatype='integer' name='[taz]' role='dimension' type='ordinal'>
      </column>
      <column caption='Wlk Trip' datatype='real' name='[wlk_trip]' role='measure' type='quantitative'>
      </column>
      <column caption='Wtr Trip' datatype='real' name='[wtr_trip]' role='measure' type='quantitative'>
      </column>
      <column caption='Zero Auto' datatype='boolean' name='[zeroAuto]' role='dimension' type='nominal'>
        <aliases>
          <alias key='false' value='Non-zero Automobiles' />
          <alias key='true' value='Zero Automobiles' />
        </aliases>
      </column>
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_0690811180905109]' derivation='User' name='[usr:Calculation_0690811180905109:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_0810811180654407]' derivation='User' name='[usr:Calculation_0810811180654407:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1160811175518335]' derivation='User' name='[usr:Calculation_1160811175518335:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1830811180540254]' derivation='User' name='[usr:Calculation_1830811180540254:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1990811175150080]' derivation='User' name='[usr:Calculation_1990811175150080:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2330811180245097]' derivation='User' name='[usr:Calculation_2330811180245097:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3270811180740697]' derivation='User' name='[usr:Calculation_3270811180740697:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6840811173510993]' derivation='User' name='[usr:Calculation_6840811173510993:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7630811180945337]' derivation='User' name='[usr:Calculation_7630811180945337:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9200811175001625]' derivation='User' name='[usr:Calculation_9200811175001625:qk]' pivot='key' type='quantitative' />
      <folder name='Active' role='measures'>
        <folder-item name='[Calculation_0690811180905109]' type='field' />
        <folder-item name='[Calculation_0810811180654407]' type='field' />
        <folder-item name='[Calculation_1160811175518335]' type='field' />
        <folder-item name='[Calculation_1830811180540254]' type='field' />
        <folder-item name='[Calculation_1990811175150080]' type='field' />
        <folder-item name='[Calculation_2330811180245097]' type='field' />
        <folder-item name='[Calculation_3270811180740697]' type='field' />
        <folder-item name='[Calculation_7630811180945337]' type='field' />
        <folder-item name='[Calculation_9200811175001625]' type='field' />
        <folder-item name='[active]' type='field' />
        <folder-item name='[bik_trip]' type='field' />
        <folder-item name='[dtr_trip]' type='field' />
        <folder-item name='[more15]' type='field' />
        <folder-item name='[more30]' type='field' />
        <folder-item name='[wlk_trip]' type='field' />
        <folder-item name='[wtr_trip]' type='field' />
      </folder>
      <folder name='Regional' role='measures'>
        <folder-item name='[Calculation_6840811173510993]' type='field' />
        <folder-item name='[Calculation_9470811171931981]' type='field' />
        <folder-item name='[atHomeA]' type='field' />
        <folder-item name='[freq]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.265475' measure-ordering='alphabetic' measure-percentage='0.650619' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='AutomobileOwnership' inline='true' name='textscan.41863.595200555559' version='8.3'>
      <connection class='textscan' directory='C:/Users/lzorn/Documents/2010_04_ZZZ/summary' filename='AutomobileOwnership.csv'>
        <relation name='AutomobileOwnership#csv' table='[AutomobileOwnership#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='SD' ordinal='0' />
            <column datatype='integer' name='COUNTY' ordinal='1' />
            <column datatype='integer' name='autos' ordinal='2' />
            <column datatype='integer' name='incQ' ordinal='3' />
            <column datatype='integer' name='walk_subzone' ordinal='4' />
            <column datatype='integer' name='workers' ordinal='5' />
            <column datatype='boolean' name='kidsNoDr' ordinal='6' />
            <column datatype='integer' name='freq' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[AutomobileOwnership#csv]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[AutomobileOwnership#csv]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autos</remote-name>
            <remote-type>20</remote-type>
            <local-name>[autos]</local-name>
            <parent-name>[AutomobileOwnership#csv]</parent-name>
            <remote-alias>autos</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[AutomobileOwnership#csv]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walk_subzone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[walk_subzone]</local-name>
            <parent-name>[AutomobileOwnership#csv]</parent-name>
            <remote-alias>walk_subzone</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>workers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[workers]</local-name>
            <parent-name>[AutomobileOwnership#csv]</parent-name>
            <remote-alias>workers</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kidsNoDr</remote-name>
            <remote-type>11</remote-type>
            <local-name>[kidsNoDr]</local-name>
            <parent-name>[AutomobileOwnership#csv]</parent-name>
            <remote-alias>kidsNoDr</remote-alias>
            <ordinal>6</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[AutomobileOwnership#csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[AutomobileOwnership#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='County' datatype='integer' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
        <aliases>
          <alias key='1' value='San Francisco' />
          <alias key='2' value='San Mateo' />
          <alias key='3' value='Santa Clara' />
          <alias key='4' value='Alameda' />
          <alias key='5' value='Contra Costa' />
          <alias key='6' value='Solano' />
          <alias key='7' value='Napa' />
          <alias key='8' value='Sonoma' />
          <alias key='9' value='Marin' />
        </aliases>
      </column>
      <column caption='Average Autos' datatype='real' name='[Calculation_9250812142847041]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([autos]*[freq])/SUM([freq])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Autos' datatype='integer' name='[autos]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Zero automobiles' />
          <alias key='1' value='One automobile' />
          <alias key='2' value='Two automobiles' />
          <alias key='3' value='Three automobiles' />
          <alias key='4' value='Four or more automobiles' />
        </aliases>
      </column>
      <column caption='Households' datatype='integer' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Inc Q' datatype='integer' name='[incQ]' role='dimension' type='ordinal'>
      </column>
      <column caption='Kids No Dr' datatype='boolean' name='[kidsNoDr]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Walk Subzone' datatype='integer' name='[walk_subzone]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Cannot walk to transit (more tahn two-thirds of a mile away)' />
          <alias key='1' value='Short-walk to transit (less than one-third of a mile)' />
          <alias key='2' value='Long-walk to transit (between one-third and two-thirds of a mile)' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Workers' datatype='integer' name='[workers]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Zero' />
          <alias key='1' value='One' />
          <alias key='2' value='Two' />
          <alias key='3' value='Three' />
          <alias key='4' value='Four or more' />
        </aliases>
      </column>
      <column-instance column='[autos]' derivation='None' name='[none:autos:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:autos:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>4</bucket>
            </map>
            <map to='#d62728'>
              <bucket>3</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='ActivityPattern' inline='true' name='textscan.41862.719548923611' version='8.3'>
      <connection class='textscan' directory='C:/Users/lzorn/Documents/2020_03_116/summary' filename='ActivityPattern.csv'>
        <relation name='ActivityPattern#csv' table='[ActivityPattern#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='type' ordinal='0' />
            <column datatype='string' name='activity_pattern' ordinal='1' />
            <column datatype='integer' name='imf_choice' ordinal='2' />
            <column datatype='integer' name='inmf_choice' ordinal='3' />
            <column datatype='integer' name='incQ' ordinal='4' />
            <column datatype='integer' name='freq' ordinal='5' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity_pattern</remote-name>
            <remote-type>129</remote-type>
            <local-name>[activity_pattern]</local-name>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias>activity_pattern</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imf_choice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[imf_choice]</local-name>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias>imf_choice</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inmf_choice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inmf_choice]</local-name>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias>inmf_choice</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incQ</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incQ]</local-name>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias>incQ</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[ActivityPattern#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.41862.719548923611].[pcto:sum:freq:qk:1]&quot;' value='% of Total for Person Type' />
          <alias key='&quot;[textscan.41862.719548923611].[sum:freq:qk]&quot;' value='Quantity' />
        </aliases>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([freq]) / TOTAL(SUM([freq]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;H&quot;' value='Home' />
          <alias key='&quot;M&quot;' value='Mandatory' />
          <alias key='&quot;N&quot;' value='Non-mandatory' />
        </aliases>
      </column>
      <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Imf Choice' datatype='integer' name='[imf_choice]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' caption='Inc Q' datatype='integer' name='[incQ]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Less than $30,000' />
          <alias key='2' value='$30,000 to $60,000' />
          <alias key='3' value='$60,000 to $100,000' />
          <alias key='4' value='More than $100,000' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Inmf Choice' datatype='integer' name='[inmf_choice]' role='dimension' type='ordinal'>
      </column>
      <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
      <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[textscan.41862.719548923611].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:\Users\lzorn\Documents\CoreSummaries\ActivityPattern.tde' schema='Extract' tablename='Extract' update-time='08/16/2014 12:49:40 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4298' timestamp-start='2014-08-16 00:49:40.967' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>activity_pattern</remote-name>
              <remote-type>129</remote-type>
              <local-name>[activity_pattern]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>activity_pattern</remote-alias>
              <ordinal>1</ordinal>
              <family>ActivityPattern#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;H&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;N&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>3</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>2</ordinal>
              <family>ActivityPattern#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1142</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>607577</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>imf_choice</remote-name>
              <remote-type>16</remote-type>
              <local-name>[imf_choice]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>imf_choice</remote-alias>
              <ordinal>3</ordinal>
              <family>ActivityPattern#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>incQ</remote-name>
              <remote-type>16</remote-type>
              <local-name>[incQ]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>incQ</remote-alias>
              <ordinal>4</ordinal>
              <family>ActivityPattern#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>4</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>inmf_choice</remote-name>
              <remote-type>16</remote-type>
              <local-name>[inmf_choice]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>inmf_choice</remote-alias>
              <ordinal>5</ordinal>
              <family>ActivityPattern#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>90</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>93</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>6</ordinal>
              <family>ActivityPattern#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Child too young for school&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;University student&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-relationship source='textscan.41862.719548923611' target='textscan.41862.719202812499'>
      <column-mapping>
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='ActiveTravel'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport' name='textscan.41862.719202812499' />
          </datasources>
          <datasource-dependencies datasource='textscan.41862.719202812499'>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_0690811180905109]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_0810811180654407]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_1160811175518335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_1830811180540254]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_1990811175150080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_2330811180245097]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_3270811180740697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='At Home Share' datatype='real' name='[Calculation_6840811173510993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9470811171931981] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_7630811180945337]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_9200811175001625]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='integer' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Full-time worker&#10;' />
                <alias key='2' value='Part-time worker&#10;' />
                <alias key='3' value='College student&#10;' />
                <alias key='4' value='Non-working adult&#10;' />
                <alias key='5' value='Retired&#10;' />
                <alias key='6' value='Driving-age student&#10;' />
                <alias key='7' value='Non-driving-age student&#10;' />
                <alias key='8' value='Child too young for school&#10;' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0690811180905109]' derivation='User' name='[usr:Calculation_0690811180905109:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0810811180654407]' derivation='User' name='[usr:Calculation_0810811180654407:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160811175518335]' derivation='User' name='[usr:Calculation_1160811175518335:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1830811180540254]' derivation='User' name='[usr:Calculation_1830811180540254:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1990811175150080]' derivation='User' name='[usr:Calculation_1990811175150080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2330811180245097]' derivation='User' name='[usr:Calculation_2330811180245097:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3270811180740697]' derivation='User' name='[usr:Calculation_3270811180740697:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6840811173510993]' derivation='User' name='[usr:Calculation_6840811173510993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7630811180945337]' derivation='User' name='[usr:Calculation_7630811180945337:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9200811175001625]' derivation='User' name='[usr:Calculation_9200811175001625:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41862.719202812499].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_6840811173510993:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_9200811175001625:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_1990811175150080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_1160811175518335:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_2330811180245097:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_1830811180540254:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_0810811180654407:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_3270811180740697:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_0690811180905109:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_7630811180945337:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.41862.719202812499].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[pcto:sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41862.719202812499].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41862.719202812499].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[pcto:sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_6840811173510993:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_9200811175001625:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_1990811175150080:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_1160811175518335:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_2330811180245097:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_1830811180540254:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_0810811180654407:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_3270811180740697:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_0690811180905109:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.41862.719202812499].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_6840811173510993:qk]' value='p0.0%' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_9200811175001625:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_1990811175150080:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_1160811175518335:qk]' value='p0.0%' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_2330811180245097:qk]' value='p0.0%' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_1830811180540254:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_0810811180654407:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_3270811180740697:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_0690811180905109:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_7630811180945337:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='width' value='67' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.41862.719202812499].[:Measure Names]' value='512' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.41862.719202812499].[Multiple Values]' />
              <lod column='[textscan.41862.719202812499].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41862.719202812499].[:Measure Names]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='ActiveTravelByAutoOwnership'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport' name='textscan.41862.719202812499' />
          </datasources>
          <datasource-dependencies datasource='textscan.41862.719202812499'>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_0690811180905109]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_0810811180654407]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_1160811175518335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_1830811180540254]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_1990811175150080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_2330811180245097]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_3270811180740697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='At Home Share' datatype='real' name='[Calculation_6840811173510993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9470811171931981] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_7630811180945337]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_9200811175001625]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[zeroAuto]' derivation='None' name='[none:zeroAuto:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='integer' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Full-time worker&#10;' />
                <alias key='2' value='Part-time worker&#10;' />
                <alias key='3' value='College student&#10;' />
                <alias key='4' value='Non-working adult&#10;' />
                <alias key='5' value='Retired&#10;' />
                <alias key='6' value='Driving-age student&#10;' />
                <alias key='7' value='Non-driving-age student&#10;' />
                <alias key='8' value='Child too young for school&#10;' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0690811180905109]' derivation='User' name='[usr:Calculation_0690811180905109:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0810811180654407]' derivation='User' name='[usr:Calculation_0810811180654407:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160811175518335]' derivation='User' name='[usr:Calculation_1160811175518335:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1830811180540254]' derivation='User' name='[usr:Calculation_1830811180540254:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1990811175150080]' derivation='User' name='[usr:Calculation_1990811175150080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2330811180245097]' derivation='User' name='[usr:Calculation_2330811180245097:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3270811180740697]' derivation='User' name='[usr:Calculation_3270811180740697:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6840811173510993]' derivation='User' name='[usr:Calculation_6840811173510993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7630811180945337]' derivation='User' name='[usr:Calculation_7630811180945337:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9200811175001625]' derivation='User' name='[usr:Calculation_9200811175001625:qk]' pivot='key' type='quantitative' />
            <column caption='Zero Auto' datatype='boolean' name='[zeroAuto]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Non-zero Automobiles' />
                <alias key='true' value='Zero Automobiles' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41862.719202812499].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_6840811173510993:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_9200811175001625:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_1990811175150080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_1160811175518335:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_2330811180245097:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_1830811180540254:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_0810811180654407:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_3270811180740697:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_0690811180905109:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_7630811180945337:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41862.719202812499].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41862.719202812499].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[pcto:sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_6840811173510993:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_9200811175001625:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_1990811175150080:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_1160811175518335:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_2330811180245097:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_1830811180540254:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_0810811180654407:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_3270811180740697:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_0690811180905109:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.41862.719202812499].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_6840811173510993:qk]' value='p0.0%' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_9200811175001625:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_1990811175150080:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_1160811175518335:qk]' value='p0.0%' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_2330811180245097:qk]' value='p0.0%' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_1830811180540254:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_0810811180654407:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_3270811180740697:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_0690811180905109:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_7630811180945337:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.41862.719202812499].[:Measure Names]' value='508' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#3f6a6e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.41862.719202812499].[Multiple Values]' />
              <lod column='[textscan.41862.719202812499].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41862.719202812499].[:Measure Names]</rows>
        <cols>[textscan.41862.719202812499].[none:zeroAuto:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='ActiveTravelByCounty'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport' name='textscan.41862.719202812499' />
          </datasources>
          <datasource-dependencies datasource='textscan.41862.719202812499'>
            <column caption='County' datatype='integer' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
              <aliases>
                <alias key='1' value='San Francisco' />
                <alias key='2' value='San Mateo' />
                <alias key='3' value='Santa Clara' />
                <alias key='4' value='Alameda' />
                <alias key='5' value='Contra Costa' />
                <alias key='6' value='Solano' />
                <alias key='7' value='Napa' />
                <alias key='8' value='Sonoma' />
                <alias key='9' value='Marin' />
              </aliases>
            </column>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_0690811180905109]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_0810811180654407]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_1160811175518335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_1830811180540254]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_1990811175150080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_2330811180245097]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_3270811180740697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='At Home Share' datatype='real' name='[Calculation_6840811173510993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9470811171931981] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_7630811180945337]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_9200811175001625]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='integer' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Full-time worker&#10;' />
                <alias key='2' value='Part-time worker&#10;' />
                <alias key='3' value='College student&#10;' />
                <alias key='4' value='Non-working adult&#10;' />
                <alias key='5' value='Retired&#10;' />
                <alias key='6' value='Driving-age student&#10;' />
                <alias key='7' value='Non-driving-age student&#10;' />
                <alias key='8' value='Child too young for school&#10;' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0690811180905109]' derivation='User' name='[usr:Calculation_0690811180905109:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0810811180654407]' derivation='User' name='[usr:Calculation_0810811180654407:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160811175518335]' derivation='User' name='[usr:Calculation_1160811175518335:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1830811180540254]' derivation='User' name='[usr:Calculation_1830811180540254:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1990811175150080]' derivation='User' name='[usr:Calculation_1990811175150080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2330811180245097]' derivation='User' name='[usr:Calculation_2330811180245097:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3270811180740697]' derivation='User' name='[usr:Calculation_3270811180740697:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6840811173510993]' derivation='User' name='[usr:Calculation_6840811173510993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7630811180945337]' derivation='User' name='[usr:Calculation_7630811180945337:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9200811175001625]' derivation='User' name='[usr:Calculation_9200811175001625:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41862.719202812499].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_6840811173510993:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_9200811175001625:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_1990811175150080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_1160811175518335:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_2330811180245097:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_1830811180540254:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_0810811180654407:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_3270811180740697:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_0690811180905109:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_7630811180945337:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41862.719202812499].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41862.719202812499].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[pcto:sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_6840811173510993:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_9200811175001625:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_1990811175150080:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_1160811175518335:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_2330811180245097:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_1830811180540254:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_0810811180654407:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_3270811180740697:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_0690811180905109:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.41862.719202812499].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_6840811173510993:qk]' value='p0.0%' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_9200811175001625:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_1990811175150080:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_1160811175518335:qk]' value='p0.0%' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_2330811180245097:qk]' value='p0.0%' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_1830811180540254:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_0810811180654407:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_3270811180740697:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_0690811180905109:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_7630811180945337:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.41862.719202812499].[:Measure Names]' value='392' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[textscan.41862.719202812499].[:Measure Names]' value='auto' />
            <format attr='text-align' field='[textscan.41862.719202812499].[:Measure Names]' value='auto' />
            <format attr='font-family' field='[textscan.41862.719202812499].[:Measure Names]' value='Arial Narrow' />
            <format attr='font-weight' field='[textscan.41862.719202812499].[:Measure Names]' value='normal' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#3f6a6e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.41862.719202812499].[Multiple Values]' />
              <lod column='[textscan.41862.719202812499].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41862.719202812499].[:Measure Names]</rows>
        <cols>[textscan.41862.719202812499].[none:COUNTY:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='ActiveTravelByPersonType'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActiveTransport' name='textscan.41862.719202812499' />
          </datasources>
          <datasource-dependencies datasource='textscan.41862.719202812499'>
            <column caption='AvgDtrTrips' datatype='real' name='[Calculation_0690811180905109]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dtr_trip]*[freq] )/SUM( [freq])' scope-isolation='false' />
            </column>
            <column caption='AvgBikTrips' datatype='real' name='[Calculation_0810811180654407]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [freq]*[bik_trip])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgMore15' datatype='real' name='[Calculation_1160811175518335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [more15]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWalkTrips' datatype='real' name='[Calculation_1830811180540254]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([wlk_trip]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgActivePerLeaveHome' datatype='real' name='[Calculation_1990811175150080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM((1-[atHomeA])*[freq])' scope-isolation='false' />
            </column>
            <column caption='AvgMore30' datatype='real' name='[Calculation_2330811180245097]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([more30]*[freq] )/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='AvgWtrTrips' datatype='real' name='[Calculation_3270811180740697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( [wtr_trip]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='At Home Share' datatype='real' name='[Calculation_6840811173510993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_9470811171931981] )/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgTrnActiveTrips' datatype='real' name='[Calculation_7630811180945337]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( ([wtr_trip]+[dtr_trip])*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column caption='AvgActive' datatype='real' name='[Calculation_9200811175001625]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([active]*[freq])/SUM([freq] )' scope-isolation='false' />
            </column>
            <column-instance column='[ptype]' derivation='Attribute' name='[attr:ptype:ok]' pivot='key' type='ordinal' />
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ptype]' derivation='None' name='[none:ptype:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Person Type' datatype='integer' name='[ptype]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Full-time worker&#10;' />
                <alias key='2' value='Part-time worker&#10;' />
                <alias key='3' value='College student&#10;' />
                <alias key='4' value='Non-working adult&#10;' />
                <alias key='5' value='Retired&#10;' />
                <alias key='6' value='Driving-age student&#10;' />
                <alias key='7' value='Non-driving-age student&#10;' />
                <alias key='8' value='Child too young for school&#10;' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0690811180905109]' derivation='User' name='[usr:Calculation_0690811180905109:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0810811180654407]' derivation='User' name='[usr:Calculation_0810811180654407:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160811175518335]' derivation='User' name='[usr:Calculation_1160811175518335:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1830811180540254]' derivation='User' name='[usr:Calculation_1830811180540254:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1990811175150080]' derivation='User' name='[usr:Calculation_1990811175150080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2330811180245097]' derivation='User' name='[usr:Calculation_2330811180245097:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3270811180740697]' derivation='User' name='[usr:Calculation_3270811180740697:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6840811173510993]' derivation='User' name='[usr:Calculation_6840811173510993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7630811180945337]' derivation='User' name='[usr:Calculation_7630811180945337:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9200811175001625]' derivation='User' name='[usr:Calculation_9200811175001625:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41862.719202812499].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[pcto:sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_6840811173510993:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_9200811175001625:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_1990811175150080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_1160811175518335:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_2330811180245097:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_1830811180540254:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_0810811180654407:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_3270811180740697:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_0690811180905109:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719202812499].[usr:Calculation_7630811180945337:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41862.719202812499].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41862.719202812499].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[pcto:sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_6840811173510993:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_9200811175001625:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_1990811175150080:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_1160811175518335:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_2330811180245097:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_1830811180540254:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_0810811180654407:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_3270811180740697:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719202812499].[usr:Calculation_0690811180905109:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.41862.719202812499].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.41862.719202812499].[none:ptype:ok]' value='84' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_6840811173510993:qk]' value='p0.0%' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_9200811175001625:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_1990811175150080:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_1160811175518335:qk]' value='p0.0%' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_2330811180245097:qk]' value='p0.0%' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_1830811180540254:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_0810811180654407:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_3270811180740697:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_0690811180905109:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[textscan.41862.719202812499].[usr:Calculation_7630811180945337:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='wrap' data-class='subtotal' scope='cols' value='auto' />
            <format attr='wrap' data-class='total' scope='cols' value='auto' />
            <format attr='wrap' field='[textscan.41862.719202812499].[:Measure Names]' value='on' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.41862.719202812499].[:Measure Names]' value='296' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' value='auto' />
            <format attr='text-orientation' field='[textscan.41862.719202812499].[:Measure Names]' value='0' />
            <format attr='wrap' field='[textscan.41862.719202812499].[:Measure Names]' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.41862.719202812499].[Multiple Values]' />
              <lod column='[textscan.41862.719202812499].[attr:ptype:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41862.719202812499].[:Measure Names]</rows>
        <cols>[textscan.41862.719202812499].[none:ptype:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='ActivityByPersonType'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern' name='textscan.41862.719548923611' />
          </datasources>
          <datasource-dependencies datasource='textscan.41862.719548923611'>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.41862.719548923611].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41862.719548923611].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719548923611].[pcto:sum:freq:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719548923611].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41862.719548923611].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41862.719548923611].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719548923611].[pcto:sum:freq:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[textscan.41862.719548923611].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[textscan.41862.719548923611].[none:type:nk]' direction='DESC' using='[textscan.41862.719548923611].[sum:freq:qk]'>
            <groupfilter function='member' level='[none:activity_pattern:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[textscan.41862.719548923611].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.41862.719548923611].[pcto:sum:freq:qk:1]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.41862.719548923611].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.41862.719548923611].[none:type:nk]</rows>
        <cols total='true'>([textscan.41862.719548923611].[:Measure Names] / [textscan.41862.719548923611].[none:activity_pattern:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='ActivityFullTimeWorkers'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActivityPattern' name='textscan.41862.719548923611' />
          </datasources>
          <datasource-dependencies datasource='textscan.41862.719548923611'>
            <column caption='Daily Activity Pattern' datatype='string' name='[activity_pattern]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Home' />
                <alias key='&quot;M&quot;' value='Mandatory' />
                <alias key='&quot;N&quot;' value='Non-mandatory' />
              </aliases>
            </column>
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Inc Q' datatype='integer' name='[incQ]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Less than $30,000' />
                <alias key='2' value='$30,000 to $60,000' />
                <alias key='3' value='$60,000 to $100,000' />
                <alias key='4' value='More than $100,000' />
              </aliases>
            </column>
            <column-instance column='[activity_pattern]' derivation='None' name='[none:activity_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[incQ]' derivation='None' name='[none:incQ:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.41862.719548923611].[none:activity_pattern:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Person Type' datatype='string' name='[type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41862.719548923611].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719548923611].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41862.719548923611].[pcto:sum:freq:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41862.719548923611].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41862.719548923611].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41862.719548923611].[pcto:sum:freq:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[textscan.41862.719548923611].[none:activity_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;M&quot;</bucket>
              <bucket>&quot;N&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.41862.719548923611].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Full-time worker&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[textscan.41862.719548923611].[none:type:nk]' direction='DESC' using='[textscan.41862.719548923611].[sum:freq:qk]'>
            <groupfilter function='member' level='[none:activity_pattern:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[textscan.41862.719548923611].[none:type:nk]</column>
            <column>[textscan.41862.719548923611].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.41862.719548923611].[pcto:sum:freq:qk:1]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.41862.719548923611].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.41862.719548923611].[none:type:nk] / [textscan.41862.719548923611].[none:incQ:ok])</rows>
        <cols>([textscan.41862.719548923611].[:Measure Names] / [textscan.41862.719548923611].[none:activity_pattern:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='AutoOwnershipByCounty'>
      <table>
        <view>
          <datasources>
            <datasource caption='AutomobileOwnership' name='textscan.41863.595200555559' />
          </datasources>
          <datasource-dependencies datasource='textscan.41863.595200555559'>
            <column caption='County' datatype='integer' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
              <aliases>
                <alias key='1' value='San Francisco' />
                <alias key='2' value='San Mateo' />
                <alias key='3' value='Santa Clara' />
                <alias key='4' value='Alameda' />
                <alias key='5' value='Contra Costa' />
                <alias key='6' value='Solano' />
                <alias key='7' value='Napa' />
                <alias key='8' value='Sonoma' />
                <alias key='9' value='Marin' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Autos' datatype='integer' name='[autos]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Zero automobiles' />
                <alias key='1' value='One automobile' />
                <alias key='2' value='Two automobiles' />
                <alias key='3' value='Three automobiles' />
                <alias key='4' value='Four or more automobiles' />
              </aliases>
            </column>
            <column caption='Households' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[autos]' derivation='None' name='[none:autos:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.41863.595200555559].[none:autos:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41863.595200555559].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41863.595200555559].[pcto:sum:freq:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41863.595200555559].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41863.595200555559].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41863.595200555559].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41863.595200555559].[pcto:sum:freq:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.41863.595200555559].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.41863.595200555559].[pcto:sum:freq:qk:1]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.41863.595200555559].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.41863.595200555559].[none:autos:ok]</rows>
        <cols>([textscan.41863.595200555559].[:Measure Names] / [textscan.41863.595200555559].[none:COUNTY:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='AutoOwnershipByCounty,TrnAvail'>
      <table>
        <view>
          <datasources>
            <datasource caption='AutomobileOwnership' name='textscan.41863.595200555559' />
          </datasources>
          <datasource-dependencies datasource='textscan.41863.595200555559'>
            <column caption='County' datatype='integer' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
              <aliases>
                <alias key='1' value='San Francisco' />
                <alias key='2' value='San Mateo' />
                <alias key='3' value='Santa Clara' />
                <alias key='4' value='Alameda' />
                <alias key='5' value='Contra Costa' />
                <alias key='6' value='Solano' />
                <alias key='7' value='Napa' />
                <alias key='8' value='Sonoma' />
                <alias key='9' value='Marin' />
              </aliases>
            </column>
            <column caption='Average Autos' datatype='real' name='[Calculation_9250812142847041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([autos]*[freq])/SUM([freq])' scope-isolation='false' />
            </column>
            <column caption='Households' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[walk_subzone]' derivation='None' name='[none:walk_subzone:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9250812142847041]' derivation='User' name='[usr:Calculation_9250812142847041:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Walk Subzone' datatype='integer' name='[walk_subzone]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Cannot walk to transit (more tahn two-thirds of a mile away)' />
                <alias key='1' value='Short-walk to transit (less than one-third of a mile)' />
                <alias key='2' value='Long-walk to transit (between one-third and two-thirds of a mile)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41863.595200555559].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41863.595200555559].[sum:freq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41863.595200555559].[usr:Calculation_9250812142847041:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41863.595200555559].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41863.595200555559].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41863.595200555559].[usr:Calculation_9250812142847041:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[textscan.41863.595200555559].[none:walk_subzone:ok]' direction='ASC'>
            <dictionary>
              <bucket>1</bucket>
              <bucket>2</bucket>
              <bucket>0</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.41863.595200555559].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.41863.595200555559].[usr:Calculation_9250812142847041:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.41863.595200555559].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41863.595200555559].[none:walk_subzone:ok]</rows>
        <cols>([textscan.41863.595200555559].[:Measure Names] / [textscan.41863.595200555559].[none:COUNTY:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='AutoOwnershipByCountyGraph'>
      <table>
        <view>
          <datasources>
            <datasource caption='AutomobileOwnership' name='textscan.41863.595200555559' />
          </datasources>
          <datasource-dependencies datasource='textscan.41863.595200555559'>
            <column caption='County' datatype='integer' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
              <aliases>
                <alias key='1' value='San Francisco' />
                <alias key='2' value='San Mateo' />
                <alias key='3' value='Santa Clara' />
                <alias key='4' value='Alameda' />
                <alias key='5' value='Contra Costa' />
                <alias key='6' value='Solano' />
                <alias key='7' value='Napa' />
                <alias key='8' value='Sonoma' />
                <alias key='9' value='Marin' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Autos' datatype='integer' name='[autos]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Zero automobiles' />
                <alias key='1' value='One automobile' />
                <alias key='2' value='Two automobiles' />
                <alias key='3' value='Three automobiles' />
                <alias key='4' value='Four or more automobiles' />
              </aliases>
            </column>
            <column caption='Households' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[autos]' derivation='None' name='[none:autos:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <sort class='natural' column='[textscan.41863.595200555559].[none:autos:ok]' direction='DESC' />
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41863.595200555559].[none:autos:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.41863.595200555559].[pcto:sum:freq:qk]</rows>
        <cols>[textscan.41863.595200555559].[none:COUNTY:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='AutoOwnershipByWorkers'>
      <table>
        <view>
          <datasources>
            <datasource caption='AutomobileOwnership' name='textscan.41863.595200555559' />
          </datasources>
          <datasource-dependencies datasource='textscan.41863.595200555559'>
            <column aggregation='Sum' caption='Autos' datatype='integer' name='[autos]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Zero automobiles' />
                <alias key='1' value='One automobile' />
                <alias key='2' value='Two automobiles' />
                <alias key='3' value='Three automobiles' />
                <alias key='4' value='Four or more automobiles' />
              </aliases>
            </column>
            <column caption='Households' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[autos]' derivation='None' name='[none:autos:ok]' pivot='key' type='ordinal' />
            <column-instance column='[workers]' derivation='None' name='[none:workers:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.41863.595200555559].[none:autos:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Workers' datatype='integer' name='[workers]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Zero' />
                <alias key='1' value='One' />
                <alias key='2' value='Two' />
                <alias key='3' value='Three' />
                <alias key='4' value='Four or more' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41863.595200555559].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41863.595200555559].[pcto:sum:freq:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41863.595200555559].[sum:freq:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41863.595200555559].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41863.595200555559].[sum:freq:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41863.595200555559].[pcto:sum:freq:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.41863.595200555559].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.41863.595200555559].[pcto:sum:freq:qk:1]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.41863.595200555559].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41863.595200555559].[none:autos:ok]</rows>
        <cols>([textscan.41863.595200555559].[:Measure Names] / [textscan.41863.595200555559].[none:workers:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='AutoOwnershipByWorkersGraph'>
      <table>
        <view>
          <datasources>
            <datasource caption='AutomobileOwnership' name='textscan.41863.595200555559' />
          </datasources>
          <datasource-dependencies datasource='textscan.41863.595200555559'>
            <column aggregation='Sum' caption='Autos' datatype='integer' name='[autos]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Zero automobiles' />
                <alias key='1' value='One automobile' />
                <alias key='2' value='Two automobiles' />
                <alias key='3' value='Three automobiles' />
                <alias key='4' value='Four or more automobiles' />
              </aliases>
            </column>
            <column caption='Households' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[autos]' derivation='None' name='[none:autos:ok]' pivot='key' type='ordinal' />
            <column-instance column='[workers]' derivation='None' name='[none:workers:ok]' pivot='key' type='ordinal' />
            <column-instance column='[freq]' derivation='Sum' name='[pcto:sum:freq:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Workers' datatype='integer' name='[workers]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Zero' />
                <alias key='1' value='One' />
                <alias key='2' value='Two' />
                <alias key='3' value='Three' />
                <alias key='4' value='Four or more' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='natural' column='[textscan.41863.595200555559].[none:autos:ok]' direction='DESC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.41863.595200555559].[none:workers:ok]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41863.595200555559].[none:autos:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41863.595200555559].[pcto:sum:freq:qk]</rows>
        <cols>[textscan.41863.595200555559].[none:workers:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActiveTravel'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActiveTravelByPersonType'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActiveTravelByCounty'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActiveTravelByAutoOwnership'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41862.719202812499].[:Measure Names]</field>
          <field>[textscan.41862.719202812499].[none:ptype:ok]</field>
          <field>[textscan.41862.719202812499].[none:zeroAuto:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ActivityByPersonType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41862.719548923611].[none:activity_pattern:nk]</field>
          <field>[textscan.41862.719548923611].[none:type:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='ActivityFullTimeWorkers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41862.719548923611].[none:activity_pattern:nk]</field>
          <field>[textscan.41862.719548923611].[none:incQ:ok]</field>
          <field>[textscan.41862.719548923611].[none:type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AutoOwnershipByCounty'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41863.595200555559].[none:COUNTY:ok]</field>
          <field>[textscan.41863.595200555559].[none:autos:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AutoOwnershipByWorkers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41863.595200555559].[none:COUNTY:ok]</field>
          <field>[textscan.41863.595200555559].[none:autos:ok]</field>
          <field>[textscan.41863.595200555559].[none:workers:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AutoOwnershipByCounty,TrnAvail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41863.595200555559].[none:COUNTY:ok]</field>
          <field>[textscan.41863.595200555559].[none:autos:ok]</field>
          <field>[textscan.41863.595200555559].[none:walk_subzone:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AutoOwnershipByCountyGraph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.41863.595200555559].[none:autos:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='53'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41863.595200555559].[none:COUNTY:ok]</field>
          <field>[textscan.41863.595200555559].[none:autos:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AutoOwnershipByWorkersGraph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.41863.595200555559].[none:autos:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='53'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41863.595200555559].[none:COUNTY:ok]</field>
          <field>[textscan.41863.595200555559].[none:autos:ok]</field>
          <field>[textscan.41863.595200555559].[none:workers:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ActiveTravel' width='192'>
      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
      R85/ABHmRLxlLb6zAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ActiveTravelByPersonType' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ActiveTravelByCounty' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9V5McV5qm+bgIrTIyMjJSIbWE1pJAAdSqZHd1dc/09NjOms3czI/oy71e
      m9kZs52p7uqqLha1BAEQBKGBhEqttYiMjMjQWrnYi0SRxW2CQLHIEpbxXIW5Hz/ncw9/3Y/7
      ef07gq7rOhUqbFHEP3UAFSr8KakIoMKWpiKACluaigAqbGkqAqiwpakIoMKWpiKACluaigAq
      bGkqAqiwpakIoMKWpiKACluaigAqbGkqAqiwpakIoMKWpiKACluaigAqbGkqAqiwpakIoMKW
      piKACluaigAqbGkqAqiwpakIoMKWpiKACluaigAqbGkqAqiwpakIoMKWpiKACluaigAqbGkq
      AqiwpakIoMKWpiKACluaigAqbGkqAqiwpakIoMKWpiKACluaigAqbGkqAqiwpakIoMKWpiKA
      CluaigAqbGkqAqiwpakIoMKWpiKACluaigAqbGkqAqiwpZEfW0ItE/QvEk4VEQ0OOrpbMT+B
      bNKxIKK9Dpvx4QJdIV8oU0jnsNVUYxSFPyzyChW+BR5/KpfS9N+5zVowwsrgRW4tZp+o4oWh
      K6ymfmdBYp6bk0GK+SKqrn/DcCtU+HZ5/B0AMFY3cezESUwhnXcmJnjv9gCrMdjz1FNsjH2G
      P2Vk14lnkCNjtPQeY252AocKhswSv37nYyI5hc7OegbngwRcPRw+tkb/5dtkjU2cOOFj8O3b
      bDjd/PCn/55en/m73ucKFT7niQSQWxnm5+OTGIwujh3qI153iv/cmOfN6yFqWw/yf3a5ODuy
      Qb0AuqaiqptXeF2QMEgC5XwMwbyDjgM9+DaChGIx9j79d7jiY0yEIuDdzqkdApl4FioCqPBH
      5IkEYG3ew386cRqXRSI+O8DNSJliLo9kkCmVFZSygiAIaOUUwzfO46eVQ7UQGrxG1ff+I/sC
      7zGrG5Efdn0ETaNYKlEolpFNVlo6W6iy+slR6RpV+OPy+GcAUabK6UR6WNLV0k51dIxfXVxh
      R08N6ZVBXr84QW9PJ9VmmfWim752JzZXNU3bd7J4/tdM5WxUV9dgCIwR0W10tHexPnyO/g2R
      zoZGHA4zZqsTm/mJ9FihwreGoOvf/Im0FFvhk2E/z586jlH6NsOqUOGPwx8kAF3XUFQNWZIR
      Km81K/wF8gcJoEKFv3S+stOtKMofO44KFf4kVARQYUtT8QJV2NJUBFBhS/MEAtDJhaZ4/Rc/
      59cf3yMbXWJkYeMPanTi2ttceLAMQD4cJrw2yngg/wfV+WVKLNwbJvo7S/RynkgizeL0MOF0
      +Vtsq8JfMo8feVKy9D9Y4qkf/i2yf4DZtRgriQ1IRWnraSHln2cpnKe+rRubFianuHAZ08yt
      Jmnq6qXBbUVXy/jnxgjlzXQ3V3F/PMjeH3ugEOTsOxfwdVuJmiTKURM7drYQnZ9kKSHSt6sH
      l0kmnQoSmPNTdNTT2+olsjzNWlqmq6eZxNI80bxKS9921HAUV4uTyHKCjeU16GvEPzVLXnBT
      a4xwZSjBM8/vxSgUmB4coGCpp7fRhD9WJJMs0rOrC3Plde6W4vECEE201kpcfPct7NX17O81
      szRwhZC5gaK7miZRQEmucvV+iZrQJRbVPbRtU7HKFq4PCPzsmX3kE/PcHw7i8QoMFxUsFjNG
      WQJRxmQwYjTKjN75jJjBhmg7zuLUClVinluTbl7a20B4cYzJFQGDtIGoN7E4tkKV08DgdI7Y
      g1FqupsYHBhBWo+zq6WH4XurOAFBEBDQWBvpJ9nRhtlmYnV6mA1RZinjwKMPMB018tatVbqq
      NPT6LvZ6v/uDXuHPh8d2gTSlDDVd/Oxnf8Wxpgw3hsM07n2RVw43UcjEmZocJ7gRJZEpYmvY
      wSsvHiQbWCIUzyA+HB1T8incnQfY37cdRS9Q53XhslnAaMbjrMbttrL71F9zeruDjY04kXCA
      UEbDJKibQdir2b1nL30eJxu5KDX1Ozmwu4N8Lk1d22727TuIXPRTUkFJpkjrOqATX1tken6F
      eCKBKjuobarBAhRSaTr3H6dv+zbyoTidR17k6T1esoXv8EhX+LPksXcAAY21qWE2El3YM1BT
      Y0ew2RCIoRQLZAQbO/o8JFfBaDJhtlhw+dqob2wkVNr8GkYy20kujTGWLiO4ehBZfli7Basl
      TzymY62xISTB7LDj9nXQ49GJmx86QzMJptbzGLQMvmofq0szjBbBaHcTnp5k0pVHNTYil0d5
      9/UhdMdhGg06qXiK6pYuarQimlGmmEyRl8Fkt7E0PkCquEKVtwqLxYpUGQ7ckjxeAEYbh48e
      YmB4irhtO6e7qwnnjThFM72yjaKxTChv4Pg+Hx5DAZfbzdF92xldiNO3owUAq7uLPT1pVtMm
      9vZuI1+l4DQASDT0thNMq9T5TLjte7HXtNAqFpiNSextrtoMQhQopeP4du2ht8OHm1EW4yJ7
      exu58WCUVMnIvgP70RqNuIomPLILs1DCXGtmdnQe285DVNXXEV8sY6hrwueqxjo5QKZ6Nz2t
      ZmxFOw59L+3W7/BIV/iz5CutEIXCn1dfILgyRU700d7k/tJyXU8z0r9E97FdWP5EsVX4y+Yv
      QgAVKnxXVAbCKmxpvvIOoGnanyKWChX+6FTs0BW2NJUuUIUtTUUAFbY0jxeAVmbu7nn+5//z
      3/hv//NXzEzd58M7s39Qo5f+5f/irduL32jbVHCOzy4/4HftbOGpuyytLNA/E/7abXVdY3bk
      HksD57gwkfq3Bcpx7g7OfXlZeJzfXBn7RrF+uXGVmekJEqlN09/U7Q8Y8ue+UVXRpZt8cmft
      D4/piSkwdXeUrzhiAKTDM4wvxL9yXSnu5+PL1yn8np+YPPj0N8zFfneJnw9/c4snS8v25Ej/
      +I//+I9fW0LNMzKxyt6Tz7C3vRZBLTC7MMtQ/wTuZh+L/Rd459w1YkIVqfkrDM4UUOKjfPDx
      bUqOOpo8NtRiiptnX+fSg0WqzAXOXhqn7/hxWj0lrnz0KTcu36DkbcMSGeGXr58lpNlR4tNc
      //Aik2kjbjXGcqpAenWBWL5ENqdSWLvH2x9dYiOrM379EusFEdHpQfTf5Y0Pb1CwVFMIDHLl
      0k3WFActdW6E9AL/+7+/i1QjMz+zxOJynOZWGxd//a9c6h9FUXNcunwLb8ceaixlpm9d4NyN
      YZLmBhpKs7z1/iWiopsqZZX333mfhYwFl77K26+9x5pWTVtjNVJyicv3R7l58QaW5mZSE9d4
      48Mb5E1Opj79FxaFTna0VBPxT1OyeBi98Buuj0doaKtj9JO3+OCT6yRKGsuRHK3OHJduzpFc
      ucdHV4YxebdR6zSTjy/x4PYwE8sh6lrqGTz7GhfuTFNda+Paxc+4d/0uocQaly8OUNtVx+C5
      d7k45KexrQW7USIVmOT9d95jMgJOMcSdy/3cmdmgsa0FiywQm+vnX19/n8m1Ii0dLYjJBd54
      833CyTxZyY6+cIdbiwvc//QaUxEdX5VOMicRGDjP+1cmqGurZeTiB3x46Q6q3UOxUKCtpQU1
      cJ9P50skRj4lZrIzfnuK5MYQ738ygKGmjtLyHd758CpZcy1SapFiqcBSXKKweJ33rg9RLLjw
      mlZ5/c0PmQiUyCfWEI1GBu6NUt3QgEn6/Ts0jxeAKOM25rl96y5Tk5Ootmrmphdoq3WQc9TR
      ZINkdJ2JsIa0PkxaqGZhfgSrxcCDpQyn9nWR2RhhKt7KqZ02JjckOqp1evYdwWFIMXovzOmf
      HGTs034mQ0Ve/ZsXid67jb8APUeOo8xOUrSIZHUjeiJEEQOlkkBTk4tcLs/KSpKOJjftvU3M
      LUWJZFR++MI+Bu/MkFgfIWFtRyrHaW1px2B2oeQ32OYxcXfdynbbKkrtfhxKnExihYhcT423
      mzP7t6HEVri+Ai8frGM2kCGfSXPi6ZPMj0wSXrpDUPUQWl1Az4VQG4/Qbinj8PkwZdd45+J9
      OpssBNIy/liRH7+4h8F7i3jaWjmwfTtOm4GIf5rE2gw3/AaqWSWoNNFZI5DLh1le18knc1Rb
      kowFU6zOTGMzqkxGBA73NZMPz3B1tMj2phzZRIR5dvODIzYe9E8Szjn4wUk3t0L1PN+8zrWx
      FKuRKI7sEquGTnY2Opl8cAP37uexhmfYiK9yf16mx5ek7OikzmkAXSGVyhJcHsfdeYz6Goiv
      SZw46eP+4BqR9Tgmu0pN51M4crMkMmlS6+usiJ387FQdgYKTajlPOrzEXNpMtc1AW0sLkhBl
      6NoEwWIWUyLBZDhDYHWRakuZuwtZsksD6BY7Y0sRPMVZrq94+PH3qrk9kOOVp9uZWiiya3cD
      6WSM1aEAtS0mgqkCkViaHd2dyN8g3+xjJaPmkwwuxjnzyk/40el2lpfjtO8/w64mJ6VkiIHF
      CLt29lJlM+Ju6eP4kZ14a5s5eOwUP3hq12YlmobJZsdssiGJX74XGhxuHBYbFrVAyWLDbrBg
      N+koJjtuqxmbAEVdo5SOMDW1wOYQXYKhO35ad+/DawNJEtF10HUwWywYLGbMgKmuk1P7uzAb
      5M9TbomSiGiycvjYCXxVVkpLdxgrNrJ7eysmUULSQd8MGaPJgNlsQZYljGYTJosZsyghmh3s
      OnCUF545xY69x2iSgozNLJN7uGt1249xqLMGdAGz1YrBvBmPIIibQT6kXFLo2nuUE089ywFv
      jP4lnd37+3BYatnhCnJ+ME1LXRU1jX0cPnmGZw50PjxoVvYdO05ztQO9XMbkdGCyODDqJeTq
      GtwmCafHg9UoUVYMtPXt4djTL3Ok3f3wGEiYzWasJhOqyc7h40epc1ofxqYw038Ha9de2nyO
      z08TSRSQPG14guMsWx34HA6cditmoxFNVUFVMLqcmKoaqMouMhYV2L+zA7PxC7eNaGnElppA
      9XaTWBnHUevF09TBoRNP8+KhLqzVjew/epJXT+3HbHdQVU6yni2jm8yYbTZsZLl1bZKW3Xtp
      8Tpp7qplcmQcp7sFWfpmPvbHCkAyWqmV07zz2i9563qInX01SPJmEiDJIKPFVrg3tkRJ0RFF
      CZPdjttQ4NpnV5nbSANgcjaSnT7HG+dv4vC2fKnR5Pw9fvXLd1G7D3LUlebnP/85o6qP+oKf
      j95+i3GcdLjMTN/4mPGoyGbLRoRSgJt3J9BlGYsFRodn0Kwu3MVV/uWf3iPn8WAVJcQvXRUE
      1HSEmfU4kiQhAILVQWLyDqOBFLLRgrQxyfhaBoOzGnt0gtc+vEqibMAtpnn7V28SNjlpaWhg
      8tYF7k36SYQWGZ1cRTcY+W1TkrxZt2x34c4v8Yt/ep98bS0+Utyb9H8ejaN1N/nx83x2Y4CU
      ZEfdmKR/NIAoCWzrrWNpJUpLUzOW8jqXPrvJWqLw291AlB4mYvL2oY+9y6/e+BRbRyfGzdWf
      729Ncx3p2WE+uTZAurw5vuOpctF/9l/pD+SosduRvtR1EDCaVAZv3iVZFtA0FbBgF/08mMnT
      1OGi2tEAuQhX3/8NIyGo8TigugV59iL/9M+vs5QVyK5OMTAXQle+GFMSJTuCJOF22olE8zR1
      +XCWInx66QaBnEqNQ+D2Z5eZXksgW70cPV7H8IMENcoMv3jjE8IFHacpw+1bI6SVEoKnnWYh
      S01LM9/w/H+ScQAdXVMpFsvoooTJIKHqAhIaGgK6WkbVBERJQhR0RElGV8uUyhoGoxFZEtF1
      HaVcRNEEjEYjuqogygZEIcTZX49z+MfHcZtMSKgUimUkAwxduYmrdy9tPjcGCUqlMoIkI4nC
      5oVKK1PWRGRZQAQUVUOQDMgoFMsastGIoKuIooSmaUiSDOio5RIaAqJkQNAVECWUYhEkCUmU
      0FUFQTYgSwJquUz5Yb0GUaNYUpAMRmRRp1QsI8hGDNLD35IBo0FG0FXKGsiCjoqIqH8Rj6gr
      KLqIySCjKmUQJdRSERUJk8nw8LeIJIpIEpTLGgajAU0pUVZ1DEYTsiigaQqaLiKiogsyulKk
      rAkYjTKaCgZJp6yLSKhoSOhKabNdkwFRENA1lVKpBKIBWQIdEUFXQdw8vppSplhWkWUJUZKR
      RFDKJUrZBPeuX8F18EcYA9fIm3eys9uLQQJNF0EtUVYFTCYDSrmEjoAgSggCyJ8f/zJIEpqi
      IBkMoCqUFA2DyYioqZvtGo2IugqiiKbqiIJGSdGQRBlJ1CgpOpIImfAUV67HeOZvTuP6hun2
      /8QDYQWC/gyephoMX1quEd+IYHRVYzNV0iX+uaBkwiwEC7S0b6OY2kCXq3DZjY/f8DtBIx5Y
      IiHU0Fbv/Ma1VEaCK2xpvvLyWvECVdgqfKUASqXSHzuOChX+JFSsEBW2NBUBVNjSPKEAFJan
      xwmnv+uukU4yGiKRfvQXaaVMhuLvUWMxs8HgwATZsvroVpUimVyejVCAXOnrnn80Mpksv9d7
      g0yI5eif/xd2pUKG4iPyhRVTMYLxRziBlAzLa9GvXvcotDKB9SCl3/lPNKVMcH2N8h/58fOJ
      3jHqeT/nz12l54yDp/p8qIKEQVApqgJ6OU9Zl7FZjZTzJTAY0Io5SrqIzWZHK2YoagImgxlJ
      KJHJlbE6nJhkEU0pkS88fIctaZQ0GQHQdIVCNkdZ07HYTChFDaMRSqU8I1fuUffcKWpKeUq6
      jNNuJp/NoAgGHDYLoiCglgtkswVki5XYyiiTK3Z6doOulkilsuiiAbvDipLPUFAktPgiw2Ho
      3eamXMhRlu1QzqMLIvlsDslsw2YxohdT3Lw9xJEjRzAbNBBkSsUcGgbMZglRfPiuHwG1kEMV
      TdgjU9yL7qDFY0Iplyjk82iSGYfFQCGXpahL2Cwm1FIRXTZjMUqUC1lyRQXZZMViFMhlMuiS
      GZsRcpuHmGIuj2iyYzPqpNM5BKMFq0GkrJYolQXsdgsiUC7myBUVDGYbZgPkMxlUyYTVJFEs
      qhhMRowyTN29jKnzNM01VoyUKZR1dK2IKpgwAeg6pUKWfFHDYrOi5NIUVbCIMe6NJmhp9KCW
      i5S1zfEA0WBCU8oIqOSKKjaHA0ktksqWMJtgfGKS/ftt2KxmJL1EMpFmfGyU/U43QqmIZDRj
      EEC2mFDzRSSLBfk7SFr2BALQSS7M4OjaTmRjjbC4wli5jj3iEtdjJkzhNTKijb79tdz6p0/x
      vvB9mvILzARStO7bR+x+P2mbAVv1DnzKGv5sAU/jAU4e76K88oBfXZ3DrBQwV9uJBg3sP1qL
      KKqMnh0iX+vi1MvH8fdnOH5S5+ZQmcj8DNlaK/eW/WiKRsvOHSyPDZFRHDz7gxfY5rIwefsj
      hlaKmD0NeAqLxJXtSAhohQi3L98knEjSd/wUSwP3yBcUPA1VLCwUyOdcyJEwNcd/BhPvES5W
      E0unMJo9nHnlaWz5NKvTDygXCwQWRmk5/BJSdJql5TR1PT5cNTuozc3gL6hEgnFEi5MDTdLD
      oVmd5aFr3Jr0owi1nD7dxdTdQZJlM+07m5g8exbzqf/Az461MXH1Le4EjVR5t3Gkw0T/wDyi
      rZqDdSX+34vrnNhvJxRUsVXVs6tJ4+5UGFGu4UiPjesDN4llWvgP/+Un1JsEBi+9wUjEhKu+
      g+OdJu7cnaJsdrOrVeSD98c4/nd/z6luA7NDUxjzRUaM+9kt32Vg1UReSELBydFD7awXdCT/
      CKsZE+17DmIOTzIXCGKt60HFDkBkaYSBdQvq/GWch75HZnICzWAiWy5Q27wfR26e+UgKq7sD
      WVCZf3ADsXUvyuQnzCYtYHHSsTbF4Mgs6bJAvajiPXOGtYv3OfA3r1Jn+NoT9RvxlWa4L6VH
      14qM9I8g1zgJzATZfaidsYl1lEIeWYgyNr5OqZhDcNsQi7UcO9qMf3oS/3ocg7WIWHOSF443
      klpbYXhsnqJaJl8y0NHTjpTyE7H1ccxbRO86TmsyRMJtxqzrFEo+Du6vIl8WyUegvq7ISr6a
      ZlHC4UpyfzKAmk+imbyIusq21g4aG7xYDBILE9Pse/H7lMPLOD3VVHm76WhwoGSCDA5NEYtH
      EAQTjt4TvHpqF3ZBRPJ6sJVzVHmqiEbjJNeTpCPrhHJ58qk4vu4D+GwqKwkDexpkUrZ2Drea
      mJmeJ7QWpLZnO9l0Fi23gZoMMOzPoxazOCwiKWsrOxosxENR6nYfpUMLMBIJsTC6TLGUQrFW
      Y5SqOHVyH3aTTCIaouPQs+iJRWJzQ4wES5TzOapsAvmaPZxoFlnPWenpqCGwWuD0D1+mLj3K
      dErCWNvDbrOO2N6CxyASjcXYceQ02fAK5eAUdxeSlDM5LG4j2Lr53qFOzLKVUm6d+l1PU5i9
      wnLIQntrLU2HnuKAcZHBmBtJSiPptTzz8hnq7TA/Mc5aNEpJtSFanOzqrIdShun1RYgA7gLq
      RpGxtXVQ8hTiGeaCy5TyRdJxBVlfYz7q4ORTHazO5njqxaOk19ewGVXmFgMk0ln27O9g8v4C
      hdpmDnfWfScPrI+9Ayj5DMFCBilZoFrzM1V6loZ0P6NmNyfa6thz6gC7G1ViepKVsAWDEkSo
      O84rbX5mMklyyQSFrEZWl/C27OfF7+9gaTyOxQAKYDKZEAsyBqP8eSY5BBlPfQ12c4S8CsXo
      Cp9cmEHv+ynbzDqCaGLX03/NCec6kwkHJtlJdGyCxW1NVFuMKGqBbC5PIZfH6fxilDA8OYDv
      zL9n3/J7zOZF8rk8xUiItbSG8NBb4/BsY/Xae8SbnqVNXGD/Sy/DzBRVdkCUsIgiKkbqt9UQ
      XVmg7fgLdDivkfPWsD70gJBmo3ebj8N9p9hpWaMY9RP4bQDlPOlcHmNWw+p2sP3ky+xvFPDn
      CsSw4naYACgVi5TyecqlEhZXLSf2v0CbsIwW9+MztuCwqfR2W1gbvU1G8ZDI5UjEwOYxU1VX
      jzWb+NwQVCwUyRfyKGUF2VHD8RdfpsO8QS4XoWRoxvVwYkKTyQSiHae2zoTlexw3JVhM50km
      NSw2EAQZVcmTS8WJzd0h4DjE3x2KcfZ65PPja3U4KMWXcdftIDk/gbW+j2Z3Nz86XcfEiJ+Z
      oIcfvLiH6fE1NuIufI4kC6tZlHKCbDpJNl9mZT7DqZ/+HfMX3sJY30Pmg/9N674DfFdT0D1W
      VGVFobHrKM89/yw//uFp8rESfXtaafB20NG9G0viHpeGA7iq6qitc+KqakFdv8Fo1My21v20
      22c4e2MUzB0c6VF5618/RqivwwTINje1LjMWdy1usxFXQx21VTW4qzx4vQ5sDg9uRwv19QWq
      uw7R43HhqoGE1IJ57hLv3InR3e4muTDOquShpcoGQN+uPh58/D5yw17q63zUuDZPLN/2AwQu
      vYVfbqCldw++yF3evLlOa6uHwtIipapaqj1evL42du/o4eizu7n7xmtMl6y4ZUA002ZPMRyC
      aoed5q4m5vqvETZ5qKrysW+bDWf3Xjr3nIDx97g5naO6YRsNVQ/tAuUSYzfPsWDexslde7Gn
      Rvl40I/bXUON1/35n6Hlo1y/cA65bje7jp0kN/AOD5Y13A1N1LsMmJ1OFu7dQKs7yKuv7OLB
      u2/jd/eyq7GaapsFp68W20ODm5oNcfn8JZzNO+nZc4jS9HnuLOSp8jbgq/5iTmabxcLi8ipO
      by8HtzcgojB54zwDejuHW6qor21kW3WB8xdvI7UepSFxhwtTZba3eGmsdW2eTLYq+qrqqN+3
      HZ/TS+eepzjsDfPrN6/j6NjFczssvP6bcyjOaurr6unbtR8tl6W3u4obn43hbm6ivcvD1fc+
      xdHei83opGlPG+2e6m/nbP8KvtO8QHo5xvk33mWtaOTwC3/FrkYrWzf5ssbi7X4ybT3sqvN8
      bcmx/guY2r9HV+0fOGm4pvDg9md4+07TXP14z46amue1D0Y5/cpLSAu38Pv2caip6g+L4Q8g
      MPwJN4JuXnnmILbv4gmYSmKsClucykBYhS3NVz4Ey3LFglxha1CxQ1fY0lS6QBW2NBUBVNjS
      PJkA9CyfvvMbRlcflRrp20JnbWGS1VD6Ees1EsurJH+PGlPBUX7xzx8QKTx6Zkg1l8AfijA9
      MUw89zUZnHSF1dXA7/fBUHCQy9O/T8TfJjrBqZv85rWLJJ6gtJKY5trtIS73T29uXc6wGogy
      O3Gf1dAfnpLKf/8yc5lHrNRKDA0+IJb6fayOX7A0M8Bi4FHnzaN5fF4gQI2M8eFNP7LNTq2U
      Y6MgYC4EmQnlCE3fYXgphdsjszg4TUxXWRq4zoOZdew1PjYmrnNvfh29bEFLTnP5xhAGbzNu
      i0wpvsrg6BjDU0FK8VnuL2RpqnWgCQU25hYZm/fjrLXin4lhtaRZnF/l4gfn0eqbiI/e4sF8
      msYGK+O3bzCynqPBV4NBEkiF5rhxvZ+MbCc4coUloYVjO5oRC0Eunf+MKX+cmgYfa0PX6Z+M
      osbGOXd1gZbtTeQDa1BVR2Z9mngmw52rN9jQbTTVOCkn13jr9dcpGHwU0yvEkgVG799gbDGJ
      JGbIKRb0RIBAMsPCg+tMb2jUGTZ4kKhhZ6OVWHCFsfv9zMah0WNk5v4tHizGqXIaCcxMENYd
      1DhMRBYHuHV/nKTuwG0uMXDtEgtxCa8xwYOZGLoSZeDaLcJUUWtOc/XiNQJlC24tz0pwmuGp
      GI31NYho3Dr3NunaHTSV/dwcmMPs9pFYeMBiUqLO46CYDtF/+TPGVhO4LFmmljKk8jo7uxtJ
      +If4zZtX0RwiubUAwYIBjx1Gb19hOlTC47EwfPkCMxGBhjojw1evMBIo0rLNi6CWmJudQdNy
      zC0m0YsR5gaHCJTKRJPQ5Na5d+0qY+tFWpq8SLrC5NQ0LmcV80PXmQqWqKkxM3z5EwZmA4ha
      jmjZhkeOMTqfJLs2ws0RP+46HzajhH9xhLXFNdZzEt4qM7MDVxmaj1Fda2bixj3G5+bIZuOM
      Ta1RXe9h6sZFhlfyTyAAXcM/dB+aOomH43RWFbm1nMMSnmcstMb6Sh7yESJKjOy13xcAACAA
      SURBVKuvXUBo2UGTAzZWltjIhVmaVdnmzTLpj7I0toyt1sj82AbNfa1o66N8Ml2gRV9knjrk
      2QWiliL5RIhP3rgFrjKKUWZ5OEFjQ5L7CwKuUgGXM8mwX8Wdm2ZotUQsX8BeKmHy1VFlNvDg
      ylkMTb2sz05gc9kQba30tlQjopFKJImvjBBKF5mLG+myRQkUqzA7rSjJdXLxABGxntjoBcbH
      QygeN8mJUSxdu6mWi8z40zTZknx0rp+a7u04xRKBsSHCukgqA8XQNP6lSWbTdoT0IrlciYS5
      lZ2NZvwjd1jRXIiri4TVFLNzYeRMCH8+w72PzlFq2E5vQxWTdy+RdbYSX5miGJ5lPG6hFJun
      HF/j1+eGsRIgYWrDmFhmaWYBY1s3+fEh4mqCS9fukg+Vce/qpNooEY+EMFqdrC75aaxzMLUS
      Z/naa4wVGji0YxuCrpJLZ1hbmiGr6RRKJjTByM7uRvRCitWMgE/zc3MshS5lkLMhlgpebMVl
      YuuLjEYc1ArrrPsDzKdVjMERIu49NNtV7t65g5JZ4cpECWtulkBonYmNHOpqEo0gIcmHJzLK
      uquPJpvO0vIKWnKV8TUNJbNG0eDFbSgTjyyzHowxvyGyTRnn+nyOQGiDKj3MeMrFzmY3G9O3
      uPggjiwnMAh5ppd1aq0ZVlMbTN1cp6VNY3jZQJ24yuLiEjMpGWdm6gm6QEqWiZlFJh7cYPTW
      MDlfPeWVFcaTCrWGEtmyhsnpxuNy0n3kVY62qoyOr1As66jZCOaWXfRu30mdlmKjpKKVJBrb
      fUgPexENbT00VXto6mynziZTAhAM9B57hkO9DVDa7JJkImHyshG7xYZWyKHqJRTHNno7t9Fk
      g2Ayi/DQSyRgp7Onm+oqC7JswmWzIYkCqcUBxtbSaLpGKp7G19nDrqde5uA2B063HQMC7oYW
      MnM3WM3WImllBKVEVXMzNjZz8RhtblxmJwde/D6t6jrzgRiaWsZV7SEcCxFNJjDqRcoaWJwN
      1Di/SMqF2UPf9j666yRWwlGK2TKyy02NvYr2Q8/xwv5mAOzVXrq7enHajMQCa5Q1Hbu7EbfT
      yMGX/5ozx0/hyK+SVDQSajV7envY3qyxkZDYdfqHHN5mQ0FHEAQsdjcOi4jT00JfdwuaVsbd
      vIe/fukoMpAMTDG2sEFJA0358jcTkmzE5q7C4qznpVefp8Euoxbz1HVup6OxCcVaS4clSSil
      kI1l0LQSkreNWrOGIMvUSEZC8TRmu0wqkafaU88zP/wJ7S6NWMZI9/ZODu7w4t/4YpL0UjJM
      StGw2Wtxssa9iQAFTUeoaqU2NcqVgRxtjSZK5RxlUw3Nv7VzWGt5/tUX2eY0UizkqGnpo7u1
      DbWUoLqxk5YWH776VrZ5rUTWI6iU0ZzbHi+AQiZJ0dPJP/zDf+a/ft/DnUUHvZYA0wmBxqY2
      XHYTKAXKiobRbEYv51FFKy67BWw+irPXuHX3PiGqaXYYkW0CiWgJ8eFQg/BVI9yCgMlsfmiO
      M5Ndus6/fNiPihWbNU0WE0bJgrkYIxxLEimAgwLx/OYHO7Ihx91r11gLl7HYv7ATlLJJRJsH
      m9WAraqK8Pg9rnzwOiMxjVQoQloDZ3Ujmfm7aO272d5oQzDZyEezYACMRjxamoVIGYvZQCGb
      R7LacViNGD31eJMTLBdaae/uwG4UoZSkoEhf2D8yIe7eucm9VZ2+pjqsLitiqUxJVTGZTAgP
      c9ukwgHu3b5BLKvja+/GbpJQC0lKqojZYiYTXCBv8iIWErgMST67cpnr0zItXhmL5d96hg1G
      K5nwFJevP0Ay2DEYzRjkzb9eKebQTQ6cZiOa8OU34kaTGS25QUSRMRs2/zDZ6mL5wRXuTsxi
      0XIESjYcYh7dacco2SEToyQZQTDQ5DMxFzCzq3qVmYSXKocRi1lCQKKmFoau3+L9GwF6m+2f
      t2n2bBoaNS1NMZOlKNlwWy1oooNmX47+hI09jVVYzU6seo6s+nk2MiwPs9AZrS5Ck7e48WAI
      k6Pu35xk7qY6TIIZYyH2+HGAciFDNFHA66tBzIVYytjxSVH8OSvt9Q4Ci9PENQcdrR4yMR1P
      jczy9BQls4+aGjuF4CwzKwsUbUd5qltjdiVBc+9Oau0GlEyUiGLFqSYpWN0I0ShFmwEDoJRM
      2CwlirqNfGiOotmJxerFXAiQkqsg7iemutjRU8f6/Cwx1U5vdwtWg0Q+GWJu3o+jsZtaW5Fs
      2Y7XbUYrxhkdXcJRW43dWYMSXmQ9b6Gvy0tgMYDsqcLnqiLqX8Tg68RrzDA2Oo+5vp2uxmoE
      FGKriwQLVny+KpxSnum5ABa7HWd9E4b4MlGpjlaPzNL0BHlTHd31BjbKLprcMrPXPmMGA23N
      ffQ0uVhfnCOs2OjYVkMhW8bjq0YCBj/9V9akbnbt6KXBJbA0M03Z1kiHVyCiuqk1ZZmZnEOq
      bqWjwcDU6Dyyt4VWJ2RlK4Z0CtHrxSGLpGIRMNlRkwEWNwps6+xCSG1g9zVhlqCcTzA7NYfk
      bqDGplNQjOjINNW7QSmwsjBP0e6hzllFIZ/EZnMQWp4mK9fQ0eIlMDVORvbQ0+VjbXqalOxh
      V08TsiBQTodZjKrU20usZ634zAV0dx3qRhhrfRWByd8pj0Y4EsVmtRJamX1Yfw3+yXFKDh+1
      ThcWMYU/aaCn1UNkeY6VpEBXTwdOs0wqvoEuO1EKccz2ahJrs4SLZjq7fKQ2FDzVGvG8FaeU
      JC+7SC1PkhQ83+1AmK7Eufj2B4TlOp57+XlqLVvXCgca4bk5CjUNbKuyf21J/9wIcm3fZqLa
      Ct8plZHgCluaykBYhS3NV7reisXi75f5oEKFv1C+8g5QOfkrbBUqXaAKW5onEICOphRJJuIk
      03k0pUSh9HvOePb/o5hNkXn4zl5TFJRygcK3mhFJp5Qv8LtR6rqGoqqUigUU9evvcLqmoigK
      +cJXJwLTNPWPk0BYU8h/jYfp82Kqwm/DKRfyKE8Qmq7rqKr6xSCdrn6+v6Vcmng8Tjr/6ERo
      5XKR8tc0pCkKj05F9hXxqGVSyTRl9dF16trD/7CQ52uKwW/37Ql6Mk80S+TM/aucO3+BD999
      j6mZMS4PLz92s6+j/6N/5sZMBCixeG+Y5dmrXJ//Nuf/KzB89jPWf2dJMR5idG6FcGCJVOHr
      /5r04ggzSwucvTH8lev9S1Oshx/l6voWKSeZW4k8ttjS1D0iDw/fxNWzLD/B5JPlYpjxkeXP
      LxLJwBj//PYVQGHk3Ju8e/Ei92c3Hrl9POwnmnyUca3Myr0hHr31vyUXGeW1N68Qzz9a8Nlw
      gMnlACH/HJmvS1Ko5hmbmCT/tVn+Nnn8p19amXhOYPveQzgNAiYSDIzf4X8N3OXMj58jN3mb
      25Pr1O0+SW3mPv5CJ521CQYno3QcOcOp7Y0o+RhXz37ASsHB8X3t3J7KcuKgAVJrfHrjGvWd
      HgK5cyzeMPKTf/c9Zq9eZHJD4NiLL9Hns7M6f5t7lyfJezt4/uR2pq5/wkzKzNEzh1i58ikh
      VWbP955DmV6g44U2Ri8EkIBCeJ53L14lmLWzu8fI9Ztxjj3XToMGn12/TtHZyrO7nXw6skEh
      nuflv/8b6uU8E4P9jKZqwAW//B9DdD//KnWZaS7fmUbYth9v8ALBuu/zn17aQzY8x4XzVyhX
      93KmE86PRFHzOi//+ARD586TKBZw7n6J+tgAd6cCNB56jp3iEldGlsnZu/jbQy4uXruPWLeb
      I21w9coD7O1Hee57e7CpWQKBDYrRaRbHZzDtfpofHO5EK+cZuXGOuzMxmg/sInDuIg0/bOXF
      3fWATimxwDvvXiVjbeLl0zt5cOVT5sMqR59+io2h6wSpY29jnvfulvmvXU3U2I2szU9RwAt6
      loxQz+HDO2muqwOgEJzi45uDxBI6DbUiSxEbh/d7sAkhblwIklEUzjy3n6lFgRdaolxYsxPq
      v0q1ZMAcGGclZebk0wdZunOF5ZKHl156msYqC8HpW1y8Poarcx/e9DAxoRGTJKNl1/jg3U8I
      ZeGpl14kOPAZixkn271pLk0bef6ggcnhAN0vP0dx8GNikpfZ8XHsLQd49Zk9aJkN+s+9w0L4
      NIbVeVx7jxEdu0mwVM2+Hhti7WFqi9MEc0+SGEs04LbC3Owsi5NDJCU3wfUEO7ZVkbN78Qo5
      1tZWWMqYsKaXkarqmZu4g6rpjAVKfG9/F5nIOEv5Lk7tqmI2KtDuhs7dh3DYDZTWCzT32ZkO
      GtllT7Gh6AwOT2EsR5jP13Koq5bo+jLGhn00EmGtGKeotnB6j5sJfwipbOepMwdYmhwlH1fw
      7XSzOBTDRBF3Xyv5QID1hUWs7ftp7qzHlY+SDAWw7P0RO5xB1hbWGYoYOdaQJGrfS3OVAZIR
      bN3dbEzP0NXXSrxspc0tsrYWYDxY4PDeTtrbtlNTZWb5zgfcWNEoxleRURiLOznsi7IR18nW
      7OLZdoWFvI8Wa4ZAYJWFuIYsGjh5+hDr/gjl4DDTEY3wQgDRVqRk7mFXqw2HqwajEmFoJk55
      fQ5zcxeJnMLujkZAJ58Ms7a2RrDoZW+nlfYdR3CZITQ/in91ldlYCT00QbH+IFWlMKHVKeJC
      LeWiwq49PVT7nFjVOnp31CMBXl8Na+sptnd4CQVDRIMLzIWNdLR4UBJrTCSdnGmXCDt76VOS
      rBlL2MolRuZLHOoRCRXNJFIi26viDBUa6NB0qhuK9A/7MRfXmIkY0BDYu7MXZ5ULu8nA9P1+
      Op77KcL6CNbaBuyeXna2VSGIOhury8RCiwRTRhwdO3huRz0lyUZtYyNyOojFqhEomYlPLuIP
      LZPVITixQMORw9TKEFNNtLtLjC8rHNjdSS62zursOtb2OkpJlXJyjtjq/OPvAGouTv/IAnuO
      Po0tcpN376do2XmEDtnPVCLEaEzhxedOcW4sjdvaQXNfF+N6mgMHD5DMPbwF6TqSLCMJCqL4
      u7clCVnW0XWB3v0naFr/hEVNpv3gaZ7qcBPT3Q+LyZhEA5IgoqMjSZuT3wmCgMFgQpJlBEFD
      UYrM3brHsuJll6yxMDqBrfMwpyWBDVn83Cyn6yDLEoIkIeqbYmzmGvMPu4yyLKHr4Grdw74W
      kav+HEOz6xw58zS5u3NIksxvbTOiycHxF87QZUsiRaeINhyioXiJxdLmt9VGswltaYl7gpnv
      v3yS9+7EEURpc50sY7DWcWbPMVzkMRnKbIRC3L83grW+G/vDDqrubefE9m2cH9+cjLqYjjEb
      LHPmmZPcnc8jyfLD/u7m/qmakxOvPEubFicYXCDs6eHFEwrDQj07OmwM3btH3d5OJMnGv+kl
      azL1vXvYV53i3Lno510kZ1UVBqmI02HFsC4BGroo0rb7AK2eGUYLOuVsjJt3BtE6epBlUBUD
      2088z7EGiXDRip4PMn7nLjmbG5/TAoKIKIlIkvildDmR0RvkWk/xklfk4rKA0WjAaDFjlIwI
      D5/fqtr78F/4mHT7IXz5KGeOH0aJpakxASUBSRTB4GDXwR5ywSkc7Ud4Sh8Hj4/A3BiZhJPm
      2ieZJdLsoMMj8uFr/8RvrkXYt6MWgywiiBImiwU5tsintydRkJFkAya7nRopzfvvfMTcxmbH
      1OJqRlm+xNuX7uOpb8Egyw9nVDRjMkYZH19HkgQEScbV0IjsH+L1964QKz7sqxcS9F94h3th
      jY6GTpSNu7zxySDe2jqCkzd5+4OLOJsP4LaEuDEZxiNvxuJ2mxi/fYWZcA6j2Uh4fJygLuNu
      6WLp01/w2UCM+rZajLKIIMqfzzTocFuYvj9CTpQ2T1ajCaee5NKVW+TLMmaDwoOxWQA8zZ0s
      X3udT27PUBIMGB7uh62pjdLoJ7x3cYCCxYklOsXHd6aRJDtN1izvvf0Bs5ECTXU1DH72LleH
      l8kmgwzcHwW7l01Pm4AsS8gGA6IoIj9MdiUbjWjxBa7cnqQkGZGVDGPzm7NPipKJlt3NzJx7
      j/evTmCrdrA2fJOBxSRKKcPk4AOiigmXzUM4MEY49dsUOJttgcbK4Kf8/Bef4epp3px1Uths
      WxAlJFFElCRkSUKS5M0LiSgj2TzIgQdMxzRkyYzdkWIpAtnJ67z+4U0ypSwzw4MEyzIu82ai
      stpGN9de+znz6So8Huvn8/zavD6Wb5znfiCHt8FLaugyv3zvGkVJZGV4lIwoYbbVQylNQ8s2
      9rRYOPvOW1yfXN/8D2UDlqyf0ZUssiTispkYu32JuVgRg8OJpxAj7+2ge1ffX0ZeoIWxWySl
      dvb11X1pua7FuPTuMEf+6gyOR2z7p0LLRxkYGCWwukrzmb9lr++hr0crszY3xsTsMglbOz89
      vftPG+gW5y9CAIVcGlUwYbN8ObuZriuk4jns1c7vLHfkN0Uv51hf36AoWGhqrMXw22k8dZVU
      bINIqkyV10e13fSnDXSL8xchgAoVviu+8iFYFCsDxBW2BhU7dIUtTeVSX2FL88ReoEQ8TiKd
      +1a8QIVs8nOfyXfmBcrlH+EFyj+BF0hBURRyfwZeoEfF8KViv+MFKhVyT+4FUn7rBdIpZlPE
      E2lUHZRSjng8SelrDDfl0rfrBdLUMqlE6gm9QI/Zx2/XC1Ri+s5nfHj2LO++8TYT0yNcHFx8
      7GZfx613/xfXpjaAEvP9AyxOX+Ly7LfprSkw+MHFL2ZmAYqxIMMzy4TWFkk+xguUmh9manGO
      D64NfOX6lcUJAht/DC9Qgtmlx3uBFib6+a01afzSByw9kRdog5Ghxc2LhBrn4ltv8f7bbzAY
      SDJ68UPefvtNrkx+nRdolUjiUS9Lyiz3DxB6fBifkwsP88vXLhHNfY0XaGON8UU/6yuzX+8F
      UnKMjI2TK34rXiCFaF5g1/4jOI0CZj3B/fl+/se9fp776Ytkxm9wczxAw97T1GbusprvptsX
      48F4lK7jz3J6ZxPlfJTL77/LUsHByYMd3JzMcPKIEZJ+Lly7QmOXB3/uI/77VSM/+4dnmLp8
      jvGgyFOvvsKOOgfLsze58+k4OV8XL5/ewcTlc0wlzTz13FGWPz1PQJXZ/8xLKJNzdL7cwfDH
      a8hAYWOON89fYj3tZO92I1euRXnqpU4aNbh4+QoFVzsv7nVyfmiDQizHD/6Pf0eDlGPs/k2G
      U15w6/z8/x6g7+UfUZ+a5OLtScSWQ3gDZ1mv/zH/5fv7yGzMcO7sJUrV23m2Bz4ajKLldb7/
      1ycZ+OgsiUIex77v0xS5x63JNbYdeZFd4gKXhpfI2Xv5+6Muzl2+i1S/l2PtcPnSXRydJ3jx
      6X3YlCxrayEK0UkWR6Yw7n2enxzrQivnGbz6If1TMVoP78H/4Xma/qqdV/Y2AFCMzfPmG5dI
      WZv5wXO7/7/23uvJrvO813xW2jnH7t6dAxrobgCNHBnBIEqkZIVjWTqWrTlVMzU1VXMz/8fc
      TM3FzJTH5bJlW6IoUaQYQRIkQOTQjc5hd967d845r7lokBCPaQK0RyQl9HOHhbW/Xnvt9a4v
      vL/v93Lz/XdZiTY589wTRCY/JEwHRzpLvHK1TudwN26TiTMvvER0/gO2IgFy9PE3P3Px9htb
      VMbaIDLP7y/eIZFp0emRWIubOHXMhZEwH70VplhvcO6FoyysCHy7P85bQQvhqx/gkhR029Ns
      5gw88exx1q5+wGbNyYsvPkenXU9o8WPe/Wga69BRPPlJEoIPvSzTKgb57ctvESnCEy+9SPjW
      eVYLNsbcWc4vannhhMLcZJC9332B2p3fk5A8LM1MY+49xl88d5hWIcqVN17GHzuHZnMF25Gz
      JKYvEqq5OLrPgOQ9haeyQLgkPIQxlqjgMMDy0jKrc5NkZTuhUJr93TaKZg8esUgwuMVaQYsx
      t45s8+GfuUaj1WJqu8bTR4cpxmdZKw3z9LidpbjAgAOGD53Y0QJtl+gZNbEQ1nLImCHSVLkz
      OYe2HsdfbuPEsJdEaAON7whdaoztSopKs49zhxzMBsJIdTOPP3OMtdkpyuk6bQecrN5JoKOK
      fbSXcnCb0OoqxoGj9O7pwFJJkA1voz/8Iw5YwwRWtpmIazjTmSVpOkyPXUHIxjHtHSYyv8Te
      0X6SdSODDpFgcJvpUJmTh4cZHBjDbdexfu23fLTRopLaQlLrzKQtnGxLEE1D0X2A5wYbrJbb
      6TMWCG5vsZJSUSSFJ58+QWgrQSMywWKsSXQ1iGSqUtPt4+CAEbPNg7YR585iinrIj753D+lS
      nfGhLkCllIkRDG4Rqng4MmxkYOwUNh1E/FMEtjZYTNUgMkul4wSOWozw1jwpwUuj2mD88AhO
      rwVDq52R/R1IgoTYLLK6sYFYh6zWzvigCf90mt6xLkgHmc1YeXZQJmrZx1gjS0BTxVCvMbVc
      48Q+gUhVRzorMuZIc6fqY6jZwtVZ5cpkAF05wGJCQws4vH8Um92KSaeweOMag9/6CWJoEqPX
      h9kxyv4BG4LQIrq1QTKyRjinxTK0nxf2+6jJJtq6OpFyYQzGFsGajvTcKlvhDYpNlcjsKr5T
      p/DKkGzpGLTXmN5ocOzQEKVUiK2FEMaBDmqZJrXMMsmNlYfTAl2+u8LhM89ijF/ilRs5eg+e
      YkgKMJ+OMp1s8p1vPcUbMzkcxiF6R/YwrWY5fuIY2dK9Mdg9LZAoSP9WC6TsaIFGjj5G5/bb
      rDVlBo+f4/EhBynulRKSZHSigiQKtFAR/0ALJCtaZFlBEJo06xX8l6+x0WhjXG6yencO455T
      nJMEorL4GX+YT7VAwJ5DJ+nhQ1b+4P9aqoBt4BBH+iQ+CBS5s7TNqWeeo3htGVmWEe6NLyWt
      mce+/SzDxixSco5k50l81fOs1lRkWUGr09FaX+O6oOf7Lz3JK1dTCJKEoihoFBnZ2M4z3z2L
      TS2h1TSIRiLcvDaFsX0v5k8GqJ5BHhvr5s2ZFACVfJLlcJ1nn3uKqytlZFlG5RMtkEqzZeOJ
      736L/laKcHiFmGsvLz7WYELoYP+QkYlr12k/sgdJNO3MAWoZokUNh4/v4a3zEURtmkJeoaHX
      IQNNwGK3oYgVbBYjckgEVBAl+seP0edaYKoC9WKSS1fv0Brah6JAo6Ew9vgLnPHJxKoGKIeZ
      vnqNksmO12oAdnRA4n+nBYpPX6LU/xQveUXe2RDQajQoeh0aWYPQuKcFGhgj8NbvyQ2cwFtO
      8szZkzSSOTw67muBNGbGT+yjFFrA0n+aJ1vT4PYSXJ4hn7LS26Y+nBZoyCXx6j/9P/ziwzhH
      9ntRZAlBktEZDMjpVd69PEtD/UQLZMYj5/nNy6+xfM9QVWfrob7xLr969yZOXx+KLN97FnVo
      NQnmZsL3boSMvbMLOTDBP79ygWTl3jS2kubKWy9zI9ZiyDdEM3qNf3nnDm5vO+G5S/zy1bex
      9B3HbohwcTaGU5GRZA0Oh46Zy++zECui0WuIzc4QacnYe4ZZf/fvOH8rSUe/F40sIv6BFsji
      1LN44y4lUUYQJZR7WqDzH3xMuSajl+vcnl4GwNk9zMZHv+DtK4tUBQVF3vkepq4BqlNv8co7
      t6gYrBgS87x+bQFJNtNtKPDrX/2W5XiJ7nYPt8//mgt3Nyhkwty6cRfMHvQaAQQRWZZ2Xh6i
      eE+rA7JGSyu9wgeX56hLCnK9yIw/AIAo6+gb72Hxjd/wmw9nMbosBCcucWs1TaNWYO7OLRJN
      LTaTi1hoili2AtSZPP8r/v6fb9B18jhj5gj/799/gHOke6dI9idaIElCEgVEWUKWZCRJ+vRZ
      kEwupO3bLCRbKLIOkyXHelygMPcR//zqJQq1AouTtwnXZKz6e1qgLjsX/un/ZiXnwOUyIt/7
      AUweLxsX3+BGsIinw01m4n3+/pUPqYgiG3enKEgyOmMHai2Pr7eHQ70GXnv5l3w0F9rRmEkK
      +vwWU5s7WiCbWcP0lfMsJasoJhvuSoqSd5Dhg2N/GnmAlenLZKUBjoy2f+a42kpy/tcTnPrx
      s1j+nc9+XbTKCW7fmmJ7c4vuZ/+aI59UeW7WCPpnmF1aJ20a5Cfnxr/eC33E+ZMIgEopTxMt
      RsPnaIFSRUxO6zdSC7S9HaEmGunq/AMtUKtJLhUlnqthc7fhNP8nK0Hu8p/iTyIAdtnlj8Xn
      ToJbrdauNcoujwSfGwC12oOzj7vs8ufArhZol0ea3QDY5ZHmgQFQLaZYXQ3SqOS4e3uWIpDd
      XmAjeX+YlIlvE4oEWPPHPiOAamQyfKKYqaU2WY9/sUhFVVUiWytky5/V6qTjQaKJnZbKxRhb
      Wyk+SafVsxFWww9TAu5LoFbIZB92U1CLXC5P83NEXJVcmMvvXSH97wi8WuUMX6YmXKtVYmN5
      i1Ip86kWRi1nyVbvzdeKURaD6ftfQ20R2lolV/4ysrRHiwfaojRKaW5OzeI0G5m8+DYMHCF3
      +zxZWx+tTIRMuUUhvkokkya0XsPh1iBqdMhqiVtvvU/W4ULTqFMvV2nJOtRyikgij6LTUcsn
      CMezyDojGlmERpybN7awOY0okkoyXUamhN+/TCpdQ1AUdFqJZlNGqKcJxTJQDDMZLGISQWPY
      2VjdqBaIhLZJ5msoChTTWeqCSD4RIVlsYNDrkUSBSj5NOpOh2JDRKS1iwSC5qooQm+bthRKD
      XR6EeplUKk4sXcKg15BPRQnFUrQkLc1qnkIyweVr1zG6urEaZOrlPOFQhCoakhu3md1WODDS
      jdgsEwoESecraI0mFBosXnyTDcGNVmyg1qtkEzGiyQyyRkO5UiYdTyJqtdRyCcKJHIpOS7Nc
      xn/zI9KWPtpMIquX38bfsGNQmjQrFWqCglTPE4mlETQ6ClvLRFp62mxGGrUy6ViERL6GTq+j
      kondu/86yukUxZaAQavQKKUJRZMUqmAwKKQjW8SzNYxagVSuRKtRJR2Lkq6omA0yqUiYeL6K
      TpEplzLE4zkUvR5F+uYPMB4ohdDo9CCKpPNZBod9hFY2kbMu9uhzbM0tjCQNPwAAIABJREFU
      4l8uMHi8DQWVamKDm9NVTp0+jo46qUyc1sIEl2Zm8Zqs6IeOUQ9MIGpNmHsOoA1dJ96y4Oo6
      zNkjPRBdouAeInz9TYKd+7k9ucGJwTqTSYXc9FXk4X2cO9JBfLtJMbxOQ99C0HrYWJlg5bqL
      J//qh4x3WGlUi4S21vCvJvCN2Zn4zRXan3oOSylFA4XhE6fY02bFf+nXvLbaZNC3h2PDItcW
      8hip0unRkkjUqDSgGV3mzSvzmERInDiHuxRieXmFlHGAtsw1JjYMaJ11ugo1Op06Fm5dwJ+A
      htZGtyZOkV4UoNUos72xxnY0TNuRlzjVo5BJJUm1pvmnt+bo3XucAVuTeMDPXcsQucAU6UyL
      /U8/i7A9Q7Yi4RjqpbEcIldKYskWUdskMukkycoc/3phljajlZpvBGvaT0PWI3j28p0+E3Pb
      ecZ7PWQjy7xzYQqdwUTfoYPk5u9SlI1Y0m6C77xJeOgc/9sPzpBZ/pjX5gTadE0OHxrk9t1N
      LNoGCaeDDy5P0t9to6ja0NYajJ/qZ/buKtQatA/vY+36b4kxyJMvPM+RfvdX8Aj/53hgAIha
      Ax2CxHYyiHfwJMqFDwi1jzGa2GZtbZPwVp22ox7sqKzOzLD32FFsGgHQ47X50A24ydcf59mu
      PNcSEs7hwxzvNfHaZJI+gxGl5aSjzYKgQjYexew8S5tg5Z35NP2dBWb9NnpGdYht30XT3KZZ
      a0AxRq39KN99opf8xiQl5WlOWrOEajtS2lImytrKKtuBCqZhOwOnXqLPsMH5uyH0RhPOfJU9
      bYDOyLkXX6I5f57wpoYj334R2/YVVlczeHuHsemgiMLA4bOcNkd4xR+mWvSzGdim4HLTbu/k
      xb86wdqSn0GvEVSVSlPm9HPn2Lp1A9new5jVhygKVPJRlv1rJEoFTIUKyFY8Ljf6Hh/pqp5v
      nfBx4e2PiMQjiM12NK5RfnpGZDIvYtVqqGqdtDssBOQ8vnYPti4PkgRupxvR10m+JvPiEQtv
      Ldax9YxwdKSdNy+tobF20Fi8NxCVDOw7+hjdmiy3YjOsTawgtltx6Q0Y2/bxo+eO7zwUWiNH
      H38Cd/Yya7dusBCs4zFJKLKMc98pXjhm5s2LS7h7e6imquw5fpYR1vjlVAbjwGP8hdtEsvmn
      sa/8wX2UoMHnlNjcrmB1+VBacbRmHYFQjqNPP8+hvntRLogMHT5AZWWVTFMFZIxGgUqlidXu
      QCOJQINkPEEimUaRFRSTE58ZlpZXaaigN5ioVqoY2zzEYnHaTDrWsnXcOj12q+le0TxAo6OV
      jZNK+JlYiGP+tP0d4ok4XePnODPWiSxJWK02DBYXB89+i+fPjuO17GSUFY0Wi9mCIIBG1yAS
      jBPbjqHzupFrNZotFagSiyQIx9JoWlWSmna+9/wZHAYRjcGExWzEKInU7u3QaNQqJGJxkqUy
      Gvl+frocXsN25CWeGt9Rc6qA0aihWmlgsNlRMkGqvhN8/9xBJAH0VjtGRaTVbKG1t9OuKzK/
      tg2A3qBQrTZQVTAYNVSrTQxWO0bNTkG+bDJBMpFElWXUag0092QYjQqxeJJkOotO66B7/zFe
      +s5zDLhNGAx2TKad8xqNOvF4lGwqi9HpZM/x5/mLZw5js5ix2hxI9Sodg8OIkWmCxQbRaILN
      YAqLyYjFZkMj/emUwnqwNSICRr1KtuVhb7cDWVRw+XrpcwjcmljC0dmFp92Dw2TBZOtlyFcj
      jwu7QUGRMiz5S7T3duM1KzRUkeTWLGspDSdOjKMrR5hZS7HvyHE8Fg2yXmBlLkbfni4UoKu/
      G63GwmCXC53Ril4nYbFY0Zm6adcG+HgixoFj+zHqzTiNCpLJjt2gwaAILE3dAecAnZ0ObAY7
      Pb0+Eis3WatYGd3Ti1YWaNSr6O3t6Kji23+IyPXzpExjnDjcTXJlEZ2nG20lzNTcEpGGm3On
      RxETqyzEobOnj3a7EavDg6ESYqVgoMdjxm7WMHXjNrahY/S3m5A1Juw2A4rJxNq1i9Tb9jDg
      dGGz6lCkGkv+GM6uHvp6OkjP3WBTcjHsdGN1O2m36cHgxFYLc3ezxNjB/Vi1WhwODYFIBV+7
      A52mydJiCEd3D912PdWWSDayzGqwwqETR2klglRMLrpdFsrpKHN3b5LRdXHqyFHMrS1uzkUZ
      OnAAkyTiaHehAKXwPBfvrGDqOMiJx47TXLrAVETH8UN9oBjp8jnZuHOFmG6Q554+QGl5krmS
      g7MHe1E0WhxmI7LRjM2o/6qe4/8wX6ktSj0b5vpyjJOHD6J8jnhHVRvM3ryOd/QkHtOD9+p8
      FZRDs9xO2XhsrPPrvpSHo5zm4tQqx48cRierLExex9J7mE6HnkxwhZWMwJGxAb7oHZ3xX2FR
      Hudkn/Eru+yvi11foF0eab7561S77PJH5HN7gGZzN3Gyy6PBrhx6l0ea3SHQLo80uwGwyyPN
      g9caK1neee1fWYo2kC2d/OD5g0RKBg4NeL/wY+GNKaJFD+P/3T5eKmEWI3r29tqALFPXwwyf
      3MvuxsBdvg4e7AtUL7GcqPHd730fb/IOG7p+TIqEGp3lrQ9vo+haLG/X8WjiTPgzROcv8dF8
      CpuxTqFiohK4zDtXFrF3D2DVtghe+z2/vL2BmmuSr0apVBSKpRAT731EULXiIsbbb75LXLXj
      81gQhSSX377EzTvz2Pr3UN28yW9+fwnR00ZqaZ1YLorO7EFNbnH5xkWuzKUYGvSwdfsCb172
      Y3NZ2N6YZTuYI7hwjY/nY7S3OVm+9iaXpsO4Ol1sT00xMTVB096L0/DNyD/s8tXw4ElwOcUr
      //oPBPIyiCaee2qM5biENr/BntFxsqU4oako7W0FVkoetHY348YKa7Uy+laT2evbdA6byDd9
      fO/FEygbF/hlxIPx5rtEBwawJvXY7BXaRkfZuLmEvVulUndjMsgcGD+MWbvFr/5ukRPnnEzN
      pchvR3ANuohuZlFKETKdh/nJc48jbX3M2xE7x+QlpmrdZEMrdJoarDY7UbY+RuMep2UQGe3w
      ImgKbIVsjHZX2ChKBN57G8PxcXTNPXznO6MoX9HN3+Xr56HmAIbug/y3/+l/4X8+52ZivUir
      BSajlbbuXg7uO0a7N86VuyqD7RbaOlz0HDhKv10PpTx1kx2H08fISDcSApIkIckKOucI3//2
      KSw6Aexe+tq8dIgNbIP70JXDbMQKn+5Ltvp6afP60GfD5LQmbCYnY0eGMZiH+MFLT2A3iICW
      zt5OejscRGNZtDot5rYhDve7cO87zUvffYrDXRaWlzcoVKtYvD48znZECnj7j/LYmX1oGs1/
      WzRulz9rHqq/ryY2+fD984j5JF19TrINCTUb5Z3XXsPUuY89Ti94DYx2Gfn9xzfYvl5D3+PF
      bu6iXZxlO1zFJnjZNwjYnFSvLZBpGO+LpuLrvP1OkIrs5tj2OsliC5Q6zXsuztuTF3m7asEy
      fIp965MEowEk2Y2o1aD9VHhVYPLiB4TEMsdPnmJ94jbRwAZi2x4UjYZGIc1qIIJGI6NqbKRm
      P+CdVfAdOEpT3kD6pvmq7PKV8OAhUKtBMrpNqlBH0prp9Joo1kW0jTzRTAWH103wzsfEjUM8
      ebCTZCRMrqXD7dCjqhrUcpxEQcXb4cOoEaFZJhRJIkomXG1GCsk009duYegbpMvXhVPXJByJ
      I5lceJ1mJGGTl/9ugYPP7qfb50MoJwnF8tjb2xHLVYxOKzKQW3yfdyMejg110NVup5SKEi+o
      eLxOGvUaZqOebDxCpirR1uaimomSrcl4213UsiUMNg3FnIrFbthdGnuE+P8hEZbl5sVF+o8c
      xmX6j4ye6wRXgli6urBoP69DyrI8X6R/pOMLu6tqcp1g08uAx/AfuIZdHlV2M8G7PNLs9va7
      PNJ87qhiVw69y6PCbg+wyyPNbgDs8kjzwABo1itkMnlajRqxaII6UC2kPmNeVS0XKBTzZDMl
      /tACqlWt8ol9VrOSI/sFBdA+j3q1SL5QRQVarcpn2m/VK2TyD1EN7j+C2qBa/ZxKmGqTfDJC
      JFXki8uvqZRzOfLFAvlC+TPJtWa9Sv1ztluozRrVhynveL8l8qks9UaV6r2qKWqz/h9r40t8
      4s+NBzvD5WJcvnqDfDLC27/6FZtllY2bbzIXv3+jt9emmVu6y/WPV/+gNGmdret3Pq0U2Kzk
      yZa/XHnVVHSJ6bkQKqC2KmQz9x+mWjrAlbvLX6q9hyazwnV/6t8eb+S5evESwXj+ARnjJlu3
      73B3aY7J+fXPnBuYuU74c6ZY2fVZluJfpvLkzsMbXbzFSm7nt8hvLbL4pVzyykxfuM7nfNNH
      hgdmgrV6E4gtEpk8I8MWVlZCaKNWPL0L/PIfrhGtuDl9cscapVGM8PF7CUbPPkkbGW7PXKGa
      SlArZ3GpKlLfEWaC19jKyBw4ew5p/QPuhmD8sW9zfK+dhTdfoTx4lJkr05w8auPOVoHm4iVu
      L3Ty7edH2VooEVn6kIn1JH0jB8kFp/k//vebnP7hDzja66KSC3Pp3XfwJwWOPLGX5ddvYj17
      Bm1gmlDDxplz5xhutxC4+jteX0hgcQ7y4pODfPjau0SLDcYPjzK/sok5n2BN9jHc+yNcapj3
      3n6XrbTA2PG9LC4ucvTA87TKcd47fwuftcG8OEBXaQaDd4CJ27epS15GO+0ANMsRLrwXZ/zM
      WVxikmsXb2IoarmxPkuqLHP2Bz9h1AErc3e4FVtl0lnFKrThshSZX9jCvvcErsYmcwsR+h57
      gZ7iJJcXsgweO4FmfZ1EZY3spoW+F/axvniHj9fnmPM10NTc+DwNZmbX0XQfoF1b48ShYT6Y
      8NOtxpkKVthz/BitT6Izu8Wr5y8TS1YYefwZvMUFrkxtYxs+SW/1DjdXLHzvf/we+pSf86+9
      R0Z2cObZb9Hwv8+tlQK9Rx5H43+DO+ooh6Q15lMCh04/QWruCoFUkyPPPklyYYbAyirtT/0l
      3xnv+qM91F+GB9cI0+qwChLxXBR930FYnCRi9uAzaFEkgfxGgESzBTTx375Nq2uYNr0Aegv9
      bfs4dKSTRsvEQJ+DZrOJpm2Mv37xBOFQiEK5ydD4EdotCqgKXq/E4lIOmyHJ0noDu0UE516O
      DJooZAs0CmECjW7+9m9/zIBDS6mm5+ypfRQKuZ0vIypoNArVVIpwOkND68JDiGl/klx0g+nV
      e5WDRYXjL/yUY+4c60nQaUQahShbsTwNyc7pM2MMHDxNmwly4Qia4dP87XfHiCYEeg49yfFe
      M6JkRJRKREMFkCKkkkZsLgOKAPnIBqkyQJmFi5fQDB3FaZBA52FkpI9efQnj+Pf4mx8dYG1y
      i4akpcPXz/jpEYR8k/4Dw1h1GmiVWAtESSRLHDp5mEYxR75YpmfkKH1uHU1VR09nDwdOjmAQ
      Fdo6Bjn02BhyvkHP2DB2vQahVSYQyyI2amyHI+h1ZW5fXqJUyTE7PU3xkzGqqiK6hvnb/3Ka
      kH+VqbtT5Mt57t6eJl2q49k7gFUAtSXg2XeWF0/tJRScZ/LGFIVyjqnpWTLlBoMDPZTLLfYd
      PY41u0Fr4En+h5+eYHt6g0Qsx5HHj1PIfQU1lh+SB0+CJR29Fon1YBJTxxja/Dwtu5HFmQ0O
      nHuJx8e6dgqTIdK7p5vUWpCyuvNvjUag2YLO4QN0uUwIQEtVUVstBFFhcOww+swGtxd2CjY7
      +vrZWl+h12dnYTOP22JncGQYq16DoHK/yqPQpFqu4hnYT7fD8OnheHgZ1XuaF588iEGW8A3u
      p6fDxaGnvs/P/+YvOTX8yd6EFqoKrWaLxMxlNEd+wA+eGAGgd984nV4r8r1XoyDsVFRv1OtI
      f2B0JUkyRn2dSN2Mo7hNXLawftXP2Z/+jFNDrntnaRk8vJfo3AKfTJk0GgkVgWazQaNWQ1Bk
      BEBRJFRVwOzbwx5jgYWSm5/95fN4TRqM7f3s7XQgSxI9w4dwizFu3l2k2gRFI31aJV6WRVRV
      wNQ+wLCtzlTKxF//+Nt0uh0MWQRuL/mxebrwjT7Oz/7b3/LC6XEMf5C8V1VotZogCJi7DvCT
      n/2cn37vDA67h9GRQfQicG9A12o1EQSRtqGT/PTnP+cHTx7C5ermwEg3e8ZPoM2sMDkfoNpo
      0qjVQZaR2gY51O1AEr45xlkPsQok0tZlpSl24jIKODoG6HY76PTquPreBySR0SkGdDoDrsFx
      Rm1p1uM1QMblE5i7uYVGp0HUGDBqILM5ycvvzzLQ5yMbWmF+K017RxsSINh66Dc3MLb349SJ
      2E0W9DoFrc6ATqvD6OxhwBTmF794nZSqxWzQIml0GLQ7v6LF4iI+9x53Q01MBj1Gkxabqx81
      fJlX37tN7Z7QuVlL8fHrr7BY6+LosRG2Pvwdk0kBu06HUSeDxU1zY4LtTANLVy+60F3+5b11
      9gy1YTLqdzx1RIkOqwVdVyeupoCtu4c9gwbe+fXb5BU9er0Bvc6AvecQ/ZYMsXQZAL1eZqtk
      Rl55l395Y419hzqRAJPDQmBmgYZOj2Rx4cwt8bvrK1i0BvQGPZKswajXUkoFmF4I4uroxmo1
      4vQ68N+8S74JRruZ8NwiFZ0e2eygvbrBq5fnMSlG2od8NIoS7R3D9HqT/OZfXiVS1WCyGD+t
      r5YL3uVXb0wxuH8fezwKv3/lN6zEK2gNpvvCxWadzbsfcH4qRH/fKF2eOq//6rds5cFgNiML
      EpnQArPrOfpPPoErcYN/fHWWwfE+7CY9SFrM+s/Wevs6+Up9gWrpABemtzl39uTnGmN9VQSu
      v0K460cc93191/CNI7PJK3fi/Ojc0S8+LeRnar3MmTMHHk5K/A3nKw0AtdWgWm+h1Wj4OnvB
      Rq1MS9Kj2ZVA36fVoFxrodd98du51WxQb6hotMoXusv9qbDrDLfLI83n9mKSJO1WidzlkWBX
      Dr3LI82uFmiXR5rdANjlkeaBAVDJRZmZWaVeSnPpg2vkgOTqLeYj9yfK8dAqa1t+Zqe2+UO1
      Tz2RIPtJO9El5rbzX+risqktVtYSqECjFmVu+n779XyUaX/gS7X30KglEsnivz3eqrJy4zzv
      3dr4VEDWLGeZX/ZTawJqiw3/DInCF2meWqTT6c+vKlkpkv8yAr9KhsmFVfKFHOXyTrnJWq1E
      Lvc51/7vUcszs+j/tMLNo8YDjbGa5Tw3Z2ZwGo0s3nqXavdR8rc/oOLsJLW+RCjboJ7fJp7L
      EtmsYzE3EfQWNK08H/76tyRMdoRahVq5jqzVU05tsrwZR2uyUI6vs7geQWtxoFdU0oEAVVli
      O5hAI5VZ2VgjvJGkrKqYrSbUpoRQizK/tIWoVpndCEGpjGyyolMkGpU8qwuzbETz6IwSyc0I
      JVEis+1nPVLAbLWikQRKiW2W19dJVzXY9TUWpucIxLIYdAKxVJbMzEVeXygy3N+FVqgT2Vhm
      OZBBIxd498IEo8dO4DHJ5ONbLC4ssxzL4rXIxKIFZJOGRjYDRjuNbJhsucL6whKpuoLTaqBZ
      SvLGa68jO7qoxtZZj5ewWMwoksjCld9yIyhjbxVIN6EQ8rO8EUHV6akkE4S2AzT1DlrpTWaW
      AygmG5IksXT1d6yXPAz4bKzefI2LaypOyqSaUA77WVoP0RIglW9iMYtEtyKUCjEWVsJotQLT
      yxv09vQgCzWC/mU2QzE0Fiet3DZz86uoRgdqJkSoUEOv0SFXUyytBwiEczjdVrJBP3NrUQwW
      I8lkkloxSzoewr+VwmQzkg+vsbgZR2s0U0oECGxHaGqsGLXS176U+lBVIgVBIlVI0z88QMC/
      glhsY9zaJBTOMH9lme5THeiAYmiJiTV4wtsJqLSaTSrxFX7521t0ulxoBo5R357GbrMSLjTR
      RW5S0nnIVvU8dryH2Mx7bLlOs3rjGuOHvSwlCmx/7MeWHKAh7WX7bhbqcbROLavbRuLLl1iT
      +zgiGnlipAtVbVGvVdhcWiJVdTHxiwt4nn0aR6mMopeoiDpO7O0gOneRm1kv9voquiefolop
      EVm/zXa4h9nJaQbbrNRtO9aPpaifi5N+XFKZSHEQVZDRKhJqo8rdW1coYiBd0LJ+4zVevSFy
      9KkOrLksmpYb88o7rOVcaOxGVP8mRs/3aQeazRap4ALzoQx6oUFNY+BYvwe11aSlFnjrH/6R
      3OG/4AfDGlLhIJupBKWJK6QcDrr6qtiSq9SsIoFkgUarhbPRpHVvLUNtNWm1Srz/i5cJj3yL
      n44ZycS2WQ/4qWftWH/Ux8V3bqF6TXj1TS7F3Yj3xgGtZpYr71/C2t9ONN9AG/dTMjvYvnId
      W3GSN7Y9/K8//z6+3DxvXc8zakxyq1Ultr6KTVfj41yJ0uIlUqIR0eCh19AgUytR2FhCb9AR
      KTQoXPsHNkz7GN0Dzz2172s3IXvgEEjQ6umSJAKxAJo9Z9DOXyLicVPf9LOwtEokHKekqqA2
      2VpcomlxY1YEULQ4zB46fHa6j36b75wdQEaic+84z5wcI1co4HI6qDVknG4LgirR1edlejbM
      UE+dqSXweewc+tYPOb3HTatSh0qGomuEZ579Hi8d78K29xn+67NjtJo7iq5SJsTM1ByBQJx8
      vcHQye/xZG+L5fUtwrEU5XvdvKJzcvyJc4z3aFidn+Hu7DLb0TiFcp3BM9/jR8+M4m7vwayB
      YqpK19hBzj15gEKygq2jjy67llZTRVAcHD95nE6XHtHYxnd//pd0yQKugSFyC5dYiVugGCG4
      vka6WqZWBllRMHv7sJlk+vce4/FDnSQyO0MWs8dHj9eJd/AUf/XMXhYm7rK2ESJdLGHxjvDD
      nz6PnGng7jRSKCt0unYcMCxt3fR4bACY3O10eV24+47wsxcPsTAxycp6iHTNRpcrytRHt6j7
      2kkG11kLJGlVy/f3AwgivuFjnD55BqE0yczUFpvr65RUQLLx/R//FzpsO3W/Ro4/xZOP7WX1
      1hRbgQ3WgmnUWpm6ZQ//9Wc/5qBLoSSZMEoqzq4xnj69n3whj6XnID/81hPomvkH7Kn4anio
      KpFdHpn1YAOH04Mi5jBa9MSSJfYdPslwh+3eeRJDJ46hriwQqbYABYtVJZ0sYTCZ7v2hBuHN
      dRbXgui1OqotCY9ZYWNjk4YKuu4ByuEVHK52gpEkNr0Ro0F3P2usMaCkgywt3+LDW5voP213
      h2Ihjck3ztF9ncgI6AxG9BYXg/vGOXJgEJtu531TryXxLyyzGSmjKcexjz3OkeE2UMFoMiEa
      TYi5NNWGis4kEl7fZHbaj9FpuX9bRIFKJc3qip9oqoysUdBrtQAYrF00AzfIefcw4HIwdvpx
      9ni8GIyAJGMWmpTLNYLBVeZXopgMO5/T6HWUcwUUjRFRzFMVfZw8OYZJBEUxodEKQIVcUUe3
      T2FlYWdOpNdqyOd3gkgxGKhlc0iKCUUuUGp4OXXmIBZRwNXp5ublMIcPtOP0DfPkyTHMNguf
      5n7VFvEtPyvryzTlPnr7uzjxxFm8Oh0arQ6j4X72d315luWFLdyDvXi6R3jy+D4MFjMagwlj
      vUheY6NTl2c1WiAV22BuaR2tRo9Wa0CRvzlrLw82x0XAYJBp6Tvo77Ci11to6+yh16VldT1C
      28AAHb42XFY7DlcPQz0SVdGBVS+j0dWJxFS6+rpwWQxIIiRCa+RVN8eP7scilNiMldk3fgiX
      SYOgGDErIr7hYRxGM/19nZhMVmxWA2aLHYu1gwFfk9mlNKOH9uO0WnDZzGiNFmxGPVqtjvT2
      Mqp7mIEeNw6Lk46uTsTCBqGykdGRAfSySHbzDtPbDTr3HuP4wR6i83Nou4bp9rTh8bhw2CwU
      YyH0rg4cbie6/Db+rIVTR/dg0ulxOXfG3na9yEYwT/feYXwuB2abE4tOwe7yYtAZ6Nkzyuje
      NtYmZhC6RhjpsCIIItpGhryukzYhSURwc3S0H50sIqlNQokyvd0+3O0+hNIm0aqdvXu7cNud
      ODwOdJKNDm+TpZUcoycO0Wa30G7TEsq26OlwINIimijS2dmBu60TpRZgO29mZKSLDm8Hkt3F
      +MgIbVKaybUSB8b3YTMZcdptCGqJ+at3KJpcHD1xhr42kfnpNboPn8Bn0WJ0uDHKQHaTj+dj
      6Oz9PPH4IdzNKNNbdQ4d2ovFoMfd5kVTjLCc1nLq1GHalSL+BBw5tB+rUYvN6Uav02O3m7/2
      ZcivNBFWz0e5s5rg6IFRvs6XQHTuQ5LepxhxPfjcR4lWI8PE1XVGHz/EFxY4jU7zYcrHU/uc
      X9Wl/dHYzQTv8kjzdfdAu+zytfK5y6C1Wu3zDu+yy58dnxsArdY3YYFql13++OwOgXZ5pNkN
      gF0eaR4YAMXkBu+ev0whuc0//V//QKCusnbl11zZuC+G21i4we2pq3zw9hz3Zw9N4lOz3DMi
      oRJZYDb45cRwseAUN25v0gLqtQgzdwOfiuGq8VXevTbzpdp7aEpBpvzJf3u8kefiq//EW9fX
      qLcarK8uky1+CV+17BY3lwIsLPqp1hqgqmxtrpDKfAkBXGKJ311devjzd/lCPjcR1mjcVzMK
      zTrLW1tYjSYamSXSlmEqSytonAKX3vw9dzaKuK0q1WaLYrpJORMEpw9TI8nbv3uF9WSNRDpK
      NpSkrhiJLlzkncvzGN3tJOcv8MZHUxi8vThMsH71MhmNws0rcxg1Se6sJihv+JncTOHtsJFN
      1Gkkpnj1rasoVjuJxBbzt+bQtndjN2io5MJceP0VLk5tYXTKLH54m4Qos3XrPBdnwng6uzBp
      JRLz13njo49YS2vodVR4/V9f4drMBhYTTPvX2bj6MR/5owwOj2AUi9z98E3eub6Gwdjg8kc3
      6D/+FJ3GIm/8498TFt0U1u6wmVNZuvYmF26tobUbiczc4tLtBUzeLjYu/5Z3rq/gbvcQTaSY
      +fA35G1j9Lq0fPTK/8ndlIFmcJb1gsra9bd5/4YfUS6wHpOwyxmfGzBSAAAGfUlEQVRml7bY
      mLzA+7c26fRZWE/CSI+bfCrAjfNvcXkxRltHO4GJ93jr0iwGr4utq5dZLEv0eewUN27y6vmr
      +CMNerqt3HzjX/loOkanS+Dy3VUq+Sg333+XW4Eqg+0yF994nevrBdrMOjZWr3Ph4gI2XzcW
      /Z/DNvjP8sAAkCSVwFqIllLB4u0kuRwgKdg4fqCLZq1McGIVoc+OXlBZ/vAW8uGTjHdYQZGp
      bOXwHXJz9f3bOCwiiaaRXLHJucM+bi3FKMc36Rw9gFwXcLps1AKXuRGwUApPkq1I1IQCqwtl
      OnsEWoJK3L/JekrDd749zvZmjJXZKdy+boqilj6vHQGBZr1OMhgkq9RYuDSPZK2ztl7GKOaI
      1o0Md7mI+2/RGHwWb+omKdNe7FKFSmKJQEFmaX6VfXs7UH3HOdFnJrs2w1zdw7f2CtwKyNjc
      HTx1ZAhFlCk2W3S36bl84Q4dY/tpMypkQhvEmi38N2ZwDbVRKRQILmc5cLSHYipNsCRjd7Zz
      5uAeNIpEvtakr83GtQ+v4xrej8+mJRsNEBNMqOEokpQksLzKVFJDrzHO3GYTzHbGetwU4gE2
      y3YOe2AhusHCjXUsdoW1WJzozF0qrkHGetzkAzPEnCfpV+fYXFziWkSHTxNmLVhkfmEZu6ZA
      SLuHg7YWG9EwBt84e1qbzOdr3L18Ha+vi5qip8tl/Sqfza+EhzLG6tJLBGIxtB0H0ManKDvM
      rE/N0jS66XCaP9Xq6A0y+XSeHa9WAVEUUFXoP/Y0hwbdiIhYnXbMBgOqKLF3ZITM2hLBTBFV
      BVdXN+vrW/R36VnarOO2OTn82Gl8NiOiCjSbCBYbJrOHPZ022vc/wdE+O6K4k8tLhpfYTEp0
      trnRyBJDR55mvNeGo7OfsfEj7O9vA0CWDdjtFkxGHZHpS2yqbno7drKae089y3i/C+lefrDZ
      lLBaDRgsZqh/drgjCAICWoaPP063kmY92aK7w4NGUugfP8m+XieSamZsvJPA8hLpfBVVEBAR
      PvULFQURkBk8/BhDthIroSpdHV5MBjs6fZ6V+W3sbXa8PYMMjJ7k+D7XfQmxpMFpt2Aw6Gm0
      ShjtPQyP7ef42BDtPYd45vTendNkGbvVjs5kopLL0943zPD+ExwedNBz+EnOnn2KMXuFpeUV
      sg0NVqMBi0VLva7Qd/RxxtrNn97jPzceQgwn09mhEIwacdv16Aw6bBYTGqnGun+VbLVGs7nT
      lGffUdqyS/jTdUDB4Swze2cTVZbv/Wh1Qgs3+c3527icdgIr88QLjU9vrtzehza7hc7tI59M
      YtFpP+PGhs6Fo7TEyy//imuLcaRP291BEgQSwWW20xVUVERJwmzvgLSfO1MLn5rz1ipRPnr9
      VSbCCgNdVqL+RYK5KlKziSzLCBYb5dVpovkmZo+d9Ow1fvn6Hbxdf5D6F0U09SzLm2kkSUKW
      BFKhNYLJAk1VRJbkey+GKmvzy6SrKqKqokoKjkaCybUdS1qTVGPGH77Xhkg2us5WPI8qa2k3
      NfCnbOw7sBcxPM2dO3dJ1oT7P1q9yPyN9zk/uYmvbRSLJsrExAzhdBlRlBHvmVnVK0WunX+F
      CX+JgeMnaW3dYmJilkxdQJZlWoUIS6sh6gh47Qamr7zD7ycydDu1yJKE8LWr9v94PJQtitqo
      UaypGPQaGpUyLVmLotYolGvIkoKkkRCBVlNEEuu0JD1aWaBZLVGstlB0OrRik2IqwsczGxw7
      fBir2Qj1EqVqE53RhFaRQG1SKpbR6DRUynV0OoWWKiLSRBUEWg0BUahRLDcwGPWoKigiNBDR
      KjKtZp1ioQCSDkUjQEtCq5WoFPPUWjJGkwFZFNi69jLrjuc50q3HqBXI5YrIGgVREBEkDTpF
      pVCooDUYUUSVSqlAuSFgMhlo1BvotBoEoFYpUmvJKLKIIguUikVUUYOsSIiqgCRDsyWi1kuU
      6ypGo55mS0BqVakLWow6mUa1TKkOWllG0YiUCgVUUYOi0SBTp1wXMBm1VAo5Kk0Ji0lLrQF6
      rUJyY567gSJHxkcxG3U0qyVKtRYGoxG1XkfR6xCB5Oy7XK+N8fheF0a9hkohS01VMBsUak0R
      vUagkMvTEBQsJi3lQpGGqGDUaWi0WshASxTRyH9+c4Cv1BeoWS0SSZdo97rv+Yl+PRTjG5SN
      vbj+xAtKVgsZMhXwuGxf+I6uZkKkBDft1q97+8k3j/8PnOy1VjrhiW4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ActiveTravelByAutoOwnership' width='192'>
      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
      Tq3CAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ActivityByPersonType' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='164' name='ActivityFullTimeWorkers' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='AutoOwnershipByCounty' width='192'>
      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
      pTQuDv0JpLsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='184' name='AutoOwnershipByWorkers' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='AutoOwnershipByCounty,TrnAvail' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AutoOwnershipByCountyGraph' width='192'>
      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
      E0w2yh5GPq8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='AutoOwnershipByWorkersGraph' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
