#------------------------------------------------------------------------------#
# JPPF.                                                                        #
# Copyright (C) 2005-2010 JPPF Team.                                           #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
# 	 http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#

### direct log messages to stdout ###
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### direct messages to jppf-driver.log ###
log4j.appender.JPPF=org.apache.log4j.FileAppender
log4j.appender.JPPF.File=jppf-driver-3.log
log4j.appender.JPPF.Append=false
log4j.appender.JPPF.layout=org.apache.log4j.PatternLayout
#log4j.appender.JPPF.layout.ConversionPattern=%d{ABSOLUTE} [%-5p][%c.%M(%L)]: %m\n
log4j.appender.JPPF.layout.ConversionPattern=%d [%-5p][%c.%M(%L)]: %m\n

### set log levels - for more verbose logging change 'info' to 'debug' ###

log4j.rootLogger=INFO, JPPF
#log4j.rootLogger=DEBUG, JPPF

#log4j.logger.org.jppf.io=DEBUG
#log4j.logger.org.jppf.node.policy.PolicyRuleTest=DEBUG
log4j.logger.org.jppf.server.app=DEBUG
log4j.logger.org.jppf.server.management=DEBUG
log4j.logger.org.jppf.server.nio=DEBUG
log4j.logger.org.jppf.server.nio.classloader=DEBUG
log4j.logger.org.jppf.server.nio.nodeserver=DEBUG
#log4j.logger.org.jppf.server.nio.nodeserver.NodeNioServer=DEBUG
#log4j.logger.org.jppf.server.peer=DEBUG
log4j.logger.org.jppf.server.queue=DEBUG
#log4j.logger.org.jppf.server.queue.JPPFPriorityQueue=DEBUG
#log4j.logger.org.jppf.server.scheduler.bundle=DEBUG
#log4j.logger.org.jppf.server.scheduler.bundle.proportional.ProportionalBundler=DEBUG
#log4j.logger.org.jppf.server.scheduler.bundle.simulation=DEBUG
#log4j.logger.org.jppf.server.scheduler.bundle.simulation.RLBundler=DEBUG
#log4j.logger.org.jppf.server.scheduler.bundle.simple=DEBUG
